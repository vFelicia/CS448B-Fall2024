welcome to another video series in which we are going to learn about CSS tutorial for beginners so guys we are going to learn a lot about the CSS which we use along with the HTML documents and it is very important if you want to become a frontend developer so guys by the end of this video series you will go from the zeroth level to the advanced level of the CSS Concepts that you should know as far as front end development is concerned so the very first part is Introduction and overview of CSS so guys basically CSS is the language we use to style the HTML document so I've already created a separate video series regarding the HTML and how you can use HTML in order to make the web pages so you can watch that video series as well the link to which I have given in the description section below so guys it is very important that before learning CSS you should know at least the basics of the HTML and how the HTML tags work now CSS full form is cascading stylesheets and you can Define the CSS document externally or internal style is also allowed to be defined inside the HTML document or you can also Define the inline CSS properties as well so basically it describes how HTML elements should be displayed in a web page so guys so far in the HTML video playlist we have seen that how we can create the HTML elements but how they should be displayed on the web page along with some color or a different font family or the font size we can describe it by using the CSS property so CSS saves a lot of work it can control the layout of multiple Pages all at once so we are going to check this with the help of examples as well now there are three locations to write CSS code basically the inline CSS which we write inside the HTML tag and then we have something called as internal CSS which we Define inside the head element of the HTML document and then we have something called as external CSS which is a separate CSS file that we use in order to separate the HTML code from the CSS code now guys what is the CSS syntax so basically a CSS rule consist of a selector and a declaration block so as you can see this is the example we have the H1 tag so basically this is called a selector by which we are identifying which tag needs to be provided a particular CSS property and then we have the open curly braces and then this is called declaration so this block of code is called declaration over here which is followed by the selector so inside the curly braces we write different CSS properties so as you can see this is the example that is color followed by colon and then we have the color value that is blue so basically this is going to set the font color of the H1 text that we have set inside the HTML document that will be present inside the body tag and then apart from this we also have font size that is set to 22 pixels in this case so guys basically these are the two CSS properties that will be applied to the H1 element that is present inside the web page apart from this we also have another selector that is p so guys after this block of code over here in case we want to mention the CSS property for some another tag so in this case we have the P tag that is the paragraph tag we want the background color of this paragraph tag to be yellow so all the paragraph tags inside the web page will have the background color as yellow that will be set and will be displayed to the user so guys let us check this with the help of examples as well in vs code so basically over here I have included the CSS folder inside which we have the CSS tutorial. txt file which is having this particular content that I'm explaining you and apart from this we have also included a sample image over here that we are going to use in the upcoming Concepts as well so guys it becomes very important that you create a folder in a particular directory and include that directory inside the vs code so that all your files are organized over here now guys what we are going to do is we will be creating a new HTML document so we will click on this new file icon over here and then simply we will name it as index.html so guys basically this is going to be the HTML document that we are going to work with now guys we are going to include the HTML 5 code so over here simply we have to write HTML followed by colon and then as you can see this is the Mt abbreviation HTML colon 5 and when we click on this the default template that we can use is generated for us inside the vs code and guys this is one of the important functionalities that makes VSS code very attractive as far as writing HTML or any other code is concerned so basically it provides us with the HTML starting and the ending tag over here inside which we have the head tags as well apart from this inside the head tag we have the default text that is meta tag over here and the title of the document so this is basically the text that will be displayed on the browser tab so guys over here we are going to say CSS tutorial in this case and apart from this inside the body we are going to include just one element that is H1 which is a header element inside HTML so guys if you are not aware about the HTML elements I would recommend you to go through my other tutorial playlist related to the HT HML tutorial videos the link to which I have given in the description section below so over here we will say this is heading one so guys basically this is the text that will be displayed inside the web page when we are going to open this particular web page so let me just save this file now and try opening this page on the browser so I'll right click over here on the index.html and copy the path from this particular option so I have copied it and simply we are going to open the browser you can open the browser of your choice I working with the Google Chrome browser over here and we are going to paste this link so over here after pasting the link to that particular HTML document we are going to press enter so as you can see I'll zoom in a little bit so that it is properly visible to you guys so this is heading one is getting displayed over here and this is the text that we have written inside this HTML document now guys let us say in this example we want to change the color to blue color in this case so what we can can do is inside this head element of the HTML document and after this title tag we have something called a style tag over here so guys as you can see this is the Mt abbreviation that we can use so basically it will help us in order to generate the starting and the ending tags over here so inside the style tag simply we can provide the tag name so in this case we want H1 for which the text should be of the color blue in this case so we will say H1 over here so this is the selector which is part of the format when we are defining the CSS property and Then followed by open and close curly braces over here now guys inside the curly braces we can Define our CSS properties so one of the property is color over here which is the font color so simply when we type color as you can see vs code is suggesting us various options in order to use the CSS properties so in this case we are going to use this color property and then simply we are going to provide the value that is blue so we are going to select this blue option so let me just save this file now so when we reload this page basically all the H1 tags that are present inside the body tag over here should be having the font color as blue so when we reload this page once again on the browser so as you can see the color has been updated to blue color in this case and this is how the CSS property Works guys apart from this let us say if we want to change the background color of this entire page then we can do so by applying the background color property to the body tag so guys basically this entire section that is the white color on the web page is the body section over here inside which we have the different HTML elements so let us say we provide the body tag over here inside the style tag and then after this we have open and close curly braces and then we apply something called as background color over here so we have background hyphen color in this case and then followed by colon and then let's say we have the color that is yellow to be applied to the background so let me just save this file now and try reloading this page once again on the browser so as you can see the entire background of the web page has been updated to yellow color and guys this is the way that you can use a CSS in order to display the various elements of the HTML document in the way you want based on your requirements we can also set the font size of a particular tag to a particular value based on your requirements so this font size property I'll leave up to you as a homework for you so now we will see inline versus internal versus external CSS so guys basically the CSS properties that are read last will be applied to the HTML elements so the full form of CSS is cascading stylesheet so basically whatever properties are being mentioned in the end will be applied to that particular HTML element and this we are going to to see with the help of examples as well and mostly in big projects we should use the external CSS to keep the HTML and CSS codes separate so guys basically it is a best practice in order to keep the HTML and CSS code separate by using the external CSS file which will be a separate file that will only Define the list of CSS properties for the different HTML Texs that we have defined in the web pages so guys let us check the difference and the priorities of the inline line internal and the external CSS over here so let us move to the vs code in this case and I'll remove the previous lines of code that is the style tag that we had written previously and then we are going to keep this H1 tag that is this is heading one text inside the H1 and then let's say we want to add a paragraph tag over here with the help of the P tag and then simply we will say this is a paragraph So guys over here we have two tags that is H1 tag this is heading one and then we have the paragraph tag that is this is a paragraph text is being displayed inside this tag let me just save this file now and try reloading this page once again on the browser so as you can see we have the heading one H1 and then we have the paragraph now guys let us say we want to apply some color to this particular paragraph so let's say if we want to apply the red color to this paragraph tag now guys there are three ways in which we can Define the CSS properties and first of all we are going to see how we can do it using the inline method now what do we mean by inline CSS so basically we can also Define the CSS properties inside the starting tag over here in this case we want to apply the red color to this paragraph so we can apply the CSS property inside this starting tag that is the P tag so after this P character we can have the space character over here and simply we can provide the style attribute so as you can see this is the suggestion that is being provided by the vs code and then after this we have equal to operator followed by double codes and then guys inside the double codes we have to provide the CSS property that we want to apply to this particular tag so in this case we want to update the color to Red so over here inside the double codes we will say color followed by colon and then we can provide the name of the color so in this case it is red and then after this simply we can provide semicolon now similarly like how we have applied color property we can apply more properties over here on the same line separated with the help of the semicolon that we have provided now guys let me just save this file now and try reloading this page once again on the browser so as you can see this is a paragraph text is being displayed with the red color now and guys in this way the inline CSS property works that is we can provide the CSS property inside the starting tag of the HTML element for which we want to apply the CSS property based on our requirements now guys what is the meaning of the internal CSS so over here the second type of CSS is the internal CSS in this case so previously we had seen inside the head tag we can Define the style tag as well so the style tag that we Define inside the head tag after the title tag over here is called internal CSS so the CSS that we Define in this way that is present inside the head tag is called the internal CSS that's because it is present inside this particular HTML document itself so guys over here let's say we provide the selector that is p in this case so we want to apply the font color to the paragraph tag over here and after the selector we provide the open and close curly braces and inside this we are going to provide the property that is color so after this property we need to provide the value of the color so in this case after colon we provide the value so let's say we provide the value as blue color in this case so guys basically for the internal CSS we are applying the color blue for the P tag so that the text that is present in all the paragraph tags will be displayed with the blue color so guys let me just save this file now and let us see whether this color that is blue will be applied to the text color of the paragraph or not so let me just reload this page once again on the browser so as you can see still we are able to see the red color for this paragraph text why so that's because because we have also provided the inline CSS over here and guys always remember the inline CSS property that we have provided to any of the HTML document will be given the highest priority compared to the internal CSS and the external CSS that we are going to see so in case you are making any changes in the internal CSS or the external CSS and those changes are not getting reflected to the element which you are expecting to change then please check if that particular element is having any inline CSS property that is being defined over here now guys if we simply remove this style attribute from this paragraph tag that is the inline CSS so over here we have removed the inline CSS let me just save this file now so now if we reload the page once again then this particular color that is blue should be displayed as the font color for the paragraph so let me just reload this page once again so before reloading it is red color over here and when we reload this page as you can see now the paragraph text is having the blue color that is being applied with the help of this internal CSS in this case so guys this is the way that we can Define the internal CSS as well for a particular HTML document now guys the other way in order to define the CSS is external CSS and this is the common way in which we provide the CSS properties so what we can do is simply over here inside the head tag we provide the link tag over here so guys in this case link followed by colon and then we have something called a CSS so as you can see this is the Mt abbreviation that is provided by the vs code we click on this particular option and then you can see that the relation that is R attribute it is being defined as stylesheet and hrf attribute is having the name of the CSS file that is style. CSS so guys we can provide any name over here but the extension should be do CSS in this case in order to have the Cs property being defined in the external file so guys over here we are going to create another file for which we will name that file as style. CSS that is provided over here to the hrf property so we add new file in this case and simply we provide style. CSS over here and press on enter so as you can see this is a new file that is created style. CSS and over here we can simply provide the CSS properties to be applied to different elements of of the HTML so let's say to the same paragraph We want to set the color to some other value so over here let's say we come to the style. CSS we provide the P that is the paragraph tag which is the selector and inside the open and close curly braces we provide the color property over here and then followed by colon and let's say we want to change the color to Green in this case so guys basically we want this green color to be set as the font color for the paragraph tag so let me just save this file now always remember to save this file that is style. CSS and the HTML file as well so both the files should be saved in order to see the latest changes that are being made in both the files so let me save this file as well and after saving this file let me just reload this page once again on the browser so as you can see the font color for this paragraph has been changed to Green in this case so in this way we are able to use the external CSS as well in order to apply the various CSS properties to the HTML elements now guys what is the priority between the internal and external CSS we have already seen that the highest priority is given to the inline CSS property that we had already defined which we have removed now but apart from this we also have both the types of CSS being defined over here we have the style tag inside the head document which is the internal CSS and we also have the link tag that is linking to the external CSS file over here and in this case it it is giving the priority to the external CSS file that's because we are able to see the color as green now guys since we have provided this particular link tag after the style tag that is the reason the green color is getting more priority compared to the blue color which we had defined inside the internal CSS so guys what we can do in order to give more priority to the internal CSS over here so first we need to define the link so we can simply remove the link tag from here that is after the style tag and we can provide the link tag before these style tags over here so before the style tag simply I'm going to provide the link tag in this case so what exactly is happening over here the control flow is first checking this particular link tag and it sees that there is an external CSS file in this case so it applies this particular green color but then it also sees later on that there is a internal styling that is also provided and in this case the color blue is applied so the latest color that is applied over here is from the internal style that is the color blue and that color will be applied to the paragraph tag over here so let me just save this file now and try reloading this page once again on the browser if you notice the current color is green which is from the external CSS file but since we have changed the position of the external CSS file now this particular color should be applied so when we reload this page as you can see blue color is getting applied to the paragraph text over here so Guys these are the different ways in which you can provide the CSS properties inside the HTML document the most common way is to use the external CSS that we have just seen in order to separate the code that is the CSS code and the HTML code so now we are going to see the different types of CSS selectors so guys basically below are some of the CSS selectors that we can use now CSS selectors are nothing but how do we identify that for which element the CSS properties are to be applied so basically the CSS selectors helps us in order to identify a particular HTML element to which the CSS properties will be applied now the first way is to use the CSS element selector so in this case simply we are going to mention the HTML tag to which the CSS properties needs to be applied so let us move to the vs code over here and I'll simply remove the internal styling that we had applied previously and we have a link tag that is linking us to the style. CSS external file over here where we are going to provide the CSS properties so guys we have two tags in this case the first is the H1 tag and the next is the P tag that is the paragraph tag over here so we are going to switch to the style. CSS file as well so we'll remove the previous lines of code over here and simply we are going to apply certain styling with the help of the CSS element selector so guys let's say we want to apply some color to this header element in this case so what we are going to do is in the style. CSS external file simply we can provide the tag name that is H1 in this case followed by open and close curly braces and inside these curly braces we can provide some color so let's say if we want to apply this brown color over here so simply we select the value of the color as brown so guys this is the first way that is by using the CSS element selector which is just the name of the HTML tag to which the CSS properties needs to be applied let me just save both these files now and try reloading this page once again on the browser so as you can see the color of this header element that is this is heading one is updated to brown color in this case so this is one of the simplest ways in order to provide the CSS Properties by using the CSS element selector now let us move to another type that is CSS ID selector so guys in case if you have certain ID to the HTML document then we can use that ID in order to provide the CSS property so let us check that as well so in case we want to apply certain property to this particular paragraph over here so what we can do is simply we can provide the ID to this paragraph so I'm going to provide the ID and Then followed by equal to operator and then after that we have the double Cod over here so guys let's say provide the ID par in this case let me just save this file now and and we can use this ID in order to identify this particular paragraph so I'm going to copy this ID and inside the style. CSS we are going to provide this ID as the selector now guys when we are going to provide the ID as the selector we need to start with the hash character so this is the hash character that we should have a prefix before providing the ID for the HTML element and simply we are going to have the ID that is par 1 so basically par 1 is the ID and the prefix that we need to apply is the hash character over here when we use any of the ID values in order to provide the CSS property so after this selector we are going to provide the open and close early phes and then we can provide our CSS properties so let's say we want the background color for this paragraph to be yellow so we provide the background color property and we set the color is yellow in this case let me just save both the files over here and try reloading this page once again on the browser so as you can see for this paragraph the background color is set to yellow and this is the way that we can use CSS ID selector in order to apply the CSS properties now guys we can also use the class selector as well in which case we need to have the class for a particular HTML element so let us say we have another HTML element over here inside our web page and we will have the div element in this case with the class attribute as class one over here so guys basically we have the class attribute which is having the value as class one and inside this div basically we are going to have this is a div element so this content we are providing inside the div element over here let me just save this file now Ander try reloading this page once again on the browser so as you can see this is a Dev element is getting displayed over here right now now guys let us say we want to apply certain font size to this particular text inside the dev element so how we can do that by using the class attribute so as you can see we have the class attribute which is having the value that is class one we are going to copy this value that is class one and apply styling by using this particular class value so inside the style. CSS external file we have to come to the next line and the way that we use the class Name Is by using the period that is dot over here so guys basically we need to have the prefix that is Dot and Then followed by the class name in this case so we have dot followed by class one which is the name of the class and then after this we are going to provide our CSS properties inside the open and close curly braces so let's say we provide the font size property over here and we want the font size to be 30 pixels in this case so we provide 30 pixels over here let me just save this file now and try reloading this page once again on the browser before reloading as you can see this is the font size that is the default font size which is 16 pixels by default on this particular browser it depends on your browser which web browser you are working and what is the default font size for that particular browser so when we reload this page as you can see the font size is updated now to 30 pixels and the text is looking little bit larger over here so guys in this way we can also use the CSS class selector in order to provide certain CSS properties in this case now let us move to another CSS Lector and in this case we can also use the CSS class along with the HTML element so guys in the HTML tutorial series we have seen that the same class value can be provided to multiple HTML elements and that is what we are going to do in this case as well so let us say inside the HTML document for this paragraph tag we have the same class value that is class one over here so I'm going to copy this class attribute and paste it inside the starting paragraph tag over here for this is a paragraph text so guys basically we have two elements with the same class name that is a paragraph and the div HTML elements class one is the value for both the classes now guys for both these classes we have a class property that is font size 30 pixels so let me just save this file now that is HTML and the CSS files and reload this page once again on the web browser currently the font size is not updated but when we click on this reload button the font font size that we have applied to the class name will also be applied to the paragraph tag as well since we have provided the class attribute with the same value for this paragraph tag so when we reload this page as you can see the paragraph and the diff both are having the same font size now guys let us say we only want the font size of 30 pixels to be applied to this particular Dev element so what we can do is we can first of all have the element name in this case so so over here we can have the div that is the element name or we can say HTML tag and then after that HTML tag we have not followed by the name of the class as you can see this is the format first of all we provide HTML tag followed by dot that is period and then the name of the class so guys in this way we can specify that to which particular element we want the font size to be applied so let me just save this file now and try reloading this page once again on the browser this time the font size property should only be applied to the div element and the paragraph text should be displayed with the normal font size which is 16 pixels over here so when we reload this page as you can see the font size is normal for the paragraph whereas the font size for the div element is 30 pixels right now and in case if we want the font size to be applied to only the paragraph and not the div element so simply we can provide the P tag in this case instead of there so we provide P followed by Dot and then have class one let me just save this file now and try reloading this page once again on the browser so as you can see the size of the paragraph text is now increased to 30 pixels whereas the text size for the dev element is being displayed with the default text size over here and guys if you want both the elements to have the same font size then simply we don't have to specify any of the tags over here and simply we can provide the class name before which we have a period that is dot as the prefix so let me just save this file now and try reloading this page so as you can see both the HTML elements will be having the same font size and whatever HTML element that we provide inside our HTML document which will be having the class that is class one will have the font size is 30 pixels since we have applied this font size at the class level over here now guys apart from this we have another selector as well as you can see there's a universal selector so BAS basically we can also use the universal selector in order to apply a common styling to all the elements so let us say if we want the font size of all the elements over here inside the HTML documents to be set as 20 pixels so including the header and the paragraph tag and the div tag as well so what we can do is simply we can use the universal selector over here now how do we mention the universal selector it is best practice that we provide the universal selector at the start of the CSS document so over here at the start that is the first line we will be providing the universal selector that is star so guys basically star character is used in order to apply the CSS properties to all the HTML elements that are present inside the index.html so after this we are going to provide the open and close curly braces and let's say we provide the font size property and the value to be 20 pixels over here so let let me just save this file now and try reloading this page once again on the browser so as you can see 20 pixels is getting applied to the header but not to the paragraph and the div element over here guys we can also confirm this by right clicking on this element and going to the inspect option so when we click on this inspect option as you can see if we highlight this header that is this is heading one on the right hand side you can see that H1 is having the CSS that is color is equal to Brown and if you scroll down it is also having the property that is the Universal Property over here for which the font size is 20 pixels we can play around over here by checking and unchecking these options as well so when we uncheck this option of color is equal to Brown so when we click on this option as you can see the color is now updated to the default color that is black in this case and when we check this option once again so it is updated to brown color now so guys basically we can play around with these options and see what is the best combination of the CSS properties that we can apply by checking and unchecking the options that are being present over here we can also uncheck this option so when we uncheck this the default font size of the header is being used in this case and when we check this option once again that is the font size is 20 pixels then again the 20 pixels font size is applied to this particular header now guys the important question is why the font size is not applied to this paragraph tag and the div element over here so the main reason is basically after applying the font size of 20 pixels to the universal selector we also have the class one that is having the font size over here and as we have discussed previously whatever CSS properties are mentioned in the end will be applied to the HTML element so after this font size if let's say we have the internal styling as well after this link tag then that particular styling will be applied to the HTML element and in case if we have the inline styling over here then inline CSS properties will be given the highest priority so guys basically what we have to do is I'll comment out this line of code over here so simply we have to select this and press controll forward slash on the keyboard so as you can see this is the way that we can provide the commments in the CSS that is forward slash followed by the star character and then in the end over here we have star character followed by forward slash so this is a command that we provide in the CSS styling let me just save this file now and try reloading this page once again on the browser I'll just exit this inspect option and when we reload this page as you can see the font size is updated to 20 pixels for all the elements consistently throughout the document so guys this is the main functionality of the universal selector which means the CSS properties will be applied to all the elements let's say if we want to underline all the elements over here then we have something called as text decoration property so in this case we will say text decoration so as you can see this is the property that we will be using and then simply we can provide the underline value apart from this we have many other values that you can use but we will be using the underline value over here so when we select this underline value let me just save this file now and try reloading this page once again on the browser so as you can see all the elements are now being underlined with the help of the text decoration property that we have defined in the Universal selector over here another way is to use the CSS grouping selector now guys in this case we use multiple HTML tags in order to have the common CSS property so let's say instead of providing the universal selector over here in which case all the elements will get the font size as 20 pixels if we only want this H1 and the paragraph tag to have the font size of 20 pixels then what we can can do is over here we'll remove these lines of code that is the universal selector we will also remove the dot class selector in this case and simply we have to use these two texts that is H1 and P which will be separated by comma so over here we provide H1 followed by comma and then we have P that is the paragraph tag over here so guys basically this is the meaning of the grouping selector in this case after this we can provide the open and close curly braces and simply we can provide the font size property so over here let us say we change it to 25 pixels in this case guys what is the meaning of this block of code so we have the font size of 25 pixels which will be applied to two elements that is H1 and paragraph tags only so I'll save this file now and try reloading this page once again on the browser so as you can see we have this is heading one which is having the 25 pixels font size and this is a paragraph is also having the 25 pixels font F size let us verify that as well we will right click on this header element and click on the inspect option over here so as you can see on the right hand side we have the font size of 25 pixels for this header tag in this case and let's say we select this paragraph tag over here and we click on this you can see para 1 it is having the background color as yellow and over here below we have H1 comma P which is having the font size as 25 pixels what if we remove this checkbox when we we uncheck this as you can see this is a paragraph is now having the default font size over here and when we check this option once again both the header and the paragraph text are having the font size of 25 pixels again so Guys these are certain ways in order to provide the CSS selectors that is by using the CSS element name then we can also use the CSS ID we can use the CSS class and then class with the HTML name as well and then apart from this we also have the universal selector which will apply the CSS properties defined inside the universal selector to all the HTML elements and apart from this we also have the CSS grouping selector that we have just seen while combining the different HTML tags so now we will see color values in CSS so guys basically there are various ways in order to define the colors in CSS so the very first way is by using the color names that we have seen previously as well and this is one of the example examples that we can give the color name as red yellow green to some of the CSS properties so let us check this with the help of examples as well in vs code so basically I'm going to remove the attributes in the existing HTML elements that we had return previously so as you can see over here we have a header element with the text this is heading one then we have a paragraph tag this is a paragraph and we have a div element that is this is a div element over here let me just save this file now and we'll also remove the content inside the style. CSS so we don't have any styling right now so let me just save this files and try reloading this page once again on the browser so as you can see this is the default way using which all the HTML elements are getting displayed now guys let us say we want to have certain background color to this entire page over here so in order to have the background color to this entire page which is being represented by the body tag what we can do is we can provide the background color to this body tag so inside the style. CSS we will provide the selector that is body tag in this case followed by open and close curly braces and then over here we will be providing the background color now guys how do we provide the background color in this case so the very first example is by using the color name so let us say we want the background color to be yellow so simply we can provide the yellow color name in this case so guys this is one of the basic phase in order to use the color names so that a particular color can be applied to the CSS property let me just save this file now and try reloading this page once again on the browser so as you can see the background color of the entire body has been updated to yellow color now guys let us move to another way over here we can also use the RGB values for color so we have to use the RGB function in this case inside which we will be having the numbers now these numbers are representing the red component green component and the blue component so over here we have three numbers which are separated by commas in this case and the numbers can go from 0 up to 255 now 0er means no red component is present and 255 means the entire red component is present inside this particular color and the same values are applicable for green and blue as well so guys this RGB stands for red green and blue which will have their own components based on our requirements we can Define so how do we apply this particular color so let us check that as well so let's say if we want the heading color to be red so what we can do is inside the style. CSS we have to provide the header tag that is H1 in this case followed by open and close curly braces now guys we want the font color to be red color so simply we can use the color property and this time instead of using the color name that we had used previously we will be using the RG B values so over here as you can see vs code is suggesting us this RGB option which is having the red green and blue parameters which we have to Define as numbers which should go from 0 up to 255 so guys over here the red component we will apply it as 255 the green component let's say we don't want any green component to be displayed over here so we simply have to provide zero number and then for the blue component as well we provide zero so so that no blue component is applied to the color so basically it is going to be a pure red color in this case since it is having 255 value for the red component so let me just save this file now and try reloading this page once again on the browser so as you can see the header element is now having the font color as the red color with the help of this RGB function in this case so guys you can play around with the values of these RGB that you can provide with the help of these numbers let's say I want to reduce some portion of this red component so simply set it as 200 so instead of 255 we set it as 200 over here so let me just save this file now and try reloading this page once again on the browser so it has been updated to a little darker version of the red color now one important point to note over here is when all the components are zero then it will be a black color so let's say we provide zero as the red component as well so it has been updated to black color as you can see over here in this Square so let me just save this file now and try reloading this page once again on the browser so it is a black color and if you provide the entire portion that is 255 to all the components so let's say we provide 255 to red green and then let's say we provide 255 to Blue as well so it will be converted to a white color now so let me just save this file and try reloading this page once again on the browser so this is a white color which is not mixing well with with the background color which we have already applied as the yellow color so guys in this way you can play around with these numbers and set the color based on your requirements So currently we want to set it as the red color for the text of the header element so I'll save this file now and try reloading this page so this is the red color by using the RGB values now guys let us move to another way of using the color values so we have another way as the hex values in this case for which we use the hash character followed by Red component that is being represented by the first two characters then we have green component that is third and fourth character and then fifth and sixth character as the blue component over here so just like RGB in which case we are having the numbers from 0 up to 255 in the hex color we have 0 0 up to FF so 0 0 will be representing the black color and FF that is the maximum number will be representing the white color over here so guys let us say we want to change the font color of paragraph This Time with the help of the hex color so what we can do is again we have to come to this style. CSS file and then we provide the P tag which will help us in order to provide the CSS property to the paragraph and let's say we want the color in which case we will be using the hex color so this time we will be using the blue color in order to be applied to the text of this paragraph so what we can do is we Pro provide the hash character so the red component should be zero so this time we will provide 0 0 and then we have the green component which should be again zero so 2 * 0 so guys total 4 * 0 and Then followed by 2 * F because we want 100% of the blue color over here and that is why we have provided FF character in the end so guys total six characters will be there two characters from each that is red green and blue will be used in order to represent a particular color color so let me just save this file now and this time we have applied the blue color to the text and let us reload this page once again on the browser so as you can see this is a paragraph is getting displayed with the blue color as the text color now what if we provide the green component as well in this particular color so instead of 0 0 we will provide FF so this is the color that is the result of the combination of the green and the blue color now so let me just save this file now and try reloading this page once again on the browser so as you can see this is a paragraph is getting displayed in a different color which we have set by using this particular hex color so guys you can play around with this hex color values as well and understand how it works so that you can use it based on your requirements now guys apart from this we also have something called as Alpha component in the rgba values of the color now because Alpha is nothing but it defines the transparency that is how much transparent a particular color should be so let's say we want to to apply certain background color to this Dev element over here so what we can do is simply we have the dev element in this case inside the style. CSS file followed by open and close curly braces and this time we are going to use the background color property and we are going to provide RGB and as you can see we have the a component as well so you provide red green blue colors and then in the end you provide the alpha which will go from Z 0 up to 1 so let us check that as well so when we provide the red green and blue components so let's say we provide the same color that is red color over here as the background color for the div element so for the red component we provide 255 as the number for the green component we provide zero as the number and for the blue component we provide zero as the number and let's say we provide the alpha value as one this time so what will happen so let us check that I'll save this file now and try reloading this page once once again on the browser so as you can see the dev element is now having the background color as red color now and guys it is a pure red color so basically when we provide the alpha value as one there is no transparency for that particular color now let us say we want this background color to be transparent to some extent so let us say we change this Alpha component to 0.5 over here so when we change it from 1 to 0.5 in this case let me just save this file now and try reload loading this page once again on the browser as you can see the background color that is red is now little bit transparent and this is the way that you can Define transparency by using the alpha component in the RGB values let us say we want to make it more transparent so when we change it to 0.1 I'll save this file now and try reloading this page once again on the browser so it has become very transparent now there is a red color as you can see but it is very transparent in this case and when we set it to Z then it should disappear so when we change the alpha component to zero I'll save this file now and try reloading this page so there is no red component that is getting displayed as the background color let me just set it to 0.3 over here so that we can see that red color to some extent I'll save this file now and try reloading this page so as you can see we have the red color but it is little bit transparent over here and this is the way that we can use the alpha component if we want to show certain transparency to the the colors based on our requirements so Guys these are certain ways in order to provide the color values in CSS comment in the comment section below which is your favorite way of providing the CSS colors so now we will see background property in CSS so guys basically the CSS background properties are used to add background effects for elements and this we are going to check with the help of examples as well so below are some of the background properties in CSS that we can use so the very first property that we are going to see is the background color so let us move to the vs code over here so we already have three elements in this case that is H1 element this is heading one then we have a paragraph and we have a div element as well now guys we have a style. CSS property so I'll remove all the lines of code that we had return previously and let's say for this header that is H1 we want to have the background color as yellow so what we can do is I'll save this file now and try reloading this page on the browser first so this is the default page without any CSS that is applied on the web page so we will be applying the background color as yellow to this header element so we come to this style. CSS external file and over here we provide the selector that is H1 so for this H1 tag we are going to provide the background color property and the color that we are going to provide is yellow in this case let me just save this file now and try reloading this page once again on the browser so as you can see this is the way that we can provide the background color to any HTML element we can provide the background color to the entire body of the web page as well so instead of having this H1 selector we can simply provide the body tag and the same background color that is yellow will be applied to the entire body so let me just save this file now and try reloading this page once again on the browser so as you can see this is the color that is being applied to the body with the help of the background color now guys let us move to another property we have something called as opacity which means it specifies the opacity or transparency of an element it can take a value from 0.0 up to 1.0 the lower the value is the more transparent the color will be so guys what we can do is simply inside the same body tag we will have the opacity element as well so let's say we want the transparency to be 50% so simply we will provide the value as 0.5 for the opacity property in this case let me just save this file now and try reloading this page once again on the browser so as you can see the opacity of the yellow background color is being updated with the help of this 0.5 opacity so in this way you can provide the opacity property as well I'll remove this opacity factor for now so that we are going to deal with the pure colors in this case so let me just reload this page so as you can see we have the yellow background color for the property now guys let us move to another property we have something called as background image so guys this is one of the important properties if you want to set the background image for the HTML element so let's say we want to set the background image for the entire body so instead of a background color we should be having the background image so how do we Define that so basically we are going to have the background image in this case so as you can see this is the property that is suggested by the vs code so over here after we provide background image followed by colon we have to use the URL function so this is the function that we will be using and inside the open and close parenthesis we will provide the double codes now guys we already have the sample image over here as you can see sample image.png file is being stored in the same directory so what we have to do is simply we need to provide the name of this file so the sample _ image.png is the file that we are going to select so basically this is the image that will be displayed as the background image for the body element of the web page so guys let me just save this file now and try reloading this page once again on the browser so as you can see there is a background image that is set over here I'll just zoom out a little bit so that you can see the background image properly so as you can see this is the background image that is being set over here now guys by default whenever you set the background image to a particular HTML element the image will repeat itself in order to cover the entire screen so as you can see the same image is getting repeated over here multiple number of times so the next property that is background repeat will help us in order to set whether we want to repeat it in the horizontal direction or if we want to repeat it in the vertical direction or we don't want to repeat the background image so simply we have to come over here inside the same body tag in this case we will say background followed by hyphen and then we have the repeat words so basically it is the background repeat property that we are going to use and simply let's say if we want to repeat it in the horizontal Direction then we can use the repeat hyphen X by default the repeat value is being used in which case it is going to repeat horizontally and vertically as well but this time let's say if we want to repeat it horizontally so we'll set it as repeat Hy X in this case let me just save this file now and try reloading this page once again on the browser so as you can see the image is getting repeated in the horizontal Direction now and we also have the background color that is being applied to the remaining portion of the background now guys let us say if we want to repeat the image in the vertical Direction so what we can do is simply we can set the background repeat to repeat hyphen Y in this case so let me just save this file now and try reloading this page once again on the browser so as you can see the image is getting repeated in the vertical Direction now and let's say if we don't want to repeat the image if we want the image to be displayed only once so simply we can set the value as no repeat in this case so we have this no repeat value as well so we provide this no repeat value let me just save this file now and try reloading this page once again on the browser so as you can see the image is getting displayed only once so guys in this way you can also handle the background repeat property and set it accordingly whether you want to repeat the images or not now because apart from this we have another property that is background position so guys basically this will help us in order to provide certain position to the image so by default it is the top left position at which the background image is getting displayed right now but let's say if we want to display it at the top right position over here on the right hand side of the screen so what we can do is simply we have to provide the background position property in this case so we have background hyphen position and this time we are going to provide right and then followed by space and then we also have the top keyword so let me just save this file now and try reloading this page once again on the browser so as you can see the image is getting displayed on the right hand side and at the top side of the web page so guys the background position property will help us in order to provide certain position to the image that we want to display on the web page now guys apart from this we also have something called as background attachment over here now in order to check this we need to have multiple lines of code inside our HTML document So currently we are having only three elements that is header then we have paragraph and the div element so as you can see these are the elements over here I'll zoom out little bit so that you can properly see the image on the right hand side in this case now guys what we can do is simply I'm going to add more HTML elements over here in such a way that we are able to scroll this page so simply I'll come to this HTML document and we will have the paragraph tag over here and then we will have the lurm that will help us in order to generate the text now how many times we want this lurm sample text we are going to multiply it by 100 times which means 100 such sentences needs to be generated inside this paragraph tag over here so when we press enter as you can see automatically the entire text is getting generated so there's a very long text that is being displayed over here right now inside the paragraph tag now guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the text that is getting displayed right now let me just zoom in a little bit over here now as you can see there is a scroll bar in this case now guys the important thing to note over here is when we scroll this web page as you can see the image is also getting scrolled so this is the background image that we have applied on this web page and when we scroll it vertically the image is going on the top and now it is getting disappeared from the screen so guys over here the background attachment property is being used and it is being set to scroll by default so what we can do is we have to come to the style. CSS external file and then simply we have to provide background hyphen attachment over here so this is the CSS property that we will be using so by default it is being set to scroll over here so let me just save this file now and try reloading this page as you can see the image is getting scrolled and it is getting disappeared but let's say if we want this image to be fixed at this particular position or any position based on your requirement so what we can do is we need to set this background attachment property to fixed value so I'll just remove this value and then we are going to provide the value that is fixed in this case so let me just save this file now and try reloading this page once again on the browser now if we try to scroll so as you can see we are scrolling the content but the image is at its fixed position over here that's because we have provided the background attachment property with the value that is fixed in this case so guys basically this line of code will help you in order to make your background image fixed and do not scroll based on the content of the web page so in this way we can use multiple background properties inside our CSS based on our requirements now guys apart from this we also have something called as background shorthand property so instead of using all these properties individually we can combine them and the sequence in which it is going to be combined is the same sequence that is first we are going to provide the background color then we have something called as background image then we have background repeat background position and background attachment so let me just remove all these lines of code over here and then let me me just save this file now and try reloading this page once again on the browser so as you can see we don't have any background property right now and simply we are having the normal text that we had defined inside the HTML page so let's say we want to Define certain background properties with the help of the shorthand method so simply we provide background CSS property and first of all we can provide the color so as you can see we need to provide the background color over here so let's say we provide the same color that is yellow in this case and then after this we need to provide the space character in order to provide the value for the next background CSS property so over here we have the background image property so simply we can provide the value for this image so how do we provide the value we use the URL function and then inside the parenthesis and double codes we have the name of the image or the directory path along with the image name so we have sample uncore image image.png in this case and then again followed by the space character and then we can have the background repeat property in case if you don't want to mention any of the values for a specific background property over here then you can ignore that property and move to the next property so over here background repeat is the next property so simply we can provide no repeat in this case which is one of the values for the background repeat property next after the space we are going to keep the position again as top top right over here so we simply have to provide right followed by space and then we have top keyword in this case and then guys the last property that is background attachment can be provided with a particular value over here so let's say if we want to ignore that property so simply we don't provide any value to that particular property so let me just save this file now if you notice that instead of having the four or five lines of code we have just provided the shorthand method that is background property and we have provided all the values in just one line and this is one of the efficient ways in order to provide multiple values to the CSS shorthand property of background guys let me just save this file now and try reloading this page once again on the browser so now as you can see there is a image that is getting displayed the first value that is yellow which is the background color of the body is being displayed over here and then after that the image is getting displayed which is not repeating itself so no repeat is also working working and it is at the position that is right top what if we want to get this image at the center of the screen at the top position so simply we provide the top keyword so that it is present at the top and at the center as well so let me just save this file now and try reloading this page once again on the browser so as you can see it is at the top and at the center position if we check it horizontally and then when we scroll this web page so as you can see the image is scrollable right now that's because because we have not provided the fixed value of the background attachment property if we provide the fixed value in the end in this case so let me just provide that value as well let me just save this file now and try reloading this page once again on the browser and if we scroll now so as you can see the image is getting fixed right now so guys this is one of the important ways in order to provide the background properties that you want to apply based on your requirements so now we will see border property in CSS so guys basically the Cs say border properties allow you to specify the style width and the color of the elements border so whatever HTML elements you have defined in the web page you can provide the border to that particular HTML element such as a div element or the paragraph element as well and we are going to check this with the help of examples now below are some of the Border properties in CSS so the very first property that we are going to see is border style so guys let us move to the vs code over here and basically we are going to have a simple div in this case so we have defined the div and we are going to Simply have the sample text that is lauram so LM Mt abbreviation is being provided by the vs code over here so we simply have to click on this Mt abbreviation so that random content is automatically generated for us now guys let me just save this file now and try reloading this page on the browser so as you can see this is the content that is being provided inside the dev element now guys let us provide certain background to this Dev element so over here what we have to do is we have to come to the style. CSS file in this case and simply we are going to define the tag that is Dev so by using the tag name we are going to define the background color so in this case we provide background color as the name of the property and let's say we provide the color as yellow in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color as yellow for this particular Dev now guys let us say we want to provide certain border so what we can do is we can provide the Border style in this case so when we provide border style over here there are multiple values that you can select from so as you can see this is the Border style and apart from that you can also provide the individual style for the individual sides so as you can see we have the top border over here then border left style then border right style and Border bottom style so basically there are four sides for this div that is top right bottom and and then left so guys you can select which of the sides you want the border to be provided and what style needs to be implemented for that particular HTML element so in this example we are going to Simply provide the Border style which will be applicable to all the four sides and in this case simply we are going to provide the solid border style so guys basically this is a very simple border style that we can use in order to provide the border to the dev element over here so let me just save this file now and try reloading loing this page once again on the browser so as you can see the border for the div element is being displayed over here and by default the color of the border is black and a specific border width is given to the div element now guys we can also Define the Border width as well by using the Border width property in this case before going to that property we can also have different values to this border style as well so as you can see we have dashed border style then we have dotted double Groove and many other border styles that you can see so if we provide de border style in this case let me just save this file now and try reloading this page once again on the browser as you can see the Border style is now dashed and it is not solid in this case we can also provide the double value as well so when we provide double let me just save this file now and try reloading this page so it is the double border that is getting implemented over here so guys basically we are going to keep the Border style as solid and let us move to another property that is border width so let's say we want to define the Border width with as 5 pixels in this case so we simply have to provide the Border withd property and the value that we provide is 5 pixels over here so let me just save this file now and try reloading this page once again on the browser so as you can see the Border width has being updated to 5 pixels in this case apart from this we also have another property that is border color over here by default we can see that the Border color is black in this case what if you want to provide the Border color to be red so over here in the St f. CSS file simply we have to provide the Border color property so as you can see border hyphen color is the property name and simply we can provide the color name that is red you can also use the hex value or the RGB value as well based on your requirements so guys let me just save this file now and try reloading this page once again on the browser so as you can see the Border color is being implemented over here and it is red in color now guys apart from this as we have already discussed we can have the border for individual sites as well such as border top style border right style and so on so guys let us check that as well so instead of providing the Border style in this case simply we will provide border top style in this case so we have border top style over here and then let's say we want the Border top style to have dashed value over here so let me just save this file now and try reloading this page once again on the browser so as you can see only the top part of this Dev is having the border style now the other three sides are not having any border that's because we have specified the Border top style over here which is defined as dashed value over here so guys in this way you can also provide the Border styles to the specific sides of the HTML element that you want guys apart from this we also have something called as border shorthand property so guys so far we have defined the Border style border width and Border color separately in order to define the border for this particular div element but we also also have the short end property which will help you in order to Define all these values by just using one property over here so simply we can provide border and then first of all we need to provide the Border width in this case so we say five pixels followed by the border style so let's say we want the color to be red in this case so guys just by using this shorthand property that is the Border property you can Define the three values that is first value is for the Border width and then we have the border style followed by the border color value so let me just save this file now and try reloading this page once again on the browser so as you can see depending on the values that we have set the 5 pixel border is being defined over here with the Border style value that is solid and the Border color is red so guys you can also use the Shand property in order to Define your borders along with their colors based on your requirements now guys there is something called as border radius as well which will help us in order to provide certain radius to the Border Corners so guys let us check this as well so over here what we can do is simply we can provide border followed by hyphen and then we have something called as radius so guys let's say we provide 10 pixels as the radius in this case so let me just save this file now and try reloading this page so as you can see we have provided certain border radius over here so the corner of the border is having certain radius that is being defined by the border radius property so Guys these are some of the Border properties that you can use while defining the HTML elements so now we will see margin property in CSS so guys basically margins are used to create space around elements outside of any defined borders so previously we had seen how we can Define the borders for the HTML elements and if you want to provide certain spacing outside the borders of the HTML elements and in between the HTML elements then we can use the margin property in CSS so there are properties for setting the margin for each side of an element that is in the sequence of top right bottom and left so guys we will check this with the help of examples as well so the very first thing is we are going to see how we can Define the margin for a simple HTML element over here so let me just move to the vs code in this case and I'll just remove the previous lines of code in the index.html file and the style. CSS file as well that we had defined previously now guys what we will do is we will have two div elements over here so the first div element will be having the ID that is div one in this case and simply we are going to say this is div one and then guys I'm going to copy this line of code and paste this over here and we are going to have the second ID that is div 2 and we will Define this div as this is div 2 in this case let me just save this file now and try reloading this page on the browser so as you can see we have two divs in this case that is div 1 and div 2 now guys let us have some background color to both the divs so what we will do is inside the style. CSS file we are going to define the ID 1 that is div 1 in this case which should have the background color as yellow so we are going to provide the background color property and we will Define the value as yellow in this case and the second div which is having the ID as div 2 so we are going to provide hash div 2 in this case and then inside this we are going to provide the background color as Aqua in this case so guys basically we have provided this value that is equa so let me just save this file now and try reloading this page once again on the browser so as you can see we have the background colors that are set for both the divs that is div 1 and div two guys if you notice there is a white portion over here on the left on the top and on the right of these background colors so that is the default nature of the browser when a particular HTML page is being displayed to the user so guys what we can do is we can remove those margins or paddings that are being provided with the help of the body tag so inside the style. CSS file what we can do is for the body tag over here simply we are going to set the margin as zero in this case so we set it as zero and also the padding property needs to be set as zero so Guys these are the two settings that we can do in order to remove those white area that we can see on the web page outside of the background colors of the both the divs that we have defined so let me just save this file now and and if you notice when we refresh this page this white portion to the top left and right of these background colors should disappear so when we reload this page as you can see there is no white portion now and the entire width of the screen is being taken by the background color of both the div elements now guys how do we provide the margin over here so let's say we want to provide the margin of 10 pixels to Dev one so in this case margin is nothing but it will be a blank space that will be provided in in all the four directions outside of the border so inside the style. CSS file for ID that is div one over here simply we are going to provide margin in this case and we will say 10 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see when we provide the margin of 10 pixels to the div 1 you can notice that on the top side right side bottom side and on the left hand side as well the margin is being provided with the help of the 10 pixels value that we have provided inside the style. CSS property and guys this is the meaning of providing margin over here it is the space outside of the border of the HTML element so if we provide the border to this first div element in this case the Border will enclose this first div element around this background color that we have already set so guys let us check that as well so over here simply we are going to provide a border in this case we will say the border with as two pixels and the Border style is solid and color is black so let me just save this file now and try reloading this page once again on the browser so as you can see the border is being provided to the first div element and the margin is 10 pixels from all the sides so guys with the help of the margin property you can provide the margin on all the sides over here and this is the example of the margin shorthand property which means you can provide the margin to all the sides with the help of the margin property now guys let us say you only want to provide the mar Marg to the left and right of the web element so in this case you don't want the margin to be displayed on the top and the bottom of the first div element over here so what we can do is simply I'll remove this line of code let me just save this file now and try reloading this page once again on the browser so we don't have any margin right now to the first Dev element now let's say we want to provide 5 pixels margin to the left and 5 pixels margin to the right so what we can do is simply we can say margin left in this case so margin hyphen left is the property that you should be using so we provide five pixels over here and again we will provide margin right in this case and we will provide the value as 5 pixels over here now let me just save this file now and try reloading this page once again on the browser so as you can see we have the 5 pixels margin on the left and 5 pixels margin on the right let us increase the margin values over here so that you can clearly see the margin on the UI so let us set the margin left and right to 20 pixels over here and when we reload this page once again on the browser as you can see the margin has been increased now so guys in this way you can specifically provide the margin to a particular side of the web element in this case now guys apart from this you can also Define such margins inside the margin property as well so I'll simply remove these lines of code and we will simply use the margin property and over here the sequence of the values for the margins that you are supposed to set is first of all you should be setting the margin for the top side of the web element so let's say we don't want the margin at the top side so simply we provide zero pixels over here followed by space and then let's say we want the margin to the right side to be 30 pixels over here so simply on the right hand side we can provide 30 pixels followed by we have the bottom side of the web element in this case so guys over here let's say we want the margin to be 10 pixels so in this case we provide 10 pixels now guys this 10 pixels will help us in order to have some space in between the first developement and the second Dev elment when we refresh the page and then after this we can Define the margin for the left hand side so let's say we want 100 pixels as margin on the left hand side over here so guys on the left hand side we are going to have the highest margin in this case and we are going to check that on the UI as well so let me just save this file now and try reloading this page once again on the browser so as you can see on top there is no margin because we have provided 0er pixels and then on the right it is 30 pixels over here so you can see this is the 30 pixels margin and at the bottom we have the 10 pixels margin over here so this is the 10 pixels margin which is dividing the first div element and the second div element as well and the last element inside the shorthand margin property is the left side margin which is 100 pixels so we are going to have 100 pixels in this case guys we can can also right click over here on the web element and select the inspect option in this case so on any browser that you are working you will be able to see the CSS properties for a particular web element over here so when we select this web element what we can do is we can scroll down and as you can see this is the margin that is being provided to this particular web element so on the top we don't have any margin on the right hand side we have 30 pixels on the bottom side we have 10 pixels and on the left hand side we have 100 pixels and that is what we have defined over here by using the margin Shand property so guys based on your requirements you can provide the margin to the different web elements and check whether it is being reflected over here by inspecting that element now guys apart from this we also have something called as margin Auto so basically the Auto Value will help us in order to align the web element at the center of the page so guys let us say we have certain width to this first Dev element so what we will do is I'll simply remove this line of code over here and simply we are going to have the width s 500 pixels in this case so when we say 500 pixels let me just save this file now and see how it looks like on the UI so as you can see this is the 500 pixels width for the first div element over here and it is taking the space up to almost the center of the screen in this case but the second div is taking the entire width of the screen so guys since we have limited the width to 500 pixels over here it is being displayed in this way now guys let us say we want this particular Dev element to be at the center of the page so what we can do is simply we can provide the margin Auto in this case so we provide the margin property and the value that we must Define is auto so guys this value is responsible in order to align the web element at the center of the page horizontally so let me just save this file now and try reloading this page once again on the browser so as you can see the div element is being aligned at the center of the page with the help of the auto value for the margin guys it is very important to note that when you are providing the Auto Value then you should have certain width for a particular web element that you want to be aligned at the center of the page now guys apart from this we have something called as margin inherit as well so the inherit value will help us in order to get the margin value from the parent value now guys apart from this the margin property can also have the negative values that we can set so to understand this when we have the margin value as positive for the left hand side margin over here the web element tends to go on the right hand side but guys when we have the margin as the negative value so the web element will go on the left hand side of the screen and it will be invisible to some extent so guys let us check that as well so for this web element that is having the ID div 2 over here we are going to have the negative left margin so we we will Define margin hyphen left in this case and let's say we provide 10 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see the content of this second Dev element is going on the left hand side the T character over here that was present inside the div 2 is now going to the left of the screen in this case so guys basically this is the functionality of having the negative margins which means when we provide the margin left as a negative value then the div element will go on the left hand side over here and when the margin top property is negative then the web element will go on the top side of the screen now guys apart from this we have something called as margin collapse as well so what is the meaning of this so guys the meaning of margin collapse is when we have the margin bottom for the first div element and the margin top for the second div element so let's say we have the margin bottom as 50 pixels for this first element and 20 pixels as the margin top for the second element over here so let us check that as well how it will look like so over here inside the style. CSS property I'll simply remove all the margins over here and the width as well so let me just save this file now and try reloading this page once again on the browser so as you can see these are the two div elements now guys let us say we provide the margin bottom to First div element over here and the margin bottom is 50 pixels in this case so let me just save this file now and try reloading this page so as you can see the margin bottom is provided to the first Dev element now guys let us say we provide the margin top to the second Dev element so ideally it should move away from the div 1 by more 20 pixels over here so 70 pixels should be the total margin in between both these elements so let us check that as well so in this case when we provide margin top over here to the second Dev element and we provide the value is 20 pixels in this case over here we have provided margin bottom and over here we have provided margin top so let me just save this file now and try reloading this page once again on the browser before reloading you can see that this is the space but when we reload over here as you can see there is no change now so guys even though we have provided additional 20 pixels but since margin bottom and margin top in this case means the same thing that is it will provide the space in between both these elements so in this case the highest value will be taken from both these margins and only that margin will be implemented on the web page so if we inspect this so when we right click and inspect over here and let us inspect the first and the second element in this case as you can see we have the 50 pixels margin and that is what is being highlighted as brown color on the screen but guys we have also provided 20 pixels to the margin top of the second element so what happened to that so let us check that as well so in this case when we highlight the second div over here it is showing that we have 20 pixels but this is the normal behavior of the web page when you provide the margin bottom and the margin top for two consecutive elements that are being displayed on the screen so guys if we provide 60 pixels to any of these margins over here so let's say we provide 60 pixels as the margin top for the div 2 element when we reload this page once again on the browser you will notice that 60 pixels margin will be present in between both these div elements so so when we reload this page as you can see this is the 60 pixels margin that is being implemented over here on the web page so this is the 60 pixels margin as the top margin for the div 2 element and this is the meaning of margin collapse which you should be aware of when you are implementing margins in your project so so now we will see padding property in CSS so guys basically padding is used to create space around an element's content inside of any defined borders so guys if you want to provide certain space inside the web element and within the borders of that particular web element then we can use the padding property in CSS so there are properties for setting the padding for each side of an element that is in the se1 top right bottom and left and guys we will check this with the help of examples as well so let us move to the VSS code over here and previously we had written certain lines of code in order to understand the margin property in CSS so guys we have the first div over here that is this is div 1 with ID that is div 1 in this case and we have another div that is this is div 2 with ID div 2 over here and inside the style. CSS property we had defined certain properties and we are going to remove these properties so that we understand padding property in CSS now guys let me just save both these files now and try reloading this page on the browser so as you can see we have this is div 1 and this is div 2 without any CSS proper y now guys what we can do is inside the style. CSS we can provide certain background colors over here to both the div elements so first of all we are going to define the CSS property for the ID that is div 1 over here which will be reflected to this div element that is the first Dev so in this case we will simply provide the background color as the property and let's say we provide the background color as yellow in this case and guys the second ID that is div 2 we are going to Define another background color over here so we say background color property and let's say we provide the value as equ in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color to both the properties which is being extended to the width of the screen guys if you notice we have certain white spaces on the left top and the right of the div elements so we can get rid of it by using the margin and padding as Zer pixels by defining those CSS properties for the body tag over here so guys let us do that as well so that we understand the padding property more easily so over here we provide the body tag and we simply provide margin as 0 pixels in this case so we say 0 pixels and padding as well as zero pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see we don't have any spaces around both these div elements now guys what is the meaning of padding so over here first of all we will Define the border for this first div in this case so let's say we provide the border to First div element by using the Border property we will provide two pixels border followed by the border style that is solid and the color of the border is black color so let me just save this file now and try reloading this page once again on the browser so as you can see this is the border of the first Dev element now guys when we provide padding for a particular web element the space is provided in between the border and the content of the element so let us check that as well we are going to provide the padding to the left hand side of this first div over here so simply we are going to come to this div 1 ID and we will say padding followed by hyphen and then we have left in this case and let's say we provide 20 pixels as the padding to the left hand side of the div one so when we save this file now and try reloading this page as you can see this is the space that we have provided in between the order and the content of this tip and this can be achieved by using the padding left property over here and when we say padding top property the padding will be provided from the top side of the web element so let us check that as well so when we say padding top in this case and let's say we provide 30 pixels over here as the padding top let me just save this file now and try reloading this page once again on the browser so as you can see 30 pixels padding top is being provided over here similarly we can provide padding bottom as well and padding right as well in this case so guys in this way based on your requirements you can provide the padding property to the required HTML element so let us check the padding bottom as well so over here we simply provide padding bottom property and let's say we provide 50 pixels as padding bottom so when we save this file now and try reloading this page as you can see this is the padding that is being provided at the bottom of the side now guys apart from this we have something called as padding in shorthand property so in short we can also provide all these padding values with the help of just one property that is padding over here so I'll simply comment out these lines of code in this case and simply we are going to say padding over here and let's say we want padding to be 50 pixels from all the sides so simply we are going to provide 50 pixels as the value from all the sides over here so when we save this file now and try reloading this page once again on the browser so this is see 50 pixels padding from all the sides so if you want to verify this simply we can right click and click on this inspect option of the browser and on the right hand side you can see the CSS properties for a particular web element over here so this is the padding that is being applied over here that is 50 pixels from all the four sides that is being highlighted in light green color now guys apart from that let's say if you want to provide the padding top and padding bottom to be 20 pixels and padding left and padding right to be 50 pixels over here so what we can do is the first value is taken as the padding Top Value so over here simply we will provide 20 pixels over here the second value will be taken as padding right in this case so let's say we provide 50 pixels over here as padding right and the third element will be taken as padding bottom over here so simply we are going to say 20 pixels once again and followed by the padding left so over here we will provide 50 pixels once again so the sequence is padding top followed by padding right and then padding bottom and then padding left let me just save this file now and try reloading this page once again over here so as you can see this is the padding top and padding bottom which is 20 pixels we can verify that using the inspect option over here so when we click on this and come down over here as you can see padding top is being defined as 20 pixels and padding right and left is being defined as 50 pixels over here so guys this is the way that you can Define the padding for individual sides of a web element over here also when the padding top and bottom are same and left and right are same what you can do is this additional 20 and 50 pixels are not required so over here when we provide two values so padding top and padding bottom will be provided as 20 pixels and padding right and left will be provided as 50 pixels over here I'll just change this value to 10 pixels so that we can see the change on the web browser and this one as 30 pixels over here so the padding will be 10 from top and bottom and 30 at the left and right so let me just save this file now and try reloading this page once again on the browser so as you can see the padding has been updated and we can verify this on the right hand side that is the Box model over here so at the top and bottom it is 10 pixels on the left and right it is 30 pixels so guys this is the way that you can use the padding shorthand property as well now guys it is very important to note that we have something called as box size ing property while we use padding now it becomes very important when we provide the width of the element and the padding of the element as well so I'll just remove these lines of code over here that we have already defined let me just save this file now and try reloading this page once again on the browser and let me just provide the border to the second div element as well so I'll simply copy this line of code and paste it inside the div 2 ID over here so as you can see we have provided the border to both the properties in this case now guys let us provide certain space in between both these web elements so over here simply we are going to provide certain line brakes so couple of line braks we can provide so that some blank space is being created in between both these div elements over here now guys what we will do is we will provide the width and padding to the first div element so in this case what we can do is let's say we provide the width as 500 pixels so over here we simply provide 500 pixels as width and let's say we provide the padding as 50 pixels over here so simply we are going to provide 50 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the width as 500 pixels and padding as 50 pixels from all the sides over here but guys if you see the entire width of the diff now is more than 500 pixels that's because we have added additional padding over here on the left and right hand side so when we right click and click on the inspect option over here and check the CSS in this case you can see that the 500 with is being highlighted as the green color over here but the width is more than 500 pixels that's because we have provided this additional padding over here of 50 pixels on the left and the right as well and we also have two pixels border as well so the entire width will be 500 + 50 into 2 + 2 into 2 which is equal to 600 4 so basically the entire width of this particular Dev element has now become 604 pixels which was not the case when we had provided the width as 500 pixels so guys this is the problem when we provide padding and border to a particular web element so basically the padding and the border which is having their own size will be added to the HTML element and the entire width of the HTML element will be increased and displayed to the user so guys basically in order to strictly keep the width as 500 pixels what we can do is we can Define the Box sizing property over here so let us check that with the second div over here so I'll simply copy these lines of code that is withd end padding for which we are going to keep the same values over here let me just save this file now and try reloading this page once again on the browser so as you can see both the elements are having the same width now they are also having the padding and the borders as same the only difference is the background color over here but since we have seen the actual width of this entire dep is more than 500 pixels so in order to strictly keep the width as 500 pixels simply we can say box sizing in this case and the value that we are going to set is border box over here so when we set this border let me just save this file now and try reloading this page once again on the browser now if you see the actual width of the entire diff will be 500 pixels over here here let me just right click and click on the inspect option in this case so as you can see on the right hand side we have the actual width of the content as 396 pixels and then we have 50 pixels left padding and the right padding as well which is equal to 100 so it becomes 496 plus 2 pixels border on the left and the right hand side of the dev element which makes it as 500 pixels as the total width so guys this is the way that you can set the width strictly to this particular value when we are using the padding and the borders for a particular HTML element by using the Box sizing property and the value should be border box if you notice both these div elements are having the same CSS properties the only difference is box sizing which is helping us in order to set the actual width of the HTML element now guys apart from this we had already discussed that margin can have negative values but can padding have negative values no we cannot have negative values for padding and it is not allowed so you have to make note of this while you are implementing margin and padding as per your requirements and to understand the difference between the padding and margin over here you can see that the padding is the space that we have provided inside the div element and inside the border of this div element let's say we provide the margin to the same div element over here and see what is the difference so when we provide margin left over here so in this case we say margin left and let's say we provide 50 pixels as margin left in this case when we save this file now and try reloading this page so as you can see this is the margin property which means the space that is outside of the border of the web element so when you want to provide the space outside of the border of the web element you can use margin and when you want to provide certain space inside of the border of the web element then you can provide the padding property in CSS based on your requirements so now we will see height width and Max width properties in CSS so guys basically the he height and width properties are used to set the height and width of an element inside the web page so this we are going to check with the help of examples as well the height and width properties do not include the padding Borders or margins that we have seen previously so guys whatever padding or margin that you define for a particular HTML element for which you have defined the height and width so those numbers that you add to the padding and margins will be added after the actual height and width numbers that you have already provided so we will check it with the help of examples as well so basically the height and width properties sets the height and width of the area inside the padding border and margin of the element so this you should be knowing while you are implementing these properties in your current Project based on the requirements now guys the max width property is used to set the maximum width of an element so let us move to the vs code in order to see the working of all these properties I'll simply remove the previous lines of code over here from the index.html file and also from the style. CSS file that we had return previously so we have the blank style. CSS file over here in which we are going to Define all the required CSS properties so guys first of all we are going to have a simple div over here with the ID that is div one in this case so we have the div tag with the ID div 1 and let us provide some content over here so simply we will say this is Dev one so let me just save this file now and try reloading this page on the browser so this is a simple statement that is this is div 1 over here and we have not provided any styling for now to this div element now guys let us provide certain styling so what we will do is first of all we will have the background color for this div so simply we can use the div tag or we can also specify the ID that is div one over here so since we do not have any other div element simply we are going to provide the div tag name in this case as the CSS selector now guys let us provide the background color by using the background color property in this case and let us say we have the background color as yellow in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color that is yellow in this case for this particular div element also guys we have certain margin and padding that is provided to the body element over here so simply before this div tag we will provide the body tag as well and what we are going to do is we will keep the margin as zero and padding as well as zero so over here we have set the margin and padding as zero so that we get this background color on the extreme top left over here for this div element let me just save this file now and try reloading this page once again on the browser so as you can see there is no more padding or margin on the top left and the right of the web page now guys by default the width of this particular div element is set in such a way that the entire width of the screen is being taken over here so as you can see from the extreme left to the extreme right the background color is being implemented over here and apart from that the height of this particular Dev is set in such a way that the required content fits into this particular height in this case so guys let us provide a border as well over here to the div element so simply we will provide border of two pixels with solid border style in this case and the Border color will be black let me just save this file now and try reloading this page as you can see the entire screen width is being occupied by this particular div element on the top of this page now guys if you want to provide the width of this particular div element let's say you want to set the width as 500 pixels so simply you can provide the width property over here so when we provide the width property as you can see this is the width CSS property that you can use and simply we can provide 500 pixels over here so we are using the pixels unit you can also use the percentage if you provide 100% the entire width of the screen will be taken and if you provide 50% half of the screen width will be used in order to display this web element so guys over here we have provided 500 pixels for now let me just save this file now and try reloading this page once again on the browser so as you can see now the width of this particular Dev element is restricted to 500 pixels in this case and it is not taking the width of the entire screen over here so guys in this way you can set the width of the particular HTML element over here and if you want to set the height of this web element simply you can use the height property over here so we have the height property and let's say we want 100 pixels as the height of this particular div element let me just save this file now and try reloading this page once again on the browser as you can see the height is now set as the 100 pixels simply you can right click on this element and go to the inspect option in order to check the actual width and height of this element as you can see inside this box model we have this 500 into 100 which means the width is 500 pixels followed by height that is 100 pixels over here and apart from that we also have the two pixels border that is surrounding this particular Dev element now guys we have seen the height and the width properties over here now what is the meaning of Max width property so in some cases what happens is some of the HTML elements width is more than the screen size of the device that the user is using so let's say if we try to resize this browser over here so as you can see when we resize this browser you can see this horizontal scroll bar is appearing now that's because the width of this particular div element is more than the width of this browser in this case so in some cases when you provide 500 pixels as the width of the div element and if the user is viewing this particular HTML element from a mobile device which is having a small screen over here the user will be noticing this horizontal scroll bar which is not a good user experience so guys in order to avoid this horizontal scroll bar we can use the max with property in CSS so what we can do is simply I will comment out this line of code that is having the width property we will keep the height property as 100 pixels and over here we will Define another CSS property that is Max width over here now guys in this case let's say we have the max width as 500 pixels which means maximum the width of the HTML element will go to 500 pixels and it will adjust its with based on the device that the user is using in order to access this particular HTML page so guys let me just save this file now and try reloading this page once again on the browser so on the normal browser you will not see any difference and in this case the width is being set to 500 pixels and not more than 500 pixels but when the user tries to reduce the size of the browser over here so as you can see there is no horizontal scroll bar now so maximum 500 pixels will be allocated to this particular HTML element but when the user reduces the width of the browser as you can see the width of the div element is also decreasing over here and there is no horizontal scroll bar that is being displayed right now so let me just right click over here and click on the inspect option so let us check the Box model in this case so as as you can see 318 * by 100 is the size now where 318 is the width of the div element over here and 100 is the height so as we increase the size of the browser you can see that the width is also increasing So currently it is 39133 3 pixels over here so if we keep on increasing the size the maximum value for the width will be 500 pixels over here so as you can see 500 * by 100 is the size of this particular dep element now so this feature of CSS will help us in order to make the web pages responsive which means that the size of the HTML elements will be adjusted based on the screen size of the device that the user is using and guys this is the way that you can use the mix with property in CSS so now we will complete the exercise on the border margin and padding by using the CSS properties so guys it is very important that you practice on your own while you're learning the Cs say so that you get the better understanding about the different properties that you can use based on your project requirements now we will be following the below steps in order to complete this exercise so as you can see the first step is to create a Dev with 200 pixels height and 50% width with the yellow background color so guys let us complete this first task over here you can also pause this video and practice on your own vs code and try to solve this problem as we go step by step to complete all these five task over here so guys let us move to the VSS code in this case and I'll simply remove the previous lines of code in the HTML file and the CSS file as well now guys over here we are going to define the dep with 200 pixels height and 50% width so in this case simply we are going to have the div tag and over here we are going to generate the random text so simply we are going to type LM and this is the m abbreviation that you can use in order to Simply generate the random text over here so simply we click on this particular Mt abbreviation and we get the random text that is being generated in this case let me just save this file now and try reloading this page on the browser so as you can see this is the div element that is having some random text over here now guys what is the requirement we need to have the width of this particular diff as 50% and height as 200 pixels so simply we are going to go inside the style. CSS file since it is linked to this particular HTML file over here with the help of the link tag in this case so over here inside the style. CSS file we are going to have the tag name that is div and for this div so simply we Define 200 pixel as the value for height property and the width property we are going to Define it as 50% so guys so far we have used the pixel unit in order to define the height and width but we can also use the percentage in order to define the property in terms of the screen size of the device so over here the width of 50% meaning from the entire 100% of the screen width only the 50% that is half of the screen width will be considered in order to display this particular Dev element so let me just save this file now and try reloading this page once again on the browser so as you can see now the text is being displayed over here only in the 50% width of the screen which will be somewhere over here so this we will be able to make out by providing the yellow background color in this case which is the part of the first task over here so guys let us add the background color that is yellow to this div element so simply we will be using the background color CSS property over here and then we will provide the value as yellow in this case let me just save this file now and try reloading this page once again on the browser so as you can see the width is being taken as 50% and the height is 200 pixels over here let us verify that we can simply right click on this Dev element on the web page and go to the inspect option and on the right you can scroll down as you can see 441.66 7 pixels which means it is the 50% of this particular screen size is the width of the div element and the height is defined as 2 200 pixels over here and this is what is being highlighted in green color inside this web page over here so guys this is the way that you can Define the width and height and the background color for a particular HTML element now guys let us move to the second task over here have a black color border for this diff with 5 PX border width so guys basically we are going to have the Border as well so simply we can Define the Border property over here and the first parameter will be the Border width which is 5 pixels as per the task followed by the border style that is solid and by default the color will be black so simply we are going to Define that color as well which is the Border color that is black color let me just save this file now and try reloading this page once again on the browser so as you can see a 5 pixels border is being defined to this div element now guys let us move to the next task over here set margin as 70 pixels from top and bottom and 50 pixels from left and right so guys basically we will be using the margin property in this case in order to define the margins from all the sides so over here inside the style. CSS simply we are going to define the margin shorthand method if we simply provide 70 pixels over here the 70 pixels margin will be provided from all the sides but if you want to provide different margins from Individual sides of the div element then you can provide multiple values for this margin shorthand property so over here the first value will reflect to the top of the dev element the second value will be reflecting the right of the dev element so in this case on the right we want 50 pixels as the margin and Then followed by the bottom margin which will be 70 pixels once again and then followed by the left margin that is 50 pixels once again so guys over here we have the four values from all the sides so guys let me just save this file now and try reloading this page once again on the browser so as you can see from Top we have the 70 pixels margin and from the left we have defined the 50 pixels margin over here and same margins are applied on the bottom and right respectively so if we right click on this div element and click on the inspect option let's see the Box model over here as you can see the margin top it is 70 margin left is 50 margin right is 50 and margin bottom is 70 in this case based on the task that we want to achieve so guys this is the way that we can provide the margin to this particular div element as well now guys let us move to another task we need to set the padding as 30 pixels from all the sides now guys what is the difference between margin and padding so we have seen previously that margin is the space that we provide outside of the border of the HTML element so over here since this is the border that is black in color which is enclosing the yellow background and the content as well the space is being provided outside of this border when we have defined the margin but when we provide padding over here of 30 pixels the space space will be provided in between the content and the Border over here which means the space will be provided inside of the border and that is the only difference so let us check that as well so in this case simply we are going to provide a padding of 30 pixels from all sides so in this case we provide 30 pixels and this padding will be provided to all the sides of the div element so let me just save this file now and try reloading this page once again on the browser so as you can see this is the space inside inside the border that is 30 pixels is being provided from all the sides as the padding so if we right click on this HTML element and click on the inspect option we can also see the padding that is being provided over here so as you can see after this border we have the padding that is 30 that is being provided on all the sides of this particular div element now guys let us move to another task over here update the margin to get the diff in Center so how do we do that here is a hint that is being provided you can use the auto value for the margin so guys previously we had seen whenever we use the width as the CSS property for the HTML element we can use the auto value for the margin in order to get that element at the center of the page so guys I'll simply remove this margin property for now and let me just save this file now and try reloading this page once again on the browser so we don't have any margins for now over here outside of the border now the task is to get the div in the center of the page horizontally so guys how do we do it simply we can provide the margin property over here so we say margin and then we have the value that is Auto in this case now guys the value auto will help us in order to provide the proper margin from left and right side of the div element in such a way that the div element will be displayed at the center of the page horizontally when we have the width that is being defined over here so let me just save this file now and try reloading this page once again on the browser so as you can see the required margin is provided on the left and the right hand side so that the div element is present at the center of the page we can simply right click and go to the inspect option over here in order to check the values of the margin so as you can see it is 1861 167 on the left and on the right as well so this is possible when we provide the margin property with the value auto in this case guys what if we don't provide the width of this particular Dev element so what will happen in this case so simply if we remove the width of this web element over here let me just comment out this particular line of code so we have commented out this with CSS property let me just save this file now and try reloading this page once again on the browser so as you can see since a div element is taking the entire width of the screen we are not able to make out whether the div element is at the center of the page and that is why we should be using the withd property in such a case where we are using margin as Auto over here so when we save this file now and try reloading this page as you can see the width of the dev element is 50% of the screen right now we can also increase the width to 80% which means the width of the div element will be defined as 80% of the screen let me just reload this page once again on the browser so as you can see on the left 10% of the screen width is being left out and on the right as well another 10% of the screen width is left out and the remaining 80% of the width is being occup occupied over here by the div element as we have defined over here so guys let me just change this width to 50% over here as per the task so guys we have completed all the task over here inside the exercise so now we will see Box model in CSS so guys basically in CSS the term Box model is used when talking about design and layouts and this we are going to check with the help of examples as well the CSS Box model is essentially a box that wraps around every HTML element so guys whatever HTML element that you write in your web page will have the CSS Box model that will be applied behind the scenes and it will consist of the various components that is in the sequence we have the content first and then outside the content we will be having the padding that we will be specifying in our CSS file outside of the padding we have the borders and Then followed by the margins from all the four sides and this is the components of the Box model in CSS so guys if you see this is the example of Box model in CSS so first of all we have content in the middle over here and then which is surrounded by the padding element which we specify in the CSS file if there is no padding element that we have specified so this padding will not occur and it will be zero pixels when we see the Box model on the web page apart from that we have the Border as well which surrounds the padding of the web element over here and then followed by the margin from all the four sides in this case and this is the Box model in CSS that every HTML element will be represented when you inspect them on your web page so guys let us check this with the help of example in vs code over here so basically we are going to remove the previous lines of code that we had written from the HTML file as well as the style. CSS file over here so guys we do not have any content right now so basically we are going to have a simple Dev over here so let's say we provide the dev element and then let's say we simply provide a test statement that is this is a test div element so guys basically we have a very simple statement that is this is a test div element over here let me just save this file now and try reloading this page on the browser so as you can see this is the div element that we can see now guys let us provide some styling over here so let's say we provide a background color to this particular div element so we will be providing the background color property inside the style. CSS file over here so because this particular file is being linked to the HTML file by using the link tag in this case so basically we are going to provide the tag name that is div in this case and then inside this we are going to provide the background color property so let's say we want the background color to be yellow in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have a background color that is yellow over here now guys let us say we want to see the Box model for this particular Dev element so what we can do is simply we have to right click on this HTML element over here and as you can see we have this inspect option so when we click on this inspect option on the right hand side you can see the CSS properties that are being provided to this div element over here and when you scroll down you can see that this is the Box model for this particular HTML element So currently we have only the content of this div that is this is a test div element and it is being highlighted in green color right now when we get the cursor on this content over here and as you can see this content is being surrounded by the padding which is currently not being defined and Then followed by the border and then we also have the margin in this case so guys let us provide all these components in the style. CSS file one at a time over here so what we will do is let's say we provide padding in this case of 5 pixels from all the four sides so let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the padding to this content and the padding can be reflected on this background color over here we have certain spacing in between the border of the background color and the content itself so when we check the Box model right now as you can see for the padding part we are getting the five pixels over here as the number from all the four sides and it is being highlighted as light green color right now on the UI as well that is wrapping the content so basically this is the cont content that is being highlighted in light green color followed by the padding which is now getting highlighted now guys let us provide the Border as well for this particular HTML element so let's say we provide the Border Shand property and in this case we provide five pixels solid border which is going to be in the black color over here so we have provided five pixels solid border type and the Border color is black so let me just save this file now and try reloading this page once again on the browser so as you can see we have the border that is of the width 5 pixels in this case so let me just show you the Box model over here as you can see the border is also getting highlighted now and it is being represented on the Box model as well so this is the way that you can apply the border and check in the Box model in this case now guys the last thing that is margin needs to be applied to this particular HTML element so let us apply that as well so over here we will provide margin and then 10 pixels of margin from all the four sides so let me just save this file now and try reloading this page once again on the browser so as you can see if you scroll down we have the margin of 10 pixels from all the four sides so this is the brown color that we can see that is at the outside of the HTML element which represents the margin of the HTML element so guys this is the sequence that you should remember whenever you are going to study more about the Box model in CSS first of all there is a Content as you can see this is the content of the HTML element which is is then wrapped by the padding property of the HTML element which is then again wrapped by the border property of the HTML element and Then followed by wrapping by the margin property of the HTML element over here so it is very important that you understand the sequence of the Box model over here so that you can distinguish between the margins and padding so basically the padding comes inside the border and the margin comes outside of the borders over here as far as Box model is concerned now guys when we provide the width and height at attributes basically these attributes will be applied to the content of the HTML element and not on the other attributes as you can see the padding borders and margins of the HTML element so let us apply the width and height attributes for this particular HTML element over here currently if you see inside the Box model the width is 855 followed by the height that is 18 pixels over here so what if we provide the width of 500 pixels in this case so let us provide that as well so over here when we provide width s 500 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see the width of the div element is being reduced now to 500 pixels let us check the Box model over here so it is 500 multili by 18 which means only the content of this HTML element is 500 pixels and not the width of the entire Box model over here so 500 is the width of the content followed by the padding which is again 5 pixels from the left and 5 pixels from the right which makes a total width of 10 pixels over here again we have the border of total 10 pixels as far as width is concerned and the width of the margin will be 20 pixels that is 10 pixels on the left and 10 pixels on the right so basically the entire width of the Box model over here will be 540 pixels whereas the width that we had provided was 500 pixels and this will only reflect to the content of this div element that you can see over here which is a simple text in this case so guys you should remember this whenever you are going to apply the width and height attributes as well so if we provide the height property as well over here we need to provide height of let's say 100 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see now we have 500 multiplied by 100 which is the width and height of the content of this HTML element which is getting highlighted with the light green color now guys in order to make the entire Box model have the width of 500 pixels and height of 100 pixels what we can do is we can provide the Box sizing property so over here we have something called as box sizing property in this case so this is the property that we can use with the value that is box border so guys this will tell the CSS in order to have the width and height that is being provided inside this diff tag over here to be appli to the entire Box model so let me just save this file now and try reloading this page once again on the browser so now if you see we have 480 multiplied by 80 as the width and height of the content over here so basically the content width and height will be adjusted after providing the required spacing for the padding borders and the margins as well if they are provided inside the CSS file so guys basically this is the way in order to provide the entire width and height that is being specified over here inside the CSS to the Box model of the HTML element so simply you can use the Box sizing property with the value that is border box over here so now we will see outline property in CSS so guys basically an outline is a line drawn outside of the element's border so whatever border is being provided to the HTML element you can provide the outline which will appear outside of the border of that particular HTML element and we will check this with the help of examples as well with the help of different outline properties so the very first outline property is the outline style which is the required property over here so guys let us move to the vs code in this case and simply I'm going to remove the previous lines of code that we had written over here and we will have the dev element with a sample text that is lorm which is the Mt abbreviation over here that will help us in order to generate the random text in this case apart from that in the style. CSS file I'll simply remove all the lines of code over here so let me just save these files now and try reloading this page on the browser so as you can see we have the random text that is getting generated and being displayed on the web page now guys what we need to check is the border of this particular HTML element needs to be implemented over here and then after that we are going to provide the outline property as well so the very first property in the style. CSS that we are going to apply is the background color over here so let's say we have the background color and the color is aqua in this case and then apart from this let us say we have the border which is going to be 5 pixels and the Border style will be solid in this case with the color that is black over here so guys we have a border of five pixels that is of the solid style in this case and the color is black so let me just save this file now and try reloading this page once again on the browser so as you can see for this Dev element we have the back round color that is aqua and we have the Border color that is black with 5 pixels width now guys simply we can use the outline style property in order to provide the outline to this particular HTML element so let us check that as well so over here we will provide outline in this case and then as you can see these are the suggestions that is being provided by the vs code over here we will be using the outline style and you can see multiple values in this case for the outline style property so we have dashed value or the dotted double Groove hidden inherit and multiple other values as well so let's say we want to provide the dotted outline style so over here we are going to apply the dotted outline style let me just save this file now and try reloading this page once again on the browser as you can see there is a dotted outline that is getting displayed outside of the border that we had implemented now guys let us change the Border color so that we can identify the outline that is wrapping the border so over here what we will do is instead of having the black color let's say we provide red color border so let me just save this file now and try reloading this page so as you can see after this red color we have the dotted outline over here and that is the meaning of the outline which we can provide outside of the border of the HTML element now guys let us move to another property so we have only provided the outline style so far let us provide the outline width as well of five pixels in this case so when we provide the outline width in this case so basically the width of the outline will be increased and it will be set to five pixels so let me just save this file now and try reloading this page once again on the browser so as you can see this is the dotted outline of 5 pixels width that we have provided outside of the border of the HTML element now guys let us move to another attribute we have something called as outline color as well so by default the color of the outline is black color let us provide the outline color in the CSS file so in this case we will provide outline color property and let's say we want to provide the outline color as blue color in this case so let me just save this file now and try reloading this page once again on the browser so as you can see this is the blue color outline that is getting displayed over here outside of the red color border now guys apart from this we can also use the outline shorthand property so similar to The Border property that we have used over here this is the Border shorthand property we can provide the values of all these outline properties inside the outline shorthand property so simply I'm going to comment out these lines of code over here let me just save this file now and try reloading this page once again on the browser so as you can see there is no outline for now so what we are going to do is simply we are going to use the outline shorthand property in this case and one by one we are going to provide all these values so first of all we are going to provide the outline withd so let's say we have five pixels outline over here and then let's say instead of the dotted style we want to have the solid style of the outline so we provide the solid outline style and Then followed by the outline color so let's say we provide the outline color is blue in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the outline of blue color now which is wrapping the border of red color so this outline style is being set as the solid it outline and that is why you can see the style of the outline is same as that of the style of the border the only difference is the color over here we can change the border and the outline with as well in order to identify the outline and Border colors more clearly so we have updated the border and the outline width as 10 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see this is the border which is having the red color and then we have the blue color outline in in this case now guys apart from this we have something called as outline offset as well which means what should be the space in between the border and the outline so by default we don't have any space in this case in between the outline and the Border colors over here so what if we want certain space let's say we want two pixels of space in between the outline and the border so what we can do is simply we have to provide the outline offset property inside our CSS file so over here we simply have to provide the two pixels withd so that there is a space in between the outline and the border for a particular HTML element so let me just save this file now and try reloading this page once again on the browser so as you can see there is a white space you can see in between the red and the blue color which are representing the border and the outline respectively let us increase the space in between the outline and the bord so over here let's say we provide 5 pixels as the outline offset so let me just save this file now and try reloading this page once again on the browser so as you can see there's a space in between the border and the outline now and that is how the outline offset will work in order to provide certain spacing in between the border and the outline of the HTML element based on your requirements guys in this way you can easily use the properties of the outline over here either by using the outline short end property or the individual properties of the outlines so now we will see text color and Alignment property in CSS so guys basically the color property is used to set the color of the text and apart from this the text align property is used to set the horizontal alignment of a text so we will check this with the help of examples as well in vs code so the very first property that we are going to see related to the text in HTML is the color property so guys let us move to the vs code over here and I'll simply remove the previous lines of code in this case case and basically we are going to have a simple heading that is with the tag H1 over here and we will say this is heading one so basically we have the statement that is this is heading one inside the H1 heading tag over here let me just save this file now and we will also clear the lines of code that we had return previously inside the style. CSS so let me just save these files now and try reloading this page on the browser so as you can see we have this is heading one over here now guys by default the color of this text is black color so what if we want to provide the different text color to this heading so let me just go to the style. CSS file over here since the HTML file is linked to the style. CSS by using the link tag in this case so guys over here we will provide the tag name that is H1 and simply we are going to provide the color property over here so as you can see this is the property that we are going to use and we can provide any color in this case in order to be reflected s the text color for this heading that is H1 over here so guys what we will do is simply we are going to provide the color that is red color in this case let me just save this file now and try reloading this page once again on the browser so as you can see now the color of this heading is being updated as red color so this is the way that we can use the color property in order to update the text color for a specific HTML element now guys apart from this you can also use the hex color or the RGB values as well for the color value so let's say we want to provide the hex value over here so we provide hashtag followed by the red color component that is double F and then the green color component that is 0 0 and then we have the blue color component that is 0 0 over here so this will be the red color what if we want to mix the red and green color over here so simply we have to provide the 2 * f for the green component as well so it will be updated to this particular color color that is the yellow color over here which is the mixture of red color and the green color so let me just save this file now and try reloading this page so as you can see this is the yellow color that is being displayed on the UI it is not going so well with the white color background over here so let me just change the background color as well so in this case we will provide the background color as black in this case let me just save this file now and try reloading this page so as you can see we have the background color is black and the text color is yellow now so guys this is the way that you can define the color value using the hex value or the color name or the RGB values as well now guys apart from this in order to align the text you can use the text align property as well so by default over here as you can see on the UI the text is being aligned on the left hand side let's say we want this text to be displayed at the center over here of this particular screen so what we can do is simply we can use the text align property so over here we have text hyphen align so this is the text align property that we will be using and it is having multiple values so as you can see Center is the value we also have end justify left right so basically by default this is the value that is left value for the text align which is getting applied on all the HTML elements so over here let's say we want the text to be displayed at the center so simply we provide the center value to the text align property let me just save this file now and try reloading this page one once again on the browser so as you can see the text is getting displayed at the center of the screen now with the help of the text align property similarly if we want this text to be displayed on the right hand side of the screen so what we can do is instead of having the center value we can have the right value over here let me just save this file now and try reloading this page once again on the browser so as you can see we are having this particular text on the right side of the browser so this is the way that the text align property works for a particular text element which is the part of the HTML element now guys apart from this we also have something called as text align last so basically this reflects the alignment of the last line of a particular paragraph so let us check that as well so guys in order to understand this we need to have a paragraph which is having multiple lines over here so let's say we have the P tag we can also have the text inside the Dev tag as well and over here we are going to Simply generate the random text by using the LM M abbreviation so over here we have the simple random text that is getting generated let me just save this file now and try reloading this page so as you can see this is the text that is generated inside the paragraph tag over here now guys what is the meaning of the text align last property so basically the last line over here inside the paragraph will be aligned based on the value that we provide to this text align last property so let us check that as well so over here since we have used used the paragraph tag in the style. CSS property we will be defining the P tag over here and for this tag we are going to provide the text align last property so as you can see this is the property that we are going to use and let's say we want the last line to be at the center of the screen so simply we can provide the center apart from the center we also have many other values as you can see we have justify left right and so on so basically we are going to apply the center value in this case let me just save this file now and try reloading this page once again on the browser so as you can see the last line of this paragraph is now getting displayed at the center of the screen now guys if we want to display it on the right hand side of the screen so what we can do is simply we can provide the right value to this property over here let me just save this file now and try reloading this page so as you can see the last line of the paragraph is now getting displayed on the right of the screen and apart from from that we also have something called as justify value so let us check what happens let me just save this file now and try reloading this page once again on the browser so as you can see every word on this last line is now getting separated with the help of equal spaces in between them so guys if you want the last line of the paragraph to be displayed in this way you can use the justify value for the text align last property inside the CSS file so this is the working of another text align property that you can apply for the last line of a particular paragraph or the div element now guys apart from this we have something called as direction as well so basically this will Define the direction of text which will be displayed on the browser so by default it will be left to right so over here as you can see the direction of the text is from left to right let us check this with another example over here so let's say we have another div tag in this case so simply we are going to have the div tag and we will say this is a test div element so guys basically we have a simple this is a test div element over here let me just save this file now and try reloading this page once again on the browser so as you can see this is a Dev element now guys what is the meaning of Direction CSS property so let us provide that property in the style. CSS file over here so inside this file we are going to provide the diff tag in this case and simply we are going to provide the direction CSS property so guys basically we have the values that is LTR which stands for left to right which is the default value which means the letters will be displayed from left to right and that is the standard way in order to display the letters and apart from that we also have other value that is RTL which stands for right to left so guys let us check what happens in this case so let me just save this file now and try reloading this page once again on the browser so as you can see now the text is getting displayed on the right but in order to reverse this text we have another property so we can use that as well so we have the property that is unic code hyphen BD so guys over here we are going to use this property and we say the value that is BD override so in this case what will happen is the letters will be displayed from the right to left Direction so let me just save this file now and try reloading this page once again on the browser so now if you see the letters are reversed so basically you need to read from the right to the left in order to understand the statement that is being provided inside this Dev element so guys in this way if you want to reverse the direction of the letters that are being displayed on the UI you can use the combination of these two CSS properties that is direction should be RTL and the Unicode BD should be BD hyphen override in this case so Guys these are certain CSS properties as far as the text color and the text alignment is concerned so now we will see text decor oration property in CSS so guys basically the text decoration property is used to format the text using CSS and this we are going to check with the help of examples as well there are multiple properties inside the text decoration and the first property that we are going to use is the text decoration line so guys let us check this with the help of example and vs code over here so I'll simply remove the previous lines of code from the index.html file and also from the style. CSS file F over here basically we have a simple statement that is this is a test div element let me just save this file now and try reloading this page on the browser so as you can see this is the div tag inside which we have the statement that is this is a test div element now guys what is the meaning of the text decoration line so over here we have the CSS property that we can Define inside the style. CSS file so let us move to the style. CSS file here so guys basically this is the property that we are going to use and you can see there are multiple values for this text decoration line such as line through and then we have over line underline and none so guys basically the value that is underline will help us in order to underline this particular text inside the dev element so let us check that with the help of the underline value so let me just save this file now and try reloading this page on the browser so as you can see the text is getting underlined over here so the text decoration line helps us in order to provide a line to the text in this case apart from underline we have other values as well so let us check what is the meaning of line through over here so let me just save this file now and try reloading this page once again on the browser so it will be kind of a strike through in this case where the text will be displayed behind the strike through over here with the help of the line through value apart from this we also have other value as well so let us check that so we have something called as overline over here so let me just save this this file now and try reloading this page once again on the browser so similar to underline a line will be drawn above the text with the help of the overline value for the text decoration line so guys this is the way that we can provide the different values for the text decoration line over here simply we will provide the value that is underline so let us reload this page once again so the text is getting underlined now inside this div element now guys apart from this we can also have the text decoration color so let us apply the color to this underline that we have provided to this Dev element so inside the Dev tag simply we are going to provide text decoration hyphen color so this is the property that we are going to use and let us say we want to provide red color as the color for the underline so let me just save this file now and try reloading this page once again on the browser so as you can see the underline is having the red color now with the help of the text decoration color apart from that we also have something called as text decoration style so let us check what will be the values of the text decoration style over here so we simply have to provide text decoration hyphen style in this case so this is the CSS property and as you can see we have multiple values over here by default the value will be solid in this case so let us provide the dashed value to the text decoration style let me just save this file now and try reloading this page once again on the browser so this is the text decoration style that is having the dashed value in this case apart from that we can also provide the dotted value as well so let us check how it looks like so now the underline is getting represented with the help of the dots for this particular HTML element now guys apart from that we have something called as text decoration thickness so basically you can provide the width of the underline that is being provided to the HTML element so we can use this thickness property in order to provide the width of the underline so over here we have the text decoration thickness in this case so this is the CSS property that we will be using and let's say we provide 5 pixels as the thickness for this underline let me just save this file now and try reloading this page once again on the browser so as you can see this is the five pixels dotted underline that we can see for this HTML element let us change the style to the solid value so that it looks more decent over here so when we change the value of the text decoration style in this case as solid let me just save this file now and try reloading this page as you can see this is the solid underline with the color red and having the width as 5 pixels with the help of the text decoration thickness CSS property so guys in this way you can easily use all these text decoration properties based on your requirements and apart from that you can also provide the simple text decoration CSS property that is the shorthand property in order to provide the values for all these CSS properties so guys let us check check that as well so I'll simply remove all these lines of code over here and simply let me just save this file now and try reloading this page once again on the browser so there is no text decoration that is being provided right now so what we can do is simply we can provide the text decoration shorthand property in this case and simply we are going to provide all these values one at a time over here so first of all the text decoration line should be underline followed by the space character and then the color of the underline should be red color followed by the style which should be the solid style in this case and let's say we want the text decoration thickness to be 7 pixels so simply we will provide the seven pixels over here so guys this is the sequence that we can provide inside the text decoration shorthand property that will allow us with the help of a single line of code provide all the text decoration CSS properties now let me just save this file now and try reloading this page once again on the browser so as you can see there is a underline that is being provided to this HTML element based on the text decoration values that we have provided over here now instead of underline let us say we want it to be the overline text decoration in this case so simply instead of underline we will say overline over here as the value for the text decoration line so let me just save this file now and try reloading this page once again on the browser so as you can see we have the over line now for this particular HTML element so guys this is the way that you can use the different text decoration properties and they are well used inside the HTML and the CSS code based on your requirements to be displayed on the web page now guys apart from this as you know that all the links in HTML are underlined by default so basically it is not a good practice in order to manually underline a particular text value inside the web page since a default way of providing the links to HTML is having the underline to that particular text which is the hyperlink but sometimes you will see that the links are styled with no underline and how that is done with the help of text decoration value that is set to none and it is used to remove the underline from links so guys let us check that as well with the help of example over here so what we will do is let us have the anchor tag over here which will help us in order to provide a link so over here we have a tag followed by href inside which we are going to provide the URL of a specific web page so over here we don't want it to be redirected to any other web page so we will simply provide the hash character over here and simply we will say click here in this case so when we say click here this is the text which will appear as a link on our web page so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the link that is getting displayed and by default there's a underline as you can see with the help of a blue color over here now guys let us say we don't want this underline to will be displayed for this particular link so what we can do is simply inside the style. CSS file for this a tag we will Define the text decoration so over here we provide the a tag in this case and inside this we will say text decoration over here and simply for this text decoration CSS property we will assign the value that is none in this case so guys the meaning of none over here is basically no text decoration will be applied to this tag that is the a tag in this case so guys let me just save this file now and try reloading this page once again on the browser before reloading you can see that there is an underline for this click here Link in this case but when we reload this page as you can see there is no underline now for this particular link so guys this is the way that you can remove the underline from all the links on your web page by using the text decoration which should be having the value as none that will remove all the underlines from the link which is being displayed by default so now we will see TT text transformation property in CSS so guys basically the text transform property is used to specify the uppercase and the lowercase letters in a text so guys let us check this with the help of examples in vs code over here so simply I'll remove the previous lines of code that we had written in the HTML and the CSS file over here and in the HTML file simply we are going to have a tag which is representing the heading two with the help of h2 tag in this case and we will say the this is heading two so guys basically we have simply defined the text that is this is heading two over here let me just save this file now and try reloading this page on the browser so as you can see we have the h2 tag with the text that is this is heading to now guys let us say we want all the characters that is all the letters inside this heading to be uppercase letters so what we can do is simply inside the style. CSS file we have to define the tag in this case we will Define h2 tag over here and simply we have the text transform property which is a CSS property that can help us in order to provide the uppercase or the lowercase letters for the text inside the HTML elements so as you can see it has multiple values we have capitalize then we have lowercase we have none and then uppercase so guys by default the none value is being applied to all the HTML elements but in case we want all the letters to be uppercase simply we can provide the uppercase value over here so let me just save this file now and try reloading this page once again on the browser so as you can see all the characters over here in this case are uppercase and this is the way that we can use the text transform property with the help of the value that is uppercase in this case now guys apart from this let us say we want all the letters to be lower case so what we can do is let's say we have another paragraph over here so simply inside the HTML we will say P tag in this case and we type this this is a simple paragraph So guys if you notice we have typed all the letters in the uppercase over here so that we can see how the lowercase value for the text transform will work for this paragraph tag so let me just save this file now and try reloading this page once again on the browser so as you can see by default all the letters are uppercase over here so what we can do is let's say we want all the letters to be lowercase for this P tag so simply we will provide the P tag over here inside this tag CSS property and again we will be using the text transform property in this case and this time we will be using the value as lower case so when we say lower case all the letters for this text inside the HTML element that is the P tag will be converted to lower case let me just save this file now and try reloading this page once again on the browser so as you can see all the letters are being displayed as lowercase letters now guys apart from that we have another value that is capitalized so let us check that as well so inside the HTML file in this case let us say we have the div element and this time we will type all the letters in lower case so simply we will say this is a test Dev element so guys over here all the letters are in lower case so this is a test Dev element is the text that we have written inside the dev element let me just save this file now and try reloading this page once again on the browser so as you can see all the letters for this div element is in lower case now so what we can do is simply we come to the style. CSS file and for the div tag we want to apply the text transform property so over here we say text transform and this time we select capitalize value so guys what will happen when we say capitalize as the value for the text transform let us check that so let me just save this file now and try reloading this page once again on the browser so as you can see the first letter of all the words are now being converted to the uppercase letter now so the word that is this is having the first letter as uppercase and then we have this I as the uppercase then we have a as uppercase t is also uppercase and then this D inside the dev is also uppercase and the last word that is element is also having the e letter as uppercase letter over here so guys this is the meaning of capitalize value for the text transform which means the first letter in all the words will be converted to the uppercase letter and it will be displayed on the web page based on your requirements so guys we have seen all the values of the text to transform this is the uppercase value then we have the lowercase value and then we have the capitalized value and in this way you can set the text transform value based on your requirements so now we will see text spacing property in CSS so guys basically there are multiple text spacing properties in CSS that we can use and we are going to check this with the help of examples as well so the very first property is text indent which will help us to specify the indentation of the first line of the text so guys let us check this with the help of example in VSS code so in the vs code we will remove the previous lines of code that we had return previously in the HTML file as well as the CSS file we will remove all the content so guys in this case what we are going to do is we are simply going to have a Dev element over here and inside this Dev element we will simply generate the text with the help of the lurm m at abbreviation and then let's generate multiple sentences so over here I'll just multiplied by two so that random text is getting generated over here now guys let me just save this file now and try reloading this page on the browser so as you can see there are multiple lines inside this div HTML element now guys what we will do is we will be using the text indent property and check how we can do the indentation of the first line of of the text so basically this is the first line inside this entire text over here and there will be certain indent that will be provided on this first line by indent we mean there will be some space that will be provided before the start of the statement over here so let us check that in vs code so over here inside the style. CSS file we will provide the div HTML element and simply we are going to say text hyphen indent in this case so guys basically we are going going to provide let's say 20 pixels of text indent over here so this is the space that will be provided for the first line of the entire text so let me just save this file now and try reloading this page on the browser once again so as you can see this is the 20 pixels text indent that is provided over here let us increase the indent to 50 pixels so that we can see it more clearly that some kind of indentation is provided on the first line let me just save this file now and try reloading this page once again on the browser so as you can see this is the 50 pixels text indent that is being provided which helps us in order to provide certain spacing for the first line of the entire text in this HTML element so guys in this way the text inent property will work in CSS now let us move to another property that is letter spacing so guys basically there is a default spacing that is being used over here in between each character that is being displayed in inside this HTML element so we can update that spacing with the help of the letter spacing which helps us to specify the space between the characters in a text so let us check that as well so inside the CSS file we will provide letter spacing DSS property so this is the property that we are looking for and let's say we provide five pixels of letter spacing so let us check what happens over here so let me just save this file now and try reloading this page once again on the browser so as you can see we have five pixels of spacing in between the characters that are present inside this text and that is how the letter spacing will work so in case you want certain spacing to be provided apart from the default spacing that is provided to the text we can use the letter spacing over here let us reduce the letter spacing to two pixels let me just save this file now and try reloading this page once again on the browser so as you can see the two pixels letter spacing helps us in order to read the text properly so you can use it based on your requirements now let us move to another property over here so we have something called as line height in this case which will specify The Space Between the Lines so guys basically the letter spacing helps us in order to provide the space in between the characters but what if we want to provide the spacing in between the lines over here so as you can see there's a spacing in between the first line and the second line over here which is currently being handled by the line height property and this is the property we are going to check so guys let us provide this property as well inside the CSS file so over here we will provide line hyphen height property in this case and let us provide five pixels s the line height over here let us check what will happen so let me just save this file now and try reloading this page once again on the browser so as you can see now the line height is very small since we have provided five pixels the lines are overlapping each other so let us increase the line height to let's say 20 pixels in this case so over here we will provide 20 pixels as the line height let me just save this file now and try reloading this page once again on the browser so as you can see the line height has increased so if we comment out this line over here so let me just comment out this line and check the line height once again so guys this is the default line height that is being provided on the UI and the moment we provide the line height over here with some number so let's say we increase the line height to 25 pixels in this case so when we provide 25 pixels over here let me just save this file now and before reloading you will notice that the space in between the corresponding lines will increase so when we reload this page as you can see the space in between the lines are increased over here now let us move to another text spacing property and we have something called as word spacing in this case which specify the space between the words in a text so guys basically there are spaces in between the multiple words over here that is being provided inside this text how we can increase or decrease that space we can do so by using the word spacing over here so let me provide that word spacing CSS property as well so in this case we provide word spacing and let's say we provide the spacing of 10 pixels in this case so spaces in between the words of the text should be set to 10 pixels in this case let me just save this file now and when we reload this page you you will notice that the space in between the words will increase so when we reload as you can see the width of this space has increased over here in between the words with the help of the word spacing CSS property so Guys these are some of the text spacing properties that you can use based on your requirements so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is text Shadow property in CSS so stay tuned so now we will see text Shadow property in CSS so guys basically the text Shadow property adds the shadow to the text that is present inside the HTML element and this we are going to check with the help of examples as well and this is the syntax that we will be using that is text Shadow property and then we have the horizontal and the vertical measurements to be provided where the shadow will appear over here and then followed by the optional color value as well and apart from that we will also see some other attributes that we can use inside the text Shadow property so guys let us check this with the help of example in vs code over here so basically I'm going to remove the previous lines of code that we had written in the HTML file and the CSS file as well and now we are simply going to have a simple paragraph over here using the P tag inside the HTML and we will say this is a paragraph So guys we have a very simple statement that is this is a paragraph in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have this is a paragraph now guys what if we want to provide the text Shadow to this paragraph over here so let us check by using the text Shadow CSS property so inside the style. CSS we will be using the P tag in this case since we have provided the text inside the paragraph tag over here and then we will say textt shadow so guys basically this is the property that is text hyphen shadow that we will be using and for this property we will be providing the horizontal and vertical measurement is 2 pixels and Then followed by space and then vertical measurement as 2 pixels over here let me just save this file now and let us check what happens when we provide the text Shadow property with these values so let me just reload this page once again on the browser so as you can see there's a shed that is being provided to this text behind this particular text over here with the measurements that is 2 pixels at the horizontal and two pixels at the vertical side so guys in this way you can provide the text Shadow over here now guys this particular Shadow is confusing us and it is not helping us to read the text properly so what we will do is we will color the shadow over here so after the measurements that we have provided simply we can provide the color for the shadow so let's say we provide the color as red in this this case let me just save this file now and try reloading this page once again on the browser so as you can see there is a red color for the shadow that is being provided over here so in this way we can also provide the color to the shadow in this case guys what if we provide zero pixels for the horizontal and vertical directions so let us check that as well so when we provide Zer pixels of measurements to the text Shadow let me just save this file now and try reloading this page once again on the browser as you can see the shadow is just behind the actual text over here and this is the reason we won't be able to see the shadow for this particular text in this case and that is why we provide certain horizontal and vertical measurements over here so let us provide that as well this time let us provide one pixels of horizontal and vertical measurements in this case let me just save this file now and try reloading this page so as you can see there is a red color shadow that is being displayed behind the scenes now guys there is something called as blur effect that you can provide to this text Shadow over here so how we can provide the blur effect so after the vertical and horizontal measurements that we have provided simply we can provide another measurement over here that will reflect the blur effect so let's say we provide four pixels over here as the measurement let me just save this file now and try reloading this page once again on the browser so as you can see this is the blur effect on the shadow that we have provided behind this text so guys basically this third measurement is used in order to blur the shadow that is being displayed with the help of this color over here so let us increase the horizontal and vertical measurements over here as well to see how it will look like on the UI let me just save this file now and try reloading this page once again on the browser so as you can see the horizontal and vertical measurements has increased the size of the Shadow as well and this is the blur effect that you can provide in order to make the text more readable and if we provide the measurements as 0 pixels over here so the shadow will be just behind the text but it will be displayed since we have provided the measurements for the blur effect over here so let me just save this file now and try reloading this page once again on the browser so as you can see just behind the actual text we are also getting the red color shadow but with a blur effect which is making this text look more decent over here on the UI so guys in this way you can provide the shadow to the text based on your requirements now let us change the color of this text to White White and the shadow color to Black in this case so let us check that as well what we will do is we will provide the color as white color over here and instead of red color for the text Shadow we will provide black color in this case let me just save this file now and try reloading this page once again on the browser so as you can see this is the white color text with a black color shadow in this case and this is how it will look like and let us do the reverse of this so what will happen when we provide the col color as black and the text Shadow as white color in this case so when we do that but since we have the background as white color so you won't be able to see the effect properly so let us check that as well I'll save this file now and try reloading this page so as you can see the white shadow is not that visible over here let us provide certain background color in this case as well so when we provide the background color of let's say gray color over here so let me just save this file now and try reloading this page so as you can see to some extent there is a white color behind this black color text So based on your requirements you can choose the color of the text as well as of the shadow in order to display the text on the screen comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is fonts in CSS so stay tuned so now we will see fonts in CSS so guys basically there are multiple properties related to fonts in CSS and this we are going to check with the help of examples as well so basically the first property is the font family which will help us in order to specify the font of a text so guys let us check this with the help of example in vs code over here so simply I'm going to remove the previous line of code that we had return from the HTML and the CSS files as well so in the HTML file we are going to have the div element in this case and let us generate some random text over here so as you can see we have generated the random text using the lurm M abbreviation let me just save this file now and try reloading this page on the browser so as you can see this is the text that we have written inside our Dev element now guys this is the default font family over here we have not provided any font family in our external CSS file so how do we provide the font family in the style. CSS file over here so simply we are going to go inside the style. CSS file and for the div element we are going to set the font family in this case now guys when we provide the font family property as you can see there are multiple values in this case to be provided as the font family now guys what is the meaning of these multiple values that are separated by comma so over here let us say we want to provide the aial font family so when we select this as you can see the first font family is aial and Then followed by comma we have something called as helvetica and then we have sense s so guys basically this is nothing but a fallback mechanism that will work in such a way that first of all the web browser will check whether the aial font family is being installed locally on that particular browser and if yes then the text will be applied this particular font family and if not then the helvetica will be checked whether it is is present or not and if it is present then helvetica will be provided and if this is also not present then s siif is the generic font family name that will be applied which is having the group of different values for the font family over here so guys basically the last name for the font family CSS property will be the generic font family so as you can see it specifies a prioritized list of font family names or generic family names so some of the browser versions might not have the first or the the second font family value and this is the fallback mechanism that is being used over here now guys let us check how this font family will be displayed on the UI so let me just save this file now and try reloading this page on the browser so as you can see the font has been updated now with the help of the font family CSS property similarly if we provide some other font family over here so let's say we provide Times New Roman font family in this case so first of all this Times New Roman will be checked whether the browser is having this particular font family if not then this times font family will be checked and if this is also not present then the siif generic family will be applied to the text over here so guys let me just save this file now and try reloading this page before reloading you will be seeing that the font family will be updated over here to Times New Roman so when we reload this page as you can see this is the text that is being displayed with the font family of Times New Roman over here let us update to some other font Family Value in this case so let us select Verana over here so let me just save this file now and try reloading this page once again on the browser so as you can see the font family has been updated over here and this is how you can apply the font family to your text based on your requirements now guys let us move to another property over here so we have something called as font style in this case which will specify whether the text needs to be displayed as it so guys let us check that as well so over here simply we can provide font style CSS property and for this style we have multiple values that is italic or normal or obl so guys basically by default we have the normal value so let us see how the text will be displayed when we provide the value as italic for font family CSS property so let me just save this file now and try reloading this page once again on the browser as you can see the value of ITC is being provided over here as the font style CSS property now guys let us move to another CSS property we have something called as font weight over here so let us check that as well which will help us in order to specify the weight of the font so guys over here simply we will say font weight property and we have multiple numbers that we can provide also we can provide the value that is bold over here or Bolder or lighter so by default we have the value that is normal so what if we provide the Bold value in this case let me just save this file now and try reloading this page once again on the browser so as you can see this is the meaning of bold font weight in this case and based on your requirements if you want to display the text in this way you can provide the font weight over here now guys let us move to another property we have something called as font size in this case which sets the size of the text and we can use the various units which is pixels and EM over here so guys let us check this with the help of example in vs code so let us have another paragraph in this case so we will have the P tag over here and then simply we will say this is a paragraph So guys we are going to apply the font size property on this paragraph let me just save this file now and try reloading this page once again on the browser so as you can see this is a paragraph text is getting displayed so guys how do we provide the font size property to this paragraph so simply we are going to come in this CSS file we are going to provide the P Tex and we are going to say font size in this case so guys by default the font size is 16 pixels on most of the browsers and let's say we want to provide 22 pixels as font size so let me just save this file now and try reloading this page once again on the browser so as you can see the size of this particular font has increased to 22 pixels let us inspect this element so when we right click on this HTML element and click on the inspect option you will be seeing all the CSS properties that are being provided to this paragraph tag over here when we uncheck this font size as you can see this is the default font size for the paragraph tag and when we check it with the 22 pixels value the text is getting displayed with the help of font size of 22 pixels if we increase the size to 26 pixels so over here when we change it to 26 you will notice on the UI that the size will increase over here so when we make it as 26 pixels as you can see the size of the paragraph has increased more so in this way you can provide the various font size to the text let me just reload this page once again on the browser so so that the changes that we have made on the CSS file is getting reflected on the page and guys apart from this we have something called as em unit as well so basically 1 em is equal to the current font size and by default the current font size that is the text size in the browsers is 16 pixels so when we provide 1 em as the font size over here it will be the default font size of the browser so let us check that as well we provide 1 em as the font size in this case let me just save this file now and try reloading this page so as you can see this is by default 16 pixels over here if you want to double this size that is 32 pixels simply we can provide 2 em in this case so let me just save this file now and try reloading this page once again on the browser so this is the 32 pixels font size that is getting displayed over here now guys what if we want to make the size as 28 pixels so simply we can come to calculator over here and for this 28 pixels we are going to divide it by 16 since 1 em is equal to 16 pixels so we need to get a number that is corresponding to the EM unit for which the pixels unit is 28 so let me just check that as well so it is 1.75 em so guys basically the EM unit also allows you to provide the numbers in decimal so let us check this as well when we provide 1.75 em over here what will happen so we have provided 1.75 em let me just save this file now and try reloading this page once again on the browser so as you can see the size has been updated to 1.75 Em which is equivalent to 28 pixels over here and if we want to make it as 24 pixels simply we will say 1.5 Em which will correspond to the 24 pixels if you calculate this so when we say 24 ided 16 it will give us 1.5 s the EM unit so guys let me just save this file now and try reloading this p page once again on the browser so as you can see this is the 24 pixels or 1.5 em font size for this particular text now guys it is very important that we use the text size that is the font size with the help of the EM unit so that on different browsers the text is automatically scaling up or down and it is recommended in order to use a combination of percent as well in the body tag along with this em so guys inside this style. CSS file simply we can say body and then for the font size property over here so simply we are going to say font size as 100% so guys what will happen is the font size for all the HTML elements inside the body will be set as 100% and whenever we are going to use the font size as the EM unit for the other HTML elements it will properly scale up or scale Down based on the browser and the device size on which the user is using the web page so guys this is one of the best practices that you must follow while providing the CSS property of font size to the different text element now guys we have something called as font shorthand property that will help us in order to provide the values of all these CSS properties related to font in just one CSS property that is font in this case so guys I'll leave this up to you as a homework for you so that you can practice on your own and use the different values for the different font properties that is related to text so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is icons in CSS so stay tuned so now we will see icons in CSS so guys basically icons can easily be added to your HTML Page by using an icon library and there are many popular icon libraries that you can use with the help of the HTML code so guys over here we have the font awesome icons that you can use in which case you will be providing the script tag inside your HTML code and provide the icons inside the body tag in order to be displayed on the UI and similarly we have the bootstrap icons in which case you have to provide the CSS file that is the external CSS file using which you can provide the icons in your HTML page and also we have the Google Icons which will help us in order to provide the external CSS file as well so guys we are going to use the Google Icons this time so we have to add the below line of code in the head section of the HTML page so guys basically when we add this particular line inside the head section of the HTML page you don't have to download any of the icons to display them but simply you have to refer to them by using the name of that icon so guys let me just copy Cy this line of code over here that is the link tag which is of the relation stylesheet and having the hre to this particular URL that you can see so let me just copy this file and provide it inside our HTML file over here I'll simply remove the previous lines of code that we had written and after this external stylesheet in this case we will provide this line of code which will help us in order to display the Google Icons so guys over here we have provided the line of code inside inside the head section of the HTML page now simply we can use this particular syntax in order to provide the icon on the page over here so guys let me just copy this line of code in this case and over here inside the body tag we will have the paragraph tag and we will say below our some of the Google Icons so guys basically we are having the simple text over here and then after this we are going to use this particular syntax that is having the I tag over here and simply we are going to have the class attribute in this case which is going to have the value as material icons and simply we can provide the name of the icon that we want to display so guys in this case it is the cloud icon that we are going to display so let me just save this file now and try reloading this page once again on the browser so as you can see below are some of the Google Icons paragraph is getting displayed and this is the Google icon that is getting displayed with the help of this line of code that we had written inside the head section over here now guys similarly if you want to display the icon for the computer so what you can do is simply I'll copy the line of code in this case and paste it over here and instead of having the cloud we will simply say computer in this case let me just save this file now and try reloading this page once again on the browser so as you can see the computer icon is getting displayed over here apart from this let us say we want to display the home home icon so simply I'm going to copy this and paste this line of code and over here we are going to provide the home keyword so let me just save this file now and try reloading this page once again on the browser so as you can see home icon is getting displayed now guys how you will come to know what is the name that you are supposed to provide for a particular icon because not all the words that you will provide over here will have the icon in the Google Icons website so guys what you can do is I have also provided the link over here to the Google Icons so this is the link for the icons that are related to the fonts. google.com website so let us check this URL over here so I'll just go to this page in this case so as you can see if you scroll down you will see all the list of icons that is present over here so in case you want to display the settings icon simply you have to provide the settings name over here inside your code in this particular syntax so let me just copy the syntax and paste this over here and instead of home we will simply say settings in this case let me just save this file now and try reloading this page once again on the browser so as you can see the settings icon is getting displayed now guys what if we miss out the last s over here and simply we say setting in this case so what will happen in such cases where the name of the icon is not matching with the list of icons that are present in the Google fonts over here so let me just save this file now and try reloading this page page once again on the browser so since the name is not matching the setting icon is not getting displayed in this case so guys it is very important that you match the name over here inside the Google fonts icon according to your requirements and display them by using this particular synex that we have seen over here so I'll simply change it to settings in this case let me just save this file now and try reloading this page once again on the browser so as you can see the settings icon is getting displayed over here now let us display the search icon as well inside our HTML page so simply I'm going to copy the syntax and paste this over here and instead of settings we will say search in this case let me just save this file now and try reloading this page once again on the browser so as you can see the search icon is getting displayed over here guys in this way you can easily include Google icons on your HTML page just by including this particular line of code over here that is related to Google fonts so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is an exercise on text properties font and icons in CSS so stay tuned so guys it is important that you practice the CSS properties in order to understand them in a more better way so we are going to check the exercise on the text property font and icons in CSS so basically you are supposed to follow the below steps in order to complete this exercise so guys you can pause this video and make sure that each of the task are completed from your side before checking the solution for all these task over here so let us move to the first task in this case so we are supposed to create a div with 500 pixels Max width and align it to the center of the page with some background color so guys let us move to the vs code over here and implement this task so I'll just remove the previous lines of code in this case from the HTML file as well as the CSS file over here now guys we are going to have the div element in this case so we will say div tag over here and let's say we generate some random text over here with the help of the LM Mt abbreviation so guys in this case we have generated the random text inside the dev element over here let me just save this file now and try reloading this page on the browser so as you can see see we have this text inside the div tag over here now guys for this div element we are going to have the 500 pixels Max width so how do we do that inside the style. CSS file first of all we will Define the div tag over here and inside this div tag we will have Max with CSS property and for this Max with CSS property we will say 500 pixels let me just save this file now and try reloading this page once again on the browser so as you can see this text is getting displayed within the 500 pixels withd over here now guys apart from this we also want to align it to the center of the page with some background color so let us do that as well so in order to align this at the center of the page simply we are going to use the margin property and the value that we can use is auto so guys basically this auto value for the margin property will help us in order to have the div element at the center of the page so let us check that as as well I'll save this file now and try reloading this page once again on the browser so you can see that the text is getting displayed at the center of the page and in order to make it more clear we are going to have the background color as well so simply we are going to provide the background color for this div element and let's say we provide the color as Aqua let me just save this file now and try reloading this page once again on the browser so as you can see the background color is getting displayed over here and also the div element is at the center of the page now now guys let us move to another task keep the text color as red and align the text to the center of the dev element so basically we are supposed to have the text color as red color so which CSS property do we use in order to make the text color as red so over here simply we are going to use the color property and we will say red color in this case and also we are going to use the text align property that will help us in order to align the text at the center of the live element so over here we will select the center value so let me just save this file now so two things will happen over here first of all the color of the text will be updated to red color and the alignment of this text will be at the center of this particular dep which is having this background color so let me just reload this page so as you can see the text color is updated to red and the text alignment is now set as Center over here now guys let us move to another task we need to provide the five pixels black border and the two pixels yellow outline to this dep so over here we will provide the Border property first of all so we will say Border in this case and it is going to be 5 pixels solid border with a black color so guys this will be the border and the same way we are going to provide the outline property as well which is going to have two pixels outline width and the color will be yellow so over here we will say outline in this case we will say two pixels as the outline width and the outline style will be again solid in this case and the color of the outline will be yellow so let me just save this file now and try reloading this page once again on the browser so as you can see we have the black border and then after the Border we have the yellow color outline so guys if you remember first of all we have the border and then after the border the outline property will be displayed for that particular HTML element so this is the way that we have implemented the border and the outline properties as well let us move to the next task so over here we are going to provide some line height to create extra space between the lines of the text so guys basically we have this default line height over here that is being displayed in between the lines so let us provide the line height as well so inside this div element we are going to say line height in this case and let's say we provide the line height of 10 pixels so let me just save this file now and try reloading this page once again on the browser so as you can see the 10 pixels light height is not helping us to provide the required extra space over here so instead of 10 pixels let us say we want to provide 25 pixels as the line height let me just save this file now and try reloading this page so as you can see we have sufficient space in between the lines that are getting displayed inside this div element over here now guys let us move to the next task over here make the font size as 24 pixel using em unit so guys what will be the EM unit for the 24 pixels so if you remember whatever pixels we have we need to divide it by 16 so over here we say 24 pixels divided by 16 since 1 em is equal to 16 pixels so in this case we will get the value in terms of em so we have 1.5 em as the font size over here so simply we are going to set the font size property as 1.5 a.m so guys guys over here inside the div element we will say font size CSS property and in this case we will say 1.5 em let me just save this file now and try reloading this page once again on the browser so as you can see the font size of the text has been updated now to 1.5 a.m. now guys let us move to another task so over here we need to add the icons of heart and computer on the last line of this div using the Google Icons CSS so guys basically in the previous video we have seen how we can include the Google Icons line of code over here in order to display the icons inside the HTML page so guys this is the line of code that we are going to include related to the Google fonts inside the head section of the HTML page over here and then after this div tag simply we are going to use the I tag over here and the syntax that we are supposed to use we have already seen in the previous video that this is the syntax in this case by using the I tag over here so guys I'm going to Simply copy this line of code and this is the link tag that we are going to use inside the head section that we have already provided so let us provide the syntax over here after the div tag and the icons that we are supposed to provide is the heart icon and the computer icon over here so simply we are going to say heart in this case as the icon name let me just save this file now and try reloading this page once again on the browser so guys you can see that we are not having any icon over here that's because the name of the icon is not correct in this case simply we have provided the heart but if we go to the official website of the Google fonts and search for the heart as you can see the name of the icon must be favorite over here so let us provide this particular name that is favorite in this case so I'm going to Simply update this name to favorite over here let me just save this file now and try reloading this page once again on the browser so as you can see the heart icon is getting displayed over here but it is getting displayed outside of this div element can we get this heart icon inside of this div element let us try that so what we will do is simply I'm going to remove this line of code over here and inside the div tag in this case simply we are going to have the line break over here so let us have the line break and after this we are going to have this it te along with the favorite Google icon let me just save this file now and try reloading this page once again on the browser so as you can see we have this heart icon over here so guys basically we have just included this line of code in between the div starting and the ending tag and that is how we can get the icons inside any of the existing HTML elements now guys apart from this we also want to display the computer icon as well so what we will do is simply I'm going to copy this line of code and paste it after this and we will say computer instead of favorite so guys basically this is the name of the icon that you want to display on the HTML page let me just save this file now and try reloading this page once again on the browser so as you can see computer icon is getting displayed over here inside the dev element so guys in this way we have completed all the task that are being mentioned inside this particular exercise and this is how we can practice on our own in order to understand the different CSS properties so that it becomes easy for us when we are going to implement them based on our requirement so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video till then stay tuned so now we will see link styling properties in CSS so guys basically the links can be styled with any CSS properties such as text color font family background and many other CSS properties that we are going to check with the help of examples as well now the Links can be styled differently depending on what state they are in so guys basically links are used in order to navigate to other web pages on the same website or the different website so as you can see we use the a tag that is the anchor tag in order to represent the link and in the CSS file we can use colon followed by link over here in order to represent a normal unvis visited link which is not visited yet by the user apart from that we can also use the a followed by colon and then the visited keyword in order to specify the CSS properties when the link has been visited by the user and then guys we also have a followed by colon and then we have hover so that the CSS properties can be used when we get the mouse cursor on the link text and apart from this we also have the active State when the moment we click click on that particular Link in which case the CSS properties that are defined will be activated the moment when we click on that particular link so guys let us check this with the help of examples as well and we must note that the hover state must come after the link State and the visited state as well and apart from this the active state must also be defined after the hover state so guys let us check this in the VSS code over here so basically we are going to Define an anchor tag in this case so we Define the a tag so over here by default we have the hrf attribute for which we will have the value of hash character over here and then after this we are simply going to provide the text that is click here so guys let me just save this file now and try reloading this page on the browser so as you can see we have the link over here with the text click here so guys when we get the cursor on this click here text the icon of the cursor is converted to this hand tool over here but guys we are going to Define certain properties in such a way that when we get the cursor on this link text the color must be updated and then when it is visited then the color must be updated to some other color so guys let us check this with the CSS properties over here so in style. CSS what we are going to do is first of all we are going to define the a tag and simply after this we are going to say colon and as you can see vs code is suggesting us certain keywords that we can use after the colon so basically we are going to use the link keyword over here and this will be the default CSS properties for all the anchor Texs that are present on the web page so guys what we are going to do is let's say we don't want the underline so simply we are going to say text decoration and then we can say none in this case and then apart from this let us say we want the text color to be green so simply we are going to say color and over here we will say green color in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the textt color is green and then the underline is no longer present on this particular link text now guys this is the normal way in which the links will be displayed over here by using the a followed by colon and then we have the link keyword now guys apart from this we also have the visited state over here in which case when the link is clicked and the URL is visited then those CSS properties will be activated so let us check that as well so we have the the a followed by colon and then we have visited keyword over here so guys inside this what we are going to do is simply we are going to change the color to Red in this case so guys basically we are going to set the color as red when the link is already visited so let me just save this file now and try reloading this page once again on the browser so as you can see there is no change by default the green color is getting displayed but the moment we click on this particular link basically the text of the color will be updated to red color so when we click on this so as you can see the link is visited now and the color is updated to red color in this case so guys in this way we can use the visited state of the anchor tag in order to Define our CSS properties now guys apart from this we also have the hover property over here in which case when we get the mouse cursor on this particular link the CSS properties will be activated so let us check that as well so over here after the visited state we will have a tag followed by colon and then simply we can say over in this case and then after this we are going to provide the CSS property so let's say we change the color to Blue in this case so we are setting the color to Blue let me just save this file now and try reloading this page once again on the browser now guys the link is already visited that is why the color is being set to Red in this case but when we get the mouse cursor on this particular link as you can see the color is getting updated to blue color now that's because because we have set the CSS property on the hover state of the anchor tag so in this way we can set the CSS properties on the H state of the anchor tag as well and then apart from this we also have the active state in this case so let us check that as well over here so in the vs code simply we are going to define the a tag followed by colon and then we have the active state in this case and then after this let us say we want the color to be updated to black color color so simply we are going to Define black color let me just save this file now and try reloading this page once again on the browser now guys the CSS properties defined in the active state will be implemented when we click on that particular link so let us check that as well so when we hover on this particular link as you can see blue color is getting displayed and when we click on this link as you can see the color of the text has been updated to black color and in this way the active state is getting implemented over here so guys in this way you can set any of the CSS properties for all these four states of the anchor tag now guys apart from this we have also seen how we can implement the text decoration so basically if you don't want the underline that comes by default simply you can set the text decoration as none in this case when we don't set this text decoration as none let me just save this file now and try reloading this page once again on the browser so you will be seeing the underline by default for all the anchored tags that you define in your HTML file now guys apart from this we have something called as background color as well what we can do is simply we can set the background color for this link so basically over here for the anchor tag in the link State what we can do is we will set the background color over here and let's say we set the background color as yellow let me just save this file now and try reloading this page once again on the browser so as you can see the yellow background color is getting displayed over over here behind this particular link and then apart from this we can also display the link as a button so in order to do this simply we can provide certain padding over here for the anchor tag with the link state so inside this we will have the CSS property as padding and simply we are going to say five pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see the link is getting displayed as a button now let me just provide the Border as well for this button and also we will remove the underline from the link so over here we will again say text decoration as none and let us provide the Border as well so over here we will use the Border CSS property of 2 pixels border width and let's say we provide the Border style as solid border let me just save this file now and try reloading this page once again on the browser so as you can see this is the link that is getting displayed as a button and a background color over here so guys in this way you can customize your links that you have provided in your HTML web pages comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is list styling properties in CSS so stay tuned so now we will see list styling properties in CSS so guys basically we can style the list items in HTML using the CSS properties and this we are going to check with the help of examples as well now guys the very first thing that we are going to see is the list style type CSS property so let us move to VSS code over here and simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS file in this case and then guys simply we are going to have the unordered list so guys basically there are two types of list in HTML that we we can Define that is unordered list and the ordered list as well so first of all we will check the example of the unordered list so simply we are going to say UL so this is the Mt abbreviation so UL tag stands for unordered list over here inside which we are going to have the list item so guys we can simply Define the Alli tags in this case and inside the Alli tags we can provide the content of the list so guys simply we are going to say unordered list and item one in this case and simply I'm going to copy paste these lines of code so that we can have more items over here and we will name them as item 2 item three and then item four respectively let me just save this file now and try reloading this page on the browser so as you can see we have the unordered list item from 1 up to 4 now guys by default this is the list style type that is getting displayed with the help of the bullets over here now guys instead of displaying these bullets we can display something else as well for these unordered list so let us check that with the help of example over here so we need to do it inside the style. CSS file and inside this first of all we are going to define the tag that is UL in which case we are going to define the CSS properties for the unordered list and then guys we have something called as list style type over here so as you can see this is the CSS property that we are going to use and then we can have many values as you can see we have Circle apart from this we also have square we can also have none in which case there will be no bullets that will be displayed by default so let us say we want the elements to be displayed with the help of the circle over here so we have set the value as Circle in this case let me just save this file now and try reloading this page once again on the browser so instead of bullets we are getting Circle in this case now let us say we want to display them as squares so what we can do is simply insert of the circle value we can say Square value let me just save this file now and try reloading this page once again on the browser so as you can see the list are getting displayed with the help of the squares in this case on their left hand side and guys in this way we can easily use the list style type for the unordered list now guys apart from this we can also have the list style type for the ordered list as well so let us check that so inside the HTML file after the unordered list we will have the ordered list tag so we have the o tag over here inside which we are going to define the list items so let's say we have the items say ordered list one and then simply I'm going to copy paste this line of code so that we can have the multiple items over here we will say item we missed out the item keyword in this case so we have list item one and then we will say list item 2 three and then four so guys basically we have the ordered list item 1 up to four in this case let me just save this file now and try reloading this page once again on the browser so as you can see in the ordered list by default we get the numbers that gets displayed which will tell us the number at which the list item is present now guys let us say we want to change the list style type over here and we want to display the r numbers in this case so what we can do is simply we can come inside the style. CSS file and over here we will Define the o tag since we want the list style type to be defined for the ordered list and inside this we are going to say list style type CSS property and let's say we provide the Roman numbers and we want the upper Roman numbers over here so guys we have lower Roman and we also have the upper Roman so we select this value that is upper Roman let me just save this file now and try reloading this page once again on the browser so as you can see Roman numbers are getting used over here in order to define the item numbers in this case inside the ordered list so guys this is the main difference inside the unordered list we don't know at which number a particular item is present but inside the ordered list we have the numbers that is 1 2 3 4 which will represent the items inside that ordered list and we can customize the list style type over here by using this particular CSS property now apart from this we also have the list style position so guys let us check this as well with the help of examples so let us say we have some random text over here for this unordered list items in such a way that the items are occupying multiple number of lines so guys what we can do is inside this ordered list I'm going to keep only two items in this case so I'm going to remove the third and the four fourth item over here and we will change the content of the first and the second item so simply we are going to generate some random text with the lurm m at abbreviation and then we multiply it by two so that we get some good amount of random text over here for the first item and the second item as well so over here as well we will say lurm m at abbreviation so guys basically in both the list items we have generated some good amount of content over here let let me just save this file now and try reloading this page once again on the browser so as you can see we have the list items that are occupying multiple lines in this case so over here four lines are getting occupied for each list item in the unordered list now guys let us use the list style position over here that is the next CSS property so we will move to the style. CSS over here and inside the unordered list we will say list style position so as you can see this is the CSS property that we want to use and by default the value of this list style position is outside so basically when we set it to outside we won't see any changes in this case so let me just save this file now and try reloading this page once again on the browser so as you can see there is no change right now so guys what is the meaning of this particular CSS property that is list style position so guys it is the position of this particular square that is representing the list item so it is currently outside of the content of this list item so as you can see when we highlight this content it is to the left of this content but let's say if we want this Square to be the part of this list item inside the unordered list so what we can do is simply we can set the list style position to inside in this case so as you can see this is the list of values that we can set so the other value is inside so we are going to set that particular value let me just save this file now and try reloading this page once again on the browser so now if you see the square is now the part of this particular list item and it is getting displayed inside of the list item that is being displayed on the page so the second line over here it is just below this particular Square which tells us that this particular list style position is set to inside value so guys in this way if you want this square or Circle or any other value that you have set for this list style type to be the part of the list item then you can set the list style position to inside and if you want it to be outside then that will be the default value and you don't have to set it explicitly now guys apart from this we can also remove the default settings by setting the list style Type To None So guys let us check that as well so what we will do is simply we are going to have another list list that is the unordered list over here and let's say we have the item one and item two in this case so simply I'm going to paste this list item over here and we will say item two let me just save this file now and try reloading this page once again on the browser so as you can see we have item one and item two in this case now guys let us set the ID for this particular unordered list because we already have another unordered list that we have set previously so in this case we will set the ID and the value that we are going to set is remove style in this case so guys basically we are going to use this value of the ID in order to set the CSS property so let me just copy this value and let me just save this file that is the HTML file and over here we are going to use the ID so we say hash character followed by the ID that is remove style so guys if you remember if we want to provide the CSS properties with the help of the ID of the HTML element then we use the hash character over here before specifying the ID of the HTML element and if we want to use the class then we use the dot character before the class name so guys inside this simply we are going to say list style type it is equal to none so guys basically whatever default CSS properties are set for the unordered list all those properties will be removed so in this case we will be seeing that the square that is getting displayed over here will be removed and these will be simple item one and item two that will be displayed on the web browser so let me just save this file now and try reloading this page once again on the browser so as you can see there is no bullet or any other list style type that is getting displayed but we are simply getting the items that is item one and item two being displayed on the web browser so in this way you can remove the default settings from the list by using the list style type value is none now guys apart from this we also have something called as list style image so instead of displaying the square or the circles over here or the Roman numbers in this case we can also use the image icons that will help us in order to make them look more attractive so guys I'll leave this property that is list style image as a homework for you so that you can practice on your own so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is table styling properties in CSS so stay tuned so now we will see table styling properties in CSS so guys basically the look of the HTML table can be greatly improved with the help of CSS properties and this we are going to check with the help of examples as well so we are going to perform certain tasks so as you can see these are the task that we are going to perform in order to understand the CSS properties of the HTML table more clearly so guys first of all we are going to create a table with the border and a padding for better readability so what we are going to do is I'll move to the vs code over here and simply we are going to remove the previous lines of code that we had written in the HTML file as well as the CSS file over here we are going to Define find the table in this case inside the body tag and inside this table we are going to have the first row which is going to have the headers over here so guys inside the TR tags in this case we will have the table header tag that is the th tag and we are going to define the simple headers that is column 1 up to column 4 so guys basically over here we have defined the column 2 column 3 and column 4 as well so guys in this way inside the first row of the table we can Define the table headers for the HTML table now guys after this first row we are going to go to the second row and this time we are going to use the TD tag which defines the table data which is going to say Row one and column 1 in this case similarly we will go up to column 4 and similarly we will have another row so in this case simply I'm going to copy these lines of code and paste it over here I'm going to update all the row and the columns will be from 1 up to 4 so guys let me just save this file now and try reloading this page on the browser to see how the HTML table looks like so as you can see the table headers are getting displayed over here from column 1 up to column 4 in this case and Below them we have the table data as well for Row one and row two in this case now guys this particular table is not looking that great because we are not having any background colors or the borders as as well so let us apply the borders first of all so basically we will be defining the CSS properties inside the style. CSS now guys over here simply we can say the table tag you can also use the ID or the class name that you have provided to the table in your web page and then over here inside the curly braces so guys basically we are going to define the border for the table so let me just save this file now and try reloading this page once again on the browser so as you can see this particular border is getting displayed for the table now guys we also want the borders to be displayed inside of the table for all the TD tags as well so what we can do is if we want the same border to be implemented to the multiple tags we have already defined the table tag we want to also Define the TD tag over here so simply we can provide a comma and provide another tag in this case so guys always remember if you want to apply the same CSS property to multiple tags in this case you can provide all the tags which are separated by commas and then Implement your CSS properties so once we provide the TD tag over here after providing the comma character simply we have to save this file now basically what this means is the Border will be applied to all the table data tags as well so let us check how it will look like on the web page so let me just reload this page once again on the browser so as you can see the borders are getting applied to all the TD tags over here but guys it is not getting applied to the table headers why so so let us check that as well so inside the HTML file as you can see we have defined the table data that is a TD tags in order to Define all the data but for the columns we had defined the th tag over here for which we have not applied the border so let us apply the border for the th tag as well so inside the style. Cs file over here simply we have to provide the comma once again and provide the th tag as well let me just save this file now and try reloading this page once again on the browser so now as you can see we have the border for the table haters as well but guys if you notice we have the double borders over here that is we also have the outside Border in this case for the table and individually we have different borders for all the table data and all the table headers so how do we we get rid of this and just apply one single border line for all the table data and the table headers so let us check that we have something called as border collapse so can we apply this border collapse property for all these tags over here so let's check that so basically we are going to provide border collapse and in this case we are going to use the collapse value so let me just save this file now and try reloading this page once again on the browser so now as you can see there are no double borders in this case and a single line is getting displayed for all the table headers and the table data cells over here for the HTML table now guys apart from this we can also provide the padding for better readability so what we will do is for all these table data in the table headers we will provide the five pixels padding so that there is certain spacing between the border and the content of the table data so in this case simply we are property with the 5 pixel value so let me just save this file now and try reloading this page once again on the browser so as you can see we have the five pixels and now the table is looking more readable in this case now guys let us move to another task we need to provide the green background color for the table headers with the white text over here so let us apply this as well now in this case we want the background color to be applied only to the th tag in this case so what we can do is we can see TR tag over here and inside the TR tag specifically we want to apply the CSS property for the th tag so we can say TR tag first of all followed by the space character and then th tag so guys in case you want to go to the child element over here first of all we say the TR tag which is the parent tag for this th tag which is the child tag then you can provide the space character in between them also we can have the table tag over here before the TR tag order to make it more clear how this particular parent and child relationship works so after this we are going to have the curly braces and then inside this we are color which will be of the value green color in this case and apart from this we will also have the white text color so that it goes better with the green background color and the value will be white in this case let me just save this file now and try reloading this page once again on the browser so now as you can see we only have the green green color for the table header in this case that's because we have specified that inside the table we need to go to the table row which is having the th tag over here and if we simply change this th tag to TD tag so basically all the TD tags meaning this particular Rose will have the green color and not the th tags in this case so let us check that as well so I'll save this file now and try reloading this page once again on the browser so as you can see there is no no background color for the table headers over here but all the table data that is the TD tags are having the background color of green so guys in this way you can use the parent child relationship and simply you are going to go in that particular sequence you can also use the ID of the table or the class name of the table by using the hash character or the dot character respectively in order to apply the different CSS properties so guys let us move to the th tag over here so so that we apply the background color to only the headers of the table and let me just reload this page once again so as you can see we have the background color for the table headers currently now guys apart from this we also need to provide the background color to the alternate rows over here so basically alternate rows meaning we want to apply certain background color to this particular row and then we need to ignore the second row and go to the third row in order to apply the same background color so guys in this case let us increase the number of rows now in the HTML file so I'm going to Simply copy these lines of code and paste it over here so we get the third row as well so I'll update it and again we are going to have the fourth row as well over here so we are going to update the content of the fourth row and let us say we have another row in this case so simply I'm going to paste the code once again so as you can see to total of five rows we have defined inside the HTML table let me just save this file now and try reloading this page once again on the browser so as you can see we have the rows from one up to the row five and all the four columns have different data inside them now guys what do we want to do is we want to apply certain background color to this particular row and then we need to ignore this second row and apply the same background color to the third row as well and Then followed by the same background color to the fifth row so alternate rows need to be provided with the background color so inside the style. CSS property what we can do is simply we can say table first of all in order to define the parent tag and inside this we are going to go to the TR tag over here now guys we don't want to apply the background color at the TD level but at the row level in this case so basically we want to color this entire row which is at the second number right now so guys if you remember first of all we have defined the first row for the header of the table so this is the first row and then apart from this this is the second row which means it is the even number row and then we have the third row which we want to ignore and then this is the fourth row which is the even row so guys over here we need to define something called as nth child so guys how do we do that so we provide the TR tag followed by colon and then we have something called as n ch child over here so as you can see vs code is suggesting us this particular option so we are going to use this and inside this nth child parenthesis we can Define the number of the child that we want to Define so guys basically we want all the even number of child in this case because we are going to apply the background color to these even number of rows so this is the second row and then we have the fourth row and then we have the sixth row over here so guys let us use this particular even key key word and inside these curly braces we are going to see the background color property so we are going to define the normal CSS properties inside this after we have used this particular selector so guys this is one of the important selectors when you are going to use the tables or any other HTML elements and you want to navigate to a particular child of a parent tag over here in which case table is the parent tag and TR is the child tag and from this child tag we are selecting one of the child tags in this case and specifically we are selecting the even number of Childrens so guys basically we have the background color over here and let's say we have a shade of gray color that we want to display as the background color so simply we are going to Define this particular color that is a shade of the gray color let me just save this file now and try reloading this page once again on the browser so now as you can see we have the background colors getting displayed to all the alt alternate rows specifically the even number of rows are getting the background colors being implemented over here so guys in this way we can provide the CSS properties for the alternate rows inside the table now guys let us move to the next task we are going to update the hover color on the table rows as well so what we can do is we have already provided the background color to the even number of rows let us provide the hover color in such a way that when we get the cursor on the table row of the HTML table then the color of the background must be updated so what we can do is simply in the style. CSS property we will again Define the table tag you can also Define the ID or the class of the table as well and then after this we are going to have the TR tag in this case now guys for the TR tag we want the hover state of the HTML element to be used in order to provide the background color so simply we are going to have the colar and then we are going to provide the hover property so as you can see this is the option that we can use so basically when we are going to hover over the TR tag then we need to have certain background color getting displayed so guys let us provide the background color over here so in this case let us say we want the background color to be Aqua so basically we are going to provide this particular value so the meaning of this is whenever we are going to get the cursor to any row of the table then the background color of that particular row will be updated to Aqua so let me just save this file now and try reloading this page once again on the browser so now if we get the cursor as you can see the color is getting updated to aqua color so for the entire row of the table the color is getting updated so guys in this way you can provide your own CSS properties on the HTML table based on your requirements comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is display property in CSS so stay tuned so now we will see display property in CSS so guys basically the display property is used to specify how an element is displayed on the web page so every HTML element has a default display value and depending on what type of element it is the display value will be set on the web page Now the default display value for most of the elements is either block or in line and this we are going to check with the help of examples as well now the display property is used to change the default display behavior of the HTML element guys over here the first display value is the Block Level elements in this case so basically a block level element always starts on a new line and takes up the full width that is available on the screen which means it stretches out to the left and the right as far as it can and basically these are certain examples of the Block Level elements over here we have already seen that the div tag takes the entire width of the screen also the H1 up to H6 tags which are the header tags will take the entire width of the screen so let us check these with the help of examples over here in the vs code so I'm going to Simply remove the previous lines of code in the HTML and the style. CSS files so guys over here inside the HTML file inside the body tag simply we are going to have the div tag in this case so basically we are going to say this is a text div with block and Then followed by hyphen and we will say block element so guys basically we are going to identify that this is the block element over here and apart from this we will also have the paragraph tag and we will say this is a paragraph and again we will say this is the block element so guys let me just save this file now and try reloading this page on the browser so as you can see we have this is a text Dev which is a block element and it is taking the entire width of the screen and then again we have the paragraph tag which is taking the entire width of the screen now guys to understand this more clearly let us have the background color as well so that it looks like this is already taking the entire width of the screen over over here so in the style. CSS file in this case simply we are going to have the div tag followed by the P tag as well so both the tags we have separated using the comma since we are going to have the background color over here and the same color we are going to apply so let's say we provide the background color of yellow in this case so guys when you want to apply certain CSS property that is the same CSS property to the multiple tags or the multiple IDs of the tags or any other CSS selectors of the tags you can use these comma separated tag names or the other CSS selectors as well so let me just save this file now and try reloading this page once again on the browser so now as you can see the div element and the paragraph element is taking the entire width of the screen and this can be proved by seeing that we have the background color up to the width of the screen over here right from the left up to the right of the screen guys this is the way that the Block Level elements work and these are certain examples apart from this we also have the headers which are the Block Level elements and then we have the form tag header tag footer tag and the section tag over here so you can try these tags as well as a homework for you and check how these Block Level elements work and apart from this we also have the second display element that is the inline element in this case now guys before moving to inline elements let us verify the CSS properties of both these HTML tags so simply I'm going to right click over here and click on the inspect option to see the CSS property so as you can see already for the div tag over here we have the display as block that is the default display value that is getting displayed and let us check for the paragraph tag that is the P tag over here so again we have the background color that is yellow for the P tag and then we also have the display equal to block for the P tag in this case and automatically we also have the margins that are getting implemented over here so guys this is the default behavior for these tags that is the div tag and the paragraph tag and the other list of tags that we have seen in which case the display CSS property will be provided with the block value by default now guys apart from this let us see the other inline elements over here so an inline element does not start on a new line and it only takes up as much width as necessary so guys over here we have seen that the block element is taking the entire width of the screen but in case of the inline element it will only take the width as much as required by the content of that particular HTML tag so guys let us check that as well some of the examples are the span tag and then we also have the hyperlink that is the anchor tag over here and then we also have the image tag so guys let us check the example of the span tag in this case so what I'm going to do is simply inside the HTML file over here we are going to define the span tag in this case and simply we are going to say this is a span tag and Then followed by hyphen and then we will say inline element so guys let me just save this file now and try reloading this page once again on the browser so as you can see the content is getting displayed currently we cannot see any difference between the span tag and the paragraph tag and the diff tag but the background color has made it more clear that both these tags are taking the entire withd of the screen we can also see whether this particular span tag is taking the entire width of the screen let us check that so simply we can go to the style. CSS file over here and let's say we want the same background color that is yellow color to be displayed for the span tag as well so after the P tag we are going to provide comma and then simply we are going to provide the span tag in this case so guys all the three tags are having the same background color but let us see what will be the difference so let me just save this file now and try reloading this page once again on the browser so as you can see the background color for this pen tag is only applied up to this particular point where the content is getting displayed so guys basically it is not taking the entire width of the screen over here right now but it is only taking this much space inside which the content is getting displayed now guys let us provide another span tag after this first span tag over here inside our code so what we can do is let's say we provide a full stop over here and then we have a space character at the end of the span tag and let us Define the other span tag and we will say this is another span tag so guys basically we are defining another span tag over here and if you notice the content will be continued on the same line that's because the span tags are defined as the inline elements over here and whatever element that we Define after the inline element and if we have another inline element after the first inline element then both the HTML elements that is the content will be displayed on the same line so let me just save this file now and try reloading this page once again on the browser so as you can see the content of both the span tags are getting displayed on the same line that's because these tags are the inline tags over here let us provide the other example that is of the anchor tag as well so simply I'm going to come on the next line after the full stop over here and then we have the anchor tag in this case and for the hrf attribute simply we are going to provide the hash character over here and we will say click here as the text of the link so guys let me just save this file now and try reloading this page once again on the browser so as you can see the a tag is also the inline element tag over here and it is getting displayed on the same line rather than displaying it on the next line but let's say if we have another block element M after this a tag so so let's say we have the header tag over here so simply we are going to define the H3 tag in this case and we will say this is heading three so guys basically since this is the Block Level element then the H3 tag content should be displayed on the next line over here after providing certain spacing on the top and the bottom so let me just save this file now and try reloading this page once again on the browser so as you can see automatically The Heading content is getting displayed on the next line after this inline element so guys this is the difference between the Block Level element and the inline elements over here basically the Block Level element takes the entire width of the screen and it also provides the automatic spacing to the top and the bottom of the HTML element whereas the inline element only takes the required space as far as its content is concerned now guys apart from this we also have something called as display none over here so guys to understand this more clearly what we can do is let's say this click here that is the anchor tag we get it in between both these span tags in this case so inside this HTML code over here simply I'm going to cut this line of code and paste it in between the span tags so let me just save this file now and try reloading this page once again on the browser so as you can see we have the first span tag over here followed by the a tag that is the anchor tag and Then followed by another span tag in this case now guys let's say we want to provide display none property for the a tag now guys what is the meaning of display none basically it is going to hide this particular HTML element from the web page so let us check that as well so inside the style.css file over here specifically for the a tag we want the display property to be set as none so in this case we are going to provide the display CSS property and the value will be none over here so let me just save this file now enter by reloading this page once again on the browser if you notice currently we have the click here text which is the anchor tag in this case now when we reload this page as you can see now it is no longer present so guys we use the display none property in such cases where we don't want to display the HTML element or we want to temporarily hide the HTML element from the user in order to achieve certain functionality so if you go to the inspect option over here let us go to the inspect option in this case and we will be seeing that there is the a tag over here but it is having the display property as none so when we uncheck this property so again it is getting displayed right now and then when we check this property it is getting hidden and one important thing that you can notice is there is no space that is left for that particular a tag and the other inline element is taking the space for that particular anchor text over here so guys this is the functionality of the display none property now apart from this we also have something called as visibility is equal to Hidden so guys we have the visibility CSS property that we can use in order to hide the HTML element but there is a difference between the display none property and the hidden value of the visibility CSS property so let us check that as well so instead of providing display none over here let me just comment out this line of code and what we will do is simply we are going to say visibility CSS property in this case and we will say hidden so guys let me just save this file now and try reloading this page once again on the browser so now if you see instead of display property since we are using visibility hidden so the space that is required by that particular anchor text is still getting reserved over here and the next inline element is getting displayed after the space that is reserved for this particular inline element over here so guys this is the main difference when we use the display none property so if we check the dis none property over here the space is no longer present for that particular HTML element but when we use the visibility hidden property then the space will be reserved so when we check this particular CSS property over here so the HTML element is hidden but the space is reserved for that HTML element So based on your requirements if you want to hide any of the whether it is a inline element or the block element you can either use display none property if you don't want to reserve the the space for that particular element and if you want to reserve that space then you can use the visibility is equal to Hidden property over here now guys apart from this we also have something called as inline block so we have seen the Block Level element and the inline element as well what is the meaning of inline block so guys let's say we remove the display and the visibility CSS property in this case so guys after removing the display and the visibility properties over here let's say we want to apply certain height to this anchor tag so we provide the height CSS property and for this height let's say we want the 50 pixels value to be provided so let me just save this file now and try reloading this page once again on the browser so guys as you can see we have provided the height of 50 pixels over here but let us say we want to provide certain background color as well so that we can see that height of 50 pixels so in this case let us say we provide the background color and this color will be aqua color over here so let me just reload this page once again on the browser so as you can see we have provided the aqua background color as well but guys this particular height property is not getting implemented over here and we have this little icon in this case and it says the display inline property prevents height from having an effect try setting display to something other than inline as in this specific example whenever you want to set the width and height of the inline elements you can make the display property of that that inline element as inline block so guys let us check that as well so simply inside the anchor tag we will have the display CSS property by default it is set to the inline value for this particular anchor tag but in this case we will say inline hyphen block so guys this is the value that we are going to use and this value will help us in order to set the height and width for that particular HTML element so let me just save this file now and try read loading this page once again on the browser so now if you see we have the height of 50 pixels that is getting displayed and it can be proved since we are getting the background color as Aqua for this particular link tag which is having the height of 50 pixels over here and now there is no longer any icon that is getting displayed over here so we can uncheck the height as well so by default it is taking the required height in this case and when we check this option so it is taking the 50 pixels height in this case so guys basically you can use the inline block display value in order to set the height and width of a particular HTML element specifically for those elements for which the display value is in line so guys in this way you can use the inline and the Block Level elements over here based on your requirements comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is going to be an exercise to create the navigation bar in CSS so stay tuned so now we will work on an exercise to create the navigation bar in CSS so basically we are going to follow the below steps in order to complete this practice exercise on creating the navigation bar in CSS so guys you can pause this video and practice on your own using the CSS properties that you have learned so far so first of all we are going to create the unordered list and have the four items as links that is home blog languages and contact so guys let us move to the vs code over here and simply I'm going to remove the previous lines of code that we had written inside the body tag of the HTML file and also we will remove the content of the CSS file over here and then inside the HTML file we are going to have the unordered list with the list item so guys over here as a shortcut you can also use the unordered list that is the UL tag followed by the greater than symbol and Then followed by the lii tag over here guys as you can see this is the event abbreviation and when you press enter as you can see you have the starting and the ending unordered list that is the UL tag and also the first list item over here with the help of the LI tag and inside this we can Define our list items as well but these list items are going to be links in this case so guys basically we are are going to use the a tag over here and for the HF attribute we are going to provide the hash character and inside the a tag it is going to be the home tag over here followed by blog languages and contact so guys let us Define that as well simply I'm going to paste this line of code and then over here we will say blog followed by languages and then in the end we have the contact list item in this case so guys let me just save this file now and try reload this page on the browser so as you can see we have all the list items in this case and since it is the unordered list we have the bullets over here now guys let us move to another task we need to remove the bullets and the underline from the unordered list item so what we can do is simply we have to provide the CSS properties inside the style. CSS so guys in order to remove the bullets from this unordered list over here you can see these bullets what we can do is we can use the list Style type property for the unordered list tag so in this case we say the UL tag over here and simply we are going to provide the list type CSS property and we will say none in this case so guys in order to remove the bullets from the unordered list or the numbers from the ordered list we can Define the list style type equal to none so that there are no bullets or the numbers getting displayed for the list items let me just save this file now and try reloading this this page once again on the browser so as you can see there are no bullets right now that are getting displayed now guys what we can do is simply we can remove the underline from these links as well so we will move to style. CSS property and what we can do is we can use the UL tag as the parent tag followed by the space character and then we have the Alli tag that is the anchor tag so guys simply we can also use the a tag over here but as your application grows into the complex application we need to be more specific as far as the CSS selectors are concerned so guys over here we are going to use the text decoration property in order to remove the underline from the anchor tags so in this case we are going to use the text decoration property and in this case we are going to use the value as none so guys basically by default we have the underlines for this anchor tag but we can use the text decoration property in order to remove the underline by using the none value for the Cs s property so let me just save this file now and try reloading this page once again on the browser so as you can see there is no underline now and we are seeing the pure anchor tags over here without the underline and also it doesn't look like this is the list items inside the unordered list now guys we need to convert this list into the navigation bar over here which is going to have certain background color in this case so guys let us move to another task so as you can see make the items look in line with a black background color so guys what we can do is we need to make these list items look in line over here so simply we are going to come inside the style. CSS file and for the list items we are going to have the display property as inline block so guys let us do that as well so inside the unordered list we are going to have the lii tag over here and for this particular CSS selector we are going to say display CSS property and simply we are going to use the inline Sal property so guys basically this is the property that we are going to use in order to make all these list items look in line so that they are displayed on the same line over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see the list items are getting displayed on the same line now and guys we will also have the background color so for the UL that is the unordered list we are going to have the background color over here so guys for the UN ordered list that is the UL tag we will have the back so let's say we have the background color and we Define the background color as black in this case and apart from this for the black background color we would want the text color of these links to be displayed as white color so for the a tag for which we have the text decoration as none we will simply say color and this text color we need to set it as white so that it looks more decent on the black color background so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the black background in this case and then we have the white text color as well now guys we can also have certain padding over here for all the links so that it becomes more readable and also it looks like it is a navigation bar so what we can do is again inside the a tag we are going to have the padding of five pixels so let's say we have the padding of 5 pixels in this case let me just save this file now and I reloading this page once again on the browser so as you can see we have the padding as well as 5 pixels in this case now guys apart from this you can see there is certain spacing on the left of the home over here and also above the navigation bar and to the left of the navigation bar so guys let us check the main reason behind this spacing and the margins so let us go to the inspect option over here after right clicking and let us check one at a time all the HTML elements so as you can see for the tag over here we are getting the margin so the orange color region over here above and below the black color background is displaying the margin of this UL tag so guys if you come over here you can see that we have the margins that are getting displayed by default for this Block Level element so what we can do is for the UL tag simply we are going to set the margin as 0 pixels so in this case we are going to say margin is equal to 0 pixels over here let me just save the this file now and try reloading this page once again on the browser so now as you can see there is no margin right now when we hover over this UL tag in this case but guys again we have certain margin over here for the body tag so as you can see on the body tag we are getting the orange color that is getting highlighted which is the margin by default for the body tag that is getting displayed over here you can see that it is the 8 pixels margin so let us remove that as well so before the UL tag it is one of the best practices that you provide the body tag and then you provide the values of margin as 0er pixels and padding as well as 0er pixels over here so guys this is done as one of the best practices in order to remove the default margin and paddings from the body tag so let me just save this file now and try reloading this page once again on the browser so now as you can see we don't have any spacing for the body tag over here as well now guys we can also increase the spacing for the list items over here as far as the top and the bottom spacing is concerned for all these list items so what we can do is inside the LI tag over here for which we have displayed as inline block we can provide the padding tag in this case and let's say we want five pixels of padding over here so let me just save this file now and try reloading this page once again on the browser now as you can see we have the padding that is getting defined for these list items on the top and the bottom as well well and guys apart from this let's say we want to come on these particular links that is the home and the blog link and we want certain background color so that the user gets the confirmation that yes this is the link that he or she wants to select so what we can do is specifically for this Li elements over here that is the list items we want to provide the background color but guys it should be on the hover state which means when we get the cursor on that particular list item then the background color should be updated so simply we are going to define the UL tag over here followed by the lii tag and this time we want to use the hover state so in this case we are going to use the colon followed by over state in this case so guys let me use this particular option guys for this state we are going to provide the background color CSS property so let us provide the CSS property and let's say we want the background color to be read when we get the mouse cursor on this particular list item inside the UN ordered list so guys let me just save this file now and try reloading this page once again on the browser so now if you see when we get the cursor over here the items are getting displayed with the red color background and this is one of the good practices that you can follow based on your requirements whenever you are creating project so guys in this way out of a very simple unordered list that we have defined inside our HTML file we have converted it into one of the attractive navigation Bars by using the style. CSS properties over here for the unordered list and the list items and the anchor tags as well so guys this is one of the ways that you can use in order to create your own navigation bars over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is position property in CS SS so stay tuned so now we will see position property in CSS so guys basically the position property specifies the type of positioning method that is used for an HTML element and there are five different position values that we will see with the help of examples as well so the very first position value is the static which is the default position value so guys the static positioned elements are not affected by the top bottom left and right properties that we are going to see with the help of examples apart from the static value we have the relative value of the position property we also have the fixed value and then we have absolute value and then we have the sticky value so guys we will check all these in detail with the help of examples so let us move to the vs code over here and we will remove the previous lines of code that we had return previously in the HTML and the CSS files over here now guys in the HTML file let us create a div so over here we will have the div tag and let's say for this div tag we are going to give the class name as static so guys we will give this class name so that we can create the properties related to this particular class and we will identify the different Dev tags based on these class names over here so guys basically we are going to write the content that this is a Dev tag with static position so guys over here this is the content of this div tag let me just save this file now and try reloading this page on the browser so as you can see we have a simple statement that is this is a div tag with static position now guys we have not provided any CSS properties for now for this particular div tag so let us do that as well so what we will do is over here in the CSS file we will say div tag with the class name that is static over here and then inside this we are going to give the border so let's say we have the border of 2 pixels that is of the type solid and then we have the color s black color for this border let me just save this file now and try reloading this page once again on the browser so as you can see this is a diff tag with static position which is the default position over here now guys when we provide the other properties such as top or left or right or bottom so these properties will not be implemented on this particular div tag so let us check that as well so let's say we want certain spacing from the top so basically we use the top property of the CSS in order to provide the spacing from the top and let's say when we provide 30 pixels over here s the spacing so let me just save this file now and try reloading this page once again on the browser so as you can see there is no change for now since a default position that is the static position does not allow you to make any changes with respect to the spacing as far as these properties are concerned that is top left bottom and right so guys this is the default behavior of all the HTML Elements which have the position as static by default now guys let us see another example over here we have the relative value as well so the element is positioned relative to its normal position so guys let us create another diff tag over here so in the VSS code inside the HTML file in this case we will create another Dev with the class name that is relative over here so gu simply you can use a DOT character followed by the name of the class in order to create the div tag with this particular class name and when we press on the enter button over here as you can see the div tag with the class name is created in this case and simply we can say this is a diff tag with relative position so guys over here this is the statement inside this div tag let me just save this file now and try reloading this page once again on the browser so now as you can see we have this is a div tag with relative position and this is the default static position over here since we have not provided the relative position explicitly inside the CSS file so guys this is the default behavior of all the HTML elements that you are going to write on this particular web page so let us see how we can provide the relative position for this particular Dev so guys we will use the tag name that is diff followed by dot since it is a class name and Then followed by the relative class name over here and then we are going to say position in this case and the value that we are going to use is relative so guys this is the value that we will be using so let's let me just save this file now and try reloading this page once again on the browser as you can see there is no change for now that's because we have not provided any top or left property over here guys again in this case we have missed out the position property which is by default static so over here we will mention the position as static in this case so it doesn't matter whether you provide this position property with the value of static or not since the default behavior that is the default value of this position property will be static always until and unless you provide the other value for this position property now guys since there is no change for this D tag with the relative position let us provide certain top and left properties of the CSS so over here let's say we provide the top property and we provide the value as 30 pixels and for the left property as well we provide the 30 pixels in this case let me just save this file now notice that we had also provided the top property as 30 pixels for static but this time we are providing adding the top and left property for the relative position over here first of all let us check how the top property will work so let me just comment out this line of code let me just save this file now and try reloading this page once again on the browser so as you can see this is the spacing that is being provided over here which is 30 pixels right now from top and this is the way that the relative Position will work so basically whatever its original position would be with static position property from there onwards whatever value we provide that is for the top or the left property or the other two that is bottom and right properties so those properties will be implemented over here let's say from the left also we want the 30 pixels of spacing for this particular depth so what we can do is simply we will uncommanded border of two pixels over here with the Border style of solid and the color that is black in this case and let me provide the background color as well over here so we have provided the background color of of yellow so let me just save this file now and try reloading this page once again on the browser so as you can see from the left also we have the 30 pixels of spacing and over here from Top as well we have the 30 pixels of spacing now guys one very important thing over here is this entire div is being shifted to the right in this case so as you can see we are getting the scroll bar that is the horizontal scroll bar on the bottom so it is going outside of the screen over here right now that's because we have not provided any specific width for this particular Dev and this is how the behavior of the position will work whenever we are going to use it along with the other properties such as top left bottom and right so guys this is the relative position example that we have seen so far and it will overlap with the other div elements as well so let us provide another element in this case in the HTML page so let's say we have a P tag over here so simply we are going to have the P tag with the statement that is this is a paragraph tag so over here we have the very simple statement so let me just save this file now and try reloading this page once again on the browser so as you can see we have the statement that is this is the paragraph tag which is behind this particular div tag over here why so because this particular div tag was supposed to be over here at its normal position but it has changed the position and now it is overlapping with the paragraph tag which is at its normal position right now so guys this is how the relative Position will work it might overlap with the other HT ml elements if you provide the spacing properties that is top left bottom or right if we remove the top spacing over here from the relative class so let me just comment out this line of code and let me just save this file now and try reloading this page once again on the browser so as you can see there is no top spacing right now and this is the normal behavior of all the HTML element now guys apart from this we also have something called as fixed value so the element is positioned relative to the view port in this case which means it always stays in the same place even if the page is scrolled so guys let us check the example of this particular fixed value of the position property so let us use this example of paragraph tag in order to implement the position of fixed value so let me just provide the class name as fixed over here in this case so we have provided the class name as fixed and then in the style. CSS file over here we will say P tag followed by Dot and then we have something called as fixed over here so guys let us say we want this particular paragraph to be fixed at the bottom left of this page so how we can do that so we can use the position is equal to fixed property in such cases where we want to fix the HTML elements on the web pages so guys over here first of all we will provide the position property and the value will be fixed in this case and in order to make it as fixed at the bottom left we have to use the bottom property and it should be zero pixels over here which means we want no spacing as far as the bottom spacing is concerned and and from the left as well we don't want any spacing so we provide the left property and we say zero pixels in this case guys apart from this let us provide certain width and the background color as well for this particular paragraph tag so let's say we provide the width of 500 pixels in this case so simply we are going to say 500 pixels as width and the background color as Aqua so over here we are using the aqua background color and let us provide the Border as well of two pixels which is of the type solid and the color color will be black in this case let me just save this file now and try reloading this page once again on the browser so as you can see this is a paragraph tag is now being fixed at the bottom of the page over here with the 500 pixels width now guys even if you scroll this page this paragraph will be fixed at the bottom left so guys how do we check this let us provide certain content over here so that we can scroll this web page horizontally so we will have another paragraph tag that is the P tag over here and let's generate some random text on this page so guys over here we will use the lauram Mt abbreviation so as you can see we have generated some random text over here on this particular web page let me just save this file now and try reloading this page once again on the browser so as you can see we have the enough content on this web page now in order to scroll this page so guys when we scroll this page so as you can see vertically we are scrolling the page the other content that is the static position and the relative Position will scroll itself and it will disappear from the page as we scroll down but as you can see the paragraph is still fixed over here at the bottom position in this case so guys in this way you can easily use the position is equal to fixed property in order to fix any particular HTML element on the web page based on your requirement now guys apart from this we also have another value that is absolute for the position property so in this case the element is positioned relative to the nearest positioned ancestor so guys let us check this with the help of example now so I'm going to remove this particular paragraph tag with the random text that we had generated and we are going to create another diff but this time we are going to create the diff tag inside this particular diff tag which is having the position that is relative over here so guys we have to come inside this particular diff tag and then we will say div with the class absolute so guys we have created the class that is absolute over here and before providing any content let us make some changes in the relative class as far as the CSS properties are concerned so what we can do is for the relative class over here we will provide the top property as 30 pixels and the left property as well as 30 pixels over here but guys we are also going to provide the width so let's say we provide the width of 400 pixels in this case so we provide the width of 400 pixels and also we want to provide the height of 300 pixels so over here we have provided the width and height of 400 and 300 pixels respectively let me just save this file now and try reloading this page once again on the browser so as you can see this is the div with the relative position now guys the height is too much over here so let me just change the height to 100 pixels in this case so let me just save this file now and try reloading this page so as you can see we have the height of 100 pixels and the width of 400 pixels right now now guys inside this particular diff tag we will be creating another diff which is having the absolute positions over here we will say this is a diff tag with absolute position guys this is a statement that is this is a diff tag with absolute position let us see how it will look like on the UI so let me just save this file now and try reloading this page once again on the browser so as you can see this statement is just below the statement of the parent TI tag that is the relative position tag now guys let us say we want this particular absolute position tag to be at the bottom right of this particular parent tag over here so what we can do is first of all let us provide some background color over here so that we can identify the absolute diff tag over here so we will say div followed by Dot and then we have this absolute class name now guys what we will do is we will provide the background color of let's say blue color in this case so let me just save this file now and try reloading this page once again on the browser so we have this blue color is the background color let us use some light color over here so instead of blue color let's say we have this aquamarine color in this case so guys let me just save this file now and try reloading this page once again on the browser so this is looking good now now guys let us say we want to decrease the width of this particular div tag because it is taking the width of its parent tag over here which is 400 pixels so let us provide the width as 300 pixels over here so we will say width is equal to 300 pixels now guys what is the meaning of absolute position so based on its parent tag which is this particular relative position tag over here it will change its position so let's say if we want this particular div tag to be at the bottom right of this parent tag simply we can say bottom is equal to0 and right is equal to zero so it will position itself based on its ancestor which is the parent tag over here so let us try that so what we will do is simply we will say bottom position which should be zero over here and the right position as well which should be zero in this case so let me just save this file now and try reloading this page once again on the browser so when we reload this page as you can see there is no change right now now guys that's because we have not provided the position property over here so let us provide that so we provide the position property in this case and simply we will say absolute over here now guys let me just save this file now and try reloading this page once again on the browser so as you can see now it is at the bottom right of this particular parent tag that is the relative diff tag over here so guys in this way whenever you are going to use the position is equal to Absolute property for any particular HTML element then the position of that particular element will be provided based on its ancestor which is the parent tag over here now guys there is another scenario let's say if this particular absolute div tag is not present in any of the parent HTML tags over here but in case it is present directly inside the body so in this case what will happen so when we remove this particular diff tag and let's say we provide it inside the body tag over here so in this case Cas the body tag is its parent tag that is the ancestor tag over here so in such a case the entire body that is the entire page will be considered and then accordingly the diff tag will be positioned over here so let me just save this file now and try reloading this page once again on the browser so as you can see on the bottom right of this entire page this particular diff tag with the absolute position is now getting displayed so guys in this way whenever you are going to use the absolute value for the position property so based on the ancestor or the parent tag the HTML element will be positioned on the web page now guys apart from this we also have something called as sticky value for the position so whenever you want the element to be positioned based on the users scroll position then you can use the sticky value and you must also specify at least one of top right bottom or left for sticky positioning to work so guys let us check this with the help of example now in vs code over here so what we will do is we will create another paragraph tag in this case and this time we will say class is equal to Sticky over here so we will say class is sticky and simply we are going to say this is a paragraph tag with sticky position so guys basically we have the statement that is this is a paragraph tag with sticky position and let us provide the top attribute for this sticky position over here so after saving this file let us come to this style. CSS file over here with the PEX followed by dot we have to use the class name that is sticky and then inside this we are going to give the position property first of all in which case we are going to say that this is the sticky position and let's say we provide the top property with 100 pixels of spacing and after giving the top property let's say we provide the background color as well so over here we will give the background color as a deep sky blue color over here so let us provide this particular color in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have this is a paragraph tag with sticky position now guys what is the meaning of sticky position so whenever the user is going to scroll this particular web page this particular paragraph tag will stick itself at the top of this page so guys let us check that as well so we need to provide certain random text over here on the web page so guys we will create another paragraph tag in this case and simply we are going to generate the random text over here so guys by using the lauram m cre ation we have created some random text after the paragraph which is having the sticky class over here and the position is also sticky for this particular paragraph let me just save this file now and try reloading this page once again on the browser so as you can see we have some random text that is generated over here and we have the scroll bar that we can scroll in this case now guys as we scroll down you can notice that this is a paragraph tag will go up at the top of the page and then it will stick at the top of the page so when we are scrolling down over over here as you can see now it is sticky so guys since we have given the top property as 100 pixels over here that is the reason why it is keeping that space of 100 pixels in this case let us provide it as 0 pixels over here so when we provide top as 0 pixel in this case let me just save this file now and try reloading this page once again on the browser so now if you see when we scroll down it will go at the top of the page and then it will stick itself so guys this is the main functionality of the sticky position so basically you use the position is equal to Sticky whenever you want to fix something at the top of the page or at the bottom of the page while scrolling the web page so guys in this way you can use all the five values of the position property based on your project requirements now guys apart from this it is very important to note that the Internet Explorer does not support sticky positioning and the Safari browser requires a web kit prefix for the sticky position over here so this you should note while you are applying the position property in your project so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is z index property in CSS so stay tuned so now we will see Zed index property in CSS so guys basically the Zed index property specifies the stack order of an element and this we are going to check with the help of EX examples as well when the elements are positioned they can overlap other elements as we have seen previously with the position property so guys The Zed index property specifies the stack order of an element that is which element should be placed in front of the other element or behind of the other element and so on so guys we will see how the Zed index property will get the elements in front or behind of the other HTML elements and the element can also have the positive and the negative stack order so when we say the Zed index is positive then it will be displayed on the top and when we say the Zed index is negative then it will be displayed behind of the existing HTML elements and by default The Zed index value will be zero now guys it is very important to note that the Z index only works on positioned elements such as when the position is equal to Absolute or position is equal to relative or if it is fixed or if it is sticky position guys The Zed index will not work with the position that that is set a static value and guys apart from this The Zed index will also work on the flex items that is the elements that are direct Children of the display is equal to flex so guys let us move to the vs code over here in order to see how the Zed index works and let me just remove the previous lines of code that we had written from the HTML file as well as the CSS files over here now guys simply we are going to define the P tag over here that is the paragraph tag and we will say below is an example of Zed index IND property so guys over here we are just providing the simple statement that is below is an example of Z index property and guys now let us provide the image over here so we use the IMG tag in this case and we have a sample image in our directory over here so this particular name we are going to provide in our SRC attribute so in this case we provide the name that is sample image.png file and let's say we provide the alternate text test test image over here apart from this we will also have the width and height in this case so let's say we have 150 pixels width and 100 pixels of height so we set the height as 100 pixels over here because apart from this let us have another paragraph tag so simply we are going to provide the P tag over here and this time let's say we generate some random text using the lurm Mt abbreviation so we have provided the random text over here now guys let me just save this file now and try reloading this page on the browser so as you can see we have a simple statement that is below is an example of Z index property and then we have the random text that is getting generated over here now guys let us provide the position property in such a way that this particular text should overlap with this image that we have provided over here on this web page so guys what we have to do is inside the style. CSS property we have to provide the position property for this P tag over here so guys before providing the position property let's say we provide certain ID over here and let's say we provide the ID as per 1 so guys let me just save this file now and over here we have to use this ID that is par 1 in this case so that we can identify that specific paragraph for which we want to set the position so guys let us provide the position as relative and then guys we will use the left and bottom attributes in order to get this particular text at the top of this image so guys let us do that as well so over here inside the par 1 iD of the paragraph We will say left is equal to 10 pixels in this case so that there is certain spacing that is provided from the left and from the bottom as well we should get some spacing so that the text is displayed on the top of the image so over here we will say bottom attribute in this case and let's say this time we provide 20 pixels on the bottom so guys let me just save this file now and try reloading this page once again on the browser so as you can see the text is now positioned slightly on top but guys still it is not coming on top of the image so what we have to do is I will increase the spacing from bottom to 40 pixels over here let me just save this file now and try read loading this page so as you can see the text is now coming on top of this particular image guys let us provide the bottom to 70 pixels over here so that we can easily Identify some of the text that is coming on top of the image so this is the text that you can see is coming on top of the image and guys you will face these issues while you are working on your project based on the requirements so HTML elements are going to overlap with each other based on such positions or any other attributes that you will be giving to the HTML element so guys in such cases based on the requirements you have to decide which element needs to be displayed on top of the other element so by default the HTML Elements which are written later in our HTML file will be displayed on top by default so guys over here since the image is defined first and then followed by this P tag with the ID par one that is why this particular content of the paragraph is getting displayed on top of the image that we are displaying over here now guys in order to get this image on top of the text that is getting displayed over here inside the paragraph We need to provide the Zed index property for this particular image so guys let me just move to the style. CSS file over here so simply we are going to provide the image tag in this case and then over here simply we can provide the Zed index property and for this property we can set the value as one so guys basically by default The Zed index property for all the HTML element is set to zero over here and that is what is being set over here for the par one which is having the Zed index value as zero but when we set the Zed index property to one which means this particular image tag should come on top of the other HTML elements that is having the value of zero for the Zed index property guys apart from this we also have to set the position is equal to relative for this particular image tag in order for this Zed index to be effective because by default the position is static over here for the IMG tag in this case so let us test this scenario first first before providing the position property let me just save this file now and try reloading this page once again on the browser so as you can see the image is still behind this particular paragraph text over here that's because as I have already told you the Zed index only works on the positioned Elements which is having certain position and it should not be a static value so guys over here we need to provide the position property and then this position property let's say we provide it as relative value over here let me just save this file now and try reloading this page once again on the browser so now as you can see the image is getting displayed on top of this particular paragraph text since the imag is now having Zed index is equal to 1 now guys let us provide the Zed index is equal to 2 for this paragraph text so let us see what happens if we do so so basically we are going to provide the Zed index is equal to 2 so this time the Zed index of 2 is greater than the Zed index of one for the image tag over here so the paragraph should come on top of the image so let me just save this file now and try reloading this page once again on the browser so as you can see this text is getting displayed on top of the image over here and that is how the Zed index property Works in order to stack the HTML elements on the web page so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Overflow property in CSS so stay tuned so now we will see overflow property in CSS so guys basically the Overflow property specifies whether to clip the content or to add scroll bars when the content of an element is too big to fit inside the specified area so guys we will check this with the help of examples as well so basically when the specified area let's say we have a diff tag if it is smaller compared to the content inside the diff tag so basically the text content will go outside of the specified area that is outside of the dep tag and we can handle it by using the Overflow property so guys basically the Overflow property has the following values so as you can see visible is one of the value which is the default value over here so the Overflow is not clipped in this case the content is displayed outside of the elements box so guys let us check this with the help of example in vs code over here so simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files and now guys we are going to define the diff tag with the class container over here so simply we are going to say dot container in this case so guys basically this is the Mt abbreviation that we can use in order to create a diff tag with the class container over here now guys let us generate some random text inside this div element over here so guys we have created some random text in this case let me just save this file now and try reloading this page on the browser to see how the content looks like like so as you can see we have the div tag with the class container over here with this random generated text now guys what we will do is we will change the width and height of this particular container over here and we will also have certain background color so let me just move to the CSS file over here so simply for this container class we are going to Define certain CSS properties so let me just provide this particular container class over here and the CSS properties that we are going to provide is width is equal to let's say we provide the width of 40% of the entire screen and let's say we provide the height as 100 pixels over here apart from this we will also have certain background color so let's say we provide the background color as Aqua now guys let me just save this file now and try reloading this page once again on the browser to see how it looks like so as you can see the width of this particular div tag with this background color that is aqua is set to 40% of the entire width of the screen that we have set over here inside the CSS file and the height is equal to 100 pixel now guys the problem over here is the text that we have provided inside the diff tag is going out of the boundary of this particular diff tag over here let us provide the Border as well for this diff tag so we provide border of 2 pixel with solid style and the color is black let me just save this file now and try reloading this page once again on the browser so as you can see the border is also getting displayed but still we have the problem that is the text is going outside so guys this problem can be solved by using using the Overflow property for which by default the value is visible over here so as we can see one of the values is visible which is the default value so if we provide the Overflow value as visible so nothing will change over here for now so let me just provide the visible value in this case let me just save this file now and try reloading this page once again on the browser so as you can see there is no change right now the other value is hidden in which case the Overflow is clipped and the rest of the content will be invisible so because basically whatever text is outside of the boundary of the container tag over here that text will be invisible when we provide the Overflow value as hidden so guys let us check that as well so instead of visible we will simply say hidden in this case let me just save this file now and try reloading this page once again on the browser so as you can see whatever text was going outside of this container is now not visible over here and simply we can see only the text within this particular container which is having this background color now guys apart from this if we want to see the other content which is already clipped and is not visible to the user we can use the other value that is the scroll value so what will happen is the Overflow is CLI and the scroll bar is added to see the rest of the content so guys basically we will be able to see a scroll bar over here inside this container when we use the value as scroll so guys let us check that as well so when we provide the scroll value for the Overflow property so let me just save this file now and try reloading this page once again on the browser as you can see we are getting the scroll bar now and we can see all the content which was clipped previously by using the hidden value for the Overflow property so guys you can use this value as well which will provide the scroll bar over here on the right and on the bottom now guys apart from this we also have the fourth value that is the Auto Value which is similar to scroll but it adds scroll bars only when necessary so guys basically if you can see there is another section at the bottom which is having the scroll bar section but there is no scroll bar over here which will allow you to scroll horizontally so you can avoid that since it is not necessary right now to scroll on the left or right so we can use the fourth value that is Auto in this case so guys when we use Auto basically a scroll bar will be provided but only where it is required so let me just reload this page once again so as you can see there is no horizontal scroll bar section over here but we still have the vertical scoll bar that will allow you to read the entire content within this particular container so guys in this way if you want to restrict the width and height of a specific HTML element within which you want to display certain text over here and you want some extra text to be displayed then you can use the Overflow property that will allow you to display the scroll bar to the user so that all the information is displayed to the user based on your project requirements guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is float and clear property in CSS so stay tuned so now we will see float and clear properties in CSS so guys basically the float property is used for positioning and formatting the content inside the HTML web page and this we are going to check with the help of examples as well so a very simple example as far as the usage of the float property is concerned is an example in order to let an image float left to the text in a container so guys basically we will create a container with the diff tag and inside the div tag we will have the image that will be displayed either on the left or the right of the container and we will display the text accordingly besides the image which is present inside the container now guys the flo property can have one of the following values so basically we will see the left value in which case the element floats to the left of its container when we use the right value the element floats to the right of its container and when the value is none the element does not float it will be displayed just where it occurs in the text and this is the default behavior and when we use the inherit option basically the element inherits the float value from its parent tag over here now guys let us move to the vs codee and I'll simply remove the previous lines of code that we had written in the HTML and the style. CSS files over here now guys in order to understand the example of the float property we will have the D tag with the class container over here so guys basically we will Define the diff tag with the class container and inside this let us say we have the image so simply we are going to provide the IMG tag over here and the SRC attribute will have the sample image.png file in this case which we already have in our directory over here now guys apart from this we will also have the alternate text as test image in this case and then over here we will provide the width of 150 pixels and let's say the height of 100 pixels so that the image is properly displayed inside this container and then guys apart from this let us have some random text over here inside the container so we use the lurm Mt abbreviation over here here so guys we have generated the random text as well let me just save this file now and let us see how this particular image and the text will be displayed inside the div tag with the class container on the web page so let me just reload this page over here on the browser so as you can see by default we don't have any float property that is provided in the CSS file and the float property is set to none and this is the way that the image is getting displayed over here inside the container and to the right of this particular image we are having the text that is the random text that we have generated now guys let us say we want this text to be displayed exactly to the right of this particular image and without wasting this particular space that you can see which is a blank space over here so what we can do is simply we can say that this particular image tag should have the float property as left so what we will do is over here in the style. CSS file we will say image tag in this case and over here we will say float property for which the value should be left in this case let me just save this file now and try reloading this page once again on the browser so now as you can see the image is set to the left of this particular diff container over here let us provide certain border and the background color as well for the diff container so simply we are going to copy this class name and use it inside the style. CSS file so we use the dot character for the class name and then we will provide the CSS property so let's say we provide the background color as Aqua over here and also we will provide certain border as well so let's say we provide the border of two pixels which is of the type solid and the color is black so let me just save this file now and try reloading this page once again on the browser so as you can see we have the image that is floating to the left of this particular container and the text is getting displayed to the right of this particular image and in this way we can easily use the float property in order to position a a specific image or any other HTML element inside the container now guys let us say we want this particular image to be displayed on the right so what we can do is instead of providing the value as left we can simply say right over here so let me just save this file now and try reloading this page once again on the browser so as you can see we have the image that is getting displayed on the right of this container now let us provide certain padding as well to The Container so that it looks more decent so let me just provide the padding property of let's say 5 pixels in this case so let me just save this file now and try reloading this page once again so as you can see we have the five pixels padding that is being provided inside the container and in this way based on your project requirements you can use the float property over here now guys apart from this we also have the other value that is inherit in which case the image will inherit the float property from its parent so over here the parent is the diff tag in this case so guys let us check that as well so what we will do is let's say we provide the float property as inherit over here so by default the float property for the parent that is the container class is none in this case so the way the UI was displayed by default initially the same way the changes will be provided on the web page right now so let me just save this file now and try reloading this page once again on the browser so as you can see we have this particular image and the text is getting displayed on the right of the image but we still have the spaces on top of this text which we don't want to waste so guys what we can do is since we are inheriting the value of loat over here and the parent of this image is the diff tag in this case which is having the class container we can provide the float property to this container as well so over here let's say we provide the float property and we can decide where we want to display the image so let's say we want to display this image on the right hand side so simply we will say right and in this case so basically this float is equal to right will be inherited by this particular image tag over here since we have provided the float is equal to inherit value over here let me just save this file now and try reloading this page once again on the browser so as you can see we have the float is equal to right that is in action now guys when we provide the float is equal to left and now we are inheriting this value in the image tag so basically the image will be displayed on the left so let me just reload this page the image is getting displayed on the left of the container so guys based on your requirements you can provide the float property over here so guys in its very simple use the float property can be used to wrap the text around the images which we have seen with the help of examples as well now guys as a homework for you you can complete this example you can create three div elements and place them next to each other by using the float property which should be equal to left and comment in the comment section below once you have completed Ed this homework now guys apart from this we also have the clear property as well so when we use the float property and we want the next element below not on the right or the left so we will have to use the clear property so guys whenever we are using the fluid property we will have to clear it by using the clear property as well now the clear property specifies what should happen with the element that is next to the floating element and this we are going to check with the help of examples as well so the clear property has the value that is none by default in which case the element is not pushed below left or right floated elements apart from this we also have the left value in which case the element is pushed below left floated elements in the right value the element is pushed below right floated elements and by using the both value the element is pushed below both left and right floated elements and we also have the inherit value as well so the element inherits the clear value from its parent so guys let us check this with the help of examples in vs code over here so simply I'm going to remove the previous lines of code in this case from the HTML and the CSS files over here and then guys what we will do is we will take this example that I have just mentioned that is to display the div elements next to each other over here so guys what we will do is first of all we will have the container tag over here so we have the class name that is container in this case and let's say we have the three div elements so first div element will have the ID that is div 1 over here and it will have the text that is div 1 and then similarly we will have div 2 and div 3 over here so guys over here we have defined the three div tags with the IDS that is div 1 div 2 and div 3 inside the class that is container now guys what we will do is inside the style. CSS file we will give separate background colors for all the diff tags over here so first of all we will Define the ID that is div one and let's say we have the background color of aqua and then let's say we have the div 2 ID over here and this time we will give the background color so basically we will use the color that is yellow this time and for the third diff let's say we use the diff 3 ID and this time we will use the background color property and let's say the color that we provide is coral this time so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the div 1 div 2 and div 3 is getting displayed right now we don't have the background color for diff 3 let us check why so so basically we have made a mistake over here so instead of Dev 3 we had provided Dev hash which is not correct let me just save this file now and try reloading this page once again on the browser so as you can see we have the background colors for all the div tags right now guys in order to get all these div elements next to each other simply we can use the float property over here so in the style. CSS file for all all these div tag elements we are going to use the div tag this time and simply inside this div tag we are going to use the float property and for this we are going to use the value that is left over here let me just save this file now and try reloading this page once again on the browser so as you can see all the div elements now are floating to the left now guys let us provide certain padding as well so over here we will say padding of 5 pixels for all the div elements over here let me just save this file now enter by reloading this page so as you can see now it is having a better readability so all the div elements are placed next to each other and that is the important thing so guys basically just by using the float property over here we can have all the elements that are being placed next to each other so let's provide the float value for the div tag that is having the ID div one over here and we provide the value as left and from this div tag I'm going to comment out this particular float property let me just save this file now and see what will happen over here to this particular div that is div 1 let me just reload this page once again so as you can see we have div 1 element over here but to the right of this div one we again have div 2 this time so guys we have not provided any float property over here to div 2 element but still it is to the right of the div 1 so in order to clear this particular property of load that we had provided to div one we need to use this clear property that we have just mentioned so guys what we will do is for this div 2 ID we will simply say clear and then we will say left in this case so guys what will happen is this div 2 should come below of this div 1 element so let me just save this file now and try reloading this page once again on the browser so as you can see we have cleared the float property by using the clear property over here and now this particular div 2 is getting displayed below the div 1 element so guys in this way whatever next element is present inside the HTML file we have provided the float property to div 1 but if we want the next element that is diff 2 to be present on the next line we have to provide the clear property for this diff 2 element over here and that is what we have mentioned inside the style. CSS file that is clear it is equal to left guys apart from this you can also try the other values of the clear property as a homework for you so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is an exercise on Zed index overflow float and clear properties in CSS so stay tuned so now let us work on this exercise on Zed index overflow float and the clear properties in CSS so guys you can pause this video and practice on your own and complete all these task in this particular the exercise so that you get the better understanding on all these CSS properties so we are going to follow the below steps to complete the practice exercise first of all we will create the two div elements that is div 1 and div two IDs with the background colors and some padding so guys let us move to the VSS code over here so simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here and simply we are going to create the two div elements with the ID div 1 and div 2 so guys over here we have the div 1 and we are going to provide the text that is div 1 over here and similarly we will have the ID with the div 2 for another div tag and we will say that the text is div 2 in this case and after this we are going to move to the style. CSS file over here simply we are going to provide the ID that is div 1 by providing the hash character followed by the ID that is div one over here we will provide the background color so let's say we have the background color is yellow and guys for all the diff tag we want the padding so let's say we simply provide the diff tag over here and inside the curly braces we will have the padding of five pixels in this case so guys basically this padding of five pixels will be applied to all the diff tags over here and the background colors will be separately applied based on the ID of the diff tag so over here we have the second div that is diff two over here and then again we will have the background color and let's say we have the background color of aqua let me just save this file now and try reloading this page on the browser so as you can see we have div 1 and div 2 getting displayed on the web page now guys let us move to another task over here we have position the div 2 above div 1 with relative position and applying left and bottom properties so guys basically we have to move the second div above the first div over here by using the relative position so guys what we can do is for this diff 2 we will set the position as Rel this time so over here we say position is equal to relative and we will say left it is equal to 20 pixels so guys basically we want certain spacing from the left and the bottom as well so that this second div element can be displayed on top of this first div element over here so let's say we provide the left property with the spacing of 30 pixels so we say 30 pixels and from the bottom as well we provide some spacing so let's say 20 pixels of spacing is provided over here from the bottom let me just save this file now and try reloading this page once again on the browser so as you can see we have the div 1 now getting displayed behind this particular div 2 element so guys this happened because from the normal position of the div 2 we have slightly moved it or positioned it from the left and the bottom with these numbers that we have specified in the CSS file over here and apart from this since we have defined the second element after the first element and that is the reason Reon why div 2 is getting displayed on top of the div 1 so guys we have completed the second task as well that is position the div 2 above div 1 with relative position and applying left and bottom properties now guys we need to get the div 1 above div 2 using the Z index property so guys over here what we have to do is at the same position we want to display div one on top of this particular div 2 so what we can do is simply inside the style. CSS file for this D 1 we can provide the Zed index property so over here when we provide the Zed index by default The Zed index of div 2 is zero so we want to provide a number that is greater than zero for this Zed index of the first div element so over here we will provide the Zed index of one let me just save this file now and try reloading this page once again on the browser so as you can see there is no change right now we were expecting that d one should come on top of div 2 so guys why there is no change because we have not provided the position property for the first div so guys Z index property will not work for the position is equal to static value which is the default value for the position attribute and by default the position value is now having the static value for this first Dev element so simply we can say position is equal to relative this time so that we are positioning this particular first div element as well let me just save this file now and try reloading this page once again on the browser now to see whether the Zed index is effective this time so when we reload this page as you can see div 1 with the yellow background color is now getting displayed on top of the div 2 which has now gone behind over here so guys let us reduce certain spacing from the bottom for the diff 2 element so that we can see certain text over here for the second Dev element so let's say we provide the 12 pixel spacing from the bottom let me just save this file now and try reloading this page so as you can see div 2 is still getting displayed behind of this particular div one element so in this way we have used the Zed index property always remember that it should have the position property as well whenever you are using the Z index property and the value of the position property should be anything other than static value now guys apart from this let us create div 3 with 40% width and 100 pixels height with random text that will overflow so guys let us check this as well so over here after the second div let us create another div over here with div 3 ID and let's say we create create some generate text over here by using the LM M abbreviation so over here we have generated certain random text so let me just save this file now and try reloading this page once again on the browser so as you can see we have another div element over here now guys in the same task we want this div element to be having the width of 40% and height of 100 pixels so let us set that as well so inside the style. CSS file we will say div three which is the ID of this third div element and for this third div we we want the width of 40% this time as per the task over here so we have the width of 40% and height is 100 pixels so here we will say height it is equal to 100 pixels this time and apart from this the random text Will overflow so guys we will also have the background color so let's say we have the background color of coral value over here so let me just save this file now and try reloading this page once again on the browser so as you can see we have the 40% width for this third div element and the height of 100 pixel but guys by default we have the Overflow value as visible this time so basically the text is going outside of this container so guys we have completed the task but the text is still going outside of this particular container that is the diff tag so what we will do is we will move to the other task that is use the Overflow property to create scroll bar for this diff three element so guys what we will do is since this particular text is going outside of the container simply we can use the Overflow property and have the scroll bar on this particular container so that entire text is limited to be displayed within this particular container so guys let us provide this overflow property over here inside the style. CSS file so over here we will say overflow property and this time we will say scroll over here so basically a horizontal scroll bar will be displayed we can also use the value of Auto over here for the Overflow property let me just save this file now and try reloading this page once again on the browser as you can see we have the vertical scroll bar over here and this is the way that we can use the Overflow property in order to make the extra text fit inside the container that is having the limited width and height over here guys apart from this let us move to the other task that is to create the diff four and five that should float left and right respectively so guys what we will do is we will create more two div tags over here inside the HTML file so after this div 3 we will have div 4 so let's create the fourth div with the ID div 4 over here and we will say div four this time and again we will create another div with the ID that is div 5 over here so we have created div 4 and div 5 as well we will also apply the background colors for this diff four and div five so let us do that as well so we say diff four with the background color so let's provide some background color over here so we will provide the color as yellow green and for D five as well we will provide some other color this time so guys over here we use the background color and let me just see what can be the value so we will use some light value over here so let's say we use this particular color for the background color let me just save this file now and try reloading this page once again on the browser so as you can see we have both the divs that are getting displayed but guys we want both these divs to be displayed on the left and on the right respectively by using the float property over here so both the divs should float on the left and the right side of the screen so guys what we can do is simply we can provide the float property for the diff Four Element so over here we will say float it is equal to left and for the div Five Element we can say float it is equal to right this time let me just save this file now and try reloading this page once again on the browser so as you can see we have D four on the left and div five on the right and that is how we can use the float property in order to make the HTML elements position on any side of the screen on on the left or the right of the screen now guys let us move to another task we will create another div that is div 6 that should be displayed below div 4 and diff 5 so let us create another diff tag over here so basically we are going to create another diff tag for which the ID should be six this time and the value will be D six over here let us see how this will be displayed by default without providing any position so in the style. CSS simply we are going to provide the background color for this sixth element so over here we will say diff six and then let's say we provide the background color and we will use this particular color over here as the background color this time let me just save this file now and try reloading this page once again on the browser so as you can see diff six element by default is getting displayed to the right of D4 and to the left of D5 but guys based on our task we want to display the diff 6 below the div 4 and the div Five Element so how this can be done we can use the clear property since we have already used the float property for the div 4 and div 5 so since the div 6 element is the next element to the div 4 and div five elements we need to use the clear property over here in order to get this sixth div element on the next line so guys what we can do is simply we will say clear and then we will have the value as both so let me just save this file now and try reloading this page once again on the browser so now as you can see diff 6 is getting displayed below this diff 4 and diff 5 respectively and this is how we can use the float and clear properties as well if we provide the left value over here let us check what will happen so when we save this file now and try reloading this page so there is no change right now and with the value that is right as well probably there will be no change over here so guys basically the important thing is to make use of this clear property after we have used the float property on any of the HTML elements to make the other that is the next HTML element ments appear on their original positions so guys in this way we have completed all these task in our exercise over here so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is horizontal and vertical align in CSS so stay tuned so now we will see horizontal and vertical alignment in CSS so guys basically in order to horizontally Center a block element we can use the margin property and set the value as Auto and this we are going to check with the help of examples as well it is very important to note that Center aligning has no effect if the width property is not set or is set to 100% so guys whenever we are going to use the margin property with the value as Auto we need to have the width property of that particular HTML element so guys let us check this with the help of example in vs code over here so I'll simply remove the previous lines of code that we had written in the HTML and the CSS files over here now guys in the HTML file simply we are going to have the div element so let's say we have the div tag over here and simply we are going to say this is a div element so guys let me just save this file now and try reloading this page on the browser so as you can see we have this is a div element over here now guys let us have certain background color padding and the the width of this particular Dev element so what we can do is simply in the style. CSS file over here we are going to define the Dev tag and let's say we provide the width as 50% over here so we say 50% of width and then let's say we have the background color property and we set the value as yellow color in this case and then apart from this let us say we have the padding of 10 pixels from all the four sides so guys in this way we have provided the width of 50% over here here so only the 50% of the entire width of the screen will be taken by this particular Dev element so let me just save this file now and try reloading this page once again on the browser so as you can see the 50% width is being taken by this Block Level element that is the dev element over here inside this web browser guys let us have the Border as well so over here what we will do is we will have the Border property and we will see two pixels width of the border and then the Border style will be solid and the color of the Border should be black color in this case let me just save this file now and try reloading this page once again on the browser so as you can see it is now looking more decent over here the div is now having the border of the black color and also the yellow background color now guys this particular div element is aligned at the left hand side of the browser what if we want this particular div element at the center of this particular web page so what we can do is simply we can provide the margin property so over here we will say margin and the value should be Auto so guys when we set the value as Auto the margin from the left hand side of this div element and the right hand side of this div element will be set automatically in such a way that the left margin and the right margin will be same so guys let me just save this file now and try reloading this page once again on the browser so as you can see the left hand side and the right hand side margin is set as same and in this way the div element is now placed set the center as far as the horizontal alignment is concerned so guys this is a very basic way in order to align the HTML element horizontally at the center location by using the margin equal to Auto property over here now guys apart from this we can also Center align the text over here by using the text align property so guys if you notice on this particular web page the text is being aligned at the left hand side of this particular Dev element what if we want this particular text at the center of the div element that is over here so what we can do is simply we will say text align property in this case so we have text align and the value that we provide is Center let me just save this file now and try reloading this page once again on the browser so as you can see the text is now aligned at the center of this particular Dev element and in this way you can also align the text horizontally based on your requirements now guys apart from this we can also Center an image by using the margin equal to order and display is equal to block so guys so far we have seen how we can display the div element at the center of the page what if we have the image to be provided on the web page and it should be aligned at the center of the page so guys let us check that as well so what we will do is after this div element we will simply have the image tag over here and for this image tag we will have the SRC that is the source attribute and simply we are going to provide the image name over here so let's say we provide sample forest image in this case which is already present inside the directory where this particular HTML page is being stored and then guys apart from this for this alt attribute we will say test image in this case so let me just save this file now and try reloading this page once again on the browser so as you can see the image is getting displayed over here let us decrease the width and height of this particular image so that it can be displayed properly so inside the style. CSS file over here simply we are going the IMG tag and then guys over here let us say we first of all provide the display property and we want to display it as a block element so guys by default the image elements are displayed as inline elements and we can display them as block element by using the display property over here and then apart from this we will set the width of let's say 100 pixels over here and also the height as 100 pixels in this case we will be setting the width and height as 100 pixels so that the size of the image on the web browser is displayed properly so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the image that is getting displayed over here now guys let us say we want this particular image to be displayed at the center of the page so what we can do is simply we can provide the Marin equal to Auto so over here we will provide the margin property and simply we are going to provide the value as Auto in this case and for the display part we have already provided the value as block so let me just save this file now and try reloading this page once again on the browser so as you can see now the image is getting displayed at the center of this web page apart from this you can also increase the width and height of this image so let's say we provide the width as 200 pixels and height as 150 pixels over here let me just save this file now and try reloading this page once again on the browser so now as you can see the image is being displayed properly over here and it is getting displayed at the center of the page so guys just by using the margin property with the value of Auto you can Center align the elements as far as the horizontal alignment is concerned now guys apart from this we can also have the elements Center vertically by using the top and bottom padding over here so guys let us have another HTML element in this case and this time let us say we have the paragraph tag over here so guys let me just save this file now and try reloading this page one again on the browser so as you can see we have this is a paragraph tag over here now guys let us provide certain background color and the height property to this particular paragraph tag so what we can do is simply in the style. CSS file over here we will have the P tag and simply we are going to say the background color and this time we will say the color as aqua and then guys apart from this let us have certain height as so over here we will say height and let's say we have the height of 50 pixels in this case so simply we are going to provide the 150 pixels value for this height attribute over here and the width of this particular paragraph will be the entire width of the screen by default so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color is aqua for this particular paragraph tag and we have this text over here that is the paragraph tag in this case now guys let us say we want to align this particular text at the center as far as vertical alignment is concerned inside this paragraph tag over here so guys what we can do is simply inside the style. CSS file over here we can provide the padding property now guys the padding property takes the values in such a way that the first value will be provided to the top padding followed by the right padding and then we have the bottom padding and then we have the left padding over here so simply what we can do is we can provide 70 pixels of top padding in this case and the pixs from right and then again 70 pixels from bottom so that the top and bottom padding are same over here which will help us in order to keep this text at the center of this particular paragraph tag and then after this we have the zero pixels for the left padding over here so I simply we are going to provide Zer pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see the top and bottom padding are being provided over here but guys if you notice we have also provided the height as well so if we inspect this particular paragraph tag in this case let us check the CSS Box model over here so as you can see this is the content but we also have the padding that is getting highlighted over here in the light green color so the padding of top and bottom is getting highlighted but apart from this we also have the height of 150 pixels over here so guys simply we have to remove the height of 150 pixels in order to see that the text is perfectly at the center of the paragraph tag as far as the vertical alignment is concerned so guys let me just save this file now and try reloading this page once again on the browser so now if you notice we have the text at the center of this particular paragraph tag as you can see the vertical alignment is at the center of this background color now so guys in this way we can simply provide the padding property in order to vertically align the text inside the HTML element now guys let us say we want this particular text at the center over here as far as the horizontal alignment is concerned so guys what we can do is simply we can use the text align property and we can set the value as Center let me just save this file now and try reloading this page once again on the browser so as you can see the text is now aligned at the center of this particular paragraph tag over here so guys in this way we can use the combination of the padding property and the text align property in order to Center align the text inside the HTML element now guys apart from this we can also have the text aligned at the center vertically by using the line height property so guys I'll leave this task as a homework for you so that you can practice on your own and comment in the comment section below how you can use the line height property in order to vertically align the text at the center of the HTML element so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is combinators in CSS so stay tuned so now we will see combinators in CSS so guys basically combinators are the way to select the HTML elements using the CSS selectors and this we are going to check with the help of examples as well so basically there are four different combinators in CSS so the very first combinator is The Descendant selector which we use with the help of the space character over here so guys let us check this with the help of example in vs code over here I'm going to remove the previous lines of code that we had return in the HTML and the CSS files we have the two paragraph tags inside the diff tag in this case so guys let me just save this file now and try reloading this page on the browser so as you can see we have this is para one inside div tag and we have this is par 2 inside diff tag now guys what do you mean by descendant selector so basically inside the diff tag let us say we want to identify these two paragraph tags over here so since both these paragraph tags are inside this particular diff tag simply we can use the div tag followed by the space character and then we can mention this paragraph tag over here so guys let us move to the CSS file over here we can provide the diff tag in this case followed by the space character and then we have the P here so basically this space character that we have provided in between the div and the P tag is The Descendant selector over here by which we are saying that inside the div tag we have the paragraph tag over here and only for those paragraph tags we want to provide certain CSS property that we are going to apply over here basically the paragraph text inside the diff text should have the background color as yellow so let me just save this file now and try reloading this page once again on the browser so as you can see both these paragraph tags are now having the background color as yellow that's because both of them are present inside the diff tag and we have provided the CSS property in such a way that the diff tag should have the paragraph tag then only the background color should be applied as yellow color over here now guys let us say we have another paragraph tag which is outside of this D tag let me just say save this file now and try reloading this page once again on the browser so now if you see this is the paragraph 3 outside diff tag is getting displayed but it is not having the background color as yellow that's because it is not present inside one of the diff tags over here so if you notice we have provided the CSS property to only those paragraph Texs which are present inside the DI tag over here and this is how the descendant selector will work as far as the CSS property the implementation is concerned now guys apart from this we also have the child selector over here which can be used by using this greater than symbol so guys let us check the example of this as well so by child selector we mean that this is the parent tag that is the div tag over here and inside this parent tag we have the two child tags that is having the text that is this is par one inside div tag and this is par 2 inside div tag now guys let us say we have another paragraph tag over here inside this div tag so guys basically this is the section tag which is the direct child of this div tag over here so guys basically we are saying this is a par tag inside a div section tag which means first of all there is a div tag over here and then we have the section tag which is the direct child tag of this div tag and then inside the section tag we have the paragraph tag let me just save this file now and try reloading this page once again on the browser so if you notice this is parat tag inside d section tag is also having the background color as yellow that's because we have provided this particular CSS property that is the background color is yellow for all the paragraph tags that are present inside the diff tag now guys let us say we only want to provide the background color to the direct child tags of this diff tag so what we can do is all we provide the diff tag and use the greater than sign over here so guys this is basically the child selector that we are using in which case we are saying that the parent tag should directly have the child tag over here in order to apply the CSS properties Bally we are going to provide the P tag over here so we have the div tag followed by greater than symbol which is the child selector and then we have P tag so guys what change will you notice on the web browser so basically whatever direct childrens of this div tag are present will be having the background color as Aqua which means both these paragraph tags should have the aqua color and then whatever descendants are present which means the div tag which is also having the section tag over here which is again having the child tag as the paragraph tag over here this paragraph should have the yellow background color now so guys let me just save these files now and try reloading this page once again on the browser so as you can see the two paragraphs that are the direct childrens of the div tag are now having the aqua color because of this child selector over here and this descendant selector is helping us in order to have the paragraph tag inside the diff tag have the background color as yellow color over here guys apart from this we also have something called as adjacent sibling selector so guys let us check that as well so what is the meaning of adjacent sibling selector over here so inside this vs code if you notice we have this div tag over here and inside the div tag we have the paragraph tags as well now guys what do we mean by sibling selector over here so basically after this D tag we have this paragraph tag over here which is the sibling tag for this particular diff tag so how do we apply the CSS property to this sibling tag so simply we are going to use the plus character over here in order to provide the CSS properties to the Adent sibling selector over here so guys what we will do is inside the style. CSS file over here simply we are going to set and Then followed by plus and then we have the P tag over here and then inside this let us say we want the color of the text to be displayed as red color so over here we provide the color property and the value as red so let me just save this file now and try reloading this page once again on the browser so as you can see the text color of this paragraph tag is now updated to the red color so this is the meaning of the ages and sibling selector by using the plus symbol over here so whatever tag that we use that is in this case we have used the diff tag over here followed by plus operator and then we have the P tag which means whatever sibling is present after the diff tag should have these particular CSS properties over here and since this particular paragraph tag was after this particular diff tag in this case the red color was provided s the text color to this paragraph tag over here guys let us have couple of more paragraph tag after this Par 3 over here so I'm going to copy these lines of code over here simply we will say this is 4 and par five outside diff tag so the same CSS property will be applied to the remaining paragraph tags over here as well so let us check that simply I'm going to save this file now and try reloading this page once again on the browser so as you can see the para 4 and par 5 are now getting displayed but it is not having the text color as red color why so because the plus operator that we have used in order to provide the CSS property for the ages and sibling selector will only work to the direct sibling selector over here and that is why only this first paragraph tag will have the text color as red now guys in order to apply the CSS properties to the remaining siblings as well that is the par 4 and par five as well what we can do is we can use the fourth combinator that is the general sibling selector and this is the symbol that we are going to use so guys let us check this as well so over here what we will be doing is first of all we will provide the diff tag over here and then we will have have the general sibling selector over here followed by the P tag in this case and then guys we can have the color that we want to have based on our requirements so let us say we provide the text color as blue color now so over here we will provide the blue color as the text color let me just save this file now notice that we have used the general sibling selector now after the agent sibling selector so guys basically all the siblings should have the color as blue color as far as the text color is concerned so let me just save this file now and try reloading this page once again on the browser so as you can see the par 4 and par 5 are now having the text color as blue color now so guys this is the difference when we use the agent sibling selector only one sibling will be used in order to apply the CSS property after this particular diff tag that we had used over here but when we use the general sibling selector then all the siblings will be used in order to provide the required CSS properties that we have provided over here so guys in this way you can use the different combinators as we have seen in this particular examples based on your requirements in order to provide the required CSS properties comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is sudo classes in CSS so so stay tuned so now we will see Pudo classes in CSS so guys basically a Pudo class is used to define a special state of an element and this we are going to check with the help of examples as well so for example Pudo classes can be used in order to style an element when a user mouses over it another example is to style the visited and unvisited links differently and we can also style an element when it gets focused so guys we will check some of the examples how we can use the sudo classes by using the CSS properties so the very first example that we are going to see is how do we display the paragraph when the mouse is over the div element so guys let us move to the VSS code over here and simply I'm going to remove the previous lines of code that we had written in the HTML and the style. CSS files so inside the HTML file over here let us first of all Define the div tag in this case so basically we are going to have the div tag and simply we are going to say this is a div tag get mouse cursor on this div tag so guys basically we have a very simple statement that this is a div tag and we need to get the mouse cursor on this div tag after which the paragraph tag will be displayed so guys basically we will have another paragraph tag over here so simply we are going to have the P tag in this case and then we will say this is a paragraph tag so guys we have a simple statement that is this is a paragraph tag let me just save this file now and try reloading this page on the browser so as you can see we have this is a diff tag get mouse cursor on this diff tag so basically when we get the mouse cursor on this particular diff tag we want this particular paragraph tag to be displayed so guys by default both the diff tag and the paragraph tags are getting displayed right now so let us Define certain CSS properties in order to achieve this task in such a way when the user gets the cursor on this particular diff tag the paragraph tag should get displayed so guys over here inside the style. CSS file first of all we are going to Define certain CSS properties for the paragraph tag over here so we will say background color as yellow so we are going to provide the background color for this paragraph tag over here and apart from that we are also going to have the padding of 10 pixels in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is a paragraph tagt is now having certain CSS properties that we have already defined in the CSS file now guys what we will do is simply we are going to provide display property and the value that we are going to use is none in this case so that the paragraph is not displayed by default and when the user gets the cursor on this particular diff tag we want that paragraph to be displayed so let us Define those CSS properties as well so we have provided the display is equal to none let me just save this file now and try reloading this page page once again on the browser so as you can see the paragraph is not getting displayed by default because we have provided the display property as none now guys when we get the mouse cursor on this particular diff tag nothing is happening over here right now so we need to define the codo class over here so that is what we are talking about right now so we can use the Cudo class in order to display the paragraph that is not getting displayed by default over here so how do we do that so we need to define the hover property on this diff tag over here so we need to define the diff tag over here inside the style. CSS file followed by colon and then we have something called as hover so guys always remember that we use a single colon over here in order to define the codo class so in this case you can see there are multiple pseudo classes that you can use after a single colon over here so basically as you can see these are all the sudo classes that you can use now guys after using the hover Pudo class over here we want this particular paragraph tag which is the sibling which means it is the HTML tag that is next to the div tag over here so guys basically this is the sibling of the diff tag so we want this particular paragraph tag to be displayed so what we can do is after this over the next paragraph tag that is a sibling needs to be displayed so simply we are going to use the combinator that is plus over here and then followed by the paragraph tag that is p in this case so guys what do we mean by this so basically Whenever there is a div tag and we get the mouse on that particular diff tag the next sibling to that particular div tag which is represented by the paragraph tag over here should be applied the CSS properties that we are going to Define inside these curly braces so simply we are going to say display it is equal to block in this case so guys basically instead of display is equal to none it will be set as display is equal to block let me just save this file now and try reloading this page once again on the browser so now if you see the paragraph is not getting displayed by default but the moment we get the cursor on this div tag as you can see this is a paragraph tag is getting displayed below the diff tag so guys in this way you can easily use this Udo class in order to Define your own State inside the style. CSS file over here based on your project requirement so guys this was one of the example of this Udo classes over here and we have used the sibling combinator in this case there can be cases wherein the paragraph tag is inside the diff tag over here so let us check that example as well so let's say we cut this line of code over here and paste it inside the diff tag in this case so guys basically this paragraph tag is now the child of this particular parent tag that is the div tag so let me just save this file now so instead of using the plus operator simply we can use the space character over here so guys what do we mean by this so basically we have the div tag and when we get the cursor on this particular div tag the paragraph tag inside the diff tag should be displayed based on this particular CSS property that is display is equal to block so guys let me just save this file now and try reloading this page once again on the browser so there will be no change in the functionality the only change that we have done is we have made this particular paragraph tag as the child tag of this diff tag which is the parent tag now so guys when we get the cursor on this particular diff tag the paragraph tag is getting displayed over here based on the CSS properties that we have defined so guys this is one of the examples of the codo classes over here apart from this for the anchor tags that is the link tag over here we have different classes as well so if you see we have something called as link Pudo class and apart from this we also have the active sudo class as well and then we also have the visited sudo class so guys basically these are all the sudo classes that you can use in order to define the CSS properties based on the state of that particular anchor tag whether it is being visited by the user or not and then guys apart from this we also have something called as first child Pudo class over here which matches a specified element that is the first child of another element over here so guys let us check this as well with the help of example so if we take the same example that is inside the diff tag we have a paragraph tag over here and let us copy this line of code once again and we will say this is a paragraph tag one and for the second paragraph tag we will say this is a paragraph tag two over here now guys let me just save this file now and try reloading this page once again on the browser so now if we get the cursor on this particular div tag both the paragraphs that is paragraph tag one and paragraph tag two are getting displayed over here that's because we have provided the CSS properties for all the paragraph tags inside the diff tag over here now guys let us say we only want the first child that is the first paragraph tag over here to have the display property in this case so guys what we can do is simply we can use the first child Pudo class over here so in the same example we are going to go in this style. CSS file over here and after the paragraph tag that is the P tag in this case we will provide colon and Then followed by first child in this case so as you can see this is the Cudo class that we can use so guys after this P tag we have the first child Pudo class so guys by this we mean that we need to take only that particular paragraph which is the first child of this particular diff tag over here so let me just save this file now and try reloading this page once again on the browser so now if we get the cursor on this particular diff tag only the first paragraph tag is getting displayed over here that's because we have instructed the CSS file in this case in order to display the paragraph which is the first child of this diff tag over here guys apart from this you can also combine the HTM ML Class name with the pseudo classes as well so this I'll leave up to you as a homework for you so that you can practice on your own so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Pudo elements in CSS so stay tuned so now we will see sudo elements in CSS so guys basically a CSS sudo element is used to style specified parts of an element and this we are going to check with the help of examples as well so for example the sudo elements can be used to style the first letter or the first line of an HTML element or also it can be used in order to insert the content before or after the content of an element so guys some of the examples include we have something called as first line over here which is one of the C elements now guys it is very important to note that whenever you are using the Udo elements in the style. CSS file we need to have two times colon over here followed by the pseudo element that we are going to use so guys let us check this with the help of example in vs code over here so simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here now guys we are going to have a diff tag in this case so simply we are going to have the diff tag and and we are going to Define some random text over here so simply we are going to have the lurm Mt abbreviation over here that can help us in order to generate the random text in this case now guys let me just save this file now and try reloading this page once again on the browser so as you can see we have certain random text that is getting generated on the web browser now guys let us say we want this particular first line of this diff tag to be colored as red color over here so how do we do that so basically we can simply use the Pudo element that is the first line in this case inside the CSS file in order to have the text color as red so guys let us move to the CSS file over here and inside the CSS file simply we are going to define the div tag in this case and then as I have told you we have to use two times colon over here and then followed by the pseudo element that is first line in this case so guys basically we are going to use the first line hudo element and then we need to have the open and close curly braces inside which we are going to define the CSS properties so guys in this case simply we are going to use the color CSS property and simply we are going to set the text color as red color over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see the first line of this particular diff tag which is having four lines over here is now having the text color as red color in this case guys we can have other CSS properties as well being defined over here so let's say we want the text size to be larger so in this case simply we are going to use the font size CSS property and simply we will say large value in this case so let me just save this file now and try reloading this page once again on the browser so as you can see the font size is increased to some extent now let us use some other value that is larger in this case so that we can see the font size of the first line clearly larger compared to the other lines of this particular diff tag over here so guys let me just reload this page once again on the browser so as you can see the font size is larger now compared to the font size of the other lines of the same diff tag in this case now guys apart from this we can also use the first letter hudo element so let's say instead of having the red color for this first letter we want this first letter to be displayed in some other color so guys what we can do is simply inside this style. CSS file over here again we are going to define the diff tag and then after this we are going to provide two times colon and then simply we can say first letter pseudo element so guys basically we use the first letter pseudo element in order to define the CSS property for the first letter of this particular HTML element over here so guys inside this what we are going to do is let's say we want a different color so the color that we are going to use is blue in this case so guys we have set the color as blue and let's say we want the font size to be larger over here so simply we are going to define the font size as 32 pixels in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see the color of the first letter of this particular diff tag has been updated to the blue color now and also the font size of this first letter is 32 pixels in this case just like how we have defined over here inside the style do CSS file so guys basically this first letters Udo element can help you in order to provide certain CSS properties to this particular first letter of this HTML element based on your project requirements now guys apart from this we also have something called as before Pudo element so guys let us check this as well so what we are going to do is before this diff tag we are going to have a heading over here which is going to be the H1 heading so we will say this is heading one in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the heading and it is having its default font size over here now guys let us say we want some icon to be displayed before this particular heading so what we can do is simply we can use the before pseudo element in order to display a particular icon or Emoji before the HTML element so guys let us check that as well how it can be done so basically inside the time CSS file over here simply we are going to define the H1 tag in this case and Then followed by 2 * colon and then we have something called as before so as you can see this is the Pudo element that we will be using and then guys inside this what we can do is simply we are going to have the content CSS property and we are going to say URL and inside this URL we are going to provide the name of the Emoji that we want to display before the heading so guys over here I have downloaded a smiley emoji over here so we are going to use the same smiley emoji in this case so basically we are going to provide the name of this PNG file that is smiley. PNG so guys since we are using the before pseudo element the smiley emoji will be displayed before the heading over here so guys let me just save this file now that is the style. CSS file and let me just reload this page once again on the browser so as you can see this is the smiley emoji that is getting displayed just before the heading that we have defined over here now guys in order to display this Emoji after the heading over here that is this is heading one so what we can do is simply instead of using the before pseudo element we can use the after Pudo element so guys what we can do is simply inside the style. CSS file over here instead of having before we will have after in this case so guys let me just save this file now and try reloading this page once again on the browser so so as you can see now the Emoji is getting displayed after the heading over here just by using the after pseudo element in this case so guys in this way we can use the different pseudo elements based on our requirements now guys apart from this we have something called as marker pseudo element as well which is used in order to define the CSS properties for the unordered list or the ordered list markers that are the numbers or the bullet points so guys this marker Pudo element I'll leave up to you as a homework for you so that you can practice on your own as far as the list items are concerned so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is opacity or transparency in CSS so stay tuned so now we will see opacity or transparency in CSS so guys basically the opacity property specifies the opacity or the transparency of an element and this we are going to check with the help of examples as well the opacity property can take a value from 0.0 up to 1.0 so guys basically we can provide the values that is from 0.0 and then we can also provide 0.1 0.2 0.3 and up to the value that is 1.0 so if you provide the lower value the more transparent the element will be B so guys by default the opacity will be set as 1.0 to all the HTML elements and simply by decreasing this value towards 0.0 you will be increasing the transparency of that particular HTML element so guys let us check this with the help of example in vs code over here so simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here now guys what we are going to do is we are going to insert an image in our HT ml file in this case so basically we are going to have the image and for the source attribute we are going to define the sample image over here that we have already saved in our directory so guys basically we are going to use this particular sample forest image in this case and then for the alt attribute simply we are going to provide test image as the alternate text over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the IM image that is getting displayed over here now guys we are going to set the width and height of this particular image inside the style. CSS file so over here simply we are going to provide the width and height inside the IMG tag over here so guys let's say we have the width as 200 pixels and height is 150 pixels over here so basically we are going to Define these withd and height in this case let me just save this file now and try reloading this page once again on the browser so as you can see this is this is the image that is getting displayed over here on the web browser now because by default the opacity value is one over here so simply when we provide the opacity CSS property so as you can see this is the opacity CSS property that we are talking about right now so by default the value is one right now over here so it is 1.0 let me just save this file now and try reloading this page when we reload this page we won't be able to see any change because this is the default value that we have provided over here so as you can see after reloading the page there is no change inside the image in this case now guys let us decrease the opacity to some extent over here so that we can see certain transparency inside this particular image so let's provide the value as 0.8 in this case so the moment we provide 0.8 as opacity transparency effect should be provided to some extent to this particular image so guys let me just save this file now enter TR reloading this page once again on the browser so as you can see to some extent we can see the transparency inside this image now and that is how the opacity CSS property works let us decrease the value to 0.5 now so that 50% of the transparency can be implemented on this particular image let me just save this file now and try reloading this page once again on the browser so as you can see 50% transparency can be seen in this particular image right now guys what we will do is we will also provide the original image as well over here so simply what we will do is again we are going to copy this line of code once again over here so this IMG tag is again having the source attribute as the sample forest image and it is also having the alternate text test test image over here now guys in order to identify what we will do is simply we are going to provide couple of line breaks in this case so first of all for the first image what we will do is we will say that this is the original image over here so simply we are going to provide the paragraph tag in this case and then we will say that this is the original image and then after the line breaks again we are going to have the paragraph tag over here and then we will say that this is the modified image in this case so guys for the original image we are going to have certain ID over here so let's say we have the ID as original in this case and for the second image that is the modified image we are going to have the ID which is going to be modified in this case so Guys these IDs are provided so that we can identify between both of these images right now since we are using the common width and height for both the images so guys what we will do is I'll simply remove the opacity over here from this particular image and then we would Define the ID of the modified image over here so simply we are going to provide the hash character and for the modified ID so we are going to copy this modified ID and paste it over here and we are going to provide the opacity as 0.5 that is the 50% of transparency so guys basically for the modified image we are going to provide the opacity as 50% that is 0.5 is the value and for the original image we have not provided any opacity for which the default opacity will be one in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have this original image that is having the opacity as one and we have the modified image over here which is having certain kind of transparency in this case when we set the opacity as 1.0 so there will be no change in both the images let me just reload this page once again on the browser so as you can see there is no change right now but when we decrease the opacity so let's say we provide 0.3 as the opacity so basically a lot of transparency will be provided to the modified image over here so let me just save this file now and try reloading this page once again on the browser so as you can see 0.3 opacity is helping us in order to provide the transparency to this particular modified image over here so guys in this way you can easily use the opacity CSS property in order to provide certain transparency to your images or any other HTML elements based on your requirements now guys apart from this let us check another example let us provide the transparency on Hover effect so guys what does this mean is whenever we are going to get the cursor on this particular image over here the transparency should be applied over here so guys what we will do is instead of Simply Having the modified ID and providing the opacity is 0.3 over here we are going to provide 50% transparency so we are going to provide opacity is equal to 0.5 but this should be applied when we get the cursor on this particular modified image over here and not by default so guys what we have to do is simply for this X modified CSS selector after this we are going to provide colon and then we are going to use the codo class that is hover over here so guys basically what does this mean is whenever we are going to get the mouse cursor on this particular HTML element that is having the ID as modified the opacity of 0.5 will be applied over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see the original and the modified images both are looking same because by default the opacity is one right now on both the images but the moment we get the cursor on this particular modified image as you can see the transparency effect can be seen over here since we have provided the hover effect on this modified image over here by applying the opacity is equal to 0.5 in this case so guys basically when we get the cursor over here transparency is set to 50% and when we get the cursor outside of this image the opacity is again set to 1.0 which is the default value so guys in this way you must be seeing many websites wherein when you get the cursor on a specific image the transparency is either increased or decreased so this is how the CSS properties are applied on those websites in such a way that the hover effect will help you in order to increase or decrease the transparency by using the opacity CSS property so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is vertical navigation bar in CSS so stay tuned so now we will see vertical navigation bar in CSS so guys basically having an easy to use navigation is very important for any website and with the help of CSS you can transform the boring HTML menu into a goodlook navigation bar and this we are going to check with the help of examples as well by creating the vertical navigation bar using CSS so guys basically a navigation bar is nothing but it is the list of links and we are going to create the unordered list inside which we are going to have the list of links which we are going to convert it into the vertical navigation bar using CSS so guys we will be using the UL which means the unordered list and the lii items to create a navigation bar so guys let us move to the vs code over here and simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here now guys simply what we are going to do is as I have told you we are going to use the unordered list over here so we are going to have the UL tag along with it we are going to have the Ali items as well which are the list items and we are going to have four list items initially so guys as you can see we have created the unordered list inside which we are going to have the four list items over here and then guys apart from this we are also going to have four links inside all these list items so we are going to have the a tag over here and then for the hrf attribute simply we are going to provide the hash character in this case for the test purpose now guys let us provide certain link text over here so first of all we are going to have home and then we have news and then then we have contact over here and then we are going to have the fourth item that is about in this case so guys basically we have defined the unordered list inside which we are having the four list items and each list item is having the anchor tag which are having the different link text over here so guys let me just save this file now and try reloading this page on the browser so as you can see we have four links over here now guys we are going to make use of the CSS file in this case and we are going to use used the different CSS properties in order to convert this list item into the vertical navigation bar over here so guys what we have to do is inside the style. CSS file which is attached to this HTML file over here first of all we are going to remove these bullet items in this case so we are going to have the unordered list that is the UL tag over here and simply we are going to say list style type CSS property the value should be none in this case so guys basically what will happen is these bullets will be removed from the web browser so guys let me just save this file now and try reloading this page on the browser so as you can see there are no bullets that are appearing inside this list now guys let us remove the padding and the margin as well that is present by default over here inside the UL tag so simply we are going to provide padding and margin it is equal to 0 pixels in this case let me just reload this page once again so as you can see there is no more padding and Mar for the unordered list over here now guys for these links what we are going to do is we are going to remove the underling setup present over here so simply we have to provide the Alli tag inside which we have the anchor tag over here that is the a tag so for this particular text we are going to provide the text decoration for which the value should be none so that the underline that is present by default for all the anchor text over here will be removed so guys let me just save this file now and try reloading this page so as you can see the underline from all the text is removed over here guys let us have certain background color as well for this unordered list in this case so what we are going to do is inside the UL tag simply we are going to say background color and we are going to say the color will be black in this case and for the anchor text that is the a tag over here simply we are going to set the font color as white so that the text can be easily seen on the black color background over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color over here as black color and the text color is now getting displayed with the help of a white color now now guys since the UL tag is the Block Level element over here and that is why the entire width of the screen is being taken over here so what we can do is simply we can Define the width of let's say 100 pixels in this case so let us check whether the 100 pixels with this enough or not so let me just reload this page once again on the browser so as you can see we have a good vertical navigation bar over here now guys let us provide certain padding as well to the Alli elements over here so simply we are going to define the Alli tag in this case and we are going to provide the padding of 10 pixels in this case so that we have sufficient spaces around the LI elements so guys let me just save this file now and try reloading this page so as you can see we have this sufficient spacing now around the text that are getting displayed over here now guys what we are going to do is when we get the mouse cursor on these elements we want the background color to be updated so that the user comes to know that this is the particular link that he or she is going to click so guys what we are going to do is over here on the hover so guys simply we are going to use the hover Udo class over here so on lii we are going to provide the hover element in this case and for the a tag we are going to change the background color so over here simply we are going to set the background color as red so basically what we have done is when we get the mouse cursor on the LI element over here the hover sudo class will help us in order to set the background color of the anchor text as red color over here so guys let me just save this file now and try reloading this page once again on the browser and when we get the cursor over here we are getting the background color of anchor text as red color over here now guys we want the entire lii element to be having the background color as red color so what we can do is if we simply remove this a tag so basically the entire Alli element should have the background color as red color over here let me just save this file now and try reloading this page once again on the browser so now if you see on the hover of the Ali element the entire list element is now getting the background color as red color over here and this is one of the important implementation as far as this vertical navigation bar is concerned and guys apart from this let us say we are currently on this homepage over here so what we can do is simply for this anchor tag with the home text we are going to define the class as active over here so that we come to know that this is the anchor tag which is active right now so guys let me just save this file now and inside the style. CSS file simply we are going to say the active class with the help of the dot character over here we are going to define the background color so guys basically what we are saying is the active link text should have the aqua background color over here so that we can easily identify that which of the pages is active right now so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the aqua color over here for the anchor text guys let us change the color over here so that it is displayed properly with the white color text over here and also we need to provide this class to the LI element in this okay so simply I'm going to remove the class from the a tag and we are going to paste it for the LI element over here and for the active class we are going to change the background color to let's say green color over here which is a dark color and it will go well with the text color that is white in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the active page that is the homepage right now and then the user can go to the other options over here now guys apart from this you can also see certain spacing on the left of this navigation bar and on the top of this navigation bar as well so what we can do is simply for the body tag we can remove the padding and margin over here which is one of the best practices so guys simply we are going to provide the body tag at the start of the CSS file and simply we are going to say margin is equal to zero and padding also is equal to zero in this case let me just save this file now and try reloading this page once again on the browser so now if you see there is no more additional spacing on the left or on the top of this navigation bar and simply we can increase the options of this navigation bar as well so what we have to do is inside the index dot we can add more options over here so guys over here what we will do is let's say we have photos as one option and then videos as another option and then we have languages as well so guys basically we are defining more options inside our vertical navigation bar and the last option is site map over here so guys basically we have around eight options in this case inside a vertical navigation bar let me just save this file now and try reloading this page once again on the browser so as you can see this is a very good looking vertical navigation bar that we have created and based on your project requirements you can also create similar kind of vertical navigation bar just by using the unordered list and the list items over here and apart from this these are the CSS properties that we have used inside the style. CSS file in this case so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is a horizontal navigation bar in CSS so stay tuned so now we will see horizontal navigation bar in CSS so guys basically navigation bar is a list of links which we are going to check with the help of examples as well and by using those list of links we are going to create a horizontal navigation bar so guys horizontal navigation bar can be created by using the display equal to inline property on the list of item so guys let us check this with the help of examples in vs code over here and previously we had seen how we can create the vertical navigation bar over here so guys similarly we are going to create a horizontal navigation bar in this case so what we are going to do is simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here now simply we are going to have the unordered list in this case inside which we are going to have the four list items so basically we are going to define the Four list items over here and then inside these list items we are going to have the anchor tags over here and they are going to have the hrf attribute with the hash character over here for test purpose now guys let us Define the text inside these anchor tags over here so let's say we have home and then we have blog and then let's say we have photos and then we have videos over here so these are the four list items that should be present inside the horizontal navigation bar guys over here we are going to go step by step in order to create a complete horizontal navigation bar with the help of these unordered list items over here so guys let me just save this file now and try reloading this page on the browser so as you can see we have this unordered list which is present in the form of a vertical list over here so guys now first of all we are going to remove these bullets from the unordered list and also remove the padding and the margin that is present by default inside this horizontal list so guys inside the style. CSS file over here simply we are going to define the UL that is the unordered list tag and then we are going to say list style type so guys basically this is the CSS property that is used used in order to Define what kind of bullet points we want to display as far as the unordered list is concerned so by default it is the circle that is getting displayed over here we can display them as Square as well so when we save this file now and try reloading this page once again on the browser so as you can see these are the square bullets over here but guys since we are creating the horizontal navigation bar we don't want any bullets over here so simply we are going to provide none s the list style type so let me just save this file now and try reloading this page once again on the browser so as you can see we no longer have any of the bullets over here now guys simply we are going to remove the padding and margin as well from these unordered list so we are going to say padding is equal to zero and also the margin attribute as zero over here so let me just save this file now and try reloading this page so as you can see there is no longer padding and margin that is present by default inside this unordered list now guys what we are going to do is we will be removing the underlines from all these anchor tags over here so simply inside the LI that is the list item we have the anchor tags over here and then we are going to say text decoration it should be equal to none and also we are going to set the color as white in this case so guys basically we are going to set the text color as white and the background color of this unordered list as black so guys basically we are going to say background color as black in this case so guys when we are going to set the background color of this entire unordered list as black so the background color of the navigation bar will be updated to black color and the text color of the anchor text over here will be updated to white color and that is how we are going to make a perfect navigation bar so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the black background color over here and the text color of all these links is being updated to white color now now guys one more important thing we we are going to have all these text in one line over here so what we can do is simply these list items that we have created we need to display them as inline since they are being displayed as the Block Level elements over here right now so simply we are going to define the Alli that are the list items and we are going to say display is equal to inline in this case so that all the list items are displayed in one line so guys let me just save this file now and try reloading this page once again on the browser so as you can see all the list items are now getting displayed on the same line now guys apart from this let us provide certain spacing in between these list items as well so what we are going to do is simply we are going to set the padding as 10 pixels over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have provided certain spacing around the list items over here now guys apart from this we also want the top and bottom padding as well so let's say we provide the top and bottom padding inside the unordered list in this case so simply we are going to say padding as 10 pixels for top and bottom and for the left and right we are going to say it as zero pixels over here so guys this is the way that we provide the top and bottom padding for any of the HTML elements and the next number will be representing the left and the right padding over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the top and bottom padding as well with the help of the padding CSS property so guys the horizontal navigation bar is almost complete over here but the user should get at least some kind of confirmation that he or she will be clicking on one of these links so guys what we are going to do is when we get the mouse cursor on this particular list item over here so the list item background color should be updated to some color so that the user gets the confirmation or the feedback that he or she will be clicking on these list items which is the part of the navigation bar so guys what we are going to do is simply on the hover of the LI item over here so we Define the LI item followed by colon and then we use the sudo class that is over in this case so when we get the cursor on the list item we want to change the background color to red color over here so simply we are going to say the background color CSS property and then we are going to set the value as red color over here so guys let me just save this file now and try reloading this page once again on the browser so now if you see we are getting the background color as red color over here and user is at least getting the feedback that he or she will be clicking on that particular link which is getting highlighted as red color over here so guys in this way we have created a very simple horizontal navigation bar that you will be seeing in many of the website so guys this is one of the important ways in order to create the horizontal navigation bar by using the unordered list items over here and using some of the CSS properties that we have defined over here now guys apart from this if you notice there is certain spacing on the left and on the top of this navigation bar so how we can get rid of that so basically it is the padding and the margin of the body tag over here so guys the body tag is representing the entire page that is the web page on this particular web browser so inside the body tag over here simply we are going to set the margin as zero and also the padding as zero over here so guys this is one of the best practices that the programmers follow in order to avoid the spacing that is present by default in some of the web browsers so guys let me just save this file now and try reloading this page once again on the browser so now if you see there is no spacing on the left or on the top of this navigation bar and simply we can go and select one of the list items from this navigation bar guys apart from this we can also have more options over here so simply you can add more options in this case so over here simply I'm going to copy these lines of code in this case and simply we are going to have more options so let's say we have languages over here and then let's say we have news and then let's say we have the contact option and then the last option is the about option over here so guys let me just save this file now and simply we have to reload this page so as you can see the other options are also getting displayed over here and this is the way that you can create the horizontal navigation bar now guys we have used the HF attribute as the hash character over here for the test purpose but these are going to be the real production links when you are going to implement them in your project so guys please make note of this hrf attribute over here and apart from this you can replicate these styling for your next project and you can practice on your own so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is creating a dropdown option in CSS so stay tuned so now we will see how we can create the drop down options in CSS so guys basically we are going to create a hoverable drop down with the help of the CSS and the drop down options should be displayed when the mouse is hovered over a button so guys let us check this with the help of examples in vs code over here so simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here now guys as far as the drop down option concerned simply you can have the select tag over here and inside the select tag you can have multiple options in this case so let's say we have one of the option as option one over here so simply we are going to say one in this case and then you can copy paste this line of code and then we can change the text to the other options over here so we have the two so we have the second option is two and the third option is three over here so guys basically you can simply have the drop down options with the help of the HTML tag that is the select and the option tags over here let me just save this file now and try reloading this page on the browser so as you can see we have these drop down options over here but guys we are going to implement the drop down options by using the CSS in this case instead of using the select and the option tags over here so what we are going to do is we are going to Define certain diff tags over here and a button tag as well and using the CSS file over here and certain CSS properties we are going to display these options when we get the mouse cursor on that particular button that we are going to Define so guys let us complete this exercise over here so simply we are going to have let's say the h2 tag over here and then we will say get your mouse cursor on below button so guys simply we are having this particular statement that is get your mouse cursor on below button over here and we are going to Define the diff tag in this case which is going to have the class name as drop down over here so simply we are going to define the diff tag followed by the dot character and then we have the name of the class that is dropped down and when we press enter as you can see a diff tag with the class name that is drop down is getting created over here now guys inside this we are going to have the button tag over here and for this button tag we are going to say drop down s the text and then guys over here we are going to have the class and the class name will be button drop down in this case guys we are going to make use of these class names inside the CSS files and that is why we are defining these classes over here and it is one of the best practices in order to create the classes or the IDS for the different HTML elements that you create based on your requirements now guys apart from this after this button we are going to have another diff tag over here and then we are going to have the class name in this case as the drop down content so guys basically this is the diff tag which is going to display the dropdown content that is all the options as you can see these are the options that will be present inside this particular diff tag over here so guys inside this what we will do is we will have the anchor tags in this case so we are going to have the HF attribute as the hash character and simply we are going to provide link one over here and then we are going to copy paste these lines of code and simply we are going to say link link two and Link three so guys basically what we are doing is we are having three options over here inside the diff that is defining the drop down content in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the h2 tag over here which is having the simple statement get your mouse cursor on below button so guys when we get the mouse cursor on this particular button over here all these link items that are the options should get displayed in this this case so guys let us provide certain CSS properties to this button element first of all so what we are going to do is we will copy the class of this button over here and simply inside the style. CSS file we are going to use the dot character followed by the name of the class in this case so guys basically we are going to have certain background color so let's say we have the background color over here and the text color is white so guys basically we have the color CSS property as white over here and also we will have the padding of let's say 10 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have this particular button with the background color that is green and the text color is white and we have certain padding that we have implemented over here guys there is a default border that is getting displayed over here so what we are going to do is simply inside this button we are going to say border it is equal to none so that we can remove this border from this button let me just save this file now and try reloading this page once again on the browser so as you can see we don't have any border right now over here now guys what we are going to do is these link items are present in one line we want them to be on the separate lines over here and also we want the div section that is the drop down content it should have certain background color so guys what we are going to do is first of all we are going to style this drop down content diff tag over here so simply I'm going to copy this class name and then inside the the style. CSS file we are going to provide the dot character followed by the class name over here and then we are going to provide the background color in this case so let's say we provide the gray color as the background color over here so guys we have the 6 * D characters in this case which is representing a gray color shade over here and then apart from this we also want the width of this particular section to be limited so we are going to provide the width as 100 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color as the gray color over here but guys apart from this we also want these links to be present on the next line so what we can do is simply inside this class name so we are going to provide dot followed by the class name and whatever a tags are present we are going to provide the anchor tag over here and then inside this we are going to say display is equal to block so guys by default the display properties is in line for this particular anchor tag and that is why all the links are getting displayed on the same line so we are going to provide displays equal to block so that all of them are displayed on separate lines over here so let me just save this file now and try reloading this page once again on the browser so as you can see all the links are now getting displayed on the separate lines apart from this let us remove the underline as well from these anchor tags so we will provide the text decoration is equal to none in this case and also apart from this let us provide the color of this text as black color over here so we are going to provide the color as black and also provide the padding so guys over here simply we are going to provide the padding as 5 pixels let me just save this file now and try reloading this page so as you can see we have the padding also we have removed the underline over here and we have the text color as black color right now now guys apart from this when the user gets the cursor on these particular links we want the background color to be up Creed for these links so what we can do is simply on the hover property of these a tag we can change the background color so simply I'm going to copy these lines of code and paste it over here but we are going to provide the sudo class in this case which is the over sudo class and on this H Udo class we want to change the background color so simply we are going to say background color in this case and let's say we have the background color as Aqua so guys basically we are going to set this particular background color when the user gets the mouse on that particular link text so let me just save this file now and try reloading this page once again on the browser so now when we get the cursor over here on these links that is the options the background color of that particular option is now getting updated now now guys very important thing is when we get the mouse cursor on this drop down then only we want this particular section to be displayed that is having the list of options so by default all these list of options should be hidden over here so so what we can do is simply for this particular drop down content class we are going to define the display is equal to nonone property so over here we already have this drop down content inside our CSS file so simply we are going to say display is equal to none this time so guys basically by default this particular diff tag that is having the class that is drop down content will not be displayed over here so let me just save this file now and try reloading this page once again on the browser so as you can see after defining all the CSS properties we have set the display is equal to none property so by default this particular section which is present over here right now but it is not getting visible and we want it to be visible when we get the mouse cursor on this drop down button over here so guys how do we make it visible so basically we are going to set the display is equal to block property when we get the mouse cursor on this particular diff tag over here so what is the diff tag in this case so it is the diff tag that is having the class equal to drop down so simply I'm going to copy this class that is drop down over here and then inside the style. CSS file simply we are going to say dot followed by the name of the class that is dropped down and when we get the mouse cursor on this particular diff tag we are going to provide the hover sudo class over here so basically it says that whenever we are going to get the mouse cursor on the diff tag that is having the class drop down over here then these particular CSS properties will be implemented so what we want to do is we want to make the drop down content as visible so guys when we hover over this particular diff tag we want the drop down content that is this particular diff to be visible over here so we need to copy this class name that is drop down content over here and after this H we need to provide the space character and the diff that is with this particular class name should be displayed so we need to provide the dot character since it is a class name and then inside this we are going to say display it is equal to block this time so guys by default it was display is equal to none but when we get the mouse cursor on this particular diff tag that is having the class drop down so on the hover sudo class we want to get the drop down content to be displayed over here with the help of the display equal to blog so let me just save this file now and try reloading this page once again on the browser so by default there is no drop down that you can see over here but the moment we get the mouse cursor on this drop down button over here you can see that the drop down content is now getting displayed over here now guys if you notice when we get the mouse cursor over here as well on the right hand side the drop down content is again getting displayed why so that's because we have provided the display equal to block on the dropdown class which is the diff tag over here and as you know the diff tag is the Block Level element so let us right click over here and click on the inspect option let us see the length of the diff tag over here so as you can see this is the diff tag with the class drop down on which we have provided the hover property and and if you see the entire width of the screen is getting highlighted over here so guys what we can do is simply for this particular diff tag that is having the class drop down we can have the display property as inline so simply we are going to go inside the style. CSS file over here and for this class that is the drop down over here we are going to provide the dot character followed by the class name that is dropped down and simply we are going to say display is equal to in line so basically it is going to take only that much width as required by the text inside this particular diff tag over here let me just save this file now and try reloading this page once again on the browser so now if you see the drop down diff tag it is not taking the entire width of the screen but it is only taking the width of the button that is present over here right now so guys when we get the mouse cursor over here as you can see we are getting the drop down content that is getting visible right now but when we get the mouse cursor on the right hand side now there is no drop down content that is getting displayed so guys only when you get the mouse cursor on this particular button then only the drop down content that is having the list of options to be selected will be displayed over here so guys this is the way that you can implement the drop down options by using CSS properties comment in the comment section below whether you have learned something out of this video please make sure that you like this video video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is attribute selectors in CSS so stay tuned so now we will see attribute selectors in CSS so guys it is possible to style the HTML elements that have specific attributes or the attribute values so far we have seen the IDS or the class names that we have used as the CSS selectors in order to identify the HTML elements but we can also use the attribute selectors over here so basically this is the syntax first of all we use the tag and Then followed by the square bracket and then inside that we can use the attribute name and also the value that we can use in order to identify a particular HTML element so guys let us check this with the help of examples in vs code over here so simply I'm going to remove the previous lines of code that we had written inside the HTML and the style. CSS files over here now guys what we are going to do is simply we are going to have the paragraph tag in this case so guys we have a very simple statement that is this is paragraph one over here and for this paragraph tag let us have the title attribute as well and we are going to have the title that is par over here now guys similarly we are going to have more paragraph tags over here so I'm going to copy these lines of code in this case and simply we are going to have this is paragraph 2 and then we have this is paragraph 3 and then we have this is paragraph 4 over here and then guys we are also going to update the title in this case so let's say we have par 2 over here and let's say simply we are going to say title in this case as the title attribute and let's say for the fourth paragraph we don't have the title attribute over here so Guys these are the four different paragraph tags which are having different statements and they are also having the title attributes the last paragraph is not having any of the title attribute over here now guys let me just save this file now and try reloading this page on the browser so as you can see we have all these four paragraphs that are getting displayed with the statements that we have defined inside the HTML files over here now guys what we have to do is let's say we want to identify those paragraphs which are having the title attribute over here and we want to have the background color as yellow for those paragraphs over here so guys in such problem statement we can use the attribute leor over here and check whether the paragraph is having the attribute that is title in this case so simply inside the style.css file first of all we are going to have the background color for all the four paragraphs over here so simply for the P tag we have to define the background color CSS property in this case and the value that we use is yellow over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see all the four paragraphs are now having the background color as yellow color now now guys what we will do is we will color only those paragraph with the background color as yellow which is having the title attribute so simply we are going to modify this particular style. CSS file in such a way that for this existing CSS property that is for the existing CSS selector over here that is the P tag we are going to provide open and close square brackets over here and inside the square brackets we are going to provide the title attribute so guys what is the meaning of this so only those B tag that is the paragraph tag which is having the title attribute should be provided the CSS property that is the background color as yellow color over here and the rest of the paragraphs should not have the background color so guys initially we have seen that all the four paragraphs were having the background color but in this case since the fourth paragraph is not having the title attribute so the fourth paragraph will not have the background color now since we are only selecting those paragraphs which are having the title attribute over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see the first second and third paragraphs are now having the background color as yellow the fourth paragraph is not having the background color now and in this way you can simply use the open and close square brackets over here and provide one of the attributes that must be present inside that particular HTML tag in order to provide the CSS properties based on your requirements so guys this is a simple example as far as the attribute selector is concerned now guys we have certain more examples as well apart from this attribute that is the title we can also provide the value of that particular title so let's say inside the style. CSS file what we do is let's say for this first paragraph over here which is having the title equal to par only this particular paragraph should be having the background color as yellow so what we can do is simply we provide the title attribute and Then followed by equal to and then we provide the value that is par over here so guys basically what this means is only those paragraphs which is having the attribute that is title with a value that is par should have these CSS properties that are defined over here so let me just save this file now and try reloading this page once again on the browser so as you can see only the first first paragraph is now getting the background color as yellow that's because this particular condition is getting satisfied with only the first paragraph since that is the title value that is present over here so guys this is another example of the attribute selection apart from this we can also use attribute followed by this particular symbol and then equal to and then we can provide the value so basically it will check whether the tag contains the value word or not so guys what we can do is simply inside inside the style. CSS file we can use this particular symbol over here and this expression is going to check whether the title attribute is containing the par word or not so how many paragraphs that are having the title attribute is having the par word over here we can see that paragraph 1 and paragraph 2 are having the title with a word that is par that is present as the value of the title attribute so guys one and two paragraphs should be having the background color over here in this case so let me just save this file now and try reloading this page once again on the browser so as you can see paragraph 1 and paragraph 2 are now having the background color as yellow color over here so guys apart from this we can also have the attribute and Then followed by the raise to symbol and then equal to symbol followed by the value which means the attribute should start with the value that is getting provided over here apart from this we also have this dollar symbol which means that the attribute should end with this particular value and also we have the star character over here which means the attribute contains the value over here now guys what is the difference between this particular symbol and the star symbol over here so let us check that so basically we have checked whether this title is containing this word par or not and based on this condition the first and the second paragraph are having the background color is yellow but guys let us say we only provide the substring from this particular word so let's say we remove the last a character and then we provide p a r so basically can we use this in order to have the background color for both these paragraphs over here so let us check that so let me just save this file now and try reloading this page once again on the browser so as you can see we don't have any background color for any of the paragraphs so guys what we have done is this particular symbol it checks whether the entire word is present for that particular attribute or not but this word is is not present but if you want to use the substring from any of the word which means this p a substring is present in both the paragraphs that is paragraph 1 and paragraph 2 then you can use the star character over here so basically we can use the star character followed by equal to and then we can provide the substring of any of the word that is present as the value for that particular attribute of the HTML element so now guys if we save this file andent by reloading this page once again on the browser as you can see the title that is p is present in both that is paragraph 1 and paragraph 2 and this is the substring that is getting matched over here and that is why we are having the background color as yellow for both of these paragraphs so guys in this way you can use the attribute selectors over here so guys apart from this the other two attribute selectors that is attribute starts with and the attribute ends with you can try on your own as a homework for you you so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is an exercise on alignment sudo classes combinators and the attribute selectors so stay tuned so guys now we are going to work on an exercise on alignment pseudo classes combin ators and the attribute selectors that we have seen previously so guys it is very important that you practice on your own so that you get the better understanding of all these Concepts as far as CSS is concerned so guys we are going to complete the below task in order to finish this particular exercise so first of all we are going to create a diff tag with a sample text and with a width of 50% and having the yellow background color and some border over here so guys let us create the diff tag in this case so I'm going to Simply remove the previous lines of code that we had written in the HTML and the CSS files over here guys if you are new to these Concepts you can watch my previous videos in the playlist the link I have given in the description section below related to the CSS tutorial so you get the better understanding of all these Concepts that we are going to work on in this particular list of task so guys first of all we are going to create the diff tag in this case so basically we have this diff tag and inside this div tag let us have certain text over here so simply we are going to say this is a div tag over here now guys let me just save this file now and inside the CSS file what we are going to do is we are going to have the width as 50% background color is yellow and some border for this div tag so inside the style. CSS file we are going to Define this div tag and then we will say withd s 50% of the screen width and then the background color color as yellow so we are going to say the background color CSS property as yellow color over here and apart from this we are going to have the Border as well so let's say we have two pixels border of the solid type and the color as the black color for the border so guys let me just save this file now and try reloading this page on the browser so as you can see we have a very simple diff tag over here that we have created based on the first task inside this exercise now guys we need to Center align the above diff tag horizontally using the margin so guys we had seen in the alignment video how we can align this D tag horizontally at the center of the screen over here so basically we can use the margin CSS property in this case so guys inside the style. CSS file simply we are going to say margin CSS property and simply we can say the and the value that we are going to use is auto over here so that from the left and right hand side the margin is equal and the diff tag is centered horizontally as as far as the horizontal alignment is concerned so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the way that we can Center a particular dep at the center of the screen as far as horizontal alignment is concerned guys apart from this let us move to the next task so over here we need to create a paragraph with random text on multiple lines so guys inside the HTML file over here what we have to do is we need to create the P tag that is the paragraph tag over here and simply we are going to generate some random text in this case so let us say we use the lurm Mt abbreviation over here in order to generate some random text that will be displayed on multiple lines on the web browser so guys let me just save this file now and try reloading this page one second on the browser so as you can see multiple lines are getting displayed over here inside the paragraph tag now guys the next task is to color the first line of the paragraph as green color using the Pudo class over here and also increase the font size to 28 pixels so guys if you remember for this paragraph tag what we can do is we can use the Udo class that is the first line in order to implement certain CSS properties for the first line over here for this paragraph tag so for the P tag in this case simply we are going to provide colon and then we have something called as first line over here so we have first iphon line in this case so guys this is the sudo element that we will be using that is the first line over here and then inside this we are going to set the color as green color based on the requirements and the font size will be 28 pixels so as you can see this is the 28 pixels that is the font size that we have to set so we have set the font size is 28 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see the first line of this paragraph is now having the color as green color and the font size is also 28 pixels that is getting implemented over here now guys let us move to another task we need to create another paragraph below and using the sibling combinator make the background color as Aqua over here so guys what we will do is first of all for this particular paragraph We are going to provide the ID as parah over here so simply we are going to say parah in this case and the same ID we are going to use while we are using this Udo element that is first line so guys let me just copy this ID and provide it over here here inside of the P tag so basically we are going to use the hash character followed by the par ID over here so guys let me just save this file now and try reloading this page so as you can see this Udo element is helping us in order to implement the CSS properties that we have already defined over here now guys let us complete the next task in order to create the paragraph So basically we are going to create another paragraph over here below this paragraph that is having the ID as par so we have the paragraph over over here let us have another ID that is par one in this case and then we will say this is another paragraph So guys we have a very simple statement that is this is another paragraph over here let me just save this file now and try reloading this page once again on the browser so as you can see we have a very simple statement that is this is another paragraph now guys what we have to do is we need to use the sibling combinator selector in order to make the background color as equa for this particular paragraph so guys basically as per the requirement we don't have to select this paragraph directly but we need to select this paragraph that is having the IDS par and then we need to find the next sibling which is this particular paragraph for which the background color needs to be set so guys what we can do is since we have provided the ID as parah over here previously the same ID we are going to use that is par for this main paragraph that is the first paragraph We have created and then we are going to use the sibling combinator which is the plus character over here so guys basically when we use the plus character it is going to identify the next sibling over here and the next Sibling Tag is the P tag over here so guys basically we are using the sibling combinator in this case in order to identify this new paragraph that we have created and for this new paragraph We need to set the background color as Aqua so over here we are going to set the background color as aqua color let me just save this file now and try reloading this page once once again on the browser so as you can see the background color is now updated to aqua color over here so guys in this way we can easily use the sibling combinator selector in order to select the next sibling as far as the CSS selector is concerned now guys apart from this let us create another paragraph with the title equal to para and make the font weight as bold by using the attribute selector over here so guys let us move to the HTML file in this case and then let us have another paragraph for which we need to have the title attribute over here which should be equal to par in this case and then let us say we have this is another paragraph with title attribute so guys basically we have a very simple statement that is this is another paragraph with title attribute over here let me just save this file now and try reloading this page once again on the browser so as you can see this is another paragraph with title attribute so what we have to do is we need to make the font weight as bold by using the attribute selector in this case so guys how do we use the attribute selector that is title over here so simply we can use the P tag inside the CSS file so let me show you that we have used the P tag previously and then inside the open and close square brackets we need to provide the attribute that is title so guys this is another way in order to select the HTML Elements by using the attribute selector by providing the attribute inside the square square brackets over here and then followed by open and close curly braces simply we can have the font weight in this case and simply we can see a value as bold over here so guys basically it is going to identify that paragraph which is having the title attribute over here so far we have created the other two paragraphs with only the ID attributes but not the title attribute but since this third paragraph is having the title attribute the CSS property that is font weight equal to bold will be implemented on this third paragraph that is having the title attribute over here so guys let me just save the CSS file in this case and let me just reload this page once again on the browser so as you can see font weight equal to bolt is now getting implemented over here and the text is appearing as bold text over here on the web browser guys apart from this we can also increase the font size over here so inside the same CSS selector that is by using the attribute selector we can have the font size as 30 pixels in this case so let's say we provide the value as 30 pixels let me just save this file now and try reloading this page so as you can see the font size is increased to 30 pixels over here so guys in this way we can also use the attribute selector we can provide the value of the attribute as well so since we have used the value as para simply we can copy this value and paste this over here so we provide equal to operator followed by double codes and inside the double codes simply we can provide the para value for this particular title attribute let me just save this file now and try reloading this page there will be no change since we have already applied the CSS properties previously so let us provide another CSS property let us make this text as underline over here so what we can do is simply inside this particular P tag that is having the title attribute as para we are going to say text decoration in this case and then we are going to say underline s the value for this text decoration let me just save this file now and try reloading this page once again on the browser so as you can see we are getting the underline for this particular text inside this paragraph So guys in this way we can also use the attribute selector over here instead of using the tag or the ID or the class name as the selectors that we have seen previously so guys we have completed all the task in this particular exercise hopefully you have also completed all these task on your own so guys it is very important that you practice on your own so that you get a better understanding as far as as the CSS concepts are concerned comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is styling forms in CSS so stay tuned so now we will see styling forms in CSS so guys basically the look of an HTML form can be greatly improved with the help of CSS and this we are going to check with the help of example and we are going to see how we can style the forms in CSS so let us move to the VSS code over here so simply inside this HTML file we are going to create a form so basically we are going to create a div tag with the class container over here and inside the St tag let us create a form in this case so guys basically we are going to use the form tag over here and then inside this form let us have couple of text boxes over here so what we will do is simply we will have the input followed by colon and then we will have the text input so basically we are going to set the name attribute as first name and also the ID attribute as first name over here also for this input let us have the label so that the user can recognize what kind of input is expected inside this text box over here so guys basically we are going to have the label tag and for the four attribute we are going to paste the value of the name attribute over here inside the input that is the first name in in this case and then we are going to have the label that is first name and after the first name let us have the line break over here so that the input is displayed on the next line in this case and also we are going to have the placeholder over here so we are going to say your first name in this case so guys basically we have the placeholder that will be displayed in which case this particular text will be displayed inside the text box of the first name now guys after this let us have couple of line breaks over here so that we can have another text box for the last name input field so guys simply I'm going to copy these lines of code over here and we are going to replace this first name with last name over here so I'm simply going to copy this last name and paste it to the ID attribute and for the for attribute as well and over here we are going to say last name label and for the placeholder as well we are going to say your last name in this case so guys in this way we have provided two text boxes let me just save this file now and try Rel loading this page on the browser so as you can see we have the simple text boxes which is having first name and last name over here now guys let us have another input in this case and we are going to have the drop down option for the third input so what we are going to do is we will use the select a tag over here since it will help us in order to have the drop down options so what are the options that we are going to set over here so we are going to set the list of colors so guys basically I'm going to provide the name attribute as color over here and also we will paste the same value to the ID attribute as well and we are also going to have the label for the select tag and we will say select your favorite color so guys basically you are going to select the favorite color over here so guys for the four attribute we will say color as the value and the text that we are going to display for this label will be select your favorite color so guys basically the user will be allowed to select the favorite color from the list of options now guys what are the options that we are going to provide simply we are going to use the option tag over here and we are going to have some colors over here so basically we will have the first color as blue and let me just copy this line of code multiple number of times and let us say we have the other colors as yellow green and red so guys as you can see we have different options over here for the color selection we have blue yellow green and red colors now guys apart from this let us have the submit Button as well after the select tag so simply we are going to have couple of line braks over here and then after this we are going to have the input with the type submit so guys basically we are going to say input colon submit in this case which is the Mt abbreviation and simply we are going to say value as submit in this case guys after this label we are going to have the line break so that the list of options are displayed on the next line over here so guys as you can see we have these lines of code inside our HTML form let me just save this file now and try reloading this page once again on the browser so this is how the form will look like on the browser without any CSS properties so guys this is a very simple form it is not looking that attractive but with the help of the CSS properties that we are going to see now we are going to make this form little bit attractive with certain background colors and the borders as well so that you can include it in your project and based on your project requirements you can apply the different CSS properties so guys what we will do is inside the style. CSS file that is attached to this particular HTML file over here first of all we will style this particular container div tag over here so simply I'm going to copy this class name and inside the style. CSS file first of all we will use the dot character followed by the container and let's say we have certain background color for this D tag so guys basically we are going to have the background color for this entire form over here so let us say we have the background color as this particular color which is Alli blue over here and and then guys let us also have some Border in this case so basically we are going to set the Border as two pixels of the solid type and let's say the color is gray color for the Border let me just save this file now and try reloading this page once again on the browser so as you can see we have set the background color and the border for this particular container now guys let us have certain space on the left and top of these particular labels which is inside the form so that they can be placed a little bit away from the border of this particular container so let us provide the padding of let's say 20 pixels in this case and apart from this let us have certain border radius as well for this container so we will provide the Border radius of 5 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the padding which will help us in order to provide the spacing between the labels and the border of this particular container and apart from this we also have the Border radius now guys let us decrease the width of this particular container since it is taking the entire width of the screen so let us set the width to 30% of this particular screen width so over here simply we are going to save width as 30% let me just save this file now Ander try reloading this page once again on the browser so as you can see we have set the width of this particular container is 30% and also let us get this diff container at the middle of the screen so what we can do is simply we can set the margin as Auto over here now guys what is the use of this auto value for the margin property so basically from the left and right of this particular diff container the margin will be set in such a way that this entire box will be placed at the center of the screen over here which means the margin left and margin right will be equal so let me just save this file now and try reloading this page once again on the browser so as you can see we have CAU the form at the middle of the screen so in case in your project requirements if you want to Center the div element over here inside your HTML file so simply you can use the margin CSS property and provide the value as Auto so that the diff can be placed at the center of the screen now guys let us provide certain styling to the submit Button as well so what we will do is simply we are going to use the input tag and what we are going to do is we will use the attribute selector over here which is type equal to submit in this case so guys basically we have to use the square brackets and then inside the this we use the typ equal to and then inside the single codes or double codes we can use the value that is submit over here so guys basically we are using the attribute selector which will help us in order to select this particular button now guys what we will do is simply we are going to set the background color in this case so basically we are going to set the value of this background color as green color over here and apart from this let us set the color as well in this case and the value will be white over here so that it goes well with the background color of green now guys apart from this let us also set the padding of five pixels in this case so that the text can be easily displayed inside the button and apart from this lets also have the width of the button as 100% over here so that the button takes the entire space as far as the width of this particular diff container is concerned now guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the button that is getting displayed over here let us remove this border that is already present by default and also set the pointer when we get the cursor over here on this submit button so guys what we will do is simply we are going to set the Border property as none in this case and also we will set the cursor over here as pointer so as you can see this is the cursor CSS property and simply we are going to set the value as pointer so let me just save this file now and try reloading this page once again on the browser so the B is removed now and when we get the cursor over here on this button the cursor is changed to the hand icon or pointer over here which is one of the good designs as far as HTML form is concerned now guys when we get the cursor over here on this button let us change the background color so what we can do is simply we are going to use this attribute selector so I'm going to copy this line of code over here and paste it and on H we are going to change the background color so we are going to use the codo class that is hover over here and then inside this we are going to change the background color of this button when the user gets the mouse on this particular button that is the submit button so guys what is the color that we are going to set so basically we are going to set some lighter version of this green color over here so simply we are going to change this green color to little bit light in this case so let us set this color over here so let me just save this file now and try reloading this page once again on the browser now if we get the cursor on the submit Button as you can see the back ground color is updated now so guys whenever user wants to click on the submit button the background color of the submit button will be changed and this is one of the good designs as far as HTML forms are concerned now guys apart from this what we will do is let us also increase the width of these text boxes and the drop down option in such a way that it takes the entire width of the container over here so what we can do is simply we are again going to use the attribute selector in this case so we will say input and this time we will say type it is equal to text this time because both the input tags over here are having the type equal to text in this case so we are going to say type is equal to text and then apart from this we are also going to provide the same CSS property to this select tag as well so guys we are going to provide comma over here and then we are going to provide the select tag so guys in this way if you want to provide the same CSS properties to multiple HTML elements you can separate them with the help of the comma over here here before providing the CSS properties guys what we will do is simply we are going to say with it is equal to 100% in this case let me just save this file now and try reloading this page once again on the browser so as you can see the width of both the text boxes and the select drop down options is updated to the 100% withd of the div container over here apart from this let us also have the Border box in this case so guys basically we are going to have the box sizing CSS property and then we will set the value as border box in this case let me just save this file now this will help us in order to set the width of these two text boxes get aligned with the drop down option and the submit option over here so guys let me just reload this page once again in this case so as you can see the right hand side of both these text boxes are now aligned with the drop down option and the submit Button as well so guys in this way you can use your own CSS properties just like how we have used over here in order to style our HTML form apart from this you can also have the H2 header over here before the div container so guys basically we are going to have the H2 header and then we will say below is the form to be filled so guys basically this is the header that will help the user to submit the form in this case now as far as submitting this form is concerned it will be the part of the JavaScript tutorial which we will be covering in the upcoming videos so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is counters in CSS for automatic numbering so stay tuned so now we will see counters in CSS for automatic numbering so guys basically CSS counters are variables which are maintained by CSS whose values can be incremented by CSS rules to track how many times they are used and guys this we are going to check with the help of examples as well so counters let you adjust the appearance of content based on its placement in the document so guys basically we are going to have certain list of values for which we are not going to have the numbers inside our HTML code but we will be using certain CSS rules in order to number those list of items so guys let us move to the VSS code in order to check the example of counters in CSS over here so simply I'm going to remove the previous lines of code code from the HTML and the CSS files that we have written now guys inside our HTML file what we are going to do is first of all we are going to have the hedge1 tag over here and we will say below are Su of the programming languages so guys basically we have this particular header that is below are some of the programming languages and let us have certain programming languages inside the h2 tag over here so guys basically inside the h2 tag we will have certain programming languages so let's say we have the first programming language as Java and then let's say we have python as the second programming language and then we have C++ and then let's say we have C over here so guys basically we have these four programming languages inside the h2 tag let me just save this file now and try reloading this page on the browser so guys as you can see we have the H1 tag and Then followed by the H2 tags which are having the name of the programming languages over here now guys let us say we want to number all these programming languages in such a way that the first language is Java and then the second language in the list is Python and then we have third language as C++ and fourth language is C so the first option is to use the numbers inside the HTML code over here but guys we don't want to use that so the other option is to use the CSS counters over here now guys how do we use the CSS counter let us check that so inside our style. CSS file which is attached to this HTML file over here with the help of the the link tag what we will do is first of all we will Define the body tag in this case and then we have the CSS property which is counter reset in this case so guys basically we use the counter reset CSS property in order to Define a variable so guys let us say we provide the name of the variable as number so guys basically this variable we are going to use in order to provide the numbers to all these programming languages that we have displayed on the UI so guys what we are going to do is after this we have to provide the tag before which we want to provide the number so guys basically what tag we have used over here in order to display the programming languages we have used the h2 tag over here so guys basically we will use the h2 tag and then we have to use the codo element that is before so guys 2 * colon we have to use followed by the before keyword in this case so guys basically the meaning of this is whatever content we provide inside the curly braces for this particular selector that content will be displayed over here before the content of the h2 tag in this case so guys what we have to do is inside this particular h2 tag for which we have the sudo element that is before we have to use the counter increment CSS property so guys basically we use this counter increment CSS property and we use the same variable that is number over here so simply we are going to set the variable that is is number and then guys after this we have to use the content in this case so this is the CSS property that we will be using which is content over here which will set this particular number before the h2 tag which is displaying these programming languages so guys over here inside the content we will be using the function that is counter in this case so guys basically this counter is a function which will take one parameter and we are going to pass this number as the parameter over here so guys this is theun function that is counter and instead of this name we are going to provide number over here so guys basically what will happen is automatically the number will start from one and then for the second programming language two will be displayed and then we have three and then four so guys after providing the number we also have to provide certain space or the dot character as well so after this counter function we provide the space character followed by double codes and let's say we provide a DOT character and Then followed by space so guys after this space the name of the programming languages will be displayed over here as we can see in this particular web browser right now so guys let me just save this file now and try reloading this page once again on the browser so as you can see the counters are helping us in order to provide the numbers to all these programming languages and this is how you can provide the counters in the CSS in order to provide the numbers to the list of items based on your project requirements guys you can also change change the format over here after the number so let's say instead of the dot character we can also provide hyphen over here so instead of the dot character in this case that us have a space character followed by hyphen and then the space character again so let me just save this file now and try reloading this page once again on the browser so as you can see we have the hyphen character in this case instead of the dot character apart from this we can also provide this number in the square brackets as well so let us remove these formatting over here and let's say we provide the open square bracket first of all so simply inside the double codes we provide the open square brackets and then after this we have the space character and then we will be having the number and then let's say we have the square bracket over here which is ending so we have the closing square bracket in this case and then let's say followed by the space character after which the programming language should be displayed in this case so let me just save this file now and try reloading this page once again on the browser so as you can see these are the numbers that are getting displayed over here so guys based on your project requirements and the format in which you want to display the numbers you can display them by using this counter method and providing the variable name that you have provided inside the counter reset now guys apart from this we can also have the nested counter so let us check the example of the nested counters in CSS so what we will do is let's say inside this h2 tag we have certain paragraph tags over here so simply we will say p tag and then we will say this is some test data so guys basically inside each programming language we will have certain pointers to be displayed and for testing purpose we are simply providing this test data over here so let's say we have these two paragraph over here inside the Java programming language and then let's say we have these three paragraphs inside the Python programming language and apart from this let us say we have one paragraph inside C++ language and two paragraphs over here inside the C language Let me just save this file now and try reloading this page once again on the browser so as you can see we have certain pointers over here after each programming languages now guys we also want to number these pointers inside the programming languages so what we have to do is we need to provide another counter variable so guys inside the style. CSS first of all after the body tag what we will do is we want to provide the numbers inside the these programming languages which are defined by using the h2 tag over here so simply we have to use the h2 tag in this case and we can provide the variable by using the counter reset and this time instead of providing the variable name as number we will say sub number over here so guys basically it is going to be a number like 1.1 or 1.2 in this case and so on so guys basically we use the counter reset CSS property once again and we provide the variable name as sub number over here and then guys what we have to do is we need to use the P tag followed by the pseudo element that is before that's because we are using the paragraph tag over here and before the content of this paragraph tag we want to display the number over here so simply we use the pag followed by 2 * colon and then we will use the before sudo element and then guys what we have to do is again we have to use the counter increment CSS property and this time we will be using this sub number variable so let me just copy this and paste this over here for the counter increment CSS property and then after this we have to use the content CSS property so guys over here first of all we will have to use the number variable so that this particular number that is one can be displayed followed by Dot and the sub number should be displayed after that so basically we use the counter function once again over here so we say counter and then in instead of name we will be using the number and then guys after this we want the dot character so let's say we provide dot character over here followed by space and this time we will be using the counter function once again and over here instead of name we will be using sub number this time because that is the counter that we want to display for all the sub points inside the programming languages that we are displaying on the web browser so guys this is the sub number that we are using so basically this is the format the first number that that is one will be displayed followed by Dot and the sub number that is one will be displayed so 1.1 will be displayed for this particular point over here followed by 1.2 for this particular point over here and then guys for the Python programming language 2.1 will be displayed followed by 2.1 and Then followed by 2.2 and Then followed by 2.3 so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the numbers that is 1.1 then 1. 2 and then for the points inside the Python programming language we have 2.1 2.2 2.3 and so on so guys over here we have missed out the space to be provided over here so simply we can provide the space character inside the double codes in this case let me just save this file now and try reloading this page once again on the browser so as you can see the space characters are now getting displayed over here so for the C++ programming language we have 3.1 as the pointer and then for the fourth language that is C we have 4.1 and Then followed by 4.2 over here so guys in this way you can provide the auto numbering with the help of the counter method over here inside the CSS file in this case so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is the length units in CSS so stay tuned so now now we will see length units in CSS so guys basically CSS has several different units for expressing a length and many CSS properties take length values such as width margin padding font size Etc and this we are going to check with the help of examples as well that what are the different units that we can provide to all these CSS properties over here now guys length is a number followed by a length unit such as 10 pixels over here so when we say 10 pixels 10 is the length and pixel is one of the length units inside the CSS apart from this we also have 2 em over here where two is the length and EM is the length unit that we are going to check the that we are going to check with examples as well so guys let us see what are the different absolute lenss over here so basically the absolute length units are fixed and the length expressed in any of these will appear has exactly that size over here on the screen that you are viewing your web page so guys let us see how this CM that is CM will work so let us move to the vs code over here and simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files now guys what we will do is simply we are going to have the paragraph tag over here and then we will say this font size is in cm so guys basically we have the state statement that is this font size is in cm over here and then guys what we will do is we are going to have the class for this particular paragraph and simply we are going to say cm in this case which represents the CM length over here let me just save this file now and try reloading this page on the browser so as you can see we have a very simple statement that is this font size is in cm now guys we have not provided any font size in this case inside our style. CSS file so by default if if you see the font size of this particular paragraph text will be 16 pixels over here so most of the browsers provide the font size of 16 pixels for all the text that are displayed on the web page so guys let me just inspect this particular paragraph tag so as you can see if we scroll down so we cannot see any of the CSS properties for this paragraph tag apart from these default CSS properties over here so guys what we will do is inside our style. CSS file in this case simply we are going to say dot followed by CM that is the class name for this particular paragraph tag and then we will say font size it is equal to let's say we have 16 pixels in this case so guys for test purpose we are going to see whether the font size is going to change or not so let me just save this file now and try reloading this page once again on the browser so as you can see the font size is not updated for this particular paragraph tag and the font size of 16 pixels is now getting reflected under this inspect option guys you can also change the font size from here so basically you can see that this is 16 pixels in this case you can simply provide 20 pixels over here and simply the font size is going to be updated in this case you can also provide 22 pixels or any of the size over here now guys the important thing is we are supposed to provide the font size in cenm so what we have to do is instead of pixels over here let's say we provide the font size as 5 cm that is CM over here in this case so guys let me just sa this file now and try reloading this page once again on the browser so as you can see this is a very big font size over here so let me just change the length in this case so let's say we provide 0.5 CM over here let me just save this file now and try reloading this page so as you can see this font size is in cm and you can see that the CM class is having the font size as 0.5 CM let us increase the font size to 0.8 cm over here let me just save this file now and try reloading this page so as you can see this font size is in cm and the size has increased to 0.8 cm over here so guys in this way this is one of the absolute length that you can use based on your project requirements now guys apart from this you can also provide the length in millim so let us have another paragraph over here so simply I'm going to copy this line of code over here and then instead of CM we are going to have millimet that is MM in this case is the class name and then we will say this font size is in m mm over here guys let me just save this file now and inside the style. CSS file once again we are going to have the mm class name over here so simply we will have mm in this case and for the font size let's say we have 5 mm over here so guys 5 mm is nothing but it is 0.5 CM so let me just save this file now and try reloading this page once again on the browser so as you can see this font size is an mm and if we inspect this particular paragraph over here it says 5 mm in this case now guys let us update this particular font size to 8 mm which means it will be equal to 0.8 cm so when we say 8 mm so in this case both the paragraph that is having the class that is CM and the mm will have the same font size because 0.8 cm is same as 8 mm over here let me just save this file now and try reloading this page once again on the browser so as you can see the font size of both the paragraph is now looking same and this is how you can use the millim length unit as well now guys apart from this we also have something called as inches so basically 1 in it is equal to 96 pixels over here which is equal to 2.54 CM so guys let us check this as well so basically I'm going to copy this line of code over here and simply we are going to have the class name as in in which is inches in this case and then let us say we have this text test this font size is in inches let me just save this file now and over here we are going to copy this line of code for the class inches and let us change this class name to ion in this case and let us have some unit in terms of inches over here now guys what is 1 in it is equal to 96 pixels but it will be a very big font size so let's say we want 0.2 in in this case which will be approximately 19 pixels over here so guys let us have 0.2 in in this case so ion is the unit that you can use when you want to provide the font size in terms of inches so guys let me just save this file now and try reloading this page once again on the browser so as you can see this font size is in inches and it is 0.2 in right now so when we inspect over here it says it is 0.2 in and if we calculate how many in it will be so we multiply 96 pixels by 0.2 in over here so basically it is 19.2 pixels in this case so guys if we provide 19.2 pixels as the size over here that is the font size for this paragraph there will be no change in this case so when we provide 19.2 pixels let me just save this file now and try reloading this page you will notice that there will be no change for the font size of this particular paragraph tag over here so when we reload so as you can see there is no change in this particular paragraphs font size and it is set in terms of pixels over here so guys basically this is the conversion that you can use that is 1 in it is equal to 96 pixels based on your project requirements and then guys apart from this we can also use the pixels unit which we were using till now so basically let us use that as well so over here what we will do is we will roll back this change to 0.2 in in this case and then guys apart from this let us have another paragraph over here in which case the class will be PX which represents the pixels length in this case so basically we are going to say the font size is in pixels for this paragraph so let me just save this file now and over here inside the style. CSS file let us have the entry for the pixels class so we have PX in this case and let's say we have the 24 pixel size for this particular font size over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see this font size is in pixels over here and then when we inspect this particular paragraph you can see that we have the 24 pixels font size we can increase or decrease this font size so let us say we provide the 28 pixels and you can see that the size of this particular paragraph is increased now so guys in this way you can use the pixels length unit as well and apart from this we also have the PT which represents the point's length over here and then we also have PC which is P's length over here now one point it is equal to 1 by 72 of 1 in and 1 PC is equal to 12 points over here so guys both these length units I leave up to you as a homework for you so that you can practice on your own on different HTML elements and understand it in a more clear way now guys apart from this we also have certain relative lens as well so far we have seen what are the absolute lens which means these numbers will be directly applied to those HTML elements now guys what is the meaning of relative lens over here so basically the relative length units specify a length relative to another length property and the relative length units scale better between different rendering mediums so guys let us check this with the help of examples now the first relative length the unit is em over here now guys it is relative to the font size of the element and 2 em means 2 * the size of the current font over here so guys let us check this with the help of example in VSS code so what we are going to do is let us copy this line of code over here and simply what we are going to do is for this paragraph We are going to say the class name is em and then we will say this font size is in EM over here now guys as we know the default font size for almost all the browsers is 16 pixels over here so when we say 1 em it will be equal to 16 pixels so let us check that as well let me just save this HTML file and move to the CSS file over here and simply we are going to have the entry for the class name that is em so we have do em in this case and then guys for the font what we will do is we will set it as 1 em in this case let me just save this file now and try reloading this page once again on the browser so as you can see this font size is is in EM now guys if we inspect this particular option over here when we inspect this particular paragraph you can see that the font size is equal to 1 em over here so when we uncheck this as you can see the font size is not changing that's because the default font size for this particular browser is 16 pixels and that is what is getting applied over here when we uncheck this option and when we check this option it is set to 1 em and 1 em is also equal to 16 pixels so guys what we we do is let's say we want to change it to 2 em over here so what will happen so since 1 em is 16 pixels 2 * em will be equal to 32 pixels which can be calculated by 2 * by 16 so guys over here the font size will be increased to 32 pixels in this case so let me just save this file now and try reloading this page once again on the browser so as you can see this is equal to 32 pixels right now when we uncheck this option it will go back to 16 pixels 1 once again because we have not provided any font size but when we provide the font size of 2 em so it will change to 32 pixels and guys over here the decimal numbers also work so let's say we want to provide 1.5 em in this case so instead of 2 em let's say we provide 1.5 em over here let me just save this file now and try reloading this page once again on the browser so now the font size is equal to 24 pixels which is equal to 1.5 em over here so guys in this way you can use the em length unit which is a relative length unit in this case where 1 em is equal to 16 pixels of the font size now guys apart from this we also have something called as RM which is relative to the font size of the root element so guys what is the meaning of root element so over here for the HTML document we have the root tag as the HTML tag over here which is this particular tag so guys whatever font size of this HTML tag is basically based on that font size the RM unit will work so let us check that as well so in this case we are going to have the paragraph tag with the class name that is RM and then we will say this font size is in RM over here let me just save this file now and go to the style. CSS file in this case and then guys what we will do is we will also have the HTML tag in this case and inside this we are going to say font size and by default let's say we have the font size as 16 pixels so we are going to set the 16 pixels as the value for the font size inside the HTML tag now guys we will have the RM entry over here so basically we are going to have dot followed by the class name that is RM and let's say we have one RM as the length unit so guys basically for the paragraph which is having the class that is RM over here the font size will be equal to 1 RM which means it will be equal to 1 multiplied by the font size of the root element that is 16 pixels so so basically it will be equal to 16 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see the font size is an RM and basically this font size is 16 pixels over here and the moment we change this font size let's say to 20 pixels in this case for the root element which is HTML element over here the font size for this paragraph will also increase so guys let me just save this file now and try reloading this page once again on the browser no notice that the font size for this particular paragraph will increase now so when we reload this page as you can see the font size for this paragraph has increased over here so guys in this way you can use the RM unit over here apart from this you can also increase the RM unit so let's say we increase this unit to 1.5 over here let me just save this file now and this time it should be equal to 30 pixels because the HTML font size is 20 pixels right now so when we reload this page once again you will notice that this particular font size will increase so when we reload this page so as you can see the font size has now increased 2 30 pixels this time so guys in this way you can use the RM unit as well now guys apart from this we also have two more important relative units that is VW which is relative to 1% of the width of the viewport and VH which is relative to the 1% of the height of the viewport so guys over here W stands for width and H stands for for height and V is nothing but it is the viewport now guys what is viewport over here so basically viewport is nothing but the visible area that you can see on this particular browser so since we have opened console over here by using the F12 option on windows so basically this is the viewport you can see that we can increase or decrease the width of the viewport and the same number can be displayed over here that what is the width of this particular screen right now so when we increase the width to let's say this this is 688 pixels over here so right now you can see it is 688 pixels so what we are going to do is let us create another paragraph tag in this case so guys over here what we will do is inside the HTML file we will have another paragraph tag over here and simply we are going to have the class name as VW and then we will say this width is in VW so guys we are going to set the width property over here for this particular paragraph So this width is in VW unit so guys let me just save this file now and inside the style. CSS file again we are going to have the entry for this VW class so guys over here we have dot followed by VW and this time let us have the background color for this paragraph tag so that we can identify that what is the width of this particular paragraph So guys over here we have the background color as yellow and then what we will do is we are going to set the width in this case so guys basically as we have seen that VW is nothing nothing but it is 1% of the width of the viewport so guys when we say 1 VW it is 1% but let's say we want the 50% of this particular view Port so basically it is 688 pixels of width that we have seen just now so what we can do is 50% of the VW unit will be equal to 344 pixels so the same withd we are going to set so guys basically we are going to set 50 length and then the unit that we are going to use is VW over here so let me just save this file now and try reloading this page once again on the browser so as you can see we have this paragraph which is having this width is in VW unit text over here and we have the background color as yellow and it is taking 50% of the width over here as far as this viewport is concerned guys what we are going to do is we will just comment out the previous paragraphs over here so that we can understand the VW and VH units more clearly so we have commented out the previous paragraphs over here let me just save this file now and try reloading this page so as you can see we are only seeing this particular paragraph over here now guys if we increase or decrease the width basically the width of this paragraph that is having the background color as yellow will also increase or decrease so when we decrease the width you can see that the width of the paragraph is also decreasing that's because the viewport width is decreasing over here and accordingly we are setting the 50% of this particular viewport as the width of the parag graph and that is why the width of the paragraph is also decreasing in this case and when we increase the width of the viewport the width of the paragraph is increasing over here and let's say we set it to 600 pixels over here as the width so basically now the width of this paragraph is 300 pixels so guys let us check that as well so instead of having 50 VW let us comment out this line of code over here and we are going to set up withd once again and this time we are going to set up with as 300 pixel over here that's because the viewport width is 600 pixels let me just save this file now and try reloading this page once again on the browser you will notice that there will be no change right now over here so when we reload this page as you can see there is no change right now over here and when we remove this line of code let us comment out this line of code and let us uncomment the line of code having the viewport with that is the VW unit over here let me just save this file now it is same as 300 pixels so there will be no change so when we reload this page as you can see there is no change over here and now let us decrease the width of this particular paragraph so let us set it to 40 VW so let me just save this file now and try reloading this page once again on the browser so as you can see the width has been decreased now and based on the viewport over here it decrease or increase in this case now guys we can also see that the height is 4467 over here so what we can do is we can use another unit unit that is VH for the height so basically it will be approximately equal to 202 pixels if if we set the height as 50 VH in this case so guys let us move to the vs code over here and what we are going to do is simply for the same class that is VW over here we are going to set the height CSS property and this time we will use 50 VH which is the viewport height in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the 50% height of the view Port that is getting displayed over here so let us increase and decrease the height of the browser to see how it will affect the height of the paragraph as well so you can see that the height is 300 pixels right now over here so when we decrease the height you can see that the background color of the paragraph is also decreasing so guys in this way we can set the viewport width and the viewport height based on the viewport of that particular device on which the user is viewing your web page so Guys these are some of the absolute and relative length units that we have seen and based on your project requirements you can use them to complete your task so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is specificity and priority in CSS so stay Ted so now we will see specificity and priority in CSS so guys basically if there are two or more CSS rules that point to the same HTML element then the selector with the highest specificity value will win over here and it's style declaration will be applied to that HTML element now guys what is the meaning of specificity over here so basically let's say if you have identified a particular HTML element with the help of two or more CSS selectors over here then the CSS selector with the highest priority will be applied in this case and this is the priority list the very first selector that will be used is using the inline styles that you can use inside the HTML element and then after that the IDS will be used over here in the priority list and Then followed by the classes or the sudo classes and the attribute selectors and Then followed by the elements and the sudo elements over here here so guys let us check this with the help of examples in vs code in this case so let me just remove the previous lines of code that we had written in the HTML and the CSS files over here now guys what we will do is in the HTML file let us have the paragraph tag that is the P tag over here and simply we are going to say this is a paragraph tag so guys basically we have this very simple statement that is this is a paragraph tag so guys let me just save this file now and try reloading this p page on the browser so as you can see we have this is a paragraph tag text being displayed over here with the help of a P tag now guys what we will do is let's say we want to change the color of this text so what we can do is simply in the style. CSS file we can provide the P tag over here and then inside this P tag simply we can set the color as let's say we want to set the color as red color over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have this is a paragraph tag now getting displayed with the red color so guys this is a very simple CSS property that we have applied now guys as far as priority is concerned the very first priority is given to the inline style that we can provide over here inside the paragraph tag in this case and Then followed by the style that we provide inside the style tag under the head section and then the style that is present and Then followed by the style that is present in the external files so guys let's say we provide the same paragraph tag over here inside the head section within the style tag so we are going to define the style tag over here and let's say we Define the paragraph tag in this case and we say that the color is blue this time so guys basically we are setting the color of the same text as blue over here so we have defined the color inside the external file as well but we are also defining the color inside the internal style as well over here under the head section so in this case what the color of the text will be set to let us check that as well so let me just save this file now and try reloading this page once again on the browser so as you can see the text of this paragraph is now getting displayed with the blue color over here that's because more priority is given to the internal styling over here when we provide the style tag under the head section in this case compared to the external styling that we have provided now guys more priority will be given to the inline styling that we will be providing over here inside the HTML tag so let us say inside the P tag in this case let us provide the style attribute in this case and then we are going to provide the color CSS property and then guys let's say we want to set the color as brown this time so guys when we set the color as brown let us see what will happen so let me just save this file now and try reloading this page once again on the browser so as you can see the text is now getting displayed with the brown color over here so guys basically this is the meaning of the inline Styles which is having the highest priority in this case and after the inline Styles the internal styling will be given the priority which is over here that is defined inside the head tag and Then followed by the external styling over here now guys apart from this we also have something called as IDs and the classes for the HTML elements that we use so what priority is given to such attributes so guys let us check that as well so simply we are going to remove the inline styling from here here and in this case we are going to provide the ID as well so let's say we provide the ID as par and also we are going to provide the class so let's say the value of class is class one over here so guys basically we have provided the ID attribute and the class attribute as well so simply over here inside the internal styling what we are going to do is let's say we provide the ID so basically we provide the hash character followed by the par that is the ID of this particular paragraph and then let's say we provide the color over here and this time let us take some other color over here so let's say we provide the color value as chocolate in this case so guys let me just save this file now and try reloading this page once again on the browser so as you can see the text color is getting displayed with the chocolate color over here now guys if we provide the class name as well so what will happen so let us provide the class name over here so let me just provide dot followed by the class name that is class one and then inside this let us provide the color attributes over here so guys let's say we provide the color as black this time so that the text can be displayed as black but notice that we have also provided the ID attribute over here as far as the color CSS property is concerned so let me just save this file now and try reloading this page once again on the browser so as you can see the text color is still set as the chocolate color over here that's because the ID CSS selector is given more priority compared to the class CSS selector over here so guys even though this particular class selector is mentioned after the ID selector still the ID selector will be implemented over here and that is how the priority will work as far as the ID and the classes are concerned so basically the very first priority will be given to the inline Styles over here and then followed by the IDS that you provide and Then followed by the classes hudo classes attribute selectors and Then followed by the elements and the pseudo elements now guys apart from this the internal styling that we provide over here in inside the head section will be given more priority compared to the external styling when we provide the CSS selectors over here but guys let us check one more scenario in this case so let us say we provide the class CSS selector over here inside the internal styling and let us remove the ID selector from here so let me just save this file now and try reloading this page once again on the browser so as you can see the text color is now getting displayed with the black color over here by using the CSS selector now guys what we will do is inside the external stylesheet over here we will provide the ID selector with the color chocolate so let us see whether this particular ID selector will be given the priority or this class selector will be given the priority inside the internal styling so let me just save this file now and try reloading this page once again on the browser so as you can see ID selector is getting more priority compared to the class selector even though the ID selector is provided inside the external Style sheet over here so guys basically you need to remember that the highest priority will be given to the inline styling over here so let us check that as well once again since we have provided the ID selector so when we provide style followed by the color CSS property and let's say this time we provide the value as blue over here let me just save this file now and try reloading this page once again on the browser so as you can see blue color text is getting displayed so in this way the inline styling is given the highest priority followed by the ID selector that can be defined inside the internal styling or the external styling over here and then followed by the class selector that we have just mentioned along with the Cudo classes and the attribute selectors that we have seen previously and then after that the elements and the pseudo elements will be given the priority in the end so guys basically elements are nothing but these individual tags that we have already seen over here so guys let us remove the CSS properties one at a time so let us remove the in line styling first of all so when we remove the blue color from here so basically next we have the ID with the color chocolate over here so guys let me just save this file now and since we don't have the blue color over here let me just reload this page so the text is now getting displayed with the chocolate color this time now guys apart from this what we will do is let us get this element selector inside the internal styling and after the class selector over here so that the latest color is from this particular element s selector so guys let me just save this file now the HTML and the CSS files and try reloading this page once again on the browser so still the color from the ID selector is getting displayed over here from the external style sheet so let us remove that as well so when we remove the ID selector from here the next priority will be given to the class selector this time so the black color text should be displayed so let me just reload this page once again on the browser so as you can see the black color text is now getting displayed and and then finally we have in the end the priority that is given to the element selector over here so we need to remove this class selector so that the red color text that is present for this particular color CSS property inside the element selector can be implemented on the paragraph So when we save this file now and try reloading this page once again on the browser so red color text is getting displayed over here so guys in this way this is the list of priority for which the CSS properties will be implemented on on the required selectors of the HTML elements that you want to implement based on your requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is important rule in CSS so stay tuned so now we will see important rule in CSS so guys basically the important important rule in CSS is used to add more importance to the property / value than the normal importance given to the CSS property so guys the syntax is in this way that you have to provide the exclamation symbol followed by the important keyword over here so guys if you use the important rule it will override all the previous styling rules for that specific property on that element so guys previously we had seen the priority of the CSS properties that are applied so first of all the highest priority is given to the inline styling and Then followed by the IDS selector and Then followed by the classes Pudo classes and the attribute selectors and Then followed by the HTML element Tex and the pseudo element selectors now guys there is an exception over here so even if we follow this priority list still we can override this priority list by using the important rule over here which can be done by using this exclamation mark followed by the important keyword so guys let us check this with the help of example in vs code over here so simply I'm going to remove the previous lines of code that we had return in the HTML and the CSS files over here now guys what we are going to do is let us say we have a paragraph in this case and we will say this is first par so guys basically we have this very simple statement that is this is first par and let me just copy this paragraph tag over here so that we can provide multiple paragraph tags in this case so we have this is first par this is second par and this is third par over here now guys let us provide the ID for the first par and let's say we provide the value of the ID as first and then over here for the second par as well we will provide the ID as second in this case and then for the third par let us provide the ID as third over here so guys basically we have the ID for all these three paragraph tags this time so guys let me just save this file now and try reloading this page on the browser so as you can see we have three paragraphs over here here this is first par this is second par and this is third par respectively now guys let us set certain background colors to all these paragraph over here so what we can do is simply inside the style. CSS file we are going to provide the ID over here for the first PA and let's say we have the background color as yellow this time so guys basically we have the yellow background color for the first par and similarly we are going to provide the ID of the second paragraph as well and this time let us provide the background color col as aqua color over here and for the third paragraph let us provide the background color as some other color so let's say we use this chart reuse color over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the yellow background color aqua background color and the chart reuse background color over here now guys this is the normal CSS properties that we have defined inside the external file over here and we have not used the important rule so far bar now guys what happens when we provide the HTML element over here inside the ID so let us provide the P tag instead of the ID of the third paragraph that is Hash character now guys instead of having this ID that is Hash character followed by the third ID over here for the third paragraph let us provide the HTML element so let me just provide the P tag over here now what will happen so let me just save this file now so if you notice we have the first paragraph and the second paragraph having their own background color and for the third selector that is the pag we are going to have the chart reuse which will be applied to this third paragraph over here so in short there will be no change in this case why so because we have removed the ID from the style. CSS file for the third paragraph and we are applying the CSS property by using the HTML element name so guys let me just save this file now and try reloading this page once again on the browser so as you can see there is no change right now but guys if you notice this HTML element also applies to the other paragraphs as well so the first and the second paragraph is also having the P tag over here so in case if we don't provide the first and the second ID over here so let me comment out these lines of code in this case and simply we are going to have this simple Fe tag over here as you can see so basically this background color will be applied to all the paragraph tag so guys let me just save this file now and try reloading this page once again on the browser so as you can see this chart reuse color is getting applied as the background color for all the paragraph tags over here but since the ID is having more priority compared to the HTML element name and that is why the background color will be updated to these colors respectively when we uncomment these lines of code so now we are applying the background color as yellow and aqua this time so let me just save this file now and try reloading this page once again on the browser so as you can see the background color is is now getting applied to all the three paragraphs based on these colors that we have applied to the ID and the HTML element name now guys very important thing we have seen previously that the ID selector is having more priority compared to the HTML element name over here now guys what we can do is we can remove that priority by using the important rule over here so simply after providing the value what we have to do is we have to provide the space character followed by exclamation mark and you can see that we already have this Mt abbreviation that is important so guys basically this is the important rule over here now guys what will happen is we have already seen that the yellow and the aqua background color was already applied to the first and the second paragraph Without the important rule but the moment we provide this important rule over here so whatever CSS properties that were applied to the other paragraphs will not be applied over here and only this particular CSS property will be applied to all the P tags over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see the chart reuse background color is now getting applied to all the paragraph tags over here because we have used the important rule so guys this is the meaning of the important rule it will override the value of the CSS property that we have provided over here compared to the same CSS property that we had provided using any of the selectors inside the external file or even the HTML file in this case now guys let us check whether the inline styling will work over here or not so what we will do is we will provide the inline styling over here for the third paragraph so let me just provide the style in this case and let's say we provide the background color this time and the value that we are going to use is the red color over here so guys basically we have seen that the inline styling is having the highest priority compared to the other CSS selectors so let us check this let me just save the file now and try reloading this page once again on the browser so as you can see the red background color is not getting displayed over here for the third paragraph even though we have provided the inline styling over here that's because we have provided the important rule in this case which is getting applied to all the paragraph tag now guys the moment we remove this important rule from this particular CSS selector let me just save this file now and since we don't have any important rule over here the yellow and the aqua background color will now be displayed for the first and the second paragraph since their IDs are getting mentioned over here and then since we have the inline styling for the third paragraph the red color should be displayed over here so let me just save this files now and try reloading this page once again on the browser so as you can see we have yellow and the aqua colors and this time we are getting the color from the inline styling that is the red background color from this particular inline style that we have mentioned inside the paragraph tag over here but guys the moment you provide the important rule inside this particular element name that is the P tag let us provide that so we provide the exclamation mark followed by the important keyword and let's say we change this particular background color to some other color so let's say we provide CN color this time so when we provide the CN color let me just save this file now and try reloading this page once again on the browser so as you can see the Canan background color is getting displayed over here for all the three paragraphs so guys the doesn't matter whatever color you apply over here inside the inline styling as the background color still that particular change will not be reflected over here on your browser and you will be confused while you are debugging where the issue is so guys basically it is very important to note that it is good to know about the important rule you might see it in some of the CSS source code as well however do not use it unless you absolutely have to so guys basically if it is possible to avoid the important keyword over here you should be avoiding it in order to avoid the confusion while you are debugging your CSS properties so even though if you are providing the CSS property as the inline styling over here still those CSS properties will not be applied if the same CSS properties are being used with the important rule in your external or the internal styling so guys this is the way that you can use the important rule over here as far as the CSS properties are concerned comment in the comment section below whether you have learned something on of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is math functions in CSS so stay tuned so now we will see math functions in CSS so guys basically the CSS math functions allow mathematical Expressions to be used as property values and this we are going to check with the help of examples as well so we will see the various functions such as the Kelsey function and the max function and the Min function over here so guys basically we can provide the mathematical expressions in between these parenthesis that you can see inside this for these CSS math functions so guys let us check the examples over here so basically the caly function performs a calculation to be used as the property value so guys let us check this with the help of example in VSS code over here so simply inside this body section of the HTML web page what we are going to do is we will simply have the div container over here so we will Define the diff tag with the class container in this case and then guys basically we are going to generate some random text over here using the lurm Mt abbreviation so guys as you can see we have generated some random text in this case now guys let me just save this file now and try reloading this page on the browser so as you can see this is some random text that we have generated now guys what we will do is inside the style. CSS file we will provide certain CSS properties to this class container over here which is associated created with the diff tag that we have defined so guys basically we are going to have the background color as yellow in this case so we will use the background color CSS property also we will Define the Border as two pixels border withd with the Border style as solid and the Border color as black color in this case let us also provide certain padding over here so we will provide the value as 5 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see this is the dev with the class container with the required CSS properties that we have defined now guys how do we use the Kelsey function that is the math function over here inside the style. CSS file so guys we can use the width CSS property in order to define the width of this particular diff tag So currently it is taking the 100% width of this entire screen let us set it to 50% width of the screen so how we can do that simply by providing the withd property over here and then simply we can provide 50 % in this case so let me just save this file now and try reloading this page once again on the browser so as you can see we have the 50% within this case now guys this is the direct way in order to provide certain value to the CSS property but let's say from this 100% of the width of this particular diff container that we have seen just now so let us change it to 100% in this case so let's say if we only want to remove the 200 pixels from the right so what we can do is simply we can use the math function that is Kelsey over here so as you can see this is the function and inside this we have to provide the expression that is 100% minus 200 pixels so guys basically this is the mathematical expression that we are providing what we are saying to the web browser over here is from the 100% of the width please remove 200 pixels so whatever the result will be of this particular expression that result will be set as the width of this particular class that is container over here so let me just save this file now and try reloading this page once again on the browser so as you can see from the right 200 pixels has been removed from here that is from the 100% we are subtracting 200 pixels of the width and this is the way that the width of a particular div container or any other HTML element can be set by using the Kelsey math function over here guys apart from this let us say if we want to remove more 100 pixels from the right so what we can do is from the 100% of the width we want to remove 300 pixels from here so simply we have to minus the 300 00 pixels let me just save this file now and try reloading this page once again on the browser so as you can see 300 pixels is removed from the 100% of the width of this particular div container and in this way you can provide the mathematical expression inside the parenthesis of this math function that is Kelsey now guys apart from this we also have the max function over here which uses the largest value so we will be providing the comma separated list of values from which the largest value will be used in order to set the property value in this case so guys let us check this as well so what we will do is instead of using the Kelsey math function we will use the max math function over here and inside this let us say we only provide one value that is 300 pixels over here so guys what will happen so in this case since the largest value is 300 pixels because that is the only value that is present right now inside the max math function so that is what is going to be set as the value for this particular width of the container so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the 300 pixels width of the diff container if we right click over here and click on the inspect option we will be able to see the width of the container over here as you can see the content is 300 MTI 180 so over here 300 is the width of this particular Dev element right now so guys in this way you can use the max function with just one value and apart from this let us say we also want to provide another value that is 50% of the end entire width of the screen so guys over here we have to provide comma followed by 50% so guys this is another value over here so currently 300 pixels is this much on the screen that you can see and when we say 50% it will be at the center of the screen where the right hand side of the div element must be present so Guys Somewhere over here the right hand side of the div element should occur when we apply these changes over here so let me just save this file now and try reloading this page once again on the browser so as you can see the 50% of the width of the screen is being taken right now and the border is present at the center of the page over here as far as horizontal alignment is concerned so guys out of 300 pixels and 50% 50% is greater right now and that is what is being set as the value of the width CSS property now guys apart from this let us say we also have 70% as the width So currently 70% of the width will be the highest number over here so let me just save this file now and try reloading this page once again on the browser so 70% is being set as the width of the div container so in this way you can also use the max math function inside the CSS for any of the CSS properties that you want to use the mathematical expression for now guys similarly we will have the Min function as well which uses the smallest value from the comma separated list of values as the property value so guys let us check this as well so out of all these three values that we have provided 70% is the largest value and that is is what we have seen over here that is 70% of the width is getting implemented right now for this div container what if we provide the Min function for the same list of values so in this case the minimum value will be 300 pixels because that is the smallest value out of all these three values and that is what should be set as the width for this particular div container so guys let me just save this file now and try reloading this page notice that we have provided the Min function over here instead of Max function so when we reload this page as you can see the minimum value which is 300 pixels out of all these list of values will be implemented as the width of the div container when we right click and click on the inspect option you can see that the 300 pixels that is the width is being set for this particular HTML element apart from this we can also reduce the width so let's say we provide another value as 200 pixels So currently 200 pixels is the smallest value out of all these values that we can see right now so when we save this file now and try reloading this page once again on the browser so as you can see 200 pixels is being set as the width of the HTML element and instead of using Min we can also use max function in this case let me just save this file now so currently 70% will be set as the width of the div element so when we reload this page as you can see this is the 70% of the screen that is being taken by this HTML element so guys comment in the comment section below whether you have learned something out of this video please make sure that that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is rounded Corners in CSS so stay tuned so now we will see rounded Corners in CSS so guys basically in CSS the Border radius property can be used in order to provide the rounded Corners to the HTML elements and this we are going to check with the help of examples as well remember that we can easily use the order radius property and provide certain length unit in order to provide the rounded Corners to the HTML element so guys let us check the example with the help of the div element that is having the background color over here so simply I'm going to remove the previous lines from the style. CSS and the HTML file over here now guys what we will do is simply we are going to have the div tag and inside the div tag we are going to say this is a sample HTML element so guys basically we have this very simple statement that is this is a sample HTML element over here now guys let me just save this file now and try reloading this page once again on the browser so as you can see we have this is a sample HTML element which is inside the diff tag now guys let us provide certain CSS properties over here to the diff tag so inside the style. CSS file we will be having the diff tag over here and for this diff tag we are going to have the background color so let's say we are going to set the color as yellow yellow over here and then apart from this we will also set the border so border width will be two pixels over here apart from this the Border style will be solid and the color will be black in this case and let us also provide certain padding so let's say we provide five pixels of padding over here let me just save this file now and try reloading this page once again on the browser so as you can see we have the yellow background color and also the border that is getting displayed for this particular div element now guys since the div element is the Block Level element ment that is why it is taking the entire width of the screen so guys what we can do is simply we are going to say display it is equal to inline so that the div element only takes the width that is required by the content of this div element so over here we will say display it is equal to in line so let me just save this file now and try reloading this page so as you can see we have the dev element that is taking only that much width which is required by the content of the dev element now simply we can use the Border radius property over here in order to provide the rounded corners for this HTML element that is the diff tag so simply we can provide the length unit of let's say 5 pixels over here so guys border radius is the CSS property that we can use and the length unit that we are using right now is 5 pixels let me just save this file now and try reloading this page once again on the browser as you can see we have certain rounded Corners over here let me just zoom in little bit so as you can see these are the rounded Corners that are implemented for this particular Dev tag if we remove this border radius property let me just save this file now so currently there are no rounded corners but when we provide the Border radius CSS property along with certain value over here so when we reload this page as you can see these are the rounded Corners let me just increase the value to 10 pixels over here let me just save this file now and try reloading this page so as you can see these are the rounded Corners that can be displayed for this particular HTML element so guys in this way you can easily use the border radius CSS property in order to have the rounded Corners over here guys apart from this we can also use the value in terms of percentage for the Border radius so guys let's say we provide 10% of Border radius in this case so let me just save this file now and try reloading this page once again on the browser so this is the 10% border radius that you can see over here similarly if you provide 50% of Border radius what will happen so guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the 50% value for the Border radius that we have provided now guys you can also make a circle over here for a particular div element in this case now guys you can also create a circle by using the Border radius with the help of the div tag over here but in that case you need to provide the width and height of the diff tag in such a way that both the width and the height must be equal so guys let us check that as well so what we are going to do is simply we will say with it is equal to 100 pixels and height it is again equal to 100 pixels over here and apart from this we will remove this property that is display it is equal to inline right now and then let us decrease some text over here so simply we are going to say the word that is div in this case let me just save this file now and try reloading this page once again on the browser so as you can see this is a circle that is getting implemented right now let us remove this text from the D tag over here and guys this circle is Possible only when you provide the Border radius it is equal to 50% when you make it as 40% it won't be the perfect circle let me just save this file now and try reloading this page once again on the browser so as you can see it is not a perfect circle right now when we remove the Border radius there will be no rounded Corners right now and it will be simply a square since we have provided the width and height which is having the same value that is 100 pixels let me just save this file now andery reloading this page so as you can see this is a square that is getting displayed right now with the help of the div tag but when we provide the Border radius of 50% it will be the circle that will be displayed on the web browser so let me just save this file now and try reloading this page once again on the browser so this is the circle that is getting displayed on the web browser so guys in this way if you want a circle or the rounded corners for the HTML elements based on your project requirements you can use the Border radius property inside the style. CSS file comment in the comment section below whether you have learned something out of this video please make sure that you like this this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is color gradients in CSS so stay tuned so now we will see color gradients in CSS so guys basically the CSS gradients let you display the smooth transitions between two or more specified colors and this we are going to check with the help of examples as well and there are basically three types of gradient that we will be seeing in the CSS so the very first gradient type is the linear gradient over here for which the directions can go from top to down or up left right or diagonally as well apart from this we also have the radial gradient that we can use which is defined by their Center and then the third gradient is the conic gradients which is rotated around the center point so guys let us check all these with the help of examples in vs code over here so simply I'm going to remove the previous lines of code that we had return in the HTML and the style. CSS file in this case now guys let us simply provide the div tag over here and for this D tag we are going to provide certain CSS properties so inside the style. CSS file we will have the div tag that is the CSS selector and inside the curly braces let us say first of all we provide the simple background color so guys basically this background color is the solid color that we are providing and it is not a mixture of two or more specific colors over here so let me provide the width and height of this diff tag as well so in this case let us provide the width as 500 pixels and also the height as 300 pixels right now so guys over here we have provided the width and height properties as well apart from this lets also provide certain border so let's say we have two pixels border width and then the Border style is solid and the Border color is black right now so guys let me just save this file now and try reloading this page on the browser so as you can see we have this diff tag that is having the background color yellow it is also having the border and specific width and height that we have defined so guys this is the solid background color that we have seen so far so basically what gradient colors allow you to do is have multiple colors and there will be smooth transitions in between those two colors so guys basically we can have two or more colors in this case so let us see how linear gradients can be used so guys in this case what we have to do is we need to comment out this background color CSS property since in order to use the gradient colors we need to use the background image CSS property so guys over here we will say background image so guys this is the CSS property that you have to use in order to provide the gradient colors and then over here simply we are going to say linear gradient in this case so you can see this is the method that we have to use and inside the linear gradient we need to provide the colors so guys let us say we provide yellow color as the first color and followed by comma and then let's say we provide green color as the second color over here so guys basically these are the two colors that we want to be present as the background color for this diff tag and basically the default direction will be top to down in this case so guys you can see that we can go in any direction we are going to see that how we can set the direction but first of all the default direction will be top to down and that we are going to check with the help of these two colors that is yellow and green so guys let me just save this file now and reloading this page once again on the browser so as you can see on top we have the yellow color and then as we go down the yellow color component is getting reduced and then the green color component is getting increased over here and at the end that is at the bottom of this particular div element we have the complete green color over here so guys in this way we can create the linear gradient from top to bottom which is the default direction we can also make the direction from left to right as well so how we can do that simply before the first color we can also set the direction from left to right in this case so how we can do that simply when we provide the first color over here before that we need to provide the direction that is to right in this case so guys basically we have this direction that is to right we can change it to left up down so basically by default we have two down over here so since it is the default value so we don't have to provide it but in case if we want to change the direction so simply we can say to right so basically in this case yes yellow color will start from the left and then it will end with the green color on the right of this diff tag over here so let me just save this file now and try reloading this page once again on the browser so as you can see yellow color is starting from the left and it is ending with the green color on the right now guys apart from this we can also have multiple colors over here we have just used yellow and green color right now we can also provide the third color after providing comma so let's say we provide blue color in this case so blue color is the third color let me just save this file now and try reloading this page once again on the browser so as you can see we have the yellow color on the left and then when we move to the middle of this D tag we are getting the green color and then when we move to the right of this D tag we are getting the blue color over here and this is the smooth transition that you can see so there is no sudden green color after a particular point on this div tag and there is no sudden blue color after this point over here so guys basically this is the smooth transition that is happening between the colors that we have provided and you can provide any number of colors over here so guys in this way we can use the linear gradient over here so this was the simple example in this case we can also use the angles instead of directions so guys over here what we have done is we have provided the direction to right or we can also say to left over here so basically the yellow color will start from the right and the blue color will end at the left so let me just save this file now so basically the colors will reverse themselves in terms of directions the yellow color will come on the right and the blue color will go to the left whereas the green green color will stay at the middle so when we reload this page as you can see the direction is to left over here now guys how do we provide the angles so basically when we say 0° over here so let me just provide 0 D EG so in this way you can provide the angle over here so let me just save this file now and try reloading this page once again on the browser the color is starting from the bottom so as you can see we have the yellow color at the bottom and then the blue color at the top and when we say 180° over here let me just change it to 180° this will be the default behavior when the yellow color is coming from top and the blue color is ending at the bottom over here so as you can see this is 180° right now so guys what will happen when we provide 90° over here let us check that as well so let me just save this file now and try reloading this page so as you can see it is coming from left over here right now so in this way you can also provide the angles as far as the degrees are concerned as the first parameter before providing the first color and what is the default behavor when we save this file now and try reloading this page as you can see the color is coming from the top which means it is 180° by default so if we check that when we provide 180° over here so let me just save this file now and try reloading this page so there is no change right now over here so by default it is 180° now guys apart from this we can also have the rainbow colors over here so before checking the random colors we can also check how we can set the colors diagonally so guys let us go from top left to right right bottom over here so how do we do that so basically simply we have to provide two right bottom in this case so we say two right bottom so guys when we save this file now and try reloading this page once again on the browser so as you can see the yellow color is coming from the top left and then we have the green color the direction is diagonal right now and then in the end the bottom right is now having the blue color and that is how you can set the gradient color as diagonal in this case now guys let us check another example that is how we and create the rainbow colors so what we can do is simply we have to go from left to right so over here we are going to keep two right in this case and then we are going to define the colors of the rainbow so guys first of all the first color is violet in this case and Then followed by Indigo and then we have blue and then we have green followed by yellow and then we have orange and Then followed by red so guys this is the sequence of the rainbow color so we have violet indigo blue green yellow orange red so guys let me just save this file now and try reloading this page so remember that we have set the direction as to right so basically it will go from left to right in this case so when we save this file so as you can see these are the rainbow colors that you can see on this particular diff tag over here so guys in this way we can easily use the linear gradient function for the background image property so guys it is very important to note that we are using the background image CSS property instead of the background color property now guys apart from this let us move to the next gradient that is radial gradients over here which is defined by their Center so guys let us check the example of the radial gradient in this case so instead of using the linear gradient simply we have to provide the radial gradient over here so inside this radial gradient what we have to do is let us provide certain color so we will provide yellow and then green color in this case let me just save this file now and try reloading this page once again on the browser so guys this is the radial gradient actually it is the size of the ellipse over here in between you can see that it is the yellow color and then the outside of this particular div element is the green color over here when we provide more colors so let us provide the blue color as well as the third color let me just reload this page so as you can see the ellipse is getting displayed on this particular web browser which is the default shape when we use the radial gradient so guys in this way if you want this kind of gradient to be displayed on any of the HTML element you can use the radial gradient and apart from this we can also have the circle shape as well instead of the ellipse shape so guys by default this is the ellipse shape but before the first color simply we can provide the keyword that is circle over here so guys what will happen is instead of ellipse we will have the circle shape for this particular radial gradient that will be implemented so let me just save this file now and try reloading this page once again on the browser so as you can see this is the circular shape of this particular radial gradient that is getting displayed inside this div element over here so guys in this way you can use the radial gradients as well apart from this we also have conic gradients which is rotated around the center point so guys let us check this with the help of example over here so simply what we have to do is instead of radial gradients we can say conic gradient in this case so we have conic hyphen gradient and let us use some color so again we will use the yellow color and the green color for this coric gradient and Then followed by semicolon over here let me just save this file now and try reloading this page once again on the browser so guys as you can see this is the rotation that is happening from this particular point over here first of all we have the yellow color which is making a transition over here as we move in the clockwise Direction and then we go towards the green color over here and then in this way the Corning gradient can help us in order to display the HTML element with this particular gradient color let us provide some other color over here so let's say we provide the third color as the aqua color let me just save this file now and try reloading this page once again on the browser so as you can see we are making the transition from the yellow color and then we are moving towards a green color and then again we are moving to the aqua color over here so guys you can use the conic gradient as well if this is the requirement apart from this we can also mention the angles with the degree so guys over here by default the angles that are provided to the different colors are equal over here but we can mention the degrees as well so let's say we provide certain angles in this case so let's say we want the angle of the yellow to be 45° in this case so simply we can set the 45° over here let me just save this file now and try reloading this page once again on the browser so as you can see the yellow color is now spread towards the 45° angle over here right now so based on your project requirements you can mention the degree of the colors as well and then apart from this you can also have the starting point over here so guys simply we can use the from keyword in this case so basically you can see that the this is the starting point from where the colors are starting but you can provide the angle from where you want those colors to start so let us check that as well so before the first color what we can do is let me just remove this angle over here so before the first color simply we use the from keyword and let's say we provide 90° as the starting point from where we want to start this color that is yellow followed by green and Then followed by aqua color let me just save this file now and try reloading this page once again on the browser notice that we have the start point over here right now but when we reload this page as you can see the start Point has changed over here from the right hand side the yellow color is starting now so guys in this way if you want to change the starting point you can use the from keyword over here followed by the angle that you need to provide inside this conic gradient and Then followed by the colors that you want to set so guys in this way you can use the conic gradients as well so these are some of the gradients that you can use in the CSS so we have the linear gradients that we have seen radial gradient and also the conic gradient as well so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is how to make a pie chart in CSS so stay tuned so now we will see how we can make a pie chart in CSS so guys basically we can easily make the pie chart in CSS using using the conic gradient for the background image CSS property so guys previously we have seen how we can use the conic gradient and apart from that we have also seen the linear gradient and the radial gradient for the background image CSS property if you have not watched that video you can check the playlist of the CSS tutorial the link I have given in the description section below so guys basically we have seen that the conic gradient help us in order to have the gradient color being rotated from the center point so guys over here we are going to use that property of the conic gradient in order to make the pie chart in CSS so guys this is the example that we are going to make use of different colors and we will be providing the angle for those colors as well so let us check this with the help of example in vs code over here let me just remove the previous lines of code that we had written and then guys inside the HTML file what we are going to do is we are going to have the div tag over here which will be a square div tag in this case so we are going to Define certain CSS properties over here so let's say we provide the width as 300 pixels in this case also the height as 300 pixels since we want to have the Square D tag over here out of which we are going to make a pie chart in CSS so guys we have the width and height over here in this case let us also have the background color for now which we are going to comment out later on so let's say we have the color as Aqua over here also we will provide the border of let's say 2 pixels solid border with the color that is black in this case let me just save this file now and try reloading this page on the browser so as you can see this is the diff tag with the width and height that we have set over here so guys what we have to do is instead of using the background color over here we have to use the background image so let me just comment out this line of code and simply we are going to say background image in this case so guys for this background image we have to use the conic gradient over here so we say conic hyph gradient in this case and Then followed by open and close parenthesis so guys using the conic gradient will help us in order to provide the gradient color from the center point and rotate it in the clockwise Direction so guys let us check the example of that so let me just set the first color as blue color over here and second color as the yellow color the third color is the green color and fourth color is the red color over here so guys we have the four basic colors blue yellow green red let me just save this file now and try reloading this page once again on the browser so as you can see we are starting starting from this particular point over here the first color is the blue color and then we have the smooth transition towards the yellow color over here and then again we have the transition towards green color followed by the transition towards the red color so it is the sequence in which we have provided the colors over here inside the coric gradient now guys how do we make a pie chart out of this Square shaped div element so first of all we need to convert the square shape to the circle shape so what we can do is simply we can use the Border radius over here and if you have seen my previous videos we have the Border radius equal to 50% that will help us in order to have the HTML element in a circle shape only when the width and height values of that particular HTML element are same so guys basically we need to have the width and height to be same in order to have the circular shape with the help of the Border radius equal to 50% let me just save this file now and try reloading this page once again on the browser so as you can see we have the circular shape over here for this particular Dev element now guys we don't want this particular smooth transition that is happening between colors so what we can do is simply we can provide the starting and the ending point for these colors so first of all the blue color it is starting from 0° and then it is ending at 45° so we need to provide comma and then simply we have to provide blue again and then we will say 90° over here so guys basically it is 90° and not 45° so basically it will be the one quarter of this part particular Circle over here right now and Then followed by again yellow color which is starting from 90° from where the blue color got over and then followed by once again the yellow color which should get over at 180° right now so we have 180° in this case let me just save this file now and see how the changes will look like so when we reload this page so there are no changes right now let me just complete this code over here we have the green color which should start from the 180° right now so we have 180° for the green color and again we have green color over here so we will say green color followed by 270° so we have 270° and then we have the red color over here so we need to have comma as well so we have red color followed by 270° from where it should start and then it should end at 360° so we have red color followed by 360° over here so let me just save this file now guys over here we have done a mistake we have provided the space character over here so always remember that when we are providing the angles we need to provide the space character after the color but not in between the value and the D string over here so you need to remember this let me just save this file now and try reloading this page once again on the browser so as you can see this is the perfect pie chart and all the colors are taking the 1/4 area for this particular Circle we have the blue color followed by the yellow color then we have green color and then we have the red color so guys no longer we are having the smooth transitions over here in between the colors because we have provided the strict angles over here the starting and the ending angles right now so guys we can change these angles as well so instead of having the 90° for the blue color we can end it at 45° which should be somewhere over here that is the half of the quarter of this particular pie chart and then we can start the yellow color from that particular point so we have 45° over here from where the yellow color should start so let me just save this file now and try reloading this page once again on the browser so as you can see the blue color is starting at the zero Dee and then it is ending at the 45° and then the yellow color is starting from the 45th Dee and then it is ending at the 180° over here so guys in this way based on your requirements you can provide the different angles for the different colors that you want to set inside your pie chart so guys in this way you can easily create the pie chart by using the conic gradient for the background image CSS property apart from this you can also display the Legends for this particular pie chart along with the different values that those Legends represent so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is text Shadow property in CSS so stay tuned so now we will see text shadow in CSS so guys basically the CSS text Shadow prop property applies the shadow to the text and this we are going to check with the help of examples as well basically in its simplest use you can only specify the horizontal Shadow and the vertical Shadow so guys let us check this with the help of example in vs code over here so simply I'm going to remove the previous lines of code that we have written in the HTML and the CSS file over here simply we are going to have the paragraph tag in this case and simply we will say sample paragraph So guys over here we have the sample parag paragraph that is the text getting displayed inside the paragraph tag let me just save this file now and try reloading this page on the browser so as you can see this is the sample paragraph text getting displayed now guys let us provide certain CSS properties to this paragraph tag over here so first of all we will set the font size in this case so let's say we set the font size as 3 Em which means three times of 16 pixels which is the default size for the web browser and guys apart from this we have to provide the text shed property so simply we will say text hyphen Shadow and as you can see this is the CSS property that we have to use so guys what value we need to provide for this text Shadow first of all we need to provide the horizontal Shadow and Then followed by the vertical Shadow so for example let's say we provide two pixels as horizontal Shadow over here followed by the space character and then we have the two pixels of vertical Shadow so let me just save this file now and try reloading this page once again on the browser so as you can see theone font size of this particular sample paragraph is increased to 3 em over here and you can see to some extent that all the characters are now having the shadow just behind them so guys basically since we have used a very small value that is 2 pixels for horizontal Shadow and two pixels for vertical Shadow and without changing any color for the shadow that is the reason we are not able to see the clear Shadow over here when we remove this Shadow right now let me just save this file now and try reloading this page as you can see this is the normal text getting displayed but when we implement the shadow once again so we will be seeing the shadow to some extent over here now guys to see this Shadow properly what we will do is we will change the horizontal Shadow and we will take this particular Shadow somewhere over here so guys currently what is happening is If You See Your Shadow as well when the sun is exactly above the top of your head so you are not able to see your own shadow properly but when the sun is at a particular angle in front of you or behind you you will be able to see your own shadow and that is what we are going to do right now let's say the sun is over here on the extreme left of this particular sample paragraph So the shadow should occur somewhere over here on the right so what we will do is we will increase the horizontal Shadow over here so let's say we provide 300 pixels in this case and 0 pixels for the vertical Shadow so let me just save this file now and try reloading this page once again on the browser so as you can see this is the shadow that is appearing over here let us increase the horizontal Shadow to 400 pixels let me just save this file now so as you can see now this is the shadow that is getting appeared over here on the right hand side of the actual Tex so guys basically the sun is on the left hand side and the shadow is appearing somewhere over here and this is the meaning of the horizontal Shadow right now and when we use the vertical Shadow the shadow will come somewhere down over here so let us check that as well when we provide let's see 50 pixels of vertical Shadow so the shadow should appear down somewhere over here so let me just reload this page so as you can see the shadow has appeared down so horizontally it is 400 pixels away and vertically it is 50 pixels away so guys in this way you can provide the horizontal and the vertical Shadow over here now guys how do we add the color to the text Shadow over here so guys simply we have the third property in this case so after the vertical Shadow we need to provide the space character and simply we can provide the color for the shadow so let's say we provide the color as red color so let me just save this file now so notice that we have provided the original text over here here so this particular color that we have provided inside the text Shadow will only be applied to the shadow for this particular text so this is the text that should get the red color so let me just reload this page once again on the browser as you can see this is the red color shadow that is getting displayed over here on the right hand side so guys in this way you can provide the color after the vertical Shadow value over here now guys apart from this we can also provide the blur effect to the text Shadow so guys before implementing the blur effect what we will do is we will get the shadow closer to the original text over here so we will simply provide two pixels of horizontal shadow in this case and two pixels of vertical Shadow let me just save this file now and try reloading this page once again on the browser so as you can see we have the black color text and just behind the black color text you can also see the red color shadow for this particular text now guys in order to provide the blur effect for this particular Shadow we can simply provide the length unit before the color for the shadow so over here let's let say we provide five pixels so basically this will help us in order to provide the blur effect to some extent so let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the blur effect and it is not showing the solid color right now so if you want to see that separately once again let us provide the 400 pixels of horizontal Shadow and 50 pixels of vertical Shadow over here so that we can see the text Shadow somewhere over here right now on the web browser so when we reload this page you can see that this is the blur effect that is getting implemented over here when we remove this blur effect it will be the normal text that is getting displayed but if we provide the blur effect so five pixels of blur effect we'll provide the blur effect for this particular text Shadow and guys this gives a good look as far as your text is concerned that you want to display based on your project requirements so guys let me just change this horizontal Shadow to 2 pixels and also the vertical Shadow to 2 pixels over here and then reload this page once again so now now guys this is giving a good look as far as the blur effect is concerned now guys apart from this we can also have the white text with the black shadow over here so guys let us check this as well so what we have to do is first of all we will remove the text Shadow from here and simply we are going to set the color so this time we are going to set the color as white color because what we are doing is we are setting the text color as white color and also we are having the background color is white color so we won't be able to see the text by default but what we are going to do is we are going to make its shadow as black color so let us check that let me just save this file now and try reloading this page once again on the browser as you can see we are not able to see the text by default but it is currently present when we highlight the text somewhere over here you can see that the text is getting highlighted which is having the white color as the text color now guys what we are going to do is we will use the text Shadow CSS property so over here we have the text Shadow and again we are going to use the two pi pixels of horizontal and vertical Shadow right now and apart from this we will set the color of this particular text Shadow as black so let me just save this file now and try reloading this page once again on the browser notice that we don't have any text right now but the moment when we reload this page as you can see we are getting the black color text Shadow due to which we are able to see the sample paragraph text to some extent now guys how do we improve this so basically we can also add the blur effect over here so before the color and after the vertical Shadow simply we can provide the five pixels of blur effect let me just save this file now and try reloading this page once again on the browser so as you can see it is looking more beautiful now so we can see that the text is coming on top and we are having the text Shadow is the black color behind the original text which is giving it a 3D look over here so guys in this way we can have the white text with the black color shadow over here which can be displayed on the web browser now guys apart from this we can also have the multiple Shadows over here so to the same text Shadow we can add multiple colors so what we have to do is let's say we want to add the blue color text Shadow once again to this existing sample text so what we will do is after this black color text Shadow simply we have to provide comma and Then followed by we will provide Zer pixels of horizontal and vertical Shadow this time and then apart from this we are going to increase the blur effect to 20 pixels and the color that we are going to use this blue color over here let me just save this file now and try reloading this page once again on the browser so as you can see we are getting the blue color text Shadow to some extent which is improving the appearance of this particular sample text now guys apart from this we can also add a darker version of the blue color as well as the third text Shadow so again we are going to provide comma and Then followed by 0 pixels of horizontal and vertical Shadows over here and this time we are going to use five pixels of glare effect and Then followed by the dark blue color over here which is the darker version of this particular blue color let me just save this file now and try reloading this page once again on the browser so as you can see now it is more improved the text is looking more beautiful this time so guys in this way you can use the combination of the different colors for the text Shadows along with the different blur effects that we have implemented over here based on your requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is box shadow in CSS so stay tuned so now we will see box shadow in CSS so guys basically the CSS box Shadow property is used to apply one or more Shadows to an element and this we are going to check with the help of examples as well we can specify a horizontal and a vertical Shadow to the Box in which case we can have any of the HTML element have the horizontal and the vertical Shadow so guys over here the default color of the Shadow will be the current text color and as you can see this is the syntax we have taken the div HTML element over here and simply we can use the Box Shadow CSS property and provide the horizontal and the vertical Shadow based on our project requirements so guys let us move to the vs code over here and simply we are going to to use the diff tag in this case that is going to have the box Shadow over here and then we will say this is a simple diff tag so guys basically we have a very simple statement that is this is a simple diff tag over here let me just save this file now and over here inside the style. CSS file we are going to provide certain CSS properties to this div tag so guys first of all let us provide the width and height of this diff tag over here so let's say we have the width of 100x in this case and also the height of 100 pixels and then guys apart from this let us have certain background color for this D tag so let's say we have the yellow color as the background color for this particular HTML element let me just save this file now and try reloading this page on the browser so as you can see we have a simple Square in the form of the diff element over here let us provide certain padding as well so in this case we are going to provide the padding of let's say 10 pixels and also we will provide the border of black color over here so guys let's say we have the Border width of two pixels and the Border style is solid and the color as black color in this case let me just save this file now and try reloading this page so as you can see we have a good looking div tag over here which is having the background color along with it we have the Border as well now guys how do we use the Box Shadow so over here as we can see the syntax is box Shadow CSS property followed by the horizontal and the vertical shadow that we can can provide so guys inside the VSS code simply inside the style. CSS file we will say box Shadow CSS property and over here let's say we provide five pixels of horizontal Shadow and five pixels of vertical Shadow over here so let me just save this file now and try reloading this page once again on the browser so as you can see the shadow can be displayed over here as far as the 5 pixels length is concerned guys what we will do is we will remove the border from this particular or diff tag so that we can see clearly that it is a black color shadow so we are going to Simply comment out this line of code over here let me just save this file now and try reloading this page so as you can see it is a black color shadow right now and the shadow color will be the text color by default which is black color over here can we change that color so let us try that as well so simply we can set the color as some other color so let's say we provide the color as blue color over here let me just save this file now and try reloading this page so as you can see the text color is changed to blue color now and also the text Shadow color is changed to blue color over here now guys apart from this you can also provide the shadow color Inside the Box Shadow CSS property so how we can do that simply after the vertical shadow that we have provided we can provide the color of the shadow that you want to show so guys let's say we have the aqua color that we want to display as the Box Shadow over here for this particular diff tag so so simply we can provide the color that is aqua let me just save this file now and try reloading this page once again on the browser so as you can see it is the aqua color that is getting displayed over here let us change it to some dark color in this case so let's say we provide a dark blue color as the Box Shadow color for this particular diff tag let me just save this file now and try reloading this page so as you can see we have the dark blue color as the shadow color over here now guys apart from this we can also have the blur effect over here for this particular box of Shadow so we have specified the color for the shadow already as the third parameter but the blur effect can be provided after this vertical shadow that we have provided over here so guys after this vertical Shadow and before the color that we have provided simply we can provide the length unit for the blur effect so guys what this will do is instead of having the solid color as you can see this dark blue color is the solid color that you can see right now we will be having certain blur effect for this particular solid color so let us check that as well we have provided the length that is 10 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see now it is having some blur effect for this particular dark blue color and in this way it gives a good look as far as this particular Dev HTML element is concerned guys apart from this you can also design your cards based on your project requirements that you want to display on the website that you are building in this way and it it gives a kind of a 3D look over here which means that this particular card is coming up and we can see the shadow behind this particular card in this case so guys this is the way that you can provide the blur effect Inside the Box Shadow over here apart from this we also have something called as spread radius of the Shadow which increases the size of the Shadow so guys let us check that as well so over here instead of having the 10 pixels blur effect let us have five pixels of blur effect let us check the changes over here so as you can see the this is the 5 pixels blur effect now guys you can increase the size of this particular Shadow simply by providing another length unit after the blur effect which we call it as the spread radius so guys let us check that as well so if you provide two pixels of spread radius let us see how the changes will look like let me just save this file now and try reloading this page once again on the browser so as you can see to some extent the shadow size has been increased for this particular diff tag over here and in this way you can provide the B radius as well so to summarize first of all we have the horizontal radius and Then followed by the vertical radius and Then followed by the blur effect that we have seen already and Then followed by the spread radius that you want to optionally provide and then apart from that we also have the color that we have displayed over here guys we can provide any other dark color as well so let's say we provide dark green color over here so you will see the dark green color as the Box Shadow for this particular diff tag let me just save this file now and try reloading this page so as you can see we have the dark green color as the shadow for this particular diff tag over here now guys apart from this we also have something called as insert parameter which changes from the outer to the inner Shadow so guys if you notice over here we are getting the shadow on the right hand side and at the bottom of this particular HTML element what if we want the shadow on the other side that is on the left as well as on the top as well so guys simply we can reverse the Shadow by using the inser value for this particular back so guys simply we can provide the shadow on the left and the top by using the inser value for this particular CSS property that is box Shadow so after the color simply we can say insert over here and let me just save this file now and try reloading this page once again on the browser so as you can see now the shadow is getting displayed on the other side of this particular diff tag so guys in this way you can easily use the inser value as well and apart from this you can also have the multiple shadow which are separated using comma so guys let us check this as well so I'm going to Simply remove this ins set property also we are going to remove the spread radius over here and simply what we are going to do is we will set the Box Shadow as blue color over here and in this case we are going to increase the blur effect to 20 pixels so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have the blur effect of 20 pixels and the shadow color is blue right now guys we can can have more darker version of the blue color so over here we are going to set another color that is dark blue in this case so how we can do that is we can provide comma after this blue color and then provide the horizontal and vertical so let's say this time we don't want to provide the length units for the horizontal and vertical direction for the Shadows but simply we want to provide the blur effect so over here simply we can say five pixels of blur effect and the color that we want is dark blue in this case so guys this is the darker version of the blue blue color that we have already applied so let us see how the changes looks like so let me just save this file now and try reloading this page once again on the browser so as you can see the dark blue color is also getting highlighted over here as the Box Shadow for this particular diff tag and in this way you can provide your own box Shadow based on your requirements if you want to provide multiple box Shadows for a particular HTML element in this case so guys comment in the comment section below whether you have learned something out of this video please make make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is text effects in CSS so stay tuned so now we will see text effects in CSS so guys basically we are going to learn various text effects properties in this particular video with the help of examples so let us move to the vs code over here and simply I'm going to remove the previous lines of code that we had written in the HTML and the style. CSS files now guys over here simply we are going to have the div tag in this case and inside the diff tag we are going to have certain randomly generated text so let's say we have just 10 words over here inside this particular diff tag so guys in this way we can have the M abbreviation that is LM followed by the number of words that you want to randomly generate so when we press enter as you can see 10 words are randomly generated over here using the lurm Mt abbreviation okay let me just save this file now and try reloading this page once again on the browser so as you can see this is the simple text that is getting displayed inside the diff tag now guys what we are going to do is we will provide certain CSS properties to this diff tag over here so let's say we have the 30% as the width for this particular diff tag out of the entire width of the screen guys apart from this we will also set the bord so let's see we have two pixels of solid B with the black color over here let me just save this file now and reloading this page once again on the browser so as you can see we have the 30% width in this case for this particular diff tag and then apart from this the entire sentence is getting displayed in two lines over here now guys one of the important CSS properties as far as text effect is concerned is to use the wies space CSS property with the value that is no R so guys in this case when you want the text to be displayed only on one line you can use this whites space CSS property so guys let let us check this so what we are going to do is we are going to say white space CSS property and this time we are going to set the value as no rap over here which means the entire content should be displayed on one line so let me just save this file now and try reloading this page once again on the browser so as you can see the entire content is getting displayed on one line over here with the help of the whes space CSS property which is one of the important properties as far as text effects is concerned in CS SS now guys apart from that if you notice that we have a issue now over here the text is going outside of the border so guys if you remember we have set the width of 30% in this case so the border is set over here as you can see on the right hand side and the text is going to the right of this particular border so guys what we can do in order to solve this issue so guys over here we have something called as overflow equal to Hidden so guys basically we can use the Overflow CSS property in this case in order to hide the text that is going outside of this particular border so guys let us check that as well so over here what we are going to do is Overflow CSS property is the one that we are going to use and simply we are going to use this value that is hidden in this case so guys let me just save this file now so what this will do is it will hide the content that is going outside of the border of the HTML element on the right hand side so let me just reload this page once again on the browser so as you can see the content that was going out outside of this particular border is Now hidden but guys as you can see we can still see that some word is continuing over here which which gives a sense of incompleteness so guys over here we have another CSS property that we can use so we have something called as text overflow for which the default value is the clip value so guys let us check this as well so when we use text overflow property as you can see we have the list of values which includes clip value and the ellipses value so let us first check the clip value over here let me just save this file now and this is the default value that was set and that is why we won't see any change over here right now so let me reload this page once again on the browser so there is no change that is getting reflected over here right now but guys the other value that we have apart from the clip value is the ellipses value over here so let us check that as well what will happen so let me just save this file now and try reloading this page once again on the browser so as you can see we have these three dots now getting displayed over here which is due to this Ellipsis value for the text overflow CSS property so guys in this way if you want to show the user that there is certain text after this particular border but you want to restrict that text before that border so basically you can use this ellipses value for the text overflow property and guys apart from this you can also display the remaining text on over so what we have to do is we need to change the Overflow property to visible value when the user gets the mouse on that particular diff tag so guys let us check that as well what we want to do is when the text overflow property is set to Ellipsis that we have done in this particular case and when the user gets the cursor on this particular diff tag we want the remaining text to be displayed outside of this particular border so guys let us check that as well what we have to do is simply we will Define the diff tag followed by the pseudo class that is over in this case and then guys whatever CSS property that we apply over here will get implemented when the user gets the cursor on this particular diff tag so what we want to do is we want to change the Overflow CSS property to visible in this case so basically when we change the Overflow property to visible then the remaining text that we had hidden by using this particular overflow property will be now visible so guys let me just save this file now and try reloading this page once again on the browser notice that by default we don't have any text that is getting displayed after this particular border but when user gets the cursor on this diff tag as you can see the remaining text is now getting displayed over here and when the user takes away the cursor from the diff tag the remaining text is getting hidden with the help of overflow equal to Hidden and text overflow equal to Ellipsis values so guys in this way you can use the different text effects CSS properties that we have discussed so far apart from this we also have something called as word w over here which can be said to break word when when there is a very large word which is going outside of the border so guys let us check that as well so what we want to do is I'll simply remove these CSS properties and simply we are going to see the default behavior of the diff tag which is having the width of 30% and the Border as two pixels with the color black so guys let me just reload this page once again so as you can see this is the diff tag that is getting displayed over here now guys let us say this particular word is very long and while displaying it on the browser it is going outside of the border so guys what we have to do is simply I'm going to provide certain letters after this particular word over here so we are going to append certain random letters in this case so guys basically this is a very long word that is appearing over here which is longer than the width of the div element so guys let me just save this file now and try reloading this page once again on the browser so notice that by default the browser will try to get the words on the next line if we have the limited width that is provided to the HTML element but guys in this case when a specific word is very long and it is going outside of the border of the HTML element then in that case what we have to do is simply we can use the word rep CSS property so guys over here inside the style. CSS file simply we are going to say word r CSS property and we will say break word so guys what this particular value will do is it will break the word which is very long over here that is going outside of the border and continue that word on the next line in such a way that the entire content should be within this particular width of the HTML element so guys let me just save this file now and try reloading this page once again on the browser so as you can see the remaining letters inside this word is shifted to the next line over here in such a way that the content of this div tag is within the border of this particular HTML element so guys in this way you can use the different CSS properties as far as the text effects are concerned in CSS during your project implementation so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is 2D transform property in CSS so stay tuned so now we will see 2D transform property in CSS so guys basically the CSS transform allows you to move rotate scale and skew the HTML elements that we Define inside our web page and this we are going to check with the help of multiple examples over here so guys before moving towards the examples let us understand the basic of the xaxis and the Y AIS that is going to be very important when you're are going to use this transform property values so guys over here if you have already learned about the xaxis and Y AIS previously in your mathematics class basically we we have the xaxis in the horizontal Direction over here so basically we have the xaxis in this way so this is the horizontal line that you can see which is xaxis over here simply we are going to provide the text box that is xaxis in this case so guys basically we can move the HTML elements in this particular direction when we provide the value as a positive value then the element will move towards the right in this case on the xaxis and when we provide the value as negative then the HTML element moves towards the left of the xaxis over here now guys similarly we have the Y AIS as well which is displayed in the vertical Direction so let us provide the y AIS as well so over here we have the Y AIS in the vertical Direction in this case so guys basically this is the Y AIS now guys it is very important to note that during our mathematics class we were told that the positive y AIS is on the top over here and the positive xais is on the right hand side so this is the first quadrant and Then followed by this is the second quadrant in which case the xaxis have the negative values and the Y AIS have the positive values but guys when we deal with the web browser what happens is our web browser is present inside this fourth quadrant over here so what will happen is when we provide the positive xais number the HTML element should move towards the right but when we provide the Y AIS as the positive number then the HTML element should move down in this case so guys basically basically this is the screen over here so I'll simply draw the screen as well in this case so this is the screen that we will be dealing with in our examples so guys now let us move to the different values that we can provide to the transform property so over here the first value that we can provide is the translate which will help us in order to move an element to the specified position so guys over here we can see that the translate is a function which will take parameters over here that is the first parameter will be the xaxis that is the length unit you have to provide in order to move the element towards the xaxis over here if it is positive then the element will move towards the right direction and if the value is negative then the HTML element will move towards the left Direction so guys let us check this with the help of examples in vs code over here so simply I'm going to remove the previous lines of code that we had WR in the HTML and the style.css files now guys over here what we are going to do is simply we will have the div tag and it is going to have a specific width and height over here so simply we are going to say width of let's say 100 pixels this time and then the height as well of 100 pixels guys apart from this let us have certain border as well so let's say we have the border of two pixels and with border style as solid and the color is black color in this case and apart from this we will also have the background color of yellow so guys over here we have a simple diff tag and then guys apart from this let us have the diff tag at the center of the screen over over here so right now the diff tag is at the top left what we want is we want to get the diff tag somewhere over here at the center of the screen so what we can do is simply we can provide the margin and we can say Auto so basically this is going to provide the automatic margin from the left and right and simply let's say we provide the 10% for the top and the bottom margin as well so let me just save this file now and try reloading this page so from the left and right we have the equal margin with the help of this Auto Value and from the top we are providing the 10% margin over here so it is somewhat at the middle of the screen let us increase this percentage to 15% let me just save this file now and try reloading this page as you can see we have the div element at the center of the screen now guys let us check the first example that is the translate function inside the transform property so guys what we will do is over here we are going to have the H effect for this particular div element so simply we are going to say div followed by colon and then we have the codo class that is over so guys what exactly we are going to do is when the user is going to get the cursor on this particular diff tag then we are going to see the different transform property values that we are going to Define so first of all we will see how this translate Works which means it moves an element to the specified position so guys let us check this so over here what we have to do is simply we have to use the transform CSS property and as you can see there are multiple methods that you can use these are nothing but the CSS functions that can be used over here and based on the project requirements you can use your own functions that are listed over here so the first function is the translate function which will take two parameters the first parameter is the xaxis so let's say we want to move the HTML element by 20 pixels on the right hand side so simply we can provide the value as 20 pixels so in this case what will happen is when we get the cursor over here on the diff tag this particular square box should move to the right hand side by 20 pixels that we have defined over here so let me just save this file now and try reloading this page once again on the browser notice that this is the original position of the diff tag and the moment we get the cursor on this diff tag as you can see it has moved to the right hand side so if you see when we get the cursor back it is going back to the original position over here so guys in this way the translate property Works basically since we have only provided the value for the xaxis that is why it is just moving on the right hand side if we want to get this particular diff tag down as well so we will be providing the length unit for the second parameter as well so after this we need to provide a comma and let's say we provide 50 pixels so by 50 pixels the diff tag should come down from the center of the screen so let me just save this file now and try reloading this page once again on the browser so when we get the cursor on this particular diff tag as you can see it is coming down as well so by 50 pix Els the diff tag is coming down over here so guys in this way you can use the translate function inside the transform CSS property in order to move a particular HTML element to the specified position over here guys apart from this we also have something called as rotate which rotates an element clockwise or counterclockwise according to the given degree so guys let us check this as well with the help of example so over here instead of translate what we are going to do is on over of this particular diff tag simply we are going to use the rotate function over here and then guys what it is expecting is it is expecting the angle in terms of degrees so let's say we have 20° over here by which this particular HTML element that is the diff tag which is a square box should rotate and it will rotate in the clockwise Direction by default so guys let me just save this file now and try reloading this page once again on the browser so when the user gets the cursor on this particular box as you can see it has rotated on the right with the help of the 20° that we had provided inside the rotate function so guys in this way the rotate function works over here let us increase the angle as well so if we increase it by 45° let me just save this file now and try reloading this page so as you can see it is rotating by 45° over here in the clockwise Direction guys we can also change the direction that is we can rotate it in the counterclockwise direction as well so what we have to do is instead of having the positive number we should have the negative number and provide the the angle so let's say this time we provide 20° so let me just save this file now and try reloading this page so if you notice it is now rotating itself in the counterclockwise Direction over here with the help of the negative angle that we have provided guys apart from this we also have something called a scale function which increases or decreases the size of an element so guys let us check this as well so again inside the over Udo class over here we have to use the scale function in this case so guys basically this is the function that we are going to use and simply we need to provide the number by which we want to increase the width and height of this particular HTML element so guys simply if we provide 1 comma 1 so over here there will be no change because this is the original scaling of the HTML element let me just save this file now Ander try reloading this page so as you can see when we get the cursor over here on the div element there is no change right now but the moment we increase this number so let's say we increase it to 1.5 over here here as the width and 1.5 as the height of the HTML element so let me just save this file now and try reloading this page once again on the browser and when we get the cursor over here as you can see it has scaled to 1.5 times the width and the height of the original diff tag that we had defined so guys in this way you can scale up the HTML element that you want to scale by using this particular CSS function guys apart from this you can also decrease the size as well so any number lower than one in this case we decrease the size of the HTML element so let's say we change the number to 0.8 over here as the width and height in this case let me just save this file now and try reloading this page so now if we get the cursor on this div tag as you can see it is decreasing the size and the width and height is decreasing over here if you simply want to decrease the width so what we can do is we need to keep the height as zero in this case let me just save this file now and try reloading this so guys based on your project requirements you can scale up or scale down the HTML Elements by providing the units that you want to provide inside the CSS function that is scale in this case guys apart from this we also have something called as scale X and scale Y which will be scaling the width and height respectively for that particular HTML element so guys I'll leave this up to you as a homework for you so that you can practice on your own and understand these CSS functions more clearly guys apart from this we have something called a skew as well so it skews an element so basically it skew an element along the X and the Y AIS by the given angles so guys let us check this as well so over here what we have to do is instead of the scale function we will use the skew function this time and let's say we provide 10° as the xaxis first of all let us check how the xais Q will work so let me just save this file now and try reloading this page once again on the browser so this is the original position of the diff tag and the moment we get the cursor as you can see it has changed its position so this is the function ality of the skew function that we have provided and the angle is 10° over here by the xaxis and then guys again if we want the skew to be applied on the Y AIS as well simply we are going to say 20° for the Y AIS component over here let me just save this file now and try reloading this page once again on the browser and when we get the cursor over here as you can see the xaxis is having this que of 10° in this case and the Y AIS as you can see from this top left to the right over here this part Direction This is the skew of the Y AIS in this case and it is 20° in terms of angle so guys in this way you can provide the skew CSS function based on your project requirement guys apart from this you have something called as skew X and skew y as well which will skew along the xaxis and y axis respectively which we have already discussed with the help of this particular diagram previously so this is the x axis in the horizontal Direction and this is the y axis in the vertical direction as far as two dimensional directions are concerned now guys apart from this we also have something called as Matrix function which will help us in order to provide the numbers for all the functions that we have seen so far so guys this is the sequence that you must follow first of all we can provide the scale X number that we want to mention based on the requirements and Then followed by skew Y and then skew X and then we have the scale Y and then we have translate X followed by Translate Y so guys let us check this example as well so we have the example Matrix function over here so the first parameter is one which means the scale X will be one in this case so basically it is not going to scale since we have provided one number over here so simply we can increase the scale value to 1.2 this time and then we have q y which is negative number SK X will not be implemented since it is zero and then again we have scale Y which we should increase over here to 1.2 once again and there is no translate X and Translate Y since we have provided the numbers as zero over here so guys let me just copy this line of code and paste it for this particular transform CSS property so what will happen let us check this as well so let me just save this file now and try reloading this page once again on the browser notice that we have provided the scale X and scale y values and also the Q X is in negative Direction over here so when we get the cursor on this particular diff tag as you can see the size of the diff tag that is a square box is increasing and this Q value of the 0.3 is helping us in in order to tilt the square box in a particular direction over here guys apart from this we can also have the translate X and Translate Y numbers as well so what we will do is let's say we provide 100 pixels over here as translate X and 100 pixels as Translate Y so basically the Box should come somewhere over here on the bottom right so let us check that as well so when we reload this page and when we get the cursor over here as you can see the square box is coming down over here on the right hand side in this case so guys in this way you can provide the The Matrix CSS function in order to provide the multiple values for all the functions that we have discussed so far which belongs to the transform CSS property so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is 3D transform property in CSS so stay tuned so now we will see 3D trans transform property in CSS so guys basically the CSS also supports 3D Transformations by specifying the Xs and this we are going to check with the help of examples as well we are going to see the different CSS functions that are used with the help of the transform property so guys over here we have something called as rotate X then we have rotate Y and rotate Zed as well so guys let us check this with the help of examples in vs code over here so simply I'm going to remove the previous lines of code that we had written we are going to write them once again so that you get the practice of writing the code in the HTML and CSS over here so guys simply we are going to have the diff tag over here once again and for this diff tag we are going to have fixed width and height so guys let's say we have the width as 150 pixels over here and the same 150 pixels for the height attribute as well that is the height CSS property so guys over here we have width and height of 150 pixels let us have the background color of EO aqua color this time so basically we have the aqua color is the background color for this particular diff tag which will be a square shaped diff tag over here and apart from this we will also have the Border CSS property the Border width is two pixels and the Border style is solid and the Border color is black color over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see we have this Square shaped div element in this case guys apart from this let us get this square at the center of the screen so over here we will provide the margin as Auto for the left and right margin and for the top margin we will provide the 10% of margin in this case let me just save this file now and try reloading this page so as you can see to some extent we have CAU this square box at the center of the screen now guys let us see how this rotate X function will work with the help of the transform property so guys over here what we want to do is inside the style. CSS file when we get the cursor on this particular D tag we want to rotate it so let us check that how we can do it so basically we have to use the diff tag followed by colon and then we are going to use the H hudo class over here and on Hover we are going to use the transform CSS property for which we are going to use the rotate function now guys previously we had seen the 2D transform properties which included rotate function over there but now we have the different rotate functions in terms of 3D transformation so we have so we have rotate X X we have rotate Y and we have rotate Zed which is expecting certain angles over here so guys let us see how this rotate X will work so let us say we provide certain angle in this case so we provide 30° in this case so let me just save this file now and try reloading this page once again on the browser so as you can see this is the original position of the diff tag and the moment we get the cursor on this particular diff tag the diff tag is rotating itself so basically we are seeing that the size of the diff tag is decreasing that is the height is decreasing over here but guys in reality the square box is rotating itself with the help of the xaxis over here so guys if you remember in the previous video we understood the xaxis and the y axis when we were learning the 2D transformation but this time we are going to learn 3D transformation over here so what exactly is happening in this case is so this was the screen that we had seen previously let us remove this and we are going to have the square that we had just drawn on the web browser so basically we have this square box that we have drawn on the web browser over here let me just change the color to some other color so let's say we have yellow color over here now guys what exactly is happening is when we say rotate X basically this is the xaxis in the horizontal Direction so when we are rotating this particular box with the help of the xaxis so the height of this particular diff tag is decreasing over here but basically in reality it is not decreasing but the box is rotating itself in this xaxis and that is why it is looking like the height is decreasing over here so guys in this way the rotate X will work that is the HTML element will rotate itself in the xaxis Direction now similarly when we use the Y AIS over here that is using the rotate y so you will see that the width of this particular square box will decrease to some extent when we use the rotate y so guys let us check that as well so over here we are going to say rotate y this time and then let's say we use the same angle that is 30° over here so simply we provide 30 deeg that is the unit let me just save this file now and try reloading this page once again on the browser and when we get the cursor over here as you can see the square box is rotating itself with the help of the Y AIS this time and it looks like the width of this particular square box is decreasing but in reality it is rotating itself with the help of this y AIS over here so guys in this way the rotate X and rotate y will work now guys apart from this we also have something called as rotate Zed so how this will work so guys in 3D transformation we have another axis that is Zed AIS over here which is coming on top from the center over here so guys if I draw this particular Z axis it will look something like this over here and we draw the Z AIS so basically it will start from the center that is the origin and it will come on top so guys basically it will look something like this over here so this is the Z AIS as far as the 3D transformation is concerned so guys over here here when we rotate in terms of Z AIS it will actually look like the square bracket is rotating itself as normal rotation so guys let us check this as well so basically what will happen is this Square will be displayed over here and in terms of Z AIS it will rotate itself in the clockwise Direction in this way so guys let us check this with the help of example over here so instead of rotate y we will say rotate Z this time and then we will also provide 30° as the value over here so simply we are going to provide 30° let me just save this file now and try reloading this page and when we get the cursor over here on the square box that is a diff element as you can see it is rotating itself and 30° is the rotation so guys in this way the Z AIS rotation will work it will look like it is actually rotating and that is how the Z AIS rotation Works guys apart from this we also have the translate X and Translate Y and the translate Z as well so let us check that as well with the help of examples so over here simply we are going to provide translate X in this case and let's say we provide 100 pixels over here as the value so guys basically the square box should go on the right hand side by 100 pixels over here when we say translate X so let us check this as well let me reload this page once again on the browser and when we get the cursor on this diff tag as you can see the box is going on the right hand side by 100 pixels over here and this is how the translate X will work guys apart from this we also have something called as Translate Y so this time the square box should come down over here by 100 pixels so let us check that as well so let me just save this file now and try reloading this page so when we get the cursor over here as you can see the box is coming down by 100 pixels and that is how the Translate Y will work based on the X's that we have seen over here and then guys apart from this we also have something called as translate Zed as well so guys over here translate Z will make the box to come on top by 100 pixels so guys it will be on the same position if we are viewing it from top so let me just reload this page so if we get the cursor over here we won't be able to see any change right now but actually it is at the ground and from the ground it is coming at the height of 100 pixels over here on that same position because that is how the Zed AIS will work as we have seen over here in this particular diagram so guys in this way you can provide the translate in all the X's as well and we can also provide the other functions related to scale as well so guys let us check this as well with the help of a example over here so let us provide the scale X this time and we will provide 1.2 as the number by which the square box will increase its size with the help of xaxis so let me just save this file now and try reloading this page once again on the browser so when we get the cursor on this particular diff tag as you can see on the xaxis direction that is the width of this particular square box is increasing and now it is becoming a rectangle so guys basically this div tag is increasing its width with the help of the 1.2 value that we have given over here if we want to double the width then we can simply provide the value of two for the scale X function so let me just reload this page once again so as you can see this is the double width of the original width of the diff tag and then guys apart from this we can also provide the scale Y which will help us in order to increase the height over here when we reload this page as you can see it is increasing the height of the sff tag in terms of Y AIS over here and when we say scale Zed so let us check that as well so over here when we provide scale Zed this time so let me just save this file now and try reloading this page you won't be able to see any change that's because we are scaling it in the bottom to top Direction over here when we see the box from the top so guys basically this is the importance of the Zed AIS that is the third axis as far as the 3D transformation is concerned and you can use all these CSS functions by using the transform CSS property based on requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is transition property in CSS so stay tuned so now we will see transition property in CSS so guys basically the CSS transition allows you to change the property values smoothly over a given duration so guys so far we have seen how we can transform a particular HTML element with the help of the translate rotate or the scale functions inside the CSS but guys those changes were made in such a way that there was no smooth transitioning over here so guys for example if I show you over here if we see the translate X function and let's say we provide 50 pixels of translate X over here so basically what will happen is it is directly moving on the right hand side by 50 pixels and there is no smooth transitioning that is happening from the original position to the Target position over here so guys we will check the entire HTML and the CSS code with the help of example and we are going to make the smooth transition that will work over here so guys what we will do is simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here we are going to start from scratch and we are going to see how the transition will work so basically in order to create a transition effect you must specify two things so what are those two things so the very first important thing is the CSS property you want to add an effect to and the second important thing is the duration of the effect so guys we will check the example now over here we are going to increase the width smoothly in 2 seconds for a particular HTML element so guys over here inside the body tag simply we are going to have the D tag over here and for this div tag let us Define certain CSS properties so let's say we have the width of 100 pixels and the height as well of 100 pixels over here so basically we are going to have the square box with the help of this drift tag and apart from this let us also provide the border of two pixels with the black color in this case so basically we have the Border style is solid and the Border color is black now guys apart from this let us also have the background color as yellow color this time and also we will get get this div HTML element at the center of the screen so basically we are going to use the margin equal to Auto so this will get the div tag at the center of the screen as far as the horizontal direction is concerned and for the vertical Direction let's say we provide the top margin as 15% over here so let me just save this file now and try reloading this page once again on the browser so as you can see this is the square diff tag that we can see right now so guys what we will do is let's say we want to rotate this particular left tag by 45° so simply we can use the transform property that we had used previously and we can say rotate by 45° over here so basically the value that we have provided is 45 D EG which stands for degrees let me just save this file now and try reloading this page once again on the browser so as you can see it is rotated by 45° what we will do is we will apply the CSS property on Mouse over so basically we want to use the diff tag followed by colon and then we will use the codo class that is hover so we are going to paste this transform property so when the user gets the mouse that is the cursor on this particular diff tag then only the transform property should be applied so guys let me just save this file now and try reloading this page so as you can see this is the original position and when the user gets the mouse on this particular diff tag it is rotating itself but guys if you notice there is no smooth rotation over here basically from the original position it is getting the target position that is rotated at the 45° over here without any smooth transitioning so we are going to apply the smooth transition with the help of the transition property inside CSS so we must have the two important things so first of all the CSS property that we want to use so in this case we are going to have the transform CSS property and Then followed by the duration of the effect so guys basically how do we do that so inside the diff tag over here simply we have to use the transition CSS property this time and the very first parameter will be the CSS property that we want to use so in this case it is going to be transform over here and then followed by the space character and let's say we want to rotate it in 2 seconds and not instantly as it is happening by default so guys over here simply we have to provide 2 s which stands for 2 seconds over here let me just save this file now and try reloading this page once again over here so with the help of this particular CSS property property what will happen is this diff tag that is the square box will rotate itself with the help of the 45° but this will happen in 2 seconds so it will look like a smooth rotation over here so let me just reload this page one again and when we get the mouse cursor on this diff tag as you can see it is a smooth rotation that is happening over here and when we get the mouse cursor away from this diff tag again it is a smooth transition that is rotation towards its original position over here so guys in this way this is the transition CSS property that we can use in order to provide the smooth rotation or any of the properties that we want to implement in a smooth way so guys let us check another example over here we can also add the multiple properties to the transition so guys notice that we also have another property that is width over here which is 100 pixels so let's say during this transform that is the rotation we also want to increase the width to 200 pixels over here so what we can do is simply we can provide comma after this 2 seconds and we have to provide the CSS property that we want to change that is width in this case and let's say with that same duration of 2 seconds we want to increase the width now guys how much we want to increase the width that we need to provide on this hover property over here so basically we want to change the width to 200 pixels this time which is the double value of this 100 pixels which is the original width of the square box so guys let me just save this file now and try read reloading this page once again on the browser so now when we get the cursor on this particular square box what will happen is the transform will happen in 2 seconds which will rotate the box and also it is going to increase the width within 2 seconds over here to 200 pixels simultaneously so both these things will happen simultaneously over here in the span of 2 seconds in this case so let me just reload this page once again on the browser and when we get the cursor over here so as you can see in 2 seconds the square box got rotated to 45° as well and apart from that the width also increased to 200 pixels and now it is a rectangle that we can see and when we get the mouse cursor away from this HTML element as you can see it is coming back to its original position over here so guys in this way we can apply the multiple transition properties over here and we need to provide the values to these CSS properties over here on the hover or any other condition that you want to implement based on the project requirement so guys apart from this we can also have the transition timing function property which is another property that you can mention over here so guys basically menu type transition as you can see this is the CSS property over here that is the timing function so we have multiple values that you can use over here so basically when we provide the value of e it will start slowly and then in between it will move faster and then in the end the transition will end slowly so guys let me just save this file now and try reloading this page once again on the browser when we get the cursor over here as you can see in the middle it was very fast and at the start and at the end it was very slow over here so guys this is the meaning of e value in this case we can also provide linear in which case the speed of the transition will be same throughout the span so guys over here there will be no slow start or slow end so let us check that as well so when we reload this page as you can see this is the linear transition that we can see over here so guys you can check out the other values for this particular transition timing function as you can see these are the list of suggested values over here and then guys apart from this we also have something called as transition delay which will help us in order to delay the transition so guys let us check that as well so over here what we are going to do is simply I'll comment out this line of code and basically we are going to have this transition delay CSS property so guys basically it is going to delay the transition so let's say we provide 2 seconds of delay so basically the transition is not going to start up to 2 seconds and then after that the transition will start that we have already mentioned over here so let me just save this file now and when we reload this page once again on the browser and let's get the cursor over here so 1 2 so after 2 seconds the transition is happening over here and when we get the cursor away again after 2 seconds the transition will occur in such a way that the HTML element will go back to its original position so guys in this way you can also provide the transition delay based on the project requirements where you want to delay the transition for that particular HTML element guys while doing so can we change the background color as well so let us check that as well so what we will do is over here let us remove the delay as well and after this width we are going to provide the background color property as well and within 2 seconds we want to change so the original color is the yellow color over here let us change the color to some other value so let's say we have the background color as aqua color this time so guys we are moving from yellow color to the aqua color and within the span of 2 seconds over here the color should change so guys let me just save this file now it will be a gradual change if you can see so let me just reload this page once again on the browser so when we get the cursor over here as you can see the color is also changing to Aqua gradually from yellow to Aqua and then when we get the cursor back from this particular rectangle right now that is the h HTML element the color should change back from Aqua to Yellow so guys over here as you can see gradually it is also changing the background color so guys whatever CSS properties that you want to change you need to provide inside the transition CSS property and then apart from that you have to provide the time duration during which the CSS property should get updated over here and the final value should be applied and when that CSS property will update its value the transition will be be applied to the HTML element we can also have the different timings over here as well so let's say we want to finish the background color transition within 1 second so we have provided 1 second over here let me just save this file now and try reloading this page once again on the browser so now if you notice the aqua color has completed its transition within 1 second over here and this is the way that you can provide the different times for the transition that you have applied for the transition CSS property so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is animations in CSS so stay tuned so now we will see animations in CSS so guys basically an animation lets an element gradually change from one style to another style and this we are going to check with the help of examples as well you can change as many CSS properties as you want and as many times you want so guys basically in order to use the CSS animation you must first specify some key frames for the animation so what are these key frames so guys basically the key frames hold what styles the element will have at certain times and the Styles will transition from one particular style to another style for the element that we are going to select so guys let us check the examples of the animation so first of all we will see at the key frames keyword that we can use in the CSS file over here so guys let us move to the vs code in this case and let me just remove the previous lines of code that we had written in the HTML and the CSS files over here now guys what we are going to do is simply we will have the div tag over here and we are going to create a square box out of this div tag so guys over here in the style. CSS file simply we are going to provide certain CSS properties to this div tag so let us say we have the width of 100 pixels over here also the height of 100 pixels in this case and let's say we have the background color of aqua over here so guys basically we have a diff tag which is a square box with the background color that is aqua so guys let me just save these files now and let us see how it looks like on the web browser so as you can see this is the square box that we have included on our HTML page now guys let us have the Border as well so over here we will have the Border CSS property with two pixels width and the Border type as and the Border color will be black in this case so let me just save this file now and try reloading this page so we have the border for the square box over here now guys let us say we want to move the square box from left hand side to somewhere over here at the middle of the screen so how we can do that so guys basically we can use the animation that is with the help of key frames keyword in order to animate the square box and move from one position to another so guys let us check that as well so over here what we have to do is first first of all we will have to use the at theate character and then we need to use the key frames over here so guys basically this is the key frames keyword that will be used in order to provide the animations in CSS now guys after this key frame we need to provide certain name to the animation so let us say we provide the animate name over here and then after this inside the curly braces we need to define the animation inside the from and two keywords so guys let us say we want to move from left to right over here so simply we can use the left CSS property in order to mention the position of the box so guys over here first of all we need to define the position equal to relative property so that we can use the left CSS property over here so inside the from keyword we need to First Define the left it is equal to 0 pixels over here and then guys after this we have something called as two keyword so over here we can simply provide the left as 300 pixels so guys basically what exactly is happening over here is the initial position of this particular div should be left equal to 0 pixels and then it should move to the left which must be equal to 300 pixels now guys we need to link this animation name that is animate with this diff tag over here so simply I'm going to copy this animated name and then inside the diff tag we need to use the animation name CSS property so guys basically we need to provide the animation name CSS property the value must be equal to the value that we have Pro provided for this key frames over here so we have provided the animate as the value for the animation name and apart from this we also have to set the animation duration over here so let's say we want to move this box within 2 seconds so simply we can provide the value as 2 seconds over here so let me just save this file now and try reloading this page once again on the browser so when we reload as you can see the box is moving from left to right over here so guys in this way we can simply provide certain animations that we have seen over here with the help of the key frames keyword now guys apart from this you can also use the percentages instead of from and two keyword which is the starting and the ending position so instead of from we can provide 0% which is the starting position and instead of two keyword we can provide 100% that is the ending position of the box over here so let me just save this file now and try reloading this page once again on the browser so as you can see there is no change in the animation the Box is still moving from left to right over here now guys apart from this since we have provided the percentages we can also provide the 50% or any other number that we want to provide so let's say for the first 50% we want to move from left to right over here so we have provided 50% in this case and then we want to define the 100% as well in which case we want to move the box from top to bottom over here somewhere at the center of the screen so guys what we will do is instead of 50% over here we will provide 100% so from 0 to 50% the box is moving from left to right and then for the 100% we want the top CSS property to be provided so guys over here simply we can provide the top CSS property and let's say we want 200 pixels value from the top so let me just save this file now and try reloading this page once again on the browser so as you can see the box is coming from left to right but guys it is not going from top to bottom properly so let us Define the top property for the 0% and the 50% parameters as well so over here the top CSS property must be zero and for the 50% as well the top CSS property must be zero in this case now let me just save this file now and try reloading this page once again on the browser so as you can see the box is now moving from left to right and then it is going from top to bottom over here so guys in this way we have completed this particular animation as well let us complete the entire cycle let's say now we want the box to move from left to right and then from right to bottom and then from bottom back to the original position over here so guys what we have to do is we need to make this as 33% over here and then the next step will be 66% and then the last step should be 100% in this case for which the Box should come at the original position over here so guys simply we will Define this particular position for the 100% as well so I'm going to copy the same line of code over here let me just save this file now and try reloading this page once again on the browser so as you can see it is coming from left to right and then going from top to bottom and then from bottom to top as well at the top left position over here so guys in this way we have completed the animation we can also increase the duration to let's say 4 seconds over here so that the speed of the animation is little bit slow so as you can see this is the animation that you can do with the help of the key frames keyword over here now guys there are some more CS properties that you can use we have already used the animation name and the animation duration over here we can also provide the animation delay in this case so guys basically what is the meaning of Animation delay over here so let us check that as well so when we provide the animation delay of let's say 2 seconds so there will be a delay of 2 seconds first of all after which the animation will start based on the CSS properties that we have defined inside this particular block of code so guys let me just save this file now and try reloading this page once again on the browser so as you can see there will be delay of 2 seconds after which the box has started to move over here so guys in this way you can use the animation delay as well apart from this we also have the animation iteration count which will help us in order to repeat the animation so guys by default the animation iteration is just one count over here so we can make it as two count as well so the animation will occur twice so let me just save this file now and try reloading this page once again again on the browser over here so as you can see after the delay the animation has started so it has completed one round over here but since we have given the count of two it is completing the two rounds over here after which it will stop itself so guys basically you can also use the iteration count as infinite in order to continue the animation on the web browser let us comment out the delay part over here so that we can instantly see the animation in action so let me just save this file now and try loading this page so as you can see the animation has started and it will continue infinitely until and unless you close the page or you want to change the animation iteration count CSS property so guys in this way you can use the animation iteration count as well apart from this we also have animation Direction so guys basically this is the default direction that the box is moving over here so guys we can also Define the direction of the animation so let's say we provide the animation Direction in this case what are the values the normal is the default value over here but when we provide the reverse value the animation will be in the reverse Direction so let me just provide the reverse Direction over here and let me just save this file now and try reloading this page once again on the browser so as you can see the animation is in Reverse Direction now first it is moving over here at the bottom Direction and then to the top over here and then followed by to the left Direction in this case which is the reverse Direction over here apart from this we also have the alternate value as well so first it will go in the normal Direction and then in the second iteration the Box will move to the reverse Direction and Then followed by the normal Direction and then reverse Direction and so on the alternate directions will be used so guys let me just save this file now and try reloading this page once again on the browser so this is the normal direction of the box that is moving and then it is moving in the reverse Direction right now based on the animation direction that we have provided over here with the value as alternate now guys apart from this we also have something called as animation timing function so guys let us check that as well so basically it will Define the speed of the box that is moving over here so guys we can use this animation timing function over here and by default and we can provide the speed as linear in this case which means the speed will be same throughout the animation so let me just save this file now if you notice currently the speed is decreasing when it is moving towards the end of the animation over here but when when we provide the linear timing function over here the speed will be same throughout the animation so let me just reload this page once again so as you can see the speed is linear over here and it is not increasing or decreasing at the end or at the start of the animation so Guys these are some of the animation CSS properties that you can use apart from this we also have something called as animation field mode which can help us in order to define the status at the start or at the end of the animation so guys I leave the CSS property as a homework for you so that you can practice on your own we can also decrease the line of code over here since a 0% and the 100% is having the same CSS properties and the values as well so simply I'm going to remove this 100% from here and then we will provide comma after the 0% and provide 100% in this case which means the 0% and the 100% state is going to have the same value over here let me just provide the animation direction as normal in this case so let me just save this file now and try reloading this page so as you can see this is the original animation that we have provided and with 0% and 100% that is having the same CSS properties over here now guys apart from this while this box is moving we can change the background color of the box as well so let's say initially we have the background color as aqua color over here and then at the 33% State we want the color to be blue color so simply we will provide the background color as blue color over here at the 33% State and then for the 66% State let's say we have the color as yellow over here so guys basically we are changing the background colors as well as the box is moving based on the different status of the animations so let me just save this file now and try reloading this page once again on the browser so as you can see from Aqua the box is changing its color to blue color and then when the box is moving down the color is changed to yellow color over here so guys in this way we can change the background color or any other CSS properties based on your requirements while you are providing the animations in CSS so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is loading animation in CSS so stay tuned so now we will see a simple loading animation in CSS with the help of example over here so guys let us move to the VSS code in this case and simply we are going to remove the previous lines of code that we had written in the HTML and the CSS files over here now guys we need to create a diff tag that will help us in order to create a circle with the help of the Border CSS property and then we are going to rotate the diff tag in order to create a simple loading animation with the help of CSS properties so guys first of all we will provide the diff tag with the help of the loading CSS class over here so basically we have used the diff tag with the class name that is loading in this case and simply we are going to use this class name over here inside the style. CSS file so guys we are going to paste this class name with the help of the dot character over here so that we can provide certain CSS properties for this diff tag so first of all we will provide the with s 200 pixels in this case and also the height of 200 pixels so that we get a square box out of this diff tag over here and then apart from this we will also provide certain background color to the body tag over here so let's say we have a dark background color in this case so we have provided the dark background color and let's say the color of the text is white over here now guys apart from this we also want the background color of this diff tag to be displayed so let's say we have the background color for the diff tag is white color in this case and then apart from this let us get this diff tag at the center of the screen so simp we are going to provide the margin CSS property with the value as Auto over here now guys let me just save this file now and try reloading this page once again on the browser so as you can see this is the diff tag that we have included on the HTML file now guys we are going to make a circle out of the St tag so how do we do that so first of all we will provide the Border radius over here which should be 50% in order to make the diff tag as a circular diff tag over here let me just save this file now and try reloading this page so as you can see with the help of this border radius equal to 50% we have converted the square box to a circle over here now guys we only want the border of the circle to be displayed so what we will do is simply I'm going to comment out this background color in this case and let's say we provide the Border as 10 pixels with the color that is white and the Border style will be solid in this case so guys basically we have provided the 10 pixels solid white color border over here here instead of the background color so let me just save this file now and try reloading this page so as you can see we have provided the Border over here for this particular Circle let us increase the width of the border to 20 pixels so that we can see the loading animation properly so as you can see this is the circle that we have drawn over here and this is just the border that we have included now guys simply we can rotate this circle in order to see the simple loading animation and in order to do that we need to have one side of the Border have a different color so what we will do is we will divide this values for the Border CSS property so first of all we will say border width of 20 pixels that we had defined and then the Border style should be solid so over here we will Define the Border style as solid in this case and then guys for the Border color we will provide the color as white so simply we will say border color in this case so all these are CSS properties that you can Define separately let's just save this file now and try reloading this page so as you can see there is no change right now we want the top border to be of the different color so simply we will Define the first color which will be corresponding to the top border over here as gray color so let's say we provide the gray color as the value for the top border and then for the left and right border we want the white color and then for the bottom side we also want the white color to be displayed so guys basically the first border color will be top color follow followed by the right hand side and Then followed by the bottom side and then we have the left hand side so over here the gray color will be at the top side and then this white color will be at the right side followed by the white color at the bottom side and then again since we have not provided the fourth color the left color will be taken from this particular white color over here let me just save this file now and try reloading this page once again on the browser so as you can see this is the gray color at the top of the circle over here now guys simply we want to rotate create this circle with the help of the animation so what we will do is we will simply Define the key frames over here and then we will say loading as the name of the animation so what we want to do is simply at the 0% we are going to provide the CSS property that is transform over here and simply we are going to say rotate and initially it should be 0° in this case and then after this for the 100% what we are going to do is we are going to Define this as 100% over here we we are going to still use the transform CSS property and this time we want to rotate it by 360° over here so guys as you can see we are going from 0° to 360° as far as rotation of the HTML element is concerned and now guys we are going to link this animation to the diff tag over here so basically for this particular block of CSS properties we are going to provide the animation name over here so simply we are going to provide the loading that is the animation name we have provided in this case after the key frames keyword and also we need to provide the animation duration which we can say 2 seconds in this case so guys basically within 2 seconds the animation should complete let me just save this file now and try reload this page once again on the browser so as you can see the circle is rotating itself and only once it has rotated itself so guys basically we can also use the iteration count as well for the animation so over here we will say itation count equal to infinite so that it loads infinite number of times so let me just reload this page so as you can see the diff element that is the circle is rotating itself continuously within the span of 2 seconds over here now guys if you notice the speed of the animation is decreasing at the end of the animation over here so what we can do is simply we can provide the speed as linear in this case so we need to use the animation timing function in which case we are going to provide the value as L here so let me just save this file now and try reload this page once again on the browser so as you can see the speed of the loading icon is linear over here and this is the way that you can easily create the loading animation icon with the help of the HTML and the CSS properties so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is customized tool tip text in CSS so stay tuned so now we will see customized tool tip text in CSS so guys basically a tool tip is often used to specify extra information about something when the user moves the mouse pointer over an HTML element so guys we are going to check with the help of examples what is the meaning of tool tip and how we can customize the tool tip text with the help of CSS property now guys first of all we will check the basic inbuilt tool tip that is provided by the HTML using the title attribute so let us move to the vs code over here and simply I'm going to remove the previous lines of code inside the HTML and the CSS files over here now simply we are going to have the paragraph tag that is the P tag in this case and we will say get your mouse cursor on below text so guys we have a very simple statement over here that is get your mouse cursor on below text T in this case and simply we are going to have the diff tag with the class that is text in this case so guys inside this diff tag we are going to have the hover me text over here so that the user can get the mouse cursor on this text and basically by default we want to show certain tool tip so we are going to use the title attribute over here that is provided by the HTML by default so guys in this case we are simply going to provide tool tip text over here so let me just save this F file now and try reloading this page once again on the browser as you can see we have this paragraph that is get your mouse cursor on below text over here and then when we get the mouse cursor on the hover me text as you can see the tool tip text is getting displayed and we can provide any information inside this title attribute to be displayed when the user gets the mouse cursor on this over me text or any other text based on your requirement now guys this is the default Behavior as far as the display playing of the tool tip is concerned now how do we customize this tool tip so basically we can use certain CSS properties in order to customize this tool tip over here so what we will do is simply I'm going to remove this inbuilt tool tip in this case that is the title attribute and we are going to have the span tag over here with the class name that is tool tip so guys basically we are going to provide certain CSS properties for this span tag as well and simply we are going to say the text that is tool tip text over here that we had defined previously inside the title attribute as well now guys inside the style. CSS file what we are going to do is we will provide certain CSS properties for this class name that is corresponding to the span tag over here so simply we are going to provide dot character followed by the tool tip and let's say we provide the background color as the black color over here for the span tag apart from this we want to have the color as white color and also we will have the padding of five pixels in this case so that the tool tip is displayed properly when we get the mouse cursor on the diff tag so let me just save this file now and try reloading this page once again on the browser as you can see this is the tool tip text that will be displayed with different CSS properties that we have applied so far we can also have the Border radius over here so simply we will have the Border radius of 5 pixels so that the corners are rounded for this particular tool tip text as you can see this is the way that we have the rounded Corners over here now guys the important thing in this case is when the user gets the mouse cursor on this text that is over me then only the tool tip text should be displayed so what we can do is simply we will provide the visibility equal to Hidden in this case so this is the CSS property that we are going to use with the value that is hidden so by default the span tag that is having the class name Tool tip will be hidden on the HTML page let me just save this file now and try reload in this page as you can see we don't have any span tag over here and when we get the mouse cursor on this over me text we are not able to see the tool tip text so in order to display the tool tip over here we have to provide the hover codo class in this case so the class name that we are going to use is text in this case which is corresponding to the diff tag which is having the text that is over me so guys let me just copy this class name and after the dot character we will paste this class name and then what we have to do is on Hope over we need to display the span tag that is having the tool tip class over here so simply we will use the over Cudo class in this case and Then followed by the class name that is tool tape over here so guys basically when the user gets the mouse cursor on this diff tag which is having the text we need to provide certain CSS properties for the tool tip text and in this case we are going to use the visibility it is equal to visible over here so guys basically from visibility equal to Hidden we are going to visibility equal to visible when the user gets the mouse cursor on this class name that is text which is corresponding to the diff tag that is having the text that is over me let me just save this file now and try reloading this page once again on the browser and now when we get the mouse cursor on this over me text as you can see we are able to see the tool tip text over here so guys in this way we can have the customized tool tip text over here with the help of the CSS properties let us get all these text at the center of the screen now so simply we are going to provide the style for the body tag over here so we will say style and then simply we can say text the line it is equal to Center let me just save this file now and try reloading this page as you can see when we get the mouse cursor on this overover me text the tool tip text is now getting displayed over here now guys currently the tool tip text is getting displayed at the right of the text we can also display this tool tip at the bottom of this over me text over here so how we can do that so first of all we need to provide the position property for this class that is text over here which is corresponding to the diff tag so guys over here we will say position it is equal to relative and then after this for this tool tip class we need to provide the position equal to Absolute over here so that we can provide the different CSS property such as top left bottom and right so guys basically we will say absolute in this case and then after this we need to provide the left property as zero and then also the top property is 100% over here so guys basically what we are doing is currently the diff tag that is having the class name text is having the position equal to relative and the tool tip text which is having the class tool tip will be having the position equal to Absolute and due to this we can use the left and top properties and other CSS properties as well as far as the positioning CSS properties are concerned so from left we are having the zero pixels and from Top it should be 100% so we are trying to get the tool tip text at the bottom of this text over here so let me just save this file now and try reloading this page once again on the browser so now when we get the mouse cursor on this hover me as you can see the tool tip text is coming at the bottom of this hover me but at the extreme left right now so guys in order to correct this what we can do is simply we can use the display property and this time let's see we provide the display as in line over here let me just reload this page once again on the browser so as you can see the tool tip text is now coming at the bottom of this particular text let us also provide the width property to this tool tip text over here so simply we are going to provide the width as 130% so that the text can fit the box over here so let me just reload this page as you can see this is the tool tip text over here that can be displayed at the bottom of the overover me text in this case so guys in this way you can also provide the other positioning properties over here in order to get the tool tip text at the left or at the top of the hme text over here now guys let us move to the default position that is at the right in this case so simply I'm going to remove these lines of code that is top and left over here so let me just save this file now and try reloading this page so now we are able to see the tool tip text at the right of the hme text over here now guys how do we create an arrow for this tool tip text so guys let us check that as well so we need to use the class name that is tool tip and this time we are going to use the codo element that is after so guys we need to use the colon two times over here and then we need to use the after keyword and then guys simply we are going to use the content which is going to have a space character over here and also we need to define the position as relative so in this case we will say position is equal to relative and we need to provide the Border CSS properties over here so let's say we have the border with s five pixels in this case apart from this the Border style is solid in this case so over here we will have the solid value and then we also have the Border color over here so guys simply we are going to define the Border color as yellow for now we will change it to black color as well after positioning the Border properly so that we can create a arrow for this tool tip text so guys what we are going to do is let's say by default we are going to remove this visibility equal to Hidden so that we can create the arrow for this tool tip text first of all so let me just save this file now and try reloading this page so as you can see we have this border that is getting displayed over here right now now guys the border is taking the entire height of this particular tool tip text so we need to change the position value over here to Absolute instead of relative so let me just save this file now after providing the absolute value to the position and reload this page once again so as you can see this is a small square box that we have created now guys we need to get this border at the left of this tool tip text over here so what we can do is simply we will provide the left CSS property and we will say 0 pixels over here apart from this we have also provided the top CSS property as 50% so that from Top we have certain spacing over here let me just save this file now and try reloading this page once again on the browser as you can see the small square box has moved to the left right now and guys instead of having this yellow square box inside the tool tip text we want to have it outside of the tool tip text so so simply we will change this left CSS property to right CSS property and over here we need to provide the value as 100% which means from right it should be having the space of 100% that is the entire width of the tool tip text so let me just save this file now and try reloading this page once again on the browser as you can see the small square box has come to the left of the tool tip text now guys let us also provide certain margin at the top so we need to have the margin top as a negative number so let's say we have 5 pixels over here let me just save this file now and try reloading this page so that horizontally it is aligning with this particular hover me text over here now guys apart from this let us also provide the margin left property to the tool tip in this case so simply we are going to say margin left it is equal to 5 pixels over here let me just save this file now and try reloading this page so as you can see we have moved the tool tip text slightly to the right now guys in order to have the arrow shape what we want to do is we need to have only one side of the Border have the color so let us change the Border color to black color right now so instead of yellow color we will be able to see the black color for the small square box and then we need to only have the right color as the black color so guys what we have to do is the top color should be transparent over here followed by the black color which is at the right side of the border and Then followed by the transfer that is at the bottom and then again the transfer that is at the left hand side so let me just save this file now this particular line of code will help us in order to provide the arrow to the tool tip text so let us check that as well when we reload this page as you can see there is a arrow that is getting displayed over here for this tool tip text right now and then apart from this we can simply provide the visibility equal to Hidden so that when the user gets the mouse cursor on the diff tag the visibility will be changed to visible over here let me just reload this page and when we get the mouse cursor over here as you can see this is the tool tip text that is getting displayed right now so guys this is a very simple way in order to customize the tool tip text apart from this you can also provide the fade in animation for the tool tip text so how we can do that simply we can use the transition CSS property so guys over here inside the tool tip class name we are going to use the transition and let us see whether we will be able to use it for the visibility CSS property or not we will provide the duration as 1 second over here let me just save this file now and try reloading this page so when we get the mouse cursor over here there is no fade in animation right now but guys when we get the mouse cursor out there is a 1 second delay right now so guys with visibility equal to Hidden and visibility equal to visible the transition will not work since the transition CSS property is expecting certain values that is 0 and 1 and the values in between as well so instead of having visibility we can use the opacity so first of all we will provide the opacity equal to zero which will be same as visibility equal to Hidden which means the element will not be displayed on the HTML page when the opacity is set to zero over here and instead of having visibility equal to visible we will have the opacity equal to one this time so guys by using the opacity CSS property we will provide the transition CSS property have some values in between 0 and 1 such as 0.5 or 0.7 when there is a transition within the time span of 1 second over here so guys simply we are going to change the visibility keyword to opacity right now let me just save this file now and let us see how the fadein animation will be displayed for the tool tip text when we reload this page now when we get the mouse cursor over here as you can see there is a fade in animation and the Fade Out animation as well within the time span of 1 second over here so guys in this way you can provide the fade in animation as well for the tool tip text and apart from this you can also draw the arrow with the help of the border that we have just seen using different CSS properties so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is styling images in CS CSS so stay tuned so now we will see styling images in CSS so guys we can use the various CSS properties in order to style the images and this we are going to check with the help of examples as well so first of all we will see how we can create the rounded images so guys let us move to the VSS code over here and simply we are going to remove the previous lines of code that we had written in the HTML and the CSS files over here now guys what we are going to do is simply we are going to have the diff tag over here with the class name that is container in this case so we have this class name that is container for this D tag now guys apart from this we will also have the image over here inside this container and this image should have the SRC attribute and the value that we are going to provide is the directory path of the image which we have already saved over here inside the directory where we have the HTML file so guys we have the sample Forest test image. JPG file in this case and let's say we have the alternate text as test image over here so this IMG tag will help us in order to display the image on the web browser let me just save this file now and let us move to the style. CSS file over here and we will provide the width and height for this particular image so guys let's say we provide the width as 300 pixels and the height is 300 pixels as well so that the image is displayed as a square box over here let me just save this file now and try reloading this page on the browser so as you can see this is the image that is getting displayed right now so guys first of all we will see how we can make this image appear as a rounded image so it should be displayed inside the circle so guys what we are going to do is we need to convert the square shape image into a circular shape image so simply we can use the Border radius CSS property so over here we say border radius in this case and the value must be 50% always remember that if you want some HTML element to have a circular shape we can simply provide the Border radius CSS property and the value must be 50% over here let me just save this file now and try reloading this page once again on the browser so as you can see we have the rounded image that is getting displayed right now apart from this we can also display the thumbnail images with the border so what we will do is simply I'm going to comment out this line of code over here and we will have the border of two pixels with the Border type that is solid and the Border color that is black color in this case apart from this we will also have certain padding so that we can see the Border clearly and there is certain spacing in between the image and the border of the image let me just save this file now and try reloading this page once again on the browser so as you can see after this image we have the border which is having the width as two pixels and the color is black right now apart from this we can also have the box Shadow for the this border so what we are going to do is simply we are going to provide the Box Shadow CSS property and we can see 0er pixels as horizontal Shadow and then 0 pixels as vertical Shadow and simply we can provide the 5 pixels blur effect and the color must be dark blue over here so guys basically the first parameter is the horizontal Shadow followed by the vertical shadow that you can provide and then we have something called as blur effect that will help us in order to spread the color that we provide as the fourth parameter which is dark blue in this case let me just save this file now and try reloading this page once again on the browser as you can see we have the dark blue box Shadow over here apart from this we can also have the multiple shadows as well so after comma we can provide another Shadow so let's say in this case we have 20 pixels of blur effect and the color is blue so we are providing the blue color for the Box Shadow and let me just reload this page as you can see this is the blue color that is spreading out across 20 pixels over here after the border of the image so guys in this way we can provide the cool CSS properties in order to make our images look more attractive over here apart from this we can also have the responsive images as well so guys let me just increase the width of this particular image to let's say 450 pixels over here so when we provide 450 pixels let me just save this file now the width of this particular image must increase when we reload this page so as you can see this is the 450 pixels width and 300 pixels height right now but guys when we decrease the size of this browser so let us see what will happen so when we are decreasing the width of the browser slowly as you can see the image is getting cropped and certain information from the image cannot be seen without scrolling the horizontal bar right now so guys on smaller devices it is very important that the images scale themselves up or down so when the screen size is decreasing the image size must also de inre at the same time so that the entire image is displayed on the 100% width of the screen so guys in order to solve this issue we can use the max with CSS property over here so let me just expand this browser and simply we are going to use the max with CSS property in this case for the image tag and it must be set to 100% over here so let me just save this file now so guys what is the meaning of this Max width basically we are telling the browser to have the maximum width of this image equal to 100% of the width of the screen so even if your page is displayed on the smaller screen the 100% width of the screen will be taken as the maximum width for the image and there will be no horizontal scroll bar that must be displayed so guys let me just save this file now and try reloading this page so now if we decrease the size of the browser so as you can see we are decreasing the size you can see that the image width is also decreasing over here so this is the way that we can create create the responsive images with the help of the max with CSS property in this case now guys apart from this we can also Center an image so how do we do that by default the display CSS property for this image is in line so simply we need to set the display property as block over here so that we can simply use the margin CSS property and the value must be Auto in this case so guys basically for any HTML element that is having the display equal to block we we can use the margin CSS property as Auto in order to get that HTML element at the center of the screen horizontally so let me just save this file now and try reloading this page once again on the browser so as you can see now the image is getting displayed at the center of the screen as far as horizontal alignment is concerned guys apart from this we can also make the imagees transparent by using the opacity CSS property so by default we have the opacity as one over here simply we can set the opacity as 0.5 which means we are providing 50% transparency for this image let me just reload this page as you can see we have provided the transparency effect over here we can also increase the transparency by providing the opacity equal to 0.3 over here let me just save this file now and try reloading this page as you can see we have increased more transparency effect for this particular image that is getting displayed on the browser now guys apart from this we also can provide the text on the image so what we can do is let's say we want to provide the text that is another diff tag over here inside the container so we will say diff followed by the class name that is text over here and simply we are going to say Simple Text in this case now guys let me just save this file now and try reloading this page once again on the browser as you can see the simple text is getting displayed over here after the image but we want to display it on the image over here somewhere at the top left corner so guys what we can do is first of all let us remove this margin equal to Auto and display equal to block property so that the image is getting displayed at the left of the screen over here so as you can see the image is getting displayed right now at the left of the screen and we only want this text to be displayed at the top left Direction over here on the image so simply for the container class that is the diff tag which is the parent tag over here for both the image and the diff tag over here we need to provide the position property as relative so simply we will say container and then for this container we will provide the position property over here as relative in this case so guys basically we have the position property as relative and for the image we will provide the position property as absolute and for the other diff tag that is having the simple text we will also provide the position property as relative so over here we have the class name that is text in this case and then we say position it is equal to Absolute over here and not relative so guys let me just save this file now and try reloading this page once again on the browser as you can see both the image and the simple text is now getting displayed and the top and the left CSS property for both these tags right now is zero over here now simply we can provide the top and left CSS property in order to provide certain spacing for this text so what we can do is in inside the dot text over here we will provide the top as 5 pixels and also the left as 5 pixels over here you can also provide percentages as well let me just save this file now and try reloading this page as you can see there is certain spacing at the top and at the left as well let us provide the percentages instead of pixels so that we get more spacing over here so when we reload this page as you can see we are getting the simple text at the top left corner of this particular image so guys in this way you can provide the different CSS properties for the image in order to style them based on your requirements because apart from this we also have something called as image filters over here so simply inside the IMG tag we can simply provide the filter CSS property and then as you can see there are different methods that you can use and provide the different values as well so let's say we have the brightness function that we are going to use so let us increase the brightness to 150 let me just save this file now and try reloading this page once again on the browser so as you can see the brightness is increasing now so guys we have provided the opacity as 0.3 let us provide the opacity as 1 so as you can see this has increased the brightness right now so guys when we provide the brightness equal to two over here inside the parenthesis and when we reload this page as you can see the brightness of the image is increasing apart from this there are many other methods that you can use we can also use the blur effect over here so let us check that as well so if we provide two pixels of blur effect as you can see there is blur effect to some extent for this particular image so guys you can use any of the methods that is provided by the filter over here in order to style your images based on your project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is image hover overlay in CSS so stay tuned so now we will see image hover overlay in CSS so guys basically we will create an overlay effect on image hover using CSS with the help of examples so let us move to the vs code over here and simply we are going to remove the previous lines of code that we have written in the HTML and the CSS files now guys over here we will Define the diff tag with the class container and inside this container we are going to have the image so let us provide certain sample image over here that I have already downloaded that is the sample Forest image. JPG file which is present in the same directory where this HTML file is present and then guys for the alt attribute simply we are going to say test image this text will be displayed when the image is not getting displayed properly on the browser now guys apart from this we will also Define certain CSS properties for this IMG tag over here inside the CSS file so let's say we have the IMG tag in this case and simply we are going to set the width as 300 pixels and also the height is 300 pixels over here let me just save this file now and try reloading this page on the browser so as you can see this is the image that is getting displayed right now now guys what we are going to do is when we get the mouse cursor on this image we need to get another diff tag that will be displayed on top of this image with a certain background color and a sample text so guys let us move to the vs code over here and simply inside the HTML file we are also going to define the diff tag with the class that is text over here and simply we will have the sample text that is Hello World in this case so guys basically this text will be displayed with the help of the background color on top of the image that we have already displayed on the web browser let me just save this file now and try reloading this page as you can see currently we are simply getting the text at the bottom of this image right now so guys we are going to set certain CSS properties so first of all we will use the container class over here for the diff tag and simply we are going to use it inside the CSS file so for this container diff tag we will set the position equal to relative over here and then after this we need to have the position equal to Absolute for the IMG tag as well so over here we will say absolute and also we will set the CSS property for this diff tag as well so we will use the text class in this case and inside the CSS file we use this class name that is text for which the position must be equal to Absolute so guys we have set the position equal to Absolute for IMG tag and the diff tag that is having the class name that is text over here now apart from this we will also set the top and the left CSS property as zero over here for the diff tag that is having the class text let me just save this file now and try reloading this page so as you can see the text is now getting displayed on top of the image right now now guys apart from this we also want to set the width and height for this particular diff tag that is text over here so simply we will set the width as 300 pixels which is same as the width of image and also the height must be same as that of the image so again we will set the height as 300 pixels over here apart from this we will also set the background color as well so let's say we have the background color as AA in this case so let let me just save this file now and try reloading this page once again on the browser as you can see the diff tag is now completely covering the image that we have displayed now because we also want the hello world text to be displayed at the center of the diff tag so what we can do is simply we will use the text align CSS property and set the value as Center which will help us in order to get the text at the center of the diff tag as far as horizontal alignment is concerned so we have got the text over here and then in order to get the text at the center of the St tag we can simply use the line height CSS property so over here we can set the line height to 300 pixels which is the actual height of the diff tag so over here we have set the value of line height as 300 pixels let me just save this file now and try reloading this page once again on the browser so as you can see we have got the text that is hello world at the center of the diff tag now guys what we want to do is when we get the mouse cursor on the image that is behind this diff tag we need to make this diff tag visible so we can see the overlay effect so in this case simply we are going to set the opacity equal to zero right now so that by default the diff tag that is having the text class is not getting displayed so let me just save this file now and try reloading this page so as you can see we get the image that is getting displayed on the web browser now guys what we have to do is simply we have to use the container class over here so we will use this class in this case and we need to use the sudo class that is over right now so when we get the mouse cursor on this diff tag we need to get the other diff tag that is having the text over here so we need to use another class name that is text in this case so we use dot followed by text so on Mouse over on this particular main container the dot text class that is a diff tag must be displayed so in this case we need to set the opacity equal to 1 so basically it is going to change from opacity equal to 0 to 1 over here and we need to make this transition within 1 second so guys basically we will use the transition as well with the CSS property that is opacity and the time period of 1 second over here let me just save this file now and try reloading this page now if we get the mouse cursor on the image as you can see we are getting the overlay effect over here which is displaying the hello world text so guys in this way we can simply provide the overlay effect in this case when we get the mouse cursor on this particular diff tag over here which is displaying the image right now so guys based on your project requirements you can also create your own overlay effect on top of the image or any other HTML element as we have seen in this particular video comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is image reflection in CSS so stay tuned so now we will see image reflection in CSS so guys basically the Box reflect property is used to create an image reflection and this we are going to check with the help of examples as well the value of the Box reflect property can be below above left or right so guys let us move to the vs code over here and simply we are going to include an image inside the container so guys we have the div tag over here and the class that we are going to set is the container in this case and then inside this we are going to have the IMG tag over here so guys basically we are going to create an original image and we are going to create a reflection of that original image so for example we are going to have the sample forest image that is present in the same directory where we have saved this index.html file so we are going to select this particular JPG file over here that is the image file and we are going to set the alt attribute as test image over here let me just save this file now and let us see how it looks like on the browser so when we reload this page on the browser as you can see this is the image that is getting displayed over here now guys we can set the width and height of this particular image in the CSS file so over here in the VSS code we are going to move to the style. CSS file in this case and simply we are going to set the IMG tag and set the width and height CSS property for this particular image so so guys let us say we have 400 pixels as width and 300 pixels as height over here so basically we are going to set these width and height parameters let me just save this file now and try reloading this page once again on the browser so as you can see this is the image let us reduce the size little bit so that we can see the reflection properly so we are going to set the width as 300 pixels and height as 200 pixels over here so as you can see this is the image that is getting displayed which is the original image in this case now guys we want want the image reflection to be displayed on the right of this image so what we can do is simply we can use the Box reflect CSS property so let us move to the style. CSS file over here and we are going to set the Box reflect CSS property in this case so guys basically this is the CSS property that we are going to use and we can set any of the four values as you can see we have above below left and right guys it is very important to note that some of the browser versions does not support this box reflect CSS property so you need to test on different versions of the browser if you are implementing this box reflect CSS property on production environment so let us say we want the reflection to be present on the right hand side so we select this right value over here let me just save this file now and try reloading this page once again on the browser you can see that this is the original image and the right hand side of the imag is somewhere over here but when we reload this page as you can see this is the reflection that is occurring of the original image now so guys this is the image reflection that we can see for the sample image that we have displayed on the browser over here on the left hand side you can see that there is a tree in the image and the same thing can be seen over here on the right hand side in the reflection of the image now guys we can also set the Border radius for this particular image so let us say we set the Border radius to 50% so that the image is displayed in a circular shape so let us provide the Border radius of 50% in this case for this particular IMG tag let me just save this file now and try reloading this page once again on the browser so as you can see we have a circular shape image it is not exactly the circle since the width and height of this particular image is not having the same value and it is looking like an ellipse shape over here but guys the main thing is this is the way that you can display the reflection of any of the images that you want to display on your web browser now guys apart from this we can also display the image on the bottom of this particular original image so let us check that as well what we are going to do is we will decrease the width and height so let's say we have 200 pixels of width and 15 pixels of height in this case and then what we are going to do is instead of having the Box reflect as right we are going to say below as the value over here let me just save this file now and try reloading this page once again on the browser so as you can see we have this original image on the top and then at the bottom we have the reflection of this image now guys similarly you can also set the reflection to be displayed on the left and above the original image so I'll leave this up to you as a homework for you so that you can practice on your own in order to check the image reflection on the left you need to get the image at the center or at the right of the screen so how you can do that basically the display property of the image is set as in line by default so you can set it as block element and then simply you can provide the margin equal to Auto property over here and then simply you can set the value of margin CSS property as Auto so guys this will help us in order to display the image at the center of the screen let me just save this file now and try reloading this page once again on the browser so as you can see the image is now getting displayed at the center of the screen and in order to get this image reflection on the left of the original image what we can do is simply instead of below we can set the value as left let me just save this file now and try reloading this page as you can see this is the image reflection that is appearing on the left so guys similarly you can set the value of above as the image reflect CSS property as the Box reflect CSS property so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is object fit property in CSS so stay tuned so now we will see object fit propert property in CSS so guys basically the CSS object fit property is used to specify how an image or the video should be resized to fit its container and this we are going to check with the help of examples as well we are going to see how we can set the image fit property for the IMG tag over here so guys there are various values for the object fit property in CSS the default value for the object fit is f the image is resized to feel the given Dimension over here and if if necessary the image will be stretched or squeezed to fit so guys let us check this with the help of example in vs code over here we will remove the previous lines of code that we had written in the HTML and the CSS files in this case and then simply we are going to have the dev with the class container over here now guys inside this container we are going to set the IMG tag in this case and we are going to take the sample image that is already present in our directory where we have saved the HTML and the CSS files over here apart from this we will also set the alt attribute as test image in this case let me just save this file now and apart from this we will also set the style for the IMG tag so that we can set the width and height properties for the image so guys let us say we have 300 pixels as width in this case and 200 pixels as height for the EMG so guys let me just set the width and height over here let me just save this file now and try reloading this page on the browser so as you can see this is the image that is getting displayed over here now guys since the image is present inside the container let us provide certain background color for the container as well apart from the padding property so what we will do is for the div tag that is having the class container over here we will set certain CSS properties so guys let me just copy this class name over here so we use the dot character followed by the class name and then what we will do is we will have the background color as yellow color over here and then apart from this since the display value is block by by default for the diff container we are going to set the display as inline over here and then apart from this we will also set the padding as 20 pixels so Guys these CSS properties will help us in order to see the background color of the container as yellow apart from the image that is already present inside this container so let me just save this file now and try reloading this page once again on the browser so as you can see we are getting some background color for this particular diff tag as well now guys instead of setting the display as inline we will set it as inline block over here let me just save this file now and try reloading this page once again on the browser so as you can see we have some kind of spacing over here after the image because of the padding property that we have already set to 20 pixels in this case now guys we will see the different values of the object fit property while we are setting it to the IMG tag over here so let us move to the style. CSS file in this case and then we are going to set the object fit CSS property as f over here which is the default value in this case let me just save this file now and try reloading this page once again on the browser you will notice that there is no change right now that's because this is the default value of the object fit CSS property now guys apart from this we have the second value that is cover in which case the image keeps its aspect ratio and fills the given Dimension the image will be clipped to fit over here so guys let us check this as well so inside the style. CSS file we will set the value as cover over here and let us see what will be the changes on the image so let me just save this file now and try reloading this page once again on the browser so as you can see there is no change right now that's because the width and height of this image has been set in such a way that the cover value will not make any changes over here so guys what we will do is let us decrease the width of this particular image to 200 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see see the cover value of the object to fit CSS property is helping us in order to scale the image in such a way that the entire image can be seen within the width and height that we have already set now guys apart from this we also have something called as contain in which case the image keeps its aspect ratio but is resized to fit within the given Dimension so guys let us check this as well so what will happen when we set the value as contain over here let me just save this file now and try reloading this page once again on the browser browser if you notice the entire image is getting displayed over here the entire width has been taken up by the image but the height of the image is reduced so guys what will happen is the original image is getting displayed over here to the max width or the max height in such a way that no information should be lost while displaying the image so guys you can use this particular value that is contained for the object fit apart from this we have the next value that is none in which case the image is not resized over here so guys let us check that as well what will happen over here when we set it as none so when we set the value as none let me just save this file now and try reloading this page once again on the browser as you can see the image is of original size and then within this particular width and height the specific region of the image is getting displayed so guys in this way the nonone value works for the object fit over here and then apart from this we have the last value that is scal down the image is scaled down to the smallest version of none or contained so guys either the none value or the contain value will be used when we use the scal down values so let us check this as well so over here we can set it to scale down in this case let me just save this file now and try reloading this page once again on the browser so as you can see the contain value is getting used over here and the entire image is getting displayed for the width and height that we have already set now guys in this case the width has been 200 pixels but the height that is being used over here is less compared to 200 pixels that we have used since the entire image is getting displayed over here without any loss of information so guys in this way you can use the different values of the object fit CSS properties based on your requirements so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is object position property in CSS so stay tuned so now we will see object position property in CSS so guys basically the CSS object position property is used to specify how an image or the video should be positioned within its container and this we are going to check with the help of examples as well now guys previously we have seen that the object to fit CSS property has one of the values that is covered over here in which case the image will be displayed in such a way that only partial image will be displayed as far as the width and height is concerned for that particular image container now guys along with this object fit equal to cover we can use the object position property in CSS in order to display the specific region of the image that we want to display and this we are going to check with the help of examples so let us move to the vs code over here so simply I'm going to remove the previous lines of code inside the style. CSS file and inside the HTML file we have we have the diff tag with the class container over here and inside this we have the sample image with the help of the IMG tag over here now guys what we will do is we will have certain styling for this particular container and the IMG tag as well so before that let us see how the page looks like over here so as you can see this is the original image that is getting displayed over here on the web page now guys let us provide the width and height for this image and for the container as well we are going to set certain CSS properties so first of all we will set the CSS properties for the container in which case we will set the background color as yellow color over here and then apart from this we will have the display property as inline Block in this case and then we will also have the padding property and the value will be 20 pixels and then guys apart from this we will have the IMG tag for which we are going to set the CSS properties over here so let us say we have the width of 300 pixels in this case and the height of 200 pixels so guys we have set the width and height of the image as well over here let me just save this file now and try reloading this page once again on the browser so as you can see this is the image that is getting displayed over here now guys let us reduce the width of this particular image to 100 pixels instead of 300 pixels over here so basically inside the style. CSS file we will reduce the width to 100 pixels in such a way that it is less than the height of the image let us see how the image looks like so let me just save this file now and try reloading this page once again on the browser so as you can see by default the object fit CSS property is f over here which is trying to fit the entire image within this particular width that is 100 pixels in this case so guys what we will do is instead of having the image fit in this particular width only the portion that is this particular part over here you can see that there's a bridge inside this image we will only display that bridge over here within the 100 pixels of the width so what we have to do is simply we will set the object fit CSS property to cover in this case so guys basically we will use this object fit and the value that we are going to set is cover over here let us see how the image will look like now so let me just save this file now and try reloading this page once again on the browser notice that the entire image is getting displayed right now over here since the default value is fill but we have set the value as cover now so when we reload this page as you can see only the bridge is getting displayed over here so guys in this way you can set the object fit CSS property as cover in order to display only the portion of that particular image now guys this is the middle portion of the image what if you want to see the right portion or the left portion of the image so in this case we are going to use the object position property in which case the specific portion of the image can be displayed so guys let us check that as well so inside the style. CSS file after the object fit we will have the object position CSS property and simply we are going to set the percentages over here so we are going to set 80% and after this space character we are going to set the 100% in this case so basically this will help us in order to see the right portion that is the right part of the image so let me just save this file now and try reloading this page once again on the browser so as you can see this is the right hand side of the image this is the right part of the bridge that we were able to see just now and then when we reduce the number from 80% to let's say 70% we will be able to see the left hand side of this image to some extent so when we change it to 70% over here let me just save this file now and try reloading this page once again on the browser it has come slightly to the left over here guys similarly we can see the extreme left of the image as well so let us say we set the 70% to 15% in this case so this will help us in order to see the left side of the image so when we save this file now and try reloading this page once again on the browser so as you can see this is the left hand side of the image that is getting displayed right now so guys in this way you can easily set the object position CSS property in order to set the exact portion or the exact part of the image that you want to display on the screen based on your project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the not notifications on upcoming videos as well the next video that we are going to talk about is mask image property in CSS so stay tuned so now we will see mask image property in CSS so guys basically the CSS mask image property specifies a mask layer image and this we are going to check with the help of examples as well the mask layer image can be a PNG image or an SVG image a CSS gradient or an SVG mask element so guys out of all these we are going to check the CSS gradient example over here in which case on top of the original image we are going to create a mask image over here now guys it is very important to note that most browsers only have partial support for CSS masking you will need to use the webkit prefix in addition to the standard property in most of the browsers so this testing part you have to handle while you are implementing the mask image property based on your project requirements so guys let us move to the examples over here so the vs code what we are going to do is we will remove the previous lines of code that we had written in the HTML and the CSS files over here now guys what we are going to do is we will simply create a div tag with the class container over here and then after this we are going to create the IMG tag inside this diff tag over here and then we will set the sample image that we already have inside the directory where the HTML and the CSS files are present and then for the alt attribute we will set the text S text test image now guys let me just save this file now and try reloading this page on the browser so as you can see this is the original image over here let us set the width and height for this particular image so we will use the IMG tag over here and let's say we have the square image in this case so we will set the width as 300 pixels and also the height as 300 pixels over here so guys basically we have set the width and height of this image in this case let me just save this file now and try reloading this page once again on the browser as you can see this is the square image that is getting displayed now guys in order to display the mask image on top of this particular original image simply we can use the linear gradient or the radial gradient as well apart from the other images that you can set as the mask image so guys let us check the example of linear gradient first of all so inside the style. CSS file over here for the diff tag which is having the class container we are going to set the CSS property so guys over here we have the dot character follow by the class name and then the property that we are going to use is mask image over here and then we will set the value as linear gradient and then we need to provide the color so guys basically one side of the image need to be transparent in this case so what we will do is let us say we want the top side of the image to be transparent and the bottom side to be having the original colors so guys what we will do is first of all we will set the value as transparent in this case followed by comma and then we have the black color over here let me just save this file now and try reloading this page once again on the browser so as you can see some kind of transparency is added as a mask over here on top of the original image so guys this is the functionality of the mask image CSS property it helps us in order to create a mask on top of the original image let us say we want this transparency at the bottom of the image so simply we need to revert the changes that first of all we need to set the color that is black over here and then after this the second parameter can be transparent in this case let me just save this file now and notice that the transparency is at the top right now but it will come at the bottom when we reload this page so when we reload this page as you can see at the bottom there is a transparency that is added to this particular original image with the help of the Mask layer now guys apart from this we can also set the radial gradient value for the mask image so let us check that as well so what we have to do is instead of having the linear gradient over here simply we will use use the radial gradient and in this case let us provide the shape as Circle over here and then let us say we have the black portion of 50% and Then followed by the rgba component in which case we will set the alpha component over here so guys we have 0 0 and then 0 once again for the RGB value and then we will have 0.5 over here and let's say we have the percentage as 50% in this case let me just save this file now and try reload in this page once again on the browser so as you can see this is the mask layer that can be displayed with the help of the radial gradient so guys over here we can decrease the percentage of the black component over here so let's say we set it as 30% and also we will increase the width of the image so let us say we set it to 500 pixels over here let me just save this file now and try reloading this page once again on the browser so to some extent we can see the radial gradient over here and then after setting the black component as 20 % and rgba component to 10% over here we can see that there's a radial gradient as a mask layer on top of the original page and we can see the circle at the right side of the image so guys in this way you can provide the mask layer for any of the original images based on your project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well as well the next video that we are going to talk about is button styling in CSS so stay tuned so now we will see button styling in CSS so guys basically we will use the different CSS properties in order to style the buttons so first of all we are going to see how the default button looks like on the web browser so guys let us move to the VSS code over here and simply in the HTML file we are going to have a simple button tag over here and then for this particular button tag we are going to have the text that is default in this case after which we are going to have a line break over here so guys we have the default text for this button let us see how it looks like on the web browser so let me just save this file now and try reloading this page on the browser so as you can see this is the default button that appears on most of the browsers over here now guys in most of the projects you will have to provide certain CSS properties in order to modify the look and feel of the button that you want to display so guys over here we are going to cover the various types of buttons as you can see we have the button color over here first of all so let us check that as well so after this particular default button let us have the div tag inside which we will have our customized buttons for which we will apply the CSS properties so guys over here we will set the button with the class that is background color that is blue over here so guys basically we are setting the class name that is BG blue in this case and then we will set the text is blue for this particular button and then apart from this we will also have the buttons with other colors as well so we will have the blue green and red color buttons over here so simply we are going to set the class names as BG blue BG green and then BG red over here and the text that we are going to set is green and red in this case so guys basically these are the three buttons that will be displayed on the web browser and they are present inside the diff tag over here let me just save this file now and try reloading this page once again on the browser notice that all these buttons are displayed in the default way that's because we have not provided any of the CSS properties to these buttons so guys what we are going to do is inside the style. CSS file that is linked to this particular HTML file over here we are going to provide certain common CSS properties for the buttons that are present inside the diff tag so after the diff tag we are going to provide the button over here after which we are going to set certain properties so let's say we provide the margin property as 10 pixels over here and then apart from this we are also going to set the padding property as 10 pixels over here and then we are also going to have the color as white color in this case so that the text for all these buttons are displayed in the white color let me just save this file now and try reloading this page once again on the browser notice that all these properties are applied to these buttons which are present inside the diff tag over here now one by one we are going to set the background colors for all these buttons in this case so guys simply we are going to set the CSS properties for all these buttons before which we are going to set the Border equal to none for all these buttons so that we don't see these black color borders that you can see right now so guys let us set the background color for all these buttons with the help of the class name over here so first of all we have the BG blue class in which case we are going to set the background color as blue color over here similar Illy we are going to set the green and red color background for the classes that is BG green and BG red in this case so guys over here we are going to set the background color as green and for the other class that is BG red we are going to set the background color as red in this case let me just save this file now and try reloading this page once again on the browser so as you can see these are the buttons with the different background color that we have provided with the help of the CSS properties and you can see that there is a default Button as well over here which is looking less attractive compared to the other buttons for which we have provided the CSS properties so guys this is the way that you can provide the background color for the different buttons over here now apart from this when we get the cursor on these buttons we need to change the cursor to hand tool so what we can do is for all the buttons in this case that are present inside the diff tag we are going to set the cursor CSS property to the value that is pointer over here let me just save this file now and try reloading this page so when we get the cursor on the button as you can see it has been converted to the hand tool over here so in this way you can set the cursor property as well now guys apart from this let us also see how we can set the button font size so let us move to the HTML file first of all and what we will do is we will copy these lines of code once again and this time we are going to change the class name in order to set the font size over here so let's say we have the font size of 12 pixels first of all and then we have the font size of 16 pixels which is the default font size for the button and then we have the font size of 20 pixels over here and then guys for the text part ins set of blue we are going to have 12 pixels in this case and then apart from this for this green we are going to say 16 pixels which is the font size and then for the red we are going to have 20 pixels over here so we are going to have all these buttons with different font sizes and then apart from this we will also have the background colors for all these buttons so guys simply we are going to set the BG blue for the first button and then followed by BG Green in this case for the second button and then over here we will set BG red for the third button over here so guys in order to apply the CSS properties from multiple classes you can provide the different classes inside the class attribute over here which should be separated with the space character in this way so let me just save this file now and try reloading this page once again on the browser notice that we have got all the background colors for these buttons but the font size is not set so far so what we are going to do is we will set the font size using this font 12 font 16 and font 20 classes inside the CSS file so guys over here after this we are going to set the font size equal to 12 for this particular class so simply we are going to set the font size CSS property to 12 pixels over here and then similarly we are going to set the 16 pixels and 20 pixels font size so over here we have font 16 it is equal equ Al to 16 pixels and then we have font 20 it is equal to 20 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see we have 12 pixels 16 pixels and then 20 pixels font size for all these respective buttons over here now guys apart from this we can also have the rounded buttons as well so what we will do is simply we are going to copy these lines of code once again over here and then what we are going to do is instead of having the font class over here we will have the class that starts with round over here so guys basically we have round five which will set the Border radius as 5 pixels over here and then we have the round 10 and then we will have the round 50 in which case we are going to set it as 50% in this case so guys over here we will set it as 5 pixels so that we can identify that this is the button with the Border radius as 5 pixels and then we have 10 pixels over here and then in this case we will have 50% over here let me just save this file now and try reloading this page once again on the browser as you can see we have all the buttons in this case but we need to provide the Border radius to all these classes so what we are going to do is we will copy this round five over here and then inside the style. CSS file we will have this class name that is around five and then for this class we are going to set the Border radius which will be equal to 5 pixels over here similarly we will copy this line of code for the round 10 and and the round 50 classes as well for which case we are going to set the Border radius as 10 pixels and then 50% respectively so guys over here we have set the Border radius properties as well let me just save this file now and try reloading this page once again on the browser as you can see this is the 5 pixel border radius and Then followed by the 10 pixel border radius for this button and then this is the 50% border radius which means approximately it will be a circular button over here when the width and the height of the button is same so guys in this way you can set the Border radius for a specific button based on your requirements and then apart from this we will also have the colored button borders so guys so far we have provided the colors inside the button but what we are going to do is we will have the button color that is the background color is white but these colors will be the Border colors for these buttons so guys let us check that as well so what we will do is simply I'm going to copy these lines of code over here once again and then we we will remove the class names over here from all these buttons so we will set the Border as blue over here and then apart from this we will set the Border as green for the second button so let me just quickly set the Border green class name and then the last button will have the border red class name and then we will set the text as blue green and red respectively so guys over here we have set the buttons with the Border blue border green and the border red class name so what we have to to do is we need to set the background color as white for all these buttons and then we are going to set the Border color for these buttons so let me just copy this class name and then inside the style. CSS file over here simply we are going to provide the CSS properties for these class names so first of all border blue it will have the background color as white color over here and then we need to set the border so let's say we set the Border as one pixel which will be of the solid type in this case and then the color should be blue color over here so guys let me just save this file now and let us see how it looks like on the web browser so on the browser let me just reload this page as you can see we have the Border color as the blue color over here but guys we are not able to see the text because it is of the color white by default so we need to change the color to black as well so guys over here we are going to set the color as black once again and since this particular color property is having the black color over here for this border blue so this black color will be implement mented and it will override the previous value that is color equal to White that we had set for the button tag over here that's because the recent color that we are setting is black in this case so guys always remember whatever the recent CSS property is applied to any of the classes or the text that particular CSS property will be implemented or used when that HTML element is displayed on the web browser so let me just save this file now and try reloading this page once again on the browser so as you can you can see we have this blue color button that is getting displayed similarly we need to display the green and the red color buttons as well so we are going to copy these lines of code and change the colors to green and red over here so we have the classes border green and over here instead of having the blue color border we will have the green color border over here and then for the border red class we are going to have the red color border over here let me just save this file now and try reloading this page once again on the browser so as you can see we have the blue green and red buttons in this case for which the background color is white and the Border colors are blue green and red respectively so guys in this way instead of having the background colors you can also have the Border colors and your buttons will look attractive on the website now guys apart from this we can also have the hoverable buttons so over here what we are going to do is when the user gets the mouse cursor on these buttons over here we want to change its background color to the the same color so let's say when the user gets the mouse cursor on this blue button over here so the background color should be set as blue and the font color should be set as white so what we can do is simply for this border blue class we need to define the Pudo class that is hover so guys simply we are going to copy this border blue class name followed by colon and then on Hover event which is the sudo class we need to set the background color as blue color in this case so basically we we are setting the background color as blue and we want to set the color as white so that the text color can be displayed properly on this particular background color that is set as blue so let me just save this file now and try reloading this page once again on the browser so by default as you can see this is the button that is getting displayed but when the user gets the mouse cursor on this blue button over here the background color is getting updated so guys in this way you can set the hover effect on the green and the red buttons as well so let us do that as well quickly so simply we are going to copy these lines of code and over here instead of having the blue we are going to have the Border Green Glass name for which the background color should be green color over here and for the border red hover event we are going to have the background color as red in this case so guys let me just save this file now and try reloading this page once again on the browser when we get the mouse cursor on green button you can see that the background color is updated to green and the red button the background color is updated to Red in this way we can have have the hover effect on the buttons as well based on the CSS properties that we have seen by using the hover event over here now guys apart from this we can also have the shadow for the buttons so let us create another button over here with the class button Shadow so guys let me just change the class name to BTN and then we have Shadow over here and basically we are going to change the text to Shadow button in this case so guys we have another button that is Shadow button over here let me just save this file now and and try reloading this page once again on the browser so this is the button that is getting displayed over here let us change the CSS properties for this button Shadow so let me just copy this class name and then paste this over here after the dot character and what we are going to do is we will set the background color as aqua color over here we will set the text color as black color in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the shadow button over here now guys in order to create the Shadow for this button we can simply use the Box Shadow CSS property so over here inside the button Shadow class we will have the box Shadow CSS property and first of all we will have to set the horizontal Shadow so let's say we have two pixels of horizontal Shadow and then 2 pixels of vertical Shadow and then we need to provide the blur effect so let's say five pixels of blur effect and the color of the shadow that we want to display so let's say we have the black color over here let me just save this file now and try reloading this page once again on the browser so as you can see we have the black color shadow that is getting displayed over here apart from this we can also have the multiple Shadows so after the black color we can provide comma and then let's say we provide 0 0 pixels for horizontal and vertical Shadow and then for the blur effect let's say we provide 20 pixels of blur effect over here and then apart from this let us say we have the color of the Shadow as blue after this black color shadow so let me just save this file now and try reloading this page you will notice that after this black color shadow there will be the blue color shadow that will be displayed for this particular Shadow button so when we reload this page you can see that there is a blue color shadow that is getting displayed over here which is making this button look more attractive on the web page so guys this is the way that you can provide the shadow effect for the button and the other effects as well based on the CSS properties that we have seen so far for the button HTML element so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is pagination in CSS so stay tuned so now we will see pagination in CSS so guys basically pagination helps to display The Limited results on the web page across the various pages in the same view and this we are going to check with the help of examples as well we will see how we can create the page in section so that the user can navigate through the different pages on the same view on the web page so guys first of all let us see how we can create the simple page Nation so let us move to the vs code over here and simply we are going to create a diff tag with the class pagination in this case so guys we have the diff tag with the class pagination over here and let us add certain links in this case so that the user can click on that link in order to navigate through the different pages so guys over here we have have the a tag with the hdf attribute we can provide the hash character over here and simply we are going to number the pages so guys this is the first page and so on we are going to create more pages over here so as you can see we have created the pagination diff tag over here and it is having seven links in this case now guys let me just save this file now and try reloading this page on the browser and let us see how it looks like so as you can see these are the links that the user can navigate to now guys we can also add the previous and the next arrows over here so simply I'm going to copy this line of code in this case and then what we will do is we will use the special character in this case so guys we have the special character that is less than symbol which will be displayed twice and then at the end as well we are going to create another special character over here so guys this special character will be the greater than symbol which will be displayed twice so let me just save this file now and try reloading this page once again on the browser so as you can see these are the arrows over here that is the less than symbol and the greater than symbol which will represent the previous and the next pages that the user want to navigate to now guys apart from this let us get this pagination at the center of the page so what we will do is we will have another diff tag over here and then we will have the class as a center in this case and then we will end this diff tag after the pagination tag over here so guys simply we are enclosing this pagination tag inside another diff tag and then in this case we will align the text at the center so guys let us move to the style. CSS file over here and simply we are going to have the class name that is Center in this case and then we are going to save text line that is equal to Center let me just save this file now and try reloading this page so as you can see these are the pages inside the page Nation diff tag now guys we can also remove this text decoration which is coming by default over here so simply we are going to move to the style. CSS file in this case and then inside the pagination we need to go to the a tag over here so simply we will say pagination class in this case and then inside this we have have the a tag and then what we will do is we will have the text decoration as none also we will provide certain padding over here so let's say we have a padding of five pixels so that there is enough space in between the page numbers so let me just save this file now and try reloading this page once again on the browser so as you can see now the pagination is looking more decent over here apart from that we can also have the color for all these text so let's say we have the black color instead of the default blue color for the link so as you can see we have provided the color text for all the pages inside this page Nation now guys apart from this we can also have the hoverable page ination in which case when the user hovers over one of the pages over here the background color can be updated so that the user gets the feedback that that is the page number that he or she wants to click so guys what we have to do is simply inside the page Nation we need to have the Pudo element that is hover so guys inside the page Nation class we have the AAG and for this we are going to create the hover Pudo class over here so guys what we want to do is we need to change the background color so let's say we want to change the background color to Aqua over here so basically when the user gets the mouse cursor on this a tag so the hover sudo class will help us in order to update the background color to Aqua let me just save this file now and try reloading this page once again on the browser and when the user gets the mouse cursor on these Pages as you can see we are getting the background color up to EA over here so guys this is the hoverable pagination that we can create based on our project requirement and then when the user clicks on any of the specific links simply you can provide the required HF attribute over here the URL that you want to call based on the page number that the user has clicked on so guys this is the way that the pagination will work apart from this we can also have the active page color over here so let's say the second page is active right now so what we can do is simply we will have the class over here and we will say active as the value for this class and simply when the user clicks on any of the pages you can set the class for that particular page as active and remove the class from this particular active page over here so guys what we have to do is inside the style. CSS file simply we need to update the background color for this specific page that is second which is having the class equal to active so guys what we are going to do is simply I'm going to copy these lines of code over here and then inside the pagination we will have a a tag which is going to have the active class over here so I'm going to remove this H Pudo element and simply we will say a do active in this case so guys basically whatever CSS properties that we provide inside this particular selector it will be only applied to the a tag that is having the class active so guys what we want to do is let's say we want to update the background color as green yellow over here for the page that is active So currently we have made the second page as active over here so let us see how it looks looks like let me just save this file now and try reloading this page once again on the browser so as you can see this is the active page right now and when the user goes to the other pages over here on H the background color is getting updated in this case so guys in this way you can also have the active page color apart from this you can also have the hoverable transition effect so guys in this case on Hover there is no transition currently but we can provide the transition so that there is certain kind of Animation that the user experiences so guys over here we can use the transition CSS property and then simply we can use the background color because that is the CSS property that we are changing on Hover event and then we need to provide the timing so let's say we provide 0.5 seconds in this case so guys basically what will happen is there is no background color by default for the a tag but we are changing the background color on over event so that background color will be updated to the aqua color within the time span of 0.5 second instead of 0 seconds which was present by default so guys let me just save this file now you will experience that the background color of the a tag will be updated to Aqua with some transition so let us reload this page once again on the browser and when we get the mouse cursor over here as you can see there is certain transition that is fade in and Fade Out of the background color for all these a tags over here which is nothing but it is representing the pages inside this pagination so guys you can have the transition effect over here and then apart from this you can also have the bordered pagination in this case so guys basically we have not provided any borders to all these pages so what we will do is simply inside the AAG we can have the Border CSS property as well so when we provide border of let's say one pixel of the type solid we can provide the color as gray color over here let me just save this file now and try reloading this page once again on the browser so as you can see all the pages are now getting the borders over here but guys there is a space in between all the borders for all these pages so what we can do is simply we can use the float property in this case and the value should be left over here let me just save this file now so this is used in order to remove the Border spacing in between the two borders of these pages and when we reload this page so as you can see there is no more spacing between the borders of all these pages over here so guys in this way you can apply the borders as well and this type of pagination is looking more decent over here along with the borders and the hoverable effect in this case now guys apart from this you can you can also apply multiple other CSS properties to all the pages inside your pagination diff tag you can have the rounded pagination as well in which case you will be using the Border radius and you can also provide the space in between the link by using the margin property so guys I'll leave this up to you as a homework for you so that you can practice on your own and based on your project requirements you can apply any of the CSS properties for all the pages inside your pagein nation so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is multiple columns in CSS so stay tuned so now we will see multiple columns in CSS so guys basically the CSS multicolumn layout allows an easy definition of the multiple Columns of text just like the text inside the newspapers so guys this we are going to check with the help of examples as well it is very important to note that some of the older browser versions might not support the column properties so it is very important that you test the implementation of these column CSS properties on the various browsers when you are going to deploy your code on production so guys first of all we are going to see what is column count over here which is one of the CSS properties in order to apply the column layout in CSS so let us move to the VSS code over here and simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files over here now simply we are going to create a diff tag with the class newspaper over here and above that we are going to have the H1 heading tag and we can say that below is the newspaper so guys over here we are creating the layout similar to a newspaper over here which will have multiple columns and then inside this let us say we have some random text that is getting generated so over here we are going to create the random text in this case let me just save this file now and try reloading this page on the browser to see how it looks like so as you can see this is the random text that is getting generated over here we are first of all having the H1 tag that is displaying below is the newspaper statement and then we have the simple random text that is generated now guys if we want this random text that is generated to be divided into multiple columns in the same web browser so what we can do is simply we can provide the column CSS property to this diff tag so what we have to do is we will use the class name over here and inside the style. CSS file we will provide dot followed by the newspaper that is the class name and simply we can use the column count CSS property so guys this particular column count CSS property helps us to specify how many columns we want to divide this particular diff tag to so let's say we want three columns out of this entire text over here so simply we provide the value of three to this column count let me just save this file now and try reloading this page once again on the browser so as you can see these are the column numbers that is three columns can be displayed over here out of the diff tag that we have created now guys apart from this you can also increase the column count so let's say if you want four columns to be displayed let me just save this file now and try reloading this page as you can see this is First Column second column third column and fourth column so the more the number of columns that you are going to increase the Lesser will be the width of each column and that is how the column CSS property will work now guys apart from this there is another column property that is column Gap over here which means the Gap in between both these columns in this case so guys by default we have certain Gap that is provided in between all the columns but you can modify it with the help of the column Gap so in this case what we will do is simply we are going to provide the column gap of let's say 10 pixels over here let me just save this file now you will notice that this particular Gap in between all the columns will get updated over here when we reload this page as you can see the column Gap got updated in this case let us increase the column Gap to let's say 30 pixels over here let me just save this file now the column Gap will increase now in between all the columns so when we reload this page as you can see the gap between all the columns is increased and in this way you can simply use the column Gap CSS property as well apart from this we have something called as column rule style so guys let us check that as well so just like border styles CSS property we have something called as column rule style CSS property which will help us in order to provide multiple values over here so as you can see similar to border style values we have the values such as dashed dotted double Grove and so on so simply we are going to provide the solid column rule style over here so guys basically what will happen is a simple line will be displayed in between all these columns over here when we say column rule style that is equal to solid so let me just save this file now and try reloading this page once again on the browser so as you can see this is a simple line that is getting displayed over here and in this case we have provided the solid value apart from this we can also provide the dashed value as well let me just save this file now and try reloading this page so as you can see these are the dash lines that are getting appeared in between the columns so guys this is the way you can set the column rule style over here apart from this you can also set the column rule width and the column rule color so let us check that as well so simply we can say column rule width in this case and let's say we want only the width of one pixel to be displayed as the line in between the columns so let me just save this file now and try reloading this page once again on the browser so there is a very thin line that is getting displayed over here let us increase the width to 10 pixels and when we reload this page as you can see these are the dashed lines that are getting displayed over here in between the columns and let us change the color as well so for color we will have column rule color in this case and simply we will set the color as dark blue over here let me just save this file now and try reloading this page so as you can see this is the dark blue color that is getting displayed over here we can also display some other color so let's say we want yellow color to be displayed so as you can see this is the yellow color column rule that is getting displayed over here now guys apart from all these we can also have the shorthand property that is column over here so instead of providing the style width and color separately we can have the simple column rule CSS property in which case we can provide the width first of all followed by the style that is solid in this case and let's say we want the color to be displayed as gray color over here so simply we can provide the gray color for the column rule let me just save this file now and try reloading this page once again on the browser so as you can see these are the column rule that is the lines that are getting displayed in between the columns based on the CSS property values that we have provided over here and this is the Shand property for all the column rule CSS property now guys apart from this we also have something called as column width so guys basically what we have done so far is we have provided the column count over here in which case it was four right now so you can also provide the column width in such a way that the number of columns will be calculated automatically so in this case we need to comment out the column count over here and simply what we will do is let's say we want each column width to be only of 100 pixels in this case case so when we say column width equal to 100 pixels all the column width that are getting generated over here will have the width of 100 pixels in this case and it depends on the content that how many columns will be generated so let me just save this file now and try reloading this page once again on the browser so as you can see we have set the column with as 100 pixels over here and due to which there are six columns that are getting generated and if we increase the column width over here so let's say we change the column width to 150 pixels so each column will have the additional width and that is why the number of columns will decrease now so when we reload this page as you can see now we are getting four number of columns and when we increase the width more so let's say we provide 200 pixels of column width and when we reload this page as you can see now we are getting three columns since the entire content can be displayed within three columns when we have the column width of 200 pixels over here so guys this is the way that you can use the column width as well and the other CSS properties related to column based on your project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is a resized property in CSS so stay tuned so now we will see resize property in CSS so guys basically the resize property specifies if and how how an HTML element should be resizable by the user so guys sometimes based on your project requirements you want the user to resize the text field or any other HTML element that is displayed on the user so in that case you can use the resize property in order to allow the user to resize the HTML element it is very important to note that the Overflow property is required to make use of resized property so guys let us check this with the help of examples in vs code over here so simply I'm going to remove the previous lines of code that we have written in the HTML and the CSS files now guys let us say we have the diff tag over here which is having certain random text that is getting generated in this case so we have the lauram Mt abbreviation and let's say we have 30 words over here that are getting displayed right now now guys let me just save this file now and try reloading this page on the browser to see how it looks like so as you can see this is the text that is getting generated right now so guys what we will do is we will display this text in inside the box which is having a specific width so inside the style. CSS file over here simply we are going to provide the diff tag and let's say it is having the width of 500 pixels in this case and then apart from this we will also have the border of let's say 1 pixel solid of the color gray in this case so let us have the border of one pixel with the gray color and then apart from this we will also provide the padding of 10 pixels so that there is certain spacing in between the border and the content of this D tag let me just save this file now and try reloading this page once again on the browser so as you can see we have this D tag with the border and the content inside this diff tag now guys let's say we want the user to increase or decrease the width of this diff tag so what we can do is simply we can provide the resize property over here so we have the resize CSS property in this case that can be used in order to increase the decrease the width and when we say horizontal as the value it will allow the user to change the width and when we say vertical it will allow the user to change the height of the HTML element so let us say we provide the value as horizontal let me just save this file now and try reloading this page once again on the browser so notice that on the bottom right we don't have anything which will allow the user to increase or decrease the width so guys why this is happening because we have not provided the Overflow property which is required in order to make the use of resized property so simply we are going to make use of the over flow property and simply we can set the value as Auto over here let me just save this file now and try reloading this page once again on the browser so as you can see on the bottom right we can simply click and drag the border of this div tag in order to increase or decrease the width of this particular HTML element so guys in this way you can use the resize property over here now guys apart from this we can also have the value as vertical in which case the user will be allowed to update the height of the diff tag let me just save this file now and try reloading this page once again on the browser now if you see user will be able to increase or decrease the height of this particular diff tag and automatically there will be a scroll bar if the text is not getting displayed within the height of the diff tag over here so in this way you can provide the vertical value to the resize CSS property as well and then apart from this in order to have both that is horizontal and vertical value which means the user should be allowed to update the width and height as as well of this HTML element then simply you can provide the both value to the resize CSS property let me just save this file now and try the loading this page now if you see the user will be able to increase the width as well as the height of this diff tag and automatically there will be a scroll bar that will appear when the content of the diff tag is not within the borders of this particular diff tag in this case so guys in this way simply you can use the resize property in order to allow the user to update the width and height of any HTML element based on your project requirement so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is variables in CSS using bear function so stay tuned so now we will see variables in CSS using wear function so guys basically the wear function is used to insert the value of a CSS variable variable and this we are going to check with the help of examples as well a very good way to use the CSS variables is when it comes to the colors of your design so instead of copying and pasting the same colors over and over again for the different CSS selectors you can place them in the variables and you can use the variable names of those colors and apply those colors to the different selectors based on your project requirements so guys this is the syntax as you can see we first of all use the wear keyword followed by two * hyon and then we have the name of the variable now guys apart from this we also have the second argument that is value which is optional so basically name is required in which case the variable name must start with the two dashes and basically this is the name of the variable for which you have already set the specific value apart from this this value is optional over here which is the second argument it is the fallback value which will be used if the variable is not found so guys you will be having the list of variables that you have already set but let's say if this particular specific variable is not present in your list of variables then you will be using this particular value that will be provided as the second argument now guys let us check this with the help of examples in VSS code over here so simply I'm going to remove the previous lines of code that we have written in the HTML and the CSS files in this case now simply we are going to have the div tag over here and then we will have the lurm M abbreviation with 30 words over here and then apart from this let us say we have a test button in this case okay so guys simply we are going to use the button tag and we will say test button over here let me just save this file now and try reloading this page on the browser to see how it looks like so as you can see this is the diff tag that is having the random text that is getting generated and then we have the test button over here now guys let us provide certain CSS properties to the background that is the body tag over here and to the diff tag and to the test button as well so let us move to the style. CSS file in this case and then simply for the body tag we will provide certain background color and this time we will be using some dark background color over here so it is a shade of gray color in this case and then apart from this for the diff tag also we will have certain background color in this case so guys let us say we have the same color but we are going to have a darker version of this particular color so let me just adjust the color over here so as you can see we can set this particular background color apart from this let us also set the padding of 10 pixels over here and also we want to set the text color with the help of the color CSS property to the same value that is present as the background color for the body tag simply I'm going to copy this particular color over here now guys apart from this what we will do is also for the test button as well we will have the background color and the text color as well same as the background color in the text color that we have set for the diff tag so simply I'm going to copy these lines of code over here now guys if you notice the same colors are being used as the background color over here and and for the text colors as well and in case your project size grows and if you use the same color across multiple selectors it will be very complex in order to maintain them and in case if you want to update any of the colors you will have to update them in all the locations so let us see how it looks like on the browser first of all so let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color for the body tag and then for the diff tag as well we have the darker version of the background color for the diff tag and the button as well and then the lighter version of the color being used for the text color over here now guys what we can do is instead of providing the fixed colors inside all these CSS properties simply we can provide the variables and set these values to those variables and use those variable names as the values for these CSS properties inside these CSS selectors so guys how we can Implement that so first of all we will see how we can use the global scope variable so guys there are two types of variables one is global scope and the other one is local scope so we use the colon over here followed by the root keyword and inside this we can Define our various variables that will be having the color values and we will be using those variables inside individual selectors and this is the way that we can use the global variables over here now guys as far as local variables are concerned we can Define the variables inside a specific selector so let's say we want a local variable to be defined inside inside this diff tag so simply we can Define the variable inside this diff tag and use it within this particular diff tag over here we cannot use the local variable outside of this div tag to any other CSS selector so that is the limitation of the local variable so guys first of all let us see how the global variable works so in order to define the variable we have to provide two times Hyun and Then followed by the name of the variable so let's say we provide a light color as the name of the variable followed by colon and out of both these colors this is the lighter version that is 6 * a over here so simply we are going to provide this particular hex color that is light gray color over here and then apart from this we want the darker version as well so again we are going to provide two times High fun and then we will say dark color in this case so guys basically this is the name of the variable that we have set and Then followed by colon and then we need to provide the value of the dark color that is 76 76 76 so simply we can provide the character followed by the color value over here so guys this is the way that we can set the multiple variables which is at the global scope right now so since we have already provided the variable names over here and we have also provided the values simply we can use these names that is the color names instead of having the values across the different individual CSS selectors so guys let me just update all these colors over here so the background color for the body tag is the light color over here so instead of having this value we will use the V keyword in this case and then simply as you can see it is being suggested by the vs code we want to use this particular variable that is light color over here always remember that you have to use two times hyphen character when you're defining the variable and when you're using the variable apart from this we will have the dark color over here so simply we are going to say where and then we will use the dark color in this case and the color CSS property will have the light color over here once again so simply we will have light color as a variable and then again we have the dark color and the light color as the background color and the text color for the button so simply we will set the dark color as the variable name over here and light color for the text color in this case so guys as you can see now we are using the variable names instead of using the fixed color values that we had set previously and in this way whenever you want to change the color values over here simply you have to change the color values only at this particular one location where you have set variables so let me just save this file now and try reloading this page once again on the browser notice that there is no change right now that's because we have set the same color values over here now guys let us check another combination of colors so let's say you want the light color to be the yellow color so simply we can set the yellow color over here and also we want some other version of the yellow color so simply we are going to update this yellow color to this particular RGB value and then apart from this we want the dark color to be some other version of the black color so let's say we have this particular color as the dark color in this case so let me just save this file now and notice that we have only changed the light color over here where we have defined this particular variable but it will be implemented everywhere wherever we have used the light color and the dark color variables so when we reload this page once again on the browser as you can see all the colors are updated now the background color of the body tag is updated to the light color then we have the background color of the diff tag and the button is also updated with the dark color that we have specified over here and the text color is also the light color that we have used now guys let us see we want some other color for the test button and over here we have not defined that particular color so let's say we have another variable that is another color over here so guys basically this another color is not yet defined inside the global variable and in such cases if you are not sure that you have not mentioned this particular variable inside the global scope then simply you can provide the second argument over here so let's say you want aqua color to be used in case this particular another color variable is not present so in this case what will happen is currently it is getting displayed as the yellow color as far as the text color of this button is concerned but now since we are using another color as the variable name which is not present inside this root selector over here so aqua color will be implemented as the text color for this button so let me just save this file now and try the loading this page page once again on the browser so as you can see the text color of this button is now updated with aqua color over here and in this way you can use the second argument that is value inside the wear function over here in order to provide the required colors now guys apart from this you can also make use of the local variables over here so what we can do is let's say you have already defined the light color over here but you want to Define some other light color for the diff tag so simply I'm going to copy this line of code over here and paste it inside the diff selector and in case of using the yellow color I want to use some version of the green color so we are going to use some shade of green color over here as the light color in this case so as you can see we have updated the RGB color over here for the light color now guys we have two variables with the same name first of all we have the light color over here which is having the global scope and inside the diff tag we have the light color which is having the local scope so in this case when we use the text color and provide add the light color variable over here so which color will be used so guys let us check that as well so when we save this file now and try reloading this page once again on the browser so as you can see green color is getting implemented over here as the text color inside the diff tag so guys this tells us that whatever variable we Define inside the specific CSS selector which we call it as the local variable so that value will be used wherever we use the light color in this case and let's say when we use the light color somewhere else let's say we use the light color over here to the button text so guys the light color is already defined as the yellow color over here so instead of providing the aqua color the yellow color should be displayed so let me just save this file now and try reloading this page once again on the browser so as you can see the global value that is the yellow color for the light color is getting displayed over here and the local value is getting displayed for the diff tag because we have provided the local variable over here so guys in this way whenever you use the local variables that particular value will overwrite the value of the global variable that you have already defined inside the root selector so guys in this way you can easily use the variable names in order to avoid the confusion when you have several CSS selectors and you want to use the same set of colors based on the theme of your project so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as as well the next video that we are going to talk about is box sizing property in CSS so stay tuned so now we will see box sizing property in CSS so guys basically the CSS box sizing property allows us to include the padding and the Border in an HTML elements total width and height so guys this we are going to check with the help of examples as well so by default we have seen so far the width and height of an element is calculated like below so basically whatever width we provide to the HTML element that is considered and then the padding and the border is also considered in order to calculate the actual width of the HTML element similar cases with the height attribute as well so when we have the height of the HTML element the padding and the border is also added in order to calculate the actual height of the element so guys we can simply use the Box sizing property in order to avoid the confusion and also include the padding and the Border within the width and height that is already specified for the HTML element so guys let us move to the vs code over here and simply inside the HTML file we are going to create two div tags over here the first div tag is having the class name that is div one in this case and then we will say this is a sample div one over here and then similarly we will have another diff tag with the class that is div 2 in this case so basically we will have div 2 and then over here as well we will update it as div 2 over here apart from from this between both the diff Texs we will have the line break so let me just save this file now and try reloading this page once again on the browser as you can see we have SIMPLE statements that is this is a sample div 1 and Sample div 2 over here now guys let us provide certain styling inside the style. CSS file so for the very first class that is d one over here we will specify the width of 300 pixels in this case and a height of 100 pixels over here and then apart from this we will also set the border so let's say we have two pixel pixels solid border with the color that is black color over here now guys similarly we will provide the CSS properties for the second diff tag over here that is having the class name div 2 in this case and again we are going to have the width and height that is 300 pixels and 100 pixels respectively we will have the different color border and for the Border part we will have a different color so let's say we have the Border color is blue color over here let me just save this file now and try reloading this page once again on the browser so as you can see we have the first diff tag which is having the width as 300 pixels and the height as 100 pixels over here and for the div two tag as well we have the same width and height values over here we have a different border color in this case that is blue color now guys what we will do is let us provide a certain padding to this particular diff tag that is the second diff tag over here so simply inside the diff 2 selector we will have the padding CSS selector and let's say we have 20 pixels as padding so guys what will happen is apart from the width and height of this particular d tag the padding number will also be added and it will increase the width and height of the diff tag so let us check that as well when we save this file now and try reloading this page once again on the browser if you notice now the size of this particular diff tag that is the second diff tag over here is more compared to the first diff tag and if you notice in the code we have the same width and height value over here that is 300 pixels and 100 pixels for the div 1 and div 2 as well so as you can see the width and height of div 2 is also 300 and 100 pixels respectively so guys this is the issue as far as the width and height of the HTML elements are concerned on the same page so in order to avoid this issue simply we can use the Box sizing CSS property over here so guys when we say box sizing we have the value as border box in which case the padding attribute will also be included within the width and height that you have already specified over here within this selector so when we save this file now and try reloading this page once again on the browser if if you see now the exact width and height of this particular diff tag that is diff 2 is 300 and 100 pixels respectively since we have provided the Box sizing as border box so guys basically the content and the padding will be adjusted accordingly apart from that the Border will be also adjusted in such a way that the actual width and height of this particular diff tag should be 300 pixels and 100 pixels now guys if you notice the first diff tag is little bit larger as far as the width is concern concerned compared to the second diff tag why so because the border of two pixels is taking the extra space over here for the first diff tag so again if we provide the Box sizing CSS property for the first diff tag over here and we provide the value as border box this particular issue should get resolved so let me just save this file now and when we reload this page so now if you notice the width of this particular Dev one is exactly the same as that of the div 2 HTML element over here that's because we are using the box sizing equal to border box for both these diff tags in this case so guys in this way in order to avoid the confusion and to be consistent as far as the width and height of the HTML elements are concerned it is very important that you use the Box sizing CSS property for all the HTML elements so instead of providing it to individual CSS selectors across the multiple CSS selectors over here let me just save this file now and try reloading this page once again without the Box sizing CSS property you will notice that the dimensions are different but simply you can have the universal selector over here with the help of the star and then in this case you can simply provide the Box sizing to all the CSS selectors over here so simply with this particular single line of code within the universal selector the dimensions of all the HTML elements will be consistent so guys let me just save this file now and try reloading this page once again on the browser as you can see the width and height of both these diff tags are same that is 300 pixels and 100 pixels respectively and apart from this the second div is also having the required padding of 20 pixels that we have provided over here so guys in this way you can easily use the Box sizing CSS property in order to be consistent as far as the dimensions of the HTML elements are concerned in your project this will help you in order to include the padding and the Border withd as well within the width and the height of the HTML element so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is flex box in CSS so stay tuned so now we will see Flex box in CSS so guys basically before the flexbox layout module there were four layout modes in the CSS so first of all we have the block model which is used for displaying the sections in a web page apart from this we also have the inline model which is used for the display of the text and then we also have the table model which is used for the twood dimensional table data and then we also have the position property in CSS which is used for explicit position of an element now guys we can use any of these models in order to display the content based on our website design now guys apart from this we can also use the flexbox layout module which we are going to check with the help of examples as well so the flexible box layout module makes it easier to design Flex ible responsive layout structure without using the float or the position property in the CSS so guys let us see a very simple example of the flexible box layout module so let us move to the vs code over here now before writing any code in this case what we are going to do is first of all we will understand how this flexbox module will work so guys basically we can arrange the HTML elements in the row direction or the column Direction so when we move from left to right over here it is the row Direction and and then when the HTML elements move from the top to bottom then it is called the column Direction in this case so guys simply we can provide the text over here that this is row Direction in this case and then apart from this we also have the column Direction over here so simply we are going to say column direction that is going from top to bottom so Guys these are the two directions in which the flexbox module will work now guys apart from this when we talk about the row direction we have two AIS that is the main AIS and the cross AIS so the axis that is moving from left to right is the main axis over here and the axis that is moving in the vertical direction that is top to bottom will be the cross axis over here so simply we are going to provide the vertical axis in this case which is the cross axis over here so guys basically this is the main axis that is going from left to right in this case and then apart from this the axis that is going in the vertical direction is the cross axis for the row Direction so guys this is a very simple understand understanding of the flexbox model so by default there is a row direction in which case the HTML elements will be placed in such a way that they will be placed from left to right direction and then we can also provide certain CSS properties in order to move the other HTML elements that is going beyond the screen on the right hand side to move at the bottom position as well which we are going to check with the help of examples and then guys in the row Direction itself we have the cross axis which moves in the vertical Direction Over over here now guys similarly when we say column Direction in the flex boox model so basically the main axis and the cross AIS will be opposite to each other so in this case when the flex boox model is in the column Direction the vertical axis will be the main axis over here so let me just draw that as well so simply we are going to draw the vertical axis in this case and then we also have the horizontal axis so this is the horizontal axis over here and in column Direction the vertical axxis is the main axis so let me just copy this main AIS text over here and paste it at the vertical Direction and The Cross axis will move from left to right over here which is this particular axis in this case so guys basically it is the reverse as far as the column direction is concerned so Guys these are the two things that you should know in the row Direction the main axis belongs to the left to right direction and the cross axis belongs to the vertical Direction over here whereas in column Direction the vertical axis is the main axis and the horizontal axis is the cross access so guys let us move to the vs code over here in order to check the examples so simply we are going to provide the container class over here so we are going to have the diff tag with the class container and then let us say we have four diff tags over here so we have the first diff tag as one in this case and then we have two three and then four now guys apart from this what we will do is we will make this container as the flexbox container so it is very important that when you are going to use the flexbox model you need to have the flex container as well so we are going to treat this particular parent diff tag over here as the flex container so simply inside the style. CSS file we need to provide the container class in this case and then simply we can say display it is equal to flex so guys this is the way that we can use the flex Box model and then apart from this let us also have certain background color so let's say we have the background color as the black color over here and then for the diff tag as well we are going to have certain CSS properties so guys over here we are going to have container and then inside the container we need to provide the CSS properties to all the diff tags over here so guys simply we are going to say background color of yellow color in this case and then we are also going to provide the padding property of 20 pixels over here let me just save this file now and try reloading this page on the browser so let us see how it looks like so as you can see the black color background is for the diff container which is a flex boox container over here and then apart from this we also have the flex items in this case that is 1 2 3 and 4 we have provided the required padding in this case but we can also provide the margin as well so that there is certain space in between the border of the container and the border of the individual Flex items over here so guys basically we can have the margin of 10 pixels for all the flex items so guys basically the container is called the flex container in this case and whatever items are present inside the flex container are called the flex items let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the margin of 10 pixels over here and this is a very simple example of a flex container in this case we can also have more items over here so inside the HTML file simply let me just provide two more div tags over here and the content we will provide it as five and six numbers let me just save this file now and try reloading this page once again on the browser browser so as you can see more items are getting added over here based on the HTML content that we have provided so guys this is the way that we can provide the flex container with the help of the display equal to flex value and then apart from this we can provide the different CSS properties for the flex items inside the flex container as well now guys apart from this we also have multiple other CSS properties over here so as you can see the flex container properties are first of all we have something called as Flex Direction so guys this is nothing but the direction that we have just understood with the help of these graphs over here so by default the flex direction is the row Direction over here we can change it to column direction as well so let us check that how it looks like so guys basically what we have to do is this Flex direction is the CSS property for the flex container so guys simply inside the container class we need to provide the flex Direction CSS property and by default the value is Row in this case so let me just save save this file now and try reloading this page once again on the browser so there is no change because this is the default value now guys instead of row we can also have row reverse over here in which case the items will be displayed from right to left in this case so basically by default the items are getting displayed from left to right in this particular direction but if we want the direction to be reversed that is from right to left we can change the flex direction to row reverse so let me just save this file now and try reloading this page once again on the browser so as you can see the items are now getting displayed from right to left first we have the div tag with the content that is one and then we have 2 3 4 and so on the content is displayed from right to left now guys apart from this we also have something called as column Direction over here so instead of having row reverse simply we can have the column value for this Flex Direction so guys what will happen is over here just we have understood with the help of the craft in the column Direction This is the main axis in which case the HTML elements will be displayed from top to left over here so guys let us check that as well when we change the flex direction to column the first element should be displayed at the top and then the second element should be displayed below the first element and so on all the elements will be placed in the vertical Direction over here so guys let me just reload this page once again so as you can see we have one and then followed by two and so on all the elements are getting displayed over here apart from this you can also set the width of individual element in this case in order to avoid the div element taking the entire width of the screen so guys in this way you can also use the column Direction over here and then you can also use the column reverse as well in which case the first element will be displayed at the bottom and Then followed by two and so on the last element will be displayed at the top so when we reload this page as you can see first we have the Sixth Element and then we have Fifth and so on the elements are displayed in the column reverse Direction so guys this this is the way that you can set the flex Direction over here apart from this we also have something called as Flex wrap so guys basically in order to understand this Flex wrap property what we have to do is we need to add more elements over here inside the container and also we need to make the flex direction as Row in this case which is the default value so guys let me just save this file now and try reloading this page so as you can see these are the elements that are getting displayed now what we will do is we will add more diff tags over here so let me just copy paste these lines of code and then let me just change the content over here so guys basically we are updating the content and let us set 14 number of div tags over here so guys we have 1 to 14 div tags in this case let me just save this file now and try reloading this page once again on the browser so if you notice we are going from left to right in this case 1 2 3 4 and so on you can see at the bottom we are getting the horizontal scroll bar over here and the content is going beyond the width of the screen in this case the last element is 14 over here now guys let us say whatever elements are going outside of the width of the screen in this case we want those items to be displayed below these items that is 1 2 3 and so on so basically we don't want this horizontal scroll bar to be displayed so guys what we can do is simply we can use this flag W CSS property so guys by default the value of this flx WRA CSS property is no WRA over here in which case all the elements will go beyond the width of the screen as you can see but when we set the value as WRA in this case so basically whatever elements that do not have any space left beyond the width of the screen will be displayed at the bottom over here within the same container so guys let me just save this file now after providing the W value to the flag W and reload this page once again on the browser so as you can see 11 12 13 and 14 are now getting displayed at the bottom over here in the same container so guys in this way you can also use the flag W CSS property when you have more number of HTML elements within the same container which is going beyond the width of the screen now guys apart from this we also have something called as Flex flow over here which is nothing but the shorthand CSS property for the flex Direction and flex rep CSS property so guys let me just remove both these properties over here and let us see how it looks like on the browser so as you can see it is in the row Direction and there is no wrap over here so simply we can provide the flex exp flow CSS property and let's say we want the row Direction over here so simply we provide row followed by the space character and then we provide the WRA value over here so guys basically we are providing the values for Flex Direction and flex wrap in this shorthand CSS property that is flex flow let me just save this file now and try reloading this page once again on the browser as you can see now the items are getting wrapped over here apart from this instead of having row value we can also have row reverse as well so that the items are displayed from right to left Direction so when we reload this page as you can see the first element is at the right and then we have 2 3 4 last element is 10 and then the other elements are displayed on the next line that is 11 12 13 and 14 so guys in this way you can use the flex flow CSS property which is the shorthand method for Flex Direction and flex rep CSS property now guys apart from this we also have something called as justify content which is used to align the HTML elements inside the Flex container over here so guys let us check that as well how we can use it so simply let us move to the row WP so simply let us change this value to row so that the flex items are getting displayed in the default Direction let me just reload this page so as you can see these are the HTML elements that are getting displayed inside the flex container now guys when we say justify content it is having multiple values so as you can see if we want to provide the HTML elements at the center of the container so simply we can provide the Center value let me just save this file now and try reloading this page once again on the browser so as you can see all the HTML elements now are being displayed at the center of this particular Flex container over here so let us check this with the less number of HTML elements over here so what we will do is simply we are going to keep the diff Tex from 1 to 5 over here and let me comment out the other lines of code let me just save this file now and try reloading this page so as you can see this is the center value of the justify content and if you want to align them at the left side of the container simply we can say the start value for this justify content over here let me just save this file now and try reloading this page so as you can see the elements are now getting displayed at the start of the container that is on the left hand side and then when we say end that means we can align the HTML elements at the right hand side of the container so guys as you can see the elements are getting aligned at the right hand side of this main axis based on the row Direction over here now similarly for the column direction as well we will have the justify content based on the main access so guys in the column Direction our top to bottom AIS becomes the main AIS over here and justify content will be used in order to align it based on the main AIS so I leave this up to you as a homework for you so that you can practice on your own apart from this we also have something called as align items over here so guys let us check that as well so what we will do is let us say we want to in increase the height of the container that is the flex container over here so simply we are going to set the height of flex container to 200 pixels and let us say we have the justify content as the center value so that all the HTML elements are displayed at the center so guys let me just save this file now and try reloading this page so as you can see the height of the flex container is now 200 pixels over here and all the HTML elements are now taking the entire height of this particular Flex container over here now guys what is the meaning of the Align items so basically just like how we have used the justify content in order to align the items horizontally that is at the main axis of this row Direction over here the Align items will be used in order to align these HTML elements against the cross AIS in this case the cross AIS is the top to bottom or the horizontal AIS over here so guys let us check that as well so simply we need to provide the Align items CSS property for this container class and then let us say we want to provide the value as Center over here let me just save this file now and try reloading this page once again on the browser as you can see vertically now all the HTML elements are at the center of this container similarly if we want all these elements to be present at the top of the container so we can say start value for this align items so guys if you notice when we say start the Align items work with the cross XIs over here which is is the vertical AIS in this case when we talk about the row direction of the flexbox model so let me just save this file now and try reloading this page once again on the browser so as you can see the HTML elements are now getting displayed at the top of this particular container and similarly if we want these elements to be present at the bottom of the container as far as the cross AIS is concerned we can simply provide the end value so when we reload this page as you can see at the bottom of the flex container we are getting all the HTM elements so guys this is the difference between the justify content and the Align items so basically the justify content work towards the main AIS of the flexbox model and the Align items work towards the cross AIS of the flexbox model now Guys these directions will change when we change the flex direction to column Direction over here so in this case the justify content will allow us to provide the HTML elements alignment towards the main AIS that is the the vertical axis over here and the Align items will help the alignment across the cross AIS over here which is the horizontal axis as far as the column direction is concerned now guys apart from this we also have something called as align content over here so guys in order to understand this we need to uncomment these lines of code over here so that we have more number of HTML elements let me just save this file now and also for the Align items over here we will keep the alignment as the center value in this case that means me just reload this page once again over here as you can see we have all the HTML elements we have the Align items as the center and also the justify content as the center now guys the Align content CSS property will help us in order to provide the spacing between these HTML elements as far as the cross AIS is concerned so guys let us check that as well so what we will do is simply we can say align content over here and there are multiple values in this case so let's say we provide space around value so guys let us check how it looks like so when we save this file now and try reloading this page once again on the browser notice that we have the same space on the top and at the bottom of all the HTML elements over here and that is how the space around value will work and then apart from this we also have something called a space between over here let me check that as well so when we reload this page once again on the browser as you can see at the top of the first line and at the bottom of the second line over here we have the equal space and the equal amount of space is present in between all these HTML elements as far as the cross AIS is concerned apart from this we also have another value that is space evenly over here so let us check that as well so when we reload this page as you can see on the top at the middle and at the bottom as well all the spaces are equal in this case so guys based on your project requirements you can simply provide different values for the Align content CSS property which is part of the flex container over here so Guys these are some of the CSS properties that you can use based on your requirements as far as the flex container CSS properties are concerned now guys apart from this the flex boox model also allows you to center a div element very easily using display equal to flex value so guys I leave this exercise as a homework for you simply you can provide a justify content equal to Center and also the Align items as the center value over here so guys just by setting these two CSS properties you can provide the diff tag at the center of the container just like how we have done with all these multiple HTML elements now guys apart from this we also have some of the flex item properties over here so previously whatever properties we have seen belongs to the flex container over here which we have mentioned inside the dot container class but we can also provide the CSS properties to the flex items which are represented by these diff tags over here so guys let us check that as well so what we will do is first of all we have something called as order over here so guys let us check that as well so basically we are going to reduce the number of flags items that are getting displayed to four diff tags over here so we have one to four diff tags let me just save this file now and try reloading this page once again on the browser notice that we have the justify content as Center and also the Align items as Center over here so as you can see these are the CSS properties that are making us display the diff tags at the center of the container now guys let us say we want to change the order of these diff tags over here so it is not necessary that all the diff tags that you have provided inside the HTML file needs to be displayed in the same order so let's say we have the ID for this fourth diff tag S4 over here so what we have to do is we need to provide the order CSS property inside this particular HTML element so guys let me just save this file now and we will copy this ID over here of the diff tag that is four in this case and then we will provide the hash character followed by the four that is the ID of the fourth di tag and simply we can say order equal to minus1 so guys basically by default the order of the HTML elements is zero over here so simply we can provide minus one in this case so that this is given the highest priority so let me just save this file now and try reloading this page once again on the browser notice that the fourth element is now getting displayed first for followed by 1 2 3 which are having the other order values now guys apart from this let us also provide the ID for the second div element that is two over here so simply we will provide the ID as two let me just save this file now and over here we will provide this ID in this case and what we will say is the order it is equal to one so let me just save this file now and try reloading this page once again on the browser notice that the second element is now getting displayed at the end in this case so guys by default we have the order as zero for first and the third element for which we have not provided the order property and for the fourth element we have order equal to minus1 which is then given the highest priority and then the least priority is given to the two which is having order equal to 1 so guys lesser the number will be having more priority as far as displaying that HTML element inside the container is concerned so guys this is one of the CSS property for the flex item over here apart from this we have something called as Flex grow in this case so guys if you notice there is a lot of space that is available at the left hand side and the right hand side of all these Flex items over here so what we can do is we can occupy that space by using the flex grow CSS property so let's say by default the width of all these three items that is 1 3 and two is same over here and the remaining space that is present on the left and on the right we want it to be occupied by this first element that is the diff tag having the content 4 so guys what we can do is simply we can provide Flex grow CSS property to this diff tag that is having the ID equal to 4 over here and then simply we can provide the value as one by default the flex grow the SS property is having the value as zero but simply we can provide the value as one in which case only this particular diff tag that is having the id4 which means only this first box over here will expand itself horizontally in such a way that the entire available space will be occupied IED by this fourth element over here so guys let me just save this file now and try reloading this page once again on the browser so as you can see the entire available space is now being taken by the fourth element over here and the remaining space is being taken by the other elements over here so guys in this way you can also provide the flex grow CSS property now guys apart from this let us say we want the second element that is having the id2 over here which is at the last place in this case we want that element as well to expand but it should double compared to the fourth element which is displayed at the first position so guys what we can do is simply we can provide Flex grow it is equal to two over here so guys what will happen is the flex grow CS property for 1 and three will be zero which means they will take only this particular space or withd inside the container and then for the fourth element we have the flex grow equal to 1 but we have the double of this one which is equal to two Flex grow for this particular second element so guys basically the width of this this particular second element will be double compared to the width of this particular fourth element over here and accordingly the space will be provided to both these elements so guys let me just save this file now and try reloading this page once again on the browser so if you notice the width of the second element is double compared to the fourth element over here and one and three are taking the required spaces that which they were taking at the original state so guys in this way you can provide the flex grow CSS property as well now guys apart from this we also have something something called as Flex shrink which works opposite to the flex grow so it will reduce the size of the HTML element as far as its functionality is concerned so guys I'll leave this up to you as a homework for you so that you can practice on your own apart from this we also have something called as Flex bases so guys basically this will help us in order to set the initial width of a HTML element so guys let us check that as well so what we will do is let us say for this first element we provide the ID as one over here and simply we will provide the CSS property for this ID 1 so guys let me just provide the CSS property of flex bases over here so what we can do is simply we can provide the width of 100 pixels as the original width for this particular first element so guys simply you can provide the initial width with the help of the flex basis CSS property let me just save this file now and try reloading this page once again on the browser notice that the first element is now having the 100 pixels over here followed by the third element which is having the required with as necessary and then apart from this we have Flex grow equal to 1 for this fourth element and flex grow equal to two for the second element over here so in this way you can use the flex basis CSS property and then we also have something called as Flex CSS property which is nothing but a shorthand method in order to provide all these CSS properties that is flex grow Flex shrink and flex bases over here so guys this as well you can practice on your own as a homework for you and then apart from this we also have something called called as align self so guys basically it is similar to the Align content that we have seen for the flex container CSS property but when we say align self basically the value that we provide for the Align self will override the value that we had provided in the Align content over here so guys let us check that as well in the flex container that is the container class we had provided the Align content as space evenly over here and they are at the center of the container so guys apart from this we have something called as line self over here which is similar to the Align items that we had provided in this case inside the flx container CSS property so guys whatever value we provide to the Align cell will override the value of the Align items that we had provided so guys let us check that as well so what we will do is first of all in the container that is the flx container over here we will comment out this line of code that is align content and then guys for this align items we have Center value so let me just check that as well so when we reload this page as you can see all the items are at the center as far as the vertical axis that is the cross AIS is concerned now guys let us say we only want this fourth element to be at the start of this container that is at the top of the container over here so simply we can use the Align self CSS property specifically for this particular selector that is having the ID equal to 4 so guys simply we can provide aligned self CSS property over here and we can provide the value as start and in this case so guys when we say Flex start over here let me just save this file now and try reloading this page once again on the browser so as you can see now the fourth element is getting displayed at the top of the container because of this Flex start value that we have provided to align self so guys simply the Align self CSS property is used in order to align the specific HTML element that is the flex item inside the flex container we can also have the Align self CSS property for the second element as well so over here we can provide the Align cells and let's say we provide the flag and value so basically the second element should be displayed at the bottom of the container so let me just save this file now and try reloading this page once again on the browser so as you can see the second element is now getting displayed at the bottom of this container so guys in this way you can use all these Flex items CSS property based on your project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Media queries in CSS so stay tuned so now we will see media queries in CSS so guys basically the at media rule introduced in CSS 2 made it possible to define the different style rules for different media types and this we are going to check with the help of examples as well there are different types of media over here as you you can see the first type is all which is used for all media type devices apart from this we also have the print value which is used for the print preview mode and then the most commonly used that is the screen value which is used for the computer screens tablets smartphones Etc so guys basically we are going to check the examples with the screen media type over here and basically the important implementation of this media queries is used in such a way that when you want to provide different CSS properties for small screen devices such as smartphones or the tablets you can use the media queries over here which we are going to check with the help of examples now guys the commonly used media features are orientation then we have Max height and Min height apart from this we also have the max width and mean width over here so guys let us check the examples of the media queries so let us move to the vs code over here and simply I'm going to remove the previous lines of code that we had written in the HTML and the CSS files in this case now guys what we are going to do is when we are going to reduce the screen width that is towards the tablets or towards the smartphon screen width we are going to change the background color with the help of the media rule over here so guys let us check this feature over here so inside the body tag we are simply going to have the diff tag over here and simply we are going to have some random text in this case with 10 words over here so guys basically this is the Mt abbreviation that helps us in order to Generate random text let me just save this file now and try reloading this page on the the browser so as you can see we have the diff tag with the simple text over here now guys we are going to provide a different background color for the body tag in this case originally so let us have the background color CSS property and let's say we have the value as Aqua for the body tag over here let me just save this file now and try reloading this page as you can see we have the background color for the body tag in this case now guys let me quickly open the console over here so when we are going to increase or decrease the width over here in this case as you can see these are the numbers that is the width and height that are getting displayed over here for this particular screen so guys by default we have this particular background color that is aqua over here but we are going to decrease the screen width and let's say below 500 pixels of the width we want to change the background color of the body to yellow color over here so we can simply use the media query in this case so let us check that as well so inside the style. CSS file we are going to use at theate character over here and simply we are going to use the media so guys this is the keyword that we are going to use and Then followed by the space character we can simply omit this particular option that is screen option over here or we can provide this value so that the media query is applied only to the computer screens tablets and smartphones and other types of screen so guys basically we are going to provide the value that is screen over here and then followed by the end keyword and then inside the open and close parenthesis we want the Max WID to be 500 pixels over here so guys below 500 pixels we want the background color to be updated which is not updating right now so currently it is 601 pixels that we can see so simply we are going to set the max withd it is equal to 500 pixels so guys inside this we are going to provide the body tag over here for which we are going to set the background color as yellow color over here so guys what is the meaning of this media query so simply we are using the media key word after the etherate character and Then followed by the media type that is screen over here and then followed by the end character and the meaning of this Max width is basically 500 pixels is the maximum value for the screen width over here so any screens that are below 500 pixels should have the background color as yellow for the body tag over here so let's say we have any of the smartphone in this case or the tablet which is having the width below 500 pixels for that particular screen the background color with will be displayed as yellow and the screen width which is more than 500 pixels such as for the desktop computers for that particular device we are going to have the background color as Aqua so guys let us check this let me just save this file now and try reloading this page once again on the browser notice that currently we have the default value that is equa but when we reduce the screen width as you can see we have moved to 572 pixels over here and then we are reducing it towards the 500 pixels slowly so we are reducing it so currently it is 5.67 and when we reduce it next as you can see the background color is now updated to yellow color so guys simply in this way we can reduce the screen width and test this particular media query over here and whatever device is having the width below 500 pixels will have the background color as yellow for this particular page that is getting displayed and when we increase the width over here above 500 pixels again the background color is updated to aqua color over here so guys this is the main function ity of having the media queries it helps us in order to provide the certain CSS properties to different devices that are having different screen width or the screen height as well so guys the other parameters that we can use is orientation then we have the height as well which involves Max and Min height and then we also have width which is Max width and Min width in which case we are currently using the max width over here apart from this we can also have another condition over here so let's say we want the max with to be 300 pixels and Below 300 pixels we want some other background color so let me just copy these lines of code over here and we are going to have similar media query but this time we are going to have the max width equal to 300 pixels in this case so whatever devices that are having the screen with lesser than 300 pixels should have some other background color so let's say we have this chart reuse background color over here let me just save this file now and try reloading this page once again on the browser so current currently we have the aqua color that is the default color which will be displayed on the desktop computers and then let's say when we reduce the screen width to below 500 pixels it is having the yellow background color which will probably correspond to the tablet screen size and then let's say we have Max with equal to 300 pixels which might correspond to some of the smartphone devices so let us say we go beyond the 300 pixels which means we are reducing the screen width to lesser than 300 pixels over here so as you can see we have a different background color over here now guys let us say when we move towards this particular width that is below 300 pixels we want to hide this particular diff tag so what we can do is simply inside the same media query we can have the diff tag that will help us in order to identify this particular diff tag inside the body tag over here and simply we can provide the display property equal to none so guys basically what this will do is when the screen width is below 300 pixels the tag will be hidden over here let me just save this file now and try reloading this page as you can see we are below 300 pixels that's why we cannot see the diff tag over here so currently we have the screen width of more than 500 pixels over here let us reduce it to below 500 pixels as you can see we have the yellow color and the diff tag is getting displayed now let us reduce to less than 300 pixels over here as far as the screen WID is concerned so as you can see when we move from 305 over here to 298 this the the background color is updated to the Chart reuse color and the diff tag is getting hidden over here so guys in this way we can simply use the media queries in order to provide the different CSS properties as far as the screen width orientation or the height is concerned so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is flex response in CSS so stay tuned so now we will see Flex responsive in CSS so guys basically we are going to check the example of a responsive design over here with the help of the CSS Flex Box model and we are going to use the flex Direction in this case so guys inside the flex boox model we are going to update the flex direction to column when the screen size reduces to 400 pixels or below so guys by default we are going to keep the flex direction of the flex box as over here for the desktop computers and then when the screen size reduces to let's say the size of the tablet or the smartphone over here which can be below 400 pixels we are going to change the flex direction to column so guys let us move to the vs code over here and let me just remove the previous lines of code that we had written in the HTML and the CSS files over here now guys simply we are going to have the diff tag with the class container over here and then apart from this we are going to have two diff tags inside this class class container the first diff tag is having the content that is one over here and the second diff tag is having the content that is two we are also going to have the ID that is 1 and two for both these div tags over here so guys this is the content that is div 1 and diff two which are having the IDS one and two over here inside the class container now guys we are going to make this diff tag that is having the class container as the flex container over here which is one of the first important step as far as the Xbox model is concerned so simply we are going to copy this class name over here and inside the style. CSS file for this container class we are going to make the display it is equal to Flags in this case and let us have the background color as yellow color over here so guys simply we have the yellow color is the background color in this case let me just save this file now and try reloading this page on the browser so as you can see we have the content that is one and two over here now guys let us provide certain CSS properties for this Flex items as well so simply we will be using the dot container class over here and then inside this we are going to provide the diff tags in this case now guys let us provide the padding as 20 pixels for both these diff tags over here and then apart from this we are also going to provide the background color as black color let me just save this file now and try reloading this page as you can see we have the diff tags that are getting displayed over here but we cannot see the content that's because the color of the text is black color and the background color is also black so let me just set the color to white in this case which is the text color so as you can see we are getting one and two over here now guys let us provide the CSS property that is flex in such a way that both these Flex items takes the entire width of this Flex container over here so what we can do is simply we can provide the flex value it is equal to one in this case so both the diff tags are having flag equal to 1 so the entire remaining space will be taken by both the diff tags so let me just reload this page as you can see we have one and two over here let us change the background color of this first element that is the first diff tag to some other color over here so that we can identify both the diff tags separately so what we can do is simply we will use the ID of this diff tag that is one over here and we will use the hash character in this case and then we will be using the background color and we will provide the value as blue over here for the background color CSS property let me just save this file now and try reloading this page as you can see we have the blue color is the background color for the first diff tag and the black color as the second diff tag over here now guys if you notice both the diff tags are getting displayed in the horizontal direction that is by default the flex direction is Row in this case so let us open the console over here so that we can increase or decrease the width of the screen so as you can see the width is getting displayed over here on the top right hand side when we decrease and increase the width over here so guys basically this is withd width multiplied by height in pixels that is getting displayed in this case now guys what we will do is we want the 400 pixels to be the thresold value and below this 400 pixels we want this second element to be displayed below this first element so that on smartphone or the tablet devices the HTML elements are displayed in the vertical Direction over here so guys what we have to do is we can use the media query over here by default the flex container is having the flex direction as row Direction but when the width of the screen is reduced to 400 pixels or below we want the flex direction to be the column Direction over here so simply we are going to use the media query in this case so we use at theate character followed by media screen over here and then apart from this we have the end keyword and then we provide the max with CSS property inside the parenthesis now guys the max with CSS property should have the value of 400 pixels because that is the threshold value that we are looking for and then when the width is below 400 pixels we want this Flex container to have the flex direction as column Direction over here so simply we are going to use this class name that is container in this case and then we will simply change the flex direction to column over here so guys this is the way that we can change the flex direction from row to column based on the max width of the screen device so let me just save this file now and try reloading this page once again on the browser notice that previously we were not getting this second item below below the first item over here when we increased or decreased the width of the screen now guys when we decrease the width of the screen now after reloading the page currently it is 404 pixels when we reduce it to below 400 pixels as you can see the second element is now getting displayed below the first element over here and in this way you can easily create the responsive design for your web page based on your project requirements now guys when we increase the width of the screen to more than 400 pixels again the flex direction is now set to row Direction and the HTML elements are now getting displayed from left to right and then when we reduce the screen width now the second element is going below the first element over here so guys in this way you can easily create the responsive web design based on the flexbox model and also the media queries that you can use based on the different screen devices so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is creating navigation bar using flexbox in CSS so stay tuned so now we will see how we can create a navigation bar using flexbox in CSS so guys basically we can easily create a navigation bar that is horizontal or vertical direction using the flexbox model in CSS so let us move to the vs code over here and simply we are going to remove the previous lines of code that we had return in the HTML and the CSS files now guys what we will do is simply we will have the D tag with the class that is naar over here and then inside this we will have more div tags inside which we are going to have the links which will help us in order to navigate through different pages of the website so guys first of all we have the homepage over here and then apart from this similarly we will have more links such as blog in this case and then we will have videos as well and then apart from this we will have the about page as well so guys we have the four items inside the navigation bar over here let me just save this file now and try reloading this page on the browser so as you can see this is the default way in which the links that is the a tags are getting displayed over here now guys what we can do is simply we will make this class that is naar which is the div tag as the flex container over here so let me just copy this class name in order to make this as a flex container we can provide it inside the CSS file and then simply we can provide the display property equal to Flags over here and then apart from this we will have the background color as black color for this navigation bar over here let me just save this file now and try reloading this page once again on the browser so as you can see the items are getting displayed with the dark blue color over here in the horizontal Direction because the flex direction is row by default for this particular Flex container now guys apart from this we have the margin over here by default at the top left and the right direction over here so simply we are going to provide the star character inside which we will make the margin as zero and also the padding as zero in this case so guys let me just save this file now this is used in order to remove the spaces at the top left and right direction of the navigation bar now guys apart from this we will also provide certain CSS properties for these Flex items that you can see so first of all we will use this Nave bar class over here after the dot character and then for the diff tag we are going to provide certain CSS properties over here and then after that we are going to provide certain CSS properties for the a tag as well inside the diff tag which is present inside the flex container so first of all let us provide the CSS properties for the a tag and then we will provide the color as the white color over here because currently it is the default color that is dark blue color you can see in this case and also we are going to provide the text decoration CSS property as none so that there is no underline for the different links that are getting provided so let me just reload this page once again on the browser as you can see these are the links that are getting displayed over here now guys for the diff tag we need to provide certain padding in this case so let's say we provide five pixels of padding over here from all the four sides let me just reload this page as you can see we have provided certain padding over here for the diff tag and then guys what we will do is when we get the mouse cursor on these links over here which is the flex items that are the navigation items in this case inside the navigation bar we want to change the background color of the diff tag so what we can do is simply I'm going to copy this line of code over here that is name bar and then inside this we have the T and then onover event so in this case we are going to use the Pudo class that is hover in this case we can provide the background color over here so simply we can say the value as red color in this case so guys basically this will help us in order to change the background color to red when we get the mouse Cur on the different diff tags that are present as the flex items inside the flex container so guys let me just save this file now and try reloading this page once again on the browser when we get the mouse cursor now on this diff tag as you can see the background color is now getting updated to red color over here so guys in this way we have easily created the navigation bar just by using the display equal to flex and then we have provided certain CSS properties for the flex items which are nothing but the links inside the navigation bar now apart from this we can also display these items at the center of the navigation bar as well so what we can do is for the flex container that is having the class Name Bar simply we can provide the justify content CSS property and simply we can say Center as the value by default the value is start over here which helps us in order to display this Flex item at the left hand side of the screen but when we say Center value it will display all the flex items at the center of the flex container so when we reload this page once again as you can see all the items are now getting displayed at the center of the flex container over here apart from this if we want all these items to be displayed on the right hand side of this particular Flex container simply we can say end value over here for the justify content let me just reload this page once again so these are the navigation items that are getting displayed at the right of the flex container over here we can also increase the padding as far as the left and the right padding is concerned so basically we have provided five pixels from all the four sides so we can provide the 10 pixels to the left and right direction so guys basically the first unit is corresponding to the top and bottom padding over here and the second parameter is representing the left and right padding over here let me just reload this page once again on the browser so as you can see we have the padding that is increased over here now guys apart from this if you want to add more navigation items over here simply you have to come to the HTML file and you can copy paste these lines of code over here and then let us say we want another item to be S map over here and then the next item that is the sixth item to be contact us over here so guys simply we can provide the different menu items inside the navigation bar let me just save this file now and try reloading this page once again on the browser so as you can see automatically the number of navigation items have increased and you don't have to change anything inside the CSS file once you have set all these CSS properties with the help of the flex container over here now guys apart from this when you decrease the width of the screen over here so let me just open the console in this case so as you can see when we increase or decrease the width of the screen basically the navigation bar is still being displayed as the horizontal navigation bar how do we display it as a vertical navigation bar when the width of the screen is less than 500 pixels over here so in this case we can simply use the media query over here so what we will do is inside the CSS file we will use at theate and and then we will use the media screen query over here and then after this we will have the end keyword and inside the parenthesis we will provide Max width in this case as the CSS property and it should be 500 pixels over here now guys when the width of the screen is 500 pixels or below we will be using the CSS properties inside this media query to be implemented on the web page so guys we will be having the Nave bar class over here inside the media query and for this Nave bar that is the flex container we need to provide the flex direction as horizontal so guys what this will do is basically the flex direction is Row in this case which is the default Flex Direction value and that is how we are able to display this navigation bar from left to right over here in the horizontal Direction but when we decrease the width of the screen we want this navigation bar to be displayed in the vertical Direction over here so simply we will set the flex Direction equal to column in this case which will help help us in order to display all the items in the vertical Direction when the screen width decreases to below 500 pixels so let me just save this file now and try reloading this page once again on the browser currently the screen width is more than 500 pixels but when we reduce the width of the screen so as you can see currently it is 5502 pixels and then when we move it below 500 pixels over here you can see that the items are now getting displayed in the vertical Direction over here and in this way you can easily change the navigation bar from horizontal to the vertical Direction based on the width of the screen in this case so guys this is one of the important implementation as far as responsive web design is concerned so basically your web page or websites will be used on different screen devices which will have different width so guys basically the desktop computers and the smartphones and the tablets all have the different screen sizes over here and accordingly you need to handle all these HTML elements so Xbox model helps you in order to create the responsive web design so that the user experiences better on all the screen devices so guys in this way you can create the horizontal and the vertical navigation bar based on your project requirements with the help of the flex container over here and the media query as well that we have seen with the help of the examples so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is simple responsive design using flexbox in CSS in which we are going to create a simple UI using the flexbox model in CSS so stay tuned so now we will see a simple responsive web design using the flex box in CSS so guys in this example we will create a simple responsive design using flexbox model so let us move to the vs code over here and simply I'm going to remove the previous lines of code inside the HTML and the CSS files now guys what we are going to do is simply we are going to create a div tag with the class container over here inside this div tag first of all we will have the header class over here which means we are going to have the diff tag with the class header and inside this we will say this is heading so guys we can have the heading for the web page in this case and then apart from this we will also have another class that is row over here that will will have certain content now guys inside this row class that is the diff tag with the class row we are going to have three elements over here first of all we will have the navigation bar that that will be a vertical navigation bar over here so we have the na bar inside which we will have four items over here so we will have the diff tag inside the diff tag we will have the links with the help of the a tag over here so we have the hash character for the HF attribute and then we are going to have the home as first item inside the navigation bar and then similarly we will have other items over here so guys let us say we have blog in this case as the second item then we have the videos as well and then we will have the about section over here because apart from this inside the same row we are going to have the main content diff tag as well so simply we are going to say content over here and then we are going to say a simple statement that is this is a div tag with content so guys basically in order to identify that this is the content tag over here we have provided a simple statement in this case and then apart from this we can also generate certain random text in this case so guys let us say we have 40 words as the random text that is getting generated over here and then guys apart from this in the same row on the right hand side we will have another diff tag which will be the content at the right hand side so simply we will have the class name that is content and Then followed by Hyun and then we have the right keyword over here and in this case we will say this is a d tag with right content so guys basically we have a simple statement over here and then apart from this we will have certain random text that is getting generated this time we will have only 10 words over here so guys this is the HTML content that we have written inside our web page which we are going to make responsive so guys let me just save this file now and try reloading this page on the browser so as you can see this is the content that we have provided which is getting displayed from top to bottom over here now guys inside the style. C CSS file we need to provide certain CSS properties in such a way that we need to make this web page as a responsive web page so first of all we will make use of this container class over here and we will make it as a flex container in this case so guys basically we will make use of this display CSS property and the value we are going to use is flex over here and then apart from this what we will do is we will set the flex direction as column in this case so that all the elements are getting displayed from top to bottom that just save this file now and try reloading this page once again on the browser as you can see all the elements by default were displayed from top to bottom and there is no change over here now guys for the heading part what we will do is we will make use of this class name that is header and we will provide certain CSS property for this header class over here so guys first of all we will change the background color to yellow in this case apart from this we will also have the margin bottom property and we will set it to 10 pixels over here we will also set the padding as 20 pixels in this case also we want to set the font size over here to let's say 2 em in this case so basically it will be two times the default font size over here let me just save this file now and try reloading this page so as you can see we have this is heading text over here and it is also having the background color as a yellow color over here and it is also having certain margin bottom property as well now guys what we will do is this row container that we have that is the diff tag with the class row we want to make it as a flag F container which should be having the flex direction as the row Direction so that all these elements are getting displayed from left to right instead of top to bottom so guys inside the style. CSS file over here simply we will use the class name that is Row in this case and we will use the display property we will set the value as Flex in this case and the flex direction should be equal to row over here which is the default value let me just save this file now and try reloading this page once again on the browser so as you can see the Nave bar is displayed on the left and then we have the main content that is at the middle and then the side content that is present on the right hand side over here now guys we will also provide certain spacing in between them so let us provide those CSS properties as well so what we will do is inside the row whatever diff tags are present we want certain padding and the margin to be provided over here so we have the diff tags inside the row class over here and simply we are going to provide certain padding in this case so let's say we have 10 pixels of padding let me just save this file now and try reloading this page so as you can see we have the padding that is getting applied over here now guys the padding is also getting applied to the diff tags inside the Nave bar as well so in order to avoid that we want the padding to be applied to the direct diff child of the row class over here so that only these diff tags that is the Nave bar then the content and the content right classes should have the padding and not these div Texs which are the part of the navigation items so guys let me just save this file file now after providing this greater than symbol which means the direct child should be affected with these CSS properties over here and when we reload this page as you can see now there is no padding that is applied to these navigation items over here and we have also provided the spacing in this case now guys let us provide certain CSS properties to this navigation bar and make it a proper vertical navigation bar over here so what we can do is simply for this Nave bar we will make it as a flex container which will have the flex Direction as column over here so guys we have the Nave bar class name in this case we will have the display equal to flex over here and the flex direction should be column in this case so guys basically we have the column value let me just save this file now and try reloading this page so as you can see there is no change right now so guys inside this name bar we want the a tags to be having certain CSS properties and also the diff tags as well so guys what we will do is simply I'm going to copy these lines of code over here and then inside the na bar we have the diff tags in this case which should have certain padding over here so guys basically we will have the padding of five pixels this time and then for the na bar as well we are going to have certain background color so let's say we have the value as Aqua which is the background color for the na bar let me just save this file now and try reloading this page so as you can see we have the padding and the background color that is getting displayed over here now guys apart from this for the ax as well we want to provide certain CSS properties so inside the naar class name we we have the diff tag followed by the a tag over here first of all we will set the color equal to Black so basically this is the text color that we are setting and then apart from this we also want the text decoration to be none so that the underlines that are getting displayed over here should not be displayed so let me just save this file now and try reloading this page once again on the browser so as you can see there are no underlines over here now guys when we get the mouse cursor on these diff tags what we want to do is we want to change the background color so guys what we can do is simply we will copy these lines of code over here and we need to provide the hover event for the diff tags in this case for which we want to change the background color so guys basically we want to change the background color to this chart reuse color which is a light color over here let me just reload this page so as you can see the background color is now getting updated when we get the mouse cursor on one of the items for this navigation bar over here so guys in this way we have completed the CSS properties for the navigation bar you can provide your own CSS properties for the navigation bar while you're practicing on your own now guys apart from this let us say we want the width of this particular content to be four times larger compared to this particular navigation bar and two times larger compared to the right content over here so guys we can use the class names in this case so what we will do is the na bar should have the flex equal to one over here so simply we will come to this Nave bar in this case which is a container and we will say Flex it is equal to one in this case basically it is a container as well as it is the flex item inside this row container over here and then apart from this we will also have the class names that is content and the content right in this case so guys basically we will have the dot content over here for this Flex item we will set the flex S4 in this case basically this Flex CSS property is nothing but it is flex grow over here but we are using the shorthand method that is the flex CSS property and then apart from this we will also have the content right class name and then for this class name we will set the flex value equal to two so guys let us check that as well when we set the flex equal to two and also we will change the background color to Aqua background color once again so that the colors are same for the navigation bar and the right hand side content as well so let me just save this file now and try reloading this page once again on the browser so as you can see we have the flex equal to one for this navigation bar and four * Flex for this particular content in the middle and two times Flex for this right hand side over here if we want to change the width of this content in this case we can simply increase the flex number for the content class name so let us check that as well so instead of having the four number we can have six in this case let me just save this file now and try reloading this page once again on the browser so as you can see the width of this content has increased to six times compared to the navigation bar over here and three times compared to the right hand side content over here because we have provided Flex equal to 2 for this right hand side content so guys this is a very simple basic design of the website or the web page that we have created over here now guys what we want to do is let us open the console in this case and when we decrease the width of this particular screen we want the flex direction of this row container over here to change to the column Direction so when we change the width of the screen now as you can see it is not completely responsive and now we are getting the horizontal scroll bar over here but we need to use the media query in such a way that when the width of this particular screen is less than 500 pixels then all the items inside this particular row should have the flex direction as column and also the navigation should have the flex direction as row over here because currently it is the column Direction in this case so guys what we will do is we have to set the media query in such a way that the max width should be 500 pixels over here so let us check that as well how we can implement it so basically we use aate character followed by media screen over here and then after this we provide the end keyword and then we have inside the parenthesis the max with CSS property over here after which we provide colon and then we see 500 pixels over here now guys for this particular situation in which case when the screen device width is less than 500 pixels we want to set the flex direction of this particular row to column over here so basically this Flex direction is equal to row but we want to change it to column when it is less than 500 pixels so simply we provide row class name over here and then we say Flex Direction it is equal to column in this case and then guys apart from this the flex direction of the Nave bar it is currently column over here we need to change it to row in this case so basically the items that are getting displayed from top to bottom we want to display it from left to right when the width of of the screen is less than 500 pixels so guys let us change that as well so over here within the same media query we will provide the class name that is naar over here and then we will change the flex Direction it is equal to row this time so let me just save this file now and try reloading this page once again on the browser notice that we don't have any change right now because the width is greater than 500 pixels and when we reduce it to less than 500 pixels over here so as you can see currently it is 500 7 pixels when we reduce it to less than 500 pixels the Nave bar is also changed from column to row Direction over here and the entire row content is now getting displayed from top to bottom in this case so guys in this way we have handled the situation in which case when we want to see this particular web page on a screen width that is below 500 pixels we can use this media query over here you can provide any of the measurement over here for the max width based on your project requirements and then your responsive web design will be updated accordingly when the user accesses your web page on different screen devices so guys in this way you can make a simple responsive web design and practice on your own based on the different measurements of the screen devices either you can display the flex Direction in the row direction or the column Direction So currently it is in the row Direction over here as you can see but when we reduce the screen withd to below 500 pixels now it is in the column Direction and the na bar is in the row Direction over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video till then stay tuned so now we will see grid layout in CSS so guys basically the CSS grid layout module offers a grid based layout system with the help of rows and columns which makes it very easy to design the web page is without having to use the float and the position CSS properties that we had seen previously so guys we will check with the help of examples how you can easily design the web pages with the help of the grid layout using CSS so guys first of all we will understand the concepts of rows and columns in the grid layout in CSS so over here on the browser let us move to the sketch pad first of all so guys what is the meaning of grid layout in CSS so basically we have the concept of rows and columns as far as the grid layout is concerned so basically the horizontal lines as you can see this is one row over here and then we have the second row in this case so this is the second row that we have included and so on there can be multiple rows in the grid layout over here so guys let us label these rows in this case so let me add the text over here so basically we have Row one over here so basically this is Row one and then guys similarly we have row two and Row three as well so these these are the three rows that we have included in our grid layout now guys similarly we have the columns as well that can be defined as far as the grid layout is concerned so basically the vertical lines that are going from top to bottom these are the columns that can be defined inside the grid layout so let us have three columns over here so as you can see these are the column 1 2 and then three respectively so guys basically the grid items are aligned in such a way that they will be present in the row and the column format over here and then guys we also have some more properties such as column Gap so over here you can see that there is a gap over here in this case so this is nothing but it is a column Gap that we can Define with the help of CSS properties that we are going to see and also there's a gap between the row over here between Row one and row two and then between row two and Row three so Guys these are nothing but the row gaps and the column gaps that we are going to Define by default there will be no gaps between the rows and columns but we can include them with the help of CSS properties so guys this is the basic understanding as far as the grid layout in the CSS is concerned so guys let us check some of the examples now basically we can Define the container as a grid layout with the help of the display CSS property so guys let us move to the vs code over here and simply we are going to define the diff tag with the class container and inside this container we are going to have multiple grid items so guys let us say we have the tag with the class item over here and the first item is having the number one so guys similarly we are going to have multiple items in this case so guys as you can see we have the div Tex with the numbers from 1 to 9 let me just save this file now and try reloading this page on the browser to see how it looks like so as you can see these are nothing but the diff tags that are getting displayed from 1 to 9 and since by default the diff tags are having the display equal to block that is why all the numbers are getting displayed on the new new line over here guys let us provide certain CSS properties now in order to make a grid layout out of this container over here so guys basically we have this class container in this case and then what we will say is display it is equal to grid this time so that we can make a grid layout out of it now guys apart from this we will also have certain background color so that we can identify the background of the container as well as the items over here and then we will also have certain padding that we can provide so padding is equal to 20 pixels in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the background color for the grid container over here now guys by default the grid layout is having just one column over here let us provide certain CSS properties to this diff tags as well which is present inside the container so over here we will provide container class and then followed by the space character and Then followed by the diff tag which means whatever diff tags are present inside the container will have these CSS properties that we are going to Define so guys first of all let us have certain background color over here so let's say we provide the background color of yellow in this case and also we will provide the padding of 10 pixels over here let me just save this file now and try reloading this page one again on the browser so as you can see we have the yellow background color for all the diff tags inside this container grid layout and all the diff tags currently are display played on the new lines over here now guys let us say we want to arrange all these items into three rows and three columns just like how we have designed the layout over here so what we can do is inside the container class in this case we have the CSS property that is grid template columns and then guys inside this grid template columns CSS property we can Define how many number of columns we want inside our grid layout so guys by default it is just having one column over here and we are supposed to provide the width of all the columns which are separated by the space character so guys let's say we want the width to be set automatically by the browser so simply we can provide the auto keyword now this means only one column will be present so let me just save this file now to show how it looks like and reload this page on the browser as you can see there is no change right now that's because we are telling the grid layout to have only one column over here in order to have multiple columns we need to provide the space character and provide the second parameter as well you can provide any width in terms of pixels or any other length measurement over here we are setting it as Auto in this case so basically this is the two column grid layout since we have provided Auto keyword twice over here let me just save this file now and try reloading this page once again on the browser so now if you can see the first div element that is having one is displayed over here and then we have the second column in this case now guys in order to identify these two columns colums over here let us provide certain column Gap like we have seen in our design these are nothing but the column gaps in between the columns so how we can do that so again over here we can provide the column Gap CSS property so as you can see this is the column Gap CSS property and let's say we want to provide the gap of 20 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the column gap of 20 pixels in this case and that is help helping us in order to segregate The Columns over here similarly we can divide the rows as well so in this case we can also provide the row Gap CSS property so this is the property that we can use and we can provide 20 pixels over here so let me just save this file now and try reloading this page so as you can see in between the rows we are getting the gaps over here and this is how we can create the grid layout and also provide the column Gap and the row Gap over here now guys apart from this if you want to increase the number of columns then what you have to do is simply inside the grid template columns you can provide the third parameter which means another column will be added over here and the existing data will be adjusted accordingly so let me just save this file now and try reloading this page once again on the browser so as you can see now we are having the three columns and the three rows grid layout over here as per our requirement and this is the same design that we had drawn over here on the sketch pad so guys in this way you can have the grid layout with the help of the display equal to grid and then using the grid template columns CSS property and also providing the column Gap and the row Gap over here now guys we can also provide certain other properties let's say if we want to Center this text inside the div element that is the child element inside the container so what we can do is simply we can provide the text align it is equal to Center over here let me just reload this page so as you can see all the text are now aligned as at the center of the diff tag we can also have the fourth column over here so what we will do is let's say we want the fourth column to be small let's say we want the width of the fourth column to be 20 pixels over here so simply after the space character instead of providing the auto key word we will provide the 20 pixels as the width of the fourth column over here let me just save this file now and try reloading this page once again on the browser so as you can see the fourth column is now added and it is only having 20 pixel as the width of that particular column and the other columns are taking the remaining space automatically that's because we have provided the auto keyword over here let's say we want the second column to have the width of 100 pixels so simply instead of having the auto keyword we will provide the length as 100 pixels over here let me increase the width of fourth column to 40 pixels as well since it is very small right now and now when we reload the page as you can see now this is 100 pixels wide and then This is 40 pixels wide over here and the first and the third column are automatically taking the width as per the keyword that we have provided inside the grid template columns over here so guys in this way you can Define the different CSS properties as far as grid layout is concerned so far we have seen how we can use the grid value for the display CSS property we have also seen how we can Define the grid layout with the help of grid template columns which will Define the number of columns over here and then apart from this we have also seen the column Gap Gap and the row Gap in this case now guys there is a shorthand method that you can use for the column Gap and the row Gap over here so instead of having 20 pixels for both the CSS properties simply you can provide the Gap CSS property over here so guys first of all you need to provide the row Gap in this case so let's say we provide 20 pixels as the row Gap and this time let us say we want to increase the column Gap so we provide 30 pixels as column Gap so guys first of all the first parameter that is taken by the Gap CSS property is the row Gap over here and the second parameter is the column Gap let me just save this file now and try reloading this page you will notice that the row Gap will be same but the column Gap will be increased now so when we reload this page as you can see this column Gap is 30 pixels wide and the row Gap is 20 pixels wide over here so guys you can provide the required gap between the items of the grid layout as per your requirements apart from this let us now understand what is the meaning of the grid line now guys since we have provided all these elements inside the grid layout all these diff tags are called as the grid items over here and then guys on the extreme left there's a grid line in this case so if I show you back again in the sketch pad so before this column 1 there is a virtual vertical line over here which is line one in this case and then between column 1 and column 2 there is a second line over here and then we have the third line in this case and then there is a fourth line over here similarly we have the lines for the rows as well so over here we have the virtual line before Row one and then between Row one and row two we have the second line and so on there are lines in this case that we can use over here now guys how we can use these lines I will show you with the help of the other CSS properties over here so basically we have something called as grid column start and then grid column end so guys let's say as per your requirement over here on the user interface you want the first number to occupy two columns over here so guys currently it is occupying just one column that is the first column in this case but let's say if you want to increase the width in such a way that it should occupy two columns over here that is First Column and second column so we can simply use the grid column start and grid column and CSS properties so guys let us check that as well so over here what we will do is for the first element over here we will provide the ID that is one in this case and we are going to use this ID in the style. CSS file so over here we will Define the ID that is one with the help of the hash character and then we are going to use the grid column start over here so guys basically we have the grid column start and it should start from the first line over here so guys this is the significance of understanding the grid lines basically this item should start from the grid line one over here and it should end in this case after the second column which means the grid line two is present over over here between the column 1 and column 2 and the grid line three is present over here between column 2 and column 3 so we are supposed to provide the numbers from one up to three over here so basically the grid column start will start from the number one and the grid column end should have the value of three over here so that the first item should occupy the space between the column 1 and column two in this case so guys when we provide the end as three let me just save this file now and try reloading this page once again on the browser you will notice that now the first element is taking the span of two columns that is the First Column and the second column and the other div elements are adjusted accordingly and all of them are taking just one column so guys this is the way you can use the grid column start and grid column and CSS property in order to make the HTML element occupy multiple number of columns over here we also have the shorthand method for this so simply we can have the grid column in this case so guys let's say we provide grid column CSS property and over here we provide the column start as one and then followed by the forward slash and then simply we can provide the grid column and parameter value that is three over here let me just save this file now and try reloading this page once again on the browser as you can see it is now taking the space of two columns that is first and second now guys let us say we want to increase the width up to three columns over here so simply we need to provide the grid line number four over here let me just save this file now and try reloading this page once again on the browser so as you can see the first element is now taking the space of three columns that is first second and third by using the grid line numbers from 1 up to four over here so guys this is the second line and then we have the third vertical line followed by the fourth vertical line apart from this instead of providing the line numbers for the grid column CSS property you can also provide the span keyword and then we can number the number of columns to be used in order to make the dev element occupy those many number of columns so guys when we provide these pen so let's say we want this particular item to occupy only two columns over here so simply we provide span keyword followed by two columns in this case let me just save this file now and try reloading this page once again on the browser so as you can see the first element is now occupying the space of two columns over here so guys similarly you can use the grid row start and grid row end as well and apart from that you can also use the grid row CSS property as the Shand method so guys let us check that as well let's see if you want the First Column to have the two number of rows over here which means it will occupy two rows in this case so what we can do is simply we can provide the grid row over here so this is the CSS property that we are providing and then it is going from the first grid line up to Second and then the third grid line in this case so guys simply we can provide one followed by forward slash and then three over here so that it takes two number of rows as far as the first element is concerned let me just save this file now and try reloading this page once again on the browser as you can see now it is taking two number of rows as far as the vertical spacing is concerned we can also provide the span keyword over here but this time we have to provide the number two instead of three since we are providing the span keyword let me just save this file now and try reloading this page as you can see it is taking two rows over here if you want it to occupy three rows so simply we can provide span three in this case let me just reload this page as you can see now it is taking the three rows as far as the vertical spacing is concerned so guys in this way you can easily use the grid column or the grid row CSS properties based on your project requirement guys apart from this we also have some other properties that is justify content over here so similar to how we have seen in the flex layout model the just justify content will help us in order to align the items as far as horizontal alignment is concerned so guys let us check justify content with the help of example over here so inside the container class what we will do is let's say we have the justify content CSS property over here and we want all the elements to be present at the center of the container so simply we can provide the center value over here let me just save this file now and try reloading this page once again on the browser as you can see all the elements are now at the center of the container which is having the background color that is aqua so guys in this way you can simply use the justify content as well if you want a certain space to be in between all the elements as far as horizontal alignment is concerned you can provide the space between value as well so let me just save this file now and try reloading this page so as you can see in between all the elements there are equal spaces and then we have other values as well we can also provide space evenly over here so as you can see there's even spaces on the left and the right of all the div elements as far as horizontal spacing is concerned apart from this we also have the vertical spacing that you can use based on the Align content CSS property so let us check that as well so when we provide align content CSS property let's say we want all the elements to be at the center as far as vertical alignment is concerned so we provide the center value let me just reload this page once again on the browser so all the elements are currently at the Center as far as vertical alignment is concerned we can provide some other values as well so let's say we provide the start value and reload this page so as you can see there is no change right now so what we will do is let us increase the height of this diff container over here so simply we will provide the height value and then let's say we provide 300 pixels as the value of the container height so as you can see the height has been increased now and since we have provided align content at the start all the diff tags are at the start as far as the vertical alignment is concerned which means they are at the top of the container let's say we want them to be at the center of the container so simply we can provide the center value let me just reload this page as you can see now the div elements are present at the center of this div container as far as the vertical alignment is concerned and let us get them all at the end of the container which means at the bottom of the container so when we reload this page as you can see all of them are at the bottom which means they are aligned at the bottom of this particular container tag so guys in this way you can simply use the justify content and the Align content over here in order to align the items inside the grid layout now guys apart from this we have something called as grid area as well which is a shorthand method in order to use the grid row and the grid column over here so guys let us check the example of this as well so what we will do is simply I'm going to remove the grid row and the grid column that we had used previously for the first div tag over here let me just reload this page once again on the browser also we will remove the height of the container over here so as you can see this is the container which is having the diff Tex inside the grid layout and then guys apart from this we will also make the width of all the columns as Auto in this case so let me just remove this 100 pixels and make it as Auto over here and also the 40 pixels as Auto in this case so that all the columns are now having the equal width over here now because apart from this we will also remove the justify and the Align content in this case so that all the diff tags take up the available space on the left and the right as well so as you can see this is a simple grid layout inside the container now guys by using the grid area we can Define the grid row and the grid column start and the end CSS property so guys let us check that as well so what we will do is for the first element let us say we want this element to have two number of rows and two number number of columns so basically this much area must be occupied by the first row so simply we can provide the grid area shorthand CSS property over here and the first value that is expected inside the grid area is the grid start row so in this case we have the start row as one and then followed by the forward slash and then it is expecting the grid column start which is again the First Column over here so again we provide one over here apart from this we have the slash character and then it is expecting the grid row end which means it should end at the third line over here as far as the row line is concern so this is the first line second line and then this is the third line over here so simply we can provide three in this case followed by the Slash and then we can provide the column line as well which is in this case we want the first element to be over here so basically this is first second and the third line as far as the column line is concerned so we have the G grid column end as well let me just save this file now and try reloading this page once again on the browser so as you can see the first element is now taking the space of two rows and two columns respectively so guys in this way you can easily use the grid area as well now guys apart from this this grid area will be useful in order to order the elements also so basically let's say we want this fifth column to be present at this particular position where the element two is present end so what we can do is first of all for the element five we are going to define the ID that is five over here so simply we have defined the ID of five and then what we will do is simply we will provide hash character and then the ID that is five over here and we are supposed to define the grid area in this case so that we can order the elements inside the grid layout so guys it is not necessary that whatever sequence that you have provided inside the HTML elements with that same sequence all the items will must be displayed but you can order them based on your project requirements over here so we want this particular Fifth Element to be present at this second position with the help of the CSS property that is grid area in this case so guys what we have to do is we need to identify the row line and the column line for this particular position so the row line is starting from the one and it is ending at two over here so let us Define that first of all so we start from the row line that is one over here and then we we have to end it at second row line in this case and then guys we also have to provide the column start and the column end so this is column line one and then followed by column line two over here and then we have three in this case so we should start from the column line three and then end to the column line four over here so when we say three that is the column start and Then followed by four as the fourth parameter over here so guys this is the grid area that we have defined so using this we can get the Fifth Element at this particular position since we have provided the grid area CSS property so let me just save this file now and try reloading this page once again on the browser as you can see this Fifth Element is now getting displayed at this position and then all the elements have adjusted accordingly based on the grid layout so guys in this way you can easily use the grid area CSS property as well so that you can order the HTML elements based on your project requirements inside the grid layout so Guys these are some of the CSS properties that you can use as far as the grid layout in CSS is concerned comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is an exercise on grid layout in CSS in order to make the sidebar and the content so stay tuned so now we will work on an exercise on GD layout in CSS and we will be making a a sidebar and the content with the help of the grid layout so guys we will design a sidebar and content area on left and right sections by using the grid layout in CSS and apart from this we will also add the header and the footer sections so guys let us move to the VSS code over here and simply I'm going to remove the previous lines of code inside the HTML and the CSS files that we had written previously now guys what we will do is simply we will have the container diff tag over here so we have the diff tag with the class container and then inside this we will have the sidebar and the content areas so basically we are going to have the class name that is sidebar over here simply I'm going to have the content that is sidebar for this diff tag and then we are going to also have the content class which is another diff tag over here so guys basically we have the content keyword in this case let me just save this file now and try reloading this page on the browser so as you can see these are the two diff tags that we are starting from scratch and we are going to have the sidebar on the left hand side of the screen and the content on the right hand side so guys what we have to do is we need to make this container class as a grid layout container so simply I'm going to copy this container class over here and then inside the style.css file we are going to Define certain CSS properties so first of all we have the display is equal to grid and then apart from this we will also have certain background color so let's say we have the background color of yellow and also we will provide some certain padding so let's say we have 20 pixels of padding over here let me just save this file now and try reloading this page once again on the browser so as you can see this is the container that is having the two div Texs that is the sidebar and the content now guys we need to make two columns out of this container on First Column we will have the sidebar and then inside the second column we will have the content so guys what we will do is simply we will use the another CSS property that is grid template columns which helps us in order to provide the number of columns over here so since we have provided the two values in this case with the help of the auto keywords there will be two columns that will be created and then guys apart from this we also want certain column Gap in between both the columns so we will see a column gap of 20 pixels over here so let me just save this file now and try reloading this page once again on the browser so as you can see the sidebar and the content are now getting displayed horizontally in this case now guys we will also have certain CSS properties to both these diff tags so that we can identify and separate them as far as the grid container is concerned so what we will do is inside the container class we will provide the CSS property to div tags that are having the sidebar and the content classes respectively so simply we are going to use the class names over here that is the sidebar and the content and we are going to have certain common CSS properties over here so first of all we will have the background color so let's see we have the background color as aqua color over here and also we will provide the pad of 10 pixels in this case let me just save this file now and try reloading this page so as you can see we can now see the two columns over here that is sidebar and content in this case and also we are having the column gap of 20 pixels over here now guys what we will do is we will decrease the width of the sidebar and increase the width of the content since a sidebar takes only around 20 to 25% of the screen width over here so what we have to do is simply we will provide the 200 pixels as the size of the first column over here instead of the auto keyword so let me just save this file now and try reloading this page once again on the browser as you can see the width of the sidebar is now reduced in this case now guys apart from this we also want to add the header and footer sections over here so simply we are going to add two more diff tags in this case and then we are going to have the class names as header and footer respectively so guys over here we have the header and footer in this case and then inside this diff tag that is the header diff tag we will have the H1 tag over here and we will say this is a heading and also for the foter tag we are going to have the statement that this is a pho section over here so guys we have this is a heading section and we have this is a pho section inside the header and the photo classes respectively now guys let me just save this file now and let us see how it looks like on the UI so when we reload this page as you can see this is a heading is now getting displayed over here on the first row and the sidebar is also getting displayed on the first row and and the second column so what we have to do is we need to define the grid column start and grid column end over here so that this particular heading takes the entire space that is from left to right over here so inside the style. CSS file for the header and the footer classes we are going to have certain common CSS properties so over here we have defined the header and the footer classes in this case so what we have to do is we need to make the grid column start that is this particular CSS property start from the first line over here and then it should end at the third line why so because we have two columns over here or we can also say that the header and the footer diff Tex must occupy the space of the two columns so we have to define the grid column end as well so over here we provide the grid column end in this case and then we provide the line number three over here let me just save this file now and try reloading this page so as you can see we have this is heading section and then we have this is phot section over here apart from this let us also provide certain padding at the background color over here so let's say we have the padding of 10 pixels again and the background color as well so let's say we use this chart reuse background color over here let me just save this file now and try reloading this page once again on the browser as you can see we have this is heading section and then we have this is footer section over here now guys there is one problem in this case we have three number of rows that is first row is over here then the second row is sidebar and the content and the third row is the photo section we need to have certain Gap in between all the rows so what we can do is similar to column Gap we can have the row Gap as well and this time let's say we have 10 pixels of row Gap let me just save this file now and try reloading this page so as you can see these are the gaps that we have provided over here because apart from this we also want to align this text at the center of the div tag so simply we are going to use the text align CSS property and the value as Center so when we reload this page as you can see the header and the photo section are now having the text at the center of the diff tags over here so guys this is the way that we have designed our sidebar and the content over here let us have certain content in the form of links inside the sidebar so what we can do is simply over here in the HTML file instead of having the sidebar over here we will have the unordered list in this case and inside this we will have the list items over here and inside the list item we will have the a tags in this case so guys let us Define certain links in inside the sidebar so we have these many links over here we will rename the content inside the links so first of all we have the home link in this case and let's say we have the blog and Then followed by videos and then let's say we have certain programming languages so first of all we have Java and then let's say we have HTML and of course we are going through the CSS tutorial so over here we have the CSS link as well so guys if you new to this channel we are making a lot of CSS tutorial videos which you can find in the playlist that I have given in the description section so you can go through all the videos as well if you want to practice with the help of examples and please make sure that you subscribe to this YouTube channel that is programming for beginners so that you get the notifications on the upcoming videos as well so guys over here we have defin certain links inside the unordered list let me just save this file now and try reloading this page once again on the browser so as you can see we have all these list items inside the sidebar over here that you can navigate to and then guys inside the content we can have certain random textt over here so instead of content what we will do is we will use the lurm M abbreviation over here so basically we are going to Define certain random text in this case let me just save this file now and try reloading this page once again on the browser so as you can see we have the random text that is getting generated over here so guys in this way we have easily designed our header section and the footer section as well you can have your own CSS properties for these header and the photo sections respectively and apart from this on the left hand side we have the sidebar content which is having the list of links in this case and we also have the content section over here we can also have the right hand side sidebar over here of let's say some of the popular videos or the popular blog post in this case so you can simply provide the third column in this case which should be present only in this second row over here as per your requirements so guys I'll leave this up to you as a homework for you so that you can practice on your own and add a right hand side sidebar that might have certain popular videos or the blog post which users can navigate to so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is how to center the HTML element inside the dev element using CSS so stay tuned so now we will see how to center the HTML element inside the diff tag in C CSS so guys basically one of the problems of centering the HTML elements inside the div elements can be solved by using the flexbox layout and we are going to check with the help of example as well so let us move to the vs code over here and simply I'm going to remove the previous lines of code that we had return in the HTML and the CSS files so guys over here first of all we are going to define the diff tag with the class container in this case and then inside this we are going to have a simple diff tag that will say this is a simple diff tag so guys we have a very simple statement over here inside the container class let me just save this file now and try reloading this page on the browser so as you can see this is a simple diff tag is getting displayed over here now guys let us have certain background color for the container class and also the diff tag that is the child tag over here so we are going to copy this class name and then inside the style. CSS file we are going to provide the background color over here so let's say we have the yellow yellow color is the background color apart from this we will also provide the padding of let's say 20 pixels in this case and then guys for the child tag over here inside the container class we are going to define the diff tag in this case and then we will say the background color of let's say aqua color over here and again we are going to provide the padding of let's say 10 pixels over here let me just save this file now and try reloading this page once again on the browser so as you can see the container tag that is having the yellow background color is going from left to right and it is taking the entire width of the screen over here apart from this the child tag that is having the aqua background color is also going from left to right and it is taking the entire width of the screen now guys what we will do is we will reduce the width of this child tag over here and we will set it only up to this required width that is required by the content of this diff tag so inside this diff tag that is the child tag over here simply we are going to provide the display property and we will say inline block as the value so let me just save this file now and try reloading this page once again on the browser as you can see only the required withd is now being taken by this particular diff tag that's because the default value of the diff tag as far as display CSS property is the block value so when we say block which means it is going to take the entire width that is from left to right over here but we are limiting that width by using the inline block value for the display property now guys what is the scenario over here is we we want to Center align this particular diff tag as far as the container is concerned so we need to get this child diff tag at the center of the container let us have another situation over here we will also have the height of this container so let's say we provide the height as 300 pixels let me just save this file now and try reloading this page so as you can see we have the height of the container is 300 pixels over here so how do we get this particular diff tag at the center of the container somewhere over here so let us try that so what we will do is first of all let us provide the text align CSS property we will check out different scenarios how we can achieve our task of getting the child diff tag at the center of the container so when we say text align equal to Center let me just save this file now and try reloading this page once again on the browser so as you can see now this diff tag is present at the center as far as the horizontal alignment is concerned but how do we get it at the center as far as the vertical alignment is concerned another CS property that we can use is using the line height over here and we can set the value equal to the height of the container that we have set over here so simply we will set the value as 300 pixels so that the line height of the container is exactly the same as the height of the container over here so let me just save this file now and try reloading this page once again on the browser so as you can see we have provided the line height of 300 pixels the text is also coming at the center of the container now but we can see that there is a background ground color that is running from the top to the bottom of the container which is not required in this case so guys this is a limitation of using the line height over here along with it we have also used the text align CSS property so we don't want it in this way so let me just comment out these two lines of code over here so now we are back to our original position that is top left over here so guys we can simply use the flex boox layout in order to Center align the diff tag over here so let us try that so for the container class what we are going to do is simply we will set the display property as Flex over here now guys since we have set the display property as Flex all the child items inside the container will be the flex items now and they will be running from left to right by default because the flex direction is row by default for any of the flex container so let me just save this file now and try reloading this page once again on the browser so as you can see the background color is now going from top to bottom over here in this case let provide another CSS property that is justify content for this Flex container which will Define the horizontal alignment as far as Flex items is concerned so guys we will set the value as Center because we want the flex item that is this particular diff tag at the center as far as horizontal alignment is concerned so when we reload this page now as you can see the flex item is now at the center as far as the horizontal alignment is concerned now as far as vertical alignment is concerned we can use the alignment content CSS property which will help us in order to align the flex items across the cross AIS over here so guys since the flex direction is row by default the justify content will help us in order to align the items on the main axis which is going from left to right over here and the Align content will help us in order to align the items across the cross AIS which is going from top to bottom or the vertical AIS over here so we have just set the value as center for the Align content over here let me just save this file now and try reloading this page once again on the browser so as you can see there is no change right now that's because we have done a mistake instead of using the Align content it is align items that we must use so because basically align items will help us in order to align the flex items as far as the cross AIS is concerned in which case it is the vertical AIS over here so when we save this file now and try reloading this page once again on the browser so as you can see now we have perfectly aligned the diff tag at the center of the container and this is the way that you can Center align the HTML element inside the container by using the flexbox layout over here so Guys these are the three important CSS properties that you must use that is display is equal to flex and then justify content is equal to Center and the Align items is equal to Center over here inside the flex container in this case so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people And subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is optional and required Pudo class in CSS so stay tuned so now we will see optional and required Pudo class in CSS so guys basically we will see how to style the HTML form elements using the optional and the required pseudo class so let us move to the vs code over here and simply I'm going to remove the previous lines that we had written in the HTML and the CSS files over here now guys what we will do is first of all we will Define the diff tag with the class container inside which we are going to have the form over here so before having the form we will have the header tag that is the h2 tag and we will say F below form in this case as a heading now guys after this we are going to have the form tag over here and we will have the ID as form in this case and simply we are going to have three Fields over here first of all we will have the username field so we will have input colon text over here so basically it is the input tag with the type text in this case and we will have the name as username and ID as the username value apart from this we will also have the placeholder attribute and we will say enter username so guys basically this is the text that will be displayed by default as a placeholder and then we will make this field as required so that user has to feel this particular field in this case and after this we we are going to have certain line braks over here so that the next input is displayed on the next line so I'm going to copy paste this line of code and this time we are going to have password as the text field and again we are going to have the ID as password and we will say enter password over here and it is again a required field in this case and instead of having the type equal to text we will say the type is equal to password over here and then guys apart from this we will have the email field as well so again we will have the type as email over here and we will set the name and the ID as the email values and we will say enter email in this case which is not required over here so we will remove the required attribute from this particular input tag so guys basically we are going to provide the CSS properties with the help of this required or the optional attribute over here so whatever fields we have marked as required will be provided a set of CSS properties and the other fields which are by default optional which means user is not required to provide the data inside those optional field such as the email field over here those will be having the set of other CSS properties and then apart from this we will also have two buttons over here the first button will be the submit button in this case so we will have the input type is equal to submit and the value will be submit over here and also we will set the ID as submit in this case and then apart from this we will also have another button which will have the value as clear over here so guys this is simply for the displaying purpose we are going to have two buttons that is submit and clear inside the form so let me just save this file now and try reloading this page on the browser so as you can see this is the way the form is displayed over here we have the heading first of all Feld below form over here so we need to change this keyword to below form in this case so we have Feld below form as the header over here and then we have the three fields that is username password and the email Fields over here let us have certain background color for the container class as well in this case so what we will do is we will copy this class name over here and inside the style. CSS file we will have the container class name and what we will do is let's say we have the background color as aqua color over here also we will provide the padding of let's say 20 pixels in this case let me just save this file now and try reloading this page so as you can see this is the container that is having the background color over here now guys we will reduce the width of the container to the width of these particular text boxes so what we can do is simply we can set the width it is equal to Min content over here let me just save this file now and try reloading this page so as you can see now the width is set in such a way that it is only taking up the required space over here apart from this we also want to Center align this particular container so what we will do is simply we can provide margin it is equal to Auto over here so as far as horizontal alignment is concerned we are getting the diff tag at the center of the screen over here now guys how we can provide the CSS properties to these required and the optional attributes that are present inside the form so simply what we have to do is we have to provide the input tag and then we can use the Cudo class over here so let's say first of all we want to provide certain CSS properties to these required fields at a username and password so over here inside the style. CSS file we will say input tag followed by colon and then simply we can say the re ired keyword so guys this is the way that we can use the Cudo classes over here so basically we need to provide the single colon and then the name of the sudo class so in this case it is the required sudo class that we are using and whatever CSS properties that we will be including inside this required seudo class will be applied to all those fields that are marked as required over here inside the form so guys let us check that as well so what we will do is first of all we will provide the padding of five pixels over here let me just save this file now you will notice some kind of spacing inside these username and the password text boxes so when we reload this page as you can see there is extra space that is added over here apart from this we will also provide certain background color so that we can identify the changes that are happening inside those two text boxes that is username and password so what we will do is we will set the background color as green over here and let us change the green color to some lighter version of green color over over here so we have this very light green color in this case with the help of the rgp values let me just save this file now and try reloading this page once again on the browser so as you can see we have the light green background color for these required text boxes over here that is username and password apart from this we can also have some more CSS properties that is let's say we have the Border radius of 5 pixels over here so basically the corners of these text boxes will be having the rounded corner so this is the 5 pixels border radius that we have applied over here so in this way based on your project requirements you can provide any CSS Properties by using the required Pudo class in this case now guys apart from this the other field that is enter email which is the email field over here is not having the required attribute so basically by default it is the optional field inside the form so guys what we can do is simply we can Define the input tag followed by colon and then we can have the codo class that is optional over here so whatever CSS properties that we Define inside the optional hudo class in this case will be applied to all the fields that are marked as optional or not having the required attribute so let us provide the same CSS properties in this case that is padding is equal to 5 pixels and Border radius is equal to 5 pixels but this time we are going to change the background color so we will have the version of the red color over here as the background color so let me just change the red color to some lighter version of this red color in this case so as you can see this this is the RGB value that we have set over here let me just save this file now and try reloading this page once again on the browser so as you can see we have the lighter version of the red color to this field which is not marked as required but it is the optional field in this case guys if you notice we also have this red color to the submit and the clear button so what we can do is we can provide the CSS properties of username and password to the submit button by using the ID of the submit button so what is the ID of this button it is submit in this case so what we will do is the CSS properties for the required fields are present over here so simply we are going to provide comma and then we will provide the hash character followed by the ID of the input button that is submit in this case so guys basically these CSS properties will be applied to the submit Button as well as the fields that are marked as required over here and in this way we can also provide the multiple CSS selectors so let me just save this file now and try reloading this page once again on the browser as you can see the same CSS select that are provided to the required fields are now provided to the submit Button as well and the clear button can have the CSS property that is provided to the optional field over here so guys in this way you can use the required and the optional codo classes over here and based on your project requirements you can provide any of the CSS properties inside these Udo classes so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get notifications on upcoming videos as well I'll see you in the next video till then stay tuned so now we will create a very simple calculator with the help of the HTML and the CSS as you can see this is the simple calculator that we are going to create so first of all we are going to create a folder over here inside the HTML CSS projects folder so we are going to create the folder that is named as calculator since we are going to create a simple calculator over here now guys inside this calculator folder we are going to create the HTML and the CSS files so first of all we will create index.html file in this case and then we are going to create another file in order to provide the styling with the help of the CSS file so guys over here we have the style. CSS file as well so guys inside the index.html file we will have our HTML elements so we are going to use the Mt abbreviation that is exclamation mark in order to create the HTML template over here and for the title part we are simply going to provide the string that is simple calculator now guys apart from this inside the body tag we are going to provide our code so what we are going to do is first of all we are going to create a diff tag with the class that is main class over here and inside this we are supposed to have the text area so for reference over here I have opened the calculator in this case that is a standard calculator so this box over here where all the numbers will appear will be represented by this particular text area so guys over here we will provide the text area is the name and the ID as well so I have provided the text area value for the name and ID part and then initially we will provide the data as zero in this case now guys after this we are going to have another diff tag with the class container where we are going to Define all these buttons that you can see so guys we can create all these buttons with the help of the diff tags over here so we are going to have the div tag with the class Row in this case and every button will be represented with the help of this particular class that is row over here so guys first of all we have this button that is C e so in this case let us provide the data as well and I'm simply going to copy this line of code over here and we are going to provide other buttons at is C and then backspace and then we have divide so guys over here for the clear part we will provide the capital x letter and then over here we will provide the Divide symbol so guys basically we have created the four D tags with the help of the class that is row over here which we are going to use inside the style. CSS file let me just save this file now and try opening this file on the browser so simp I'm going to copy this path over here or simply you can also use the live server feature so basically you can install the live server extension on the vs code that will help you in order to go live over here so guys simply we can use this feature as well so let me click over here on the go live Button as you can see so it is starting right now and basically by default this will be the URL where your server will be live and you will be able to view the HTML web page now guys whatever changes you make in the HTML and the standy CSS file over here will be reflected on this HTML page so over here we have not defined the CSS file to be linked to this particular HTML page so simply we are going to use this link tag over here along with the RL attribute that is stylesheet and the hrf attribute will have the style. CSS file the file that we have created over here in order to define the CSS properties so guys let me just save this file now and the changes will be automatically reflected over here now guys what we want to do is we want all all these buttons that is having these particular text to be present on one particular row over here and also we want them to have certain background color along with the fixed width and height so guys what we will do is first of all for the main class that is for the main calculator over here we will Define certain CSS properties so let's say if we Define the background color as a yellow color for the entire calculator and we want it to be present at the middle of the screen over here so guys what we have to do is let us also provide certain padding of 20 pixels so let me just save this file now and without actually reloading the page you will see that the changes are now getting reflected on this particular URL that's because of the live server that we are using now guys what we want to do is we want to have the fixed width of this particular calculator so let's say we have the width of 40% over here as far as the entire width of the screen is concerned so as you can see this is the 40% let us reduce the width to 30% over here so as you can see this is the 30% width and also in order to get this particular calculator at the middle of the screen simply we can provide margin equal to Auto over here so guys when we provide margin equal to Auto let me just save this file now and as you can see now the calculator is getting displayed at the middle of the screen over here now guys let us provide certain CSS properties for this diff TX in such a way that all these elements are displayed in one particular row over here so what we have to do is we need to use this particular container class in this case so guys let me just cect the spelling of this container class over here and then inside the style. CSS file we need to make use of this particular class that is container and then guys we need to provide the display property it is equal to grid that's because the layout that is getting displayed on this calculator app it is in the form of the grid layout over here so guys similarly we are going to make use of this grid layout in this case let me just save this file now and if we see the changes there are no changes right now that's because only one column is configured by default and that is why all the diff tags are coming inside just one column over here in order to increase the number of columns we need to make use of the grid template column CSS property and then for this particular CSS property we need to provide the width of the columns so guys either you can provide some length measurement or else you can also provide the auto keyword so that the width of the columns is taken automatically and since we need four columns over here in order to provide the buttons inside the calculator in the form of the grid layout we will will be providing the auto keyword four times over here so when we save this file once again and if you notice the changes over here as you can see all the diff tags are now getting displayed on just one line and they are separated with the help of the columns inside the grid now guys apart from this also we want to provide certain CSS properties to all these buttons which are represented with the help of the diff tag over here so let me just copy the class name that is Row in this case and then guys what we will do is we will provide the fixed width and height over here so let's say we have have 40 pixels of width and then also the 40 pixels of height in this case so we provide the height attribute as well and also we want to provide certain background color so let's say we have the background color as gray color over here so when we save this file you will see that these are the changes that are getting reflected in this case we have all the columns that are getting displayed over here and we have the fixed width and height for this particular diff tag apart from this we will also get these characters at the center of the box over here so what we will do is simply we will provide the text align it is equal to Center and in order to get the letters vertically aligned we can provide the line height attribute as well so simply we will provide the line height attribute in this case which must be equal to the height of this particular row class so it is 40 pixels over here when we save this file now so as you can see all the letters are now getting displayed at the middle of the button guys we can provide a lighter version of this gray color over here so let me just change the gray color to this particular lighter version so when we save this file now as you can see the these are the buttons that are getting displayed now guys let me just zoom in little bit so that we can see the calculator properly over here as you can see these are the top four buttons that are getting displayed over here now guys apart from this also we want to align this content inside the text area at the right hand side so simply what we can do is we can have the text area tag over here and simply we can provide the text align attribute so in this case we will provide text align it is equal to right over here so when we save this file as you can see now the number is getting displayed on the right right hand side okay similarly what we will do is we will have these numbers and also the multiplication icon over here inside the second row as far as this Ana is concerned so simply we have to come inside the index.html file and I'll copy these lines of code over here and simply we need to provide the content that is 7 8 9 and then multiplication so over here we will provide 7 essay number then 8 and then N9 and then this multiplication as the small X letter so let me just save this file now and if you notice a change over here as you can see these are the buttons that are getting displayed on the second row now guys apart from this we can also provide certain row Gap over here so that there is certain Gap in between the rows in this case so simply inside the CSS file for the container class we can provide the row Gap over here and a row gap of five pixels can provide a good amount of Gap in between the rows so when we save this file now as you can see we have caught the gaps in between the rows now now guys apart from this we will also provide the other numbers as well so let me just copy paste these lines of code once again over here inside the HTML file so guys we have the third row over here inside the container and this is how the buttons look like in this case apart from this let me just quickly provide the last two rows over here as well inside this calculator so guys as you can see we have also provided the last two rows over here and apart from this we have also adjusted certain width of the main class and the text area as well in which case we have provided the number of columns and the number of rows in such a way that it aligns better along with the other buttons over here inside the container now guys what we can do is in order to make these buttons look more decent we will provide the background color of white for all these numbers over here so simply for the numbers inside this calculator we are going to provide another class name that is number in this case and then guys let me just copy this class name to the other numbers as well so that only for these numbers we are going to have the white color as the background color and then after Prov providing the background color as well we are going to also have the hover pseudo class that will change the background color when we get the mouse cursor on the buttons over here so simply inside the style. CSS file we will provide the number class in this case and then guys we are simply going to provide the background color of white color over here let me just save this file now so as you can see we have all these numbers with the white color in this case apart from this we can also have certain borders as well so guys as you can see we have the white colors for all these numbers right now apart from from this let us have some different shade of white color over here so basically we are going to have this shade of white color over here so as you can see this is the background color now guys when we get the mouse cursor on this particular row that is the button we want to change the background color to some different color in this case so what we can do is for this row class over here simply we are going to have the H Udo class and inside this we are going to have the background color so let's say we want to have the background color as gray color in this case let me just save this file now so now if we get the mouse cursor over here as you can see it is changing the background color to the gray color which means it is giving some feedback to the user that this is the button that is going to be clicked in this case apart from this also we will provide the cursor it is equal to pointer over here let me just save this file now so as you can see the cursor is getting updated to the pointer icon over here we can have some other version of the gray color as well based on your requirement so let me just change it to some lighter version of the gray color over here let me just save this file now so as you can see the buttons are now getting a different background color in this case so guys based on your requirements you can have the different background colors or any other CSS properties with the help of these class names just like how we have defined inside the CSS file over here guys we can also have multiple class names for a particular HTML element as you can see these numbers are having two class names over here and from two different class names we are having the multiple CSS properties and the CSS property that is defined at the later stage inside the external CSS file will be implemented on the user interface that is on the web page over here so guys in this way we have successfully created a very simple calculator with the help of the HTML and the CSS properties comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll be creating more HTML and the CSS projects in the upcoming videos so stay tuned so guys we are going to create a responsive navigation bar that will look like this that is a horizontal navigation bar over here along with some background color when we get the mouse cursor on this Nave bar items and then when we decrease the width of the screen over here which means when we view this on smaller devices the navigation bar will be converted to the vertical navigation bar over here so guys we will check this with the help of the HTML and the CSS code so guys over here inside the HT H tml CSS projects folder we are going to create another folder that is navigation bar in this case and then inside the navigation bar folder we are going to have the index.html file and the style. CSS files over here so guys let me just create the style. CSS file as well so guys we have created both the files over here so inside the index.html we are going to have the HTML code so let me just use this Mt abbreviation that is exclamation mark in order order to have the default HTML template and then guys for the title part we are going to have the navigation bar as the title of this page and also we are going to link this style CSS file with the help of this link tag over here now apart from this inside the body tag we are going to define the HTML elements so what we are going to do is let's say we have the diff tag with the class Nave bar over here so simply we are going to create the diff tag with the class that is naar in this case and then guys inside this we are going to have more diff tags that are going to have the navigation bar item so guys simply we are going to create the diff tag with the class item over here inside which we are going to have the a tag with the hge character s the hre and the first element that we have for our navigation bar is the home so basically this is the first item inside the navigation bar and similarly we are going to have multiple items over here so let's say we have the second item as block then the Third item as videos and then the fourth items as languages that are programming languages over here let me just save this file now and click on this go live icon that can help us in order to display the web page on the browser so guys this can be done with the help of the live server extension on the vs code so if you see on the web browser over here these are the four items that we want to include inside a navigation bar now Guys these are looking just like simple links on the web page but we want want to convert it into a horizontal navigation bar and when we reduce the width of the screen over here the navigation bar should be updated to a vertical navigation bar so we will check that as well with the help of the media queries over here so guys simply we have to go inside the style. CSS file in order to actually make this Nave bar class look like a navigation bar so over here what we will do is simply we are going to provide certain CSS properties for the class name that is na bar so we need to provide a DOT character followed by the class name that is Nave bar over here and then guys inside this let us have certain background color first of all so we will have a dark background color that is black color over here and then apart from this we also want to make the display equal to Flags so that all the items inside the Nave bar class that are these tags over here must be displayed in a row by default guys when we provide the display equal to Flags over here by default the X direction is a row and all the elements will be displayed in one row over here so when we save this file now and check the changes on the browser as you can see we have the black color as the background color in this case and also we have all the links over here that are getting displayed with the blue color over here guys we are going to make certain changes for these diff tags so what we have to do is simply we will use the class name that is item since the item class name is representing all the diff tags over here that is individual items inside the flex container so guys simply we have to provide this item class over here and first of all we will provide the padding of 10 pixels in this case and then apart from this what we want to do is all the a tags inside this item class must have some CSS properties so we are going to define the item class and then all the AXS inside the item so we are going to use the a selector over here first of all we will have the text decoration as none so that we don't have any underline for any of the text that are getting displayed apart from this we will also change the font color to white color so instead of the blue color that is getting displayed over here the white color must be displayed for all these characters so guys let me just save this file now and check the changes so as you can see these are the changes that are getting displayed over here so guys basically this is a very simple navigation bar that we have just created now what we will do is when we get the mouse cursor on any of these diff tags over here we want to change the background color for that particular diff tag that is the navigation bar item so since the diff tag is represented with the help of this item class over here I'm going to copy this item class and then we need to provide the hover sudo class over here for which we want to change the background color so guys we will change the background color to red color in this case when the user gets the mouse cursor on the diff Tex with the class item so let me just save this file now and let us see the changes so as you can see when we get the mouse cursor over here the background color for the diff tags are now getting updated to the red color and this is how the user will be able to get the feedback that he or she will be able to click on that particular navigation bar item now guys you will notice there is certain space on the left hand side and on top of this navigation bar that's because by default certain margin is provided to the body tag over here so simply we will provide the body tag in this case and then let me just provide the margin is equal to Auto and also padding is equal to Auto and then apart from this we will also provide the Box sizing CSS property as border box over here so guys it is a best practice in order to provide these three lines of code at the start of the CSS file so that there is no margin and padding that is provided by default to any of the HTML elements that we are going to Define on our web page and then apart from this when we say box sizing equal to border box so any of the padding or the Border spaces that are included for the HTML elements the width and height that is taken by those parameters that is borders and padding will be also included as part of the width and height of the HTML elements so guys that is one of the important aspect when you are designing your web page so when we save this file now you will notice that there is no space on the left hand side and on top of this particular navigation bar right now guys if you want to add more navigation bar items over here simply you have to come inside the HTML file and you can simply copy paste these lines of code in this case and then guys simply we can provide some more items as far as navigation bar items are concerned so let's say we provide the contact tab over here and then apart from this we will also provide about us option in this case and let us also provide certain programming languages so over here we can provide Java for which I have created a separate playlist if you want to learn more about Java tutorial and the Java programs as well I have provided the links to the playlist in the description section below apart from this I have also created the playlist for the Python programming language so you can watch out those videos as well the links I have given in the description section below so guys when we save this file now if you notice there are more items that are getting displayed over here on the navigation bar so guys in this way we can simply create a navigation bar using the display equal to flex and the other CSS properties that we have just seen now guys the problem in this particular navigation bar right now is it is a horizontal navigation bar and when we decrease the width of the screen so let's say I have opened the console section over here and when we decrease the width as you can see some of the items are now going on the right hand side and now at the bottom of the screen we are getting the horizontal scroll bar over here guys this is not one of the best practices as far as designing web page is concerned so what we can do is simply we can see what is the maximum width so as you can see over here we are decreasing the width and somewhere over here around 550 pixels the horizontal navigation bar is looking fine in this case and then guys after this when we reduce the size more you can see that it is trying to reduce its size let's say at around 500 pixels or less we want the navigation bar to be displayed as a vertical navigation bar so guys what we can do is simply we can use the media query over here so how do we do that so inside the style. C s file we will use media query in this case so we use media screen over here and after this we use the end keyword and then inside the parenthesis we use the max width in this case so guys we need to provide the max width of 500 pixels and then inside the curly braces what we have to do is since we have provided the display equal to flex for the Nave bar over here simply I'm going to copy these lines of code in this case and paste it inside the media screen and and then guys we want this Nave bar to have the flex direction as column so by default the flex direction is Row in this case so simply I'm going to provide the flex Direction instead of the other CSS properties and we are going to change it to column over here so guys whenever the width of the screen is 500 pixels or below the flex Direction equal to column will be implemented for that particular Nave bar class over here which is the navigation bar so let me just save this file now and when we decrease the width of the screen now so as you can see below 500 pixels the navigation bar is looking like a vertical navigation bar right now so guys in this way we can easily use the media query in order to convert the navigation bar from horizontal to vertical or vice versa and then apart from this we have already implemented the other hover properties and the background color changes as well guys based on your requirements you can provide your own C SS properties in the same code in this case so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS projects so stay tuned so guys we are going to create this kind of login form over here that is going to have certain border radius and apart from this it is also going to have some box Shadow as well and when we get the mouse cursor on the submit button it is going to increase its size with the help of the scale function that will be used with the help of the transform CSS property so guys over here let us create the login form folder in this case so simply we are going to create another folder over here inside the HTML CSS projects and then guys apart from this inside this login form folder we are going to create two files that is the index.html file and the other file in order to handle the CSS properties so we will have style. CSS file as the external CSS file over here now guys what we will do is simply inside the index.html file we are going to write our HTML elements so over here inside the title tag we are going to say login form in this case so we are going to create a very simple login form over here and also we are going to link the external stylesheet with the help of the link tag over here and the HF attrib it is equal to style. CSS file in this case so guys simply we are going to create a form tag over here inside the container class which will be represented by the diff tag in this case so guys over here we have the container class with the help of the diff tag and then inside this we are going to create a form tag over here also we are going to assign the ID for this form tag so over here let us provide the value as form over here simply we are going to have two fields in this case that is username and password so let let me just provide the first input with the help of the type that is text over here and simply we are going to have the name as usern name and ID also equal to username over here let us also have couple of line breaks in this case so that the next input that is password can be displayed on the new line so guys over here we have the type is equal to password and simply we are going to have the name and ID values as password over here and then again we are going to have the line breaks in this case and then guys after this we are going to have the submit button over here so simply we are going to have the input tag with the type button in this case and the value must be submit just like how we have in the other forms so guys let me just save this file now and let us click on this go live button so that with the help of the live server extension we are able to see our web page on the web browser and whatever changes we make inside this particular HTML and the CSS files will be directly reflected on this particular web page over here so as you can see these are the two input boxes that we have provided and this is the submit button now guys let us provide certain CSS properties to all these HTML elements so first of all inside the form what we are going to do is we will have the h2 tag over here and we will say F below form so guys basically this is the instruction to the user in order to feel the below form in this case also we are going to have certain background color for this tag which is represented by this container class so let me just copy this class name and inside the style. CSS file we are going to have the background color over here and let's say we provide the background color as aqua color let me just save this file now so if you notice that this particular color is getting displayed for the diff tag which is taking the entire width of the screen so guys we can reduce the width of this particular diff tag by providing the width CSS property and let's say we provide 30% as the width in this case so basically we have reduced the width over here also we will provide the padding so let's say we have the padding CSS property and we provide the value as 20 pixels over here so as you can see we have provided the padding as well and then apart from this let us also get the diff tag at the center of the screen by providing the margin is equal to Auto and also we will have some margin from the top side as well so let's say we have 20 pixels of margin from the top so as you can see we are getting this diff tag that is the container class at the center of the screen now now guys let us say we want all these HTML elements that is the input fields and the submit button to be present at the center of this particular container so what we can do is simply we can use the text align CSS property and provide the value as Center over here so as you can see all the HTML elements are now present at the center of this particular container because apart from this we will also provide some placeholder over here so that the user comes to know what kind of data is expected over here so inside the input Tex we are going to provide the placeholder and then we will say enter username over here for the username input field and also for the password field we are going to provide enter password in this case so let me just save this file now so as you can see we are getting the placeholders over here now guys what we will do is for both these input fields we are also going to provide certain padding in this case so simply we are going to provide the IDS that is username and password in this case so since we are going to have the common CSS properties for both these fields we are going to provide the ID and separate them by using the comma in this case so guys over here what we want to do is we want to provide the padding of let's say five pixels in this case let me just save this file now so as you can see there is certain spacing when the user provides certain data over here now guys apart from this we will also provide certain CSS properties to this particular submit button so simply we are going to use the ID that is submit over here with the help of the hash character and then let us provide certain background color first of all and it will be the version of the green color so guys let us pick one of the colors in this case so as you can see this is the color that we want over here let me just save this file now and as you can see there is no color that is getting implemented over here that's because we have not provided the ID to the submit button in this case so let us do that as well so simply we are going to provide the ID is equal to submit so now if you see there is the color that is getting displayed apart from this we will also provide the padding of let's say five pixels over here and then guys after this also we want some box Shadow to be implemented so let's say we provide the Border as one pixels solid black color over here so let us provide the black color Border in this case so as you can see this is the black color border and also let us provide the Border radi IUS as well before the Box Shadow so we will provide the Border radius of 5 pixels so as you can see this is the Border radius if I zoom in little bit you can see there is a border radius that can be seen so guys after this what we want to do is also we will provide the Box Shadow over here so simply we will provide the Box Shadow and the horizontal and the vertical Shadow we want to keep it as zero pixels but we want to provide the blur effect so let's say we provide the five pixels as blur effect and the color col must be black in this case let me just save this file now so if you notice there is a box shadow that is getting implemented over here for this particular submit button now guys when we get the mouse cursor over here the cursor icon must be updated to hand in this case so simply we will provide the cursor it is equal to pointer over here so when we save this file now as you can see the cursor is now getting updated to the hand icon over here and also we want it to scale little bit so that the size of this button increases when the user gets the mouse cursor on this particular button so guys what we want to do is simply we need to make use of the hover pseudo class over here so when we say submit followed by colon we have something called as hover Pudo class so in this case simply we can make use of the transform CSS property which is having scale as one of the function so guys we need to provide the value of scaling over here so when we provide 1.2 it is going to increase its size against the horizontal and the vertical Dimensions so when we save this file now and let us see the changes so as you can see the button size is increasing now and it is due to the scale function that we have used with the help of the transform CSS property also guys we want a smooth transition when the scaling is happening so simply we can use the transition CSS property over here so we will use the transition CSS property and in this case we want to transform it smoothly so over here we will make use of of this transform CSS property and the time must be let's say 0.3 seconds over here so simply we provide the time as 0.3 seconds when we save this file now and when we get the mouse cursor over here there's a smooth transition that you can see right now as far as the scaling of this button is concerned so guys in this way we have created a simple login form over here instead of providing the string that is field below form we can say login form in this case so as you can see this is the login form now similar to The Box Shadow and the Border radius that we have provided to this button over here we can provide the Border radius and the Box Shadow to this container as well so what we will do is inside the style. CSS file for this container simply we are going to define the Border radius of let's say 10 pixels over here so when we save this file now as you can see there's a border radius of 10 pixels right now and also we want a certain box Shadow over here so let's say we provide a box Shadow with the help of the blur effect over here and we provide the black color as the Box Shadow so as you can see this is the black color box shadow that is getting provided to this container that is the login form and also we can provide multiple box Shadows over here so after providing comma after the first box Shadow we can provide the second box shadow that is having 20 pixels of blur effect and let's say we want the dark blue color this time that will be spread across 20 pixels after the border of the container so when we save this file now you will notice that there is a dark blue color that is getting displayed after the border of the container which is giving this particular login form a decent look over here so guys in this way based on your project requirements you can create attractive login forms so that the user can provide the username and password and any other details as per the project requirements so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subs subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video where we are going to create more HTML and the CSS projects so stay tuned so now we are going to create a search bar that will have a glowing effect when the user clicks on this particular search bar over here so as you can see we have the Border color and also the Box Shadow CSS property has been implemented over here in order to provide the glowing effect for this particular search box so let us move to the vs code Cod so first of all we will create another folder inside this HTML CSS projects so basically we will say glowing search bar over here so guys we have this folder name inside which we are going to create two more files that is index.html and the style. CSS files so guys we have the index.html file over here and the other file that is style. CSS that will help us to provide the CSS properties now guys inside this index.html file we are going to create the HTML elements so let us provide the title of this particular web page so basically we are going to say glowing search bar in this case and then after this we are going to link the style. CSS file with the help of this link tag over here and the r attribute will be stylesheet and the hdf attribute will be style. CSS file now guys inside the body tag what we are going to do is let us first of all have the div tag with the class container over here inside which we are going to define the input with the type search in this case so guys basically this is the input with the type search that will help us in order to create a search bar so we are going to have the value as search for the name and the ID attribute over here and apart from this we are also going to provide the placeholder for this input field and we will provide the value as for your search so guys basically this is the placeholder text that will be displayed inside the search bar let me just save this file now and let us open the live server in this case with the help of the cive button that you can see so guys basically this is the search bar that we have created now guys let us provide certain CSS properties for this search bar and the container class as well which is represented by the diff tag over here so first of all we will have the container class in this case and also we will have certain background color so let's say we have the white version of the background color over here so simply we are going to provide the white color in this case and let us have this particular shade of white color over here let me just save this file now as you can see this is the shade of the white color it is a kind of grayish color that is set as the background color for the container we will also have certain padding over here so let's say we have a padding of 20 pixels and also we will set the text align as Center so that we can see the search bar at the center of this particular container so as you can see this is the search bar that is getting displayed over here now guys what we we want to do is when the user gets the mouse cursor over here inside the search bar and clicks on it we want to have a glowing effect outside of this particular border of the search bar so simply we are going to provide certain CSS properties to this search bar first of all so we will use the ID that is search in this case so we have to use the hash character followed by search over here so basically we are going to increase the padding so let's say we provide the padding of five pixels over here so as you can see there is certain spacing that is provided inside the search bar over here now guys when we get the mouse cursor over here we need to make use of the focus Pudo class in this case so simply I'm going to copy paste this line of code over here we are going to remove this padding CSS property and we will say Focus that is the Pudo class with the help of this colon over here and then after this we need to make the Border color so let's say we have the border of two pixels and it is of the type solid and we will provide some Blue version of the Border color over here so simply we are going to provide a blue color in this case and let us change the color to light blue over here and let's say this is the color that we want to have as the border so let me just save this file now and now when we get the mouse cursor over here you will not be able to see any changes over here that's because there is a default outline that is getting displayed right now so guys what we can do is simply we can provide outline it is equal to none in this case when we save this file now as you can see there's a blue color border that is getting displayed over here right now let us change the background color of this container to some darker version so let's say we have the black color for this background color over here so that we can properly see the Border color of this particular search bar so when we save this file now there is no change right now so as you can see we have not provided the semicolon over here so guys it is very important that we provide the semicolon after the values of the CSS properties so as you can see now now we have the Border color that is light blue color for this particular search bar now guys what we can do is simply we can also provide the Box Shadow over here with the same color so we are going to provide the Box shadow of let's say 0er pixels horizontal and the vertical shadow in this case and let's say we provide 20 pixels of the same color as the blur effect for the Box Shadow so I'll just copy paste this particular RGB color over here let me just save this file now and now when we get the mouse cursor inside this particular search bar and click on it you can see that there is a glowing effect that can be seen over here due to this box Shadow and the border that we have provided in this case for this particular search bar so guys in this way you can provide the glowing effect for the search bar with the help of these CSS properties apart from this we can also have the Border radius as well so let's say we have the radius of 10 pixels so you can see that there's a radius that is getting provided over here and when we click on the search bar you can see that there is a glowing effect that can be seen over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video where we are going to create more HTML and the CSS projects so stay tuned so now we are going to create a simple loading animation that will look like this as you can see this is a circular load loading animation and we can display this loading animation with the help of just HTML and CSS whenever you are retriving data to be displayed to the user so guys let us move to the vs code so guys over here inside the HTML CSS projects folder we are going to create new folder over here and we will say loading animation in this case and inside this folder we are going to create couple of files over here so the first file will be index.html file and the other file will be representing the CSS file that is style. CSS file so guys basically we are going to make use of this external CSS file over here so inside our HTML file in this case we are going to make use of this particular Mt abbreviation that is exclamation mark in this case that will help us in order to create this particular HTML template in order to create the web page so guys over here for the title tag we are going to provide the string that is loading animation over here and also we are going to to link this external style. CSS file over here with the help of the link tag inside the HTML file so guys after this inside the body tag what we are going to do is simply we are going to create a diff tag with the class that is loading over here so guys basically this DFT tag will help us in order to create the loading animation on the web page so let us provide certain CSS properties to this diff tag over here we are going to make use of this class name that is loading and inside the style CSS file we will provide the dot character followed by the name of this class now guys what we will do is simply we are going to provide a fixed width and height for this particular diff tag so let's say we have 200 pixels of width and 200 pixels of height over here so basically it is a square box initially and apart from this we are also going to provide the background color so let's say we provide the gray color as the background color and then guys for the body part as well we are going to provide certain dark color as the background color so you make use of this body tag and inside the curly braces we will provide the background color and let's say we provide the black color as the background color over here let me just save this file now and let us make use of this live server so simply we have to click on this SC live in this case so guys as you can see we have the black color is the background color over here and we have created the diff tag successfully that is in the form of a square box in this case let us get the square box at the center of the page over here so what we will do is inside the style. CSS file for the loading class simply we are going to provide the margin it is equal to Auto and then apart from this from Top as well we are going to create certain margin so let us provide the 20 pixels of margin from Top let me just save this file now and if we see on the web page right now the diff tag is at the center of the screen over here now since we want a loading animation out of this diff tag first of all we will have to convert the square box to a circle so what we will do is simply we can make use of the Border radius CS property and when we provide the Border radius as 50% the square shape will be converted to Circular shape over here so let me just save this file now and as you can see on the web page there is a circle that is getting created over here now guys instead of using the background color that is coloring the circle as a gray color we will make use of the Border color over here so let me just comment out this background color in this case and simply we will provide the border of let's say 20 pixels and the Border type will be solid in this case and the same color that is gray color we are going to provide for this particular border when we save this file now so as you can see we have created a circular shape diff tag over here now guys on one side we want the Border color to be white color so let's say on the top side we want the Border color to be white color so that we can see see the loading icon out of this diff tag so what we have to do is we need to separate out these values that we have provided inside the Border CSS property so I'm going to comment out this line of code and we are going to separate it in such a way that we have to provide all these values separately so first of all we will provide the Border width over here of same value that is 20 pixels and then the Border style must be solid in this case so we provide border style CSS property and and it is of the type solid and the Border color must be gray so simply we make use of this border color CSS property now guys when we provide the value for this border color the first color will represent the top color over here followed by the right color and then we have the bottom color and then we have the left color in this case so the first color that we want to provide is white color that will be provided at the top side of the border for this particular circular shape diff tag and then after this on the right hand side we want the gray color and then on the bottom side we again want the gray color and on the left side as well we want the gray color over here so guys basically only the top side must be white in this case so that we can see the loading icon so when we save this file now as you can see there's a border color of white color at the top of this particular circle now simply in order to make this circle look like a loading animation we need to rotate it by 360° and we have to continue the ration so what we can do is we can make use of the key frames over here which is very important when you make any of the animations inside the CSS so guys we make use of atate character followed by key frames keyword over here and then followed by the space character and then simply let us give the name to this animation that is loading over here and then after this we need to provide the curly presses now guys we need to define the different stages of the loading so let's say at the 0% which is at the start of the load loading we don't want any rotation so simply we can provide the transform CSS property and inside this we are going to make use of this rotate function which is going to have the value as 0° over here so at 0% we don't want any rotation now similarly at 100% that is at the end of the animation we want the rotation to be 360° which means this particular Circle should start from the 0° and then at the end of the animation it should be completely rotated by 360° over here so for 100% in this case we need to provide transform CSS property once again and then we need to make use of the rotate function and simply we provide the value that is 360° over here so guys in this way from 0% to 100% we have provided the different animations you can also provide the animations to the intermediate percentages that is 10% 25% or 50% and so on based on your animation r requirements so guys in this case currently we only want to rotate this particular icon and that is why we have provided the transform CSS property with the help of the rotate function over here let me just save this file now and you will not see any changes right now on this web page that's because we have to link this particular key frames that is loading with this particular diff tag that is having the class name that is loading over here so what we can do is inside this loading class we can make use of the animation name CSS property and in this case we need to make use of this name that is loading over here and then after this we also have to provide the animation duration so let's say we want the duration to be 2 seconds so within 2 seconds the icon will rotate itself from 0° to 360° over here and then after this we want to rotate it infinite number of times so basically we make use of this animation iteration count over here and we provide the value that is infinite in this case let me just save this file now and if you see the web page as you can see in 2 seconds the icon is getting rotated over here and in this way we can easily create the loading animation now guys you can see that the speed is decreasing at the end of the animation so simply we can make use of another CSS property that is animation timing function in order to keep the speed linear over here so simply we provide the value that is linear in this case that will keep the speed of the loading animation same to throughout the animation so when we save this file now you will see that the speed is linear right now and there is no decrease or increase in the speed as far as the loading animation is concerned so guys based on your requirements you can have the different color for this particular loading animation that will match along with the background color of this particular web page and then based on the JavaScript code once your data is successfully retrived from the database or from the internet you can hide this particular loading animation it becomes very important in order to keep your users engaged with the help of such animations on the web page whenever you are retriving data with the help of JavaScript so guys this is one of the ways in order to create the loading animation on your web page with the help of the HTML and the CSS comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video with a different HTML and the CSS project so stay tuned so guys we are going to create these social media icons that will help your users on the website to share the URL to the different social media platforms and when the user gets the mouse cursor on these social media icons they are going to scale up little bit and that is how you can provide a good user experience for your users so guys let us move to the vs code so let us create another folder over here since it is the 6 project we are naming it as 06 uncore and then we will say social media icons in this case and then guys inside this folder let us create two files that is index.html file which will help us in order to create the web page and then apart from this we will also create the style. CSS file that will help us in order to provide the different CSS properties now guys over here inside the index.html file let us create the HTML template over here and for the title part we will say social media icons so guys basically this is the title and then we are going to link the style. CSS file by using this link colar CSS M abbreviation and then we are going to provide hrf it is equal to style. CSS now guys apart from this in order to create the social media icons we can include the external stylesheet over here so as you can see we are going to make use of this box icons.com website which helps us in order to provide the different icons and basically we are going to make use of this stylesheet so let me just copy this link I will provide both these links in the description section below so guys over here after copying the external CSS file we are going to paste it inside the head section of the body tag over here so basically this is the link that is going to be used in order to make use of the different icons that are present on the website so guys over here what we will do is first of all we will create a diff tag with the class container over here inside which we will have different social media icons and then in this case we are going to have the a tag so over here we have the a tag in this case and let me just provide the class as Link in this case and then after this inside the a tag we can have the I tag now guys how you can display the links over here so let us open this website that is box icons.com so basically this is the website that we are going to use and then you can see that there are different icons you can provide on your web page so guys over here let's say first of all we want the Faceook Facebook icon so the moment you search for Facebook you can see different social media icons that can be used on your web page so let's say we want to make use of this particular icon so when we click on this additional information will be provided on the right hand side we need to switch to the font section over here and as you can see this is the link that is provided so let me just zoom in little bit so that you can see properly so basically this is the font and this is the tag that we are supposed to include so let me just click on this and basically it will get cop coped on the clipboard so over here inside the a tag we are supposed to provide this I tag over here that we have copied and basically it is having the class with this particular value so guys what this will do is it will display the icon on the web page so let us check this on the web browser let me just save this file now and let us open the live server over here by clicking on this go live button so as you can see this is the icon that is getting displayed over here on the top left now guys similarly what we will do is we will make use of the other icons as well from that same website so let me just copy paste these lines of code over here and simply instead of Facebook we are going to make use of the other social media icons so we have Twitter over here and then we also have YouTube in this case and then let's say we have Instagram as well so over here we provide the Instagram so basically you just need to change the class name in this case you can also come over here on the box icons website and then you can provide the icon that you want to display so let's say say you want to search for YouTube over here so YouTube icon will be displayed and then simply you can copy paste this it tag from this particular website so guys basically we have included four icons over here let us add another one that is Snapchat as well so instead of Instagram we will say Snapchat in this case it is best practice to copy this it tag from this website so that you don't get any issues while you are renaming the class names over here so guys let me just save this file now and when we see the same web page over here as you can see these are all the icons that are getting displayed in this case now guys since we have included all the social media icons inside the a tag that is why we are getting the underline and all of them are having the color that is blue color in this case so what we will have to do is we will provide the CSS properties for all these classes that we have provided over here so first of all let us copy this container class in this case and then let's provide some CSS properties over here to The Container class so first of all we will say display it is equal to leg and then we want to get it at the middle of the screen so let's say we provide justify content as Center over here let me just save this file now as you can see all the icons are now getting displayed at the center of this page as far as horizontal alignment is concerned now guys let us also provide certain margin from top so that we have some spacing from top of the page as well so we provide 50 pixels of margin from Top over here now guys let us provide certain CSS properties to this link class as well so that the properties will be applied to the icons so over here we provide dot followed by the class name that is linked in this case and then what we will do is first of all we will provide the width and height for this particular link class so let's say we have the width of 30 pixels over here and also we will provide the height of 30 pixels in this case so that we get a square box out of this link class over here and also we want to make this link as a circular shape link so what we will do is simply we will say border radius it is equal to 50% in this case and let us temporarily give some background color over here so that we can identify the area of this class that is linked so let me just save this file now so if you notice we have all these circular shaped link over here now guys inside the circles we want all these icons to be present at the center of the circle so what we will do is again we will say display it is equal to Flags this time and then we will say justify content it is equal to Center so that they are at the center as far as the horizontal alignment is concerned and then we will get them at the center as far as vertical alignment is concerned so we have to make use of the Align items over here and again we will make use of the center value so as you can see all the icons are now at the center of the circle in this case now guys we will have to remove the underlines that are coming over here so simply we will say text decoration it is equal to none and also we will change the font color over here so let's say we provide the color as white color in this case so simply we provide the color as white we need to have certain dark background color in this case so what we will do is let's say we provide the dark background color that is black this time so when we save this file so as you can see the background color of the circle is black in color and the icons are displayed as white in color now guys apart from this we will also have to provide certain spacing in between all the links so let us provide the margin for all the links over here so we simply have to provide the margin CSS property and let's say we provide 10 pixels of space from all the sides so when we save this file now as you can see all the icons are now separated with certain space in between them now guys instead of giving the black color as the background color over here we need to provide the colors that are actually present on these websites of the social media icons so what we will do is simply we will comment out this line of code that is background color over here and we will provide the inline style property in this case so basically inside the a tag which is having the class link over here since all the links will be having different background colors so we are going to provide the style attribute in this case and let us provide the background color CSS property and the Facebook social media icon is having some version of blue color over here so let us set that as well so this version of Blue we have set already so let me just save this file now and you can see that Facebook is now having the blue color as the background color over here the other icons are not visible right now because their color is white in color and the background color is also white in color for now so guys let us set the background color for the other social media icons as well so I'll quickly make the changes over over here so as you can see we have provided the background colors for all the links over here apart from this for the social media icons that is Instagram and Snapchat we have provided the icon color as black so that it matches well with the light color background over here so let me just save this file now and when we see this page on the web browser as you can see this is the way that the icons are getting displayed over here which is giving it a decent look after we have provided the background colors for the icons and having the background as a circular shape now guys when we over over this particular social icons we want to scale the icons to some extent so what we will do is simply inside the style. CSS file over here let me just provide the link class in this case and then we will provide the hover codo class over here and simply we will say transform in this case and then we will say scale by 1.2 that is the measure by which we want to scale the icon let me just save this file now and now when we get the mouse cursor over here as you can see the social media icons are increasing its size along with the background over here now if we want the smooth transition what we will do is simply inside the link class over here we will provide transition it is equal to all so that whatever changes happen to the link class all of them will have the transition and then apart from this we will have to provide certain timing so let's say we want 0.5 seconds during which the transition will complete so let me just save this file now and now if you see the transition as you can see it is a smooth transition which is helping the icon to increase its size along with the background that we have provided so guys in this way we can create the horizontal social media icons that can help the users in order to share your link on the different social platforms that they are using now guys apart from this since we have provided the display it is equal to flex value and by default the flex direction is horizontal in this case that is the row Direction over here if you want the social media icons to be displayed in the vertical Direction simply what you have to do is inside the container after display is equal to flex you can provide Flex Direction over here by default it is row but this time we can make it as column so that all the items are getting displayed in the vertical Direction so when we save this file now and view this page on the web browser as you can see these are the social media icons that are getting displayed in the vertical Direction over here so guys in this way you can change the direction of the icons that are getting displayed based on your project requirements so guys comment in the comment section below whether you you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS projects so stay tuned so now we will create a button animation and this is the button that is getting displayed over here and when we get the mouse cursor on this button as you can see this is the animation that we are going to create just with the help of plain HTML and the CSS properties so so guys let us move to the vs code so let us create a new folder inside the HTML CSS projects so over here we will create the folder and we will name it as 07 and then we will say button animation in this case so guys basically this is the new folder that we have created inside this we will create our HTML and the CSS files so we have index.html file and the style. CSS file as well guys basically we have both these files over here now inside the index.html file we will make use of this Mt abbreviation that is exclamation mark and when we press enter as you can see we have this HTML template that is getting generated so over here for the title part simply we will say button animation this time and then after the title we will link the style. CSS file that we have created using this link colon CSS Mt abbreviation so guys basically we have to set the hrf it is equal to the name of the file that is style. CSS file over here now guys inside the body tag what we have to do is we will make use of the a tag that is the anchor tag over here and we will have the class name that is button in this case so guys basically we are going to convert this a tag into a button and we will have the animation inside the button over here so guys we have set the text as over me in this case so guys let me just save this file now and let us start the live server over here from the bottom right so as you can see this is the link that is getting displayed that is having the text over me in this case now guys let us provide certain CSS properties to this aex tag so that we can convert this link into a button so guys over here inside the style. CSS file first of all we will have the body tag over here so that we can have the button tag at the center of the screen so that we can get this a tag at the center of the screen in this case so let me just provide the display it is equal to flex and then simply we will say justify content it is equal to Center let me just save this file now so as you can see we are getting the link at the center of the screen over here apart from this we will also provide line items it is equal to Center in this case so as you can see we are getting the link at the center of the page as far as the horizontal alignment is concerned now guys what we will do is simply we will provide certain CSS properties to this button class over here let me just rename this class name to BTN because the button keyword is also reserved for the button tag in this case let me just rename this class name to BTN so that we don't get confused with the button tag inside HTML so guys over here we are going to make use of this class that is BTN so inside the style. CSS file we have the dot character followed by the BTN now guys over here first of all let us provide the padding of 10 pixels from top and bottom and 20 pixels from left and right in this case also we will have certain border over here so let's say we have two pixels of border which is of the type solid this time and then we will have the color that is 764 ABC as far as the X color is concerned so guys this is the color that we are going to use in order to have the Border color and also the text color must be the same color so guys it is a best practice in order to copy this value of the hex color and save it inside a variable so guys over here inside the body tag we will create a variable that is button color over here so guys basically we have this button color variable and let us provide this hex color this time so basically this is the variable that we can use anywhere we want to make use of this color inside the body tag so guys over here simply we have to make use of the we function and inside the wear function we will make use of this variable that we have defined that is button color over here remember that we have to provide two times High fun while using the variable and also while declaring the variable over here either inside the root selector or the body selector so let me just save this file now and let us see the Border over here so as you can see we are getting the border that is of the two pixels solid type this time now guys this text color should also have the same border color over here so what we will do is simply we will say color it is equal to we function and then we will make use of this variable so let me just save this file now so as you can see both the colors are same now and then apart from this what we will do is simply we will remove the underline by using the text decoration it is equal to none and also we will provide certain border radius so that we get a good corners for this particular button so simply we will have the Border radius of 20 pixels let me just save this file now so as you can see the link is now conver converted to a button that is getting displayed over here apart from this let us also provide certain margin from top so that we have certain spacing from top so we have provided the 50 pixels margin from top of this button now guys let us create the animation inside this button over here and before that simply if you want to change the color of the button you can simply come over here and make changes to this color so let's say we want to change it to some green color over here so when we change this color to Green let's say we are using this particular color let me just save this file now so as you can see the button border is now converted to green color along with it the text is also changed to green color over here so guys this is the way that you can make use of the variables and simply you can make the changes at one location so that the changes are applied at all the locations wherever you have used that particular variable so as you can see this is the color that we are using now guys apart from this what we have to do is we have to create a rectangular shape element on this web page so that we can create the animation for this button when we get the mouse cursor on this particular button so simply we will make use of this button class over here and we can make use of the Pudo element that is before so guys basically this before and after pseudo elements will help us in order to create new HTML elements without having to provide those HTML elements inside the HTML page so guys let us check that how we can do it with the help of the before Pudo element so over here we have made use of this button class which is is representing this a tag over here always remember that if you want to create the new HTML Elements by using the before or the after SEO element you can do so only for the container tags you cannot do it for the tags which are not containers so let's say if you have the input tag which is not a container tag you cannot make use of the before and after sudo elements in order to add new HTML elements so guys inside the cly braces first of all we have to make use of the content CSS property and simply we will keep it as blank over here that is double quotes in this case now guys apart from this we also have to make use of the position CSS property it must be absolute so guys whenever we are making use of this position equal to Absolute CSS property we need to have the container So currently the container is button class over here and we have to make the position as relative for this parent container this time so over here we set the position as relative and then for the position equal to Absolute we can provide the top left bottom or right CSS properties so where do we want this box to occur exactly over here at the top left corner of the button so simply we will say top it is equal to Zer and also left it is equal to0 so that the top left corner of this particular new element is aligned over here at the top left of the button now guys apart from this we also want this element to have the width equal to 100% which should cover the entire button and also the height of 100% over here so simply we will say width it is equal to 100% And also the height CSS property is 100% this time and then apart from this let us also have certain background color so simply we will make use of the same color by using the wear function and then we will use this button color over here let me just save this file now and now if you see on the web page there is a square box that is covering the entire button over here now guys this particular square box is present on top of the button that we had already created so basically if we don't provide the top and left CSS property over here let us see what happens so we have commented out these lines of code let me just save this file now as you can see it is getting placed somewhere over here and not exactly at top of the button which is behind this particular rectangular box and then guys we also want this rectangular box to be present behind the button so what we can do is simply we will set the Zed index CSS property to minus one over here so that it goes behind the current button that is already present on the web page so when we save this file now it has gone behind the button over here and since the text color is also having that variable we are not able to make it out because the text color of the hover me text is also having the same color over here what we will do is instead of having this color simply we will set the color as white this time so when we say color it is equal to White you will be able to see the hover me text which means the button is now at the top of the rectangular box and when we remove the Z index over here which is minus one now the rectangle shape is on the top of the button so guys this is the way that you can make the rectangular box that you have created by using this before sudo element go behind the button this time so guys when we save this file now so basically this particular rectangular box is present behind the button right now and then guys what we will do is simply I'll remove this color over here and UNC commmand this line of code and also we want the top and left to be zero so that the Box comes exactly on top of the button so let us remove these command over here and then let me just save this file now so as you can see the box is exactly at the top of the button now guys we want to move this box on the left hand side and when we get the mouse cursor on this button over here the Box should come behind the button so that we can see the cool animation so what we will do is we will make use of the transform CSS property and then we will say translate X this time so guys basically this will help us in order to move the box and we will say 100% this time so let me just SA this file now so as you can see the box has moved to the left right now and when we get the mouse cursor over here the Box should come behind this particular button so simply what we can do is we can make use of the hover sudo class over here so guys basically we will make use of this button class over here and on Hover event which means we make use of this hover class we want this portion that is before portion over here to come on the right hand side so simply after the hover Pudo class we will make use of the before Pudo element over here in this way and then after this what we have to do is the before element should move on the right so simply we will say transform and then we will say translate X it should go to the original position which is zero position over here for the x coordinate so when we say zero let me just save this file now and when we get the mouse cursor now on the button as you can see the rectangular shape element is now coming behind the button over here now guys we want the smooth transition this time so simply what we will do is we will say transition CSS property over here for the button class we will say all and then we will say 1 second as the timing and the same line of code should be present for the before element as well for the button class so over here we have provided the transition all it is equal to 1 second now guys whatever changes happen to the button or the rectangular element over here it will happen with a transition of 1 second so when we save this file now and now when we get the mouse cursor over here as you can see there's a transition of 1 second that we can see now guys we also want to hide this rectangular element before we get the mouse cursor over here on the button so what we can do is simply inside the button class we will say overflow CSS property it must be hidden so guys whatever elements are present outside of the border of this particular button class will be hidden by default so let me just save this file now so as you can see there is no element that can be seen and when we get the mouse cursor over here as you can see this is the way that the animation is happening now guys when the element covers the button we want want to change the text of the hover me that is present over here to white color so what we can do is simply we will say button class and then we will have the hover Pudo class over here and then we will have the color it is equal to white color let me just save this file now and now when we get the mouse cursor over here as you can see there is a smooth transition that is happening and the color of the hover me text is also getting converted to white color in this case so guys in this way you can create a cool animation over here with the help of the HTML and the CSS properties now guys if you want to change the color of the button simply as I have told you you can come to this variable and then change the color so let's say we want some version of the green color over here so let's set the color to green color this time and when we save this file now as you can see this is the button that is getting displayed on the web page and when we get the mouse cursor over here you can see the cool button animation that is happening so guys in this way you can set the required color based on your requirements as per the project so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS projects so stay tuned so now we are going to create a card hover animation over here so basically we are going to create this simple card along with some box Shadow over here and when the user gets the mouse cursor on this card as you can see on the right hand side we are going to en at certain HTML elements with the help of the Pudo elements that we will Define inside the external stylesheet using the CSS properties so guys basically this is the card hover animation that we are going to create so guys let us move to the vs code so now we will create a new folder inside HTML CSS projects so in this case we are going to create 08 uncore and then card H animation as the name of the folder and then guys inside this we are going to create two files at is the index.html file and the style. CSS file as well so guys basically we have both these files inside the cardover animation folder and then inside the HTML file we are going to make use of this Mt abbreviation in order to generate this HTML template so guys inside the title tag we are going to say card over animation as the title of the page and we are going to link this style. CSS file as the external style sheet over here by using the link colon CSS Mt abbreviation so guys basically for the HF attribute we have to provide the external stylesheet as you can see now guys inside the body tag we are going to create the diff tag with the class container so basically we have the class over here for the diff tag and inside this diff we are going to create another diff tag over here and then simply we are going to have the class name that is card and then inside this div tag we are going to have two more div tags first of all we will have the diff tag with the class name over here so for this we are going to set the name as programming for beginners that is the name of this YouTube channel that you should definitely subscribe if you have not done so and then apart from this we are going to have another diff tag with the class roll over here and then for this D tag we are going to say YouTuber and coder over here so guys basically we have these two statements inside the diff tags let me just save this file now and let us see how the changes look like on the browser so we are going to run this live server over here so these are the two statements that are getting displayed over here now guys we are going to provide certain CSS properties in this case so first of all for the container class let us Define certain CSS properties over here so guys let us provide the width in this case so let's say we have 250 pixels of width and also a height over here so basically we will provide the height of 600 pixels this time apart from this we will also provide the white color as the background color over here let us change the version of the white color this time and let us provide this grayish color as the background color for this particular container class let me just save this file now so as you can see this is the container that is getting displayed let us adjust the height in this case so that we can see the card properly on the screen so we have provided the width of 200 pixels and the height of 300 pixels over here and this is how the card will look like now guys what we will do is we want to get this card at the center of the screen over here so simply we will provide margin as Auto Value this time so when we save this file as you can see the card is now present at the center of the screen apart from this we will also provide certain CSS properties to the card class that is present inside the container so guys what we can do is we can simply provide the card class name over here and also we will set the width and height as 100% so that the card class takes the entire withd and height of the container class over here and then apart from this we will also provide display it is equal to flex and we will say justify content as Center so that we are able to get this text at the center of this particular container so when we save this file now as you can see we are getting programming for beginners and then YouTuber and coder over here guys by default the flex direction is row over here so what we have to do is we need to make the flex direction as column so that both these strings are displayed vertically so guys over here we will say Flex Direction it is equal to column let me just save this file now so as you can see now both the text are now present at the center of the container as far as vertical alignment is concerned apart from this we will also provide text align it is equal to Center so that we get them at the center of the container as far as horizontal alignment is concerned apart from this let us also provide certain border radius over here for the container class so let's say we have the Border radius this time of 20 pixels and also we will provide the Box Shadow over here so we will provide the blur effect with the color that is black in this case so guys basically we have zero pixels of horizontal and vertical box Shadow and we are providing the blur effect of 20 pixels with the black color when we save this file now as you can see it is giving the shadow over here for this particular card let us also adjust the background color over here to some extent so that it looks more decent so as you can see it is now looking more decent over here after adjusting the background color guys as per your requirements you can provide your own background color based on the project requirements now guys apart from this we will make use of the before and after sudo elements in order to create more HTML elements over here that will help us in order to provide the hover animation so what we will do is for the card class we are going to create the before Pudo element so in this case we make use of the card class followed by 2 * colon and then we will say before seudo element and then guys over here what we have to do is first of all we will have to provide the content it is equal to blank so we provide two times double string over here and then apart from this we also have to set the position it is equal to Absolute now guys since we are making the position equal to Absolute over here we need to make the position equal to relative for this particular card class so over here we will provide the position it is equal to relative this time and now since we have provided the position equal to Absolute for this before sudo element we can simply provide the top CSS property as zero and also the left CSS property as zero so that this new element starts from the top left corner of this particular card and then apart from this we will also set the width as 100% over here and also the height is 100% so that it takes the entire width and height of the card in this case now guys apart from this let us also provide the background color over here so we will provide a Blue version of the background color this time and let us set this lighter Blue version as the background color for this before element when we save this file now as you can see the entire card is now getting covered with the help of this before pseudo element now guys apart from this what we have to do is we will provide the transform CSS property as well in which case we are going to provide the skew over here so we are going to provide the skew by 30° so when we save this file now as you can see this is the skew CSS property that is applied on this particular pseudo element and let us also translate it to the right hand side so basically for this transform CSS property after the skew function that we have provided we can simply provide the translate function as well so we will provide translate X and we will move it by 50% over here and we save this file now as you can see we have moved it by 50% let us move it by 100% over here and see how it looks like so in this case we have moved it to 100% this time so guys in this way we have provided one of the HTML Elements by using the before Pudo element which is part of this particular card class over here now guys let me just adjust the background color for the Pudo element to this particular Blue version of the color so as you can see this is the pseudo element that is getting generated over here now guys similarly we will have another HTML element with the help of the after sudo element over here so simply I'm going to copy paste these lines of code over here and instead of having before we will say after this time and all the CSS properties will be same except the skew for which we have to provide 3° so that it is opposite to the one that we have already created so when we save this file now as you can see this is the way that the after element is also getting created over here now guys the portion that is going outside of this particular card we want to hide it so simply what we can do is for this container we can again provide the position it is equal to relative again since it is a container and simply we will say overflow it is equal to Hidden so that whatever HTML is outside of the boundary of the container it will be hidden so when we save this file now the portion of the seudo elements that we had created which was going outside of the card is Now hidden this time guys apart from this we will also provide certain opacity as well to both these Pudo elements so over here we will provide the opacity CSS property and let's say we provide the opacity it is equal to 0.7 so that we have certain kind of transparency which can be used in order to display this text when we get these Udo elements at the center of this card during the card over animation so guys we have provided the opacity as well of 0.7 for both these cards now guys similarly we will create the before and after seudo elements for this container class as well but this time we will make changes as far as translate X is concerned so over here simply I'm going to copy paste these lines of code once again and instead of the Dot card over here we will have dot container this time for both before and the after pseudo elements and then we are going to keep all the CSS properties same over here except the translate X this time in which case we are going to make it as 85% over here so guys basically the translate X for both that is before and after sudo elements will be 85 person this time when we save this file now as you can see we have another layer of the same sudo elements that is getting displayed over here now guys apart from this we can also provide certain box Shadow for the Pudo elements that we had created previously so that we can see them properly over here so inside this card class with the before element simply we are going to provide the Box Shadow this time and then we will have the 10 pixels of box Shadow and we will have the color as blue so let us see how it looks like when we save this file now as you can see this is the Box shadow that is getting appeared over here similarly we are going to have the box Shadow for the after pseudo element as well so when we save this file now as you can see over here we are getting the Box Shadow this time now guys when we get the mouse cursor on this card we want the Pudo elements to come towards the left hand side over here so what we can do is simply on Hover event we can change the translate X CSS property so guys over here first of all for the card class we are going to define the over sudo class over here and then after this we want to change the translate X property for the sudo element over here so guys simply for the card class in this case we are going to make use of the hover class over here and then we are going to make use of the pseudo element that is before and then what we have to do is we will simply say transform and then we can say translate this time and we will have translate X and it should come to 50% over here so guys basically we are moving the before Pudo element by 50% on left hand side and then guys similarly for the after Pudo element as well we want the same transformation so we provide comma and then we provide the after Pudo element over here so basically as you can see the skew is getting removed over here so simply what we can do is we can also provide the skew as well so we need to provide it separately so over here we have provided the translate X it is equal to 50% and also we will keep the skew X 30° over here and then apart from this for the after sudo element as well we will again translate it by 50% and the skew this time must be 30° so over here we can provide the 30° as the skew parameter so guys when we get the mouse cursor over here as you can see it is moving now towards the left but guys basically we want the smooth transition as well so what we will do is we have to provide the transition CSS property to all these codo elements so basically we will say transition all and then we will provide 0.5 seconds over here and simply I'm going to copy paste these lines of code for all the pseudo elements so that we have the transition that is smooth this time and then apart from this let us also increase the translate X so that it doesn't go towards the extreme left of the card so basically we are going to keep it as 80% over here for both these pseudo elements this time so when we save this file now as you can see this is the way that the transition is happen happening over here similarly we will provide the transition for the container Pudo elements that is before and after so instead of having the class we will simply say container over here and then we will provide the translate X this time it should be 65% over here so when we say 65 so that there is a gap of 15% between the Udo elements of both that is the card class and the container class as well so when we get the mouse cursor over here as you can see we are getting the animation for this particular card over here so guys basically basically we have the issue over here when we get the mouse cursor on this particular sudo element the other sudo element is going back to its original position so in order to solve that we can simply provide the container hover class for all these Transformations that we have provided so let me change that quickly over here so guys as you can see we have the hover sudo class for the container class over here and then after that we have provided the before and after sudo element for the card class and also the before and after Pudo element for the container class as well so when we save this file now now you can see that all the elements are now coming together as far as the animation is concerned so guys in this way you can create the simple card hover animation over here based on your requirements you can change the colors as well and then apart from this we can also make some changes to the text that is getting displayed over here so we can also provide certain scaling as far as the transformation of this text is concerned when the user gets the mouse cursor on these cards over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and CSS projects so stay tuned so now we are going to display these analytics icons as you can see this is the like or the heart icon and then we have the comment icon as well and then we have the share icon as well and when the user gets the mouse cursor over here on these icons they are going to scale themselves by 1.5 times so guys let us move to vs code so guys let us create another folder over here inside the HTML CSS projects folder so in this case we are going to have the folder name as analytics data so guys basically we have this new folder over here inside which we are going to create the index.html file and the style. CSS file as well so now we have created both the files over here now inside the index.html file we are going to quickly create the HTML document and we have the title that is analytics data for Instagram so guys simply we are going to have three icons over here in order to have the like button comment button and the share button in this case now apart from this we will also link the external stylesheet that is style. CSS file with the help of the link tag over here and the HF it is equal to style. CSS now guys inside the body tag over here simply we are going to have the diff tag with the class container this time and then inside this we are going to have the a tag first of all so basically we make use of this a tag inside which we are going to make use of the Box icon so guys basically in order to make use of the icons you can simply use the Box icons.com website where you will find the CSS link over here so simply I'm going to copy this particular link I will provide both these links in the description section below so let me just copy this link link and paste it under the head section of the HTML file so guys basically this is the URL from where the icons will be referenced and will be displayed on the web page wherever we are going to make use of the Box icons now guys after this we have to go to the website that is box icons.com so simply let me just open this website on the browser so guys over here this is the Box icons website now over here simply you can search for the different icons so the first icon that we want to use is the heart icon this time so simply we have searched for heart and when we press enter as you can see this is the icon that we want to use you can use any of the icons based on your project requirements now guys we will click on this particular icon and as you can see on the right hand side we have to go to this font option and then we have this I tag over here with the class name so guys basically this class is used in order to refer to this particular icon from the box icons website so let let me just copy this I tag over here inside the a tag and then after this we will also have the span tag over here and simply we will have the class as data for this pan tag and then we will have the content as 60 over here so we can have any dummy data over here in order to show the count of the hearts and then apart from this let me just copy paste these lines of code that is the links multiple times over here instead of heart in this case we are going to have the other icons that is comment and the share button so over here we search for comment and basically this is the comment that we want to show on the web page so when we click on this we are going to copy this particular itag and similarly let me copy the itag for the share icon as well so guys over here as you can see we have the it Texs with the different class names that will help us in order to display the icons on the web page now guys let me just save this file now and let us start the live server over here so guys as you can see these are the three icons that we have displayed on the web page so guys now we will provide certain CSS properties to these classes that we have defined inside the HTML file so inside the style. CSS file for the container class let us provide certain background color over here and this time we will provide the white version of the background color over here so guys basically we will set this particular background color this time and also we will provide the padding so let's say from top and bottom we want 10 pixels of padding and from left and right we want 20 20 pixels of padding let me just save this file now as you can see this is the diff tag that is getting displayed over here guys apart from this we will also set the width as well so let's say we provide the width of 30% over here when we save this file as you can see this is the div that is getting displayed and then after this also we will make the display it is equal to flex and also we will set the justify content it is equal to Center so that all the icons are displayed at the center as far as as far as the horizontal alignment is concerned now guys you can see that there is no spacing in between these icons so what we will do is instead of providing the center as the justify content we will say space evenly over here so when we save this file now as you can see there is enough space over here in between all the icons now guys what we can do is simply we can also provide the Border radius as well so we will provide the 20 pixels value for the Border radius and also we will provide the Box Shadow so let we just provide the horizontal and vertical box Shadow and over here we will provide the shadow as dark blue color this time so when we save this file now as you can see we are getting the dark blue color as the shadow for this particular diff tag now guys let us get this diff tag at the center of the screen so simply we will provide margin it is equal to Auto so as far as the horizontal alignment is concerned we have got the diff tag at the center of the screen guys this is just a part of the web page in which case you can provide all these icons which is the part of the analytics and user can interact with these icons in order to like comment or share and if you are new to this YouTube Channel please make sure that you subscribe to this YouTube channel so that you get the notifications for the upcoming videos in which we are going to create more HTML and CSS projects now guys so far we have provided the required CSS properties for this particular diff tag now inside the diff tag we need to provide the CSS properties for all these links which are being represented by this a tag over here so guys what we will do is simply we will provide the class name over here as link this time for the a tags and then let me just copy the class names for all the a tags over here so that we can provide the CSS property to this link class so guys let me just copy this link class name over here and then inside this first of all we will provide text decoration as none so that we don't get this underline as you can see so when we save this file now there is no more underline apart from this we want to change the font color to Black by default so we provide the black color as the font color so when we save this file now you can see the changes this time now guys what we want to do is we want to change the font colors of these icons as well we will keep this heart icon as red color so instead of providing the CSS properties inside the external stylesheet we will simply provide the inline style over here so for this particular IE class that is having the heart icon simply we will provide the style and we will say color it is equal to Red this time so when we save this file now as you can see we are getting the red color over here apart from this we will also provide the color CSS property for the other two icons as well so for the comment part let us provide the color as blue over here and for the share part let us provide the other color that is green color this time guys basically we have the red blue and green color for all these icons when we save this file now as you as you can see these are the colors that are getting displayed over here now guys when the user gets the mouse cursor on these icons we want to increase its size so what we can do is simply inside the link class we need to refer to this it tag over here so we come to this style. CSS file we provide this link class and then the I tag over here and then after this we want to make use of the transform CSS property in which case we will make use of the scale function over here we will say that it should scale by 1.3 times this time so when we save this file now so if you see the changes already there is a scaling that is happening over here now guys we want the scaling on the mouse hover so we have left out the hover sudo class this time so simply we provide the colon after the it tag and then we say hover sudo class when we save this file now as you can see these are the default sizes for all these icons and when we get the mouse cursor over here you can see that the scaling is happening by 1.3 times over here let us increase the scaling by 1.5 this time so that it gives a decent look so when we save this file now as you can see this is a scaling that is happening and we want the scaling to happen smoothly so simply for the link class we can provide the transition CSS property and we can say all over here and let's say we provide 0.5 second as the timing so when we save this file now we still cannot see the transition that is happening smoothly so guys we have done the mistake over here this CSS property should belong to the it tag this time so basically we will provide the link class followed by the it tag and then over here we will provide the transition CSS property we will say all and then 0.5 seconds so since we are making the changes for this I tag the transition property should be associated with the I tag over here so when we save this file now and get the mouse Cur over here as you can see the transition is happening now the scaling of the icon is happening to 1.5 five times with the 0.5 seconds timing so guys in this way you can provide your own buttons based on your requirements with the help of these icons the links I have already given in the description section below so comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and the CSS projects so stay tuned so guys now we are going to create the simple registration form in which case we are going to have multiple input Fields over here along with the password input field as well and when the user gets the mouse cursor on any of the input Fields as you can see when we click on this input field over here we are going to get this feedback with the help of this box Shadow on that input field so guys basically when you click on any of the input Fields over here we will have the box Shadow for that particular input field and apart from this when we get the the mouse cursor on this register button it is going to scale itself with the help of the scale function so guys we are going to create this registration form so let us move to the vs code so now we will create another folder over here inside the HTML CSS projects we will name it as registration form so guys basically we have this new folder that is created inside this we are going to create the HTML and the CSS files so basically we have the index.html file and the style. CSS file which will be the external style sheet over here now guys inside the HTML file we are going to create this HTML document and then we will have the title that is registration form over here for the title tag and then we will also link the external stylesheet with the help of this link tag over here so we have the HF it is equal to style. CSS file now guys over here inside the body tag we will have the div tag with the class container inside which we are going to have the different input fields that will help the user in order to complete the registration so guys basically we have the sff tag with the class container over here now let us provide certain input Fields over here so we use the input tag along with the type it is equal to text and then the first input field will be the full name over here we will also keep the ID value as same that is full name this time and then we will also have the placeholder and we will say enter full name over here so guys basically we we have the full name as the first input field apart from this let us also have the class attribute this time and then we will say input hyphen field over here so guys basically we are going to provide certain CSS properties to this class name and then after this let us provide certain line brakes over here so we have couple of line brakes this time now similarly we will provide more input Fields over here so let me just copy paste this line of code and then after the full name we will ask the user to provide the username over here and then the same value we will provide for the ID part as well and for the placeholder as well and then for the third input field we will ask the user to provide a password so that the user can set the username and password over here so basically we have the password as the third field and then we will ask to confirm the password so basically user is supposed to provide the password once again so that there is no mistake that is made by the user so basically we have confirmed password as the placeholder this time guys for these two input fields that is password and confirm password we will keep the type as password over here so that it is not visible to anyone else on the screen so basically we have set the type as password over here and then guys in the end we want the email of the user to be set so basically so we have provided the name value as email over here and also the ID as well and for the placeholder as well we have updated the enter email this time so guys basically we have all these input felds inside the container and then guys after this also we will provide the button as well for registration so simply we provide the button tag over here and also we will provide the class as register over here so this is the button tag with the class register and also we will have the text that is register for this particular button let me just save this file now and start the server so that we can see the changes on the web page so guys as you can see these are all the input Fields by default that are getting displayed over here we have not provided any CSS properties so far so guys basically we are going to provide the CSS properties one by one in order to make this registration form look more attractive so guys what we will do is inside the style. CSS file first of all we will make use of this class name that is container over here so we simply provide dot followed by the container class and then we will have the width of 30% so let's say we have the width of 30% over here also we will provide certain background color so let's say we have this light version of green color as the background color this time so let me just save this file now as you can see we have this light version of the green color as the background color over here apart from this we will also set the display it is equal to flex and since all the flex items must be present in a column so basically we will set the flex direction as column over here so when we save this file now as you can see these are all the flex items that are displayed right now now guys apart from from this we also want to set the padding as well so simply we will keep the padding as 20 pixels and also we will provide certain border radius over here so we provide the Border radius of 20 pixels once again we will provide the Box Shadow so over here we will provide 10 pixels of blur effect with the color that is black color over here when we save this file now as you can see this is the registration form that is getting displayed this time now guys apart from this we also want the margin it is equal to auto so that we can get the registration form at the center of the screen over here as far as the horizontal alignment is concerned so as you can see this is a very simple registration form that the user can use in order to register himself or herself now guys after this let us provide certain CSS properties for these input Fields over here so simply we are going to make use of this class name that is input hyphen field so let me just copy this class name and then inside the style. CSS file we will make use of this class name over here first of all let us provide certain padding so let's say we have the padding of 10 pixels over here also we have the Border radius of 10 pixels let me just save this file now as you can see this is the way that the registration form is getting displayed this time apart from this let us also remove the line brakes that we have provided since it is creating the Extra Spaces in between the input Fields so guys over here we have only kept one line break let me just save this file now and as you can see these are all the input fields that are getting displayed over here now guys what we want to do is when the user gets the mouse cursor over here and clicks on any of the input fields we want certain box Shadow to be provided to these input Fields so simply inside the style. CSS file we have to make use of this class name that is input field over here and we will make use of the Pudo class that is focus this time so guys basically this Udo class is responsible in order to provide any CSS properties when the user gets the mouse cursor on the input field and clicks inside the input field over here so that is the time when those CSS properties will be applied so guys over here what we will do is simply we will provide the Box Shadow over here and this time we will say 10 pixels of box Shadow and we will provide the blue color as the Box Shadow this time when we save this file now when we get the mouse cursor over here and click on it as you can see we are getting the blue color over here and when we click on the other input Fields as well we are getting the blue color as the Box Shadow let us increase the blur effect to 15 pixels over here when we save this file now as you can see the blue color is now getting more visible over here with the light green background color that we have provided to The Container now guys apart from this let us also provide certain CSS properties to this register button over here so simply we will make use of this register class and then we will provide certain CSS properties to this Reg register class by using the dot character so over here first of all we will provide the width as minimum content over here let me just save this file now as you can see only the required space is being taken by this particular button also for this container we will set the Align items so that we get all the items at the center of the container so when we say align items it is equal to Center as you can see all the input fields and the register button is now at the center of the container and for the input field we we will set the width as 80% over here so that there is no Extra Spaces that is left as you can see on the left hand side and the right hand side of the input Fields so basically we will keep the width as 80% over here so as you can see 80% of the space is being taken by all the input Fields this time now guys for the register button let us provide more CSS properties over here so we will provide the background color over here as green color also we will set the color as white color that is the font color over here and then apart from this we will also set the padding of let's say 5 pixels this time and the Border radius as well so simply we will say border radius of 10 pixels when we save this file now as you can see this is the button that is getting displayed over here we will also remove the border so simply we will say border it is equal to none and let us increase the padding to 10 pixels this time so this is a decent register button that is getting displayed over here also we want to change the cursor icon so we will set the cursor it is equal to pointer so when we get the mouse cursor over here on the register button it is getting converted to the hand tool over here now guys apart from this when the user gets the mouse cursor on this register button we want to scale the button so how we can do that so simply we will make use of the overover sudo class over here so we will say register colon hover and then simply we will say transform and this time we will make use of the scale and it should scale by 1 two times over here so when we save this file now and when we get the mouse cursor over here as you can see the button is scaling Itself by 1.2 times that we have provided and if we want the smooth transition simply we will provide the transition CSS property to this register button over here so we provide transition and we will say all and this time we will say 0.5 seconds as the timing when we save this file now and now when we get the mouse cursor as you can see there's a smooth transition that is happening over here the register button is increasing its size so guys basically this is the way that you can provide the transition effect to any of the HTML elements based on your requirements and then guys when we get the mouse cursor over here and click on any of the input Fields basically we are getting the Box shadow of the blue color this time so that the user gets the feedback that this is the input field that is getting clicked and you are supposed to provide the data inside this field so guys simply let us provide certain data over here so we have programming for beginners that is the name of this YouTube channel which you should definitely subscribe if you have not done so and let us provide the programming as the username also we will provide the password so let's say we provide some password over here and also we want to confirm password so simply we provide the password and then we will provide certain email ID over here so program gmail.com and then simply the user have to go to register over here in order to register himself or herself so guys this is a very simple registration form that we have created just by using the plain HTML and the CSS properties so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video in which we are going to create more HTML and the CSS projects so stay tuned