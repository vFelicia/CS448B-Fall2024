hey what's up guys welcome to another video in which we are going to learn about recursion function in Python Programming so guys in Python we know that a function can call other functions as well it is even possible for the function to call itself and when the function call itself it's called recursive function so basically these type of construct are termed as recursive functions whenever a function calls itself from inside its body so for example the factorial of a number is the product of all the integers from 1 up to that number so if you see the example the factorial of 6 which is denoted as 6 and then exclamation mark it is equal to 1 multiplied by 2 multiplied by 3 multiplied by 4 multiplied by 5 multiplied by 6 which is equal to 720 and this is the factorial of the number that is 6. so guys we can find the factorial of any number by using the recursive function so let us understand how recursive functions work with the help of example over here so let's say we have the factorial function in this case so factorial is the name and then let's say if you provide the variable name as X over here so what we will do is we will simply have to provide the condition over here that is if x is equal to 1 we have to return 1 in this case so guys always remember that whenever we are having the recursive function we need to have the end point we need to have a limit on which we need to return some basic number over here so this is the limit in this case that is when the value of x is equal to 1 that is at the lowest level the function needs to return the value which is 1 and then if it is not 1 then we can call that function once again now how do we call that function we simply use the x value that is the current x value and then we multiply that number with the factorial of x minus 1 so this time we provide x minus 1 in this case and one more thing that we can do in order to return this result is we can have the return keyword so guys we will understand this function in detail now before which we will just call this function over here that is factorial and let's say I provide the number that is 6 that we have already seen for which the factorial of 6 must be 720 and what we will do is since this factorial function is returning this value Let Us return X multiplied by this recursive function we will catch the value in the result so result it is equal to factorial of 6 and we will simply have the print statement saying that factorial is and then colon and then we can simply provide result variable over here so let me just save this file and try running this code guys no need to worry over here I will make you understand each and every line of code over here and how it works so just stick with me till the end of this video so as you can see factorial is 720 so this is the result so we have got the correct result over here now let us understand the working of this recursive function so what exactly is happening over here is we have defined the function that is factorial in this case now result is the variable name for which we will get the value from this factorial function that we have called so basically the control statement comes over here factorial of 6 so the control statement will go to the definition of this function so x value is 6 right now so what we will do is we will understand over here one step at a time so right now X it is equal to 6 in this case so is x value equal to 1 no in this case so the control flow will come over here and it will check this expression that is X multiplied by factorial of x minus 1. so this expression we will put over here that is 6 which is the value of x multiplied by factorial of x minus 1 so x value is 6 so x minus 1 will be equal to 5 in this case now what will happen is now factorial of 5 is being called over here so what is the factorial of 5 the control flow will go back again to this function and that is why we call it as recursive because from the body of this function we are calling the function itself now this time x value is 5 so is x equal to 1 no in this case so this time again this expression will be called so x value will be 5 in this case and multiplied by factorial of x minus 1 which will be 4 so again next time what will happen is 5 multiplied by factorial of 4 will be called now what is the factorial of 4 so again the control flow will come over here it will check whether X is equal to 1 no in this case so again this expression will be computed so this time it will be X is equal to 4 multiplied by the factorial of 4 minus 1 which is 3 right now and then again now x value is 3 so again it will be 3 multiplied by factorial of 2 in this case and then the last statement that is 2 multiplied by factorial of 1 in this case now when the factorial of 1 is being called what will happen is factorial of X which will be factorial of 1 in this case so X is equal to 1 yes in this case so it will return true and the control flow will not go over here to carry out the computation of this expression so return 1 will return to the factorial of 1 function so in this case factorial of 1 will become 1 over here now 2 multiplied by 1 is equal to 2 and this result will be returned to this function that was called so 2 multiplied by 1 is 2 so 2 will be returned over here 3 multiplied by 2 is 6 so factorial of 3 will become 6 and 6 will be returned over here 6 multiplied by 4 is 24 so factorial of 4 will have 24 as the result and then 24 multiplied by 5 which is equal to 120 and that value will be returned to this function call that is 120 and then 120 multiplied by 6 will be 720 which is the last expression that was computed and that is what we will get over here that is the result will be 720 in this case and that is what we got 720 over here now guys similarly we have seen that the factorial of 4 is equal to 24 so this result we can get simply by calling the factorial function with the value 4 as the argument so let me just save this file and try running this code so as you can see factorial is 24. similarly we can get the factorial of 3 which is equal to 6 so we can simply put 3 over here and then let me just save this file and try running this code so factorial is 6 in this case and guys that is how the recursive function works this is just one example that is in order to find the factorial we can have any kind of implementation code based on your requirements provided the requirement can be fulfilled by using the recursive functions if we see one more example let's say we want to find the factorial of the number that is 10 let me just run this code once again so it says three six two double a double zero and that is what we get as the factorial of 10. comment in the comment section below whether this result is correct or not so guys please practice on your own so that on different inputs you get different output and that is how you are going to learn more about python programming so guys there are certain advantages and disadvantages of recursive function as you can see recursive functions make the code look clean and elegant so we have made the code very clean and elegant over here a complex task can be broken down into simpler sub problems using recursion so we can have any number that is 100 or 200 and get the factorial of that number just by using these lines of code over here and then sequence generation is easier with recursion than using some nested iteration now what are the disadvantages sometimes the logic behind recursion is hard to follow through so basically as you have seen as I have told you that there must be some end point that you need to provide so basically this is the end point in this factorial function based on your requirements there must be some end point up to which you need to restrict the call of the function from its body itself so that condition you need to identify based on the requirement and recursive calls are expensive they are inefficient as they take up a lot of memory and time and the recursive functions are hard to debug so guys basically these are certain disadvantages so it depends on your requirements what exactly you want to implement and accordingly you can use the recursive functions please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is anonymous function in Python Programming so stay tuned