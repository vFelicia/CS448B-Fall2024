hey what's up guys welcome to another video in which we are going to learn about operator overloading in Python Programming so guys in Python we can change the way operators work for user defined types so for example the plus operator will perform arithmetic addition on two numbers in the same way it will merge the tool list as well or else if we are dealing with the two strings then it can concatenate two strings so the same plus operator can perform multiple operations depending on the operands whether they are numbers or whether they are strings or list so this feature in Python that allows the same operator to have different meaning according to the context is called operator overloading so this we are going to check with the help of examples as well apart from this there are certain special functions in Python so basically the class functions that begin with the double underscore are called special functions in Python they are called double underscore functions because they have a double under the scope prefix and suffix such as as you can see this init which can be treated as the Constructor of a class it is one function which starts and ends with the double underscore in the same way the plus operator can be overridden by using this double underscore followed by add and then double underscore again and then open and close parenthesis so guys let us check operator overloading implementation in action using the vs code over here so we'll see the very basic examples first of all so let's say we have num1 it is equal to 10 and then number two that is num2 it is equal to 20 so if we simply Print num1 Plus num2 over here so num 1 plus num2 so basically it is 10 plus 20 which is 30 in this case so when we just save this file now and try running this code so as you can see we are getting the result as 30 but what if these variables are strings so instead of numbers let's say if we enclose them within the double quotes this means that we have a string over here that is 1 0 that is 10 and then over here as well we have another string that is 20. so when we do num 1 plus num2 instead of 30 we will get the concatenation of this string which means 10 will be followed by 20 in this case when we try to print the statement so let me just save this file now and try running this code so as you can see we are getting 10 20 so guys we have not changed anything over here the operator is same and the operands are also same the only thing is we have changed the values to the string and that is what operator overloading means that is by using the same operator we can have the different results based on the operands values now guys let us check how operator overloading can be implemented when we are dealing with classes over here okay let's say we have a class that is named as point over here and this class let's say we have a Constructor inside it so we have init method inside this so init method it will take one parameter that is self and what we will do is let's say it has two attributes over here so self dot X so the point class it will have two attributes that is X and Y coordinates so over here let's say we provide the x value by using the parameter that we are getting so let's say we have X1 over here and let's say we have y1 over here so self dot X it will be equal to X1 and then again we will have self dot y it is equal to y1 in this case so whenever we are creating the object by using the point class over here the Constructor that is init method will be called along with the two points that we will be passing and those two points will be assigned the values to these variables it is X and Y over here now guys in order to overwrite the two string method we also have another method that is double underscore and then Str so as you can see apart from this we have many other functions that can be used when we provide the double underscore so vs code is suggesting us the entire list of functions which we can use in our python code so over here we are going to use this Str and then we are going to have our custom code inside this Str so what we are going to do is we are simply going to print the values of this X and Y so how do we do that we are going to use the formatting part and then inside this we are going to call the cell followed by Dot and then we have X and then again we have comma over here and then again we call the self dot y so over here we are simply printing the X and Y values which are separated by the comma over here and then guys let's say we want to override the plus operator over here so before having the function inside the class what I will do is first of all we will create the object so let's say P1 is the object name it is equal to point which is the class over here and what we do is we do 1 comma 2 that is X and Y values over here and then let's say we have another point that is P2 it is equal to point and then this time we are going to provide the X and Y coordinates as 2 and 3 over here and what we want to do is we want to print the sum of both these points that is P1 plus P2 so guys in this case we are using this plus operator and then these are the operands that is P1 and P2 so how do we have the custom implementation of this plus operator over here which we will call it as the operator overloading as well so as we have seen over here we have something called as double underscore and then add and then double underscore so this represents the plus operator as well so we can use this method inside the class in order to have our custom implementation of addition of both these points so over here we have def followed by double underscore and then we have the add method over here followed by double underscore and then we have the open and close parent asset and then inside the parenthesis we will provide the self as the parameter now guys apart from the self parameter basically when we do P1 plus P2 it is simply P1 dot this particular function that is we are going to Define followed by this P2 which will be a parameter so we need to catch this as the second parameter over here so what we will do is after the cell we will have another parameter and we will name it as other over here so what we can do is over here we can create another variable that is X it is equal to self dot X over here plus we need to use another parameter that is other which represents the other point that is P2 in this case so over here we will say other dot X in this case and then the same way we are going to have another variable that is y it is equal to cell dot y plus other dot Y in this case and then guys what we have to do is simply we need to return the point of both these values that we have found that is X and Y so basically return point of X comma Y in this case so we have X comma y so guys this is the implementation of our addition operator we are doing the operator overloading in this case so basically P1 plus P2 it is same as V1 followed by Dot and then the add function being called along with the parameter that is P2 so in this case this function will be called and it will return point of X comma Y and basically while returning this we are providing the print statement so behind the scenes this function will be called in order to print the statement so guys basically over here instead of the print statement we need to have the return statement over here so I'll just remove this part over here and we will say return followed by double quotes and then inside this double close we will be using the formatting so let's say we have 0 and then comma and then let's say we have one followed by Dot and then we have format over here and inside this format we need to provide the x and y values so self dot X and then comma and then we have self dot Pi in this case so basically this is the way in which we are going to print the values that is of X and Y so guys let me just save this file now and try running this code so as you can see we are getting the coordinates as 3 and 5 this x and x values are getting added so 1 plus 2 it is equal to 3 and then 2 plus 3 it is equal to 5 so we are getting 5 over here so guys basically what we have done is if you see the main code over here we have just defined the P1 and P2 which are simply the points and if we were not having this implementation inside the class that is the string and the addition part then we won't be able to add both these points directly because by default this plus operator can only handle numbers or strings Or List over here but in order to handle the custom classes we need to define the custom functions as well inside those classes and according to our requirement we can have the code inside those custom functions guys we can also change the formatting over here in order to change the formatting we can say that X it is equal to this particular thing and then after comma we can have y it is equal to self dot Y part over here so let me just save this file now enter try running this code so as you can see we have changed the formatting exit is equal to 3 and Y is equal to 5 so whatever format that you want to print in or whatever code you want to have inside this Str method you can have it accordingly based on your requirements so guys this is operator overloading for you with the same operator you can have multiple implementations and it can have different meanings as far as operands are concerned similarly we have other special functions and the other operator overloading functions as well as you can see we have this init which initializes the attributes of the object which we have already seen as far as class Constructors are concerned then we have Str which returns a string representation of the object that is what we have implemented over here it returns a string implementation of the object that is point x comma Y and then we also have Len which Returns the length of the object then add which adds the two objects so over here we have implemented the add method which adds two objects over here which is P1 and P2 that is what we have achieved in this particular program apart from that we also have this call function which calls the objects of the class like a normal function guys apart from this we can also have other operator overloading functions as well for addition we have seen P1 plus P2 which means P1 Dot and then underscore underscore add will be called in which case the parameter will be P2 similarly we can have the subtraction multiplication the power of two objects and then we can have division as well and then we can have low division and many other mathematical operations can be achieved by using the operator overloading just how we have done in this program so guys practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is overloading comparison operators in Python Programming so stay tuned