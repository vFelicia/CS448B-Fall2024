hey what's up guys welcome to another video in which we are going to write Python program to check the Armstrong number so guys basically the user will enter the number over here and we are going to check whether that positive integer is a Armstrong number or not so a number is an Armstrong number of the order n if the number that is ABCD and then if it is equal to a raise to n and then B raised to n c raised to n and so on the sum of all these numbers is equal to this particular number on reference height so guys for example in case of an Armstrong number of three digits the sum of cubes of each digit is equal to the number itself so basically if we take the number that is 153 the length of this number is three digits the cube of all these numbers will be added and then if the answer on the right hand side is 153 then this number is going to be the Armstrong number so guys we are going to implement this logic with the help of the Python program in vs code so guys over here the very first thing that we are supposed to do is take the number from the user so we say number it is equal to input function and then we will ask the user to enter the number and then guys over here user will enter the number now this number we need to convert it into the integer from string input so basically whatever data is provided by the user using this input function it is of the string data type we need to convert it into the integer so now we are having the number inside this number variable we need to find the length of this number so basically we are going to use this variable that is length it is equal to we will use the length function over here and we are going to convert this number to the string first and then we are going to provide this number inside the Str function so guys over here what we are doing is again we are converting this integer into the string and we are getting the length of the string using the Len function and the length will be stored inside this length variable guys this length is required in order to find the power of the individual digits for this number that we just got from the user so guys what will be the logic over here we are going to have another variable that is temp and we will store this number that is entered by the user inside the stamp variable and then we are going to have the while loop and inside the while loop we will have the condition whether this temp number if it is greater than 0 then go inside this while loop and then we are going to extract the digit so basically we are going to get the last digit of this number inside this digit variable it is equal to we will say the number that is entered by the user person 10. so guys over here what exactly we are doing is let's say if the entered number by the user is 153 so we are getting this last number that is 3 over here inside this digit by using the number person 10. now what we have to do with this digit is we have to find the power of this digit that is 3 raised to the number of digits inside this number that is entered by the user which is already present inside the length variable so what we will be doing is we will simply have the digit and then double multiplication over here will help us in order to get the result of Digit raised to the length variable over here so guys this is nothing but this will be 3 raised to the length which is 3 in this case if we are entering this number that is 153 and then guys what we have to do is we have to find the sum of all these digits so over here what we will be doing is we will have another variable that is sum initially the value of this sum it is equal to 0 and then over here while getting the digit raised to the length we will assign it to the sum variable and add all the numbers that we are getting by using this plus and then equal to operator now guys the last step is to reduce this number that is after getting this digit and getting this expression adding it into the sum variable now we need to get this number so how do we get this by reducing this 153 to 15 over here so we are going to just divide and number that is 10 divided by 10 and then assign it to the variable temp again so over here what we are doing is we are just removing the last digit from here and 15 will be stored inside the temp variable and next time when the control flow comes back again over here temp is greater than 0 yes it is since the value is 15 and then again we will get the digit variable X number person 10 over here now guys one change that we have to do is instead of this number which is having 153 SD value we need to use the temp variable over here since this is going to have the updated number from where we want to get the last digit and then guys in the end we are going to have the sum over here now what we can do is we have the original number that is entered by the user inside this variable that is number and we also have this sum variable which is very important so what we have to do is in the end we just need to compare both these variables at a sum if it is equal to number then entered number is the Armstrong number so over here we will print we will say no number is that is entered by the user and sum is and then open and close curly braces over here we will be displaying the sum that is computed inside the while loop so what we have to do is we have to use the dot format function and we will simply provide the number over here as the first parameter and sum over here is the second parameter guys what we will do is we will have the print statement outside of this condition that is sum is equal to number so basically we are going to print both that is number and sum as well and then if both of these numbers are equal then we will say enter number is Armstrong number so we will simply say Armstrong number and then again in the else part what we will do is we will have the else part and we will say not an Armstrong number over here so if both the numbers are equal then it is Armstrong number if both the numbers are not equal then it is not an Armstrong number so guys let me just save this file now and try running this code so as you can see the code is asking the user to enter the number let us provide the same number over here that is 153 so over here when we provide 153 AC number and press enter so we are getting some different sum over here that is 179.46 so guys there was a mistake over here while dividing the temp by 10 we need to use the double forward slashes over here in order to get the division operation correct so guys over here let me just save this file now once again and try running this code so while entering the number let us provide 153 that is the same number when we press enter as you can see number is 153 and we get the sum as 153 and that is why it is an Armstrong number that's because both the number and the sum of the cubes of all the individual digits in these numbers is same guys let me just run this code once again there is another Armstrong number that is 1634 so let us provide that so we have one six three four over here when we press enter as you can see number is 1634 and the sum is also 160 3 4 which gives us the Armstrong number let us verify this in the calculator as well so what we have to do is we have to find the sum of all the individual digits raised to the 4 that is the length of this number so 1 raised to 4 plus 6 raised to 4 plus 3 raised to 4 and then plus and then guys when we press enter over here as you can see we are getting 1 6 3 4 which is matching with this sum that is 1634 that we got after Computing the sum over here and guys that is the reason why since both the number and the sum is equal this is an Armstrong number let me just run this code once again we will provide a different number that is 1635 this time the last digit over here we are changing it to 5 over here instead of 4 so guys when we press enter as you can see number is 1635 but the sum is 2003 and since both these numbers are not matching it is not an Armstrong number so guys in this way we can easily find whether the entire number is the Armstrong number by by using this logic over here that we have just written using the Python program guys let us run this code once again over here and let's see whether the number that is 321 when you enter this number whether it is an Armstrong number take this as a homework for you practice on your own so that you come to know whether this number is an Armstrong number or not and comment in the comment section below whether this is an Armstrong number or not an Armstrong number let us see whether your answer is correct or not apart from practicing make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Python program to display powers of 2 using for Loop so stay tuned