hey what's up guys welcome to another video in which we are going to learn about inheritance in Python Programming so guys inheritance is a way of creating a new class for using details of an existing class so this we are going to check with the help of examples as well the newly formed class is a derived class which is also called as a child class and similarly the existing class is a base class or the parent class so guys what we are doing over here is we are already creating a parent class that is also called as a base class over here and then we also create a child class for which the attributes are derived from the parent class from here and this is what is called as The Inheritance now what will be inherited all the attributes provided that they are public along with the methods will be inherited by the child class so guys let us check python inheritance with the help of example now over here so let us switch to the vs code first of all we will create the parent class so let us say we have the class that is called as animal over here and inside the this animal class we will Define two functions that is eat and sleep so we will have def keyword followed by eat that is function 1 and then inside the parenthesis we are going to have the parameter that is self always remember guys whenever we are calling the function inside the class it is going to take a single parameter which is going to be the object by default so we need to catch that object with any name as a parameter over here so we have given the name of this parameter as self over here so that we can identify that this is the object and then we can use this object as well in order to access its attributes and inside this it function we are going to have a simple print statement and we will say I can eat so guys this is a statement that is going to be printed when we call the eat function using the animal object and then similarly we will have the Sleep Method as well so we have the EF keyword followed by Sleep Method and then again we will have the parameter as the self which will be passed by default and then inside the us again we are going to have the print statement and we can say I can sleep so Guys these are two methods or functions that we have defined inside the parent class that is the animal class now guys how do we inherit these methods to another class so let's say we have another class over here which will be a child class of the animal class so we are going to have another class and let's say the name of the class is dog over here and then in order to have its attributes and functions of the superclass that is the animal after this name of the class that is dog we have to provide open and close parenthesis and inside this parenthesis we have to provide the name of the superclass that is animal in this case so this particular class that is animal we want to inherit its attributes and functions inside the child class that is dog so this is the way that we inherit the super class and now we can have a colon over here and then we can have the attributes and the functions of this class that is dog class separately so over here we are going to have the def keyword followed by let's say I am simply going to have the display method over here and it is going to take one parameter that is self and then we are simply going to print that we are inside doc class so this particular statement will be printed whenever we are going to call this display method over here so guys this is the way that python returns Works what I will do is I'll just zoom out little bit so that you can see the entire code at once so over here we have created the superclass that is the animal class and then we are creating another class that is called as the child class and after the name of the child class we are providing the name of the superclass over here that is the parent class inside the open and close parenthesis and what this will do is the eat and sleep methods will be now available inside the doc class as well so guys why this is important so let us come out of this class now and what we will do is let us create the object of this class that is the dog class so what I will do over here is we will create dog one that is the object of the dog class followed by equal to and then the name of the class that is dog over here so we have created one object of the dog class now guys ideally we have seen that we can call the display a method which belongs to the dog class so we can do that over here so I am going to call the dog one object followed by Dot and then we have the display method so after this we are going to have the open and close Parent Access let me just save this file first and try running this code now so as you can see we are getting we are inside talk class which means this statement is getting printed now guys do we have any other method apart from this display method yes we do have and those are eat and sleep methods why so because we have inherited the methods from the animal class by using the python inheritance so basically we can use this object name that is dog one in order to call eat and sleep methods over here so if we call both the methods so I'll say dog one followed by Dot and then as you can see PS code is suggesting us this eat method as well so we have 8 followed by open and close parenthesis and then again we will call the dog one object followed by Dot and then Sleep Method is also being suggested by vs code so we are going to call both the methods over here so let me just save this file now and try running this code so as you can see we are getting all the three statements that is we are inside a doc class I can eat and I can sleep which are the statements that are being printed by using these methods respectively so guys this is the power of python inheritance we can use the different attributes and the methods that were defined in a super class inside the subclass by using the object of the child class over here which is also called as the subclass over here guys it is very important to note that whenever we are defining the methods inside the class we need to provide one parameter over here which is going to be the object that will be passed so behind the scenes what is happening over here is when we call dog1 dot display over here the top one object is being passed with this display method even though we are not providing any parameter over here but behind the scenes the object is being passed over here and it needs to be caught by this particular method what happens if we don't provide this parameter let us check this so I'll just remove the self keyword over here and I'll just save this file now over here we are not receiving any parameter as we can see so let me just run this code now so as you can see type error.display takes zero positional arguments but one was given so basically behind the scenes this dog one object is being passed and we need to have a parameter over here while defining the function and that is the reason why we had given this self parameter name in order to identify that this is the object of this particular class that is Doc so let me just save this file now and try running this code once again so as you can see there are no more errors that are getting displayed and all the three statements are getting displayed over here now guys what are the uses of inheritance so as you can see since a child class can inherit all the functionalities of the parents class this allows code reusability so as you can see over here we need not have to provide the eat and sleep methods once again inside inside the dog class and we were able to access both these methods by using the object of the dog class without actually providing the definition of those methods over here once a functionality is developed you can simply inherit it no need to reinvent the wheel this allows for cleaner code and easier to maintain now since you can also add your own functionalities in the child class you can inherit only the useful functionalities and Define other required features so guys based on your requirement it depends on you which class you want to inherit and create the child classes and the panel classes over here based on your project requirements so guys practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is a Constructor in Python Programming so stay tuned