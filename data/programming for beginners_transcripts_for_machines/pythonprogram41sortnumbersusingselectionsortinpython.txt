hey what's up guys welcome to another video in which we are going to write Python program to sort numbers using selection sort algorithm so guys the selection sort algorithm sorts an array by repeatedly finding the minimum element considering the ascending order from the unsorted part and putting it at the beginning so guys we are going to check this with the help of examples as well basically the selection sort algorithm finds the minimum element and places it at the correct position in the unsorted part now the algorithm maintains two sub arrays in a given array so basically the first sub array which is already sorted the remaining sub array that is unsorted now in every iteration of the selection sort the minimum element considering the ascending order from the unsorted sub array is picked and moved to the sorted sub array so guys for example as you can see this is the array that we are considering these are the elements that are present in the unsorted array and then in the first pass what will happen is out of all these elements the minimum element that is 11 will be considered and it will be placed in the correct position that is the first position over here so after the first pass as you can see the 64 has been replaced by 11 and this 64 that was present at the first position was being placed at the last position now for the second pass we take the second element that is 12 which is the second smallest element and it will be placed at the second position and so on all the elements inside the array will be sorted using the selection sort algorithm by using the minimum element in every pass so guys let us check the Python program in order to implement the selection sort using vs code so guys over here we will have the variable name as list one and we will Define the elements as these elements that we have just seen so I'll just copy this and paste this over here inside the open and close Square records so guys this is the way that we have defined the list over here in the python now guys what we will do is we will Define the selection sort function in order to implement the selection so algorithm which will return as the sorted array over here so first of all we will print the unsorted array that is the original array over here so we say original list and then colon and then we will simply print the list one over here which is the unsorted list in this case now what we will do is we will print the sorted list as well after calling the selection sort function so over here we will have sorted list and then colon and then again what we will do is over here we will call the function that is selection sort that we are going to Define it is going to pass one parameter that will be list one over here that is the entire list that we have defined now guys what we will do is we will Define this function that is selection sort before the Declaration of this list once over here we will have def keyword followed by the selection sort function name and then it will take one parameter that is going to be list one we are going to have the same name that is is list one over here so guys over here how the selection sort algorithm works is we have to find the minimum element so what we will do is we will have the for Loop for I in range and then it will be the length of this list so guys in order to find the length of the list it will go from 0 up to the Len method we can use in order to find the length of this list one over here and then guys for each iteration what we will do is we will find the main index so basically the initial main index it is equal to I so what we are doing over here is the first element that is 64 over here we are assigning the index of this first element to the main index considering that this is the minimum element now guys what we will do is we will have the nested for Loop over here so for J in range and then it will go from I plus 1 this time so from this next element which is the unsorted array we have to iterate through all the elements and we need to compare those elements with this first element that is 64 which we are assuming that it is the smallest element over here so we will say I plus 1 in this case and then again it will go up to the length of list one so we say Len and then list one over here and then guys inside this we need to compare these numbers that is being represented by this Jade index with the ith index over here and then we need to see which of the numbers is smallest from this so what we will do is we will have the if condition and then inside this we will have list 1 of J if it is less than less than 1 of Min Index this time so we say Min Index this time so if any of these numbers that is of the unsorted part if it is less than this number that is the first element over here then we are going to assign the J the index to the main index over here so after this colon we will have Min index it is equal to J so guys basically what we are doing is first of all we have assumed that this is the minimum number and if in case we find any of these numbers which is smaller than the first number over here we will assign that particular numbers index to the main index over here so 25 will be Min index initially and then 12 will be again Min index since 12 will be less than 25 and then since 22 is not less than 12 so mean index will be still represented by 12 and then finally we get 11 which is again less than 12 over here so finally we will get the Min index as the last element over here now guys after the end of this inner for Loop we will have the Min index which is representing the smallest number out of all these four numbers over here so the smallest number needs to be placed at the first position so what we will do is after this inside inner for Loop we will simply swap both these numbers that is 11 and 64. so how that can be done we can simply use list one and then we will use the I the index over here yes it is representing the first element over here so less of I and then comma we will again have less 1 of Min Index this time so we have Min index it is equal to so basically this I is being represented as 0 index over here and Min index is the last index over here so these should be swapped with each other so over here we will have list one and then this will be Min Index this time and then this will be list one and then I so guys basically this number that is list one of Min index which is 11 it will be assigned to list I which is 64 right now so 11th will be placed at this position that is the first position and 64 which is being represented as list 1 of I will be placed at the last position over here and then guys the control flow will go to the next iteration as well in order to get the correct number at the second position and so on all the numbers will be sorted using the selections hot algorithm so guys let me just save this file now and try running this code so as you can see we are getting the original list over here but sorted list is none that's because we are not returning this list one over here after the execution of the function so what we have to do is we have just missed the return statement over here so we need to return the list 1 which is already being sorted over here so let me just save this file now once again and try running this code so as you can see we have got the sorted list now it is saying 11 12 22 25 and then 64. so guys all the elements are sorted Now using the selection sort algorithm that we have just implemented using these many lines of code now guys let us see another example over here I'll just change the content of the list one so let's say we have negative 3 comma negative 5 and then negative 1 and then let's say 15 and then 14 and then 10 and then 100 and then let's say 54 and then 67 let me just save this file now and try running this code once again so as you can see we have the sorted list as negative 5 negative 3 minus 1 10 14 15 54 67 and then 100 so guys all the numbers that were present in the original list which are not sorted are now sorted after we have called The Selection sort function over here which Returns the sorted list in this case so guys this is the way that we can easily implement the selection sort algorithm using the Python program please make sure that you practice on your own so that on different inputs you get different outputs make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Python program to print diamond shape star pattern so stay tuned