hey what's up guys welcome to another video in which we are going to write Python program to print the Fibonacci sequence using recursion so guys in the previous program we have seen how we can write the Fibonacci series using the for Loop but in this particular program we are going to see how we can write the sequence as you can see this is the integer sequence that is it starts from 0 and then the next integer is 1 and then the addition of the previous two integers that is 0 and 1 it is 1 and then the next two integers that is one plus one it is equal to 2 and so on we have to find the next term in the Fibonacci sequence so basically we are going to achieve this task using recursive call in this program now the first two terms are 0 and 1 which are fixed and then all other terms are obtained by adding the preceding two terms this means to say the nth term is the sum of N minus 1 and the N minus two terms so guys let us check this with the help of the Python program over here in the vs code so the very first thing that we will do is we will ask the user in order to enter the number of terms it is required to be printed in the Fibonacci sequence so over here we will take the input as the function and then we will ask the user to enter dream number of terms in Fibonacci Sequence so guys over here the user will provide the number of terms to be displayed in the Fibonacci sequence now this input will take the string data type by default we need to convert it into the integer so we will just prefix the int function in order to convert the string into the integer data type now guys what we can do is we have to go through the for Loop and with each iteration we have to call the Fibonacci recursive call so guys over here we will be having the for low and then we say I and then we have n and then range it goes from 0 up to the terms it is entered by the user plus 1 since we need to include the terms as well we have to provide the plus 1 over here so that the last integer is not considered guys remember that inside the range inside the second pair parameter that is the maximum limit this number will not be considered whenever we are iterating through the for Loop and then guys we can simply call the recursive function that is the Fibonacci function which we are going to Define so guys over here we will be having the fibonacai call and we will be passing this integer that is I over here so basically what will happen is this function should be called so what we will do is we will Define this function over here so we will use def keyword followed by the name of the function and with this function we have to provide this parameter which is going to be passed from this for Loop and then guys over here what we have to do is we have to check if this number if it is less than or equal to 1 so if I is less than or equal to 1 which means either it will be 0 or 1 we are going to check for the positive integers only then what we have to do is we have to return this value that is I so basically if the number of term is 1 so this condition will satisfy and 1 will be returned and if it is greater than 1 then what we have to do is we have to come inside the the as part and over here we have to call this function again so Fibonacci this time but over here while passing the parameter we have to do I minus 1 this time and then plus again we have to call the Fibonacci function and this time it needs to be I minus 2 so guys remember that the next term in the Fibonacci sequence it is the sum of the previous two terms which means if I is at the second position then we need to get I minus 1 and I minus 2 and add both these terms over here that is what we are doing with this particular expression and then guys what we can simply do is while calling this function we can simply print the return value that we are getting from the Fibonacci function over here so basically we have provided the print function and then inside this we have provided the recursive call to this Fibonacci function over here so guys let me just save this file now and try running this code so as you can see user is being asked to enter the number of terms in the Fibonacci sequence so let's say we provide the number of terms as 4 over here when we press enter we are getting a runtime exception guys over here that's because we have not provided the return keyword so we have to provide the return keyword over here let me just save this file now and try running this code once again if it works perfectly so let us put four once again as the number of terms in the Fibonacci sequence so guys as you can see we are getting all the terms over here inside the Fibonacci series that is 0 and then one and then we have one which is the sum of one plus zero then we have one plus one it is equal to two and then 2 plus 1 it is equal to three so guys over here we are getting the five terms so if we remove this terms plus one and replace it with just terms so let me just save this file now and running this code once again we will take 10 number of terms this time and when we press enter as you can see we are getting all the 10 terms over here let me just expand this section so as you can see we are getting 0 and then one and then we have one again then one plus one two then two plus one it is three three plus two is five five plus three is eight eight plus five is thirteen and so on we are getting all the terms over here so guys total 10 number of terms we are getting in this Fibonacci Sequence so guys this is the way that we can easily display the Fibonacci sequence using the recursive call over here by just defining this Fibonacci function and these are the lines of code that we are supposed to write in order to display all the elements inside the Fibonacci series so guys please practice on your own so that on different inputs you get different outputs make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is Python program to check Armstrong number so stay tuned