hey what's up guys welcome to another video in which we are going to learn about multilevel inheritance in Python Programming so guys in Python not only can we derive a class from the super class but you can also derive a class from the already derived class over here which means we can create a child class from the already existing another child class so this form of inheritance is known as multilevel inheritance so as you can see in this syntax it will get more clear over here so first of all we have the class that is the super class and we have the superclass methods and variables over here next what we have is class derived class 1 and this is deriving the superclass which is the parent class over here it will have its own derived class 1 functions and variables now there is a third class called as derived Class 2 which is deriving this child class that is derived class 1 over here and that is what we have mentioned over here inside the parenthesis and this is called as multilevel inheritance so let us check this with the help of examples now how we can Implement multilevel inheritance in Python so basically first of all we will have the class that is the super class over here so inside the super class what we will do is we will Define the method that is simply super class over here and then after this we have the parenthesis and we say self over here and we can simply provide a print statement and we can say we are inside super class so over here we are simply providing the statement that is we are inside the superclass and then we will have another class which will be the child class of this super class so we will say derived one over here as the child class of which class it is of the super class so basically we have this super class inside this parenthesis which means we are inheriting all the properties of the superclass into this derived one class and then again it is having its own function that is derived to 1 over here so we say derived to 1 it takes one parameter that is self which is is the object itself and then we can simply provide this print statement I'll just copy this and paste this over here and change the content of the statement that is we are inside derived one class so we say derived one class and then guys similarly we have the derived two class as well so I'll just copy these lines of code and paste this over here this time the parent class will be the derived one class so over here we will say derived to 1 so basically this child class it is getting inherited in the derived two class over here so we have named it as derived 2 and the parent classes derived to 1 over here and it is having its own method so we will say derived 2 in this case which is taking self as the parameter and then print we are inside derived to class right now so basically what is happening is inside the derived two class we will also have derived two function we will also have derived one function and we will also have the superclass function which was in narrated by the derived one class over here so we will have all the three functions in the derived two class whereas in the derived to one class we will only have this derived to one function and the super glass function over here so let us check the implementation of all these classes by using the objects so let us say we create the object that is D2 for the derived two class so over here we will provide the derived two class and then what we will do is simply we will call the functions by using the object name that is D2 followed by dot as you can see we are getting all these methods that is derived one derived 2 and the super class so first of all we will call the super class over here and then we have D2 followed by Dot and then we can call the derived one function over here followed by derived two functions so D2 followed by Dot and then we have the derived two function as well so basically all the three functions can be accessed by using the object of the derived two class because that is the child class of this derive one class which is again the child class of the super class over here so let us save this file now and try running this code so as you can see we are getting we are inside super class then we are inside the drive to one class and we are inside derived two class so all the print statements are getting executed when the object is often derived at two class but guys what happens if we create the object of the derived one class and use all these functions so let us change this from derived 2 to derive to 1 over here so as you can see we can access the superclass function we can also access the derive to one function but over here this derived two function is coming with a different color which means we cannot access it so let us check this once again so D2 followed by Dot and then we do not have the derived two function why so because we have created the object of the derived one class which will only have access to derived one that is its own function apart from that it will also have the access of the super class function since it was inherited from the superclass so guys we cannot call the derived two function over here so what if we try to access it derived to two functions let us check that so I'll just save this file now and try running this code so as you can see the first two statements are getting printed that is we are inside super class and then we are inside derived one class but then next time the derived two class when the control flow comes over here it is throwing the error that is derived one object has no attribute that is derived to so basically it is saying that inside this derived one class over here we do not have any function which matches with this derived two function over here that we are trying to call so guys you have to be very careful when you are implementing this multilevel inheritance only those functions will be accessible to those objects of the classes which are at the lowest level at the middle level some of the functions will not be accessible and if we create the object of the parent class then that object will not be able to access the functions of the child classes over here so guys practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to the channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is operator overloading in Python Programming so stay tuned