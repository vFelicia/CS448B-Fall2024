hey what's up guys welcome to another video in which we are going to learn about Constructor in Python Programming now guys a python Constructor is a function inside a class that helps us to initialize certain attributes of a class so far we have seen creating the class attributes and the functions and while initializing the attributes of the classes object we use the object name followed by the dot and then the attribute name but is there a better way in order to initialize those attributes inside the class yes it is so we have something called as double times underscore followed by init and then again double times underscore followed by open and close parenthesis which is a Constructor function that is called whenever a new object of that class is instantiated so guys let us check this with the help of example now so let us move to the vs code what we will do is we will create a class that is called as the parrot class over here and we will Define two attributes so over here we have the name which is of the string data type so let's say we have the empty string initially and then let's say we have the age attribute which is defined as 0 over here which is the integer so guys what we will do is let us say we want to create the object of this class so what we have to do is let's say we provide the object name as parent 1 followed by equal to operator and then we have the name of the class that is parrot followed by open enclosed Parent Access now guys so far what we had done is in order to initialize both these attributes we were calling this object name followed by Dot and then the name of the attribute so let us do that first so we are going to use the parrot one object over here followed by Dot and then let's say the name of the parent it is blue over here so we provide the name of the parrot and then we also provide the age of the parrot so let's say parrot 1 dot h it is equal to two years old and then we can simply print the name and age of this parrot so let us say we provide the print method over here and we provide the parrot one object check so parrot 1 followed by Dot and then we have name s and then again we want to get the eight so parent one dot h and then we have years old so over here blue is two years old will be displayed so let us save this file now and try running this code so as you can see blue is two years old so guys this is the conventional way that we had seen so far in order to instantiate an object of the class and also assign the values to the attributes of that class so is there a better way in order to assign these values to these attributes yes we can do so by using the Constructor so what we can do is we can simply remove these two lines of code over here so I'll just remove them and then guys inside this class we are going to have the init method which is the Constructor so over here we are going to have the def keyword followed by double times underscore and then we have the init so as you can see vs code is suggesting as this method which we are going to use so in it and it is going to take one parameter by default as I have already told you previously whenever we are going to call any method inside the class the object that is used in order to call that method is also passed by default behind the scenes so the self parameter represents the object of this parrot class over here I'll just remove this part and what we are going to do is we are going to take both these attributes that is name and age as the parameters so over here after this self we are going to have comma and then we are going to have name one so guys I am naming this as name one so that you don't get confused between this name and this name one so this name one will be passed as the parameter when this Constructor is being called over here and then followed by comma we also have age one and then what we can do is for this self that is the object followed by a DOT we can have name it is equal to name one over here and then again we can have the cell followed by a DOT and then age it is equal to H1 so what we are simply doing over here is the name and age attributes of this object the object is being represented by self and then self dot name it will be assigned with the value of this name one that is being passed same thing for the age as well the self.h the value will be passed by using this H1 parameter over here and both these values will be assigned to name and age attributes now guys when exactly this Constructor is being called so basically whenever you are going to create an object and call this class over here that is the parrot class the Constructor will be called so while instantiating this object we also need to pass the name and age for this particular instance of the class so what we're going to do is let's say we take the same name that is blue over here so we provide the first parameter as the name of the parrot followed by a comma and then we provide the age that is 2 years old which is the second parameter so guys when the control flow comes over here it sees that the class is being called with these two parameters and we also have the Constructor so basically this parrot one will be assigned to this parameter that itself and then this name and age will be assigned to this name 1 and H1 and this name and age will be assigned those values respectively and then we can simply have this print statement in order to print the same statement that we had seen previously as well so let me just save this file now and try running this code so as you can see we are getting the same statement that is blue is two years old that's because we have provided the same name and the same age let's say we provide a different name over here so let's say we provide who and it is 5 years old so let me just save this file now and try running this code as you can see who is 5 years old is getting displayed over here so guys in this way what we have done is while instantiating the object we are passing the values or the attributes that are present inside that class for which the values are getting assigned now guys another important functionality of this Constructor is we can also remove these attributes that are being glad so there is no need of declaring these attributes over here so I'll just remove these lines of code over here and what exactly is happening is while this Constructor is being called The Interpreter comes to know that this name and age are the attributes of this class that is the parrot class over here and it assigns the values that are being passed to name 1 and age 1. so to make it more simple let us say we name this parrot as first parrot over here for which the age is 2 years old and let's say I provide another parrot so I'll just copy this line of code and paste this over here and then I provide this as parrot 2 and then we can say second parrot over here which is five years also we'll say five years old and then we will print both the parrots over here inside the frame statement I'll just copy these lines of code and paste this over here and then we can say parrot2 dot name and then again over here parrot2.h so let me just save this file now and try running this code so as you can see first parrot is 2 years old and second parrot is 5 years old both the statements are getting displayed over here so guys this is the way that you can Define The Constructor inside the class by using the underscore underscore init method and Then followed by the self that is being passed automatically as one of the parameters and then you can have any number of parameters being passed over here inside the Constructor which can be used as the values for the attributes of the class that you have defined and those values need to be passed whenever you are creating a new object for that class so guys practice on your own so that on different inputs you get different outputs please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well the next video that we are going to talk about is encapsulation in Python Programming so stay tuned