in the next few hours we are going to learn a lot about the Python programming language with the help of the examples and python programs as well while you're watching this video please make sure that you pause this video and practice on your own so that on different inputs you get different output and that is how you are going to learn about the Python programming language you can also watch my other Python tutorial and Python program videos which are available for free on YouTube the link to those playlist I have given in the description section below and we are going to cover all the basics about the Python programming language so let's get started Python tutorial for beginners so if you're completely new to programming languages and want to start with the Python programming language then this video series is for you and it doesn't matter even if you have learned the other programming languages such as Java C C++ and if you're going to learn the Python language for the first time you can watch these video so that we can get started from the completely beginner level and we reach up to the intermediate and expert level as we go through the different concepts of the Python programming language so guys first of all we are going to check the environment setup using the Python language and we are going to use the VSS code as the editor now over here vs stands for visual studio and we are going to use the visual studio code editor in order to write our python programs apart from this vs code setup we are also going to see how do we write the first python code and execute it so guys basically I have written down the steps to install the vs code editor and python interpreter over here so first of all we are going to install VSS code using this link that I have already provided in the description section so when you hit this URL in the browser this is the page that is going to open from where you can easily download the visual studio code it depends on your operating system which installer you want to download you can also download for Windows Mac OS and Linux systems over here so it depends on your operating system once you have downloaded this and installed the vs code on your machine machine the next step is to install python extension in VSS code so guys once you have installed the visual studio code this is the get started page that you will see in the visual studio code ID so over here first of all you are supposed to install the python extension so on the left hand side as you can see there is an extensions button over here on which you can click and then this particular section will open so over here in the search bar you are supposed to type python so once you type python there will be list of extensions that will be available for you so guys this is the extension that you have to install over here so as you can see python intellisense file lens and this is a description that you can see on the right hand side so since I have already installed this python extension on this Visual Studio code I am getting this uninstall button but you will be getting the install button over here if you have not already installed this particular extension guys this python extension helps us in order to write the python programs very efficiently it allows us to have the code completion feature along with this we can also run the python code and have the output from within the visual studio code itself so guys it is very important extension if you are going to Learn Python and want to write the python programs now guys coming to the next step we have to install the python interpretor using this link that I have already provided in the description so once you open this URL in the browser over here this is the page that will open for you and this is the official website of the Python programming language from where you can download the latest version for Windows over here since my machine is Windows I will be downloading this Python and the latest version is 3.11.1 it might so happen that you are watching this video in the future for which the latest version might be something else so you can download the latest version of the Python interpretor from here apart from this you can also get the links to the installer if you're using some other operating system over here so guys once you have installed python on your machine you can quickly open command prompt so over here in the command prompt you can simply type py followed by double hyphen characters and then you provide version and then when you press enter as you can see python 3.11.1 this is the version of python that is already installed on my machine you might have some separate version but the command will be same in order to check whether the python is successfully installed on your machine now guys after successful installation what you have to do is the last step is to connect this python interpreter in vs code so we select the python interpreter in VSS code so over here you have to come on the settings on the bottom left and then over here you can see the command pallet you can also have the shortcut key as Control Plus shift plus P if you're using the keyboard keys and then when you click on this on the search bar you have to type Python and then colon and then we have select interpreter so as you can see this is the option and when you click on this as you can see this python 3.1.1 is getting displayed over over here which you are supposed to select in order to select the python interpretor now guys what we are doing over here is we are connecting this python interpretor with this Visual Studio code so that whenever we write the python code our program gets executed successfully on the vs code itself now guys it might so happen that you don't get this option that's because you have installed python after installing vs code so you can simply restart this vs code in order to get this option over here and once you select thist option you are ready in order to write the python programs in the vs code IDE so guys just by using these four steps of installation you can quickly get started in order to write the python programs in the vs code and all the steps have been documented in this official documentation of the visual Studio website so you can check the content of this documentation as well the link I have given in the description already now guys we are going to write the first code in Python so what we are going to do is we are just going to close these tabs over over here and we are going to open this Explorer over here it is saying no folder opened initially so what you can do is you can create the folder initially in order to organize all your python programs so basically I'm going to just create a new folder over here and I'm going to say python so this is the name of the folder and then I'll select this folder over here so as you can see a new folder that is python has been created now you can write python programs inside this python folder you can have any other folder in any of the directories it depends on you where you want to store the python codes that you will be writing from now on so what we will be doing is as you can see this is the icon it says new file so we will be clicking on this new file and let's say I provide the name of the Python program as python followed by underscore and then we have code followed by dot we have py so guys this is very important that after typing the name of the file we have to append it with py this is the extension of the pyth Python program and this extension will help the vs code in order to interpret that this is the python code and it should execute this code using the python interpretor so guys I'm going to press enter over here and once we press enter this python code. py it is going to open automatically over here now simply we can print some content in our Python program as the first code in Python so over here we have something called as print statement as you can see once we type print it is auto suggesting us what are the different keywords that we can use so so when we press enter over here this print gets selected automatically now inside the open and close parenthesis what we are supposed to do is we can type one particular statement that is the name of the YouTube channel that is programming for beginners which you should definitely subscribe so this is a string that is a statement that we have given over here and this is the very simple Python program that we can write and what this will do is it will simply print this content that is programming for beginners on the console so guys over here you have to come on file and then you can click on save or else you can use the control+ S on the keyboard in order to save the file which I'm going to do in the upcoming videos as well so first of all you save this file and simply you have to come on this top right corner over here you can see this run python file button over here so when you click on this run python file the terminal will open and it will execute this file that is python code. py that we have simply created over here and as you can see programming for beginners string is getting printed so guys in this way we have return the very first code in the python and using the print statement we have printed the programming for beginners we can print any other statement over here as well so let's say I'll provide this as a statement and then when we save this file and try running this code once again as you can see this is a statement is getting printed over here on the terminal so guys this is the way we can easily set up our python interpreter along with the editor that is Visual Studio code you you can use any other editor that you want such as you can simply use the notepad file as well but you will not get such strong features which are provided by the visual studio code in the notepad file apart from that you can also use notepad++ or we have a very popular ID that is py charm and apart from that we have many other editors that you can use but vs code is one of the lightweight editors that you can use when you are writing the python programs python keywords and identifiers so guys keywords are nothing but these are the reserved words in Python so basically these are the words that we cannot use as the identifiers now what are identifiers these are nothing but these are the names that are given to variables functions classes and many other objects that we are going to see in the upcoming videos as well so guys for examples as you can see over here the examples for keywords are true and then we have false if condition else condition LF so Guys these are certain keywords that you must be aware if you have already learned some other programming language and if not then you don't have to worry but we are going to learn about these keywords in the upcoming videos as well you just need to know that these are certain keywords which cannot be used anywhere else apart from their own functionalities so guys over here in order to make it more easy for you I have the list of all the python keywords over here as you can see false none true and many other keywords are present that have specific functionality as far as Python programming languages is concerned and you cannot use them apart from their own functionality where they are supposed to be used now apart from this what are the examples of the identifiers as you can see message this is a particular name that we have given to a string another example is language which can Define another language such as a Korean language or the Hindi language English language or Spanish or French language or any other language which can be defined using this variable we also have other identifier such as number count so so this is nothing but these are certain names that are given to a particular variable so we should not mix up between the keywords and identifiers whenever we are writing the python programs so guys let us check this with the help of some examples over here so as you can see in this ID we have the output of the previous example that we have executed so simply we can type CLS that is the command in order to clear the content of the terminal over here when we press enter the entire terminal is cleared and then what we will do is as you can see previously we had written a print statement and inside this we had given the content that this is a statement what we can do is this value can be assigned to another variable which is called as the identifier so I will just remove this line over here and before this what I will do is let's say I provide Str Str as the identifier name followed by equal to and then in between the double codes I'm supposed to provide the string that is this is a statement that we had printed over here using the print statement and then what we we can do is in this print inside the open and close parenthesis over here we can simply provide this s Str which is the identifier so guys what exactly is happening over here is we have provided the content that we want to print and we have stored that content in a particular identifier so this is called a identifier over here that is St Str which is nothing but a name over here which is given to this particular value and we can simply provide this name that is Str Str over here and when we save this file and try running this code now so as you can see this is a statement is getting printed so it doesn't matter what content is provided over here we can provide some other statement as well like programming for beginners which is the name of the YouTube channel which you should definitely subscribe if you have not subscribed it already so when we save this file and try running this code as you can see programming for beginners is getting printed now so it depends on what value is being stored in this particular variable which is also called as identifier we can give any name to this ident Iden ify let's say instead of St Str we can simply give statement as the name of this variable but we have to change it in the print statement as well so I'll just copy the statement variable and paste this over here so guys this is nothing but identifier it is also called as a variable since we are storing some particular value inside this variable I click on Save and when I run this code once again again it is printing the same content that is programming for beginners so guys this is one example of identifier and in similar way we can have any other name to the identifier and along with that we are supposed to provide the value now apart from that can we use the keywords as the variable names so let us check this so let's say if I provide if keyword over here so instead of this statement over here I provide if and then let's say if I print this if so what will happen let me just save this file and try running this code so as you can see it is providing the syntax error that is invalid syntax and we can see if equal to so over here it is pointing out so as I've already told you we cannot use keywords as the identifier since they have their own meaning as far as python programs are concerned so we need to avoid the keywords being used as the identifiers and we should give some other names apart from all these keywords that are being displayed over here which we are going to learn in the upcoming videos as well guys it will only come with practice that you will come to know that which are the python keywords and which you are not supposed to use as the identifiers so don't need to worry you just stick with me till the end of this video series and we are going to learn a lot about the python programs now there are certain rules while naming the identifiers so as you can see identifiers cannot be a keyword which we have just proved by providing the if keyword over here and then apart from that identifiers are case sensitive so Guys these are two different identifiers let's say I provide Str Str over here which is one identifier we can simply print this using the print statement over here and then let's say we have another it identifier as St Str so over here we can have a different statement so let's say I simply provide the string over here so what will happen is if I save this file entery running this code now it is saying programming for beginners but Str Str and Str Str both the identifiers are same the only difference is these characters are uppercase characters whereas this s Str has lowercase characters but when we provide this Str Str over here in the print statement let me just save this file enter I running this code as you can see this time string is getting printed that's because we have saved the string in this particular identify that is capital Str Str so guys this proves that identifiers are case sensitive and you have to take caution while you are naming your identifiers over here apart from that it can have a sequence of letters and digits as well however it must begin with a letter or a underscore the first letter of an identifier cannot be a digit so basically we are supposed to start with the letter or it can also be a underscore over here and then white spaces are not allowed and apart from that we cannot use special symbols like exclamation mark at the rate hashtag and dollar sign and so on so there are certain special characters which cannot be used while you're naming your identifiers so python variables constants and literals so guys what are python variables so in programming a variable is a container that is a storage area to hold data so as we have seen previously a number is a variable and we can provide the value that is 10 so previously we had seen a string variable in which we had stored some statement whereas we can also have the integer values being stored in the variables so over here if we move to our Visual Studio code so we can simply type number that is the variable name which can be assigned a value so equal to 10 so this is nothing but an integer value being assigned to a variable which is named as a number we can also have the string so let's say programming for beginners so we have programming for beginers s see string over here which can be assigned to a variable and the variable name can be given as Str Str or it can be also given as message or any other name that you want to give while writing your Python program so Guys these are nothing but variables which can be used later on in the program basically their functionality is to store some values so in this case number is storing the value that is 10 and this Str Str variable is storing the value that is programming for beginner string now guys it is very important to note that python is a type in referred language so you don't have to explicitly Define the variable type it automatically knows that 10 is an integer and declares the number variable as the integer so guys basically it depends on the value that we are providing so just because you are typing number as the name of the variable it doesn't mean that it has to be necessarily having the integer value you can also have the string value as well so when I copy this and paste this over here the number will have programming for beginners but guys this doesn't make any sense over here but programmatically this is also possible that's because we don't have to provide any data type over here in the python programs so whatever the value is data type will be given to that particular variable based on the value that is being provided to the variable this is very important Point as far as python programs are concerned in other programming languages such as Java or C++ we have a very strict data type that needs to be provided before we provide our variable names over here and guys this is also one of the advantages of using the Python program it allows us to write the code quickly compared to other programming languages now guys moving forward what is the python constant so basically a constant is a special type of variable whose value cannot be changed so for example as you can see the pi value is 3.14 so over here guys before defining the constant variable what we can do is if we simply print this variable over here that is print followed by number that is being given inside the parenthesis I'll save this file and try running this code now so as you can see programming for beginners is getting printed that's because the value is given as programming for beginners let's say I provide the integer that is 20 over here and then when I save this file enter I running this code now the number should have the value that is 20 and that is what should be printed so as you can see when we run this code 20 is getting printed over here so whatever value is being stored and whichever variable we want to print the content of that variable will be printed now coming to the constants that we have just defined so in Python let's say if you provide pi equal to 3.14 over here so instead of this number we provide Pi it is equal to 3.14 I'll just remove this line of code and then simply I'll provide pi over here so what will happen is it will display this value that is 3.14 I'll save this file and try running this code now as you can see 3.14 is getting printed but guys what is the use of this constant basically we are saying that Pi is constant over here that's because us using this nomenclature that is the constant variable must have all the characters as the upper case so this can Define that it is a constant over here but is it actually a constant no in this case since again we can use pi over here and we can provide some other values as well such as 5.15 over here so when I save this file Ander try running this code now it is saying now that Pi is having 5.15 which is the latest value so guys there is no concept of python constants over here right now but what we can do is we can save this value in some other file so let's say I create another file over here and name it as constant followed by the extension that is py over here when we press enter we can simply provide this statement that is pi equal to 3.14 I just copy this and paste this over here so we have provided pi equal to 3.14 now what we can do is coming to this python code what we can do is we can use the import keyword now guys this import keyword is used in order to import some other python files into this file so that we can use the content of that other python files over here so we are going to import this constant. py in our python code program so import we can say constant over here so when we type constant as you can see constant is getting Auto suggested over here that's the very important feature of the intellisense which is included in the python extension that we had installed so we provide constant over here and what we have to do is while printing we can simply provide this constant over here that is constant followed by Dot and then as you can see Pi is getting Auto suggested that's because we had defined pi over here so we simply have to provide Pi so what will happen is it will print the value of the pi so when we save this file and try running this code now once again it says module constant has no attribute Pi so guys that may be because we have not saved this file that is constant let me come over here and save this file over here once again and I'll go to this python code and then run this file once again so as you can see now 3.14 is getting displayed so guys if you want to use some constant values you can have a separate file that is constant. py in which you can store all the constant variables let's say we have another variable over here that is St Str and then we provide string s the value so this Str Str can also be treated as a constant for which the values never change while we are executing the code I'll save this file over here and let's say if I want to print the string as well so I'll copy this line of code paste this over here and instead of Pi we will provide Str Str now so we provide constant. pi and constant. St strr also so when we save this file and try running this code now we get both the things that is 3.14 we get the string value as well so if you want to use the constants in Python you can have a separate file all of the constants can be defined over there and then you can import that constant file and use the various variables that you have defined as constant in order to write your python programs so guys moving forward over here what are python literals literals are representations of fixed values in a program they can be numbers characters or strings etc for example hello world is one of the literal then 12 is another literal 23.0 and then C character true false Etc so guys literals are nothing but these values so basically this value it is a literal this particular name that we have given is the identifier or also called as variable but in this case it is a constant now this variable becomes constant when the value cannot be changed but we can change this anytime in this code but not over here an identifier can be a constant when we don't want to change its value anytime in our Python program and again the string value inside the double codes it is a literal python data types in which numeric string list tle set are included so Guys these are the different data types that we can see in this this video and the upcoming videos as well so basically in computer programming data types specify the type of data that can be stored inside a variable so for example number it is equal to 24 so 24 value belongs to the numeric data type and this is the integer value inside the numeric data type we have many other data types such as integer value then we have float value as well in which there is a decimal point we have a complex value as well in which as you can see this expression that is 1 + 2J this is a complex expression so all these are having numeric data types over here so number over here is a numeric data type or the integer as you can see 24 is the value if it was 24.5 then we would say that number variable is of float data type so guys let us check this with the help of example what we can do is we can simply copy these lines of code over here I'll copy this and we'll paste this over here now what we will do is this constant. py that we had created previously I'll just remove from our python folder over here since it is no longer needed and we will simply keep python code. py where we are going to write all the programs over here so guys over here I'll simply replace the content of this file by this content I'll save this file and over here in the terminal I'll simply clear the screen so as you can see num one it is defined as five which is the integer that is being assigned to num one so the data type over here will be the integer data type and using this print statement what we are doing is we are using using this num one and then followed by comma is of type which means num one will be printed that is five will be printed and then we will have is of type string being printed and then type this is another method that is being used in order to get the type of a variable so as you can see this is the syntax that first we provide type and Then followed by open and close parenthesis and over here inside this we have num one that is the variable name guys similarly we have provided num 2 as 2.0 and the same thing we are doing that is we are finding the type over here and then in the num three as well we are getting the type of this num three variable let me just save this file enter running this code now so as you can see five is of type class in so this is of the integer data type 2.0 since it is having the decimal over here it is saying it is of type float over here and 1 + 2 J it is of type complex over here so these are all numeric data types and inside the numeric data type y these are described as integer float and complex values now apart from this guys we have other data types as well such as string that we had seen previously we have list as well tle and set so guys let us check this one at a time so over here what we will do is simply I'll provide Str Str and then I provide the Str Str value as programming for beginners so what we will do over here is we want to find the type of this Str Str variable so what we can do is we can simp simply have the print statement followed by open and close parenthesis and we can simply have the type function so guys as you can see type is being Auto suggested over here we will select this and inside the open and close parenthesis we will use this variable so I'll just copy this and paste this over here that is Str and then when we save this file and try running this code now as you can see class that is St Str is getting printed over here we can also have some string value over here that is first of all we are going to type Str Str that is the value of this s Str and Then followed by comma and then we can simply have is of type inside the single Cotes over here guys it is very important that whenever you want to type certain characters we should either have it inside the single quotes or double codes as we have seen over here and then when we save this file and running this code it will show us the data type of this string with the most sensible statement so as you can see programming for beginners this is the string value that we have given and then is of type now this is of type we have provided over here and then this type function that is Str Str it is returning the type of this Str Str variable which is class Str Str over here so this is of string data type now guys this Str Str over here it stands for string and not the name of this variable if I provide here something else then it will be more sensible so let's say if I provide statement over here as the name I'll copy this and paste this over here and when we run this code once again so as you can see it says class St Str is of type class St Str so since we have not replaced this St Str with the statement that is why we are not getting it properly I'll run this code once again now so as you can see programming for beginners which is the value of this statement variable over here and then is of type and then we have class Str Str over here now apart from this we have other data types as well such as list which can be defined as the square brackets so what we have to do is let's say I provide list one as the name of the variable and then equal to now guys list is nothing but it is a data type that have collection of elements so over here let's say we have collection of strings so let's say we have collection of fruits over here so the first fruit is Apple followed by comma and then again we have double quotes and then we have mango so all the elements are being separated using the comma over here as you can see and then let's say we have banana over here as the third fruit so what we can do is we can simply have print statement over here and then we can have type of this list one so I'll say list one over here when we save this file and TR running this code now as you can see class list is getting printed so this is of data type that is list over here similarly we have tle and set as well which we are going to see in the upcoming videos what are the different contents of these data types and how do we use them and when do we use them so guys for now you just need to remember that whatever value that we provide to a particular variable automatically that data type will will be assigned to that particular variable basic input and output in Python Programming so guys in this tutorial we will learn simple ways to display output to the users and take input from users in Python with the help of examples now guys as we have seen previously in Python we can simply use the print function to print the output so let us check this with the help of example over here so I simply want to print a statement so let's say I want to print programming for beginners that is the name of this YouTube channel which you should definitely subscribe if you have not subscribed it yet so once we provide the string inside the double codes we can simply save this file and try running this code now so on the terminal we will be able to see this string getting printed that is programming for beginners I have missed out an O character over here so this is the correct string so programming for beginners is the string that we want to print and that is what we have got over here in the terminal now guys even with this print function over here this is a function and it takes certain parameters so parameters are nothing but certain values that you can provide to the function so as you can see the actual syntax of the print function accepts five parameters so basically we have only provided one parameter over here this can be treated as a parameter that is the value that we want to print now apart from this we also have other parameters as well so object is the parameter which is nothing but the value to be printed apart from that we have separator then we have end parameter file and then flush parameter so these are the five parameters and these are the descriptions of each and every parameter so over here the separator which is an optional parameter since we have not provided any separator over here it allows us to separate multiple objects inside print so let's say after this string I want to provide another number over here so let's say 1 2 3 4 is the number that I want to provide now I want these objects that is one is programming for beginners which is a string and another object that is a number to be separated using commas so so what we will do is after providing comma we will use the SCP that is another parameter as you can see VSS code is providing us the auto completion feature over here so we just need to select that and then we need to provide single codes and inside this we provide comma followed by the space character so guys what will happen is all the objects will be separated by using this comma and the space character over here it depends on your requirement how many objects you want to provide inside this print statement so let me just save this file enter I running this code now so as you can see programming for beginners and then we have this comma followed by the space character and then we have this 1 2 3 4 object being printed over here we can have another object so let's say I provide another string that is another statement over here so let me just save this file and try running this code now so we are getting an error invalid syntax perhaps you forgot a comma so basically after providing each and every object we have to separate it using the comma over here and then let let me just save this file andent I running this code now so as you can see programming for beginners followed by comma and then we have space characters and then we have 1 2 3 4 again we have comma and then space character and then we have another statement so guys in this way we can use the separator parameter as well in order to separate the different objects inside the print function now going to next parameter which is end over here which is again optional by default it is the Slash and character in which case the control flow goes to the next line Whenever there is another object that is getting printed over here so as you can see it allows us to add specific values like new line or tab character so guys let's say we have this print function over here I'll just remove this part of the line over here and let's say I have another print function in which case I am providing another statement so let's say we have another statement over here so guys what will happen is by default this end parameter is having the Slash and character which means the control flow should go to the new line Whenever there is a next print statement that is encountered so let me just save this file and try running this code now so as you can see programming for beginner string is getting printed in first line and on the second line another statement is getting printed now what if we want both these statements to be printed on the same line but they are present in the different print function so what we will have to do is in the first print function I will provide a comma over here and then we have the end parameter so as you can see this end parameter we have to select and then inside the double Cotes I'll simply provide the full stop followed by the space character so guys what is happening over here is after the string is getting printed at the end of the line we are providing this full stop and then followed by the space character and then whenever there is a next string that is encountered by the control flow it will get printed on the same line so let me just save this file and try running this code now so as you can see programming for beginners and then we have a full stop and then we have the space character as well and then we have another statement that is is getting printed so guys we can also use this end parameter if we want multiple print functions to be used but all the objects need to be printed on the same line the other two parameters are file which is again optional where the values are printed so basically by default the values are printed on the screen and that is why its default value is system. STD out which means it should print on the screen you can also provide some file path over here so that the content can be return in the file apart from that we also have the flush which is again an optional parameter it is a Boolean specifying if the output is flushed or buffered so by default it is having the false value so Guys these two parameters you can practice on your own as a homework for you apart from that guys it is very important that how do you take input from the user in Python Programming so basically while programming we might want to take the input from the user in Python we can use the input function so as you can see we have a variable over here or we can say identifier it is equal to we have used the input function so guys this input function it will take a parameter which will be kind of a label which will be printed on the screen for the user as a instruction so we are asking the user to enter a number and the number that will be entered by the user will be stored in this num variable over here so guys let us check this with the help of example now I'll just remove these lines of code so what we have to do is let's say we provide the number variable it is equal to we have to use the input function as you can see this is the function that is being suggested by the vs code over here and then using the open and close parentheses inside this we have to provide a string inside the double codes so we can simply provide enter a number now this is a instruction to the user to enter the number now guys what we can do is we can print this number now we can easily print this by using a string so let's say we provide the string over here that is entered number is and then followed by colon and then after this object we have to provide a comma and then we can provide the number variable to be printed so we have provided the number variable over here let me just save this file andent try running this code now so as you can see it is asking the user over here to enter a number so what I will provide is simply I will provide 10 as the number and then when I press enter as you can see entered number is 10 so this string is getting printed along with the number that is being entered by the user now guys it is very important to note that whenever we are using this input function the input that is taken by the user will be of the type string over here so if we print the type of this number variable over here let me just do that so we simply provide data type of number colon and then what we have to do is after comma we have to use the type function and inside this function we have to provide the number variable let me just save this file and try running this code now enter a number so let's say I provide 10 as the number as you can see enter number is 10 and after this data type of number it is class string so this is of string data type so whatever input is being taken from the user it will be stored as a string so what we have to do is we have to convert it into a number now since this is a string we cannot add another number to this particular number so let's say if we try to add some another number over here so we simply do number + 5 over here let me just save this file enter I running this code now so when we provide 10 as the number when I press enter as you can see it says can only concatenate string not in that's because we are trying to concatenate a string with a number over here that is the integer so what we have to do is we have to convert this input into an integer so we can simply provide int over here and then the entire input function needs to be enclosed within the open and close parenthesis so guys this we had seen previously as well this is the explicit type conversion over here which is the manual type conversion in which we are converting the string data type to the integer data type and now we will have the integer over here which can simply be added with another integer so let me just save this file and try running this code now so as you can see enter a number this time let's say I provide 15 as the number and then when I press enter as you can see entered number is so what is happening is this number that is 15 was taken and then five was added to this number and that is why 15 + 5 is 20 and this number is getting printed over here and you can see this data type of number now it is of the type integer that's because we have used the type conversion over here so guys this is the way you can take input from the user make sure that whenever you're using the input function the data that is being entered by the user is of the type string and you need to convert it into the appropriate data type before you can use the other operators arithmetic operators in Python Programming so guys arithmetic operators are used to perform mathematical operations like addition subtraction multiplication and many other operations which can be done using the integers or the numbers in Python so guys for example let's say we provide the print function over here and inside this function we provide 5 + 6 as the parameter so what will happen is the plus operator is being used over here in order to add these two numbers that is five and six and the result that is 11 will be printed so let us quickly check this with the help of example over here so what we will do is we will use the print function and inside this parenthesis we will simply provide 5 + 6 over here and when we just save this file and try running this code now so as you can see 11 is getting printed so guys what we have done over here is we have simply used the plus operator in order to add two numbers we can also do this by using the variables as well so let's say we provide num one it is equal to 10 and let's say we provide num two it is equal to 20 and then let's let's say I provide sum it is equal to num 1+ num 2 over here so guys basically once again we have used this plus operator in order to add two numbers that is num one and num two for which the values are 10 and 20 respectively and the result will be stored in this sum and when we provide this sum inside the print statement we will get that result so let me just save this file and try running this code now so as you can see 30 is getting printed that is a sum of 10 + 20 over here so guys this is one of the arithmetic operator that is plus is being used in order to add the two numbers apart from this addition we have other operators as well as you can see subtraction we have in which the two numbers can be subtracted so over here 4 Min 2 it is equal to 2 so over here minus operator is being used we have multiplication as well in which multiply operator is used in order to multiply two numbers we have division as well in order to divide the two numbers so as you can see four divided by 2 it is equal to 2 so we are getting the quotient over here and we have the modular operator as well which can be used by using this person operator so guys what happens is 5% 2 what this will do is it will divide the number on the left hand side that is five by the number on right hand side that is 2 so 5 ID 2 it will give us the quotient as two but the remainder will be one and we will be getting the remainder of this operation that is one over here and similarly we have power operator as well so as we can see 4 and then 2 * multiplication symbol over here which is the power symbol and then two which means 4 ultied 4 will be done which is equal to 16 so basically this is nothing but the square of the number in this case it is the square of this number that is four so guys let us check all these operators with the help of examples over here so what we will do is first of all we will print and add two numbers so let's say we provide 10 as first number and 20 as the second number so this is the addition of two numbers let's say we want to subtract two numbers over here and the two numbers are let's say 20 and then minus what we do is we will minus 15 over here let's say the third expression is multiplication so I will simply provide five as the number multiplied by 7 as another number the next operator is the Divide operator so let's say I provide the print statement over here and we provide 50 as one number divided by 10 as another number and then we have another print statement let's say we want to find the remainder after dividing two numbers so let's say 40 is one number and then we provide percentage sign and then we provide 15 as the second number and then the last operator that is the power operator I simply provide five as the number and then two times multiplication over here which means power and then I provide two as the second number so guys let me just save this file and try running this code we will check the results of all these operations over here so as you can see the first print statement that is 10 + 20 it is providing us 30 as the result and this is the correct result over here 20 15 should be 5 and that is what we are getting over here as 5 and then 5 * 7 it is equal to 35 and we are getting 35 over here then 50 divided 10 should give us the quotient that is 5 and we are getting 5.0 over here and then 40% 15 which means 40 is divided by 15 and then what is the remainder is getting returned to this print function and 10 is getting returned why 40 divid by 15 the quotient will be 2 that is 15 * 2 is 30 but the remaining number will be 10 which will be the remainder and that is what we are getting over here is the 10 as the remainder and then 5 power 2 which means 5 * 5 is done over here and 5 multili by 5 is 25 and that is what we are getting over here so Guys these are certain arithmetic operators that you can use which include addition subtraction multiplication division and then finding the remainder of the two numbers by dividing wring them and then we can also find the power of the number so guys you can use them based on your requirements assignment operators in Python Programming so guys the assignment operators are used to assign values to variables so as you can see in this example the number variable is assign the value that is five so this is the assignment operator that is equal to over here apart from that we have other operators as well so as you can see this is the assignment operator that is used in order to assign some value to a particular variable we also have addition assignment in which we use the plus operator first followed by the equal to symbol so guys what exactly happens over here is let's say if we provide this expression over here that is a and Then followed by plus symbol and then equal to operator and Then followed by this value that is 1 so this is nothing but it is the expression that is a equal to a + 1 so basically 1 is getting added to this variable that is a and then it is getting stored in the same variable that is a so guys let us check this with the help of example over here so first of all I will provide the number variable and we will provide a value that is five over here so this is a simple assignment operator we can simply use the print function in order to print this number so when we provide number as the parameter to this print function and when we just save this file and try running this code now so as you can see on the terminal five is getting printed that is the value of this number now let's say we want to add 10 to this number so we can do this in two ways is so first of all we can simply use the plus operator that we had seen previously so number equal to number followed by plus operator and then 10 so guys this is one of the arithmetic operators that we had seen previously that is used in order to add two numbers so number + 10 in this case it will be 5 + 10 that is 15 and 15 will get assigned to this number and it will be printed by using this line of code over here let me just save this file and try running this code now so as you can see 15 is getting printed now guys there is another way in order to add this 10 to this number so we will simply remove this part of the code over here and then what we have to do is we have to provide number followed by plus operator and then equal to operator and then the number that we want to add to this number that is 10 so guys what is happening over here is this is the shorthand method for the same expression that we had written previously so it is equal to number equal to number + 10 so guys this is the expression that is working over here behind the scenes and 10 is getting added to this number and the result is getting stored in this number variable itself let me just save this file and try running this code now so as you can see 15 is getting printed over here guys this is nothing but a comment that we have provided I can just remove this part over here and let's say I want to add 15 now so we provide 15 as the number so 5 + 15 should be 20 let me just save this file and try running this code now so as you can see 20 is getting printed and this this is how we can use one of the assignment operators in order to add two numbers let us move to another assignment operator we have the subtraction assignment as well in which case we have to use minus operator followed by equal to symbol in which case this expression will get computed that is a it is equal to a minus 3 in this case when we provide a minus operator followed by equal to operator and then 3 similarly we have multiplication assignment in which multiply and equal to are used in combination we have division assignment as well in which case divide and equal to is used remainder assignment in which case this percent sign is used along with the equal to symbol and exponent assignment as well in which case the two times multiplication symbol is used and then equal to operator is used in order to compute the power of the numbers so guys let us check the remaining assignment operators with the help of examples over here so what we have to do is the number variable is already five and to this number we can simply change the assignment operators so let's say I want to subtract some number over here so what we will do is number then minus equal to operator let's say I want to remove two from this number so it is nothing but 5 2 in which case the answer should be three so let me just save this file and try running this code now so as you can see three is getting printed if I want to multiply this number so I'll simply replace this minus by multiplication symbol and let's say I provide four over here as the number so this should be 5 * 4 let us check what will be the result so 5 * 4 is 20 in this case let's say I want to use the Divide operator so we can simply use the divide and then equal to symbol and let's say I provide the number over here as three so let me just save this file enter I running this code now so 5 divid 3 will give us 1.66 as the result and that is what we are getting over here now guys similarly let's say I want to find the remainder while we divide five by three over here so we simply have to replace this divide Operator by the percent operator over here and let me just save this file enter are running this code now so 5 / 3 the quotient will be 1 in this case and the remainder will be two in case we don't want the decimal output over here so two is the remainder and that is what we are getting over here and the last operator that is the exponent operator over here so we simply provide the multiplication symbol two times and then equal to operator and then let's say we provide two over here so this is nothing but 5 * 5 that is the square of the number that is five let me just save this file and try running this code now so it is 25 over here if you provide this as three so what will happen is five will be multiplied by the same number that is five three times over here so let me just save this file and try running this code now so as you can see five multiplied by 5 is 25 and then 25 multiplied by 5 again will give us 125 as the result and guys this is how we can use the assignment operators based on our requirements as the shorthand methods in order to carry out the the mathematical operations on the numbers comparison operators in Python Programming so guys the comparison operators compare two values or the variables and return a Boolean result that can be a true or a false value so let's say for example as you can see we have two variables over here that is a is equal to 3 and b is equal to 5 so when we print this statement and inside this we have a comparison operator that is greater than operator over here that is a greater than B so what is happening behind the scenes is there is a check whether this variable that is a is it greater than b so if we see 3 is not greater than 5 over here in which case the return value will be false over here but in case when the value of a is greater than b then this particular expression that a is greater than b will return us True Value so guys let us check this with the help of example over here so let's say we have the variable a it is equal to 3 and the variable B it is equal to 5 and then when we have this comparison operator over here we use the print statement we say a greater than b so guys this particular operator is the greater than symbol over here which can be treated as the comparison operator in order to compare the two variables or the two numbers as well so let me just save this file and try running this code now so as you can see we are getting false as the result that's because the value of a is three and the value of B is five in which case a is not greater than b and that is why we are getting false over here guys similarly we have other comparison operators as well as you can see we have is equal to so basically 3 equal to equal to 5 no in this case because both these numbers are not equal so that is why this expression will give us the result as false over here similarly we have not equal to in which case it will give us true that's because the two numbers are not equal so we use the exclamation mark followed by the equal operator in order to check the not equal to expression and then we have the greater than sign as we have seen just now greater than symbol similarly we have less than symbol over here so this less than symbol will give us true over here that's because 3 is less than 5 and we also have greater than or equal to so guys basically what happens is let's say if the value of a and b both are three so basically is three greater than three no in this case so false will be return but when we provide greater than or equal to which means we are checking that the two variables should be at least equal or greater than so in that case when both the values are three so 3 greater than or equal to three will give us true in this case similarly we will have less than or equal to symbol as the less than symbol and equal to symbol combination so guys let us check all these with the help of examples over here so we have checked the greater than symbol over here let us check the less than symbol so we will simply provide print a less than b over here which should return us true in this case that's because the value of a is actually less than the value of B over here let me just save this file and try running this code now so as you can see first expression is false that's because a greater than b no in this case but is a less than b yes in this case and that is why we are getting true over here let us check some more comparison operators over here we provide the print statement is a equal to B over here and then let us provide another operator that is a not equal to B in this case and then we have another oper operator that is a less than or equal to B and then we have another operator that is a greater than or equal to B in this case so guys we have provided all the comparison operators over here let me just save this file and try running this code now so as you can see these are the results over here so the first result is false that's because a is not greater than b a is less than b yes in this case so that is why we are getting true over here is a equal to B no in this case because 3 is not equal to 5 so we are getting four false as the result then is a not equal to B yes both numbers are not equal and that is why we are getting true over here is a less than or equal to B so is 3 less than or equal to B yes in this case so that is why we are getting true and is a greater than or equal to B no in this case and that is why we are getting false over here now guys let us see what happens when B is also equal to a so we have provided both the values as three over here let me just save this file and try running this code now so as you can see we are getting the results over here so the first result is false that's because is a greater than b no in this case they are equal and then the second result is also false is a less than b no in this case both are false over here so Guys these are false that's because we are not checking whether they are equal or not but in the last two operators as you can see over here the last two results are true that's because we have included the equal to symbol so a less than or equal to B yes in this case that's because a is equal to B and is a greater than or equal to B yes in this case since a is actually equal to B so both these operators will return us true whereas both these operators will return us false whenever both the numbers that we are comparing have the same value now guys apart from this the third operator that is a is equal to B yes in this case and that is why we are getting true over here and is a not equal to B no in this case since A and B both are equal so this will return as false and that is what we are getting over here so guys these are certain comparison operators that you will be using in the upcoming videos as well when we are going to check the if else statement and we will also be using the V loop as well in which case we have to use these comparison operators to go inside the loop or else to come out of the loop logical operators in Python Programming so guys The Logical operators are used to check whether an expression is true or false so they are used in decision making so as you can see for example let's say the value of variable that is a is equal to 5 and the value of B variable is 6 over here and we have the print statement over here and there are two conditions that we are checking first of all whether a is greater than two so in this case the return will be true over here that's because the value of a that is five is actually greater than two over here and then as you can see this end keyword this is nothing but this is one of the logical operators it is being used in order to check the multiple conditions and the second condition that is being checked over here is whether B is greater than or equal to 6 so in this case since B is equal to 6 so yes in this case it is also true so basically since both the Expressions over here that is the second expression and the first expression is true and because this end logical wants all the Expressions to be true the return for the entire expression will be true over here so as you can see these are certain logical operators over here first of all we have the end operator which means A and B it is true only if both both the operant that is a and b are true over here similarly we have r as well so as you can see A or B in this case only one operant needs to be true that is only one condition needs to be true over here so this will be true if at least one of the operant is true and then we also have the not operator in which case we can use it as not a so it will be true if the operant is false and it will be false when operant is true over here so guys let us check all this with the help of examples over here so let's say we have the variable that is a is equal to 5 and B it is equal to 6 over here so we simply have the print statement and let's say we provide the condition that is a is it greater than two over here and we also have another condition so using the end logical operator over here we can combine multiple conditions so next time we will be checking whether B is greater than or equal to 6 so guys in this case both these conditions that is a greater than two will return as true and then B is greater than than or equal to 6 will also return as true so this entire expression will be true over here so let me just save this file and try running this code now so as you can see true is getting returned over here now what if one of the conditions is false over here so what we have to do is let's say I provide a less than two in which case this particular expression will become false so let me just save this file and try running this code now so as you can see false is getting returned that's because one of the Expressions while using the end logical operator is false over here here and according to rules all the Expressions while using the end logical operator must be true in order to return the true as the result now guys if we check the same conditions that is both these conditions by using the or logical operator so we simply have to provide or over here and let me just save this file and try running this code now so as you can see true is getting returned that's because the second expression over here is true and the first expression over here is false so anyway the or logical operator wants one of the conditions to be true and that is why we are getting the true as the result over here what if we make the second condition false over here so let me just change this expression to B less than 6 over here let me just save this file and try running this code now so as you can see false is getting returned that's because is a less than 2 no in this case so false is getting returned over here and is B less than 6 over here no in this case it is equal to six so this expression is also false so the entire expression is false and that is the only combination where the or logical operator will return us the false result now guys when do we use this not operator over here so let's say I have just a simple expression so over here I will provide is a less than 4 over here so in this case is a less than 4 no so it should return false so let us save this file and try running this code now so it is returning false over here but what if we want the opposite of this result so if the result of any of the expression is false we want to print true but if the result of any expression is true we want to return it as false so what we have to do is we simply have to provide not logical operator and the expression needs to be provided within the parenthesis over here as we can see so let me just save this file now so since it was returning false by using the not logical operator it should now return true so let me just run this code once again so it is returning true over here similarly if let's say this particular expression turns out to be true so we will get false as the result so let's say I provide a greater than 4 so is a for which the value is five over here is it greater than four yes in this case so this will return as true but since we are using the not logical operator it will return this True Result to false and it will be printed so let me just save this file and try running this code now so as you can see false is getting returned over here and it is being printed so Guys these are certain logical operators that we will be using in the upcoming videos as well when we are going to use the if else state M apart from that we will be also using the while loops and other control statements as well where we are going to use these logical operators so guys practice on your own so that on different inputs you get different outputs if else statement in Python Programming so guys in computer programming we use the if statement to run a block of code only when a certain condition is met so for example as you can see assigning grades that is a b c based on the marks obtained by a student so basically over here in this case we will be using the if condition now what can be the conditions we can say that if the percentage of the student is above 90% so assign grade A in the same way if the percentage is above 75% then assign Grade B and if the percentage is above 65% but less than 75% then assign grade C so during such conditions we have to use the if else statement over here now similarly in Python there are three forms of if if else statement so we are going to check all these forms of statements one at a time with the help of examples the first part is the if statement in which case we are going to Simply have the if statement over here along with the condition and the block of code the next form will be if else statement in which case we will also have the else block over here and the third form of the IFL statement will be first we will be having the if statement and Then followed by the AL if statement in which case we have another condition over here and then finally we have the else statement over here so let us check all this with the help of examples in the vs code so over here let's say we have the value of x it is equal to 10 now what we have to do is we have to provide the if condition over here so as you can see when we type if keyword over here vs code is suggesting us that we can use this if keyword so we are going to use this and then we are supposed to have some condition so we can say x greater than 5 over here so guys this is one of the comparison operators that we have already seen SE previously it will check whether this left hand side variable is it greater than the value that is present on the right hand side so guys this is one of the conditions that we are going to check and then followed by a colon over here so guys this is the format in which we provide the if condition and if this condition that is whether X is greater than 5 if it is true then we want to come inside this and there will be the block of code we need to have certain statements over here so we will say print and we can simply put the string that is X is greater than 5 over here since that is the condition that we have checked so this is the very simple code that we can have with the if condition over here let me just save this file and try running this code now so as you can see it is displaying X is greater than five now guys this is just one statement that we have provided inside the if condition we can also have multiple lines of code inside this block over here after the if condition so we simply have to press enter and provide the another print statement and let's say we will simply put we have checked X so we have a very general statement over here that is we have checked X over here let me just save this file and TR running this code now so as you can see X is greater than 5 this thing is getting printed and this statement that is we have checked X is also getting printed so all the lines of code that is present inside the block after this condition that we have provided in the if statement will be executed only when this condition that is X greater than 5 is true now what if this condition is not true so let's say I provide X less than 5 over here in which case this condition will become false so what will happen is the control flow will not go inside this block and it will not print these statements over here let us verify this I will just save this file and try running this code now so as you can see nothing is getting printed over here that's because these lines of code are not getting executed because this condition was false now how do we verify that we have to to come out of this block so basically we have indented this code that is there are some space characters over here in this line that is why these lines of code over here are treated to be present inside the block after this condition we have to come out of that block over here so we simply press enter and then we press backspace so that the cursor is aligned to this if condition over here now we can simply provide another print statement and I will simply say outside if statement so over here we say outside if statement now guys this line of code it will confirm that the control flow has come out of the if block over here so let me just save this file now and try running this code so as you can see we are getting outside if statement that's because X less than 5 condition was false and that is why these two lines of code were not printed and then the control Flow came out of the if condition and then this line that is outside if statement was printed so guys it is very important that you follow this indentation as far as as your python programs are concerned you might get incorrect output if you don't follow such indentations properly now let us move to another form of if statement so over here the second form is we provide the else part as well so the first part we have already seen that is using the if statement let us now use the else statement as well so over here what we will do is first of all we will check whether X is greater than 5 and then we will print that is X is greater than 5 over here now what if X is not greater than 5 that means it is less than or equal to 5 so we have to define the else part over here so first of all we have to remove this indentation part so I'll just press on back space and then we provide the else keyword as you can see vs code is suggesting us this else keyword over here we will use this and then followed by colon and then we can go inside this block of code and similarly we will have another print statement in this case we will say X is not greater than 5 so we are checking whether X is greater than 5 and we will say x is is greater than 5 if this condition is true and if this is not true then it will go in the else part and it will say X is not greater than 5 and after this part of code gets executed the control flow will come over here and it will print this statement that is outside if statement over here so let me just save this file andent running this code now so as you can see it says X is greater than 5 so over here since the value of x it is 10 it is printing X is greater than 5 after this x greater than 5 condition is true and then after that we are getting outside if statement so the control flow did not go inside this else part that's because it went inside this if part and this line of code was executed so guys the control flow can only go inside one block of code if this condition is true then it will come out it will not go inside the else part and if this condition becomes false then it will go over here in the else part and execute that line of code so let us check that second scenario now what if X is not greater than 5 so we will change the value of x and let us say the X values is 2 now so in this case is X greater than 5 no in this case so this line of code that is X is not greater than 5 should get printed let me just save this file enter I running this code now so as you can see X is not greater than five this line of code is getting printed that's because the condition was false and the control Flow came in the lse part and it executed this line of code after this outside if statement got printed over here as you can see on the console so this is one of the examples of the if else statement that we can use guys there will be many instances where you will be using this if else statement in your actual programs so make sure that you practice on your own now after this let us see another part that is we have the AL if as well so guys let us take this example over here that is of grading system so if the percentage is greater than 90 we have to assign the grade that is a If the percentage is greater than 75 but less than 90 then we will say the grade is B and if the percentage is greater than 65 but less than 75 then we have to put the gr as C so guys let us move to the code over here let us clear all these lines of code and over here we will simply have the percentage variable and let's say we have 95 as the percentage initially and then we have another variable that is great let's say it is equal to D initially so we have this character that is D over here now what we have to do is we have to provide the if condition and the first condition is whether the percentage is above 90 so over here we will say inside the if condition first of all whether this percentage is it above 90 over here so we will simply have percentage greater than 90 and if this is true then we have to provide colon and then we have to make the value of this grade as a so grade it is equal to a over here inside the single codes now we have another condition that is if the percentage is greater than 75 but if it is less than or equal to 90 then it should be B so what we have to do is we can use the L If part over here so we have L if keyword so as you can see vs code is suggesting us this L if keyword over here followed by we have to check whether this percentage again is it greater than 75 so over here if it is greater than 75 then we have to come in this block of code and then after this again we have to assign the value to this grade variable and this time the value will be B over here so we will assign the value to grade as B and then after this we will again have the L If part over here and we need to check whether the percentage is greater than 65 or not and then in that case we have to provide C so over here we will say l if percentage it is greater than 65 in this case and then if this is true then we have to provide the grade value as C over here and then guys we can also have the else part over here and we can simply provide that the grade in the lse part it can be D over here in case the percentage is less than than 65 so we can have gr as D and then finally we will have the print statement over here so we have the print function and we will simply provide the grade value so the grade is and then we have comma and then the grade variable over here so guys over here as you can see initially the percentage is 95 so it should go inside the first if statement so let me just save this file now and try running this code so as you can see we are getting some error over here at the else part so over here we have forgot to provide the colon after the else part so it is very important that we provide the colon after any of these keywords that we have used and the conditions that we have used so let me just save this file and try running this code now so as you can see the grade is a that's because the percentage value is 95 and in this case percentage is greater than 90 and that is why the grade is being assigned as the value as a now what if the percentage value is not greater than 90 so let's say we provide the percentage value as 85 so in this case the control flow will come over here it will check whether the percentage greater than 90 no in this case then it will go inside the L If part so is percentage greater than 75 yes in this case so this line of code that is grade equal to B will get executed and then the control flow will come directly out of the if else statement and it will print the grade over here let me just save this file andent try running this code now so as you can see the grade is being assigned the value as B so grade is B is getting printed over here similarly let's say we provide the percentage value as 70 so this time this condition that is percentage greater than 65 will get executed because the previous conditions are already false in this case so let me just save this file Andy running this code now so grade must be C so as you can see the grade is C over here and what if the percentage is less than 65 so let's say we provide the percentage is 60 so finally the lse part that is grade equal to T will get executed so let me just save this file and try running this code now so now in this case the grid is D so in this way we can easily use the IFL statement we can also use the AL if key word in order to check the intermediate conditions over here for Loop in Python Programming so guys in computer programming Loops are used to repeat a block of code so let's say for example if we want to show a message 10 times we don't have to print that 10 number of times over here we can simply use the loop in order to repeat the same message again and again 10 times so in Python the fall Loop is used to run a block of code for a c certain number of times so in this example we have considered 10 we can have any number of iterations so basically it is used to iterate over any sequences such as list tle string Etc so guys this is the syntax of the Fall Loop in Python Programming so first of all we have the for keyword followed by a particular value or a variable and then we have this in keyword which is a kind of a membership operator that we have seen previously and then we have the sequence now this sequence can be anything it can be a list stle or any other sequence over here so let us check this with the help of examples now so over here what we will do is let's say we have the variable name as X and we have the list of numbers over here so in order to define the list we have the open and close square brackets and we have the list of numbers let's say we have one followed by two and then we have three four and then five so we have the top five numbers over here inside this list that is defined in the variable X now what we want to do is we want to print all all these numbers one at a time on the separate lines so we can simply use the for Loop over here so for and what we will do is let's say we provide value as the variable name and then we provide the in keyword which is the membership operator and after this on the right hand side of the in keyword we are supposed to have the sequence so the sequence in this case is the variable that is X over here so this is the format of the Fall Loop whenever we are going to iterate through a list or a sequence now inside this we can have the block of code over here so we simply want to print all the values so we have the print function and we can simply provide this value that is variable so guys what is happening behind the scenes is this x that is the list of all the numbers one at a time the number is being assigned to this variable that is value so first of all one will get assigned to value and this value that is one will get printed and then the control flow will go back again in the sequence that is X it will check whether there is a next element or not so two will get printed and then again three and then four and then five and then after this when the control flow comes over here it sees that there is no other element after this Fifth Element so the control flow will come out of this fall Loop and then the other lines of code after this fall Loop will get printed so guys let me just save this file enter I running this code now so as you can see all the numbers are getting printed over here on the terminal that is 1 2 3 4 5 now guys let's say we want all these numbers to be printed on the same line so so previously we had seen that we have certain parameters in the print function that will help us in order to print the values in a specific way so over here we have one of the parameters that is end over here so we provide end and this parameter helps us in order to separate the different elements that we want to print so what we are going to do is I'm going to separate all the numbers using the comma character so I have provided the comma character over here so all the numbers that were printed on the different lines will get printed on the same line now so let me just save this file and try running this code now so as you can see 1 2 3 4 5 is getting printed we are getting this additional comma over here at the end that's because after the last value is getting printed the comma is appended after that last value so guys this is one of the ways in which we can use the fall Loop in order to carry out our operations now guys there is another important thing that you must know in Python the fall loop with python range can also be used so in Python a range is a series of values between two numeric intervals we use the Python's builtin function that is range to define a range of values so let's say we want to define the top 10 numbers over here we can simply use the range function instead of defining them one at a time like how we have defined in this list so basically in order to have the top 10 numbers we have to manually Define it as 1 to 10 over here but we can also get rid of this part we can have the range method over here so as you can see when we type range vs code is suggesting us this function that is range over here and we simply have to provide a number over here so let's say we provide 10 as the number so what is happening is the list of 10 numbers over here is getting assigned to the variable that is X over here starting from the number zero up to the number that is 9 so over here we will be seeing all the numbers starting from zero up to 9 over here the last number that is 10 is excluded from the list so if we Simply Save this file enter running this code now we will get these numbers that is 0 1 2 3 4 5 6 7 8 9 so 10 numbers are getting displayed over here that's because we have provided 10 inside the range builtin method what if we provide 20 over here so 0 to 19 numbers will be displayed so let me just save this file and try running this code now so as you can see 0 to 19 is getting displayed so guys let's say if someone had told you write a Python program in order to print top 20 numbers starting from the number zero up to 19 so instead of having the print statements 20 number of times and writing each and every number inside the print statement we can simply have the range method over here and we can use the fall Loop in order to iterate through the list that we have already defined over here and that is how we simplify the problem that is given to us and write the Python program now guys there is another variation over here python fall loop with the else part so after this fall Loop we can also have the lse part that will mandatorily get executed after we reach the end end of this sequence that we have provided in the fall Loop so what we will do is we will simply come out of this block of code and we will have the else part over here and we will simply print outside for Loop over here so we have outside for Loop so guys what will happen is after the control flow comes out of this fall Loop the control flow will go inside this L's part and it will execute this line of code and print outside fall loop on the console now guys this print statement will be printed on the same line that's because we have provided the end part over here and there is a comma over here so you can expect the string to be present on this same line over here so let me just save this file and try running this code now so as you can see 0 to 19 that is all the numbers are getting printed and then the last line that is outside fall Loop is getting printed over here so in case you want to print something or carry out certain operations after the execution of the Fall Loop you can have the lse part as well and it will carry out the oper operations over here after the end of this sequence is reached so guys this is the main functionality of the Fall Loop that is in order to iterate through the sequence we can also have the sequence of list of strings as well we can also have tle or dictionary as well so guys it depends on your requirements as to what exactly you want to find out through the python programs while loop in Python Programming so guys previously we have seen how the fall Loop works in the Python Programming now the python y Loop is used to run a specific code until a certain condition is met so basically in the fall Loop there was no such condition that we had provided but it was iterating through a list that we had provided in the form of a variable but over here this is the syntax of the while loop first of all we have the while keyword over here and then we have a certain condition and if this condition is true then only the control flow will go inside the body of the while loop and then again the control flow will come over here it will check the condition again and if the condition is true once again it will again go inside the body of this while loop so guys again and again the control flow will come inside the while loop until and unless the condition becomes false so when this condition becomes false the control flow will come out of this while loop and that is how the while loop is going to work in the Python Programming so guys let us check this with the help of examples now so let's say we want to print the first five numbers that is 1 to 5 so over here initially we can have the variable that is I it is equal to 1 and the second variable that is J it is equal to 5 so this is the starting point that is I equal to 1 and the ending point is J is equal to 5 so basically we can have a while loop over here we will simply have the while keyword and the condition that we have to give is whether I is less than or equal to J and up to that condition we want to print the value of I so basically it is I less than or equal to J over here so if this condition is true we want to print the value of I which will be be one initially so basically I want to print this number that is I over here now guys what exactly is happening over here is I's value is 1 initially J value is five initially so is I less than or equal to J in the first instance yes in this case so I will be printed which is equal to 1 so again it will go inside the Y Loop and it will check whether 1 is less than or equal to 5 yes in this case so guys we are not changing any of the values that is I or J over here so this will be infinite Loop because again and again the condition will be true and the number that is I which is equal to 1 will get printed indefinitely so what we have to do is we have to increment the value of I because after one we want to print the value that is two over here so what we will do is we will simply add 1 to I so I it is equal to I + 1 we can also use the Shand method that is I + equal to 1 over here so what will happen now is I's value is updated to I + 1 which will be 2 2 now so is 2 less than or equal to 5 yes in this case and then again two will get printed and then I will again get incremented over here so the I's value will be three next time I's value will be four and then again I's value will be five and then ultimately when I's value is six this condition will become false that's because 6 is not less than or equal to 5 and the control flow will come out of the while loop so guys let me just save this file and try running this code now so as you can see all the numbers that is 1 2 3 4 5 is getting printed after the I's value is five over here five is getting printed now I's value becomes six over here that's because 5 + 1 will be 6 and is 6 less than or equal to 5 because the J's value is five over here in this case so no the condition becomes false and the control flow comes out of the while loop now what if we want to print all these numbers on the same line so simply inside the print statement we can have the comma and then we can have the end operator and then let's say we want to separate all the numbers with the space characters so inside the double codes we have provided the space character over here so let me just save this file and try running this code now so as you can see 1 2 3 4 5 is getting printed over here we can have any numbers over here let's say I is starting from 11 and let's say we want J is equal to 20 so in this case 11 to 20 should get printed let me just save this file and TR running this code now so as you can see 11 12 13 14 and up to 20 numbers are getting printed over here so guys this is the main functionality of the while loop it is going to have a certain condition and if this condition is true the block of code inside the while loop will get executed and once the condition becomes false control flow comes out of the while loop now guys we can also use the lse part with the while loop so over here as you can see python while loop with the else part so a while loop can have an optional else block as well the else part is executed after the condition in the while loop evaluates to false so basically after this while loop we can also have the else part which is optional so we can have the else part over here what we will do is we will simply have the print statement that is outside the while loop so we have the print function and we will say outside while loop over here so let me just save this file and running this code now so as you can see 11 12 13 up to 20 numbers are getting printed and then on the same line the outside while loop the statement that we have provided in the else part is getting printed so this is the functionality of the lse part after the Y Loop it is optional if you want to have we can have it or else we don't need to have it but guys the important thing is inside the V Loop we can provide a particular condition and the control flow will go again and again inside the V Loop until the condition is true once a condition becomes false the control flow will come out of the V Loop now guys what you should use whether you should use the python for Loop or python while loop over here so guys basically they are used based on the specific requirements so as you can see fall Loop is usually used when the number of iterations is known so as we had seen previously in the fall Loop we provide a particular sequence and iterate through that sequence by giving one value at a time to a variable and we use that variable inside the block of the Fall Loop but in the while loop there is a condition so while loop is usually used when the number of iterations are unknown so we don't know the number of iterations we don't have the sequence of elements or the list of numbers through which we want to iterate so basically we provide the condition in the while loop So based on these requirements you can choose whether you want to use the while loop or you want to use the fall Loop but guys it is very important that you practice both these Loops the implementation of these Loops are very important as far as Python Programming is concerned so break and continue keywords in Python Programming so Guys these are two important keywords in Python Loops that is break keyword and the continue keywords basically these are used in the loops in order to carry out certain operations so the break statement is used in order to terminate the loop immediately when it is encountered so whenever we are executing certain code inside the for or the while loop if there is certain condition we can use the break statement in order to come out of the loop and then on the contrary we have the continue statement as well so the continue statement is used to skip the current iteration of the loop and control flow of the program goes to the next iteration so guys let us check both both of these keywords with the help of examples over here so let's say first of all we will be using the fall Loop in order to print the top 10 numbers that is 0 to 9 so let's say we have 4 x and then we have the in membership operator and then we have the range builtin method in order to print the numbers so let's say we have the range of 10 numbers over here after the colon let's say we want to print all these numbers so what we will do is we will simply put print X and in order to get all the numbers on the same line I'm going to put end parameter over here and just have the space character over here so let me just save this file and try running this code now so as you can see we are getting the top 10 numbers that is 0 1 2 3 up to 9 over here but guys let's say now there is a requirement that before printing this six number we want to come out of the loop and we only want to print from 0 to 5 and if we are required to keep this foral statement as it is what we have to do is once we encounter the number six inside the fall Loop we have to come out of the Fall Loop so how that can be done basically we will have the if statement over here so inside this fall Loop we are having the if statement over here and we are going to check whether this x value is it equal to 6 over here so this is the relational operator that is equal to equal to we are trying to check whether this x variable is it equal to 6 and if it is equal to 6 then we can simply come out of the loop by using the break statement so after the colon over here here we will simply put the break keyword so once we put this code over here that is if xal to 6 we are putting the break statement the control flow will come out of the loop when the x value is equal to 6 so let me just save this file and try running this code now to see what happens so as you can see 0 1 2 3 and then up to five numbers are getting printed and once a control flow comes over here next time the value of x will become 6 and it will check whether X is equal to 6 yes in this case and since this condition is true the control flow goes inside the if statement and this break statement is encountered which makes the control flow come out of this fall Loop over here now similar operation is being carried out when we use the while loop as well so let's say I is equal to one over here and let's say we want to print the first 10 numbers once again so what we will do is we will say while we can simply put I less than or equal to 10 over here and then after the colon we can simply have the print function over here and we will print the value of I and then let's say I provide the end parameter as the space character over here so that all the numbers that is the value of I is printed on the same line so let me just save this file enter I running this code now so we have entered the infinite Loop over here I have just interrupted the printing of the numbers the mistake that we have done is we have not incremented the value of I over here so what we will do is simply we will increment the value of I by I + 1 over here let me just save this file and try running this code now once again so as you can see 1 to 10 numbers are getting printed now again let's say we want to print only the numbers from 1 to 7 so when the number 8 is encountered we want to come out of the while loop instead of printing the 8 9 10 numbers so we can simply put the if condition over here if I is equal to 8 then what we have to do is we have to use the break statement over here so let me just save this file and try running this code now in this case the top seven number should get printed and after eight is encounter the control flow should come out of this while loop over here so I'm running this code now so as you can see 1 to 7 is getting printed over here so guys this is the main functionality of the break keyword let us now understand how continue works as you can see the continue statement is used in order to skip the iteration of the loop and the control flow of the program goes to the next iteration let us understand this with the help of example over here we will take the same example that is for I in and then the range that is 0 to 9 over here so over here we will provide the number 10 inside the range builtin function so what we will do is we will simply print the value of I over here and then we will end it with the space character let me just run this code once so I'll just run this code over here as you can see 0 to 9 is getting printed now guys let's say I don't want this number five over here that is being printed in the range 0 to 9 so what we can do is simply I will put a condition over here if this I's value equal to 5 then what we have to do is we don't want to print that number right so after this colon we can simply put the continue keyword so guys what will happen is once the I's value is five the control flow comes inside the if condition and the control flow will encounter this continue keyword so what exactly will happen is instead of going to the next statement over here the control flow directly goes back again to the fall Loop and goes to the next number so next time the I's value will be six and this time since this condition will be f it will print this number that is six over here so in short what is happening is when the value of I is five it will not get printed over here with the help of this print statement so let us check this so I'll save this file and try running this code now so as you can see we are getting 0 1 2 3 4 and then there is no number five but after four we have six directly and then we have 7 8 9 so guys in this way continue keyword works so let's say if I only want to print the even numbers so what will happen is let's say I don't want the odd numbers so how do we check that in the if condition we can simply put I per 2 is it equal to 1 over here because every odd number if it is divided by two it will give us the remainder as one and that is what we are checking so all the odd numbers will not be printed but only even numbers will be printed so let me just save this file and try running this code now so as you can see only even numbers between 0 to 9 is getting printed that is 0 2 4 6 six and then 8 and guys this is the functionality of the continue keyword that is in order to make the control flow go back to the fall Loop for the next iteration and guys that is the main functionality of the continue keyword in order to skip the current iteration and go back to the next iteration inside the loop now guys similarly you can use the continue keyword with the while loop as well so that code I'll leave up to you so that you can practice on your own in order to learn more about it functions in Python Programming so guys we will learn about the python function fun and the function expressions with the help of examples so basically a function is a block of code that performs a specific task so it can be any task that you want to implement based on your requirements but it is the block of code that you can put inside the function and that block of code will have your implementation of the logic now suppose you need to create a program to create a circle and color it so there are two task over here that is first of all in order to create a circle and the second thing is to color it so you can create two functions to solve this problem that is the first function will be to create a circle and that will be one function and another function will be to create a color over here so basically what we have done is we have divided a complex problem into smaller chunks which makes it easier to understand the program and reuse the functions as well so there are two types of functions so first of all we have already seen some standard Library functions as well one of the example is the print statement that is the the print function so these are builin functions in Python that are available to use so let us check some examples of standard Library functions over here so previously we have seen the print statement so this is nothing but one of the builtin functions which take multiple parameters so one of the parameters is the value so when we are providing programming for beginners the string which is the name of the YouTube channel as well which you should definitely subscribe so this is the string that we have provided to the print function and this string is being passed to the print builin method and behind the scenes this print function is having some sort of code that will help us in order to print the statement on the terminal so when we save this file and try running this code now basically this programming for beginners is getting printed what we have done we have just called that function and the implementation is behind the scenes so this is one example of a builin function similarly we have another builtin function that is range which helps us in order to have the list of numbers from zero up to the number that we have provided so let's say we provide the number 10 so it will provide us all the numbers before 10 starting from zero so this is another builtin function so similarly we have other standard Library functions as well now you can also have the user defined functions so in case your requirement is not fulfilled by using one of the standard functions that is being provided by python you can have your own user defined functions also so we can create our own functions based on our requirements and this is the syntax that is first of all we have this keyword that is DF which means Define and then we have the function name so this function name will be the name of the function like this range is the name of the function then the print function the print name is the function name over there so similarly we can have our own function name and after that we have the list of arguments we can have any number of arguments over here inside that we will have the function body where our implementation code will be present and then we can also have the optional return statement which means it will return some value so over here as you can see this is the example we have the defined keyword and Then followed by the greed function over here so it is not taking any arguments for now it is simply printing some statement that is inside greed function now how do we call this function simply we use the function name that is greed followed by open and close parenthesis and then we call the print function and we say outside function so guys let us check this with the help of example over here so simply we will have the defined keyword so D EF and let's say we have sum and then underscore numbers so basically what we are doing over here is we will be adding two numbers so over here we have the open and close parenthesis and then after that we have a colon and let's say we have the number a it is equal to 10 and then we have number B it is equal to 20 we want to print the sum of these numbers so we simply provide print fun function inside this and we say A + B and then we can also have the string over here let's say we have sum of A and B and then we have colon and then after this we have comma and then we have a plus b over here so guys this is the function that we have already defined we have two numbers that is a is equal to 10 and B is equal to 20 now if we Simply Save this file and running this code we will not get anything so as you can see there is no print statement which is helping us in order to print something on the terminal why so because this code is present inside a function which is not called yet so we need to call this function that is some numbers so how do we call it by simply calling the name so we simply have to provide some numbers over here and then open and close parenthesis and that's it we have simply called this function which will make the control flow go to this particular function over here and inside it will go it will check that a value is 10 B value is 20 and it will print sum of A and B it will carry out this operation that is a plus b so let me just save this file and try running this code now so as you can see sum of A and B it is equal to 30 and that is how we can simply provide the function now guys why do we write this function just to add two numbers so let's say you have a scenario you have a it is equal to 10 and then we have B it is equal to 20 and you want to print the sum so you can simply provide print a + b so you will get the answer as 30 now with the same requirement you have another requirement as well in the same code that is with this particular addition you want to add more two number so what you will do is you will simply copy and paste these lines of code once again that is the three lines of code over here but this time the age value is something else so let's say we have something like 50 and then 60 over here so what will happen is with this print statement it will print the sum of these two numbers now let's say there is another requirement in which case all the sum needs to be printed at once and you have two more numbers so you will again copy these lines of code and then again paste this over here and then let's say the numbers are 100 and then 200 over here that is B is 200 so let me just save this file andent running this code now so what is happening is all the sum is getting printed once that is 30 110 and 300 but let's say similarly if you have 10 sets of A and B values in this way and you want to print all the sum of those numbers so what you will do so your code will become little bit complicated and it will be little bit lengthy as well so in order to avoid this what you can do is you can simply have the function and inside the function you can have those variables and have the sum of those variables so in order to achieve your task that is have the sum of multiple numbers over here in one screen and using the function what you can simply do is you can pass these values that is 10 20 50 60 and 120 while calling the function that is some number so I'll just remove these lines of code now over here and what we will do is I will simply provide the parameters that is the arguments over here that is a and Then followed by comma and then we have B now these A and B are not required because the values will come whenever this function is being called so I'll just remove these lines of code over here you will simply have one print statement inside the function and the sum of A and B it is A + B so this sum will get printed over here while calling the function you're supposed to provide the A and B value so what we will see simply do is I will simply call this some numbers over here and I will provide the values of A and B so what we had provided we had provided 10 and 20 and then again we had the requirement that is to add the other two numbers which were 50 and 60 so again I will just copy paste this sum numbers function and provide the different values this time and then again I will copy and paste this once again with some different values so 100 and 200 so as you can see our code has become little bit cleaner instead of having three lines of code in order to add two numbers every time for which our code has also become lengthy we have a very short code and it is very clean as well it is very readable as well so let me just save this file now and try running this code so as you can see we are getting sum of A and B it is 30 sum of A and B it is 110 and sum of A and B it is equal to 300 you can also customize your function in order to have the values of A and B over here so we can simply say over here we have the double codes and then we have comma and then we have a over here and then we have double codes and then we have and keyword double codes and then B value and then comma and then double codes over here before the colon so as you can see A and B values can also be printed so let me just save this file and try running this code now so as you can see 10 and 20 were pass first time so it is saying sum of 10 20 it is 30 then sum of 50 and 60 it is 110 and then sum of 100 and 200 is 300 you can call this function any number of times with different values in order to get the different sum over here I'll say 200 + 300 again and then let's say I provide 400 and 500 over here let me just save this file ENT I running this code all the sums are getting printed and our code is also very clean over here so guys this is the main functionality of using python functions you can simply have the defined keyword followed by the function name and then this arguments list is option over here you can pass it or if you don't want to pass it there is no need to pass so as you can see over here python function arguments this we have already covered that is in order to pass the argument now one last thing is return statement so guys we have not checked any return statement over here so return is nothing but it will return some value so let's say instead of having the print statement over here we want the print statement outside the function so what we can simply do is we can simply return the expression that is A+ B so so we can have the return keyword over here so it will say return a plus b so simply whatever value were being passed over here that is 10 and 20 it will return the sum that is 10 + 20 it is equal to 30 to this code and over here we should have something in order to catch that value so I'll just remove these lines of code for now and then let's say in order to catch the value I provide the sum variable so this sum variable is assigned the value that is being returned from the sum numbers over here which is equal to the sum of these two numbers and then simply we can have the print statement in order to print the sum value so some variable can be printed so let me just save this file and try running this code now so as you can see 30 is getting printed that's because we have passed 10 and 20 over here also to make it more short what we can do is instead of storing the value inside this variable we can simply have the print statement and inside the print statement we can simply call the sum numbers function so as you can see we have the print statement inside this we are calling the sum numbers 10 and 20 so it will return 10 + 20 it is equal to 30 so let me save this file enter I running this code now so 30 is being printed let's say I change the numbers to 20 and 50 over here so 20 + 50 should be 70 let me just run this code so 70 is getting printed and based on the requirement you can format the print function that is you can have any statements being printed over here along with the sum of the numbers so guys this is one of the examples of how you can find the functions and use them you can have any other logic inside the functions that you want to implement based on your requirements so guys practice on your own so that on different inputs you get different output recursion function in Python Programming so guys in Python we know that a function can call other functions as well it is even possible for the function to call itself and when the function call itself it's called recursive function so basically these type of construct are termed as recursive functions whenever a function calls itself from inside its body so for example the factorial of a number is the product of all the integers from one up to that number so if you see the example the factorial of 6 which is denoted as 6 and then exclamation mark it is equal to 1 * 2 * 3 * 4 * 5 * 6 which is equal to 720 and this is the factorial of the number that is six so guys we can find the factorial of any number by using the recursive function so let us understand how recursive functions work with the help of example over here so let's say we have the factorial function in this case so factorial is the name and then let's say if we provide the variable name as X over here so what we will do is we will simply have to provide the condition over here that is if x is equal to 1 we have to return one in this case so guys always remember that whenever we are having the recursive function we need to have the end point we need need to have a limit on which we need to return some basic number over here so this is the limit in this case that is when the value of x is equal to 1 that is at the lowest level the function needs to return the value which is one and then if it is not one then we can call that function once again now how do we call that function we simply use the x value that is the current x value and then we multiply that number with the factorial of x 1 so this time we provide x one in this casee and one more thing that we can do in order to return this result is we can have the return keyword so guys we will understand this function in detail now before which we will just call this function over here that is factorial and let's say I provide the number that is 6 that we have already seen for which the factorial of 6 must be 720 and what we will do is since this factorial function is returning this value that is return X multiplied by this recursive function we will catch the value in the result so result it is equal to factorial of 6 and we will simply have the print statement saying that factorial is and then colon and then we can simply provide result variable over here so let me just save this file and try running this code guys no need to worry over here I will make you understand each and every line of code over here and how it works so just stick with me till the end of this video so as you can see factorial is 720 so this is the result so we have got the correct result over here now let us understand the working of this recursive function so what exactly is happening over here is we have defined the function that is factorial in this case now result is the variable name for which we will get the value from this factorial function that we have called so basically the control statement comes over here factorial of 6 so the control statement will go to the definition of this function so x value is 6 right now so what we will do is we will understand over here one step at a time so right now X it is equal to 6 in this case so is x value equal to 1 no in this case so the control flow will come over here and it will check this expression that is x * factorial of x 1 so this expression we will put over here that is 6 which is the value of x * by factorial of x 1 so x value is 6 so X 1 will be equal to 5 in this case now what will happen is now factorial of five is being called over here so what is the factorial of five the control flow will go back again to this function and that is why we call it as recursive because from the body of this function we are calling the function itself now this time x value is 5 so is x equal to 1 no in this case so this time again this expression will be called so x value will be five in this case and multiplied by factorial of x 1 which will be 4 so again next time what will happen is 5 multiplied by factorial of four will be called now what is the factorial of four so again the control flow will come over here it will check whether X is equal to 1 no in this case so again this expression will be computed so this time it will be x = 4 * the factorial of 4 1 which is 3 right now and then again now x value is three so again it will be 3 * factorial of 2 in this case and then the last statement that is 2 * factorial of 1 in this case now when the factorial of 1 is being called what what will happen is factorial of X which will be factorial of 1 in this case so X is equal to 1 yes in this case so it will return true and the control flow will not go over here to carry out the computation of this expression so return one will return to the factorial of one function so in this case factorial of 1 will become one over here now 2 * 1 is equal to 2 and this result will be returned to this function that was called so 2 * 1 is 2 so two will be return returned over here 3 * 2 is 6 so factorial of 3 will become 6 and 6 will be returned over here 6 * by 4 is 24 so factorial of 4 will have 24 as the result and then 24 * 5 which is equal to 120 and that value will be returned to this function called that is 120 and then 120 * 6 will be 720 which is the last expression that was computed and that is what we will get over here that is the result will be 720 in this case and that is what we got 720 over here now guys similarly we have seen that the factorial of 4 is equal to 24 so this result we can get simply by calling the factorial function with the value four as the argument so let me just save this file enter I running this code so as you can see factorial is 24 similarly we can get the factorial of three which is equal to 6 so we can simply put three over here and then let me just save this file and try running this code so factorial is six in this case and guys that is how the recursive function works this is just one example that is in order to find the factorial we can have any kind of implementation code based on your requirements provided the requirement can be fulfilled by using the recursive functions if we see one more example let's say we want to find the factorial of the number that is 10 let me just run this code once again so it says 36280 and that is what we get as the factorial of 10 comment in the comment section below whether this result is correct or not so guys please practice on your own so that on different inputs you get different output and that is how you are going to learn more about Python Programming so guys there are certain advantages and disadvantages of recursive function as you can see recursive functions make the code look clean and elegant so we have made the code very clean and elegant over here a complex task can be broken down into simpler sub problems using recursion so we can have any number that is 100 or 200 and get the factorial of that number just by using these lines of code over here and then sequence generation is easier with recursion than using some nested iteration now what are the disadvantages sometimes the logic behind recursion is hard to follow through so basically as you have seen as I have told you that there must be some end point that you need to provide so basically this is the end point in this factorial function based on your requirements there must be some end point up to which you need to restrict the call of the function from its body itself so that condition you need to ident identify based on the requirement and recursive calls are expensive they are inefficient as they take up a lot of memory and time and the recursive functions are hard to debug so guys basically these are certain disadvantages so it depends on your requirements what exactly you want to implement and accordingly you can use the recursive functions Anonymous or Lambda function in Python Programming so guys in Python an anonymous or Lambda function is a special type of function without the function name so we use the Lambda keyword in instead of DF that is defined to create a Lambda function so as you can see this is the syntax previously we had used the DF keyword in order to create the normal functions but this time we are going to use the keyword that is Lambda along with the arguments which are optional over here and then followed by a colon and then we have the expression so this is one of the examples of the Lambda function over here we have the Lambda keyword followed by the colon over here and then we have the expression that is we are printing the hello world string and this entire function that is the anonymous function which is not having any name over here is being assigned to a variable that is greed and then this greed needs to be called as you can see call the Lambda over here along with the open and close parentheses so when we have this line of code over here this Lambda function will be called and hello world will be printed on the screen so guys let us check this with the help of example over here so what we will do is simply we will have the Lambda keyword first of all and Then followed by a colon and then let's say we want to print the name of this YouTube channel that is programming for beginners which you should definitely subscribe if you have not done so so we have programming for beginners over here so this is a Lambda function or the anonymous function without having any name and then let's say we assign it to a variable and we can simply provide the variable name as Str Str and then we have the equal to operator over here now what we have to do is simply we need to call this St Str variable so over here on the new line we will have S Str followed by open and close parenthesis and this is the way that we call the anonymous function so let me just save this file and try running this code now so as you can see programming for beginners is getting printed over here and this is one of the simple examples as far as Anonymous function or Lambda function is concerned in Python Programming now guys very important thing what if you have certain arguments which you want to print so this is kind of a static function which which is having a fixed string that you want to print but let's say you want to provide some string over here while calling the function so in case let's say we have this argument as this is a string that we want to print so this Str Str that is the Lambda function is being called but this value needs to be caught by this Lambda function over here so what we can simply do is we can take this argument after this Lambda keyword as we have seen in this syntax after the Lambda keyword we have the list of arguments that we can take and use them in the form of Expressions over here so what we will do is let's say I provide Lambda and Then followed by X so this x variable will have this value whatever we pass while we are calling this Str Str function that is the anonymous function so this x we can use in our expression inside this Lambda function so let's say I provide a label over here string pass and Then followed by colon and then I have comma and Then followed by this x variable which is being passed so so this is a string it is one of the arguments that we are passing to the Lambda expression and the X variable will be assigned to this value and it will be printed by using this print statement so let me just save this file and try running this code now so as you can see string passed this label is getting printed and then the value of x which was passed from this calling of the Lambda function over here that is this is a string and the same thing is getting printed over here so guys this is the way that we can pass arguments or parameters to Lambda or Anonymous functions over here now guys there is another variation can we have the multiple arguments let's say we have two or more numbers for which we need to find the sum of those numbers can we find the sum of those numbers by using the Lambda function so let us quickly check this with the help of examples over here so what we will do is again we will Define the Lambda function over here so we have Lambda keyword and this time we will take two numbers so let's say the two numbers are stored in these variables that is X and Y and Then followed by a colon and then what we can do is simply we can print the sum of these two numbers so we put x + y over here so this is the expression print x + y and over here in the Lambda we have defined the two variables over here now what we can do is we can assign it to another variable so let's say we have addore numbers as the variable name so we have addore numbers and then Lambda keyword followed by these two variables that is X and Y and then print x + y over here so what we can simply do is we can call this add numbers and provide the two numbers that we want to add so we just use this add numbers over here and then let's say the two numbers that we provide is 10 and 20 so we are expecting the sum that is 10 + 20 to be displayed by using this expression over here so let me just save this file and try running this code now so as you can see we are getting some syntax error Lambda expression parameters cannot be parenthesized so what we can do is we can simply remove these parenthesis that we have provided so when we are providing multiple arguments in the Lambda function we need not have to provide the parenthesis we can separate them using the commas over here so let me just save this file and try running this code so as you can see 30 is getting displayed we can format this string and have some label as well so what we can do is we have the double codes over here and we say sum of numbers and then colon and then comma X+ y so let me just save this file and try running this code now as you can see sum of numbers that is 30 is getting this played another way that we can print the sum of these numbers is just by returning the sum of these numbers and printing them over here outside the Lambda function so while returning any of the Expressions we need not have to have the return keyword we can simply have the expression over here so as you can see the two numbers were passed that is 10 and 20 it will be taken by this Lambda function in the form of X and Y X + Y will be computed and then it will be returned to this function which was called by using the add numbers now we can simply print this so we can have the print function over here and inside the print function we call the add numbers with these two numbers let's say this time we provide some other numbers that is 100 and let's say 150 so the sum should be 100 + 150 which should be 250 over here let me just save this file and try running this code now so as you can see 250 is getting printed and again we can have some labels over here in order to Define exactly what this function is doing so guys practice on your own so that on different inputs you get different output this Lambda function comes very important which is also called Anonymous function when you don't want to define the function explicitly and you have very less number of operations to be carried out by using this Anonymous function so modules in Python Programming so guys as our program grows bigger it may contain many lines of code so instead of putting everything in a single file as we have done so far we can use modules to separate codes in separate files as per their functionality so basically we can separate the codes and we can create separate files based on the functionality of the file that we are going to create so this will make our code organized and easier to maintain now a module is a file that contains code to perform a specific task so like let's say if we want to add two numbers we can have a function inside another file and we can call it as a module so a module may contain variables functions classes and many other things so as you can see over here for example there's a python module that is addition what we have done is we have defined a function over here so we have the add that is the function name which takes two parameters A and B so A + B which is the sum of these two variables will be stored in the result variable and this result variable is returned with the help of this return statement so guys this is one of the functions which can be present inside one module which is created as a separate file so guys let us check this with the help of example how we can create the module so basically when we go over here in the Explorer as we have seen previously we were using python thore code file in order to create all our programs but what if we want to create another file and have a function inside that file so we can come over here we can create a new file and let's say we want to name it as addition and Then followed by py which is the extension of the Python programming language so as you can see we have created this addition. py which is another python file over here so what we will do is let's say we have a function over here so Define add which takes two parameters that is a and b and then after colon what we will do is we will have the result variable which will have the addition of these two numbers that is a and b which will be passed over here and then we are going to return this result so return result so basically this function is going to take two values that is in the form of a and b and return the sum of these two values now this code is being return in another file that is addition. py so how do we call it from the main file that is python code over here so what I I will do is first of all we are going to save this file over here and switch back to our main file over here that is Python code. py and what I will do is over here we are going to import this module so this python file that we have created right now this is kind of a module so how do we import that module we are going to use the import keyword followed by the name of that module so the name of the module is the file name itself so we are going to provide addition so as you can see vs code is providing us this addition value over here which is part of the autocomplete feature of this editor so we are going to select this now what we can do is we can call this add function since we have already imported this module over here so simply what we will have to do is we are going to use this module name that is addition followed by Dot and then as you can see we have this add method and there will be many other methods that will be present which will come by default whenever we are going to create new python files in this way so basically we are interested in using this ad method so when we select this and then we have to provide the two values so what we will do is we will say 10 comma 20 now guys what is happening is this add function it is going to take two values that we have already passed and it is going to return the result so we are supposed to take that result in another variable over here so let's say we provide sum as the variable name which is going to take the return from this add function over here which will be the sum of these two numbers and then we can simply print the value of the sum variable so over here we will says sum of numbers followed by colon and then comma we have the sum variable name so guys let me just save this file now and try running this code so as you can see sum of numbers it is 30 right now so basically what we have done is we have created a module which is the user defined module over here and then we have created a new function inside that module which is going to take two values in the form of a and b and it is going to return the sum of these two values and then what we have done is we have imported that module that is addition and called the function that is the add function which is going to take two values as we had defined in the addition module and the sum will be stored in this sum variable over here and we have printed that sum variable so this is the classic example of a user defined module over here similarly there are multiple modules which are built in inside the Python programming language so as you can see there are certain important notes over here python has tons of standard modules so for now we have just seen the user module right now we are also going to take the example of a standard module now the standard modules can be imported the same way as we import our user defined modules so let us take the example of a standard module in this case we will take the example with the math Library module so what we will do is we will remove these lines of code over here and then we can simply import the math Library so as you can see over here once we put the M character as you can see these all are modules that are built in inside the Python programming language we are interested in this math Library over here so when we import math and then we can use the math Library over here and then follow by dot we can see many other functions and variables that are already present the thing that we are interested in is the pi value so as you can see we can get the pi value which is approximately equal to 3.14 and the same thing we can get from the math library and by using the pi variable over here so what we can do is let's say we provide the variable name as value and math do Y is the value that we want to store in this value variable and we can simply provide the print statement and then we can say by value is followed by colon and then we can simply put the value that is the variable name so guys what is exactly happening over here is we are importing the math Library which is the builtin Library over here which is a builtin module inside the Python programming language and then inside that we have certain variables and functions as well one of the variables is pi which is having a value and that value we are getting by using this math. Pi statement and then we are assigning it to this user defined variable that is value and the same thing we are printing over here with this particular string that is pi value is followed by colon and then the value variable over here let me just save this file and try running this code now so as you can see pi value is we can see this 3.141592 and so on it is a huge number after the decimal point so guys this is another way in order order to use the standard modules that are already present in the Python programming language next we are going to see how do we use the python import with renaming so far we have imported the libraries and used the names of those libraries or modules along with the function name or the variable name but what we can do is we can rename these libraries while importing them so after this import math we have to use the S keyword followed by m so guys this is nothing but it is a shorthand method that we can use in order to name this library right now so instead of typing this math Library over here we can simply use the M character over here because that is what we have defined that is import math as M so we can use M everywhere wherever we are going to use the math so let me just save this file now and try running this code we will see the same output that is pi value is 3.1415 and so on so guys the idea over here is you need not have to type the entire name of the module in this case whenever you are going to refer to a particular method or a function or a variable inside the module but you can use that simple one character or the two characters that you have used while importing the module now guys there is another way python from and then import statement so over here what we can do is let's say if we only want to use the pi variable in this case so exactly what we are doing is we are importing all the methods that is the functions as well as the variables but let's say if we only want the pi variable so what we can simply do is is we can use the from and then we can use the module name that is math and then we can simply import the variable so import and pi over here so as you can see we can use this statement as well that is from followed by the module name and then import and then what exactly we want to import we can just mention that and then after this we can simply use the pi variable name in order to assign it to another variable name or over here we can simply put pi as well so we can simply put Pi in the print statement also so let me just save this file and try running this code as you can see we are getting the same output that is pi value is so and so so basically in order to get the specific variable or the method we can use this statement that is by using the from followed by the module name and then we have the import keyword and then the name of that specific variable or the method now guys one last thing as far as python modules are concerned there is a builin function that is D which is directory it is a builtin function in Python in order to get all the variables and the function names inside the module so let's say I provide import math over here so we have import math and then what we can do is we can simply get the directory in this case we simply have to provide the DI function and Then followed by open and close parenthesis and let's say we provide the math Library over here inside the DI function so let me just save this file ENT I running this code now so guys nothing is happening over here that's because we have not provided the print statement so probably we'll provide the print statement and enclose the statement inside the print function let me just save this file and try running this code now as you can see we are getting the list of all the methods and the variables that are present inside the math Library so guys this is a very huge list over here as you can see we have A1 then a12 a 10 H and then so on we are getting all the method names we are also getting the variables as you can see we are having pi over here and so on guys similarly what we can do is let's say I import this addition module which is is a user defined module that we have already seen so I import this addition module and inside of this math I provide this addition module name so let me save this file so one of the methods that is present is ADD over here so this should be listed now so I'll just run this code now over here so as you can see add method is getting displayed apart from that there are many other builtin variable names at are present which gets generated whenever we create new modules over here so guys this di function can be useful in order to check which are the different variables and functions are present inside that module that we have already defined or if it is a builin module that is provided by the Python programming language random module in Python Programming so guys python offers the random module to Generate random numbers or to pick a random item from an iterator so we are going to check this with the help of examples now over here so first of all we are supposed to import the random module in this way and then as you can see we are print a random range over here we are using the random module followed by the dot operator and then we are using the Rand range function in order to find the random range over here so let us move to the vs code over here in order to check the examples so first of all we will be importing the random module so we have import followed by random over here next let's say I want to print the random range so what we will do is we will have the print function and inside that we will be using the random module that we have just imported followed by Dot and as you can see vs code is suggesting us many other variables and the method names as well that we can use so we are going to say random range over here and the range it should be between 10 and 20 so we provide 10 comma 20 s the range so let me just save this file now and try running this code so as you can see we are getting 12 over here which is the part of this random range that is 10 and 20 let's say we want the number to be between 100 and 200 over here here so let me save this file and try running this code now after making changes as you can see we are getting the 178 similarly let's say if you want to throw the dice and only numbers that are present on the dice is between 1 to six so you can use this random range function inside the random module and provide 1 comma 6s the number in order to get the number so as you can see we are getting four over here next time when we run this and then we are getting two over here so you can use this function in order to develop your next game as far as throwing a dice is concerned now similarly we can also have the list as you can see we have the list one and then we have five characters over here let's say out of these characters we want to select one of the characters so you can use the choice function inside the random module so let us check this with the help of example now over here so let's say we have the list of the programming languages so we name it as the list one as the variable name and then what are the programming languages so one is Python and then let's say we have Java as another programming language then let's say we have C++ and then let's say we have Swift as another programming language so these are certain programming languages now let's say out of all these four values we want to select one of the values randomly so what we can do is we can have the print function and then we can use this random module name followed by Dot and then we have the choice function name and inside this function we have to provide the list variable so we provide list one over here so basically we are passing this list one to this Choice function and asking the choice function to select one of the values from this list of values so let me just save this file and try running this code now so as you can see we are getting the Swift value as the random value if we run this code once again we will get some different value so as you can see we are getting Java this time then we run again we are getting python this time and then if we run again we are again getting Java so every time we will get a different value whenever we are using this particular function now let's say we want to print this list so what we will do is I'll just remove this part of the print statement and I'll simply provide a list one that is the variable name for that list let me just save this file enter I running this code now so as you can see we are getting this list of values now before this what we can do is we are saying original list over here as the label so we say original list now exactly what we want to do is we want to shuffle this list let's say this sequence of data that we have inside the list we want want to shuffle it so what we can do is simply we can use the random module name over here followed by Dot and it also has something called as Shuffle function so this will help us in order to shuffle all the values of this list that we provide so Shuffle followed by inside the open and close parenthesis we provide the list one variable name and then after that what we can do is we can simply print this list content once again and then we can simply put shuffled list over here instead of of original list so before shuffling we are printing the original list over here which will print the values in this sequence and then after shuffling it will print the shuffled list over here where the values will be shuffled in this case so let me just save this file and try running this code now as you can see original list we are getting python Java C++ and Swift and then shuffled list it is Java Swift C++ and then python so we have just shuffled the list the values were completely shuffled inside the list and were printed on the screen now guys let's say very randomly you want to generate some kind of element so what you can do is simply have the print statement over here and simply use the random module in this case so I'll just remove this part of this line and then we can have the random followed by dot we have something called as random function over here this line of code will generate any element over here so let me just save this file and try running this code so as you can see we are getting a float number 0.104 and so on and then let me just run this code once again as you can see we are getting another number over here and then let me just run this code 0.99 so this line of code is helping us in order to generate the random numbers over here in this case so guys this is the way that you can use random module over here in this case in order to randomly generate some numbers or randomly Shuffle the values inside the list that is present list in Python Programming so guys a list is a collection of similar or different types of data so for example suppose we need to record the age of five students so instead of creating five separate variables we can simply create a list so as you can see this is the way that we create the list first of all on the left hand side we have the variable name and then on the right hand side inside the open and close square brackets we have the list of elements which are separated using the commas so I'll just copy this line of code over here and then let us move to the vs code and paste this so as you can see on the left hand side it is the variable table name of the list and on the right hand side we have the age of all the students over here and simply we can print the list by using the print function after this we can provide the variable name that is list so let me just save this file andent I running this code now as you can see we are getting the list of all the elements in the sequence that we had provided over here it is very important that all these elements are separated using the commas over here now guys the list can have the same kind of elements that is this one is having the list of integers data type only but we can also have the string as well in between so let's say we have a string called John over here in between this list of elements so this is also possible it will not throw any errors while we are running this code so let me just save this file and try running this code now as you can see we are getting the list of all the values 17 18 and then we are getting John and then 19 and then 14 so this is a kind of a heterogeneous list whereas when we have the same kind of data type in the list then it is called the homogeneous list now how do we access the python list element so basically this is one way in order to access the list but what if we want to access only a single element by using this print statement we have accessed all the elements over here but in case we want to access a particular element from this list then what we can do is in Python each item in a list is associated with a number so the number is known as a list index so basically all the these numbers that is the elements of the list that are present inside the list so these are associated with the indices which starts from zero so the 17 number is at the zeroth index 18 number is at the first index and so on this is at the second index third index and then so on so basically these elements can be accessed using these indices so as you can see we can access elements of an array using the index number now how do we access them so what we can do is we simply come over here I'll simply simply change this to the number 15 that was there previously and what we have to do is let's say I want to access this element that is the fourth element so what will be the index so this is zeroth index then we have one and then two and then three so this is the third index so we can access by using the variable name followed by open and close square brackets and inside those brackets we have to provide the index number that is three in this case which represents this number that is 19 so let me save this file and try running this code now as you can see we are just getting 19 over here previously we were getting the entire list when we don't provide this index number I'll save this file so as you can see all the values are getting printed but when we provide the index number let's say I want to print 18 this time which is at the index one after this index which is zero so I provide list of one over here save this file and run this code so as you can see 18 is getting displayed and this is how it is one way in order to access a particular single element inside this list by using the index number now it is also possible that we provide the negative index in Python so python allows negative indexing for its sequences the index of minus1 refers to the last item minus 2 to the second last item and so on so for now we know that the zero index is the first element over here and then the first index is the second element but what about the last element let's say we don't know the length of the list like how many elements are present inside the list and we want to get the last element over here so since the first element is at the zero index the previous index that is before 0 which is minus1 it will point to the last index of this list that is 14 over here so what if we simply do list of minus one in this case so I'll just provide minus one in this case let me save this file and try running this code as you can see we are getting 14 so basically the minus1 index will point to the last element of the list in this case let's say we want want to get the second last element so in this case we will simply provide min2 so after minus1 we are having min2 which will be the previous element of the last element so let me just save this file and try running this code now so as you can see 19 is getting displayed now and this is the way that we can also use the negative indexing as far as accessing the last elements of the list are concerned now there is another concept of slicing in Python list so in Python it is possible to access a section of items from the list using using the slicing operator which is nothing but a colon not just a single item so let's say we want to access the second and third elements inside the list so we have to use the slicing operator in this case now what is the slicing operator while providing the indices inside the open and close brackets we have to provide the indexes and separate them using the colon so what is the index of the second element it is one over here since the first element is having the zeroth index we don't want that we want to start from the first index and then we also want the second index so this time we have to provide the next number that is at the third index now so after this one that is the first index we have to provide colon and then we provide three over here so three is not included in this case please remember that whenever you are providing the ending index that element will not be included whenever you are using the slicing operator over here so the elements that will be considered in this case will be at the index one and at the index 2 which means 18 and 15 so let me save this file and try running this code now as you can see we are getting 18 and 15 only let's say you want to get all the elements starting from this 18 so this index is 18 right now and there is no end index that you want to specify over here so we simply have to remove this three and then we can simply specify one followed by the colon so this will make python interpretor to consider all the elements after the first element including the first element itself so let me just save this file now and try running this code so as you can see we are getting all the elements that is 18 15 19 and 14 starting from the first index over here so guys this is the way that we can use slicing in the python list also in order to consider all the list elements over here we need not have to specify any of the indexes if we simply provide the colon over here all the elements will be considered let me just save this file and try running this code now so as you can see all the elements are getting considered but this thing is kind of a redundant over here that's because if it's simp we provide the variable name that is list still all the elements will be considered so if we run this code once again so all the elements are being considered over here only when you want to consider the subset of this list you have to use the slicing inside the python list now let us move to the next concept how do we add the elements to a python list so there are two ways to add the elements in the python list the first way is to use the upend function which will help us in order to add a single item in the list and the second way is to use the extend end function in order to add another list to the already existing list so let us check this with the help of examples now over here let's say we already have this list of values inside the list variable and now we want to add more elements so what we will do is we will say list followed by Dot and then we have something called as append so this is a function which will take a single element and it will add to the end of this list so let's say I want to provide 25 as the age of another student so let me just save this file now and try running this code so as you can see this element that is 25 it is already added at the end of the list now and in this way we can use the upend function to add more elements inside the list now let's say we have another list over here let's say I provide a list one and the numbers I provide is 1 comma 2 comma 3 over here so three elements are there and we want to add all these elements to the original list that is list variable so what we can do is we can use the extend function in this case so we have to use this list variable which is the original list variable followed by Dot and then we have the extend function and inside the parenthesis we have to provide this argument that is list one which is another variable having the list of elements and now if we print this list it will have the updated list of values so let me just save this file and try running this code now so as you can see after this 14 1 2 3 elements are also getting added over here since we have used the extend function in this case let us move to another section can we change the list items so basically the python list are mutable meaning list are changeable and we can change items of a list by assigning new values using equal to operator so what I will do over here is I'll just remove these lines of code so I'll simply provide the original list over here so we will say original list followed by colon and then we will print the list so let me just save this file Andy running this code now we have the original list over here I'll just spell this correctly so we have the or Or List 17 18 15 19 and then 14 now let's say at the third position that is 15 we want to change this element to 10 now this is being referred to the second index over here so this is zero index then one and then second index so what we have to do is simply we have to provide list followed by inside the square brackets we will provide the index number that is two and then equal to the new value that is 10 that we want to replace it with and then again what we will do is I'll simply copy this line of code and paste this over here and then we will say updated list and let me just save this file now and try running this code so basically as you can see original list it is having 15 at the third position over here that is at the second index and the updated list is having the number 10 at the same second index over here and this is the way that we can update the list elements so since python list are mutable we can change the elements of the list as well now removing an element from the list so there are two ways either we can use the D function or else we can use the remove function as well so let's say over here we have the original list now so I'll just remove these lines of code and then we can use the deel function and Then followed by list and let's say I want to remove this fourth element that is at the index 3 which is 19 so I'll just provide list of three in this case and then what I will do is I will print the updated list once again so I'll just change this to updated list so basically we are using the de method over here and deleting the third index inside this list so let me just save this file and try running this code now so as you can see we are getting the updated list as 17 18 15 and 14 this element that is 19 it was removed already now instead of this we can also use the remove method so in that case we have to use the variable name first in the deel method that is the delete method we simply used the function name and provided the element from the list in order to remove from that list but over here we have to provide the variable name followed by Dot and then we can simply use the remove function and Then followed by the position so which position we want to remove so let's say I want to remove this element that is 18 over here so in this case we have to provide the value of the element that is present inside the list so in this case we provide 18 in the previous example that we have taken using the deel method we used the index number of the element that is present inside the list but in this case we have to use the value in order to remove it so I'll just say this file and try running this code now as you can see 18 was present in the original list but in the updated list we don't have 18 it is 17 15 19 and 14 and in this way we can remove the elements from the list as well now very important operation how do we iterate through a list so basically we can use the for Loop to iterate over the elements of a list so till now what we have seen is we have just used the list that is the variable name in order to print the elements of those list now if you notice we are getting the square brackets over here open and close square brackets within which all the elements are getting printed but let's say we don't want those square brackets and one by one we want to print all the elements at a time so what we can simply do is use the for Loop and we have seen in the previous videos as well the syntax of the for Loop we have to use the for keyword followed by let's say a temporary variable name that is item followed by the in keyword and then we have to provide the sequence at his list and then after that we have the colon and then we can have the print statement over here now in the print statement if we only provide one item that is item in this case so every time all the elements will be printed on the separate lines over here so let us just try this code so we'll just save this file and try running this code now as you can see 17 18 15 19 14 all the elements are getting printed on the separate lines what if we want all the elements to be present on the same line so what we can do is after providing comma over here we have the end parameter inside the print function and this end parameter we can have the comma as the character by which we can separate all the elements so by default this is slashing character which means the next element will be printed on the next line but if we specify this in this way all the elements will be printed on the same line so let me just save this file now and try running this code so as you can see all the elements are getting printed on the same line in the same sequence that is present inside this list so in this way we can iterate through all the elements inside the list that are present by using the fall Loop over here now another important thing how do we find the list so we have something called as python list length so in Python we use the Ln function to find the number of elements present in a list so we can have any number of elements inside the list over here so there is no limit on the number of elements that we are supposed to have inside the python list so in case if we want to find the number of elements inside the list we can simply use the length function so we can simply print print this and then we can have Ln which is a function and then we can provide the variable name of the list inside this Ln function over here so it will return us the count of the elements inside the list so let me just save this file and try running this code now as you can see five that is the count of the number of elements inside the list is present over here if we provide some more elements over here let's say I have provided five more elements inside the list let me just save this file now and try running this code so we are getting the updated count at is 10 so 10 is the number of elements set are present inside the list and that is how we can easily find the length of the list in this case by using the Ln function over here so Guys these were certain operations as far as list variable is concerned please make sure that you practice on your own and as a homework for you there is something called as a sort function which can help you in order to sort all the elements inside the list so you can practice on your own as a homework for you in order to sort the elements inside the python list and print on your own Tuple in Python Programming so guys a tuple in Python is similar to a list basically the difference between the two is that we cannot change the elements of a tle once it is assigned whereas we can change the elements of a list so previously in the examples of the list that we have seen we were able to change the elements inside the list but the same thing cannot be done with the elements at are present inside the tle so how do we create a tupple a tupple is created by placing all the items that is elements inside the parenthesis so we have this open and close parenthesis whereas in the list we were using open and close square brackets now these are supposed to be separated by commas over here the parenthesis are optional however it is a good practice to use them so a tle can have any number of items and they may be of different types that is integer float list string Etc so guys let us check this with the help of example now over here as you can see we have my tle which is the name of the variable that we have given and 1 2 3 these are the elements that is present inside the Tuple if you notice we have this open and close parenthesis inside of the square brackets and that is the difference between the list and the tupple over here so let us move to the vs code and simply we will provide tupple one as the variable name over here equal to followed by open and close parenthesis and let's say we Define five elements one to five over here so this is nothing but we have defined the tle and we can simply print this Tuple by using the variable name tle one over here so let me just save this file and try running this code now as you can see we are getting all the elements that is 1 2 3 4 5 and in this way we have easily created and printed the tupple elements over here now an important thing over here let's say you want to create a python Tuple with only one element so in this case what happens is let's say if you provide where one that is variable one over here and you provide double codes that is hello with this open and close parenthesis in this case this will be considered as a string where whereas in the variable two what you do is after this hello you provide a comma so in this case it will be considered as a tle so this is very important thing if you want to create a tupple with just a one element you have to use the comma after providing that element over here let us check this with the help of examples now over here let's say I provide where one in this case and then open and close parenthesis and then let's say we have hello over here and then I'll just copy this line of code and paste this and I'll simply provide comma after this element so what we will do is I'll just name this variable name as where to so let us now confirm the data types of both the variables so we will say print and then inside this we will use the type function in order to find the data type of where one so we provide where one over here and I'll simply copy and paste this line of code and we provide where two over here so let me just save this file now and try running this code so as you can see first one it is showing us that it is is a string and the second thing is showing us that it is a tupple now in case if we simply remove this comma from this tupple so what happens so let me just save this file and try running this code once again as you can see it has become string now both are strings right now if we provide comma over here and comma over here as well so both the variables will be turned to the tupple data type so guys this is very important if you want to have only one element inside the tupple make sure that that element is followed by a comma over here here in order to make that data type as a tupple now guys moving to next section how do we access the python tupple elements so there are multiple ways in order to access the elements over here first of all is indexing so this we have already seen previously by using the index number we can access the elements of the Tuple so let's say we have Tuple one over here and we have five elements 1 2 3 4 5 so how do we access these elements by using the indices so we simply have to provide the D one that is the variable name and Then followed by open and close square brackets this time and let's say we want to print the element that is three over here every time remember guys that the index it starts from zero so this first element that is number one it is at the index zero and then the second element that is number two it is at the index one and then the third element that is number three it is at the index two over here so we provide the number that is two which is the index number in this case so this will tell the python interpretor to access the element that is at the index number two for this variable that is tle one so over here what will happen is the index number zero is this and then index number one is this and then we have index number two which is three over here and this element should be printed so let me just save this file and try running this code now so as you can see three is getting printed similarly let's say if you want to print this number two which is at the index one in this case so we have to provide one inside this open and cl close square brackets so let me save this file and try running this code now so two is getting printed this time so guys this is one way in order to access the elements by using the indexing we also have something called as negative indexing so let's say if you don't know the number of elements that are present inside the Tuple whereas there is a way in order to find the length of the Tuple but in case you want to access the last element of this tle over here so you already know that the first element is at the index zero so let me just print that so over here we provide tle one followed by the index number that is zero in this case I'll save this file and try running this code so one is getting printed now let's say you want to print the last element but you don't know at which index it is so we have something called as negative indexing in which case before the zero index the index that is minus one it will point to the last element of this tle that is five over here so when we provide minus one in this case this element that is five should get get printed so let me just save this file and try running this code now so five is getting printed similarly if you want to get the second last element of this tle you can simply provide minus two over here so when we provide minus two and run this code so four is getting displayed which is the second last element so this is like a cycle over here when you use the negative indexing the last elements of this tle will start getting printed over here and then guys you can also use the slicing functionality as we have already seen with the list so basically let's say if you want to print the subset of this tle between 2 to 4 so what you can do is what is the index of this element that is two it is zero and then one so at the first Index this two is present so we will provide one over here followed by a colon and then what is the index of the element that we want that is four so the index is it is 0 1 2 and then this index is three but we don't want to specify three because this is excluded so so the next index which is four we have to specify that index which will be not included in our slicing operator so when we provide four over here always remember that this index on the left hand side will be considered but this index will not be considered the fourth index will not be considered but before this that is the third index will be considered while printing the statement so let me save this file and try running this code now so as you can see 2 3 and four is getting printed the last index that is four which is having the element five this will not be considered because it is not included in the slicing operator so these are some of the ways that you can use in order to access the python tupple elements over here now python tle methods there are two methods only that is count and index over here what is count so basically in order to get the number of occurrences of a particular element you can use the count method so over here while using the count function we have to use the variable name followed by Dot and then as you can see count and index these are the only two methods the other methods such as appending or removing or deleting the elements are not present that's because as I've already told you the tle inside python are not mutable which means we cannot change the elements once they are assigned over here so when we provide count we have to provide one of the elements inside that tle so let's say we want to find the occurrence of the element that is two over here in this case that means how many times this number two is occurring so let me save this file now and try running this code so as you can see the count is one over here that's because only one occurrence of number two is present let's say I provide some more occurrences over here so I provide the number two two times over here so the total count becomes three in this case over here we have two and then two more twos are present so basically the total count is three let me just run this code once again so number of twos that are present over here inside the topple is three and that is what we are getting over here and this is the main functionality of the count function now the another function that is index so if you want to get the index of a particular element you can use the index function so after this dot we have something called as index and then inside the open and close parenthesis we have to provide the element for which we want to find the index so let's say I want to find the index of this element that is number five over here so it is four basically let me just save this file and try running this code and confirm so as you can see four that is the index of this element is getting printed over here so Guys these functions you can use based on your requ requirements as far as tupple is concerned now one very important thing iterating through a tupple in Python so we can use the fall Loop to iterate over the elements of a tupple so basically we have seen this in the previous video as well so far we have printed the elements of the tupple by using the variable name in this way so let me save this file now and try running this code as you can see all the elements are getting printed but there is a problem over here we are getting this open and close parenthesis also while printing these elements what if we only want to print single element at a time so we can simply use the for Loop and iterate through all the elements over here inside the tle so we use the for keyword followed by let's say the temporary variable as the item and then we have the in keyword and then the name of the variable that is the sequence which is tle one in this case and then we simply have to print this item that is item variable now what will happen is all the items will be printed on separate lines over here because by default the end parameter of this print function is having the Slash and character so let me just save this file and I running this code now as you can see all the elements are getting printed on the new line what if we want all the elements to be present on the same line separated by comma over here so we simply have to provide comma and then there is something called as end parameter for this print function so we use that and inside the double Cotes we provide the comma over here which will be kind of a separate for all those Elements which will be printed on the terminal so let me just save this file now and try running this code so as you can see all the elements now are getting printed on the same line and they are separated with a comma if you want a space character after comma that can also be done you provide comma followed by the space character let me just save this file now and try running this code so all the elements are separated with a comma character and then a space character additionally for a better readability so guys this is another way you can use the for Loop in order to iterate through all the elements of the tle now let us understand what are the different advantages of a tuple over list in Python so we generally use tles for heterogeneous that is different data types and list for homogeneous which means similar data types so in a tle you can have the different data types as well so basically the tupple is being used for that purpose only and we cannot change the elements inside the tupple so since tles are immutable which means you cannot change a data inside the tupple once they are assigned iterating through a tupple is faster than with a list so behind the scenes what is happening is the program already knows that the tupple elements will not be changed and for this reason the tupple is little bit faster compared to the list so there is a slight performance boost over here now tles that contain immutable elements can be used as a key for a dictionary as well with a list this is not possible so inside a dictionary as you must be knowing there are key value Pairs and the elements of the tle can be considered as keys for the dictionary if you have data that doesn't change implementing it as a tle will guarantee that it remains right protected so nobody can change the elements of a tle if you want some data to be fixed whenever you are implementing the list of elements that should be present in a sequence and that must not be changed so Guys these are certain advantages of a tle over a list in Python Programming string in Python Programming so guys in computer programming a string is a sequence of characters so for example as you can see this hello word it is the string which is the sequence of characters that is h e l o so this is a string containing the sequence of these characters and we call it as a string now we use the single quotes or double quotes to represent a string in Python so basically whenever we are defining a string we use the sequence of characters which are supposed to be enclosed Within These double Cotes or else we can use the single Cotes as well so as you can see for example Str Str that is the variable name that we have taken over here followed by the equal to operator we have the string that is programming for beginners which is the name of the YouTube channel which you should definitely subscribe and this is enclosed within the two double codes over here so let us check this with the help of example now we have Str Str it is equal to inside the double codes we can provide our string that is programming for beginners over here and then simply we can print the string by using the print function so we have print followed by open and close parenthesis and then we provide this Str Str variable name name let me just save this file now and try running this code as you can see programming for beginners is getting printed now now what are the different operations how do we access string characters in Python so let's say if I only want to print this character that is p over here how can we do that so one way in order to do that is by using the indexing which means we can use the index number basically the indexes that we have seen in the list and tle in the previous videos are also applicable over here for strings as well so this letter that is p can be accessed by using the index number which starts from zero so this is the zeroth index number which defines this P character the next character that is R it is at the first index number and then the next character is at the second index number and so on so we can simply use the variable name and then inside the open and close square brackets we can provide the index number so over here after the variable name inside the open and close square brackets as you can see we we provide the index number that is zero which will point to this character that is p over here so let me just save this file and try running this code now as you can see p is getting printed over here now let's say we want this o to be printed so what is the index number for this so the first one is zeroth index and then we have first index over here and then this o is at the second index number so we provide number two that is inside the open and close square brackets let me just save this file now and try running this code so as you you can see o is getting printed and in this way if you want to access a single character from the string you can use the index number in order to access them now there is another variation we can also use the negative indexing which means the negative index numbers can also be used in order to access the last elements of the string so let's say if you want to access the last element first element is having the index number zero and the previous index number that is before the number zero we have minus1 in the number system system so minus1 will refer to the last element inside this sequence of characters which is s over here so when we provide minus one in this case inside the open and close brackets so let me just save this file and try running this code as you can see s is getting printed so minus1 is pointing to this character that is s what will be the second last character it will be Min 2 in this case so when we provide minus 2 save this file enter I running this code so as you can see this R is getting printed over here and in this way we have the negative indexing Concept in Python Programming now there is another way we can use the slicing operator in order to print the subset of the sequence of characters so let's say if we only want this programming word to be printed instead of programming for beginners that is the entire string so what we can do is so we have to mention the indices in order to print these characters only so it starts from zero and then we have 1 2 3 3 4 5 6 7 8 9 10 and then we have to take extra index number that is 11th as well because that last index number is not included whenever we are using the slicing operator so the indexes will be between 0 to 11 in this case so how do we provide that range we provide zero first that is the left hand side index followed by the colon and then we provide 11 that is the second index up to which all the characters must be taken and printed over here so so as you can see this is the slicing of the sequence of characters let me just save this file enter I running this code now as you can see programming is getting printed over here let's say we want to include the characters up to F so we have to provide the index up to O over here so basically this was the 11th index and then we have 12th and then 13 so over here what we can do is we can simply provide 13 in this case so let me just save this file now and try running this code so as you can see programming word is getting considered and then after that we have have the space and then f is also considered which is at the 12th index there is another way we can do this instead of providing this zero index we can just remove this so by default it will take from the start of the string that is all the characters starting from the zero index over here so let me just save this file and try running this code now so as you can see again we are getting the same output that is programming up to the F character over here what if we want from this o character which is at the 13th position up to the last position so what we can do is we can simply provide the 13th index number which will start the string from this particular character and Then followed by colon and there is no need to provide the last index because we want all the characters to be included so this is the slicing operator for us we have the 13 index number and then colon over here let me just save this file now and try running this code so as you can see after F we are getting o r over here and then we have the space character and then we have the beginners as well so this is the way that we can use the slicing in Python in order to get the subring from the entire string that we have already defined now guys very important python strings are immutable so in Python strings are immutable that means the characters of a string cannot be changed so let's say this first character that is p if we want to change that character so what we will do is we will provide Str Str and Then followed by zero and then instead of this P character let's say I want to provide the character Q over here and then let me just print the string once again so we will simply print the string let me just save this file and try running this code now as you can see we are getting the type error string object does not support item assignment so we cannot change any of the characters over here but there is another way to do this what we can do is simply we can copy this entire string value and paste this over here and then again instead of P we can provide Q over here but this time we have to remove this index number so this is possible because we are providing the reassignment of the string variable so let us check this we'll save this file and try running this code now as you can see we are getting Q over here and all the other characters are same so basically by immutable we mean that we cannot change a particular Single Character inside the string by using the index number for that particular character but in case if you want to reassign the entire string that can be done by using such reassignments operator now guys that is another important functionality in Python multiline strings are allowed so basically we can also create a multiline string in Python so for this we use the triple double codes or triple single codes over here so what we will do is let's say I'll just remove these lines of code and then I'll say Str Str it is equal to three * double codes over here we will use and then I will say this is first line and then on the next line we will say this is another line so this is basically the multiline string that we have defined so how do we print this simply by using using the normal way that is print function followed by the name of the string that is Str Str variable let me just save this file and try running this code as you can see the format in which we have return return the string that is the three double codes were there over here followed by on the next line we were having this is first line and then this is another line and then we were having another double codes over here so these double codes followed by space characters and then between those space characters this is another line if we don't want these space characters soon after the double codes are being mentioned we have to provide the strings over here so the start of the double codes at the same line we are having this is first line and this is another line and then we have the three double codes on that same line so let me just save this file now and try running this code so basically this is the format so whatever format we follow in this three double codes or three single codes the same format will be followed while printing those lines on the terminal now what are the python string operations basically you can compare two strings with the the equal to operator over here as you can see so let's say we have two strings over here string one it is equal to let's say we have John and then string two it is equal to let's say we have the name Peter over here so we have Peter so what we will do is simply we will print Str str1 it is equal to Str str2 so this is nothing but we are comparing two strings by using the equal to equal to operator which we have done previously as well while we were using the relational operators in order to comp compare two numbers we can compare two strings in the same way as well it will either return true or false based on whether they are equal or not so let me just save this file and try running this code now as you can see we are getting false that's because the names are different so what if we make the names same so I'll just copy this value and paste this over here now both the strings are same St str1 and Str str2 both are having the value that is John so let me just run this code now as we can see we are getting true over here that's because both the strings are same in this case now there is another operation how do we join the two or more strings so we can do so by using the plus operator so let's say we go back over here once again we provide the string to as Peter and we want to join both the strings so in this case instead of equal to equal to what we will do is we will specify the string one that is Str str1 and then plus operator and Then followed by Str str2 in this case so let me just save this file now and try running this code as you can see we are getting John Peter over here continuously there is no space character so either we can provide a space character over here or else we can have the space character inside the print function as well so we can have the double codes inside which we can have the space character and then again we have to use the plus operator in order to join these strings so let me just save this file now and try running this code so as you can see we are getting John Peter and then there is a space character in between so we can join multiple strings as well by using the plus operator over here the same plus operator will be used in order to add two numbers if these variables are numbers but in our case these variables are strings and that is why it is being used in order to join the two strings in this case now how do we iterate through a python string so basically we can iterate through a string by using the fall Loop so let us check this with the help of example now let's say we have string one over here we provide four followed by S which is the temporary variable and then we have the in keyword followed by Str str1 I'll just make this as item so that it is more use of friendly in order to understand so basically Str str1 which is having the sequence of characters one character at a time will be assigned to this item variable and the control flow will go inside this fall Loop now inside this we can simply have the item being printed so when we provide item over here inside the print function and when we save this file and try running this code as you can see all the characters that is J hn these are getting printed on separate lines how do we get them on the same line so what we can do is we can provide the end operator equal to we can simply provide the double codes and we don't have to provide anything over here if we want to separate all the characters with a comma we can provide comma over here as well so let me save this file and try running this code as you can see John is getting printed but all the characters are getting separated using the comma we can simply remove this comma over here I'll save this file and try running this code now as you can see we are getting John over here so since we have provided this end parameter with nothing but simply double codes we are getting all the characters or else when we don't provide this parameter by default the end parameter is having the Slash and character due to which all the items will be printed on the new lines there is another important thing how do we find the python string length so basically we can use the Len method to find the length of the string so let's say we have programming for beginner string over here so I'll just type programming for beginners and we want to find the length of the string that means means how many characters are present inside the string so we can simply use the Len function that is the length function in order to print the count of the characters inside the string so we can have the Ln function followed by inside the open and close parenthesis we have the variable name that is s Str over here so let me just save this file and try running this code so it is saying object of type type has no l so basically we have provided Str Str over here instead we have to provide Str str1 which is the variable name so that was the mistake so let me just save this file now and try running this code as you can see 25 we are getting that is the number of characters that are present inside the string let's say I add some more characters over here I provide one two which means I have added two more characters inside the string so that should be 27 in this case so when we just save this file now and try running this code we get 27 as the count which is the updated count of number of characters inside the string and that is how this length function will work work in order to return you one particular integer which is the count of the number of characters inside the string now guys there is another important thing string membership test so basically this we have already seen we can test if a substring exist within a string or not using the keyword in so we have already used the fall loop as well and in the membership operator we have used the in keyword in order to find a particular letter is present or not inside the string so that you can take as a homework for you so that you can practice on your own you can find find out whether the character X is present inside the string or not and if it is present then you should display true and if it is not present then you should display false comment in the comment section below what is the output of your program while using this membership operator that is in now guys very important thing there is something called as Escape sequences in Python now the escape sequence is used to escape some of the characters present inside a string so what we have done over here is while providing the string we are enclosing it using the double quotes but what if the double quotes is a part of this string let's say I want to provide a double quotes over here before beginners so as you can see after providing the double codes we are getting a red underline over here which means there is some issue so what we can do is in order to avoid this issue and to make this as a part of this string we have to use the Escape character which means we have to use a back slash character over here just before the special character so this is the way that we use the Escape character we use the back slash character over here once and then followed by our special character which is causing the issue and in this case this double quote will be the part of the string now so let me just save this file and try running this code currently we are getting the length of the string what we will do is I'll just remove this length function so that we can print the value of the string so I'll just save this file and try running this code as you can see programming for and then we are getting the double codes over here which is the part of the string and then we have the beginners over here so this is the way in case you want to escape certain characters or special characters we can use the back slash which is known as the Escape character in Python Programming now guys there is another way in order to print the string by using the python string formatting so as you can see for example let's say we have the name that is John and we have age it is equal to 25 so one way that we can print both that is name and age is by using the multiple objects inside the print statement so let us check this so we have name over here which is John right now and then let's say we have age it is equal to 25 and we want to print both that is name and age within one print function so what we will do is we will say name is followed by comma and then we provide name and then again comma and then we have double codes and then we provide end age is followed by comma and then we have age over here so what we have done is this string will be printed that is name is followed by this name value will be taken from this variable that's because we have provided it outside the double quotes over here and after providing this comma and then again there is a comma and then we have a normal string label that is end ages and then we are specifying the age so this is one way in order to print both that is name and age in the same print statement so let me just save this file now and try running this code so as you can see name is John and age is 25 over here but guys this can be confusing since we have to use multi mle commas over here as well as multiple double quotes as well so there is another way in order to print the same string so what we can do is again we can have the print function but this time what we will do is in the open and close parenthesis we provide the F character followed by single codes over here so inside the single codes we can provide the variable name that is name and age as well so in this case if we want to get the value of this name variable we have to enclose it within the Curve curly braces so these are the curly braces as you can see we have the open and close curly braces and inside this we provide name over here so if we do it in this way we provide the F character and then inside the single codes inside the curly braces we have the name over here it will print the value that is John so let me just save this file and try running this code as you can see John is getting printed which is the value of this name variable now we want to print the entire string that is we also want the labels so for this name that we have provided we can simply provide the string that is name is and Then followed by open and close braces and inside the braces it will be name variable name and then we can simply provide end age is followed by open and close braces and then we can provide the age variable name so guys this is the format we have the F character and inside the single codes as you can see we have provided the string label that is name is and Then followed by open and close curly braces inside which we provide our variable name and Then followed by end ages or any other string label that you want to Define and then we can have the variable name that is age over here inside the open and close curly braces so let me just save this file now and try running this code as you can see we have the perfect string that we wanted that his name is John and age is 25 so this is another way we can use the python string formatting by using this F character inside the print function in order to print the string in the way that we want to print so Guys these are certain things as far as strings are concerned in Python programming language sets in Python Programming so guys a set is a collection of a unique data which means that the elements in a set cannot be duplicate elements so over here you can easily create a set in the python basically in Python we create the sets by placing all the elements inside the curly braces separated by comma so guys previously we have seen that for the list we are using the open and close square brackets for the tle we use the open and close parenthesis and over here for sets we are using the open and close curly braces so we will check this with the help of examples as well a set can have any number of items and they may be of different types so as you can see it can be of the integer float tle or string data type or any other data type but a set cannot have mutable elements like list sets or dictionaries as its elements so guys this is very important you can not have another list set or a dictionary which we are going to see in the upcoming videos over here we cannot have these kinds of data types inside a particular set now let us check the creation of set with the help of example now over here so let's say I provide set one as the variable name and then we provide the equal to symbol followed by the open and close curly braces so inside these braces we have to provide the elements of the set so let's say we have the set of integers we have 1 2 3 4 and then five so guys we have five elements over here 1 to five which are the elements of this set and simply we can print all these elements inside the set by using the print function over here and then we can say set elements are and then colon and then we can have set one that is the variable name so guys let me just save this file and try running this code now so as you can see we are getting set elements are we are getting all the elements that is 1 2 3 4 5 and guys this is is the way that we can create a set in the Python Programming now guys it is very important that we cannot have the duplicate items in this set so let's say I provide some more numbers over here which are already present in this set so let's say two and three are already present I provide this two and three once again so when we do this so right now we have seven number of elements but let me just save this file now and try running this code to see how many elements get printed so as you can see only five elements are getting printed so those two elements that is two and three will will not be considered once again while printing them because we cannot have duplicate elements we can only have the unique elements inside the set and guys this is the main functionality of having the set data structure in Python Programming So based on your requirements if you don't want the duplicate elements to be present you can use the set data structure in the Python programming language now guys how do we create an empty set in the python so basically creating an empty set is a bit tricky so empty curly braces if we use then it will make a empty dictionary in Python so basically when we create a dictionary we again use the curly braces so let us check this with the help of example now over here what happens if we create the empty set so let's say we provide set one it is equal to open and close curly braces as you can see we have not provided any element and this is the empty set but let me just print the type of this variable over here so we will simply use the type function and then provide the set one as the variable name so guys what will be the type of this set one variable so let me just save this file now and try running this code as you can see it is saying that class it is a dictionary data type so this set one variable is of the data type dictionary by default when we provide the open and close curly braces how do we make it as a empty set data type so what we have to do is instead of using the open and close curly braces we have to use the set function so there is something called a set function over here as you can VSS code is suggesting us so this set function followed by the open and close parenthesis will help us to create a new empty set over here so let me just save this file now and try running this code over here what we are trying to do is again we are trying to print the type of this set one but this time it should be of the set data type so let me just run this code now so as you can see we are getting the set data type over here previously we were getting the dictionary so in order to have the empty set in Python Programming we can can use the set function over here now very important question how do we add the set items in Python so basically sets are mutable which means we can add and remove items from the set however since they are unordered indexing has no meaning so guys basically if you must have noticed there is no one order in which the set items were printed previously so let us check this once again over here we provide set one it is equal to and let's say we provide some elements that is 3 2 4 1 5 and then let me just print this set one over here so we provide set one inside the print function let me just run this code as you can see we are getting 1 2 3 4 5 this is not of the same order in which we have provided these elements inside the set so we cannot use index numbers over here as well in order to access these elements one at a time since the way in which the elements inside the set are printed are not in a particular order now guys how how do we add new elements to this set so basically we cannot access or change an element of a set using the indexing or slicing but we can use the add method to add an item to a set so let us say I want to add another element over here so basically what we will do is we will say initial set and then colon and then we provide set one and then let's say we provide set one dot we have something called as ADD over here as you can see this is a function that we can use in order to add elements inside the set so let's say we provide 10 as the number to be added to this particular set that is set one and then again we want to print that set one so I'll just copy this and paste this over here and then we have updated set over here so we have updated set and then set one being printed so let me just save this file and try running this code now so as you can see initial set it is 1 2 3 4 5 and then after adding this element we are getting the updated set as 1 2 3 4 5 and then the last element that is 10 over here which is being added by using the add method and this is the way that we can add the elements inside the set remember that the order in which they are added will not be followed while printing them so you cannot rely on the order in which the set elements will be printed on Console now guys another important thing how do we remove an element from the set so we can use the discard method to remove the specified element from a set so let us say after after adding this we want to remove the element that is three from this set so what we can do is we can provide set one and then followed by Dot and then we can have discard method in order to remove the element we need to provide the element which needs to be removed so over here we provide the number three which will be removed from the set one and then again let me just copy this line of code and paste this over here so that we can print the updated set after removing so over here we say updated set after removing three and then let me just save this file and try running this code now so as you can see we are getting 1 2 4 5 and then 10 so the element three is being removed after using the discard method over here and guys this is the way that we can remove the elements from the set now guys there is another way in order to access the elements inside the set we can iterate over a set in Python by using the fall Loop so this can be easily done by using the fall Loop over here so what I will do is I'll just clear these lines of code and then we will say for and then item in set one so this is the syntax that we use while using the fall Loop and then we can have the print statement over here guys notice that till now we were printing the elements of the set by using the set one variable and that is why we were getting the starting and the ending open and close curly braces over here but this time let's say we don't want those but we want only those numbers that is the the elements inside the set to be printed so we can easily use the for Loop and iterate through each and every item inside the set and this is the way that we can do so we provide the print statement over here and inside the item variable one at a time all the elements will be printed over here so let me just save this file now and try running this code so as you can see we are getting 1 2 3 4 5 now all these numbers are on a different line what we can do is we can use the end parameter of the print function so over here we provide the end parameter and then we simply provide the space character so that all the items are separated by the space characters over here so let me just save this file now and try running this code so as you can see we are getting 1 2 3 4 5 which are the elements of this set if you want all these numbers to be separated by commas what we can do is instead of the space character we can provide the comma and let me just save this file and try running this code once again as you can see we are getting 1 2 3 4 5 and and all the elements are being separated using the comma character now guys how do we find the number of set elements so we can use the Len method that is the length method to find the number of elements that is present inside the set so what we can do is simply we can provide the print statement over here and we can simply say that length of set is and then colon and then we can simply use the alen method and then inside this method we can provide the set one that is the variable name so let me just save this file now and try running this code so as we can see length of set is five so basically since five elements are present over here we are getting the length as five what if we provide some more elements let's say I provide six 7 and let's say I provide some more duplicate elements over here that is 1 2 and then three so over here there are total 10 elements out of which three elements are duplicate so what is the exact length of the set so let me just save this file now and try running this code so as you can see length of set is seven so even though we are having 10 items inside the set but out of those 10 items three items are duplicate items so those duplicate items will not be considered it will be considered only once and that is why we are getting the length of this set S7 now guys very important thing about the set operations we can carry out different set operations in Python Programming one is Union of two sets which can be done by using the union method or this or symbol over here we can also have the set intersection which can be implemented by using the intersection method and then we also have the difference between the two sets which means we can use the difference method or the minus symbol over here so guys let us check all these operations one at a time so over here what we will do is we will have two sets over here we will say set one it is equal to 1 2 and then three and then let's say we have set to it is equal to 3 4 and then 5 now guys let's say we want to find the Union first so what we will do is we will say Union and then we will simply say set one followed by Dot and then we have the union method followed by the parameter needs to be set two over here because that is the another set that we want to find the union of similarly we will do the intersection and difference as well so I'll just copy and paste these lines of code over here we will say intersection in this case and then we will simply change the union method to intersection over here and then over here we will say difference so difference and then inste of this Union we will say difference so guys basically what we are doing over here is these are all the set operations the union will find all the elements that are present in set one and set two and all the elements will be unique in the intersection part we will get all the elements that are common in both the sets which means three in this case and then in the difference we will find all the elements that are present in set one but not present in set two so guys let me just save this file now and try running this code to see what will be the results of all these operations so as you can see the union is giving us 1 2 3 4 5 which means all the elements that are present in set one and set two so we are having 1 2 3 in set one and then in set two the three is already printed and then it is printing four and five as well in intersection we are getting only three that's because the element three is the only element which is common in both the sets for the difference operation we are getting only one and two that's because these are the only two elements which are present in set one but not present in set two so Guys these are certain set operations that can be implemented with Python Programming apart from this there are multiple builin methods that you can use as far as sets are concerned so when we provide the variable name that is set one followed by dot as you can see these are all the methods that can be used based on your requirements dictionary in Python Programming so guys the python dictionary is an ordered collection of items it stores elements in the form of key value pairs so basically on the left hand side we have a key and on the right hand side we have the value and such key value pairs are known as dictionary in Python Programming now guys the keys are unique identifiers that are associated with each value so basically we cannot have duplicate keys in a dictionary where we can have the duplicate values in the dictionary so as you can see for example over here on left hand side we are having the keys on right hand side we are having the values so Nepal Italy and England these are certain Keys over here and they are capital that is Katmandu Rome and then London these are the values on the right hand side so how do we create a dictionary in Python we can have any variable name in this case and after the equal to symbol inside the open and close curly braces we are having the key value pad so since this is a string we are enclosing it within the double codes over here and then after the key that is Nepal we are providing a colon in this case followed by the value which is again inside the double codes and then separated by commas we have more key value pairs over here so guys this is the way that we can create the dictionary so guys let us check this with the help of examples now over here so let us say we have dict1 that is the variable name followed by equal to and then let's say we provide the same data over here so I'll just copy and paste this line so we have copied the same key value pairs over here now simply we can print this key value PIR by using the print function and Then followed by dict1 which is the variable name so let me just save this file and try running this code now as you can see we are getting all the key value pads over here being printed on the console so guys this is the way that we can create the dictionary along with the key value P that we want to store inside the dictionary now how do we add elements to to a python dictionary so we can add the elements to a dictionary using the name of the dictionary with open and close square brackets so guys over here what we will do is we will say initial dictionary so this label we have added so that we can identify that this is the initial dictionary now what we will do is we will add one more key value pair inside the same dictionary so what we have to do is we have to use this variable name that is dict1 followed by open open and close square brackets and inside this we have to provide the key so let's say the key over here we provide India as the key and then the capital of India it is Delhi so over here the value that we have to provide is Delhi in this case so what we have done is we have provided the variable name and Then followed by the open and close square brackets and inside those brackets we have to provide the key in this case it is a string and then we have equal to followed by the value for this key which is again another string and then guys what we will do is let's say we want to print this entire dictionary once again so we will print this and over here we will say updated dictionary and then again dict1 so let me just save this file and try running this code now so as you can see we have the updated dictionary as we have Nepal Italy England and then the last element that we have added just now is the key that is India and Delhi that is the capital of India as the value so guys this is the way that we can add element ments inside the dictionary in the form of key value pairs now guys how do we change the value of a dictionary so we can again use the open and close square brackets in order to change the value associated with a particular key so guys let us check this with the help of example now so over here what we will do is let's say we have added this key value pair that is for India we have the capital that is Delhi but now let us say instead of having the capital as the value we can provide any city as the value for this country so so what we can do is again we can provide the variable name that is dict1 and then for this key that is India we want to update the value so let's say this time the value that we provide is Mumbai which is a very popular city in India so we provide Mumbai over here and then again we are printing this dictionary once again so let me just save this file now and try running this code so as you can see the updated dictionary first time it is showing India that is Delhi and then the second time that is updated dictionary it is showing India and this time the value it is Mumbai in this case so guys this is the way the same way is used in order to add the key value pair and in order to update the key value pair as well we have to make sure that whatever key we want to update it is K sensitive if let's say I provide the small I over here so in this case it will add a key value pair since this India is not matching with this India that's because over here we are having the capital I and over here we are having having the small I so let me save this file now and try running this code this time we are getting the five key value pairs in this case so India Delhi and then we have the small I and then Mumbai so guys make sure that whenever you are updating the key value pairs the key of the dictionary must exactly match with the existing keys that are present in the dictionary now guys how do we access the elements from the dictionary so in Python we use the keys to access their corresponding values so let us check this with the help of examples now over here so let's say we have these three key value pairs as the original dictionary now we only want to print the value of this particular key that is Nepal over here so what we will do is we will simply have the print statement and then we will say dict1 that is the variable name followed by open and close square brackets and we simply provide this key that is Nepal over here so inside the double codes we provide Nepal over here so let me just save this file and try running this code now so as you can see we are getting the value of this key that is Nepal similarly if we provide Italy as the key so I'll just replace Nepal by Italy over here so as you can see we are getting the value as Rome because the value for this key that is Italy is Rome over here so in this way we can easily access the values of the keys that we want to print now guys how do we remove the elements from the dictionary so we use the D statement to remove an element from the dictionary so what we will do is let's say I want to print the original dictionary over here here so we will say original dictionary and then colon and then we say dict1 now guys what we will do is let's say I want to delete this key value pair that is Nepal and Katmandu so we will use delete and Then followed by dict1 and then open and close square brackets and inside this we have the double codes and we simply provide the key over here that is Nepal so this statement will help us in order to delete this this particular key that is Nepal and Katmandu over here so let me just print this dictionary once again so over here we have updated dictionary and then let me just save this file now and try running this code so as you can see original dictionary we are getting all the three key value pairs that is Nepal Italy and England over here along with their values but the updated dictionary it is giving us only two key value pairs that is Italy that is Rome and for England we are getting London so over here this key value pair that is for Nepal we are having the Katmandu value this was removed because of this particular statement that we have used in order to remove the Nepal key and its value as well now guys as far as dictionary membership test is concerned we can test if a key is in a dictionary or not using the keyword in so in keyword is used in order to check the membership test so note that the membership test is only for the keys and not for the values so guys let's say over here I'll just remove these lines of code so for this original dictionary we want to find whether the key Italy is present inside the dictionary or not so we will say print and then we can simply say Italy and then we use the in keyword followed by dict1 so guys what exactly we are doing is we are checking whether this string it is present in dict1 or not so let me just save this file and try running this code so as you can see it is showing us true over here that's because the key itally is present inside the dictionary but the same thing is not applicable when we provide one of the values inside the dictionary so let's say we provide Rome as the value over here so Rome in dict1 so let me just save this file and try running this code so as you can see it is showing us false that's because Rome is the value and it is not one of the keys that are present inside the dictionary so guys we can also use the in keyword in order to check whether a particular key is present inside the dictionary and it is only applicable for the list of keys over here now guys we can also iterate through the dictionary by using the fall Loop over here so what we can do is simply we can use the for Loop in order to print all the key value pairs so over here we have the for keyword followed by let's say we provide the key variable name and then we provide the in keyword and Then followed by the variable name that is di1 and then colon so what we will do is we will simply have the print statement and then let's say we want to print the key value pirs in the particular format so we will say key in this case and Then followed by comma and then let's say we provide Arrow over here and then after this we provide the value so how do we access the value we provide the dict1 that is the variable name and then inside the open and close square brackets we provide the key in this case so guys basically what is happening over here is all the keys that are present inside this variable one at a time it will be assigned to this key and this key we are printing on the left hand side and then we are having the hyphen and the arrow symbol and then using this key variable we are getting the value from this dictionary in this case so guys let me just save this file now and try running this code so as you can see we are getting Nepal so Katmandu is the value then for the key Italy we are getting Rome as the value and for England we are getting the London as the value so guys this is the way that we can use the fall Loop in order to iterate through all the key value pirs inside the dictionary file reading in Python Programming so guys a file is a container in computer storage devices used for storing data so when we want to read from a file we need to open it first when we are done it needs to be closed so that the resources that are tied with the file are freed so guys we are going to check this with the help of example how we can open the file in order to read the content of the file and then after that we can close the file as well so basically in Python a file operation takes place in the following order first of all we have to open the file then the next thing is we read the file content and then after reading the file content we close the file so basically the first operation that is opening the file we can use the open method to open a file so as you can see for example over here we are providing the variable name on the leftand side and then on the right hand side we have the open function and then we have the path of theun file where the file is stored and then by default it is opened in the read mode we can also use the second parameter and provide the character that is R for reading the file and in order to write into the file we use W as the character over here in this case and then guys after this we can read the file in Python by using the read method so basically this variable that we had used on the left hand side we can use the same variable over here in order to call the function that is read and this will help help us in order to read the content into the variable that is read content and then in order to close the file we can simply use the close method so guys let us check all this with the help of example now over here so let's say we have the variable name that is file one and then followed by equal to and then we use the function name that is open in order to open the file and then inside the open and close parenthesis we are going to have the path of the file that we want to open so guys over here I have the test file for which I have written some content over here so we have these four lines inside the test file so what we can do is so guys we have to copy the entire path of this directory this is very important in whichever directory your file is you have to copy the entire path of that directory and paste this into your code so that your code can access that directory and the file that you want to read so basically over here inside the double codes we have to provide the directory path and Then followed by the name of the file that we want to read so over here I'll just copy the name of the file that is the test file and paste this over here followed by txt now guys it is very important that while you're copying the directory path you will be getting this back slashes over here so you have to provide another back slash since this one back slash is acting as the Escape character so you have to provide two back slashes over here every time that you are providing the directory path so I'll just provide extra back slashes over here at every instance in this directory path so guys this is our entire path over here followed by the test file that is the file name and then the extension that is txt now guys the second step is to read this file so the first step is completed that we have opened the file now the next step is to read the content so we will say read uncore content as the variable name followed by equal to we use this file one variable that we have used in order to open the file followed by Dot and then we have the read method so this method will help us in order to read the content into this read content variable and then guys simply we can print the read content variable so over here we can say read content so let me just save this file now and try running this code so as you can see we are getting all the four lines that are present inside the test file so if I open the test file over here once again it says this is a test line in a test file so the same line is printed over here on the console this is a test line in a test file similarly we have the other three lines it is this is another test line then we have this is third line and then this is fourth line in test file so all those lines that are present inside the test file are being printed over here on the console so guys this is one of the easiest way that you can open the file in a particular directory read the content by using the read function and then you can print the content of the file by using the print function now guys after these operations are completed what you have to do is you have to close the file which is very important so as you can see when we are done with performing operations on the file we need to properly close the file now closing a file will free up the resources that were tied with the file it is done using the close method in Python so basically after printing the content what we can do is simply we can provide file one followed by Dot and then we can have the close method being called so let me just save this file now and before running this code we will have another print function over here and we will print the statement that is file is closed in order to confirm that the control flow has reached the final statement over here in our code so let me just save this file now and try running this code so as you can see all the four lines are being printed over here from the file once again and then we are also getting file is closed being printed over here and in this way we have already closed the file by using the close function as well so guys this is the way you can read the content of the file just by using these four lines of code we can easily read the entire content of any of the file that we want to read based on our requirements file writing in Python Programming so guys in Python a file operation takes place in the following order so basically first of all we have to open the file then secondly we can write into the file that we have open and the last step is to close the file so these are the operations in this order in which we have to follow while writing the content into the file now there are two things we need to remember while writing to a file so first of all if we try to open a file that doesn't exist so a new file will be created in this case so guys we are going to check this with the help of example as well and in the second case if a file already exist then its content is erased and new content is added to the file again so Guys these are the two important things that you should know while writing into the file if the file is not already present then a new file will be created and if the file is already present then the existing content will be removed and the new content will be added into the file so guys the first operation is opening the file over here in which case we can use the open method to open the file and this is the example we have the variable on the left hand side and then we have the open method followed by the name of the file over here along with the entire path if it is present in some other directory and Then followed by the second parameter that is W which stands for the right mode so guys let us check this with the help of example now over here so what we will do is we will say file one which is the variable name followed by equal to and then we have the open method in this case so we have to provide the name of the file along with the directory path inside the parenthesis and the double codes over here so what we will do is we are going to use this directory over here in order to create a new file and write the content into the file so guys over here there are only two files that is Python tutorial and test file we are going to create a third file that is output.txt in which we are going to write the content by using the code over here so basically I'm going to paste the entire directory path and in order to avoid any errors I'll just use the double back slashes over here since these are the Escape characters so we provide the double back slashes and then at the end we have to provide the name of the file so I'll simply provide output txt in this case and then guys the second parameter needs to be the writing mode so over here inside the double quotes we can say w which means we are opening the file in the right mode in this case now guys we have completed the first step now what is the next step writing into the file so basically writing in a file in a python so after we open a file we use the write method to write the content in the file and this is the way as you can see in this example we have the variable name that is file one followed by Dot and then we have the write method and then the content that we want to write into the file so guys basically what we will do is on the second line over here we will say file one followed by Dot and then we have the write method this write method can be used in order to write the content into the file and it takes certain parameters the parameters will be the string or the integer numbers that you want to print or store inside the file so guys let's say I want to provide this is first line in output file so guys this is the content that we want to write into the file and this is the way that we can use the write function in order to write the content into the file and it takes the parameter as the string which we want to store inside the file now after writing what we have to do is we have to close the file so when we are done with performing operations on the file we need to properly close the file closing a file will free up the resources that tied with the file it is done using the close method in Python so as you can see in this example we have file 1. close so over here we can simply provide file 1. close in this case and then open and close parenthesis it doesn't take any parameters over here so guys let me just save this file now before running this code I'll show you the directory once again we have only two files over here that is Python tutorial and test file we are going to have a third file over here that is the output .txt that will be created after execution of this code so before running this code what I will do is I'll have the print statement so that we get the confirmation that the code is executed so we will say file created successfully so this is the statement that will be printed after all the lines of code are executed so guys let me just save this file now and try running this code so as you can see we are getting file created successfully and if we go inside the directory now as you can see we are getting the third file over here that is the output in this case so if we open this file as you can see this is first line in output file and this is what we have printed by using our program this is first line in output file the same statement is being printed over here it is being stored in our output file and guys this is the way that we have created a new file by using the python code in a particular directory that we wanted and also return the content into the file by using the two methods that is first of all we have used the open function in order to open the file in the right mode and then we have used the right function in order to write the content into the file now guys let us say we have another scenario in the same file we want to update the first line to this is first line and I'll just remove this in output file content over here so we have the short message that is this is first line and then what I will do is we have another statement so again we will have the file 1. write and then we can say this is second line in this case so guys we are having the two lines over here now and this will act as a kind of update now that's because we already have this output.txt file in this directory and now what we are doing is simply we are opening it once again and these lines will be stored in the file and guys remember that while you are opening the existing file what we already saw is the content is erased and the new content is added to the file so basically these two lines will be printed inside the output.txt file and now what we will do is for this print function we will say file updated successfully so guys let me just save this file now before running this code I'll show you that file once again over here we have the output file I'll just open this file we are having this is first line in a output file so let me just close this now and what we will do is we will run this code so as you can see file updated successfully we are getting this message we'll go to the directory to check what is the content so as you can see both the statements are getting printed over here this is first line and Then followed by this is second line now guys what happened is both the lines have continued on the same line but we can have them on the separate lines as well so what we can do is in our code we can simply provide the slashing character at the end of the first line over here so that the control flow goes to the next line while printing this statement that is this is second line so guys let me just save this file and try running this code now once again so it says file updated successfully we come back over here in the directory we open the output file now as you can see this is first line and then we have on the other line This is second line over here so guys in this way we can easily write the content in the file we can also have the multiple lines of content being stored in the file that we opened by using the Python programming language guys this concept of reading and writing the files are very important as far as your project requirements are concerned so please make sure that you practice on your own so that on different inputs you get different output apart from this can we use the with open syntax in order to write a file so you can try this as a homework for you you can watch my previous video as well in which I have explained you how we can use the with open syntax in order to read the file and in which case we don't have to close the file that's because it is automatically handled by this with open Syntax for us so please read this as a homework for you and comment in the comment section below whether you were able to use the with open syntax in order to write into the file exceptions in Python Programming so guys an exception is an unexpected event that occurs during the program execution so let's say for example if we have this divide by zero variable and then we do the assignment in such a way that we divide this number that is five by 0 then we get divide by 0 exception that's because this is a runtime exception and we cannot divide any number by zero so the above code causes an exception as it is not possible to divide a number by zero errors that occur at runtime after passing the syntax test are called exceptions or logical errors so guys basically there will be many exceptions that you will come across when you are going to write python programs and these exceptions are going to be the runtime exceptions after passing the syntax test that we have already seen in our vs code editor so basically these exceptions occur when we try to open a file for reading that does not exist that is file not found error so basically this is one of the exceptions in the Python programming language in which case if let's say you are trying to open a file which is not present in the directory then we will have file not found error over here then if we try to divide a number by zero then we will get zero division error and then again if we try to import a module that does not exist then we are going to get the import error and so on so basically there are many builtin exceptions that we can see by using this print statement inside the directory we have this locals and then we specify this builtins in order to get the list of exceptions that is already built in in the Python programming language so this we are going to check with the help of example as well what we are going to do is we are going to see how the exception occurs in the Python program so over here let's say we have the variable that is number over here and we have the number that is five divided by 0 so in this case we are dividing a number by zero syntactically this is correct over here vs code will not throw any error but during the run time we will get the error which we call it as the exception so over here when we print this number so we say value of number is followed by colon and then let's say we provide this number variable so let me just save this file now and try running this code so as you can see we are getting this Z Z division error division by zero which is not possible we cannot divide any number by zero now let me show you another exception let's say we are going to open a file in this particular directory and the file name is test one which doesn't occur inside this directory so let me just copy this directory path and we will open that file which is test one which is not present so over here we provide the variable name is file one it is equal to we say open and then with this we have the parameter that is the directory path we have just copied over here we will just Escape these back slash characters so that we don't get any error over here for the back slashes and then at the end what we are going to do is after this we are going to provide test 1.txt now this file name as I have showed you over here it is not present test one is not present over here so we are trying to open that by using this test 1.txt file name so now what we will do is simply we will save this file enter our running this code now so as you can see file not found error is being displayed no such file or directory and then this file name is being mentioned over here what if we provide the correct file name let's say I provide this test file as the name of the file so I'll just copy this file name and paste this over here at the end instead of test one so I'll just paste this over here and then let me just save this file now and I running this code so now as you can see nothing happens we are not printing anything but there is no exception that is being printed over here on on the terminal that's because this particular file name is actually present and hence there is no file not found error that is being displayed over here like how we have seen previously with the test 1.txt file so Guys these are certain exceptions that might occur when you are going to work with the python projects and such exceptions are inevitable we cannot avoid them but we can handle them so we are going to see exception handling in the upcoming videos as well how we are going to handle them but it is very important for you to know that these exceptions might occur when you're going to work with the Python programming language now guys let us see the list of all the builtin exceptions that are present inside the Python programming language so I'll just copy this line of code and then we'll paste this over here so as you can see this is a print statement and inside this we have the DI function and inside that we also have the locals function and then we provide the builtins attribute over here so let me just save this file now and try running this code as you can see we have got the list of all the exceptions that are present inside the Python programming language so there are multiple errors that might occur which includes arithmetic error then we have assertion error attribute error base exception so there are many errors that you can see over here file not found error this is one of the exceptions that we have just checked and then we also have this zero division error which we just saw when we divide any number by zero so guys there are multiple exceptions that might occur which are already built in inside the Python programming language and you can prce prce on your own to see which exception occurs on which particular input exception handling with try accept block so guys basically it is important to handle exceptions that we have already seen in Python we use the try accept Block in order to handle the exception and this is the syntax in order to handle the exceptions in Python so basically first of all we have the try keyword followed by the colon and then we have the code that may cause the exception for example we can have a number being divided by zero in which case Zero division error might occur which is the exception and not only the zero division exception but if any exception that occurs inside this Tri block we can have the except block just following this Tri Block in order to catch that exception so basically inside this accept block we have the code in order to run when the exception occurs so guys this we are going to check with the help of examples now so over here in the vs code what we will do is let's say we want want to divide a number by zero so we want to provide that code inside the tri block so we have this try keyword followed by the colon and then over here what we will do is we will say number variable it is equal to 10 / 0 so guys if we try to run this code over here 10 divided 0 for which the zero division error will occur which is one of the exceptions in the Python Programming so what we have to do is we have to catch that exception inside the except block so here what we have to do is we have to provide the accept keyword followed by the colon and then we can have the code in order to handle that exceptions over here we can simply provide the print statement and then we can say number cannot be divided by zero over here so guys this is the code that we are going to execute if the number is getting divided by0 and the zero division error is occurring so let me just save this file now and try running this code so as you you can see number cannot be divided by zero this line of statement is getting executed over here and this is the line that is getting printed now guys what would have happened if we don't have this try and accept block so let us just comment out these blocks over here so instead of this we are just having number it is equal to 10 / 0 and then let me just comment out this line as well so number is equal to 10 / by zero only this line of code is there let me just save this file and try running this code as you can see we are getting zero division error division by zero and this is the exception that we are getting on the terminal so over here since we have not properly handled this exception this is the way that we are getting the output but we can have the proper output in this way like we can have a particular statement being printed by using this try and accept block so over here we have just provided the try block and after this we have provided the accept block as well we have provided a beautiful statement that is a user fry statement with which says number cannot be divided by 0er and when we just save this file and try running this code now it says number cannot be divided by 0 if the exception is occurring over here inside the tri block now guys let's say if there is no exception occurring inside the tri block so still the print statement will be executed let us check that so over here instead of 10 / 0 we will say 10 / 2 in which case the answer will be five and that will be stored in this number variable and there is no exception that is occurring over here on this line of code so let me just save this file now what we will do is as a confirmation we will come out of this try and accept blocks and over here we will say end of code so we can just confirm that this is the line that is getting executed at the end of the code so over here let me just save this file enter I running this code now as you can see end of code is getting displayed now that is because there is no zero division error that is occurring inside the tri block that is because we have changed the expression from 10 / 0 to 10 / 2 now guys there is another thing that you can do catching the specific exceptions in Python so as you can see this is the example over here we have the tri block and then let's say we have the variable name as even numbers and this is the python list as you can see we have 2 4 6 8 which is the list of numbers all are even numbers and what we are trying to do is we are going to print the even numbers with the index five over here but guys as you can see this is the index zero then we have index one then we have index two and then three so three is the final index the total length of the list is four and three is the final index that we can access but we are trying to access the index that is five so basically we should get the index out of bound error over here but we can also specify the different exceptions that we have seen so far so basically while providing the accept keyword we can provide the zero division error over here which will say denominator cannot be zero and then we we also have the accept keyword followed by the index error so in this case since we are having the multiple accept logs it depends on the control flow the control flow will check that which type of exception is occurring and based on that exception it will try to match that exception is this exception related to zero division error no in this case so is it matching with the index error yes since it is related to the index that we are trying to access which is not possible so it will print this statement that is index out of bound so let us check this block of code over here I'll just copy this and paste this in the VSS code since I'm little bit lazy in order to type all this code once again so over here let me just save this file and try running this code now as you can see it says index out of bound that's because the exception that is matching inside this Tri block is the index error and this is the print statement that we are supposed to print if there is an index error that is occurring now guys let's say you want to print this denominator cannot be zero statement so what we have to do is we have to make sure that inside the tri block there is a divide by0 expression so what we will do is over here I'll just remove these lines of code and we will simply say number it is equal to 10 / 0 so in this case divide by zero expression is occuring and that is why we will get the zero division error and in this case we should get this statement that is denominator cannot be zero so let me just save this file now and try running this code as you can see denominator cannot be zero statement is getting printed so guys it depends on you you can have the specific exceptions being specified over here and each exception will be handled differently this is just a print statement that we have included over here you can have any code inside these except blocks that you want to use based on your requirements of the project but guys remember that whatever matching exceptions that is occurring inside the tri block the control flow will try to match with those exceptions one at a time and once it matches with a particular accept block it will try to execute those lines of code inside that block now guys let us move to another task over here python try with lse Clause so basically in some situations we might want to run a certain block of code if the code block inside try runs without any errors so for these cases you can use the optional else keyword with the try statement so guys what happens is sometimes there will be no errors that are occurring over here I'll just remove these lines of code so I'll just keep one accept block over here and I'll just remove this exception as well that is zero division error so what we are doing over here is denominator cannot be zero I'll just save this file and try running this code so this denominator cannot be zero is getting printed over here but guys what if this denominator is not zero let's say if I provide the denominator as two so in this case this statement will not get printed that's because there is no exception that is occurring and if there is no exception occurring no code in the accept block over here will get get executed but what if we want to execute some line of code so over here we can simply provide the else part so basically what happens is let's say inside the tri block if we don't have any exception that is occurring so no block of code that is inside the accept block will get executed but let's say in the end if we have this else block so whatever code we provide over here it will get executed only when there is no exception that is occurring over here inside the tri block so over here what we will do is we will say print we will simply say inside else block so guys this is the code let me just save this file now and try running this code as you can see there is no denominator cannot be zero that is getting printed but over here we are getting inside lse block that's because since there is no exception that is occurring the control flow is not going inside the except block but it sees that we have the else block over here so it executes those lines of code inside the lse block now guys what if there is an except ction that is occurring so let's say if we provide this s 10 / 0 as the expression so let me just save this file now this line should get printed over here but whether this lse part will get executed let us check that so let me just run this code once again as you can see denominator cannot be zero is getting printed but the code in the lse part is not getting printed so that's because since the exception has occurred we are getting into the accept block but not into the else block so guys this is very important in case the except block is not getting executed we can have the else Block in order to execute some lines of code that you want to execute now let us move to another task over here we have something called as python try finally so guys this is another important concept as far as exception handling in Python is concerned so basically in Python the finally block is always executed no matter whether there is an exception or not so the finally block is optional and for each Tri block there can be only one final block so guys what we will do is basically the understanding behind the finally block is irrespective of whether there is an exception that is occuring or not the code in the finally block will be executed so over here we will simply have the finally keyword followed by the colon and then we will say inside finally blog so over here we will simply have double codes and inside this we will say inside finally block so guys first of all we will check when there is an except that is occurring this line of code will get printed and we will not go inside the lse part but the control flow will go inside this finally block over here so let me just save this file now and try running this code so as you can see denominator cannot be zero which is this line of statement which is getting printed and then it is not going in the lse part but it is going in the finally part so it says inside finally blog so over here exception has occurred and the control flow is going in the finally block now let us say there is no exception that is occurring we say 10 / 5 over here so let me just save this file now and try running this code it says inside L's block so basically there is no exception that is occurring so the control flow is not going inside this except block but it is going inside the else block so over here as I have told you if the control flow doesn't go inside the accept block and if there is a else block basically this line of code will get executed and then at the end we have the finally block which is getting executed as you can see inside finally block so irrespective whether there is an exception that is occurring or not inside the tri block the finally block will be executed every time now guys where this thing is important basically let's say if you have the database connection or if you have file opened so you can close that file or close that database connection inside the finally block over here after carrying out your operations in the tri block which might have certain exceptions that might occur during the run time so guys during such instances the fin finally block becomes very important in order to execute those lines of code irrespective whether that was an exception that has occurred inside the tri block or not object oriented programming in Python so guys we are going to check the classes and objects with the help of examples python is a versatile programming language that supports various programming Styles including objectoriented programming through the use of objects and classes which we are going to see with the help of examples as well now in object is any entity that has attributes and behaviors so for example a parrot is an object and it has multiple attributes as you can see there are multiple attributes that can be present which is name then we have age color and so on apart from that it also has certain Behavior such as whether it can dance or not so dancing is one of the behavior whether it can sing or not so singing is another Behavior now I'm not sure whether a parrot can really dance or not but these are certain behaviors that we can consider in order to understand classes and objects now guys similarly a class is a blueprint for that object so basically these objects are having the attributes and behaviors and the values will be stored in these objects but the blueprint will be present inside the class so basically this class can be treated as a template which has certain attributes and behaviors being defined over here and we can create multiple objects related to that class so we are going to check with the help of example how do we create a class parot with the attributes as name and age so let us move to the VSS code over here the very first thing that we have to create is the class so basically we have to provide the class keyword followed by the name of the class so let's say the parot is the name of the class over here and then we have a colon and then we can have different attributes so one of the attributes is name over here we will assign it with a empty string and then we have age as well we will assign it as zero over here as the initial value now Guys these are the two attributes that we have defined for this class that is parro now we can create different objects out of this class now this class is acting as a blueprint or we can say as a template in order to create multiple objects so we will come out of this class and what we will do is we will create the objects for this class so let's say we have parot one followed by equal to operator and then we can simply provide the name of the class that is parot followed by the open and close parenthesis so this is the way that we can initially an object for this class that is parent and then we can use this object in order to initialize these attributes that is name and age so over here what we will do is we will use this parot one object followed by Dot and as you can see we are getting this name and age being Auto suggested by the VSS code that's because we have already defined these attributes inside this blueprint that is class parot so over here we are going to provide the name as the name of the parrot one object so let's say we provide the name as blue over here and then let's say we also want to provide the age of this parrot object so again we will provide parot one followed by Dot and then we have the age attribute let's say it is 2 years old so we have two as the parrot's age now guys let's say we want to create another object with another name and age so again we will copy these lines of code and paste this over here what I will do is instead of parot 1 we will say parot 2 because this is another object so this this is the second object that we are creating by using this parrot class and over here again we will say parot 2. name and parot 2. AG so let's say the name of the parot 2 is Vu and its age is five over here so 5 years so guys over here we have created two objects for this class that is parro similarly we can create any number of objects that we want it's very important to note that while creating the objects we provide this variable name on the left hand side and on the right hand side we provide the name of the class followed by the open and close parenthesis and then we can call the different attributes of that class in order to initialize them now guys after these objects are being initialized with their names and age we can simply print them on the console so what we can do is we can have the print statement with the formatting being enabled so over here inside the print statement we can have the F followed by the double codes and then what we can do is open and close curly braces inside this we can have the parent one do name over here is and Then followed by curly braces parot 1. Ag and then we can have ear B so guys basically what is happening over here is inside the open and close curly braces we can provide the variable names in order to get their values being printed inside the print statement so this parot 1. name will give us the value of this variable that is blue over here and then followed by is and then again we will get parot 1. AG which which is two in this case so blue is 2 years old so this is a statement that should get printed and then similarly we can copy this line of code and paste this over here and instead of parot one we can simply say parot 2 so we have parot 2. name and then parro 2. AG so guys let me just save this file now and try running this code as you can see blue is 2 years old this is what is getting printed by using the first print statement and over here again we are getting Vu is 5 years old so this is the second print statement that is helping us in order to print this particular statement so guys this is the way that we can easily create a class in this case we have created the parot class and we have two attributes that is name and age you can have any number of attributes for the class based on your requirements and apart from that while creating the objects you can have the values for those attributes based on those particular individual objects and then you can call those attributes by using the objects that you have just initialized by using this St statement that is the object on the left hand side followed by equal to operator and then we have the class name followed by the open and close parenthesis this is called instantiating of the object or we can also call it as initializing an object in Python Programming inheritance in Python Programming so guys inheritance is a way of creating a new class for using details of an existing class so this we are going to check with the help of examples as well the newly formed class is a derived class which is also called as a child class and similarly the existing class is a base class or the parent class so guys what we are doing over here is we are already creating a parent class that is also called as a base class over here and then we also create a child class for which the attributes are derived from the parent classroom here and this is what is called as The Inheritance now what will be inherited all the attributes provided that they are public along with the methods will be inherited by the child class so guys let us check python inheritance with the help of example now over here so let us switch to the vs code first of all we will create the parent class so let us say we have the class that is called as animal over here and inside this animal class we will Define two functions that is eat and sleep so we will have DF keyword followed by eat that is function one and then inside the parenthesis we are going to have the parameter that is self always remember guys whenever we are calling the function inside the class it is going to take a single parameter which is going to be the object by default so we need to catch that object with any name as a parameter over here so we have given the name of this parameter as over here so that we can identify that this is the object and then we can use this object as well in order to access its attributes and inside this eat function we are going to have a simple print statement and we will say I can eat so guys this is a statement that is going to be printed when we call the eat function using the animal object and then similarly we will have the Sleep Method as well so we have DF keyword followed by Sleep Method and then again we will have the parameter as the self which will be passed by default and then inside this again we are going to have the print statement and we can say I can sleep so Guys these are two methods or functions that we have defined inside the parent class that is the animal class now guys how do we inherit these methods to another class so let's say we have another class over here which will be a child class of the animal class CL so we are going to have another class and let's say the name of the class is dog over here and then in order to have its attributes and functions of the super class that is the animal after this name of the class that is dog we have to provide open and close parenthesis and inside this parenthesis we have to provide the name of the super class that is animal in this case so this particular class that is animal we want to inherit its attributes and functions inside the child class that is dog so this is the way that we inherit the super class and now we can have a colon over here and then we can have the attributes and the functions of this class that is dog class separately so over here we are going to have the DF keyword followed by let's say I'm simply going to have the display method over here and it is going to take one parameter that is self and then we are simply going to print that we are inside doc class so this particular statement will be printed whenever we are going to call this display method over here so guys this is the way that python inheritance Works what I will do is I'll just zoom out little bit so that you can see the entire code at once so over here we have created the super class that is the animal class and then we are creating another class that is called as the child class and after the name of the child class we are providing the name of the super class over here that is the parent class inside the open and close parenthesis and what this will do is the eat and sleep methods will be now available inside the dog class as well so guys why this is important so let us come out of this class now and what we will do is let us create the object of this class that is the dog class so what I will do over here is we will create dog one that is the object of the dog class followed by equal to and then the name of the class that is dog over here so we have created one object of the dog class now guys ideally we have seen that we can call the display method which belongs to the dog class so we can do that over here so I'm going to call the dog one object followed by Dot and then we have the display method so after this we are going to have the open and close parenthesis let me just save this file first and try running this code now so as you can see we are getting we are inside dog class which means this statement is getting printed now guys do we have any other method apart from this display method yes we do have and those are eat and sleep methods why so because we have inherited the methods from the animal class by using the python inheritance so basically we can use this object name that is dog one in order to call eat and sleep methods over here so if we call both the methods so I'll say dog one followed by Dot and then as you can see vs code is suggesting us this eat method as well so we have eat followed by open and close parenthesis and then again we will call the dog one object followed by Dot and then Sleep Method is also being suggested by the vs code so we are going to call both the methods over here so let me just save this file now and try running this code so as you can see we are getting all the three statements that is we are inside dog class I can eat and I can sleep which are the statements that are being printed by using these methods respectively so guys this is the power of python inheritance we can use the different attributes and the methods that were defined in a super class inside the subass by using the object of the child class over here which is also called as the subass over here guys it is very important to note that whenever we are defining the methods inside the class we need to provide one parameter over here which is going to be the object that will be passed so behind the scenes what is happening over here is when we call dog 1. display over here the dog one object is being passed with this display method even though we are not providing any parameter over here but behind the scenes the object is being passed over here and it needs to be caught by this particular method what happens if we don't provide this parameter let us check this so I'll just remove this self keyword over here and I'll just save this file now over here we are not receiving any parameter as we can see so let me just run this code now so as you can see type error dog. display takes zero positional arguments but one was given so basically behind the scenes this dog one object is being passed and we need to have a parameter over here while defining the function and that is the reason why we had given this self parameter name in order to identify that this is the object of this particular class that is dog so let me just save this file now and try running this code once again so as you can see there are no more errors that are getting displayed and all the three statements are getting displayed over here now guys what are the uses of inheritance so as you can see since a child class can inherit all the functionalities of the parents class this allows code reusability so as you can see over here we need not have to provide the eat and sleep methods once again inside the dog class and we were able to access both these methods by using the object of the dog class without actually providing the definition of those methods over here once a functionality is developed you can simply inherit it no need to reinvent the wheel this allows for cleaner code and easier to maintain now since you can also add your own functionalities in the child class you can inherit only the useful functionalities and Define other required features so guys based on your requirement it depends on you which class you want to inherit and create the child classes and the parent class classes over here based on your project requirements Constructor in Python Programming now guys a python Constructor is a function inside a class that helps us to initialize certain attributes of a class so far we have seen creating the class attributes and the functions and while initializing the attributes of the classes object we use the object name followed by the dot and then the attribute name but is there a better way in order to initialize those attributes inside the class yes it is so we have something called as double * underscore followed by in it and then again double * underscore followed by open and close parenthesis which is a Constructor function that is called whenever a new object of that class is instantiated so guys let us check this with the help of example now so let us move to the vs code what we will do is we will create a class that is called as the parot class over here and we will Define two attributes so over here we have the name which is of the string data type so let's say we have the empty string initial and then let's say we have the age attribute which is defined as zero over here which is the integer so guys what we will do is let us say we want to create the object of this class so what we have to do is let's say we provide the object name as parot 1 followed by equal to operator and then we have the name of the class that is parent followed by open and close parenthesis now guys so far what we had done is in order to initialize both these attributes we were calling this object name followed by Dot and then the name of the attribute so let us do that first so we are going to use the parot one object over here followed by Dot and then let's say the name of the parrot it is blue over here so we provide the name of the parrot and then we also provide the age of the parrot so let's say parrot 1. AG it is equal to 2 years old and then we can simply print the name and age of this parrot so let us say we provide the print method over here and we provide the parrot one object so parrot one followed by Dot and then we have name is and then again we want to get the age so parot 1 do age and then we have years old so over here blue is 2 years old will be displayed so let us save this file now and try running this code so as you can see blue is 2 years old so guys this is the conventional way that we had seen so far in order to instantiate an object of the class and also assign the values to the attributes of that class so is there a better way in order to assign these values to these attributes yes we can do so by using the Constructor so what we can do is we can simply remove these two lines of code over here so I'll just remove them and then guys inside this class we are going to have the innit method which is the Constructor so over here we are going to have the DF keyword followed by double * underscore and then we have the init so as you can see vs code is suggesting us this method which we are going to use so in it and it is going to take one parameter by by default as I have already told you previously whenever we are going to call any method inside the class the object that is used in order to call that method is also passed by default behind the scenes so this self parameter represents the object of this parot class over here I'll just remove this part and what we are going to do is we are going to take both these attributes that is name and age as the parameters so over here after the self we are going to have comma and then we are going to have name one so guys I'm naming this as name one so that you don't get confused between this name and this name one so this name one will be passed as the parameter when this Constructor is being called over here and then followed by comma we also have age one and then what we can do is for this self that is the object followed by dot we can have name it is equal to name one over here and then again we can have the self followed by Dot and then age it is equal to H 1 so what we are simply doing over here here is the name and age attributes of this object the object is being represented by self and then self. name it will be assigned with the value of this name one that is being passed same thing for the age as well the self. age the value will be passed by using this age one parameter over here and both these values will be assigned to name and age attributes now guys when exactly this Constructor is being called so basically whenever you are going to create an object and call this class over here that is the parrot class the Constructor will be called so while instantiating this object we also need to pass the name and age for this particular instance of the class so what we will do is let's say we take the same name that is blue over here so we provide the first parameter is the name of the parot followed by comma and then we provide the age that is 2 years old which is the second parameter so guys when the control flow comes over here it sees that the class is being called with these two parameters and we also have the Constructor so basically this parro one will be assigned to this parameter that is self and then this name and age will be assigned to this name one and age one and this name and age will be assigned those values respectively and then we can simply have this print statement in order to print the same statement that we had seen previously as well so let me just save this file now and try running this code so as you can see we are getting the same statement that is blue is 2 years old that's because we have provided the same name and the same age let's say we provide a different name over here so let's say we provide Wu and it is 5 years old so let me just save this file now and try running this code as you can see who is 5 years old is getting displayed over here so guys in this way what we have done is while instantiating the object we are passing the values or the attributes that are present inside that class for which the values are getting assigned now guys another important functionality of this Constructor is we can also remove these attributes that are being declared so there is no need of declaring these attributes over here so I'll just remove these lines of code over here and what exactly is happening is while this Constructor is being called the interpretor comes to know that this name and age are the attributes of this class that is the parot class over here and it assigns the values that are being passed to name one and age one so to make it more simple let us say we name this parrot as first parrot over here for which the age is 2 years old and let's say I provide another parrot so I'll just copy this line of code and paste this over here and then I provide this as parot 2 and then we can say second parrot over here which is 5 years old so we'll say 5 years old and then we will print both the parrots over here inside the print statement I'll just copy these lines of code and paste this over here and then we can say parot 2. name and then again over here parot 2. AG so let me just save this file now and try running this code so as you can see first parot is 2 years old and second parot is 5 years old both the state St ments are getting displayed over here so guys this is the way that you can Define The Constructor inside the class by using the underscore uncore init method and Then followed by the self that is being passed automatically as one of the parameters and then you can have any number of parameters being passed over here inside the Constructor which can be used as the values for the attributes of the class that you have defined and those values need to be passed whenever you are creating a new object for that class encapsulation in Python program in so guys encapsulation is one of the key features in objectoriented programming because encapsulation refers to the bundling of attributes and methods inside a single class so we have seen so far the various attributes and methods that we have been creating inside the class that functionality of the Python Programming is called encapsulation now it prevents outer classes from accessing and changing attributes and methods of a class so far we have seen that all the attributes and methods were public in nature but in this case we are going to create some private attributes which cannot be directly accessed outside the class so this also helps us to achieve data hiding over here now in Python we denote private attributes using the underscore as the prefix either we can have the single underscore or the double underscore so let us check this with the help of example now over here as you can see in this example we have the class computer and then we also have the Constructor that is in it followed by the self which is the parameter for that object that is being passed and then self. Max price so as you can see over here we have the prefix that is double underscore followed by Max price so this is one of the attributes of this computer class over here and we are providing the value of 900 to this Max price over here inside the Constructor now apart from this Constructor we have more couple of functions inside this class as you can see we have the sell function over here which simply prints the selling pric is the self for followed by Dot and then the max price so basically this statement will help us in order to print this value that is the max price value of the computer and then we have another method that is set max price which takes the object that is using the self and then it also takes the price over here so in case you want to set another Max price for this computer you can use this set max price function what it will do is it will simply update the value of the max price of the computer as you can see with this particular statement so guys let us check this with the help of example now what I will do is I'll simply copy these lines of code since I'm little bit lazy in order to type them again so we are going to paste it inside the vs code so over here what we are going to do is we are going to print the max price of the computer so first of all we are going to create the object that is comp one over here followed by equal to and then we have the computer class name so basically since a Constructor is not taking any other parameter apart from this self which is the object itself so we need not have to provide any parameter over here while instantiating this object that is comp one now what we will do is simply we will call the cell function over here that is this particular function so we can use the comp one object followed by Dot and then we have the cell function so after this open and close parenthesis so let me just save this file now and try running this code so basically this print statement should get executed and it should be displayed on the terminal so I'll just run this code now as you can see selling price is 900 so what exactly happened is when the control Flow came over here that is comp one it is equal to computer The Constructor of this class that is the init method was called and inside this what we have done is this private attribute so guys basically this double uncore denotes that this is the private attribute of the computer class so basically this private attribute was initialized inside the Constructor and a value of 900 was being assigned to this particular attribute and then what we did is when the control Flow came over here that is while calling the cell function basically this print statement was executed so selling price it is equal to this self. Max price got printed over here which is 900 right now now guys let us do another thing what we will do is we will try to access this private attribute from outside of this class so over here we will call comp one once again followed by Dot and then we can call this private attribute that is the max price so as you you can see this Max price is getting suggested by the vs code so we will call this Max price and what we will do is we will try to assign another value that is 1,000 over here to this Max price and then again let us say we want to call this print statement so again we will call this sell method over here so I'll just copy this line of code and paste this over here let me just save this file now and try running this code so as you can see selling price 900 this is a statement that was printed by calling the first sell method and then the the second time the sell method was called again the selling price was equal to 900 so guys why so that's because this Max price is the private attribute and we directly cannot access this attribute by using this object we need to have another method inside the computer class in order to assign another value to the private attribute and that is why we have this method that is the set max price along with the parameter price which it is going to take in order to replace the existing Max price over here so what we can do is we are going to call the comp one object once again followed by Dot and this time instead of directly accessing this Max price we are going to call this set max price over here so set max price and it is expecting two parameters the first parameter is the self which is going to be passed by default which is going to be the comp one object and then the second parameter is the price which we are going to pass to this method so again what we will do is simply we are going to provide this th000 price that we try to assign to the max price directly over here so set max price and then again let's say we want to print the selling price over here so again we are going to call the sell method once again so comp 1. sell so over here the only difference is we are calling the method that is the set max price and we are passing the value of the new Max price over here which is going to be passed to this price and then the max price value will be the updated price that we have just said so guys let me just save this file now and try running this code so as you can see selling price 900 and then selling price 900 once again and the third time that we tried by using the set max price over here it was 1,000 so this time it is selling price it is equal to 1,000 so guys by using this method in order to set the value of a private attribute we were successfully able to update the value of this private attribute and this is the main functionality which we call it as encapsulation as far as op object oriented programming in Python is concerned so guys let us run this code once again by a different value let's say the max price over here we set it to 2,000 so let me just save this file now and try running this code so this time the selling price is coming over here once again as 2,000 and guys this is the way in order to hide certain attributes of a class you can have them as the private attribute by prefixing and use the different methods in order to set their values by using the objects of that class method over overriding in Python Programming so guys method overriding in Python is a way of letting method of a subass override the method of a super class so let's say for instance inside the super class we have a method that is eat and then inside the subass we also have the same method with the same name that is eight so basically the method inside the subass will be executed instead of the method that is present inside the super class so let us check this with the help of example number over here so as you can see this is the class that is animal which is being treated as the parent class or the super class and over here we have the attribute that is the name of the animal and it has a function that is the eat and it takes one parameter that is self over here it simply prints a statement that is I can eat now guys again we have another class over here that is the dog which inherits this parent class that is animal and again what is happening over here is this eat is being inherited by this dog class but the dog class is also having its own eat method over here so as you can see this eat method is once again present inside the dog class and it is printing its own statement that is I like to eat bones so guys what we will do over here is I'll just simply copy these lines of code and paste it in the vs code and let us check the functionality of the method overriding and how it can be used in your project based on your requirement so I'll just remove certain comments over here so as you can see we have this parent class that is animal and then we have have the child class that is dog over here both are having the eat method so what we will do is first of all I'll just comment out these lines that is this particular function is not present let's say inside the dog class I'll simply provide the P statement over here so what exactly is happening first of all we have the animal class which is having the eat function and this dog class it is inheriting the animal class so the dog class will have access to this function that is eat over here so I can eat will be displayed so what we will do is first of all we will create the object of this dog class so let's say we have dog one it is equal to and then the name of the class that is dog over here and simply what we can do is since the dog class is inheriting the animal class we can use the eat method of the animal so we can simply use the dog one object followed by Dot and then we have the eat method being called followed by open and close parenthesis so guys over here simply if we save this file and try running this code now as you can see I can eat is being displayed over here which is the print statement inside the eat function of the animal class now guys let us say we have the same method that is eight with a different print function inside the dog class so I'll just remove this pass statement and we'll also remove these commands over here so basically now what will happen whether the E function of the animal class will be called or the eat function of the dog class will be called so let us check this so I'll just save this file now and try running this code once again as you can see I like to eat bones this particular statement is getting printed which is the statement from the eat function of the dog class so basically whenever we have the method with the same name inside the parent and the child class the method of the child class will be called over here and that is what we call it as method overriding now guys why method overriding is important so let's say you have the animal class over here this is a very generic statement that I can eat basically it doesn't specify what the animal can eat but let's say you want to have the child classes over here which inherits the parent class and you want to be more specific so what the dog likes to eat basically the dog likes to eat bones over here so you can have the same method name inside the child class and print a different message in this case and that is what we have done in this example so method overriding is very important as far as objectoriented programming in Python is concerned and you can use them in your own Project based on your requirements multiple inheritance in Python Programming so guys previously we have seen the single inheritance but in this video we are going to check the multiple inheritance in Python so a class can be derived from more than one super class in Python basically this is called multiple inheritance so basically the derived class will be having the multiple super classes in this case so for example a class bad is derived from Super classes that is mammal and a winged animal so basically this mammal and winged animal will be treated as the parent classes and this bad class will be the subass or the child class which can be derived from both of these super classes over here so it makes sense because bat is a mamal as well as it is a winged animal so let us check this with the help of the example code now in the vs code so over here first of all we will create a class that is called as maml over here and inside the maml what we will do is we will Define the function and we will simply say mammore info so this particular function it is going to take one parameter at itself which is the object itself and basically we are going to Simply print the statement that we are inside mammal function so as you can see we are simply printing we are inside mammal function in order to identify that the control flow has come over here inside the mammal info function and then again we will have another parent class over here that is winged animal so we say winged animal over here and this this time what we will do is again we will have the function but over here we will say Wing uncore info so this particular method belongs to the winged animal over here and then again it is going to take the parameter is the self and then again I'm simply going to copy this print statement over here and paste this inside the winged info and we will say we are inside winged animal function so we say we are inside winged animal function now guys we have created two classes over over here which will be treated as the parent classes now we will be defining a third class that will be the child class of both these classes so basically we will have the class that is called as B over here and how do we mention the multiple super classes whenever we are defining the sub classes over here so basically inside the parenthesis we will have both these classes separated by a comma so first of all we will have the memal class over here followed by comma and then again we will have the winged animal class over here in this same way you can have any number of classes separated by commas over here in order to achieve multiple inheritance and then after this we will have the colon and then again we will have another method which will belong to this B Class over here so over here we will have the bcore info method and then which will take the self as the parameter and then we have the colon over here again we will have the print statement we will say we are inside bad function so it says we are inside bad function now guys inside this bad class we have this bad info function and apart from this we also have this mamal info and winged info functions since both these functions are derived from these classes that is mammal and winged animal over here so we can access all these functions from the object that we create for the bad class so let us come out of these classes and what we will do is let's say I provide the object that is bad one it is equal to bat over here so we have created the object of this bad class in this case and then when we provide the B one object followed by dot as you can see we are getting all the three functions as the suggestions by the vs code over here that's because all the three functions are accessible by this bad one object over here so first of all we will say bad info and Then followed by open and close parenthesis and then again we will say b 1 dot let's call mammal info in this case so we have mammal info as well as the third function that is B one followed by Dot and then we have the winged info over here and then open and close parenthesis so all these three statements will be printed one at a time based on the functions that is being called by the control flow so let me just save this file now and try running this code in order to confirm the same so as you can see first of all we have called the bad info so we are inside bad function is being displayed and then again V are inside mammal function is being displayed that's because mammal info is being called the second time and third function is being called that is winged info and we are getting we are inside winged animal function function so guys in this way we have also achieved multiple inheritance over here in case the functions that you want to use are present in the multiple classes as you can see over here you can have multiple classes being inherited by the derived class which we also call it as a subass over here and this bad class is acting as a subass and both these classes that are mammal and winged animal are acting as the parent classes now guys let us move to another task over here what do you mean by Method resolution order in Python that is mro so if two super classes have the same method name and the derived class calls that method then python uses the mro to search for the right method to call so guys over here we have seen how multiple inheritance can be achieved but what if the method names in both the super classes that is in the memal class and the winged animal class are same so what we will do is instead of this memal info we will keep it as display over here and instead of winged info again we will will call it as display so basically this time what is happening over here is both these classes that is mamal class and winged animal classes are having the same method name that is display and what we are doing we are creating the subass that is B and inheriting both these classes that is mammal and winged animal over here and this time both these display methods are getting inherited by this bad function now which method will be called when we use the object of this bad method let us check that so basically I have to remove these lines of code since these functions are no longer present but instead of that what we will do is we will say B one followed by Dot and then we have another function that is display so we have only one function that's because the name of these functions are same in both the parent classes and Then followed by open and close parenthesis so guys over here inside the bat function we have the bat info which will be called by using the bad one object and then the next time what we are doing is we are using the bad one object in in order to call the display method now which display method will be executed out of these two let us check that with the help of execution so I'll just save this file now and try running this code now so as you can see we are getting we are inside B function which is this statement that is getting printed that is obvious that's because we have called the bad info function over here and next time when we call the display method it is saying we are inside mammal function so guys basically this print statement was executed which proves that the playay method of the mamal class is being called over here why so that's because when we are creating the child class the first parent class is being given the highest priority over here so first the control flow will check whether this display method is it present in the first parent class if not then it will go to the second parent class over here inside the manual class it is finding that the display function is present and that is what is getting printed over here so it is the leftmost class that will be used in order to call the method which is present in multiple parent classes over here so what if we provide winged animal as the first class so what we will do is I'll just remove this mammal class from here on the left hand side we will provide winged animal and Then followed by comma and then on the right hand side we provide mamal so over here again we have just changed the order in which the inheritance is being done over here both these classes are still the parent classes of this child class that is bed class now let us check which statement will be printed when we call the display method over here so let me just save this file now and try running this code as you can see we are getting we are inside winged animal function so guys basically this winged animal function that is display function was called and we are getting this statement that is we are inside winged animal function that's because this time we have provided winged animal as the leftmost class and the control flow found this particular display method inside the winged animal class over here which is the parent class of the bad class so guys this is very important as far as method resolution order is concerned the leftmost class is being given the highest priority as far as the same names of the methods are concerned so guys practice on your own so that on different inputs you get different outputs operator overloading in Python Programming so guys in Python we can change the way operators work for user defined types so for example the plus operator will perform arithmetic addition on two numbers in the same way it will merge the two list as well or else if we are dealing with the two strings then it can concatenate two strings so the same plus operator can perform multiple operations depending on the operant whether they are numbers or whether they are strings or list so this feature in Python that allows the same operator to have different meaning according to the context is called operator overloading so this we are going to check with the help of examples as well apart from this there are certain special functions in Python so basically the class functions that begin with the double underscore are called special functions in Python they are called double underscore functions because they have a double underscore prefix and suffix such as as you can see this in it which can be treated as the Constructor of a class it is one function which starts and ends with the double underscore in the same way the plus operator can be overridden by using this double underscore followed by add and then double underscore again and then open and close parenthesis so guys let us check operator overloading implementation in action using the vs code over here so we'll see the very basic examples first of all so let's say we have num one it is equal to 10 and then number two that is num two it is equal to 20 so if we simply print num 1 + num 2 over here so num 1+ num 2 so basically it is 10 + 20 which is 30 in this case so when we just save this file now and try running this code so as you can see we are getting the result as 30 but what if these variables are strings so instead of numbers let's say if we enclose them within the double quotes this means that we have a string over here that is 1 Z that is 10 and then over here as well we have another string that is 20 so when we do num 1 plus num 2 instead of 30 we will get the concatenation of this string which means 10 will be followed by 20 in this case when we try to print the statement so let me just save this file now and try run this code so as you can see we are getting 1020 so guys we have not changed anything over here the operator is same and the operants are also same the only thing is we have changed the values to the string and that is what operator overloading means that is by using the same operator we can have the different results based on the operant values now guys let us check how operator overloading can be implemented when we are dealing with classes over here so let's say we have a class that is named as point over here and this class let's let's say we have a Constructor inside it so we have init method inside this so init method it will take one parameter that is self and what we will do is let's say it has two attributes over here so self dox so the point class it will have two attributes that is X and Y coordinates so over here let's say we provide the x value by using the parameter that we are getting so let's say we have X1 over here and let's say we have y1 over here so self. X it will be equal to X1 and then again we will have self do y it is equal to y1 in this case so whenever we are creating the object by using the point class over here the Constructor that is in it method will be called along with the two points that we will be passing and those two points will be assigned the values to these variables that is X and Y over here now guys in order to override the two string method we also have another method that is double underscore and then Str Str so as you can see apart from this we have many other functions funs that can be used when we provide the double underscore so vs code is suggesting us the entire list of functions which we can use in our python code so over here we are going to use this s Str and then we are going to have our custom code inside this s Str so what we are going to do is we are simply going to print the values of this X and Y so how do we do that we are going to use the formatting part and then inside this we are going to call the cell followed by Dot and then we have X and then again we have called over here and then again we call the self do y so over here we are simply printing the X and Y values which are separated by the comma over here and then guys let's say we want to override the plus operator over here so before having the function inside the class what I will do is first of all we will create the object so let's say P1 is the object name it is equal to point which is the class over here and what we do is we do 1A 2 that is X and Y values over here and then let's say we have another point that is P2 it is equal to point and then this time we are going to provide the X and Y coordinates as 2 and three over here and what we want to do is we want to print the sum of both these points that is P1 plus P2 so guys in this case we are using this plus operator and then these are the operators that is P1 and P2 so how do we have the custom implementation of this plus operator over here which we will call it as the operator overloading as well so as we have seen over here we have something called as double underscore and then add and then double underscore so this represents the plus operator as well so we can use this method inside the class in order to have our custom implementation of addition of both these points so over here we have DF followed by double underscore and then we have the add method over here followed by double underscore and then we have the open and close parenthesis and then inside the parenthesis we will provide the self as the parameter now guys apart from the self parameter basically when we do P1 + P2 it is simply P1 dot this particular function that is we are going to Define followed by this P2 which will be a parameter so we need to catch this as the second parameter over here so what we will do is after the cell we will have another parameter and we will name it as other over here so what we can do is over here we can create another variable that is X it is equal to self.x over here plus we need to use another parameter that is other which represents the other point that is P2 in this case so over here we will say other do X in this case and then the same way we are going to have another variable that is y it is equal to self doy plus other do y in this case and then guys what we have to do is simply we need to return the point of both these values that we have found that is X and Y so basically return point of X comma Y in this case so we have X comma y so guys this is the implementation of our addition operator we are doing the operator overloading in this case so basically P1 + P2 it is same as P1 followed by Dot and then the add function being called along with the parameter that is P2 so in this case this function will be called and it will return point of X comma Y and basically while returning this we are providing the print statement so behind the scenes this function will be called in order to print the statement so guys basically over here inside of the print statement we need to have the return statement over here so I'll just remove this part over here and we will say return followed by double codes and then inside this double clotes we will be using the formatting so let's say we have zero and then comma and then let's say we have one followed by Dot and then we have format over here and inside this format we need to provide the x and y Valu so self. X and then comma and then we have self.y in this case so basically this is the way in which we are going to print the the values that is of X and Y so guys let me just save this file now and try running this code so as you can see we are getting the coordinates as 3 and 5 this x and x values are getting added so 1 + 2 it is equal to 3 and then 2 + 3 it is equal to 5 so we are getting five over here so guys basically what we have done is if you see the main code over here we have just defined P1 and P2 which are simply the points and if we were not having this implementation inside the class that is the string and the addition part then we won't be able to add both these points directly because by default this plus operator can only handle numbers or strings Or List over here but in order to handle the custom classes we need to define the custom functions as well inside those classes and according to our requirement we can have the code inside those custom functions guys we can also change the formatting over here in order to change the formatting we can say that X it is equal to this particular thing and then after comma we can have y it is equal to self.y part over here so let me just save this file now and try running this code so as you can see we have change the formatting xit is equal to 3 and Y is equal to 5 so whatever format that you want to print in or whatever code you want to have inside this Str Str method you can have it accordingly based on your requirements so guys this is operator overloading for you with the same operator you can have multiple implementations and it can have different meanings as far as operant are concerned similarly we have other special functions and the other operator overloading functions as well as you can see we have this init which initializes the attributes of the object which we have already seen as far as class Constructors are concerned then we have Str Str which returns a string representation of the object that is what we have implemented over here it returns a string implementation of the object that is point x comma Y and then we also have Len which Returns the length of the object then add which adds the two objects so so over here we have implemented the add method which adds two objects over here which is P1 and P2 that is what we have achieved in this particular program apart from that we also have this call function which calls the objects of the class like a normal function guys apart from this we can also have other operator overloading functions as well for addition we have seen P1 + P2 which means P1 Dot and then underscore uncore add will be called in which case the parameter will be P2 similarly we can have the subtraction multiplication the power of two objects and then we can have division as well and then we can have flow Division and many other mathematical operations can be achieved by using the operator overloading just how we have done in this program overloading comparison operators in Python Programming so guys previously we have seen how we can overload the plus operator in the python so python also allows us to overload comparison operators as well such as less than or greater than or less than or equal to or else greater than or equal to and so on many other comparison operators are present in Python Programming which can be overloaded so for example as you can see we have the class that is person and then we have the Constructor which takes the parameter is the self and then name and age is taken so basically this name and age are being assigned to the name and age attributes of the class and then we have the overloading of the less than operator over here in this case so as you can see we have the function DF and Then followed by underscore uncore LT which refers to the less than sign over here and then double uncore once again and then it takes one object that is the self object over here it takes the other object that is the second object so what we can do is we can create the two objects over here that is P1 it is equal to person the name is allies and the age is 20 years old and then we have P2 that is another person the name is Bob and the person is 30 years old old so guys basically what we are doing is we are printing over here P1 less than P2 so we are checking whether P1 is less than P2 or not so what exactly will happen is instead of this less than the control flow will go over here to this particular function because we have provided the comparison operator overloading over here so the first object will be P1 in this case which will be assigned to self and the second object will be P2 over here which will be assigned to the other and self. H will be compared whether it is less than the other do age over here if it is yes then it will return true or else it will return false so guys let us implement this in our vs code over here so let's say we have the class person in this case and then what do we do is we Define The Constructor over here so DF keyword followed by the init function in this case so I'm going to implement the Constructor over here so what we will do is let's say we have self do name it is equal to the name will be taken as the parameter over here so let's say I provide name one and then age one over here so that we can identify them so name it is equal to name 1 and then we have self. AG it is equal to H 1 so the name and age will be coming as the parameters when we are going to initialize the object when we are creating the object of the person class and those name and age will be assigned to these variable names that is name and age and then guys what we will do is we will be doing the comparison operator overload loading so over here we are going to Define double underscore and then LT over here so which refers to the less than operat in this case and it is going to take two parameters one is the self parameter and then the other object so over here the second parameter is the other object and this thing is simply going to return the comparison of the two ages over here so this will be return self do AG is it less than the other do age so over here we are simply going to to compare whether self. AG is less than other do age or not if yes then return true or else return false so guys what we will do is we will create two person objects over here so let's say P1 it is equal to the person and let's say the first person name is Tom and Tom is 10 years old in this case and then let's say we have P2 it is equal to person and let's say the name of this person is Harry and Harry is 20 years old so guys what we will do is simply we need to print two statements comparing the ages of both the person so we will say P1 is it less than P2 then it will return true or false so is P1 less than P2 yes in this case because p1's age is 10 and p2's age is 20 and that is what this particular function will be implementing and returning the result and over here again we will say print P2 is less than P1 this time so P2 less than P1 this time so is P2 less than P1 so so what will happen is is 20 less than 10 no in this case so this should return false so let me just save this file now and try running this code so as you can see for first statement we are getting it as true and for second statement we are getting the result as false to make it more understandable what we can do is we can provide the statements over here is Tom younger than AR question mark and then we can have a comma over here and similarly we can have such statement in the second PR statement as well so over here we will say is Harry younger than Tom in this case so we have is Harry younger than Tom so let me just save this file now and try running this code so as you can see is Tom younger than Harry so Tom age is 10 and Harry's age is 20 right now so it is returning true that Tom is younger than Harry and second time is Harry younger than Tom Harry is 20 years old Tom is 10 years old so it is saying is Harry younger than than Tom no in this case so that is why we are getting the result as false what if we have another person with the same name that is Tom who is 30 years old so over here we will update the age of Tom that is another person who is 30 years old and we are comparing it with the same person that is Harry which is 20 years old so let me just save this file now and try running this code this time is Tom younger than Harry no in this case because Tom is Elder than Harry right now so we are getting false and in the second statement is Harry younger than Tom yes because 20 is less than 30 this time so we are getting true in this case so guys this is the way that we can implement the comparison operator overloading as far as Python Programming is concerned iterator in Python Programming so guys iterators are methods that iterate collections like list tles Etc using an iterator method we can Loop through an object and return its elements so we have already seen how we can iterate through the list and tles as well using the fall Loop but we can also Al have our custom iterators in order to iterate through the different elements inside the list so that we are going to check with the help of examples as well now we can use the iter method which represents the iterator to initialize the iterator and the next method to go through the iterator so guys let us check this with the help of example now over here in the VSS code so what we will do is let's say we have the list that is named as list one and then let's say we have the list of numbers in this case so we have 1 2 3 4 and then 5 so guys how do we get the iterator to this particular list over here so what we can do is simply we can have the name of the variable that is iterator it is equal to and then we can use the function name that is i r this is one of the functions that will return us the iterator over here and inside this function it will take one parameter which will be the list one in this case so basically the list or tle it goes as the parameter to this function that is I t r and it Returns the iterator over here and then we can use this iterator in order to get the elements of this list so what we will do is let's say we have the print function and then we can use the next function in this case inside the print so as you can see vs code is suggesting us this next function over here which will take the iterator as the parameter so we provide the iterator as the parameter so what will happen is this thing will point to the first element to the list over here so let me just save this file now and try running this code so as you can see we are getting one in this case now what we can do is again we can have another print statement in order to print the second element so over here I have just copied and pasted this line of code and then let me just save this file now on the next line we should get the second element that is two so as you can see we are getting one and then we are also getting two over here so similarly we can get all the elements in this case by using the it method we have got the iterator over here and by using this iterator as the parameter to the next function we have got the element itself so guys this is the very basic way in which we can use the iterator along with the next function now guys let us check this with the help of the Fall Loop working of fall loop with the iterators so what we can do is instead of printing these statements multiple times we can simply use this iterator inside the fall Loop so over here we can have for and then element in and then we can provide this iterator so this iterator is having all the elements right now and we are going to iterate through this iterator and one at a time all the elements will be assigned to this element variable and inside this fall Loop we can simply provide the element over here so we can provide element and in order to have all the elements on the same line when we are providing the print statement we can have the end parameter over here which is Slash and by default which means a control flow goes to the new line so in this case we want it to be on on the same line so we will separate all the elements by using one space character over here so let me just save this file now and try running this code so as you can see we are getting 1 2 3 4 5 on the same line we can also separate them by using a comma and a space character so I've just provided comma in the end parameter I'll just save this file now and try running this code so as you can see we are getting 1 2 3 4 5 separated by commas so guys this is the way that we can use the fall Loop along with the iterator in order to go through all the elements inside the list we can also do this directly by using the list one as well so when we provide list one which is containing all the elements over here so instead of having the iterator as well we can use the list one so let me just save this file now and try running this code so the same output will be displayed that is all the elements of the list now guys where this iterator becomes important is whenever we are creating the custom classes and we want to iterate through the custom iterator that we want to create so guys let us check it with with the help of example now so guys what are the important points while building the custom iterators so building an iterator from scratch is easy in Python we just have to implement the double uncore iter followed by double uncore method so this is one of the custom methods that we have to implement inside the class along with this we also have to implement the double underscore next Double uncore method over here inside the same class so these are the two methods that are important which needs to be implemented inside the class while building the custom iterators so this it method it Returns the iterator object itself if required some initialization can be performed in this method and the second method that is the next method over here it must return the next item in the sequence on reaching the end and in subsequent calls it must raise stop iteration so guys let us check this with the help of examples as well so over here what we will do is we will implement the power of two class over here which means we are going to find the results of the power of the number that is two so we are going to have the class which is going to be named as power two in this case and what we will do is we will have the Constructor over here so we have the init method in this case and init method it will take the maximum number up to which we need to find the Power of Two over here so basically apart from self we will have the max value as well so over here we will say self do Max it is equal to Max so while creating the object of this class we will be providing the max number up to which we need to find the Power of Two And then guys as we have seen in order to build the custom iterator we need to have the two functions so first of all we will have the iter function over here so we have iter function and Then followed by open and close parenthesis this will again take the parameter as self and what we will do is the initial value that is self do n so we have the variable that is n which is equal to Zer right now so we will find the powers of two starting from zero up to the number that is Max that we have provided while creating the object of the power two class over here so what we are going to do is self. and it is equal to zero and this thing is going to return a iterator which is going to be the self itself so over here we are returning the iterator that is the self itself and then guys we are going to also Define the next method over here so we have DF followed by double underscore and then we have the next method followed by double underscore and then again we are going to have the self as the parameter so over here what we will do is first of all we need to check whether the value of n is it less than or equal to the value of Max that we have provided so over here we will provide the if condition and inside the parenthesis we will say whether self do n is this less than or equal to Max that is self do Max Max in this case so we have self. Max and if yes then we are going to have the result what is the result it is equal to 2 ra to the power of n so it will be 2 * by multili by double times and then self do n in this case so over here we are getting the current value of n we are checking whether it is less than or equal to Max and if yes then we are finding 2 ra to that number that is n over here and the result will be stored in this result variable next what we are going to do is we are going to increment the value of n by 1 so it is going to be self do n + = 1 so we are incrementing the value of n by 1 so that the next time the control flow comes over here it will find that the value of n is incremented by one and then after this we simply have to return result in this case for which we have already found the result over here so guys this is the case when n is less than or equal to Max but what if the N is incremented in such a way that it becomes becomes greater than the maximum number which we have already provided for which we don't want to find the Power of Two so over here inside the lse part what we will do is we will raise the stop iteration so over here we can simply provide raise stop iteration so we have this exception that is raise stop iteration over here which is one of the builin exceptions now guys what we can do is simply we can create the object of this power two class over here that we have created so what we can do is let's say we provide the object that is I it is equal to power two over here and the maximum number for which we want to find the Power of Two is three right now so what this will do is when we create this object I the control flow it sees that for this particular power two class we have a Constructor that is in it and it will take the number that is Max so over here we have provided the max as three so self. max that is this particular variable will have the value S3 over here and then guys in order to find the iterator we will name it as the iterator variable it is equal to i r this method and then inside this method we need to pass this object that is I so what exactly will happen is the control flow will see that for this particular class we have the user defined it method so it will come over here and initially the value of n will be set as zero in this case so we have zero to start with and at the end we have Max that is the value of three and then guys what we have to do is we have to iterate through this iterator over here so we already have the iterator next time when we call this next method the control flow comes over here it will see that the value of n it is zero right now and it is less than or equal to Max so 2 to 0 the first result it will be equal to 1 and that same result will be passed over here as the return statement and before that n will be incremented and the updated value of n will be one in this case so over here we can simply provide the print statement and we can say next over here and inside the parenthesis we will have the iterator as the parameter so guys let me just save this file now and try running this code so as you can see we are getting the result as one and next time what we will do is again we will copy paste these lines of code three times over here so let me just save this file now and try running this code as you can see we are getting 1 2 4 and 8 which is equal to 2 to 0 is 1 2 to 1 is 2 2 2 is 4 2 to 3 is 8 and next time when we print the value once again over here so what will happen is 2 to 4 will be found and in this case since n value is not less than or equal to Max so raise stop iteration will be called over here and we will get some other statement being printed on the terminal so let me just save this file now and try running this code so as you can see we have got 1 2 4 and 8 and after this as you can see Ray stop iteration was called while calling the next function over here so guys this is the way that we can build our custom iterators whenever we are dealing with our custom class we just need to Define two methods over here that is it which stands for iterator which will return an iterator over here and then we also have to define the next method which will return us the next element to be used as far as our requirements are concerned in the Python program so guys you can have any logic over here this is just an example that we have taken that is in order to find the Power of Two you can have any logic based on your requirements and raise the exception in any manner that you want based on your requirements so we have come to the conclusion of the Python programming language hopefully you have got enough knowledge about the Python language and you should practice on your own so that on different inputs you get different outputs and that is how you are going to learn more about the Python language so that's it in this video I'll see you in the next video till then stay tuned