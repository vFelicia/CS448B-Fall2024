so now we will see a simple responsive web design using the flex box in CSS so guys in this example we will create a simple responsive design using flexbox model so let us move to the vs code over here and simply I'm going to remove the previous lines of code inside the HTML and the CSS files now guys what we are going to do is simply we are going to create a diff tag with the class container over here inside this D tag first of all we will have the header class over here which means we are going to have the diff tag with the class header and inside this we will say this is heading so guys we can have the heading for the web page in this case and then apart from this we will also have another class that is row over here that will have certain content now guys inside this row class that is the diff tag with the class row we are going to have three elements over here first of all we will have the navigation bar that that will be a vertical navigation bar over here so we have the name bar inside which we will have four it items over here so we will have the diff tag inside the diff tag we will have the links with the help of the a tag over here so we have the hash character for the HF attribute and then we are going to have the home as first item inside the navigation bar and then similarly we will have other items over here so guys let us say we have blog in this case as the second item then we have the videos as well and then we will have the about section over here because apart from this inside the same row we are going to have the main content div tag as well so simply we are going to say content over here and then we are going to say a simple statement that is this is a diff tag with content so guys basically in order to identify that this is the content diff tag over here we have provided a simple statement in this case and then apart from this we can also generate certain random text in this case so guys let us say we have 40 words as the random text that is getting generated over here and then guys apart from this in the same row on the right hand side we will have another diff tag which will be the content at the right hand side so simply we will have the class name that is content and Then followed by hyphen and then we have the right keyword over here and in this case we will say this is a diff tag with right content so guys basically we have a simple statement over here and then apart from this we will have certain random text that is getting generated this time we will have only 10 words over here so guys this is the HTML content that we have written inside our web page which we are going to make responsive so guys let me just save this file now and try reloading this page on the browser so as you can see this is the content that we have provided which is getting displayed from top to bottom over here now guys inside the style. CSS file we need to provide certain CSS properties in such a way that we need to make this web page as a responsive web page so first of all we will make use of this container class over here and we will make it as a flex container in this case so guys basically we will make use of of this display CSS property and the value we are going to use is flex over here and then apart from this what we will do is we will set the flex direction as column in this case so that all the elements are getting displayed from top to bottom let me just save this file now and try reloading this page once again on the browser so as you can see all the elements by default were displayed from top to bottom and there is no change over here now guys for the heading part what we will do is we will make use of this class name that is haer and we will provide certain CSS property for this header class over here so guys first of all we will change the background color to yellow in this case apart from this we will also have the margin bottom property and we will set it to 10 pixels over here we will also set the padding as 20 pixels in this case also we want to set the font size over here to let's say 2 em in this case so basically it will be two times the default font size over here let me just save this file now and try reloading this page so as you can see we have this is heading text over here and and it is also having the background color as a yellow color over here and it is also having certain margin bottom property as well now guys what we will do is this row container that we have that is the diff tag with the class row we want to make it as a flex container which should be having the flex direction as the row Direction so that all these elements are getting displayed from left to right instead of top to bottom so guys inside the style. CSS file over here simply we will use the class name that is Row in this case and we will use the display property we will set the value as Flex in this case and the flex direction should be equal to row over here which is the default value let me just save this file now and try reloading this page once again on the browser so as you can see the Nave bar is displayed on the left and then we have the main content that is at the middle and then the side content that is present on the right hand side over here now guys we will also provide certain spacing in between them so let us provide those CSS properties as well so what we will do is inside the row what whatever diff tags are present we want certain padding and the margin to be provided over here so we have the diff tags inside the row class over here and simply we are going to provide certain padding in this case so let's say we have 10 pixels of padding let me just save this file now and try reloading this page so as you can see we have the padding that is getting applied over here now guys the padding is also getting applied to the diff TX inside the Nave bar as well so in order to avoid that we want the padding to be applied to the direct diff child of the row class over here so that only these diff tags that is the Nave bar and the content and the content right classes should have the padding and not these D Texs which are the part of the navigation items so guys let me just save this file now after providing this greater than symbol which means the direct child should be affected with these CSS properties over here and when we reload this page as you can see now there is no padding that is applied to these navigation items over here and we have also provided the spacing in this case now guys let us provide certain CSS properties to this navigation bar and make it a proper vertical navigation bar over here so what we can do is simply for this na bar we will make it as a flex container which will have the flex direction as column over here so guys we have the Nave bar class name in this case we will have the display equal to flex over here and the flex direction should be column in this case so guys basically we have the column value let me just save this file now and try reloading this page so as you can see there is no change right now so guys inside this na bar we want the a tags to be having certain CSS properties and also the diff tags as well so guys what we will do is simply I'm going to copy these lines of code over here and then inside the na bar we have the diff tags in this case which should have certain padding over here so guys basically we will have the padding of five pixels this time and then for the na bar as well we are going to have certain background color so let's say we have the value as Aqua which is the background color for the Nave bar let me just save this I now and TR reloading this page so as you can see we have the padding and the background color that is getting displayed over here now guys apart from this for the a tags as well we want to provide certain CSS properties so inside the Nave bar class name we have the diff tag followed by the a tag over here first of all we will set the color equal to Black so basically this is the text color that we are setting and then apart from this we also want the text decoration to be none so that the underlines that are getting displayed over here should not not be displayed so let me just save this file now and try reloading this page once again on the browser as you can see there are no underlines over here now guys when we get the mouse cursor on these diff tags what we want to do is we want to change the background color so guys what we can do is simply we will copy these lines of code over here and we need to provide the hover event for the diff tags in this case for which we want to change the background color so guys basically we want to change the background color to this chart reuse color which is a light color over here here let me just reload this page so as you can see the background color is now getting updated when we get the mouse cursor on one of the items for this navigation bar over here so guys in this way we have completed the CSS properties for the navigation bar you can provide your own CSS properties for the navigation bar while you're practicing on your own now guys apart from this let us say we want the width of this particular content to be four times larger compared to this particular navigation bar and two times larger compared to the right content over here so guys we can use the class names in this case so what we will do is the Nave bar should have the flex equal to one over here so simply we will come to this Nave bar in this case which is a container and we will say Flex it is equal to 1 in this case basically it is a container as well as it is the flex item inside this row container over here and then apart from this we will also have the class names that is content and the content right in this case so guys basically we will have the dot content over here for this Flex item we will set the flex S4 in this case basically this Flex CSS property is nothing but it is flex grow over here but we are using the shorthand method that is the flex CSS property and then apart from this we will also have the content right class name and then for this class name we will set the flex value equal to two so guys let us check that as well when we set the flex equal to two and also we will change the background color to Aqua background color once again so that the colors are SA same for the navigation bar and the right hand side content as well so let me just save this file now and try reloading this page once again on the browser so as you can see we have the flex equal to one for this navigation bar and four times Flex for this particular content in the middle and two times Flex for this right hand side over here if we want to change the width of this content in this case we can simply increase the flex number for the content class name so let us check that as well so instead of having the four number we can have six in this case let me just save this file now and try reloading this page once again on the browser so as you can see the width of this content has increased to six times compared to the navigation bar over here and three times compared to the right hand side content over here because we have provided Flex equal to 2 for this right hand side content so guys this is a very simple basic design of the website or the web page that we have created over here now guys what we want to do is let us open the console in this case and when we we decrease the width of this particular screen we want the flex direction of this row container over here to change to the colum Direction so when we change the width of the screen now as you can see it is not completely responsive and now we are getting the horizontal scroll bar over here but we need to use the media query in such a way that when the width of this particular screen is less than 500 pixels then all the items inside this particular row should have the flex direction as column and also the navigation should have the flex direction as row over here because currently it is the column Direction in this case so guys what we will do is we have to set the media query in such a way that the max width should be 500 pixels over here so let us check that as well how we can implement it so basically we use atate character followed by media screen over here and then after this we provide the end keyword and then we have inside the parenthesis the max with CSS property over here after which we provide colon and then we say 500 pixels over here now guys for this particular situation in which case when the screen device width is less than 500 pixels we want to set the flex direction of this particular row to column over here so basically this Flex direction is equal to row but we want to change it to column when it is less than 500 pixels so simply we provide row class name over here and then we say Flex Direction it is equal to column in this case and then guys apart from this the flex direction of the Nave bar it is currently column over here we need to change it to row in this case so basically the items that are getting displayed from top to bottom we want to display it from left to right when the width of the screen is less than 500 pixels so guys let us change that as well so over here within the same media query we will provide the class name that is naar over here and then we will change the flex Direction it is equal to row this time so let me just save this file now and try reloading this page once again on the browser notice that we don't have any change right now because the width is greater than 500 pixels and when we reduce it to less than 500 pixels over here so as you can see currently it is 57 pixels when we reduce it to less than 500 pixels the Nave bar is also changed from column to row Direction over here and the entire row content is now getting displayed from top to bottom in this case so guys in this way we have handled the situation in which case when we want to see this particular web page on a screen width that is below 500 pixels we can use this media query over here you can provide any of the measurement over here for the max with based on your project requirements and then your responsive web design will be updated accordingly when the user accesses your web page on different screen devices so guys in this way you can make a simple responsive web design and practice on your own based on the different measurements of the screen devices either you can display the flex Direction in in the row direction or the column Direction So currently it is in the row Direction over here as you can see but when we reduce the screen withd to below 500 pixels now it is in the column Direction and The Nave bar is in the row Direction over here so guys comment in the comment section below whether you have learned something out of this video please make sure that you like this video so that it reaches to more people and subscribe to this channel so that you get the notifications on upcoming videos as well I'll see you in the next video till then stay tuned