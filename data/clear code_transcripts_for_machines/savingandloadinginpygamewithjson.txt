hello there in this tutorial we are going to talk about how to create a safe game functionality for pygame and here's what we are going to make i have a simple clicker game and i can click on the red or the blue square and then i get the clicks selected so far this is a super simple game but the really important part here is that if i close it and reopen it my score is saved so i can do this multiple times and keep on closing it and reopening it and the score will always be carried over to the next game and the reason why this is happening is because i saved the score in a separate file and then every time we load our game we are loading this score file as well and this system would work in basically any game that you want to use so it would work in pygame but it would also work in oceana or in arcade for example and really all i'm doing is i'm using python to create a separate file and then when i start the game i am loading from that file that's literally all that's happening here but that actually brings us to the first big topic how to write files with python let's talk about that so in the most basic sense when we are saving or loading a file all we are doing is we are ever writing a file when we are saving a game or we are loading a file when we are loading a game and it doesn't really matter what kind of file we are saving as long as this file can contain what we want to save so in our case this would be simple numbers and for that we have lots of different options that we could be using the most basic approach i think would be to just create a text file which python can do by itself super easily and then you could just write some text in there and then when you load the game you load specific parts of this text file and while this would work it's not exactly ideal for storing lots of data so i wouldn't recommend this one but if you want to store more complex data you still have lots of different options you could for example create an excel file or create an sql file those two would be really powerful to store lots of really complex data although those two options would probably be a bit of an overkill for a simple game so i wouldn't exactly recommend those two either although if you have really complex data you might want to think about using those too but instead what i'm going to use is called json which is a fairly powerful way to store data and also to send it so json stands for javascript object notation and javascript is used to make websites interactive and json was developed to send information across the internet but since it was developed json became a standard for lots of different interactions and you could use it with basically any programming language as a matter of fact if you understand python you can very easily read json files for example here's one that we are going to create in this tutorial and well it looks basically like a python dictionary and python also has an inbuilt library that can create json files by itself and before i get into the actual game let's actually play around just with jason and let's see how far we get with that one so here i have an empty sheet of code and the first thing i have to do is to import json which happens with import json and now if i run the code i can't see any error message which tells me that python can import this successfully so this one is working already and now we first have to create some kind of data that we can work with so let me just create a dictionary with a couple of spare entries and in here i'm just going to let's go some countries and their capitals so let's say germany and we have berlin then let's say we have the uk and we have london and then let's say we have china with beijing the actual data in here really doesn't matter and just to make sure to illustrate this let me add another entry let's say kitten and one two three so this is just a plain python dictionary really nothing fancy happening here but now i want to do two things number one is i want to store this dictionary in its own separate file and more specifically this file should be a json file and to achieve that let me clean this up a tiny bit we need the with command and this one is basically what python uses to work with different files and what i want is to open a file that for now let's call this test data dot e x t and let me just be clear here that we are creating a txt file and into this file we are writing json data so json data is just written in a text file so if we had to open this python would try to open the text file but in our case this one doesn't exist yet so instead i have to add a second argument and that is a w just a single letter lowercase and what this tells python that if this file doesn't exist it's supposed to create it and now we have to work with this file as a variable so now we need the s keyword and now we need a variable that is supposed to be the shorthand for this text file in my case let's call it test file doesn't really matter and in here all we have to do is type json dump and then the file we want to create so my case this is data and then the file we want to write it to which is test file in this case so test file and this is literally all i had to do so now if i run the code we again can't see anything but in this case this is a good sign because there's no error message but now if i open the folder where this script is in i have a new file called test data and if i open that one this is what you can see we have the dictionary we have just created in adjacent format now it looks basically like python code and the reason for that is that python and json look very similar but this here is a json data set and you could for example send this to a website or to a server and this would still be recognizable and all right with that you have learned how to write a json file it's literally as simple as that you could also write different data types besides a dictionary and there are lots of different ways to approach this but in this case i really want to keep it simple so we're just sticking with a dictionary so now we have learned how to save a file now we have to learn how to read a file and this happens in basically the same way so let me comment this bit here out and now we're going to write some code to open the file we just created so let's just imagine that this one here doesn't exist and instead i want to import the file i have just created and here again we need with open and now we need the name of the text file we want to target which is still going to be testdata.ext and this time i don't want to add the w because i know this file already exists and i want to again call this test file so now all we're really telling python is we want to open this text file and in our code we are going to name it test file and the first thing we are going to need in here is to create a new variable where we want to store the file we are reading out so this one here right now is only giving us a text file right now we don't know this is json code so what we have to do is to create a new file let's call it data and this time we need json.load which is basically the counter site to json dump which instead of writing code it reads the json file and this one is just reading some json file and converts it to python code and then we have to put in our test file and now what this is doing is it converts all of this back into a python dictionary so in this data variable we now have a dictionary and with a dictionary we can do something like for entry in data let's say i just want to print the entry and let's see what happens and we get the four different countries i could also go with items so we literally just created a dictionary and that's basically json it's a really powerful way to store and load data and you could also use it to send data across the internet but in this case i don't really care about sending files along the internet instead i want to use it to create a safe functionality for a game so let's have a look at that so here i have a basic setup for pygame that right now it just creates a black screen so we have created a display surface we have a clock and a font and then we have our basic game loop and there is update and the frame rate but nothing is being drawn yet and the first thing to get the startest is we have to import json as well so now we have three different modules to make all of this work and to get this started let's start by adding a background color so i want screen dot fill and the color i went with here is two four five two five five and two five which is basically a white color and besides that i want to create two rectangles and for that let me put all of this into its separate sections so let's call this rectangles and i have approached this by first creating two surfaces color these with red and blue respectively and then use rectangles to place them on the screen so let's do that so the first one is my red surface and this one was just pygame dot surface and in here this one was 200 pixels wide and 200 pixels high and i filled this surface with a red color that has the rgb of 240 80 and 54. and then from the surface i want to get a rectangle so red rectangle and this is going to be the red surface with get rekt and in here i want to place the center to the position of 150 and 180 so the entire window is 600 pixels wide and 400 pixels high so this one is going to be roughly on the left side in the middle and i put it slightly above the middle so we have some place for the text below but all right this is going to be the red rectangle now besides that i also want to get a blue surface and this one is going to work in basically the same way so pi game surface this one is also going to be 200 and 200 this one i want to fill with a blue color that in this case is 0 1 2 3 and 194 and then i want a blue rectangle that is going to be the blue surface and again get rekt and in here this center this center is going to be at position 450 and again at 180 so this time this rectangle is going to be slightly further to the right and all we have to do now in the game loop to draw both of them so i want screen dot split and in here i want the red surface and the red rectangle and then i can copy this line and do the same thing for the blue surface and now if i run this we get an error because i made a typo this should be a dot now let's try this and there we go now we have a red rectangle and a blue rectangle now i can click around but nothing is going to happen yet that comes in a bit now the other thing i have to do is to create some text so let's go with that so let's add a new section let's call it text and in here i call this red score surface and for that i need a game font and i want to render this font and in here i need three bits of information the first one is the text let's call this red for now then if i want to antialias it which in this case i do want to do and i need the color and for this one i just went with black and then again we have a surface so i also want to create a rectangle to place it and this one is going to be my red score surface get rekt and here i went with center is equal to 150 and i went with 320 so the same x position as this one but quite a bit further down so it's below the rectangle and that's going to be the red text now besides that i have to do the very same thing for the blue text so let me copy all of this and let me change all of this to blue and then we are almost ready with the boring setup and then we can actually get to the important bits so blue blue blue that looks good and now again we have to actually put all of this on the screen so screen dot blit and let's start with red score surface and red score rectangle and then screen dot blitz blue score surface and blue score rectangle and now let's run off this and this almost worked i just forgot to update the position which should be 450 and there we go now we have a simple image that shows the color it doesn't actually do anything right now but that we can start working on now and i guess the first thing we have to do is to actually give us the ability to click on the different rectangles and for that we have to add a new element to the event loop so if event dot type is equal to pi game dot mouse button down and now we can check if we have clicked the mouse button and this would also allow us to check where the position of the mouse is at that point in time and that information we can use to check if that mouse position was on top of one of the rectangles and for that we first have to get one of the rectangles let's go with the red rectangle and in here we need collide point which is one of the inbuilt methods of a rectangle and all it does is it checks if one point is on top of this rectangle and in here all we have to enter is event.pause and if that is the case for now let's just say i want to print red and let's check this so if i print on red we get printed red cool so with that i can copy this entire statement turn it to an l if statement and now i want to check for the blue rectangle and this would then be blue and now let's try this one and we get red and blue so with that we have all the bits established to actually get to the saving and loading part of this tutorial and the first one we need to get started on loading something is an actual score and this one i'm going to put before the text and that's important you'll see in a second why and in here let's call this the data so what i want to do is when i first create this text i don't just want to write red or blue that would basically be pointless instead i want to load some information either from a dictionary or even better from a file but for now let's start with a dictionary and this dictionary i have called data and it's just going to be a basic dictionary with two key value pairs the first one is called red and this one is zero by default and then we have a second entry that is blue that is also going to be zero and these two values are going to carry the score of the game so when i first create the text i don't just want to write red instead i want to create an f string and this f string is going to be clicks and then we insert into this f string the data dictionary and i want to get the red key from this and then i also want to do the same thing for the blue text so let me write over this one and now i want blue oh but i made one mistake here that this right now is going to cause an error because we have single quotation marks here and here and here and here and this is going to confuse python so instead this has to be double quotation marks so that python doesn't get confused and let me change this to blue okay now this should work and there we go we are click 0 and 0. now if we click on them nothing happens so far and that's fine we can work on this now because what i want to do instead of printing red or printing blue i want to create new text and a new rectangle and all of this should still be connected to to this dictionary here as well so the first thing i have to do is to get the dictionary again then get the key i want to target and then add plus equal one and this would apply to both sides of this so red and blue so now we're updating this file here whenever we click on one of the two rectangles but we couldn't really see it so we have to add some more code to update all of this here and well to make this easy all we can do is copy this entire bit and indent it properly and just recreate this text that's really all you have to do now this isn't the cleanest code because we are repeating some lines here but at least for this tutorial this is good enough and let me do the same thing for these as well and that looks good so just to talk over what is happening here whenever we click on either of the rectangles let's say the red rectangle we are adding one to this specific entry in the dictionary and then we are recreating the text and the text rectangle around it and that way when we are drawing all of this later on we get the updated score so now if i try this we get clicks for the specific parts so this is working quite well but well if i restart it we still go back to zero so this isn't exactly working yet but with that finally we can come to the really important part of this tutorial that whenever we close the game we are writing a json file and whenever we are loading the game we are also loading a json file if that file exists and let's start with the easier one that whenever we are closing the game we are going to write a json file that stores all of this and this is going to happen when we are quitting the game so in here i want to add some code and be careful here this has to be before these two lines because these two lines are closing the game so if you had a code after here it would not be run but okay what i want to do is with open so we are creating a file again and let's call this file clicker score dot txt and here again we need a w to tell python that this is supposed to be a new file that we want to create it's not supposed to read a file since we have to work with this in the code i want to call this the score file and well all we have to do in here is use json dump and then the file i do want to save is the data i created earlier so this one here and where i want to store it is in this file here that is right now referenced with this score file so i need score file so json.dump all needs is the data you want to store and the file you want to store it in and that is literally all we needed to save the file so now if i run this i can click on these again now if i close it we don't get an error message but we don't see anything else but now again if you open the folder you can see a new file that's called clicker underscore score and in there we have some json data that we have just created so this is actually working really well so i can close it go back to my code and now all we have to do is whenever we are starting this game we want to load the json file which again has to happen before we are creating the text in the first place so right after the dictionary and in here you could start this with just with open and then the file we have created earlier is called clicker score.txt so let me actually copy this one and again here there shouldn't be a w because we want to read a file not write it and this one again i can scope score file and all i want to do is to overwrite this data so that when this text is being loaded it's loading from the file not from this dictionary so all i have to do is get my data variable as well and then assign it json.load and then whatever is in this score file and this is pretty much all we needed for now so now if we run this we are starting with five so this has worked already and what happens here is that when python is starting the game it does all of the stuff the basics we have created earlier and it creates a dictionary but then it looks at this file and it sees there's something in this file and whatever is in this file is being allocated to the data variable so all of this is being overwritten and as a consequence this text here and this text here shows the content of the data file and even better if we added higher numbers in here and we closed it and now if we were to reload it this would still update because every time we close the game we are overwriting the file we created so this is working pretty well now there's one more thing that we do need and the problem here is if this file didn't exist we would get an error message so let me delete the file from the folder and let's try all of this again and we get an error message that we get file not found error no such file as clicker underscore score and this is kind of a problem because whenever we start a new game there's no save file yet but there's quite an easy way to get around that and that is the try command in python and in case you haven't seen this one yet what try does is it tells python to try a certain line of code in our case this one here and what try does is it runs the code and see if it gets an error message and if it gets an error message you can tell python to ignore that error message so you're basically telling python try these two lines of code but if they don't work don't worry too much about it just continue with whatever comes next and after try what you need is accept and that is what you want to write if you get an error and in my case i just want to print no file created yet and now let's try all of this so the game is loading and we get no file created yet because well it doesn't exist yet but now i can click on these things again and close it and now if we run all of this again we still get the same numbers and no error message whatsoever cool so this is working pretty well and that is pretty much it so i hope that was helpful and i'll see you around