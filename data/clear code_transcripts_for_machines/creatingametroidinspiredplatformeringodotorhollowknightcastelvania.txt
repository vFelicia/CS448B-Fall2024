hello there in this tutorial we will create a Metroid inspired platformer it will include fancy movement systems lots of guns and enemies along with pretty environments for all of this I will also talk about how to manage larger projects meaning we are going to cover a lot of inheritance and building tools I am also going to cover to store data between scenes so that dead enemies stay dead in terms of requirements you should already know the basics of gdo if you have some knowledge of notes scenes and signals along with physics bodies and a bit of GD script you should be good to go if you followed My ultimate introduction to goo you will be super well prepared for this project but it's also okay if you followed other tutorials besides that we will also cover math topics like vectors and basic trigonometry if you want to get really good at these topics check out the sponsor of this video brilliant.org brilliant is a website or an app that you can use to learn math and programming Concepts they offer interactive lessons along with lots of exercises so you can Master a skill in a fun and engaging way every exercise was made with an enormous amount of care and the content comes from industry professionals so you know it will be relevant to to your career doing these exercises is also much more engaging and rewarding than passively reading a book or watching a video and since the exercises are available on a computer or phone you can even do them on the bus or at the gym they also regularly update and add new content just recently they added a section on python data visualization and how llms work if you head over to brilliant.org clear code you can get 20% off a subscription and the first 30 days are free by signing up you also support me making more of these videos so thanks again to brilliant for sponsoring this video before we begin there's a setup project that I will be using as a base if you go to the video description you can find a link to Google drive folder with the starting files there's one for gdo 4.2 and another for 4.3 since the letter version is still in development I will be using gdo 4.2 but if you watching this in the future you can very safely use 4.3 or any more recent version for our purposes the differences really aren't that relevant and I'll talk about them in just a bit download one of the folders and import it into gdau and then you should say something like this most importantly we have a level scene which contains a whole bunch of notes I will talk about them in just a second first of all though this level scene is the parent for sky station and underground and you can tell quite easily those are going to become the levels of the game the way all of them are going to work for that let's work inside of level we have a whole bunch of noes notes that are supposed to be in the background nodes that are supposed to be on the main layer and the nodes that are supposed to be in the foreground on each of those layers I have a whole bunch of tile Maps these nodes all work with the same tile set which has a bunch of collision layers and a tile size of 16 by 16 in there we have three Graphics which are going to be all of the level graphics and those I have used for example inside of Sky to draw the main level if I hide main you can see what's disappearing so for example on Main I have the actual outline of the level whereas for background I have the background and then we have some decoration that's all that's happening in here I suppose one thing you should keep in mind if you look at the tile set there under paint we have one physics layer and Via this physics layer we are drawing a bunch of collision shapes it doesn't apply to that many tiles but well you can see the result I'll talk about this part later for now it's not too important and while watching it you might have a question until now if you're working with a tile map in Gau the tile map itself lets you to find a couple of layers so why do I have so many tile map nodes and well that is because in G 4.3 the system with the tile Maps is going to change where you don't have individual layers inside of one tile map anymore and instead you are defining one tile map layer inside of the node and if you want to have multiple layers you are creating multiple tile map layers in fact let's have a look so here we are in gdo 4.3 at the bom you can see that it's 4.3 beta 2 the latest available version and in there we still have tile layers or in other words if you look at station the game looks basically the same however the icon is a bit different and if I try to add another node and just type tile map we now have the old tile map that's the one I have already used and this is depreciated at this point instead you are supposed to use multip tile map layers and that is this tile map layer it works in pretty much the exact same way the only difference is that on this tile map you do not have individual layers anymore instead every single node is supposed to be a separate layer besides that everything else works just as before so the change is really minor the only other difference that is relevant to us is that visual shaders look very slightly different so here's the Shader we are going to create later in 4.2 and here's the one for 4 .3 so in 4.3 we have a few more colors but that's literally it functionality wise nothing has changed so let's return to the main project now I suppose if you don't know that much about inheritance and good do this yellow text might be a bit confusing so let me do a demonstration the way I have created all of these levels is by going to scene and then new inherited scene after which we have to select one scene that is going to be our parent scene which in my case is always going to be level. TSN if I double click on that we have created a new scene and then we have some yellow text for all of the nodes and Via that system you can simply select one layer and then start drawing whatever kind of level you want to create so in there you can select anything from the title set and then start drawing that's literally all I have done for underground station and sky and if you want to save it you want to rename the parent node for example this one could be the test scene then save it and then you get test. TSN save it and you should have under scenes and levels another scene that you can play with although not something I want to do at the moment next up if you look at project and project settings you can see that inside of run our station scene is the starting scene which means if I run the entire game we can see this station level there we go besides that if you look at textures I have set the default texture filter to nearest which is what you are supposed to be using when you have pixel art other than that if you scroll a bit further down we have the 2D physics layer and in there I have a bun of named layers Rin player enemies transition and projectiles not too important for now but just keep it in mind other than that if you look at input map there we have a whole bunch of actions I am going to cover input for mouse and keyboard and for using a game pad meaning for the actions for example for shooting we have a left Mouse button and two buttons you could be choosing from a game pad once again I'll talk about all of this later on for now it's not too important finally there's one more Scene that is not going to be part of the game but that is going to make our life much easier tutorial data in there we do have quite a bit of material let's have a look at the player animation we have an animated Sprite 2D a Sprite an animation player and an animation tree I will explain all of this in a lot of detail later on the reason why I have it here is because later on for for example for the animation player the player has a huge amount of animations that are all fairly simple but it took a while to create all of this having all of this in here makes our life quite a bit easier later on the same with the soldier animations in there we have an animation player with a bunch of animations let me play one you can see this is all we are doing in here although for now this really isn't too important so for now I only want to have level and station open because those are going to be our main scenes that we will work on and the first thing that we are going to work on will be the player movement for now I don't want to worry about Graphics so we are going to be using the G logo for all of this now for the movement system we want to implement a whole bunch of abilities number one the player can move left and right and has acceleration and friction meaning the movement gradually changes number two the player can jump at various Heights depending on when the player releases the jump button next up we're going to expand the jump mechanic a bit more after the player walked off a cliff there should be a small window of time where the player can still jump which is called a coyote jump besides that when the player is just about to land and presses jump there should be a jump the moment we land this system is called jump buffering and both of these systems make the game feel much snappier besides that the player is also able to dash which we will Implement via a tween finally the player can duck but that's not important until we get the graphics part and that is all we need for the basics of the player although there's one more thing that I do want to talk about inside of the game we have a whole bunch of entities and the player is one of them but besides that we also have the soldiers the monster and the drones and all of these are somewhat similar meaning they can share a couple of attributes and shaders in other words I want to have a parent class that contains all of these methods and then the children are going to be the nodes that we actually see in the game let's start with that for all of that inside of gdau I want to create a new scene and the parent scene is going to be a character body 2D which I want to rename right away to entity after that I want to save the scene under scenes and then create a new folder called entities in there app I want to save the entity scene and then we have a name in the tab that's a good sign besides that for the entity I want to have a collision shape 2D although I only want to add the Noe I do not want to add an actual shape in there that's going to come later when we actually create create the specific entity so for example the player and the Drone have different Collision shapes speaking of which we can start right away I want to go to scene and then new inherited scene the scene I want to create should have a parent of entity. TSN if I now click on open we have an entity parent node or well a character 2D and then Collision shape 2D is yellow because it's getting inherited from the parent entity scene this entity I want to rename right away to play here and to make sure we can see something I want to add another note which would be a Sprite 2D to which I want to add the gdo logo so drag it into the texture and then we can zoom in and there we go we have the gdo logo once we have that we can also set a collision shape and this has to happen inside of the player which means I want to go to shape and then select a rectangle shape and set it to the right side something like this looks okay now we can save it under player. TSN cool with that we have the very basic player node this we want to add to our level so for example in the station I want to have the player somewhere and to keep all of this organized I want to inside of level add one more note which should be a Noe 2D and I am going to jump around quite quickly between the different noes so definitely pause sometimes if you get confused at the moment I am working inside of the level Noe and create node 2D called entities if I now save the level and go back to station we have another node with yellow text to that I want to add the player node like so and then let's move the player I don't know let's say here although the player is a little bit large to fix that back inside of the player scene I want to go to transform and then set the scale of the player for now to 0.25 for X and Y on top of that we need to update the Collision shape to align with the graphic like that if I now save all of this and go back to station this looks much more reasonable so we can move the player somewhere here although that being said I think the Collision shape is a little bit too large it should only cover the graphic nothing more that's better to make sure all of this is looking good let's run the entire game and that seems all right I guess what we could also do to the player is add another node which would be a camera 2D which we do want to make sure is enabled which it is by default and then for the zoom level I want to go with five for X and Y let's try all of this again and that should be looking a lot better cool so now we are focused on the player the issue now is that the player doesn't do anything at the moment and for that we have to add a script with the character body Tod player selected I want to add a script and then player. GD in the same folder so create and now we have a script for the player in there I want to Define quite a few attributes that should be changeable later on inside of the editor or in other words when the player node is selected inside of the inspector I want to be able to set something like the speed or the acceleration the friction the gravity the cool down for the guns and things like that or in other words I want to create export variables for example for the speed which for this particular example should be an integer with a default value of 200 which you could write like this it simply means that for the speed variable we are only accepting integers and the default value is going to be 200 but if you look on the right we have speed and we can update the value although all of the values have to be integers now this is not usually what you see in Gau because it takes a bit longer to write than doing something like this but the result would be the same if you writing this world operator the data type of the first value that you assign to this variable is going to be the only data type this variable can accept so in this case this would be an integer I can save all of this and inside of the parameter we have the same result now this we can organize just a bit better because later on we are exporting quite a few variables so I want to organize them via export groups to assign a name you have to an argument which should be a string in my case the first one should be move if you now look at the inspector we have a drop down menu that we can open and in there we have to speed if you want to have multiple groups you can add another export group as well for example later on I want to have one for jump and any export variable you assign afterwards is going to be inside of this group for example if I save now at the moment we can't see anything because we are not exporting a variable in there but for example what we are going to Define is a variable for the jump underscore strength which is going to get a default value of the integer 300 if I now save all of this on the right we have a tab for move and a tab for jump that way the inspector doesn't get too cluttered which I think is better but is entirely optional if you don't think these groups are useful you can just skip them entirely besides the speed for the movement I also want to have a few more variables the first one is the direction of the player which is going to get a default value of vector 2 do0 all in uppercase letters that way we are creating a vector 2 with X and Y where both values are zero and this we are using for the movement very soon besides that I want to have one more variable called cancore move which should simply be a Boolean value that by default is going to be true also Direction and move should not be exported they are simply there to process what we are specifying in the game but they shouldn't themselves be modifiable by the game designer to actually make the code do something I want to use the underscore process function which is going to be run on every single frame of the game in there I want to first of all check if we can move in the first place and if that is the case I want to get the player input and then apply the movement neither of these functions exist at the moment so gdo is going to complain to fix that I want to create Funk Gore input without any parameters and it doesn't do anything at the moment and I want to create Funk apply movement this one also doesn't do anything at the moment to get started with the input I want to get horizontal movement input for which we're going to overwrite the direction vector and since we are only moving left and right this should be Direction dox This value should be set by the left and right movement from the input map or in other words if I go to project and project settings and the input map we want to get the left and right input and determine from that if the player wants to move left or right the best way of doing that is with input and then get access this one measures the strength of the left and right input so what we have to add in here as an argument is the negative action first of all which in our case is the left input next up and let me expand the code a bit we do wants to have the positive action which in our case is going right so the right input good do is then going to combine these two values and we're getting a combined output in the form of a floating point value I can demonstrate that right away actually I want to print direction dox if I now run the code the game doesn't crash that's a good sign and in the output you can see a zero so this happens down here but if I press D on the keyboard we're getting a one and if I press a we're getting a negative 1 so with that we're getting a Direction that's a really good sign but you might be confused now I said that we're getting from this method a floating point value returned but in the out put let me open it we have gotten Zer 1 or 1 so what happened here and well at the moment I have only used the input from the keyboard which can only be on or off on basically any keyboard but this changes if you're using a game pad so let me run all of this again but now I am going to use input from my game pad and in there the fero I go to the right you can see that we get an increasingly large value that ends at one and if I go to the left we're getting smaller and smaller values that end at 1 meaning with that I get much more detail in my movement you do want to be aware of these differences but in our case they don't actually matter that much but keep them in mind in some cases they can be really important anyway with that we're getting the direction for left and right this we want to use to actually move the player which happens inside of apply movement in the most basic sense what we want to do is overwrite the velocity of the player and at the moment we want to update velocity dox which in the simplest terms could simply be Direction dox multiplied with the speed of the player the variable that we have defined earlier after we have that we want to call move and slide to actually apply the velocity to the movement and with that if I run the game I can move the player left and right this works I on the keyboard or with a Gamepad so we are capturing both mouse and keyboard input or Gamepad input also if I move very carefully on the game pad to the right I can move very slowly or rather I can Define the speed I want to move at whereas on the keyboard I only have move or not move basically now while this is a good start this kind of movement usually doesn't feel good so at the moment if this is the time of the game and this is the movement speed our player has a movement graph that looks something like this we have no movement at all then all of a sudden we're moving at a certain speed and then we stop moving this does not feel natural what you would rather expect in proper movement is a curve that looks like this where player accelerates then has a speed and then decelerates at some point this is also what we want to have in the game once we know that direction not X is not zero we want to move from zero to our maximum speed and then once Direction not X is zero again we want to go from our maximum speed to zero and this should happen over a certain amount of time for that I don't want to have this very basic velocity update anymore instead to apply a very simple mechanic for left and right movement I want to check if Direction dox has a value different from zero if that is the case we want to accelerate from zero to our maximum speed but we still want to update velocity dox and to get the value we want to use the move toward function which wants to have a couple of arguments you want to have a starting value a final value and then a Delta value which is going to Define how fast we are accelerating our starting point is going to be the current direction dox our final value is going to be Direction dox multiplied with this speed finally for the Delta value I want to have an acceleration that we have to multiply with Delta that we getting from process to make sure all of this is frame rate independent now for that to work inside of apply Movement we have to pass through the Delta argument and this has to become a parameter inside of apply movement the only other error we are getting now is that acceleration doesn't exist but that we can fix quite easily I want to create another export variable called acceleration which is going to be an integer that by default is going to be 500 if we now run all of this inside of the game I can press to the right and the player is moving and if I release the button the player doesn't stop moving that is because inside of direction we are only doing something if the player is not moving so once the player is moving we cannot change the movement anymore although inside of the game the player movement was really slow that is because inside of move toward W I have made a mistake this should be not direction. X but velocity dox X that way if I now run all of this again if I press to the right the player starts to move much faster but there's still acceleration or in other words if I set the acceleration to a really low value let's say 100 you should be able to tell this much better if I now press to the right we are starting slow and at some point reach our maximum speed that's a good sign although I want this value to be 500 and also inside of apply movement if the player stops holding down left or right the player should feel some friction and slowly move back to a movement speed of zero or to be a bit more specific velocity. X very slowly should become zero again implementing that is going to be your exercise I want you guys if there's no more input to gradually change the player speed to zero pause the video now and figure this one out on your own inside of apply movement I want to add an else statement this is only going to trigger if direction dox is zero and if that is the case I want to update the velocity dox once again via the move to W method for the starting point I still want to use velocity dox but now the target value should be zero and for the Delta value I want to get some kind of friction that we will Define in just a second and multiply it with Delta now at this point gdau is going to complain that friction does not exist that we can fix quite easily I want to have another export variable called friction for which I have set a default value of 600 I can now Run the game again and if I move to the left we are accelerating and if I stop holding it we are are getting some friction and slowly stop and this is feeling much better although I think the game is quite soft in terms of acceleration and deceleration the default value for friction could probably be 900 and for acceleration we could go with 700 let's try this again and now we are starting faster and we are stopping also much faster now these values are really subjective so play around with them for your own game and just see what feels good there just isn't a universal answer or well in other words whatever feels good to you in the game is the right answer and the only way to get there is to experiment a lot so play around in my case though I want to go to the next part and that is jumping for which we will need two parts a jump strength and gravity now in this game I want to have the gravity as an export variable inside of the player meaning in there I want to have gravity with a default value of 600 I am only doing this because the player is the only entity inside of the game that has any kind of gravity if in your game you want to apply gravity to more entities you want to have this gravity either in some kind of global script or inside of the physics part in Gau so it's more globally available but I want to keep things simple now for jumping to work we first of all need gravity which I want to keep in a separate function so apply underscore gravity and then create Funk apply underscore gravity in the most basic sense all that we want to do in here is velocity now dot y plus equal gravity multiplied with Delta so it's frame rate independent for that we will need the parameter Delta and then has Delta into apply gravity once we have that I can run the game and at the moment you can't see anything because inside of the station the player sits on a collision shape but if I move the player to let's say here is and try all of this again player should be falling and he does perfect also apply gravity should always be applied it doesn't matter if the player can or cannot move so next up we want to apply jumping for that inside of get input I want to capture the jump input for which we want to have an if statement if input and is action just pressed the just press is really important because we only want to capture this input once this specific input that we want to capture is jump and if that is the case I want to set a jump variable to true now this jump doesn't exist right now so gdo is going to complain to fix that under my jump section I want to create a variable called jump which is simply going to be a Boolean value that by default is false once we have that inside of apply movement I want to move move and slide a bit further down and then add a section for jumping if jump is the case then I want to update velocity doy and set it to the negative jump strength that way the player is going to go up if I try all of this I can press space and the player is moving up the issue is the player never stops moving up and that is because this jump keeps on being true forever which means we keep on lowering velocity doy which is not ideal to fix that I want to set jump to BS once we have done a jump if I now tra off this again I can jump and the player only does a jump and I can also move left and right and that is coming together this is a good start but this jump system we have to modify quite a bit and I guess the part where we can start is terminal velocity to illustrate that if I go back to the level and then remove these platforms so I want to get rid of those two and then you can see the player falling for a bit longer and I guess for that we can also move the player up just a bit if I now Run the game the player is going to fall and it's going to fall increasingly fast this at the moment isn't particularly visible because we still have other things there that the player can land on and the entire distance isn't even that much but the issue is still important that the longer we fall the faster we fall and at some point we are falling so fast that there's simply no point to controlling the player anymore which we really want to avoid and avoiding all of that is actually quite easy we want to set on that jump I guess right below the other export variables another export variable that I called terminal uncore velocity for which I have set a default value of the integer 500 and then when we are applying the gravity just to demonstrate what we are getting I want to print velocity do y if I now run all of this you can see that we are getting a whole bunch of values while we are falling and we are landing at this point so I want to make sure that we never fall faster than 500 for that all we have to do is get velocity doy once again and then use the minimum function which is going to pick the smaller of two values in there I want to have velocity do y itself and then the terminal velocity that way once again I can print velocity doy run the entire game and now you can see that we are falling but we never exceed 500 this is our maximum fall speed cool that is working well so we don't need the print statement anymore next up I want to work on a variable jump speed if this is the player and we are pressing jump the player should be jumping but then we only get to the max maximum height if the player keeps on pressing jump but if the player releases the jump button let's say somewhere here then the player should start falling from this point and this needs to happen gradually the way I implemented that is that once we are jumping and the player releases the jump button really fast and we are increasing the gravity for a short amount of time or well until we are landing for that I want to create one more variable which I have called faster score Fall by default this one is also going to be false after that when we are capturing the input I want to check below the jump if input is action just released for the jump action if that is the case then I want to set faster fall to true that value we can use inside of gravity because in there we can add velocity do y once again and set this value to Velocity doy divided by two if faster fall is the case and we are moving down so and velocity dot Y is smaller than zero if that is not the case else we simply keep velocity dot y with that let me move the player back to the ground area run all of this if I now jump we can only jump a very small amount so something went wrong and I think to diagnose what's happening here let's print faster fall if I now Run the game you can see that we are getting faster fall all the time even though it should only be the case if we are in the air and we are releasing the jump button we only want to set faster for to true if the player is releasing the jump button and not is on Lor or in other words if the player is releasing the jump button if we not on the floor and velocity do y is smaller than zero so we are going up with that if I run this again you can see in the output that now fasta fall is false which means if I jump we're getting Thea jump height but if I start jumping and then release it we are setting faster fall to true so now we can only jump a little bit to fix this last bit when we start a jump I want to set jump to fults and faster fall fults as well let's try this one again and now I can jump the full height I can jump a bit and then release the button and now every time I jump again faster fall is faults when we start to jump so that way if I press jump very quickly we only jumping a small bit but if I hold down the button we are jumping much further and then you can control the jumping height quite a bit and while we are here there's one more thing that I do want to work on if I run the game again the issue is that the player at the moment can just jump in the air so we basically fly which obviously is not ideal for a platformer I only want to allow jump if the player is pressing the jump button and in there I want to check if is on lore and only then do we allow a jump that way I can run all of this again and I can press jump if we are in the air we cannot jump this only works on the floor so that is much better we are still not done with the jumping though because there are two more things that I want to implement that I talked about earlier we want to have a coyote jump and a jump buffer for coyote jump if the player falls off a cliff and then presses jump right away let's say after 0.1 second then the player still gets to jump even though technically he shouldn't be allowed to while this system doesn't make any sense in terms of physics in practice it makes the game feel much better and that's all we really care about for jump buffer if the player is falling and presses jump just before landing then we want to jump right away with that we avoid an awkward pause when the player is landing for both of those systems we are going to need a timer or well we're going to need two timers and to keep everything organized I want to add inside of entity another section called a note and ers although inside of the entity itself we are not going to add any timer we are just going to save the scene now inside of the player we getting a note called timers and to that I want to add two timer notes two timer notes the first one I have called coote then we can duplicate this the next one is called the jump buffer both of these need to be one shot they should not be repeated also auto start is not going to be the case for the wait time for the jump buffer I want to have a value of 0.25 or a quarter second for the coyote jump I want to have a value of 0.15 once again these are values you can play around with on your own there's no Universal answer here once I have those two timers back inside of the code to get started with the coyote jump I basically want to start the coyote jump timer if the player is falling off a cliff which means first of all we have to figure out when the player is falling off a cliff for that we want to work inside of a Ply movement and we don't have to print fast a fall anymore basically what we want to check after we have done all of the movement we want to know if the player is currently on the floor and if we are then updating all of the movement is the player still on the floor afterwards and also is the player falling down then we pretty reliably know if the player is falling off a cliff to figure this one out I want to create a new variable bar oncore floor which is simply going to be is on floor so that way we know before we are applying the movement if the play is on the floor or not and then after we have done the movement we want to check if on floor and not is on floor that way we know if the player was on the floor and is not on the floor anymore on top of that I want to check and velocity doy is greater or equal to zero if that is the case we want to for now print B of Cliff let's try this one inside of the game I can move to the right and we are falling a cliff let's try again we're falling again and once again this is working pretty good cool so once this is the case I want to start the coyote timer and then you can simply type coyote and we get timers and coyote I want to start this timer and while the timer is running I want to give the player the ability to still jump now for that you could work with the signals and check if the coote timer hasn't sent a timeout signal and during this time allow for a jump that would be possible but kind of Overkill what I think would be much better let me minimize apply movement and apply gravity and the bunk uncore process inside of the input we know when the player is pressing jump and at the moment we are allowing a jump if the player is on the floor this we can expand we want to allow a jump if the player sters on the floor or if the coyote timer has some time left so essentially once the player is falling off a cliff we are starting the timer and this timer runs for 0.15 seconds and during this time the player is still able to jump let's try this one although it's going to be a bit difficult to demonstrate so I got to follow off the cliff and I can still jump let's try again there you can see it works fairly well the duration might be a bit too long so let me fall a bit longer and I cannot jump anymore this you might want to test on your own game because it's probably very hard to see on YouTube but it definitely works and I guess to demonstrate that this is working we can set the coyote duration to 1 second which would be a crazy long time so now I can fall off and still jump even after falling for a while which does look very strange indeed let's not do that 0.15 seconds I think it's a decent value with that covered we can work on the jump buffer this part is going to be another exercise for you if the player is falling and presses jump just before landing make the player jump right away or to be a bit more visual if the player currently is falling and we are just about to reach the floor and the player presses jump with a bit of space before the landing then the player should jump right away as soon as we are landing for that we already have a timer Noe use that to implement this jump buff a mechanic so pause the video now and see how far you get we have to expand the input for the jump just a bit if the play has pressed jump at the moment we are only checking if we on the floor or if we have the coyote timer running besides that I also want to check if velocity do y is greater than zero I.E we are falling and not is on floor or in other words we are falling and we are not on the floor if that is the case I want to get the jump buffer and start the timer after that inside of apply movement at the moment we are only checking if the player is jumping or well if the jump variable is true but we also want to check or jump buffer has time left this we have to combine with and is on lore we are going to jump if the player is pressing the jump button or if the jump buffer is active and we are on the floor which can only be the case if we have recently landed so with that that I can try the game again and now I can jump right away if I press jump just before landing and just to demonstrate if I comment out this part and run all of this again and I try to jump multiple times there's always a very small pause between the jumps which just doesn't feel good so this jump buffer can make quite a bit of a difference but that's basically all we need to implement a jump buffer so I hope this part wasn't too difficult the last major part for the movement is going to be a dash mechanic for which I want to go all the way to the top and then under move I want to have another variable called Dash which is going to be a Boolean value that is false by default besides this variable I want to export another variable and for this I want to have export range with a value from 0.1 1 2 2 which is going to define the variable dashore cool down by default I went with 0.5 this variable is going to Define when the player can Dash again after having just dashed and if you have export range you can go to player and under move you now have a slider that sets a floating point value which is quite nice to work with so with that we first first of all want to figure out when the player is pressing the dash button and let me clean all of this up just a bit there we go inside of get input I want to check for Dash or well Dash input to be a bit more precise but you get the idea in there I want to check if input is action just pressed and we have a dash action although we do need a second condition and velocity dox you could add is different from zero but it's not really necessary the basic idea here is that the player should only be allowed to dash if we're moving in One Direction we cannot really dash in place that would be weird if this if statement triggers we want to set Dash to through with that in place we can work inside of app movement and then work on the dash first of all like for the jump I want to check if Dash is the case and then set Dash to faults right away now we have to implement the actual Dash mechanic and for that I am going to use a tween I want to have a dashore tween which we are creating via create twin now in case you don't know what the twin is it's B basically a move to function that is much more powerful or in other words we can specify any attribute of the player and then gradually change the value of this attribute over time this we can do in a couple of different ways twins are quite flexible for example what we could be doing is we can use the dash TW and then tween a property first of all for that we will need an object which in our case is the note itself so self then we need the actual property which needs to be a string in our case the velocity although in our case we only care about the X part of the Velocity which we can get via colon and then X next up we will need the final value which in our case is going to be velocity dox plus direction do X multiplied with some kind of static value that is going to be our Dash distance but now let's go with 600 finally we will need a duration which I have set to 0.3 seconds and as opposed this part could be slightly confusing basically imagine that this is our player and our player is currently moving to the right from that information we want to make the player Dash in this direction or in other words we want to get the current velocity and then update it by adding the current direction multiply it with some kind of speed let's try all of that and see what happens if I now Run the game and press Dash the player is Dashing so that is working although it's quite strong that is because after playing this tween our velocity is really really strong so ideally after this tween is finished we want to set the velocity of the player to something more reasonable or in other words we are stopping the player for that we can get the dash tween again and then connect it to a signal the signal that we want to Target is called finished so we know when the tween is finished and then we want to call a function which I have called on dashcore finish this function doesn't exist at the moment so let's do it all the way at the bottom I want to have Funk on dash finish if that one is the case I want to get the velocity dox of the player and move to Ward from the current value so velocity dox to Zero by a certain value I simply added 500 in here to keep it simple if I now run all of this again I can move to the left and dash and now we are stopping which is much better and that is actually controllable I can also jump and dash this is mostly working the one thing I don't like about it is that if we are dashing gravity is still applied to us so we always falling down to fix that part under jump I want to add another variable the gravity uncore multiplier the value for this one and this always has to be an integer is going to be one and essentially once we start dashing I want to set the gravity multiplier to zero and when we are applying the gravity before we are setting the minimum value I want to update velocity dot y one more time all I want to do in here is get velocity doy and multiply it with the gravity multiplier also after we have finished dashing we need to set this gravity multiply back to one so that the gravity applies to us once more let's try all of that if I now jump and dash we stay in the air so that is working really well perfect that is looking really good we are nearly done there's just one more issue if I run the game again and let's say I jump and then press Dash really fast the player can basically Sprint through the entire level which obviously isn't good for that we have already started setting a dash cool down but we're not using it at the moment to fix that I want to add inside of the timers in another note I guess I can copy the jump buffer and change the name to dash cool down for the wait time we can simply go with 1 second we're going to overwrite this using the dash cool on variable anyway but one short has to be activated back in the code once the scene is ready or in other words Funk uncore ready is running then I want to get the dash cool down Noe and set the weight time to whatever we have specified inside of Dash cooldown this part isn't strictly necessary you could simply Define a value or a wa time inside of Dash cooldown and you would be good to go but I find this setup a bit more elegant because that way inside of the player under a move we have a dash cool down and that just feels more elegant I suppose this part is a bit more subjective in fact when I have created a coote timer and the jump buffer I haven't used that system so I'm not entirely consistent myself I suppose in your case if you create a real game be consistent either always work with the weight time inside of the timer or or have some kind of export range variable either way is fine just be consistent if you mix the two ways up it's going to get really confusing really fast now to use all of that we want to work inside of get input in there at the moment we are checking for the dash input if the player is pressing the button and if we have movement on top of that I want to check and not Dash coold down timer as time left and then as soon as we are pressing the dash button I want to start the timer so Dash cooldown do start and with that I can run the entire game once again I can now dash and there's always a delay between the dashes cool that's looking really good that means we are nearly done with the player movement there's just one more thing that we have to work on and that is the player ducking for that under movement I want to have another variable called duck actually I call this one duck King but doesn't really matter this is going to be a Boolean value that by default will be false after that inside of get input I want to have another section for ducking in there we are overwriting the ducking variable and the value here is simply going to be input is action pressed and important for this one we do want to get action pressed not action just pressed because this one should be checked continuously the input we want to check is called duck also this should only be possible if the player is on some kind of floor since those two values combined are going to return a Boolean value we are good to go now I suppose we could print the results print ducking and then inside of the game I can press the duck button and we're getting true or false although other than that it doesn't do anything at the moment to make it actually do something we want to minimize get input and then work inside of apply movement if the player is ducking we shouldn't allow left or right movement which means after we are getting the velocity from that part I want to check if ducking and then update velocity dox from that if the player is ducking we're going to set velocity. X to Zero that way if I run all of this again I can move left or right but if I press the duck button we do not get any horizontal movement anymore we can still jump and then we can move so this part is working this is a bit hard to see if you're just watching the video so definitely try this one on your own it's a bit strange if you don't see the proper Graphics something we are going to work on next but anyway with that we have quite a bit of logic for the player movement so we have written nearly 100 lines of code and I hope the entire system so far wasn't too complicated I suppose the one additional thing you could be adding is a wall jump for that you would want to check if the player's on a wall and then lower the gravity that would be a good starting point you would need a bit more but I think at this point you can figure this part out on your own in my case I am going to continue with the player Graphics that part is much more important the next major bid are the player graphics for which we have a ton of animations that need to be managed in fact the player consists of two parts the legs and the Torso the legs are controlled by the movement Direction while the Torso gets updated by the aim Direction which we don't have yet also for this section we will use an animation tree which I think lots of people struggle with I'll be extra detailed for that part first of all though back inside of Gau and to play a scene I want to add the Crosshair for which first of all I want to add a Sprite 2D to the player scene this we can rename to cross air and then if if you look at the graphics bit we have guns and Crosshair PNG this I want to direct in there and then we have the Crosshair at the moment this thing is a bit too large so let's go to transform and 0.1 might be a bit too small let's go with 0.25 we can readjust out of this when we have the proper player Graphics what is much more important for now is that we are controlling the position of this cross here the way you want to think about that is if the player is aiming to the right that I want this Crosshair to be roughly here so we are indicating visually to the player that we can shoot to the right and this we want to do for all of the directions the player can shoot to the top right up up left and so on we get in total eight directions also really important for this part we should get to this aim Direction via the mouse or via at the game pad speaking of which if you look at the project settings in the input map if you scroll down we have aim left Aim down aim up and aim right and those only have the joypad axes all of that we using the right joystick and those are only necessary for the game pad if we have a mouse and keyboard for the aim direction we will use the mouse for which we don't need an input map so it's not in here for all of that I want to work inside of get input we already have a few things in there next up I want to add aim I want to create two variables the first one is the aim input game pad besides that I want to have an aim input uncore Mouse and let's for now focus on the game pad for that basically all I want to do is to get the input from the right joystick and that I can get via input do get Vector get Vector works very similar compared to what we have seen with get axis the only difference is that get axis works on one axis while get Vector works on two so there we can get left right up and down we have to start with the left action or the negative action which in now case is aim left and let me expand all of this next up we want to have positive X which in our case is going to to be aim right the next argument is the negative Y which in our case is aim up and finally we will need the positive Y which is aim down and that is all we need if I now print aim input gam pad and Run the game I am only using my Gamepad now and I can move things around for example if I move the game pad joystick to the right we're getting roughly one and his zero if I go down we're getting roughly zero and one let me get it a bit better there we go and so on so this input works pretty well perfect that means next up we want to get the mouse input what we want to do for this one let me comment this part out and go back to the player scene so if I show my mouse there we go I basically want to get the direction between The Mouse and the center of the player or in other words if the mouse for example is here and the center of the player is here I want to get this Vector but for this part you do need to be careful because when we are inside of the station we have the player anywhere inside of the level so the center of the player can be a very relative number especially if you add a camera this can get a bit confusing although fortunately we don't really have to worry about it too much because inside of gdau there is a function called get local Mouse position which is giving us well the local Mouse position so we don't have to worry about the actual center of the player we only care about the mouse position inside of the player scene basically let me print a result so aim input Mouse I can now Run the game and it should be visible there we go so we can see if a mouse is to the right of the player we are getting eight and roughly zero if I go to the left of the center of the player we get ne8 and a very small number for y now this we can improve just a bit because this Vector that we are getting should be normalized that way I can run all of this again and now we can see the numbers a bit better if a mouse is to the right of the center of the player we're getting for the vector X being one and Y being roughly zero next up we have to figure out which of these variables to use and for that I have created another variable at the top under move I have controller underscore active which is going to be a Boolean value that by default is true I do assume that by default the player wants to use a game pad because that just feels better however as soon as we're getting Mouse input I want to disable this value but first of all I want to create another variable VAR aimore input this one is going to be aim input gamad if controller active and I realize this should be called gam pad just to be a bit more consistent so Gamepad active let's do it at the top here as well game pad active if that is not the case else I want to use the aim input Mouse we do have to refine this just a bit more but for now this is fine first of all I want to work with Gamepad active and for that I basically want to check if we have any kind of mouse input and if that is the case gamad active should be false now to track Mouse Movement we will need another inbuilt function in Gau called function underscore input because in there we can get the input event with which can track the mouse very easily all we have to do is if event is input Mouse motion this is going to trigger as soon as we have any kind of mouse movement for example I could print Mouse is moving if this if statement triggers which is going to be whenever the mouse is moving so inside of the game if I move the mouse we get mouse is moving if that is the case I will want to get game pad active and set it to fals also in there I want to check the same thing we have done inside of this line where we are checking the aim input if we get a value from this thing returned then I want to set game pad active back to true so with that logic as soon as the player is using the mouse we are switching to the mouse input and if the player starts aiming with the GamePad then we are using the game pad again now you might be wondering why do we only activate the game pad if the player is aiming in a different direction with the game pad why not activate the game pad if we are pressing shoot or if we are moving the player and well we don't need to if you look at the project input map for the left Movement we are already capturing the keyboard or the GamePad at the same time so for this part it doesn't really matter what kind of input we have the only part where we have to separate The Mouse and the game pad is when we are aiming but once we have that we can work on the next part and the issue we now have to fix is if this is the player we want to have a Crosser to the right to the bottom right and to the bottom at least for this section what we do not want is a Crosser in between so in this area and in this area it shouldn't be possible for the player to have the Crosshair we only want to allow certain positions which basically means that we want to round this aim input or to be a bit more specific I want to check if a input has any value which we can check via the length if this value is greater than 0.5 then we know we're getting some kind of reasonable movement and remember we can get a value that is very low because on a game pad you can move the joystick just a bit but we want to have at least some activation strength required here and if that is the case I want to set an aimore Direction which doesn't exist yet but at the top I want to create another section so let me copy the export group and I want to have a section for the gun for now in there I want to have an aimore Direction which is going to be a vector 2 that by default points to the right also I guess while we are here we can create an export variable that I have called Crosshair uncore distance which gets a default value of 20 with that back inside of the aiming section I want to make sure that the aim Direction gets only specific kind of values although that sounds almost too complicated basically all that we want to do is create a vector 2 with X and Y and this value we're getting from the aim input which is either going to be for the GamePad or for the mouse so in there I want to get the aim input do X and the aim input doy let me print the result so we can tell what's going on Aim input and let's run all of this if I show my mouse you can see that we are getting the same result we had earlier so if I am to the right of the player we're getting roughly one and zero so we know we are pointing to the right and if I use the GamePad I can press up and we are getting similar values so right now I am holding my joystick to the left and we're getting negative 1 and roughly zero so this is working reasonably well but we are still covering a whole range whereas I only want the player to be able to point to the right or up basically and that we can achieve by rounding both of them so aim input dox aim input doy and both should be rounded that way let me print the aim Direction I can run all of this again and if my mouse is to the right we're getting one and zero if I go up we're getting one and negative 1 and if I'm just above the player we're getting 0 and1 so this part is working pretty good I can also use the game pad and if I hold up we getting zero and negative 1 if I hold right we're getting one and zero and so on so that covers the input with that we simply have to get the aim Direction into the Crosshair Sprite the one we have created earlier and then we can update the position in fact for all of this I want to create another screen script inside of the Crosshair to keep things a bit more organized I want to create a new script and create a Crosshair then we don't need any of this and we can start writing our own logic although first of all I think if you look at scenes and entities this could be a bit better organized because for the player we are going to create a few more scenes so I think what's going to be a good idea is to create a new folder inside of entities called player and then put all of the player stuff so the crossair player GD and player scene inside of that folder it's not necessary but we are going to create a few more entities and this just feels cleaner all right next up we don't need get input anymore and instead I want to create another function let's do it right at the top function animate this function is going to cover all of the animations for the player and for now I want to get the Crosshair so this bright Tod that we have created just a second ago this Crosshair and on that we want to call a method I call this one update for which we're going to need three arguments the aim direction we want to know the Crosshair distance and we want to know if the player is ducking or not because if that is the case we want to lower the crossair by just a few pixels once we have that inside of cross. GD we want to create function update with a direction a distance and ducking all we really want to do in there is to update the position of the Crosshair and since this crossair is a child of the player we know that player is always in the position zero and zero which means for our purposes all we have to do is get the direction and multiply it with the distance and then we should already get something the last thing that we have to do is call this animate function that happens inside of process if the player can move I also want to call animate let's try all of that and now we're getting the Crosshair following the mouse so very happy with that and if I use the game pad I can point up up left to the left and I get all of the directions so this part is working pretty well if you feel like the crossair is too close you can simply go to the player on the gun we have crossair distance if I set this to let's say 50 and try the entire thing again then the Crosshair is much further away that is definitely too much so play around and see what value you like I'm going to stick with 20 nearly done there's just one more thing we need and that is we have to cover ducking for that I want to create an offset so bar duck underscore offset is going to be for now let's say six if ducking and if is not the case else it should be zero and this value I want to add to the position which means we have to add a vector two with X being zero and Y being the duck offset with that if I run the game again and the crossair is pointing to the right I can duck and to crossair is going down just a bit once we have the proper Graphics this is going to look much more reasonable although this isn't perfect yet because this six isn't ideal ideally what I want inside of the player under gun is a variable Ros hair y offset which is going to get a value of six and this value we want to use for the Crosshair and later on for a couple of other things and also this value doesn't change so it can be a constant so now we have to figure out how to get this Crosshair y offset into the actual Crosshair we could pass it in as an argument and I guess that would work but it doesn't feel right instead what I have done once this scene is ready so on ready I want to create a y of set and for that we want to get the parent of the scene and since that is the player in there we have the Crosshair y of set which is what we can use instead of this six to make all of this a bit more flexible the end result though should still look the same so I can duck and we get the same movement this also works in other directions that is pretty nice but now we are storing the offset for ducking in one central place so if we're changing the graphics later on we have to update one number and then everything updates along with it which is much more reliable cool with that we have the crossair and that covers the entirety of the Crosshair actually so I can close this script to keep things a bit more streamlined next up I want to create the actual player graphics and that part is going to get a bit more complex so to keep things a bit more organized I want to create a separate scene purely for the player Graphics which means a new scene the parent scene is going to be a node 2D let's call it player Graphics this I want to save under scenes entities and ler and then we are going to need a whole bunch of animations and for that I want to copy in a couple of things so let me open the scene tutorial data in there we have the player animation we have a Lex animated Sprite with duck idle jump and run very simple animations besides that we have the Torso and let me hide the so soier that part comes later inside of the Torso we have a Sprite sheet with all of the player images in fact let me open that part under entities we have player.png if I direct this thing in you can see that on there we have all of the various positions for the Torso with the different guns the first line is for the AK the second line for the shotgun and the final one for the rocket and if you go down a bit we have all of the lack positions there's quite a bit of white space because I messed up the planning but that's really not that much of an issue to animate the Torso we are using an animation player and in there we have all of the animations I talked about earlier so for example in there we have AK down which is basically one image of the player pointing down with the AK selected if I go to Rocket down or Ro down left we're getting the rocket launcher pointing to the bottom left so that's really all that's happening in here basically via the animation player I am selecting one frame from the Torso Sprite that part isn't hard to do it's just tedious so it's kind of annoying to do it for a tutorial to skip all of that I want to copy the Lex the Torso and the animation player and copy them and then drag them into the player graphics you should still get something like this where you can animate the player torso via the animation player so let me select the shotgun left and we're getting the shotgun left also for the ls for the animated Sprite you can get idle and if you click on run and play the animation you should be getting an animation so that part is also working although I do want to set idle to autoplay and I think before we continue definitely have a look around the animation player and the animated Sprite so you know the setup of what we're working with once again none of this is particularly difficult it's just a lot of stuff so I hope it's not overwhelming now for all of this let me select the default AK right so we have the default look of the player this I want to add to the actual player scene in there I want to add another scen player graphics and this should be a bit more in the center something like this and then we don't need the Sprite Tod anymore we can just get rid of it entirely also for the Collision shape we want to update the shape do something that fits the player a bit better in fact I don't want to have a rectangle at all anymore I want to have a capsule shaped 2D which usually feels a lot better and then we have to get the points just write something like this and make sure that the bottom of the player aligns with the Collision shape so right now we have half a pixel of an offset to fix that for the player Graphics under transform we want to move up by 7.5 pixels and then align the Collision shape along with it and that looks good now we can get rid of the ruler and we have a proper Collision shape let's try the game and this is feeling much better all the collisions also work just fine and we can still Dash that's a good start perfect that means we can close the tutorial data scene and then work inside of player graphics for this one we want to add a script to player Graphics which should also be inside of entities player and then we can call it player Graphics that part is totally fine there are two things that we want to do in here number one is we want to update the legs which we are going to do via a function and for this function we will need three arguments the direction if the player is on the floor and if the player is stucking although for now we don't want to do anything in here because first of all I want to create another function called update Oro for this one we will also need a direction although for this direction we're talking about the aim Direction while the direction for the legs was the moving Direction but since those two are separate functions we can keep direction for the Torso we also want to know if the player is stucking and finally we want to get the current gun because for the Torso we have three different gun animations and that we have to account for that comes later though for now simply pass in here is fine so with that I don't need tutorial data and inside of the player we already have an animate function I want to get the player graphics and then call update underscore lags for which we need three arguments the first one is the moving direction of the player or the direction Vector we have said earlier the next argument is if the player is on the floor or not for that we can use the inbu function is on floor finally we want to know if the player is ducking or not that is simply the ducking variable cool with that we are calling this function with all of the proper arguments that we can already use right away because I want to flip the graphics if the player is moving to the left let's add a commment for flip and basically all I want to do if Direction dox exists if that is the case case I want to check if the player is facing to the left or to the right and use that to flip the legs by default they are pointing to the right but if the player is moving left then obviously we want to flip all of this on the horizontal axis but really important once the player stops moving we still want the legs to point to the left so we are only going to update the animation if the player is moving that way if the player moves to the left stops moving we keep the left animation even though the player isn't actually animating all we need for this part is the legs and then the parameter flip H this wants to have a Boolean value which we can get via Direction dox being smaller than zero that way I can run all of this if we're moving to the right the legs are facing in the right direction and if I'm moving left they're being flipped and this works even if we're not moving so quite happy but obviously this still doesn't look amazing because we need an actual animation or to be a bit more specific we want to set the animation State because we for the legs are working with an animated Sprite for which we have four different animations duck idle jump and run all we have to do in the code is to set the right animation for example what we could be doing inside of X we can set the animation to run if I now run all of this the player is running and this still works with the flipping so we are always pointing in the right direction but we do have to select the right animation or to be a bit more specific we want to set the right animation state for which I want to create a variable state which by default is going to be idle but only if we are not ducking if we are ducking then the state should be duck there should be an else in there as well and this state we are then using for the actual animation let's try all of that if I now duck we are getting the proper duck and idle animation and this works pretty well so we can move around we can stop moving we are facing always the right direction and we're getting the right frame the Torso not being animated makes all of this look a bit weird but that we're going to fix in just a bit first of all though I want to get the run and the jump animation first of all for running I want to check if we are on the floor and we are moving other words we have direction do X also I want to check and not ducking if all of that is the case I want to get this state and set it to run with that we can we can duck and we can run so that is working really well the last thing that we have to work on is the jumping because right now this looks a bit weird fortunately that is just another if statement if we are not on the floor then the state should be jump let's try this one and if I jump we're getting the jumping frame so with that we have the Lex covered that is working really well let's fall off a cliff and that's also working really good very nice that is actually all we need for the lag animation so we can minimize the function and never think about it again next up for the Torso there's one very easy thing that we can already do that is updated position if the player is ducking all we need for that is to get the Torso and then update the position in fact we only care about position do y because the X position should never change and for this y position we want to get the Crosshair y offset that we have said earlier and I realized the name here might not be perfect let's just call it y offset although with that we have to reopen the crossair script because this line wouldn't work anymore simply want to get y offet now we can close this script and then we work inside of the player Graphics like we have done with the crossair I want to get on ready VAR Yore offset which we get from get parent and then ycore offset after we have that position doy is going to be the Y offset if ducking is the case and if it is not the case else it's going to be zero with that let's try all of this again I can duck and the Torso doesn't update and I think I know why inside of the player when we are calling animate we are only calling update laxs not update torso for that we can duplicate this line and now we want to update the Torso for which we need other arguments though first of all for update torso and let me actually copy the parameters for the direction I want to get AIM Direction not the direction itself direction is for moving aim direction is well for aiming ducking can stay the same and current gun doesn't exist at the moment and we're going to work on this in just a bit for now I going to set this to zero to just ignore it and now we should have ducking in the player that is working much better that means we can now start with the proper animation so inside of player Graphics in the animation player and let me disable the animation for the legs because that's going to get annoying for the Torso we have an animation player with a huge amount of animations now you could manage all of this writing code it would be possible but well really annoying to work with instead what you would rather use is an in buil Gau node that is called an animation three this part essentially controls an animation player in fact when you look at the inspector there we have an animation player and for all purposes we want to direct our animation player in there so now via this animation tree we can select one animation from the animation player we just have to figure out how and for that we can set a tree route and and there are a few things that you can do in our case we want to create an animation State machine if you click on that you get something like this looks a bit strange but let me explain basically what this thing is doing it tries to figure out the state of the player so in our case we have three different states if the player is holding the AK47 the shotgun or the rocket which means from the starting position we can add a node so if you right click you can add an animation so we can check any of the animations from the animation player but this is not actually what we want to do instead we want to create a blend space 2D and this we can rename to AK also I want to move it a bit further to the right something like this and then I want to connect the start point point to the AK for which you want to select this symbol thingy then select start to AK this means that we are transitioning from start to AK by default and then inside of this node we can select an animation for this transition you can set this to immediate sync or at end we're going to work on this in just a second for now we are simply going immediately to the AK animation that means we want to get back to the general selection thingy or this mouse thing and then click on the pencil and then we are getting something like this this is a blend space 2D and this we can also extend by clicking on this symbol so what is happening here in the most basic sense the way you want to think about it is that we are getting this Crosshair in the middle that thing we can control via code but you can also move it with the mouse so if I move it around then we we are getting a point and we're going to update it later on Via the aim direction for example if the player is aiming to the right then we're going to set this point all the way to the right and what Gau allows you to do is to check if this Crosshair is close to a specific point that we are going to create and for that let me move it out of the way and then select this pencil which is called create points and then if I left click I can add the actual animation that I want to play which in my case is going to be AK right and then we're getting a point and once this crossair gets close to this point then we are playing this animation now for that to work we have to create multiple animations so at the bottom I want to left click again and then add another animation and you might be tempted here to add AK down but that would be incorrect because if you look on the left side there we have the y coordinate which is 1 and one so usually in gdau the coordinate system starts in the top left meaning if you want to go down you have to increase y but for this particular system the coordinate looks like this where the origin point is in the bottom left so if you want to go down you have to decrease y I have no idea why the coordinate system changes between these two different systems but it is what it is it can get really confusing now to get around that you could simply invert these numbers or alternatively you can simply add AK up at the bottom which doesn't feel right but it is what it is now you can see here this point is not actually at the bottom which is going to be a problem I'll fix that in just a bit first of all though I want to add one more point so we are getting a triangle for which we need three points the point I want to add for this one is AK down and then we have a triangle but I messed up two points this point at the top should be at the top border and this point at the bottom should be at the bottom border and if you try to drag these points you can't really do it theough is simply giving you the menu to move these points you want to select this move Point symbol and then you can direct the points like so in fact I would genuinely recommend to have this thing selected because if you have it selected and you right click then it can still add animations for example for this side I want to add AK left and then we get the final well not the final point but we get the first four points and Via that system we can move the Crosshair for example if the Crosshair is somewhere down here then gdo is going to play this animation if however the crossair gets to this point then we're going to play this animation which is the best way to manage loads of animations like we have for the player and for all of that if you have the animation tree selected once you have one of these blend space tods you're getting a parameter and in there you have AK and the blend position let me open AK again the blend position at the moment is 0.9 and roughly zero that is because our Crosshair is pretty much on the right side in the middle but if I change this position to let's say 0.5 and zero then I can get out and to Crosser has updated sometimes there's a bit of a delay but you get the idea so this blend position we want to update in the code for which we want to look at this script and let me go out of the main view I want to get in code the animation tree and then via indexing get the parameter in there I have AK and in there we have the blend score position and that value is going to be the direction that we are getting from the parameter for both of those we want to have a vector two with that system inside of the animation three the blend space we are controlling this Crosshair with our aim Direction now there's just one more thing that I do want to do when you look at blend at the moment this is continuous but that's not what we want we want to have this second Point select Ed that is because if you have this point selected gdo is trying to find continuous points inside of this animation but those don't exist on this point there's no animation instead we want to jump to the next point that is available which you get via this thing if I now Run the game we're getting an error that parameter AK blend and blend position doesn't accept a value of Vector 2 so what happened and well I simply made a typo this should parameters an easy way of getting that is if you have the animation tree and AK you can simply right click on blend position and then copy the property path with that you are getting the proper path next attempt the game doesn't crash anymore and now we're getting the right animation this is looking really good although we don't have all of the animations if the mouse cursor is in the top right of the player we don't have the right ones and the same for the other position so we have to add just a bit more that also happens inside of the animation tree in the blend space 2D we have to add four more points and this point is going to be your exercise add the remaining points to the blend space 2D in the animation tree there should be four more animations to add pause the video now and see how far you get back inside of G I want to maximize this thing again and then with the mouse cursor selected in the top right of this thing I want to add an animation for AK and remember the vertical axis is inverted meaning Up Is Down and Down is up or in our case we want to get AK down right and for the other side this should be AK down left on the bottom we want to get AK up left and AK up right there we go and this covers the entire Spectrum so if I now run all of this again the player should get a proper Sprite in every single Direction this works with the mouse or with the game pad perfectly fine so cool this is working really well that would cover one of the guns but now we have to fix figure out the other two or if we are looking at the code or the current gun we have to figure out which gun the player is actually holding right now we only have a placeholder zero in there on top of that the guns should be available globally that way the soldiers later on can also reuse the gun data and to make all of that work if I go back to the 2D screen and minimize all of the folders I want to add another folder which I am calling Global in that folder I am going to create a new script that I am also going to call Global click on Create and now in there we have another script this script should be available in every single scene which means under project project settings and autoload I want to autoload this script all the time for that I want to select the script in global and Global and then as a note name I want to call it Global as well now click on ADD and we have this script available everywhere which means if you're running the game you can look under remote in the scene Tre there we have Global available in every single scene that's a really good start and in there we want to create an enum that I have called guns and the guns we have are called AK shotgun and Rocket all in uppercase letters now you might not be entirely familiar with enams in Gau if that is the case definitely read the documentation on enums they are really useful but fundamentally they're also fairly simple basically via this system we are creating a bunch of constants called AK shotgun and rocket and we are assigning a value to them which by default is simply going to be an integer so the value Associated so the value associated with a is going to be zero the way you would access them let's do this in funcore ready you would simply want to print guns and then if you press the dot you get a preview of The Available values let's print AK once the scene is ready and if I run the game we're getting the output of zero because that is the value associated with a K by this system it's really easy to see when we have the guns what guns we have available for example for the player all the way at the top under gun I want to create a variable called current uncore gun and this value we're getting from Global and in there we have the guns if you now press dot again you're getting the available gun GS and the current gun at the start should be AK that way when we are animating the player I can pass through the current gun and also while we are here we want to give the player the ability to toggle through different guns for which we will need input one more time I want to add another section called switch and check if input is action rest and the action we are looking for is called switch I have to find this one in the input map for now let's make sure it's working I want to print switch now we can run all of this and I think in the game we have the middle Mouse button for switch and on the game pad it is one of the shoulder buttons yeah the top left shoulder button gets you switch that means the input is working now we have to figure out how to get the next value inside of the enum so at the moment we are on AK and if we pressing switch we want to get shotgun for all of that we always want to get Global and then the guns and I suppose while we are here let's print the result that we are getting if I now run all of this simply with global guns I am getting the dictionary with the the appropriate values so ak0 shotgun 1 and Rocket 2 and I can also access the values via the string so for example what we could be doing I want to get only the keys on this dictionary at the moment and don't forget to call it if I now run this again and I switch I am only getting the key names and on this I can perform indexing so for example if I want to have the first value I can get a okay that works just fine all of that I want to store in a local variable bar let's call it selected gun and for all of that we want to pick what we have just created now I don't always want to pick the first index instead I want to get the current value so Global guns AK a the value zero and then increment it by one and and if we exceed the length of the number of guns then I want to go back to zero now to fix the indexing part we simply want to get the integer of our current gun that way we are converting the enum to an integer which Gau is happy with so let me print this selected gun and run all of this we are getting AK and the integer part isn't strictly necessary you can remove it because remember we are simp simply declaring a const with a value so this part would also work but sometimes the good debugger is complaining about it I think for now he is okay we are simply not using the current gun argument but that's fine so for now I can simply add plus one to our current gun if I now run all of this again and I press the middle Mouse button we're getting shotgun shotgun and well this only works once that is because our current gun always starts at zero and we are never changing this value to fix that we actually want to update our current gun right away which is also what we want to print let's try this again and now we getting shotgun and an error that we are having string and in in operator plus so effectively what we are trying to do here on the first operation we are returning one of the keys which is something like AK shotgun or rocket and then once we have done this once we are trying to add the value one to it which obviously doesn't work what we actually want to do is to use the selected key to pick a value from the actual Global guns dictionary so in other words I'm going to use all of this in indexing and then get my Global do guns now this part should be mostly working I can press it once we get one two and then a crash because index 3 is not inside of this dictionary we have simply exceeded the length of it to account for that when we are getting the current gun I want to put this in parenthesis and then use modulus with length of global do guns and that way I can press the middle Mouse button and we hitting 01 2 forever this part is now working pretty good and I guess this line does get a bit more complex so maybe go through it in your own time but fundamentally we're getting the global guns dictionary and from that we want to use indexing to pick one item for that we're getting the global guns keys and pick one of the items depending on the current gun index that's all that's happening in here and that is also the value that we are passing through inside of animate the current gun is what we are passing through to play a graphics and update torso so now we can work in there and in here we can work inside of the animation tree more specifically we want to create two more blend spaces 2D the first one is going to be a blend space 2D for the shot gun this one is going to look very similar compared to the AK or in other words if I click on the pen symbol once again we are inside of this blend space let me expand it and then with this Arrow selected I can for example add on the right side the animation or shotgun or SG and short and right the same thing for the left side shotgun left then at the top I want to add animation for shotgun down and at the bottom animation shotgun up that would once again be the four main sides then we can do the corners in the bottom right we have shotgun up right on the bottom left we have shotgun up left in the top left we have shotgun down left and then in the top right shotgun up down right and I messed quite a few things up so let's fix that part really quick this part can be slightly fidgety but basically you always want to have either the corners or the edges but that is basically it so with that we can at the top go back to root and then we are in the overview and for example at this point it could remove this forward arrow and then instead go from start to shotgun if I now Run the game the animation for the player should be for the shotgun and something went wrong the player is only looking up so let's investigate inside of the animation tree at the moment I can't select anything because we are getting the path so what is happening here is that I have to select the arrow this can be really fidgety sometimes so make sure that you have selected the right tool anyway now I can go to shotgun and the main issue is that we are selecting a Contin use path but we have to get discrete points so with that this should work try and it's still not working so next attempt I think I know the issue now inside of the animation tree we are only updating the blend position for AK but if you look at the animation three inside of parameters we now have AK and shotgun so for the shotgun blend position we have to update a separate property path or in other words we basically want to update the animation tree for the AK position and for the shotgun position and then update the direction in the same way next attempt let's see if this one is working and there we go this is looking much better now we have the gun animation and everything else also works just fine that brings us to the next issue that we want to be able to switch between the shotgun and the AK also the AK by default should be the starting animation so it should be looking like this however if the player switches a gun we want to go from AK to shotgun or in other words we want to have another transition from the AK to the shotgun but this by itself is not going to work if we now go back to the 2D b space we are always going to get the shotgun because we are starting at the well starting point then we're going to the AK and then immediately we are going to the shotgun that is not something we want to do so with the transition Noe selected so click on this green thing if you look at the inspector you can see switch and Advance under Advance you can set a mode there's Auto enabled and disabled but this we don't really want to touch and then you can set a condition and an expression so essentially how this is going to work we only want to go from AK to Shotgun If a certain condition is met and the condition that we are looking for if I go to the script inside of the player the condition we are looking for is that the current gun is equal to Global guns and shotgun for example then we are going to the shotgun so how can we check for that and well for that you can either set a condition or an expression and well expression is the one you actually want to use condition I find is really limited so I tend to avoid it and expressions are very very powerful you basically write some GD script in here and then if this value returns true you're automatically going from AK to shotgun although we do have to set a few things up for that I want to work inside of player graphics and then for the animation Tre I have to add a script we don't have to change the name because we only have a single animation Tree in set of player Graphics this is totally fine in there we have to create the variables that we want to check inside of this transition node we want to write an expression that is basically going to be selected uncore gun is equal to options dotshot gun or in other words we are comparing the player gun with the available guns but for that to work inside of the animation tree node we have to have these two variables available which means in there we have to have a variable for selected uncore gun and we have to have a variable for the options for the options we simply want to get Global and then guns that's all we need here we want to essentially copy this enam dictionary for the selected gun I suppose for the starting point we always want to start with global. guns and AK that though we are going to override for that inside of player animation and let me minimize the animation Tre I want to update I suppose we can do that all the way at the top the animation 3 dot selected gun and this one should be the current gun that we are getting from the player that way inside of the game by default we have the AK selected but if I press the middle Mouse button we getting the shotgun and all the other animations still work just fine so that's a good sign although if I press the middle Mouse button multiple times nothing happens so we're not there yet but before we fix that I do want to talk about the animation tree just a bit more because this is really important to understand so this is a very simple animation tree we always have a starting position and by default we are going to the AK State and in there we have a bland space 2D that checks which kind of Animation we want to pick however from this point we can go forward to the shotgun if a certain condition is met condition we have outlined there after that inside of the shotgun we have another blend space 2D that selects the right animation inside of the shotgun State when you're getting started this kind of system can be incredibly confusing so I hope it's not too overwhelming if you play with it for a bit it should become fairly straightforward but it does need some time anyway at the moment the issue is that once we're get into the shotgun we can never go back for that I want to add another forward transition this one goes from the shotgun back to AK and for that we have to add another Advanced expression we want to get this selected uncore gun the one variable that we have created and also the one that we are overwriting and check if this is equal to options. AK if that is the case I can run the game again and now if I press the middle Mouse button we're getting to shotgun and if I press it again nothing happens because now we are trying to get to the rocket launcher that doesn't exist yet but if I press one more time we are back with the AK so this part is working just fine I can press again and we have the shotgun once more perfect and with that we can switch between the AK animations and the shotgun animation we simply have to set an advanced condition for any of these forward transitions alternatively you could also work with the mode that you don't Advance automatically and instead in code you forward to another then space 2D it's possible but I find it kind of tedious and having all of this automatically works much better so with that there is just one more state that we have to cover and that is for the rocket and this is going to be an exercise I want you guys to add the rocket launcher animations to the animation tree pause the video now and see how far you get back in the code I want to add another blend space 2D this one is going to be for the rocket could also be rocket launcher it doesn't really matter in there we want to add all of the rocket animations so at the top we want to get a rocket and this one is going to be for Rocket down then on the other end we want to get r o up there we go and let's move it down right away then on the right we want to have r o right and on the left we have our o left those are the four main points and for the corners in the top right I want to have rocket down right then we have rocket down left and top left there we go two more points we have r o up right there we go and finally we have r o up left and once again move the points in right position this covers all of the animation states that could be possible with that we can go back to Rocket and now we have to add the forward conditions and we are going to need quite a few so from the AK we can go to Rocket and from rocket we can go to AK and now we have an issue since these animations work automatically we have switching between them really fast and if you look at this inside of the game this is not working ideally let's remove one of them to have all of this a bit more straightforward I only want to go from AK to Rocket if a certain condition is true and that we're setting inside of the expression it's ultimately going to be fairly similar compared to what we have done with AK and shotgun I can literally copy all of this and paste it in there the only difference is that we want to check if the selected gun is equal to Rocket and once we have that we can do the other case that by default is going to be automatic but we only want to do it if we have selected gun equal to options. AK and then one more path from the rocket to the shotgun this one we can literally keep as it is and for the other path we want to advance to Rocket if selected gun is equal to options and rocket and that is all we need with that we have a fairly robust system for the animations now for that to work though inside of player Graphics we also need to update the blend position for rocket and for that I can duplicate this line one more time indented properly and I believe I called this one rocket once we have all of that I can run the game and we get the AK animation I can press the middle Mouse button we're getting the shotgun animation and if I press it one more time we are getting the rocket but nothing else is happening and usually when that happens inside of the rocket blend space 2D check that you're getting discrete points so let's try this one again and now this is working so this feels really good and with that we have the player animations now obviously nothing else is happening at the moment but that we can work on in just a bit for now I am pretty happy with that with the player covered we can start adding things to the level the two major objects that I want to add are the lights and the level transitions but for both we have somewhat of an issue for example for the lights we have six variants that are somewhat similar and on top of that every single one of them should have a unique Point light 2D with its own texture first one I want to have something that goes like this or the second one I want to have a more narrow one for the third one I want to have something that goes around it and so on now we could turn every single light into a separate scene and then add a bit of extra stuff that would be possible but also Al not really ideal we would just create six scenes with the same notes and slightly different textures it just doesn't feel right instead I want to have a single light scene that lets me select the look of the light in the inspector and gives me a preview in the editor that we can do quite easily by turning the scene into a tool that way the script will be executed in the editor and we can see the result right away which can help you enormously to create well tools inside of the editor that are more reusable and interactive that system we are going to use for the lights and for the transition Gates besides that we are also going to create the moving saw blades although those are going to work a bit differently they're also fairly simple and I didn't know exactly where to put them so we are just going to add them right here they are still kind of objects but also enemies so it was a bit awkward but doesn't really matter too much this part is easy don't worry too much about it instead let's get started by building some tools back in Gau at least for now we don't need entity player or player Graphics anymore instead I want to create a new scene with the paranode being a 2d scene that I'm going to rename right away to light I also want to save all of this under scenes I want to create a new folder called objects and in there we have light. TSN and now just to understand how a tool is going to work let me add a Sprite Tod to this light with the good logo not something we are going to use for the final game it's just a placeholder for now also this logo I want to scale down a bit to 0.25 then I can save it go to the station we can add the light doesn't matter where you put it inside of the scene tree but make sure it's somewhat visible to the player let's say here if I now Run the game we can see the good logo and it doesn't do anything that is the expected result at this point so let's add a script inide of objects and light that is totally fine and create let's say I want to make this good logo rotate for which I want to use the process function and then update the rotation degrees we can simply add this by some amount let's say 100 * Delta and if I now run the entire thing we're getting a rotation so that works just fine however this result you can only see inside of the game if I go to the station in the editor the goo logo is entirely stationary most of the time this is totally fine but for this particular case I do want to see the result in the editor right away how can I do that and well it's quite easy all you have to do in this script all the way at the top add at tool and that's literally it if I now save the entire thing and then reopen the scene we have the good logo rotating inside of the editor and that is working pretty well so simply by adding a single line we can build much more interactive stuff right inside of the editor which is something that we are going to use quite a bit but you do want to be careful here if you add too many of those the good do editor is going to become very slow so only add things that are actually necessary oh and by the way what you can also do with this system is add a hint with if engine do is editor hint that way we can tell if we are in the editor or not for example I could make the good logo only rotate inside of the editor but not in the actual game there you go now why you would want to do something like that I have no idea but it is possible that is basically all you need for the basics of tool inside of the light we still cannot see a preview inside of the light scene so very often when you're using a tool you want to close the scene and then reopen it then things are updating so with that we can start working on the actual light let me get rid of all of the stuff we have done so far but keep tool also inside of light I don't want to have this bright 2D anymore so this we can remove and then I want to reop the scene just to make sure we don't have any kind of residue for example right now you can see that this Gizmo that shows us the origin of the node 2D is slightly rotated it's not supposed to look like this and inside of the inspector you can see there's one change that we have a rotation which I do not want once you're adding tool whatever change you make inside of the editor will be permanent so it will also show up in the game which can add some weird Behavior now this system we are going to use along with a whole bunch of lights so if you look at the graphics folder there we have objects and inside of objects we have lights which I want to add to a Sprite 2D then we can drag it in there and there you can see the lights you have seen in the intro to only get one of them I want to go to animations and then H frames and in total we have six so now we can pick one of them besides that for every single light I want to add a point light D for which we are going to need a light texture that we have to add inside of the inspector in the lights folder you have a couple of them for example for the first light the one on frame zero I I want to use l0 and drag it into the point light 2D now this right now we cannot see because we don't have a background for that inside of light I want to add a color rectangle behind everything else and then change the color to something a bit darker if you now extend the entire thing you can tell what's going on also make sure to lock this rectangle so you don't select it accidentally now with that we can move the light into the right position something like this looks about right if I now hide the background you can't see the light anymore but if we go back to the station you can see we have the light which is the rotated for which you want to reload this station scene and it's still looking weird for that inside of the light node under transform you can see we have changed rotation in here as well and if you reset that now it's looking all right so with that we have a light now that would be a single light but in my case for the light scene I want to have multiple lights so for example for the second light I want to get frame two and then for the point light for this one I simply want to squash the entire thing on the horizontal axis something like this so if I save it now inside of station you can see the result roughly and this I need to do for All of the Lights since that is some menual labor if you open tutorial data there we have all of the light options so all we have in here let me make this one visible and hide everything else you can see we have the Sprite 2D along with the point light inside of a note 2D for the second light then we have the third light the fourth light and so on they always have the same setup we have a Sprite Tod and a point light and all of these options I want to copy so with options selected copy it and paste it into light then we don't need the original Point light spray Tod or color rectangle so those can all go and now we simply have the options left this still works just fine so I am quite happy so far and now the system that we are going to implement is inside of the light which is still a tool I want to have a dropdown menu in the inspector that is going to select a number between zero and five and depending on what we are selecting we are hiding all of these nodes bar one the one that we have selected and for that I want to work inside of the script for light and create another export variable the one I want to create now is called export enum this one allows us to set a couple of options inside of a drop on menu as an argument you want to have strings with all of the items for example in my case I want to have a string for zero 4 1 4 2 4 three 4 and finally five this we then have to store in a variable that I have called type with a default value let's go with zero if I now save the scene and select the light again inside of the inspector we have a type with the options we have just specified with that set up as soon as the user selects one of these items I want to hide all of these nodes and then reveal the one that we have selected and for that I want to use set get to achieve that I want to add a colon and then use set which wants to have one parameter that is going to be the value whenever we are updating this value we are calling this function and via the that we still want to overwrite the original value so we always have to add type is equal to value that way we are actually storing the new value but on top of that what we could be doing is simply print the value that we are getting with that I can close tutorial data we can save it doesn't really matter and if I now reopen the light on the parent note I can select different options and if you have output open you should be seeing the result right away inside of the editor for this we don't have to have the game running so with that we are getting the individual number and that we can use to hide all of the notes and then only reveal the one with the right number or in other words I want to have for child in the options and then I want to get the children and run child. height besides that I want to get the new child the one that we want to keep visible which I can get via the options once again except now I am using get child along with the type that we have selected although important at this point inside of export enom we have created strings but for get child we need an integer so the string we need to convert to an integer when once we have that we want to run child. show with that system we are hiding all of the notes and then we are showing only the one that was selected this would work in theory but in practice I think there are going to be some issues so once again let me reopen the light scene and if I now select one of the options oh it actually works we get only the one visible item that we actually want so in theory this is working but if you look in the bottom left on the output we are getting some weird stuff at sometimes we have an invalid called nonexistent integer Constructor and that is something that is a bit annoying with tools that sometimes these things are loaded before the actual scene is ready which makes sense because we are running all of this in the editor so sometimes things can be a bit weird generally what I have found best is before you're making any changes in the Cod you want to check for two things number one the value that we are getting actually is a value or other words it's not null besides that you also want to check that there are children inside of the scene or in other words before we are doing anything I want to check if get children or child count is greater than zero meaning we have at the very least a single child and and the value is different from null only if that is the case do we want to do all of this with that if I go back to the scene and I select another option we should not be getting an output error anymore and if I go to the game this should also be working just fine perfect so with that we are getting the right option and we have some safeguard to make sure that the game doesn't crash I suppose we can also refine this just a bit because this child variable doesn't need to be there we can simply get options get child of the type then show the result very minor Improvement in practice this is not going to change a thing perfect oh and by the way when you're looking at the output we are always getting a zero that is because inside of global we are printing the gun option which I think is a bit confusing at this point so let's remove it entirely righty with that we can select the right kind of Light which is a good start but I want to add a bit more so for example when you're looking at one of these lights let's do it inside of the station you can see that we have a light texture although it's not terribly visible this thing I want to customize just a bit more by adding a custom color when you're going to the light and have the point light 2D selected there we can set the color and if you update this one let's go with a pure red color save all of this and then back in the station we have a red color this I want to update in real time in the editor or in other words with the parent note selected I want to below the type set the color of this light for which we can set another export variable I want to create an export color no Alpha for which we need a variable name let's call it color and then a default value which I have set to the color type and then we need a default value we can set this one simply to one and then we should be good to go I can now save the entire thing and back inside of the scene you can see we have a default color although by default this one is black at the moment and it should probably be white white so just to make sure we're getting the right value let's go with 1.0 1.0 1.0 and 1.0 that way I can reset the value and we're getting white by default now we have a color and every time this color value changes I want to update the color of the point light this part is going to be your exercise when the color value is updated change the color of the point like 2D also make sure that you're adding safeguards as well like I have done before pause the video now and see how far you get to get started I want to use the set method along with a value and fundamentally I want to update the color to the value that we are getting so we are actually updating this variable on top of that I want to get the currently selected child and then update the color or in other words I I want to get the options then use get child along with the integer of the type the value we are getting from this export enum that would give us for example this note setup where we have a parent node 2D then we have a Sprite 2D and then a point light and the point light is always child number one or well the child with the index one which means I can simply get the child with the index one and since this is a point L Tod I can update the color the value I want to set is the value that we are getting from the parameter that's basically all we need for the basic logic although before we are doing all of this I want to add the safeguards once again which means I want to check if get child count is greater than zero and value is is different from null only if that is the case do I want to do all of this but other than that now this should be working I suppose we should reload the scene which you want to do very regularly when you're working with tools and I guess now just to see what we are getting I want to add a color rectangle as a background once again working with lights and good occasionally can be a bit frustrating because you cannot see them by default in the editor so there we go by default we have a red light but if I change the color to something else this updates in real time I can also change the color to something bluish or something greenish and this is looking really good perfect we can also try out off this with a different light and it does work although the issue here that you could refine later is when you're changing the light this color isn't reapplied oh and also for this light we have hidden the actual point light Tod just to make sure I didn't do this more often no I think it's just for this one light Okay cool so this is working and just to talk about it again so one issue that we have right now is that we can change the light and the type separately for example if I go to one we're getting one light but if there I changing the color let's go with something really visible this dark purpley color if I now change to another light we keep the value we had before although this we could change by simply selecting the color once again and then we getting the updated value I suppose this is a bug minor enough that you can work on it on your own in my case I want to add some other stuff first of all most importantly I want to set another export enum that that is going to be an export underscore range with a start and an end value let's go from 0 to 10 then once again we can create a variable with the strength of the light and the value I want to store for this one is going to be 1.0 by default the 0 Z here is important because I do want to create a floating point value to get a greater range of values in there I want to set the value once again or in other words I want to update the strength to the value after that like we have done before on this line and let me extend it so when we set the color we have gotten always the first child of whatever type we had selected this I want to do again for the export range for the strength of the light except now we don't want to get the color we want to get the energy because when you look at any of these notes the point light 2D besides color we have energy with a default value of 0.8 I think I've said this one earlier and once again this we only want to do if there are children inside of the scene and if the value is different from null with that we should be able to set the strength of this thing as well and I think at this point you get the idea of all of this so back inside of the light I want to get a different one and there you can see we can update the strength of the entire thing works pretty well and this is a really nice effect if I hide the color rectangle and save the thing and go back to the station there we can actually set the values so in there I can update all of this then we are getting some pretty decent values although if I reset the values we are getting what we have set in here so the way you want to think about it when you're setting the values for a tool inside of the inspector in the actual scene you are setting the start values for any of the instances those values you can still update like I'm doing here or here you get the idea so you only really want to update any of the instance you are creating from the original scene and I guess let's go with some slightly better color more right guess we can go with a very slight yellow color and then reduce the strength quite a bit I think something like this would look all right and if we try all of this in the game it also works just fine perfect at this point also inside of debug we don't need visible Collision shapes anymore and with that we have made quite a bit of progress that we have created a tool that can be much more reusable inside of the game and let me reset the default values so this is looking just a bit better besides this light texture I also want to have another light texture around the entire thing so that we have a bit more light in general when the player is close to a well light for that back inside of the light I want to add another Point light B and this we can add while we are doing anything else and call it main light for this main light we are now going to need a light texture which you can find under lights and main.png this I want to drag into the texture and now we cannot really see this inside of the scene but if you add the color rectangle and expand this thing a bit you can roughly tell what's going on I guess if I hide this thing and then save the entire scene back inside of station now we can see a bit better that we have a light radius around this light now this I also want to customize via the inspector or in other words I can minimize all of this and then add another export variable which once again is going to be an export range one with a value from 0 to 20 and the variable you want to create is called radius with a default value of 1.0 after which we can use value and I think at this point you have seen this often enough we want to add the safe guard and then update the actual radius by setting it to the value that we're getting from the parameter after that I want to get the main light Target the texture scale and set this to the value that we are getting and with that if I save the scene and go to the station with the light selected I have a radius and this radius I can use to change the size of the light which I think is working really well nearly done there's just one more thing that I would like to add and this is going to be another export range with a value from 0 to 200 the variable I want to create is called called flicker which is going to get a default value of 100.0 so we have a floating point value once again essentially this light shouldn't be static it should be flickering just to make it feel a bit more worn down for that we don't actually need to use set again instead we want to use inside of process oh and I realized I didn't mention I added an underscore so good do doesn't complain about the parameter what we want to do now is make the light flicker or in other words generate a random value and then update the energy of the point light 2D so it looks like it's slowly turning on and off at random intervals the way I have approached that first of all I have created a noise texture which we can do by creating a fast noise light do new what this is going to do if I go back to the editor and simply add a Sprite 2D without any texture if you now go to texture there we can create a noise texture 2D which is a bit large if you click on this one again there we have a noise and we can create a fast noise light this is what a fast noise light looks like it's more or less a cloud what we want to do is pick one row of this texture and then simply look at the values so do we get white values or dark values or white values again and so on that value is then going to be between zero and one one for pure white color and black for pure black color along with all of the Shades of Gray in between since we then start from the left side and go further to the right we are essentially getting random values that slowly change over time which can be a really nice effect and that is what we want to do so with that I can get rid of the Sprite to be and instead work inside of the process function first of all I want to update a value which doesn't exist at the moment for that I want to create another variable value with a default value of 0.0 and this should always be a floating point value after that to this value I want to add the flicker multiplied with Delta the flicker we just created and Delta we're getting from the parameter to make sure things are frame rate independent after that we want to Target our currently active light or in other words our visible light at the moment which currently is light zero for that I want to create another variable activecore light I suppose visible light might be a bit better here but you can name this whatever you want this needs to be some kind of Point light 2D and we we have to sign it when the scene is ready for that I want to use funcore ready then a four child in options and get children in which I can check if child is visible if that is the case the active light is going to be child. get child one I hope this part is fairly straightforward forward we are simply looping through all of the children and then setting the visible light to the active light once we have that inside of the process function I can check if we have an active light and if that is the case I want to get the active light and update the energy and on that I want to get the noise texture we have just created up here and then use the function get noise 1D on which we want to have a value if I now run this scene nothing is happening and that is because oh this should be underscore process not just process let's try this again and now we are getting something so this is looking all right although a bit weird to understand a bit better what's going on let's print a value that we are setting so I want to print noise get noise 1D value and then you can see that we are usually getting a value around zero sometimes a bit below sometimes a bit above this we want to modify because these values are generally too low the formula I found on the internet that worked best is + one divided by 4.0 and then to the entire value I want to add 0.5 there isn't really a specific math behind it this just looked good so if I now run this again this looks much nicer with that we don't have to print the get noise 1D anymore and instead we have a nice flicker for the light which by the way is also going to work inside of the station so in there you can see the light Flicker and if we update the value let's say to something lower the flicker gets much slower and if it's 200 it becomes much more noticeable we can also disable it entirely so play around with this as much as you like and that would be a tool light that is incredibly powerful so now inside of the editor you can simply duplicate the light move it around and then change the type that we have let's say to something like this you can update the color then the strength you can update the radius you can make smaller for this one I suppose and we could work with the flicker let's disable it for this one and that's the whole idea with that system instead of having five scenes one for each light you can simply update the light right in the editor which makes everything just much more organized now in terms of organization inside of the level I want to add a couple of Lights to the background so in there I want to have a note 2D with BG lights those are always going to be behind the player besides that if you want to have a light in front of the player under FG I want to have FG lights now we can save all of that and back in the station let's say I want to have this first light in front of the player FG lights and this light should be behind the player it should be in BG light if I now run the entire thing we have the light in front of the player and we have the light behind the player so quite happy with that for the actual game I have placed a whole lot more lights I will repeat that process at the end of this section what I have also done to make the lights look much better inside of the level I have added straight to the level another light but this is not a point light but a directional light if you at this one and save the entire thing if you now look at the station everything is much brighter because via this directional light we are adding a whole bunch of extra light if you change the color for this one you could make the entire thing feel much more different depending on what color you have selected although this is not exactly what I want because I want to make all of this much darker and for that you can work with the blend mode at the moment we are simply adding the color but if you change this to subtract then we are removing the color we have selected here so right now we have an orange brownish color and these are values that are removed from the colors in the actual scene meaning at the moment we are removing lots of red colors so the entire thing looks dark and blue if you change this to let's say a brighter color the thing get darker and if you go darker the thing's brighter if it's pure black the end result is going to look like the fault and in my case I want to make it just a bit darker and then work with the color this doesn't look exactly good I guess we can have a fairly neutral color and then make all of this much darker in general something like this once again play around with this for an actual game in my case I'm going to be a bit quicker so it doesn't take too long and now you can see that the game itself is quite dark for most of the time but once we get to a light we still have the Flicker and the game brightens up this also applies to the player itself and this is looking pretty good so with that we have the lights for our game later on we will customize the directional light just a bit more but I think for now this is fine now besides the light we don't need this part anymore actually I also want to create a transition gaug which is going to be another note where the parent scene will be an area to be which I want to rename right away to position gate as soon as the player is entering this area then we want to stop the player movement fade the screen to Black and then load another scene that scene is then going to be another level all of this we want to save right away I placed all of that inside of objects it might not be perfect but for a small project like this I suppose it's fine first of all in there for the transition gate we will have to add one more note which is a collision shape 2D for the gate I want to have a rectangle shape to be that I want to make taller and wider just to test how things are looking inside of the station I want to add the transition gate then we can tell how large it is compared to the player and this is much too big so this needs to be quite a bit smaller something like this maybe that looks more reasonable I guess we can make it just a bit smaller so shorter and narrower and that looks pretty good on this transition gate I want to do two things number one when the player is colliding with it it should emit a signal although for that to work we first of all want to work with the collisions that the gate can only see the player which means it should not be on the terrain layer but it should be on the transition layer and then it can only see the player layer that way if a bullet hits a door we don't transition to another level that would be kind of weird next up inside of Noe we want to check if a body has entered although to connect the signal the transition gate first of all will need a script which we can Call Transition gate. GD that's totally fine and now in the transition gate I want to check if a body has entered that I want to connect to transition gate on body entered for now let's simply print transition and let's try the entire game if I move a bit to the left we're getting transition that's looking good the actual transition we're going to cover in just a bit first of all though I want to convert this transition gate to a tool as well so that inside of the inspector when we are placing the transition gate we can also select the target scene for that I want to add tool all the way at the beginning and then export and enum for which we will need the names of the scenes we have station then we have sky and finally we have underground with the default level being station other than that I also want to create a levels dictionary the issue we have at the moment is that via this export enum we are simply selecting a string either station sky or underground this we need to connect to inside of scenes we have all of the levels and inside of these levels we have sky station and underground I suppose also test but this I'm going to ignore I I want to connect the name that we're getting from export enam to the actual scene and for that once the game is actually ready so Funk underscore ready then I want to check if we are not in the editor meaning if not engine. is editor hint that means we are in the game and then I want to update this dictionary to have key value pairs where for example we we have levels with station getting a path to the station scene let me add a bit more space so all of this is visible there we go now we have one entry inside of the dictionary besides that I want to get levels again create a sky entry and then get the sky scene in there as well finally one more entry for the underground and this is going to be the underground scene if I have transition gate selected I can select the target level and Via this target level we are selecting a Target scene that we are then able to transition to once the player entered this area 2D and that we can then use to transition to another scene in practice that would mean we are calling get three and then change scene to file now gdo is going to give us all of the available scenes but that's not what we actually want instead we want to go to levels and then select the current level and that should be it at least in a very basic sense if I now start the game and go a bit to the left at some point we are getting to the sky level now since that one doesn't have a player at the moment we don't really get a proper outcome and also we are getting some debugger arrows but that is something we can work on also one more minor thing that we can add is an _ to body because we are not going to need it with that let's open this guy scene and let's have a look in there we have another level to that I first of all want to add the player so to the entities Noe I want to add the player and then place the player in the starting position right next to the door here on top of that I also want to add the transition gate to go back to the station and this should be on this area here that being said though in this station as well we have the transition Gates just randomly in the scene tree which I just don't really like to fix that inside of level I want to add another note Tod which is going to be for the transitions or I guess we could call it transition Gates doesn't really matter what you call it this I now want to save and if I go back to station the transition gate this one should be inside of transition Gates that way we can minimize it and the entire thing looks much cleaner after that inside of the sky we also have transition Gates and to that I want to add a single transition gate which should bring us back to the station this we have to reposition to get to the door so pick the transition gate and place it roughly Here and Now now if I move a bit to the left we are ending up in the sky level if I go to the door we are in the station again so we can transition between the levels it doesn't work terribly well yet but it's a start first of all though this transition is way too abrupt it shouldn't happen this fast instead I want to fade out to Black then change the scene and then fade out back to the level for that I want to create a new scene which as apparent is going to get a canvas layer that I am going to rename right away to transition layer via this transition layer we are going to ignore the camera and the only note that we are going to add to this thing is a color rectangle that is going to span the entire window and will always be completely black after we have that I want to save the scene and I want to save it inside of global because we want to have this thing available at all times so save it in there and then go to project project settings autoload we already have Global in there but now I also want to get Global and transition layer the note name transition layer is totally fine then click on ADD and now the way you have to think about this system by default this area is going to be invisible but then once the player steps into the transition gate area we going to fade it to Black once we reach full black we're going to switch the level and then we are gradually fading out the black color one more time that way we have a nice transition for that first of all though when the player is entering the transition gate area get my transition layer and then call method that doesn't exist yet but I want to call change scene which needs to get one argument levels and for that to work inside of the transition layer scene I want to add another script called transition layer inside of global that's totally fine in here I want to have the function change underscore scene the one parameter that we need is called Target I suppose for now just to test the things are working I want to print what we are getting although now if I run the entire thing we cannot see anything because by default everything is black and since this transition layer is always visible we always have a black thing on top of everything else so not amazing to fix that when we are getting started inside of the transition layer script I want to get the ready function Target the color rectangle and change the alpha value via modulate the way to do that is by assigning a color value which is going to get zero for the color and zero for the alpha value that way I can run all of this one more time and we can see the level once again if I now go to the left we can see the right scene so inside of output this is the proper output that's a good start now I want to use a tween to fade to black load a scene and then go back to make the level visible first of all for that I will need a tween in general create TW I want to Tween a property of the the color rectangle the property I want to Target is modulate the final value let me expand the code field the final value is going to be color where the color itself is going to be zero although this part doesn't really matter the important bit is for the alpha value I want to have one whereas in the original we had a value of zero finally we will need a duration I went with 0.5 but this you could work with it's fairly subjective after we have that we can duplicate this line because twins always run in series which means we are first doing this tween and after this one's done we are doing this one which means we know on this thing we want to set modulate back to a color value of zero over a certain duration of time let's stick with 0.5 that means if I now run all of this and I get to the gate we have a Fade to Black animation that works multiple times so that's a good sign but obviously we have to actually load the scene and for that we can add another thing twe and tween callback which is a function that is going to be called once the tween has finished it wants to have a single argument which is the function that we want to call my case open scene but is not going to complain that this function doesn't exist so let's create it opencore C for now with without any argument to test things I want to print open scene with that let's try all of this and we are getting open scene when the screen is entirely black a really important thing to understand about twins is that they always run in sequence meaning we are doing this line first then we are doing this one and finally we are doing this one meaning this function is always going to run after we have faded this green to Black which is exactly what we want but now we have an issue we have to pass the target into the open scene function for which we can add one more nice good do feature we want to create a callable bya this functionality we can always assign an argument to a function for that to work we will first of all need two arguments the object that this callable should be part of in our case this will be self and then we will need the string name of the function that we want to call open open underscore scene and this by itself wouldn't do anything we can still run the game just as before with the same result however what we can do now is add the bind method and Via that we can bind any argument to this function and then that argument would be passed into open scene I want to pass the Target that we are getting from the parameter from change scene into the bind method as an argument and open scene we'll capture that via the parameter I suppose we could call this one the scene that we want to open once we have that we actually want to get the tree now and then change scene to file with the scene that we are getting I suppose the best name for this one would be the scene path finally then if I now run all of this again I can get to the right place and now this is working much nicer so let's try it again and there we go now there's one more issue that we have to deal with the player during the transition can keep on moving which feels really weird to fix that we have to reopen the player scene and let me minimize everything there we go so for the player movement inside of process we have can move and while there's a scene transition this value should be false for that to work we have to get access to the player from inside of the transition layer and that you can do in a couple of different ways I find the best way to do it is to place the player scene inside of a group let's call this one player then save the scene and now inside of the transition layer script I want to get before we are creating the tween get three don't forget to call this one and then get first note in group the group we want to Target is player since there's only ever going to be a single note inside of this group we are always going to get the player character and on this player we want to call block uncore movement a method that doesn't exist at the moment so inside of player we want to add all the way at the bottom bunk lock uncore movement all we want to do in here really is can move should be BS and on top of that if we have any kind of velocity it should be set to Vector to dot zero that way if the player is currently moving we are stopping all of that let's try all of that and now if I get to a transition gate we are at the very least stopping the movement also if we are jumping this is still working just fine the last annoying thing is that the player legs keep on moving when we're walking into to the gate to fix that I want to get the player graphics and in there we have the legs which are an animated Sprite so if we are looking at player Graphics open the scene we have the LA which is an animated Sprite so on this note we can simply call stop and then the animation should stop let's try all of that I can now run into the transition gate and the player stops animating or well the lags stop animating but you get the idea so with that we have transition Gates that means I can now close transition layer and transition gate that's all we needed in here player Graphics we also don't need and I guess we should keep the player Open Sky though we don't need for now that covers the second major part of this section with that we have transition Gates that we can move around and we can change the target I suppose I should show this would also work with underground or at least I hope it would if I now go to this part we're getting to the underground which doesn't have a player at the moment so the result is going to be a bit weird but that I'm going to fix in just a bit first of all though I want to add one more thing the sword that is going to move around the platforms for example for these two platforms I want to have a sword that moves in a path around them something like this and this path should be really flexible ideally what I would like is that I can set the path straight inside of the station scene and then the saw is going to follow it but let's go through it step by step first of all we have to create a new scene the parent note is going to be an area 2D that I will rename right away to saw which I want to save not in global but in scenes and objects after that we can add an animated Sprite 2D and for the graphics I want to load the saw animation although I guess the way this is going to work under animation I want to add new spreite frames click on that again and now click on this grid symbol with that we can go to Graphics objects and and saw animation and tell good do that we have four horizontal frames but only one vertical one and then you can select the individual images click on add four frames and we get the animation if you zoom in a bit you can also Auto playay all of this and make sure you play it as well with that we getting the saw animation a bit slow right now let's say 10 for this one and then this is looking all right as always play around to see what works best for you besides that I want to have a collision shaped Tod which should be a circle shape and the default one here actually works really well I suppose I could make it a bit smaller also for the area to the parent node in collisions I want the sord to be on the projectile layer and it can only see the player after we have that I want to give the saw a script inside of objects saw. GD is totally fine and then inside of note under signals I want to add body entered and connected to the script if this function triggers we know that the player was hit so let's print player hit and so good do doesn't complain and underscore to the body parameter after that inside of station we have to add the source somewhere and to keep things organized inside of main or well inside of level and then inside of main I want to add another node 2D which is going to be for the objects I can save this return to station and now to objects I want to add the S and by default it spawns in position Zer and zero so hold alt and then move it to the right position I suppose we can move it right down here and then also move the player in this general area that way I don't have to move around so much while testing let's try to run the entire thing and then we're getting a sword that's animating and if the player collides we're getting player hit that's working pretty good now I want to move the saw and for that I want to add a path Tod the way the system works in good is that this path Tod is expecting a child path follow Tod on this path follow Tod we have progress the progress it's referring to is the progress on this path to D so on there you can add something like this and then close the path we are getting a path that path follow Tod can follow and then inside of the script you would write a function to increase the progress and update the position of the entire node this however we can't really do because we want to have multiple Source or in other words inside of the station we might get this one path to but but if you want to have a second one we couldn't just copy it because the path is always the same for every single Noe so that doesn't really work for us let me delete the second note and then return to the s in there for now I want to remove the path follow Tod and on this path Tod I am going to delete the path I have just created the easiest way of doing that is under curve you are resetting the value that way there is nothing inside of this thing at the moment in fact I just realized we don't want to have a path Tod in there at all we should only have the saw area to the parent node animated Sprite and collision shape because inside of the station I want to add a path straight to the saw although for that on that transform I want to reset the value that is usually a good idea to avoid some errors so right now the saw is in the orig point of the scene and after we have that I want to add another child which is going to be the path to D that we want this s to follow and then I want to go to the place where I want the path to be and draw the points for this path like so and then close the path now we have a path associated with this scene and that means we can work inside of s and first of all let's see what we actually get if I run fun underscore ready and print get CH I can run the entire thing and we can see that in the output we're getting an animated Sprite Tod a collision shape Tod and a path Tod and all of this is inside of a single list meaning good do doesn't really care if you have a node inside of the scene tree or if you add another Noe to the instance of the scene in another seen tree which for our purposes can be really nice because that system we can use for the saw and let me extend all of this I want to create first of all two more variables the first one I have called path and this one needs to be a path to D next up another variable is going to be a pathore hollow the only data type allowed for this variable is going to be a path follow 2D and then when the scene is ready I want to assign the path that we have created inside of this station this one here to this variable which we can do quite easily I want to get the path and then get the children of this node and since this path to D is always going to be the final child we can simply add indexing and negative one next up we need to have a path follow 2D node which we are going to store inside of this variable which means I want to have my path follow variable and then assign a path follow to the new node which we also have to add as a child to the path in other words I want to get the path and then add a child which is going to be path follow the thing we just created and then I hope good stops complaining this should be all right just to test all of this if I now run the scene the game doesn't crash and I I can go to remote and in there we already have the saw open and we have a path to D and a path follow to d as a child this is the setup we actually need now we just have to make sure that this path follow 2D is updating or well progressing and then that the entire node is following that path follow node for all of that we will need another function that is going to be underscore process basically I want to get my path follow variable and add the value to progress for now this can be something fairly crude let's say 100 time Delta and next up I want to update the position of the entire scene to the position of this path follow which means I want to get path follow and position with that I can run the game and we're getting the saw in the right place that's looking pretty good we also get player hit so all of this works really well if you want to be really fancy you could also make all of this a tool that way you'd get a live preview of the saw movement although I wouldn't really recommend it because if you make everything a tool eventually the performance in G do is going to crash pretty hard so I am not going to do it and instead I want to specify three things for the source I want to have an export VAR speed I want to have an export VAR offset and an export VAR for boort that way we can control the speed of this thing we can add an offset when it's starting and we can move it forward or backwards creating these free variables and using them inside of the logic is going to be an exercise for you this should be fairly straightforward so add speed offset and a forward mechanic to the saw pause the video now and see how far you get first of all for the speed and while we are doing this I'm going to comment out offset and forward speed is the easiest one I simply want to have some kind of value let's go with 100 by default this speed we then need to use inside of the process function and add speed in there then I can run all of this we're getting the same result but now for the saw I can set the speed to let's say something really large that we can can see a difference 400 and it is moving much faster next up I guess the easier part is forward this is simply going to be a Boolean value which I want to set to True by default once we have that inside of process I want to have VAR Direction which is going to be one if forward and if it is not the case else it's going to be negative 1 that value I then want to multiply with the progress addition so multipli it with Direction and then inside of the editor I can set a tick mark for forward or not and if it's disabled then the saw should be going the other way yeah that looks good so I'm going to keep it at forward and the default speed but once again choose whatever you like finally I want to have an offset which by default is going to to get a value of zero which can be an integer and then when the scene is ready I want to apply this offset to the progress of path follow we can simply drag it from there and then set the progress to the offset and to make sure we can see all of this well I'm going to set the speed to something super low let's say five that way when I start the game you can see the saw is in the top left but if I change this value to 100 and run all of this again then the saw is much further to the right perfect that's all we needed and with that we have finish the saw now later on the function on hitting the player is going to be much more extensive but that functionality only really makes sense once we have all of the enemies which is going to be the next part I'll see you there before we finish here is an updated version of all of the levels so inside of station sky and underground I have now added a few more things but nothing lifechanging most importantly for the underground I have added the player and the transition gate along with a bunch of Lights I also updated the directional light for the entire scene but that's not that much same for the sky in there I have now a transition gate to go back to the underground to go back to the station and we have an overall scene light nothing too fancy so now if we are running out of this we can go to the underground do some things in here and come back and explore the rest of the level along with a bunch of other things feels much more like a real game by now oh also you might have already spotted inside of project project settings under window I have increased the window size or the you put to be a bit more specific to be 1920 by 1080 for an actual game we will need a challenge and for a challenge we will need some enemies which is what this part will be about there are fundamentally three kinds of enemies a drone soldiers and some kind of monstery thing I suppose on top of that we also have the sword that we already added now for this part I am going to go in two stages number one we're going to add the basic enemies although for now they're only going to move but not shoot that's going to be the second part because for shooting we will need bullets which I want to implement in a way that we have one bullet class that we can reuse for the player for the soldiers and for the monster the Drone Works slightly differently it simply explodes once it collides with anything and for that here we are back in Gau and let me add a bit more space to the editor and I suppose all so we only need this station we don't need sky or underground we also don't need the player right now instead I want to create a new scene actually I don't I want to create a new inherited scene the parent node should be inside of entities the entity. TSN this is what I want to open in there with the Paran note selected I want to create an animated Sprite to which I want to add Sprite frames and then for the default animation that's the only one we need click on the grid again and now we want to go to Graphics there we have the entities and the Drone once again we have four horizontal frames and only a single vertical one then select the four frames in order and add all of them for the frame rate I guess we can go to 12 and then play the animation that looks about right it's really nothing fancy next up we will have to set a collision shape which for this one I went with the round one something like this could be refined a bit but I think it's fine also I want to rename entity to drone and then save the entire thing inside of the entity's folder you could make another subfolder for enemies in there I don't think it's really necessary so next up inside of the station under entities I want to add the Drone and then place things in such a way that we can see them right away so I want to move the Drone let's say up here and the player can also go up there so we can see things immediately let's try all of this and there we go we have a drone doesn't do anything at the moment but that's totally fine next up I want to add two area to these the first one is going to be the player detection area and the other area is going to be the Collision detection area as soon as the player enters this area the Drone will become active and always move towards the player Collision detection area is going to be a detection area and once we hitting that the Drone is going to explode I wanted to make this just a little bit larger than the Collision shape itself there isn't really a specific reason for it it just felt better for the player detection area I want to add a collision shape B with a circle shape and then make this thing reasonably large for a collision detection area I want to do something fairly similar so Collision shape 2D along with a circle shape and then something just a bit larger then the actual Collision shape itself with that let's have a look at this station and that feels just about right I guess we can move the player a bit further to the side next up then for the Drone I want to add a script which means we need entities and drone. GD that looks all right and now we have a script for the Drone for which I want to create three variables first of all the first one is variable active which is going to be a Boolean value that's false by default next up VAR speed some kind of integer value of 100 finally I want to have access to the player right away which we can access via on ready VAR ler is going to be get uncore 3 and get first note in group layer I think all of this is reasonably straightforward we are checking if the Drone is active so should it move towards the player this speed it should be moving at and then the player itself now this we can refine just a bit because the speed should be set globally and that we can do inside of global for example in there you could create const enemy parameters which will be a dictionary with a key for the Drone in there we can have another dictionary with this speed for example and let's go with 110 just to have something slightly different after we have that for the Drone for the speed instead of 100 for the speed I want to get Global do enemy parameters then the Drone and finally the speed that's a slightly better system because now inside of global we can store all of the enemy Behavior parameters you could even add the player parameters in here as well although that would add a lot more you simply have to find the right balance for your own game and fundamentally I want to call the process function and check if the Drone is active and if that is the case I want to move towards the player for which we are going to need a direction the math for this one is fairly simple we always need the end position and the start position and normalize that thing very simple Vector math or in other words we want to get ler do position minus the position of the Drone itself so just position and then normalized that will give us a direction that we can use to update the velocity because remember the Drone is simply a character body so velocity will be Direction times speed and finally we can move and slide and then we should be good to go the one thing that we have to do is to set active to true because by default it's false for that we will need the player detection area we can go to the signals and check for body entered and connect although for this part I think we need to be a bit more careful because the player detection area at the moment Spector under Collision we can only see terrain so so this should be on the layer I guess projectiles is fine and for the mask we only want to be able to see the player and for the Drone for the Collision shape for the Collision layer and mass system I want the Drone to be on layer three for the enemies and the Drone can see the terrain and it can see the player I guess why we here what a collision detection area this one should also be on projectiles and for the detection I want terrain ler and I guess upper enemies along with the projectiles our game is getting just a bit more complex and the Collision mask and layer system does reflect that so let's test if things are working I want to check if the player is entering and if that's the case print let's say player entering or rather player detected let's try to run this the game and now if I move left we should get player detected and we do this also works multiple times perfect that's great because all we want to do inside of this signal is set active to through and if that is the case the Drone should be following us and that is looking pretty good now obviously once the Drone collides with us we're getting some weird Behavior but that's okay because for that case we want to trigger the Collision detection area or in other words on the note we want to get if a body has entered and then do a thing for now to get started I simply want to Q fre the Drone so it should disappear let's try and the Drone has disappeared right away so this Collision area has collided with a body to check what's going on let's print the body that it has collided with let's run out of this again and we are getting a collision with the Drone itself so this Collision detection area is colliding with the Drone I guess one way around that in the Collision mask is we could take out the enemies now we shouldn't see a print statement anymore and we don't now with that system though we do not get collisions with the enemies so not ideal let's reactivate it and then we only want to Q fre if the body is different from self so we're not colliding with the own body let's try this one and there we go we have the Drone again and the Drone can collide with the player and it could also collide with other objects and still disappear I guess what we can also try that it can collide with the terrain and there disappears so once that happens I want to have an explosion Also let's check the debugger because that's always an annoying part we are not using Delta or the body in on player detection area body entered for that we can simply add a couple of underscores and that should fix everything yep that looks good perfect next up I want to create the actual explosion and the way that system is going to work once the Drone is colliding with anything it's supposed to send a signal and this signal we are capturing inside of the level this in turn is then going to create another scene with an explosion and that's basically just an animation for that though first of all inside of the Drone I want to create a signal let's call it detonate for which we're going to need a position which should be a vector two and as soon as we are colliding with anything we are destroying the Drone and we are are emitting the detonate signal detonate do emit with the global position of the Drone and this we should do before we are running Q3 just to make sure that we are emitting detonate before we are destroying the scene next up we have to capture this signal which needs to happen inside the level scene which at the moment doesn't work because we do not have a script in fact the station doesn't have a script either so so we can create an entirely new script for the level which I want to store in the level's folder that's fine so create inside of the ready function I want to Loop through all of the children inside of entities which means for entity in main. entities. getet children in there I want to check if an entity has the signal detonate which is only the case for drone remember inside of entities we have at the moment the player and the Drone and later on we will have other entities in there as well to check if a scene has a signal all you need is the scene itself and then has signal super easy the signal we are looking for is called detonate also make sure that you are adding if in there as well if that is the case I want to get the entity and connect a signal the signal is detonate itself and the function that we want to run is called create explosion this one doesn't exist at the moment so let me add a bit more space and then function create explosion which is going to need a position for now though just to make sure this is working let's print explosion along with the position that we are getting and this should be working already so if I run the ENT enre thing and the player collides with the Drone the Drone disappears we get explosion and a position I just assume this is going to be the right one but it seems broadly reasonable that means next up we can create a never scene for the explosion this is going to be super simple I just want to have an animated Sprite that I will rename to explosion I want to save all of this as well and I suppose under scenes we can create a new folder that I have called projectiles not perfect for an explosion but the bullets are going to be in there as well and it broadly fits okay save it in there and now we have an explosion or well we have an animated Sprite called explosion to get the actual explosion we want to add some Sprite frames and then once again use the grit symbol and under guns and projectiles we have an explosion in fact we have a couple of explosions the one I care about is bomb.png and once again we only have a single vertical frame but we have a bunch of horizontal ones eight in total then in sequence I want to go from left to right and select all of them and add the frames now we have a default animation let's have a look how this one looks we need a higher frame rate 20 maybe a bit too large 15 I suppose still a bit High let's go with 10 and yeah that fits nicer and this should also autop playay that's a really good start so next up inside of the level I want to preload the explosion all the way at the top constant explosion uncore scene which is going to be preload with the explosion. TSN that gives us the scene we have just created and when we are calling create explosion we want to create one instance of that which means VAR explosion will be the explosion scene do instantiate that is giving us a note that we now want to add to the scene Tre of level and I don't think we have a good place to put it so under main I want to add another note called project tiles once again not the perfect name but close enough to this note I want to add the explosion animation which means projectiles in main. ADD child with the explosion finally we have to update the position of the explosion which means explosion. position is getting the position from the parameter with that we have a pretty good start if I now collide with the Drone we are getting an animation but the animation keeps on looping so not amazing for that inside of the explosion scene first of all make sure that this looping symbol is not activated that way I can try all of this one more time and now we only get a single animation but we keep on having some other stuff at the end not amazing to fix this last part I want to add a script to explosion we can keep explosion as a name that's fine but I do not want ready or process in there instead I simply want to check when the explosion animation has finished for which inside of the notes we have a signal animation finished this I want to connect to the explosion and then we can do something once the animation is done for now we simply want to run Q3 which is generally a good idea because if you didn't destroy the scene after the explosion is done we would keep on adding more stuff to the projectiles these scenes wouldn't do anything and they wouldn't be visible but they would still be there and take up some processing time eventually this would cause a performance issue so something to keep in mind but now let's try all of this and the explosion disappears and also under remote Station Main and projectiles there's no child perfect now later on for the explosion and for the Drone we are going to add just a bit more but I think for now this is totally fine also to keep things just a bit cleaner I want to close a bunch of scripts light. GD we don't need player Graphics we don't need the saw we don't need the transition Gates the layer the tutorial data or the capsu shaped Tod these are the only scripts that we will need for now you can keep everything open if you have a bit more space I suppose while we add it we can also for now close the Drone scene and the the explosion and then finally move the Drone to another place so we can work on the next enemy let's move the Drone here and next up I want to create a soldier which once again is going to be a new inherited scene and the parent scene will be entities and entity I can rename this one right away to Soldier and then save all of this under entities soldier. TSN now the soldier animation is going to get quite a bit more complex So to avoid us having to do too much manual labor inside of the tutorial data scene we have one final entry the soldier animation which contains an animation player and a Sprite 2D so let's make this part visible we basically have a simple Sprite 2D which contains a whole bunch of frames for the soldier 24 in total and Via an animation player we are selecting different parts for example there's the def animation we have a run animation and things like a shoot down animation once again nothing too complicated but a bit tedious to implement so copy the animation player and the sprd and paste them into the soldier scene besides that we will need a collision shape which just like for the player is going to be a capsule which which fits roughly around the body of the soldier also you want to make sure that the floor aligns that looks good perfect with that we don't need tutorial data at all anymore and I want to save the soldier as well for this Soldier I want to add a script called soldier. GD and then create to make all of this work I want to create a few variables first of all VAR X underscore Direction by default is going to be one and this needs to be an integer at all times next up VAR speed is going to be a value we are going to get from Global and enemy parameters in there I want to have a EV value pair for soldier that contains the speed of the soldier although at the moment this doesn't exist so goo complains but that we can fix quite easily I want to copy this line for the Drone and change it to Soldier for the soldier speed I went with 50 after that good should be happy again perfect that means next up I want to create a speedcore modifier by default this one is going to be one and once again it always needs to be an integer next up I want to know if the soldja is attacking or not so VAR attack Boolean value that is false by default finally I want to get the player so on ready VAR player is going to be get uncore Tre and then get first note in group layer that covers a whole lot of setup to use all of this once again I want to have the underscore proess function and then update velocity dox the soers are only going to move left and right they don't actually have gravity because of that we can use the X Direction and multiply it with the speed and I also want to use the speed modifier by the way for the speed modifier later on once the soldier is attacking this values become zero so the soldier stops moving although that part isn't too important for now for now I want to move the soldier which I'm doing by calling move and slide that should do something in the code to test all of this I want under entities at the soldier and just to make sure we can see what's going on I want to move the soldier next to the player and then run the entire thing and this Soldier is moving he can even push the player so that's a decent start although not not great yet there are a few things that we have to add most importantly something that I always forget under collisions we have to update the Collision layer and the Collision mask the soldier should be on layer three for the enemies and the soldier can see the terrain the player and the projectiles on layer five next up we have to cover two major things number one we want to check for Cliffs and walls if the soldier hits either of them X direction should be reversed so we are going back and forth besides that I want to animate things I suppose for now we can check for Cliffs and walls and for that I want to add a few more things so the way you want to think about all of this the soldier can move left and right and we might have a cliff or we might have a wall somewhere on the side how do we check for both of those and the way I approach this is number one water Cliff we are going to have two rikas that go down right and down left as soon as they are colliding with some kind of floor we are good to go but as soon as there's no Collision anymore then the soldier is going to turn around besides that for the wall I want to set a collision shape around the soldier and as soon as this thing collides with any kind of object then the soldier once again is going to turn around for all of this let's start with an area 2B that I have called wall check area for which we are going to need a collision shape in my case I went with a rectangular shape that covers the entire height of the soldier and a bit more than the width of the original Collision shape for this wall check area in terms of collisions we do not want to be on any layer but we want to be able to see the terrain and if this thing collides with anything so we have body entered then we want to do something and that something is going to be X Direction multiply equal 1 that part we can test right away inside of station I want to move the soldier let's say down here and the player as well just to make sure we get and see what's going on if I now try all of this we get the soldier moving back and forth that looks pretty good the bin here doesn't look ideal but I think it's good enough next up for the soldier I want to check for a cliff and for that I'm going to add a note Tod and rename it to floor race because inside of this note we are going to do some Ray casting two times actually so Ray casting is just an arrow that checks for collisions I want to have one facing to the bottom right and another facing the bottom left the first SP should have a Target position of 20 and 20 and Target the terrain that's all we need in terms of naming this should be the right floor Ray cast then I can duplicate all of this and rename it to the left side the only change we have to make is that X should be 20 and there we go now we are checking for two points to the bottom right and the bottom left of the soldier now for rast we don't really use signals for some reason instead what you would rather do is I want to do this in another function check underscore lift without any parameters to check if a raycast is colliding with anything all you need is the raycast itself so so let's go with floor race right and then get collider this will return the object we are colliding with and if nothing is being returned then we don't have a collision also this should be check Cliff for proper spelling I want to check if xcore direction is greater than zero and not low race right get collider which means the soldier is moving to to the right and we have no Collision on the floor to the right if that's the case X direction should be1 the same thing we want to do for the other side I can duplicate all of this and check if x direction is below zero and we have floor Rays left get collider if that is the case X direction should be one once we have that we can call check if and then we should be good to go although to test all of this I want to move this Soldier back up here along with the player and then the soldier should turn around and he does perfect next up then I want to add the animation logic because right now all of this looks a bit weird I want to create a function animate and at least for now I only want to do two things number one I want to get this Sprite 2D and then flip H if we are going to the left because by default this Sprite is going to the right that makes this part really easy I simply want to check if x direction is below zero also I want to call animate and then we can place the soldier on this little platform and make a move left and right this is working really good perfect next up I want to get the animation player and set the current animation to run so if you look at the soldier there we have animation player and we have a run animation in there I suppose we also have an idle animation that we could include in here as well I want to check run but only if we have an X direction if that not the case else the animation should be idle next attempt and now this should be animated which looks a lot better that is some pretty decent progress next up I want the soldier to look out for the player so if the player gets close enough the soldier should start shooting which at the moment simply means that inside of the animation player we want to play the right shooting animation or in other words if the player is to the right of the soldier it should be shoot right if the player is above the soldier it should be shoot up and so on for that inside of soldier. GD I first of all want to add a function called check layer distance this function is going to check if the player is close enough which I want to Define as is closer than 120 pixels if that is the case attack should be true and the solder should stop and for now let's add pass in here so gdo stops complaining besides that once the soldier is attacking I also want to update the animations which means after we are flipping the Sprite I want to have an attack animation logic these two parts are going to be your exercise all you have to do is number one check if the soldier is close to the player and if that is the case make the soldier play the correct attack animation pause the video now and see how far you get first of all I want to check the player distance for that I want to check if position do distance two the argument in there is going to be player Doos if the resulting value is below 120 then I want to set a tack to through and to make sure that the soldier is stopping I want to set the speed modifier to zero if that is not the case else we basically want to do the inverse so a tack is going to be false Ander speed speed modifier will be one don't forget to call this one let's do it right before animate I want to check the player distance and then place the soldier roughly here I guess and right now I think the player is close enough so there we go the soldier has stopped and if I go far enough away the soldier does move again but come back and eventually stops well so that's looking good that covers the check player distance next up I want to expand the animate logic if the soldier is attacking then I want to do something else now to get started I want to know what side the player is on relative to the soldier let's say by default the player is to the right that we can already use because I want to get once again the animation player and set the current animation this value should be shoot then underscore and plus the side which at the moment is only ever going to be right after we have that we want to make sure that the function ends there we do not want to call the last line because that would set the animation back to run or idle we get that I simply want to call return and ideally also spell it correctly there we go with that we should already have something so now the soldier is shooting at the player this though only works in One Direction so not amazing yet for that I need to know the positional difference between the soldier and the player which I stored in another variable VAR difference once again we simply want to get the end position so player dot position and from that we're going to subtract the current position or well the start position which is the soldier position itself all of that we want to normalize and then we have a difference so with that in a vector we know if the play is to the left or to the right of the soldier or above or below this we can already use for example Sprite Tod do flip H is going to be the difference dox being smaller than zero that should already cover left and right so now the sold is attacking us and this works left and right next up I want to check if difference doy is smaller than 0.5 and the absolute value of difference dox is smaller than 0 or if that is the case the side is going to be up let's try all of this and then I will explain so the soldier can shoot to the right he can shoot up and he can shoot left and also by the way we can jump on the soldier which I think is pretty funny we have the soldier and then we have the player and let's say right now the player is above the soldier that means difference. Y is going to be smaller than 0.5 or in other words if the difference Vector pointing to the player needs to be pointing up and to get to 0.5 we need to be roughly in this cone the second part absolute difference of X is smaller than 0.4 is simply covering basically this side and this side in fact we can duplicate all of this and simply check if difference. Y is greater than 0 .5 and the absolute difference of X being smaller than 0.4 can stay the same if that is the case the side should be down and to test all of this let's move this Soldier up by a bit since there's no gravity that's not really a problem and now the soldier is shooting down so that part is working pretty good now I've moved the soldier up just a bit too high so we can't still check up but I think this is going to work although let's move the soldier back down here then everything looks a lot more normal this covers all of the basics of the soldier that means now we can start working on the basic bullet shooting mechanic or rather I want to create a function called trigger uncore a attack for which we basically want to emit a shoot signal so shoot do emit with a position a direction and then the gun that we want to use which we can already do actually for that we have Global dot guns and then AK position and Direction though don't exist right now but that we can work on first of all to get the position and the way you want to think about that imagine that this is once again the soldier and the player is somewhere up here because of that we know the soldier wants to shoot in this direction so that would be our Direction on top of that when we are emitting shoot the position is going to be used for the starting position of the bullet which should be roughly here the position for this one is going to be the center of the soldier plus some kind of distance multiplied by the direction or in other words we want to get the current position of the soldier and then add the direction multiplied by 20 on top of that I want to get a variable Direction which is once again going to be the target position I.E the player. position minus the current position and all of this we want to normalize that way gdo is mostly going to stop complaining the issue now is that shoot. admit does not exist and you could create this signal inside of the soldier so all you would have to do in there is signal shoot which would be possible but also not ideal because I want to have this signal inside of the soldier and inside of the player and later on these two classes should also share a few more things so ideally I want to create the signal inside of the entity which at the moment doesn't have a script and as a reminder entity is the parent class for Soldier and player it's been a while since I talked about that so I want to give entity a script which is then going to contain the signal shoot with a position a direction and a let's call it bullet type however we now have another issue and that is that entity has a script but also inside of soldier and a player we have a script as well and this script is going to overwrite the script inside of the entity meaning this wouldn't really do anything to get around that I want to add a class name and rename this entire thing to entity what this allows us to do is inside of the soldier and the player or to be a bit more specific in their respective scripts instead of extending a character body Tod I want to extend the entity and then we're getting an error right away that me shoot already exists in the parent class which is exactly what I want we can now remove this and we can use this signal from the parent class the same thing I want to do inside of the player script I want to extend entity bya that system we can add quite a few things to The Entity script and reuse them inside of the child scripts which is super handy to create some inheritance systems with the in place we can once again work inside of level. GD there we are already connecting the detonate signal besides that and let's do it before I kind of want to do something very similar so let me copy those two lines I want to check if an entity has a signal shoot and if that is the case I want to connect the shoot signal to create underscore bullet which is a function that doesn't exist at the moment and once again I want to create it before create explosion although the order doesn't really matter FK create underscore explosion for which we will need a position a direction and a bullet underscore type for now let's simply print all three of them I want to have a position I want to have a direction and I want to get the bullet pipe just to make sure are working oh and this should be create bullet let's try all of this so now the soldier can shoot but nothing is happening and that is because inside of the soldier this trigger attack is never called which we have to do inside of the animation player because if I zoom in just a bit we want to create a it when we are on this animation frame which means in my case after 0.1 seconds I want to add a all method track to the parent character body Tod scene then I want to add a key on this time and call trigger attack the same thing I want to do for the other sides as well so shoot right should also get a call method track that connects to the soldier then we can add a key that is calling trigger attack and finally shoot up I mean shoot down same thing call method track and the soldier then we want to have insert key with trigger attack if we now try all of this again we're getting trigger attack and the information so with that we know where the bullet should spawn which direction the bullet should go in and what kind of bullet we have that looks really good so this system we also want to apply to the player although first of all inside of the debugger we are getting two issues that Delta and body are not used which we can fix quite easily by adding underscores and then good do should be happy again there we go everything still works just fine so we can continue to the player for which we once again want to look at get input we haven't covered this in a while but in there we're getting all of the player input the one thing we now have to add is let's call it shoot all we need is to check if input is action just rest the action we are looking for is called Shoot if that is the case we do want to do quite a few things so I'm going to add a function shoot gun and then keep all of the logic in there all the way at the bottom function shoot uncore gun now fundamentally all that we want to do in here is get the shoot signal and emit it with a position a direction and then the current gun this we already have from this switch part also I can minimize the input function so we have have a bit more space for every single bullet we have to figure out a position and a direction on top of that if you look at the timers we have a coyote timer a jump buffer and a Dash cool down on top of that I want to add three more timers one for the AK one for the shotgun and one for the rocket launcher they should all have different reload times and this we also want to account for inside of this function I suppose let's go for it one by one first of all I will need another timer let's call it AK reload I can duplicate this because this one is going to be called shotgun reload and finally I want to have rocket reload for all three of those I want to set one short to true that part is really important and then we have to set a wait time and I think this one is best handled inside of the X export group for the gun I want to create an export range variable that goes from 0.2 to 2.0 this one I'm going to call akore cooldown with a default value of the float 0.5 I can duplicate this two times because besides AK we have the shotgun and the rocket cool down for the shotgun I went with 1.2 for the rocket 1.5 if I now comment out the issues we have down here and add pass in there I can save the entire thing and then under gun we're getting a cool down shotgun cool down and Rocket cool down although these values at the moment don't do anything for that inside of ready we need to add a few more things the way you want to approach this you want to get the AK reload and then update the wait time to the AK cool down after that I want to do the same thing for the shotgun so wait time and shotgun cool down finally rocket reload do wait time is going to be rocket cool down way of that we have a couple of timers that we can control from the parent node and that we want to use inside of this shoot gun function and once again I want to get a position and a direction that can only trigger when the timer is not active anymore although first of all I want to get the position in general which is always going to stay the same I want to get the current position of the player and to that I want to add the aim Direction multiplied with the crossair distance that's the same thing we have done for the soldier so we start from the center of the player and then we go a bit outwards in the direction that the player is shooting in although we do need an offset if the player is ducking so I want to update position it should be position itself if the player is not ducking if that is not the case else it should be position plus vect door to with X being zero and Y being the Y of set with that I can get this signal back we have a position and the direction is simply going to be the aim direction to test all of this for now back in the game under station I want to move the player a bit further away from the soldier so we're not getting interfered let's put the player down here and I guess just to be sure the soldier could be all the way over there if I now run all of this and shooting is left clicking on the mouse we are getting different directions and positions and if I switch the gun we are also getting a different gun that's 0 one or two the last value we are getting perfect that means in the most basic sense this part is working that being said though we do have to extend it because we have to include the timers if the current gun is equal to glob Bill do guns do AK and not now I want to get the timers let me simply drag them in inside of the player we have the AK reload timer I only want to emit the signal if there is no time left for this timer if that's the case I want to emit the signal and then get the timer once again let me copy it and then start it with that system I can run the game again and now I can click really fast on the mouse but we are only getting the shoot signal I think twice a second yep the cool down is 0.5 seconds next up I can copy the F statement because I want to check if the current gun is rocket and for that I will need to check the rocket reload inside of that if statement I want to emit the same signal but now I want to start the rocket reload timer after that I can copy all of this one more time now we want to check for the shot gun which has its own reload timer shotgun reload we want to emit the same signal but restart the shotgun timer now for the shotgun there are going to be two extra bits number one is going to be a whole bunch of particles I suppose we can do that part right away besides that there should be a shotgun jump if the player is in the air and shoots down with the shotgun then we should get a small extra jump let's start with the particles for that I want to give the player a GPU particles 2D node on which we first of all have to add a process material which needs to be a new particle process material and let me actually work in the 2D space then we can see things a bit better so now we can see that we have a particle process material and this one emits a couple of particles doesn't look good at the moment to make all of this look better first of all I want to add a sprite animation and I already have it open under Graphics guns projectiles we have explosion 2.png this is a very simple explosion animation which I don't want to have as a Sprite I do want to have it though inside of the texture which is going to look a bit weird so at the moment gdau is simply displaying the entire texture which I do not want I want to animate over this thing and for that we have to go to material and then create a canvas item material which doesn't do anything at the moment but in there we can set particles animation and then Define H frames and V frames in this thing you can tell we have 1 2 3 4 5 6 7 H frames so seven and this is looking much better although not perfect yet to actually get the animation you want to look at display and animation and then set a minimum speed and a maximum speed or a curve if I set a minimum speed and make this a bit larger then we are getting something so this might be a bit large so there we get something much more appropriate although once again this needs to be refined first of all under accelerations we have gravity and I want to set the gravity to zero instead I want to go to spawn and then set the spawn velocity or more specifically I want to set the initial velocity which I have set to 200 for the minimum value and for the maximum value I went with 280 which already looks a lot better oh and also you want to set the spread to 45 which I think gives you a nice range for the particles and that is mostly actually what we need for this particle system next up inside of time I want to activate one shot that way we are emitting all of the particles at once now for the lifetime of the particle I want to go with 0.3 and for the explosiveness I have set this to 0.5 that way if I run out of this again we are getting something we can refine this in just a bit but for now we have something that looks at the very least somewhat okay with that inside of the player script as soon as the player is shooting the shotgun I want to display these particles and they also have to go in the right direction I want to get the GPU particles 2D and then set the position the starting position should be the Crosshair dot position next up I have to set the direction so inside of GPU particles if you look at the velocity we can set a direction this value we can access via the GPU particles let me copy it dot process material and then set the direction to the aim Direction finally the last thing that we need is the GPU particles and then emitting should be true with that I can run the game switch to the shotgun and shoot and we are getting something that's not looking too terrible so I think we can only shoot after 1.5 seconds but this overall looks all right I'm quite happy with that as always you can refine these things a lot but for a tutorial I think this is good enough so besides that I want to work on a shotgun jump which basically means if we are shooting with the shotgun and the aim direction is down or in other words if aim direction do Y is equal to 1 you can also add end velocity doy is greater or equal to zero that way we're not going up which sometimes can look a bit weird but I'm not sure if this is really necessary it very much depends on what kind of field you want to have in the game if that is the case I want to set a variable called gun jump to true this gun jump doesn't exist so gdo is going going to complain under the jump export group I want to create VAR gun uncore jump which is going to be a Boolean value that's false by default I suppose we can move this right under jump once we have that we can look at apply movement and then right after jump I want to have the gun jump for which we want to check if gun jump and then set the velocity doy to negative gun uncore jump uncore strength I think I call this one for the jump strength we have that I want to copy this because now we also want to have a gun jump strength which should be a bit weaker let's go with 180 this one looked all right while I was testing things besides that we also have to set gun jump to ball and I want to set faster fall to faults as well let's try out of that now and with the shotgun selected I can shoot down and jump up if I fall we can do the same thing and why I that system I can jump and then get a bit of an extra jump if I try this with any other gun nothing is going to happen also with the shotgun gun if I shoot in another direction we do not get an extra jump so cool this part is also working that means we can minimize apply movement and we have covered shoot gun although this bit of white space was annoying cool that covers the player that means next up we can work on the monster the final enemy for which I want to create another new inherited scene with the parent being entity let's rename this right away to monster and I want to save it under entities there we go now we have a monster after that I want to add a Sprite 2D and then under graphics and entities we have attack.png which I want to drag into the texture and there you can see we have the monster obviously this is an animation so I want to add animation H frames to five also while we are here we should set a collision shape which I have set to a rectangle shape and expand all of this just a bit make it a bit wider and then I can drag the Sprite Tod roughly in this area I think that looks all right not perfect but good enough for our purposes before I forget inside of the monster under collisions this monster should be on on the enemy layer and it can see not the terrain it should actually only see projectiles so layer five later on I want this thing to always be on the right side of the window it shouldn't collide with any terrain you'll see in a second what I mean now besides that for the animations I want to add an animation layer which is going to get three animations so a new animation that I have called idle that's the simplest one I simply want to add a track for the property and then the Sprite 2D specifically the frame and the key for this one is going to be zero and that's it that's all we need for idle then I want to duplicate this animation to get a tack let's zoom in just a bit and I want to go through the attack animation for that I can have this bright Dy selected I want to go from zero to one then at two I want to get the second key then number three and four and five with that we are getting a very basic animation on top of that I want to go back to the idle state which means I can add another key with the value three and then on on second 0.7 at a final key with the frame zero that way I can play this thing in Loop and we are getting an attack animation that looks pretty all right so if you're following along the frames for all of this are going to be 0 1 2 3 and four after which we have a short break and then we go to three and zero later on we are also going to have a death animation but that's not too important for now next up I want to add two timers so add a timer note I want to have an pack timer and I want to have a move timer both of these timers should be one shot and auto start that's pretty important and to use them we have to give the monster a script and you might be confused at this point because because well we already have a script that's the one we're getting from entities and that's not the one that we want to use so on this monster I'm going to remove this script currently attached and then add a new one we can call this one monster that's totally fine and importantly we want to inherit from entity like we have done before for the player and the soldier once we have that we can connect the attack timer and the move timer via very simple signals that's a good setup and I suppose before we continue let's test all of this for that I don't need the station the soldier or the player and instead I want to open the sky scene the monster should only be inside of this scene and it should live inside of entities so in there I want to add the monster and then place it in a position where we can see it right away I guess we can do it here and then move the player up there as well if I now run only this scene we can see the monster and that looks all right we also get collisions so cool good start next up we have to add some movement and the system I want to have if this is the window we always have the player roughly in the center the monster should be on the right side of the window meaning the right border of the monster is never visible which I guess generally is a good idea because if you look at it the right side simply doesn't have anything to get all of that first of all we will need on ready VAR layer with get uncore 3 and get first note in group layer this we can already use to set the white position of the monster which I want to do inside of funcore process all I want to do in here is position doy is player. position. if I now run dis skuy scene the monster is always in the same white position so that is working pretty well and later on I want to have something like this where the monster is always on the right side and then it's going to attack us and also move along the xais now for that we have a bit of a problem because ultimately I want to set the exposition of the monster or rather position dot X do something like ler doos dox and then plus let's say 50 pixels if I now run dis Sky scene we're getting the monster that is to the right of the player that is a reasonable start but I want the monster to be on the right border and for that I have to figure out the camera size or in other words if you look at the scene I want to get this camera bounding box from that I can tell how far away the monster needs to be from the player and to get that back inside of the script I want to get on ready V player camera which we are going to get via player. getor cam which does not exist at the moment for that inside of the player I want to create a function getor camera no need for parameters all we want to do in here is to return the camera 2D note I suppose alternatively inside of the monster you could have also simply gotten the camera in here more directly but a system like this allows you inside of the player to add some extra logic if you have to so if you have a fancy camera setup this might be better next up I want to get the camera size which has to happen on ready as well bar camore size and then we want to get the player camera along with get viewport rectangle this is going to give us a position and a rectangle of the camera on which we only care about the size and on this we only care about the horizontal dimension on top of that this value we want to divide by the player camera once again because the player has a zoom level in our case Zoom dox so the way you want to think about all of this if you have a camera for that let's open the layer inside of a camera 2D you are getting some kind of rectangle that has a position but this position is affected by the zoom level so if you want to have the accurate size of a camera rectangle you need to do something like this where you get the size and divide it by the zoom level once you have that we can add the cam size divided by two to the player X position and now I can run this Sky scene and we're getting the monster on the right side of the window although we might want to subtract a very small amount from that for example to this value you could add 20 and then if you try all of this again this looks a bit better let's go with ne10 and yeah this looks all right cool so with that we have a very crude position but this isn't ideal yet because well the monster is always in the static position which gets to look a bit weird quite fast this we have to update quite a bit and first of all inside of process I want to refine things just a bit first of all I want to keep the exposition in a separate variable so we can simply get all of this positionx we can get rid of for now first of all I want to limit the X position via a Max function where we are getting limits do X and then a minimum function with limits do y and the actual Exposition so this is going to look a bit weird most importantly because we don't have limits yet that we can create all the way at the top export VAR limits which is going to be a vector to integer the way I want to use this one inside of the monster scene the way I want to use it is for a minimum and a maximum position so X and Y doesn't really apply here but when you are looking at this line we are picking the larger of two values and if this value is zero then we can never go below that value same with minimum if our limits Y is 100 then we can never go beyond that value overall combining these two allows us to clam something within a certain range and then to use it inside of the sky scene you basically want to look via the ruler how far the monster can go let's say the monster can only go up to this point I suppose 50 pi pixels works with that for the monster we can set the x position to 50 and the maximum position for now to 200 that's the basic idea although for that to work inside of the monster we have to actually use this x position I want to create another variable first of all for y and then at the end set the position to Vector 2 X and Y if I now run all of this the monster is not moving at all which I think is because of this line most likely because the limits are too narrow let's set the maximum one to 1,000 and then at the very least we should be going in one direction that looks much better so now at some point the monster is going to stop right at the end and if I go to the left it should also stop and here somewhere although we might need a larger value let's try 200 next attempt I can now go to the left and at some point the monster disappears so that part is also working that way once the player enters the scene we can't see this monster immediately and I suppose the maximum value should be just a bit larger 1,100 100 next up the monster at the moment is always in the same wi position as the player which isn't ideal to make this a bit more interactive I want to add three more variables bar Yore range which is going to be a vector two with some kind of range let's go with 50 and 50 besides that I want to have VAR Yore offset which needs to be some kind of floating point value and finally I want to have VAR Direction actually this one we don't need you're going to see in a second why we only need y range and Y offset essentially when we are setting the Y position of the monster I want to be on the same position for y as the player but then potentially add a y of set which we are getting whenever on move timer timeout times out in there I want to create a wi and let me hide everything else so we have a bit more space so as always I want to create a tween and then tween a proper key the object we want to work on is self and the property path will be yore offset after that we want to get a random value from inside of the range which means we will need a random number generator that we don't have at the moment for that at the top and let me comment out this line so goo stops complaining I want to have a VAR random number generator which we can create via a random number generator do new that's all we need now I can uncommon this line and use rng. randf range for which I will need a minimum value and the maximum value the minimum value will be y range dox and the maximum value will be y range. y finally we will need a time or duration let's go with 0.6 this should already do something if I now Run the game we're getting some movement after 1 second and that's about it to run all of this again I want to get a tween and a tween call back for which we simply want to get the move timer and start the entire thing make sure not to call it if I now run out of this again we're getting a movement and this movement keeps on running so now we have a monster that updates its y position although we always stick somewhat close to the player that is because we are only adding a fairly small offset that always adds a value to the player wi position that way the monster can never get too far away from the player that covers the movement next up I want to work on the attack timer timeout if this timer triggers I want to get the animation player and set the current animation to a attack let's try this one and we are getting the attack animation I want to get the attack timer once again and set a random weight time to make the attacks feel a bit more organic for that RNG once again Rand F range with a value of 0.5 for the minimum and 2.0 for the maximum also this should be Rand F range finally once we're done with all of this I want to get the attack timer once again and start it all over again so with that we should have more organic attacks although I think something is missing if you look at the monster this doesn't look right we always have the same attack interval that is because if we look at at the monster animation player we only ever have the attack animation and this one is looping and since we simply go to this one it never stops and well we get the same outcome so what we want to do after this animation is done we want to go back to the idle state for that I want to create a number function let's do it below the move timer signals bunk return to idle all we want to do in there is get the current animation and set it to idle then save the scene and inside of the attack animation add another track or call method go to Monster and then at the end of this animation well return to Idol and now select the sky scene and run the entire thing we should get only attacks in certain intervals and that feels much more organic so now we don't attack constantly anymore that means we can minimize return to Idol and we also covered the attack time at timeout next up then we have to add the logic to actually shoot bullets the basic idea for the monster if I go back to the scene is that we going to define a couple of points in front of the monster and as soon as the monster is attacking we are shooting bullets from these points for that first of all inside of the monster I want to add another node which can be a node 2D that I have called bullet options in there I am going to add a couple of children the first one is another note 2D called zero in which we are going to add a marker 2D node which I want to move to another position let's move it right in front of the monster maybe a bit closer so in a bit we are going to add a few more children and then select them at random if we are selecting this first one we are looking at this marker and shoot a bullet from this point besides that I can duplicate all of this and then move the marker let's say here duplicate it and move it down there or in other words if we select this child we are shooting a bullet from these two markers I guess we can add a third one just to make it look a bit prettier so we have one in the middle as well finally we can duplicate all of this one more time because now I want to have and let me hide the other children I want to have a marker up there I want to have a marker down here the next marker should be roughly here which I want to duplicate and then have another one down here I hope all of that still makes sense we basically have a couple of children that contain a bunch of markers and those would be our bullet starting positions back in the script I want to create I suppose we can do it a both return to Idol bunk riger uncore attack for which first of all we want to pick one of the bullet option starting positions which I have called optionor index all we need in here is the random number generator and then Rand I range we want to create integers within a certain range the starting point is always going to be zero and the final value will be the bullet options. get child count minus one let me add a bit more space and with that we're getting a random number to pick one of the starting positions via that we can get this selected let's simply call it selected for that I want to get the bullet options and then get child with the option index after that I simply want to get for marker in selected. getch and finally I can call shoot. emit with the position Direction and The Gun type the position is super easy we simply want to have marker. Global position for the direction the bullets should always go Vector 2. left finally for the gun type I want to get globals do guns. AK and I believe I called This Global there we go so with that we are emitting a signal for every single position when we are calling trigger attack although for that we have to figure out when to call trigger attack which once again happens inside of the attack animation we already have a call method track and I want to call trigger attack when we get to this point so in there at a another key with trigger attack which doesn't exist because I didn't save the script save it and then it should show up inside of the animation player so void trigger attack and there we go with that if I now run the sky scene the monster can attack and we're getting a bunch of positions that looks really good so with that we have trigger attack and that means we have a whole bunch of entities that can shoot bullets so next up we can work on the actual bullets so at this point we have all of the entities and every single one of them has a signal to shoot a bullet we can actually create a bullet class that takes care of all of the logic and for that back on Gau I want to create a new scene for which I want to use an area 2D which is going to need a Sprite and a collision AP at least for now and so that we have something I want to go to guns and projectiles there we have default.png which I want to drag into this Sprite B and then we can see a very small bullet while we are here we can also add the shape I think a capsule shape would work best something like this and under transform we have to rotate the shape by ° to something like this also before we continue I have realized that the debugger is unhappy with us because of Delta not being used so there should be an underscore also I want to rename area Tod bullet and then we can save all of this under projectiles and bullet and now if I run the entire thing everything is working all right perfect so now we have we have a bullet and this bullet is going to need a script we can keep the default name that's totally fine and in here fundamentally we simply want to move the bullet in the direction but I think we should go step by step first of all when any of the entities is shooting a bullet we are emitting the shoot signal that we are capturing inside of the level which means when we are creating a bullet I want to actually create a bullet and for that first of all like we have done for the explosion I want to create a const bullet scene which needs to be a scene so we want to preload the bullet do TSN once we have that when we are running create bullet I want to create a bullet from the bullet scene via instantiate after we have that I want to get the projectiles and add a child like we have done for the explosion let me copy it and instead add the bullet that should already work if I now Run the game I can shoot and nothing happens although I think if you look at remote under station and Main projectiles we have a whole bunch of bullets the issue is in inside of the game we are not updating the position of the bullet so they are always in the top left to fix that I simply want to get the bullet and update the position to the position that we are getting from the parameters if I now try all of this I can shoot and we are getting a bullet looking good also if I go and find this Soldier he can also shoot a bullet although there we have a bit of an issue that the soldier turns around once he collides with a bullet so not amazing that we can fix right away because at the moment the bullets are inside of terrain they should instead be on projectiles and can see the terrain the player and the enemies also when we are creating a bullet I want to pass in the position Direction and gun type that we are getting from the level in other words these three arguments need to get into the bullet and the best way of doing that I find was by running a setup method with position Direction and The Bullet type for that to work inside of the bullet we will need Funk setup with position Direction and The Bullet type first of all in there we want to update the position of this note and set it to the position next up for the direction inside of this class VAR Direction I want to have a vector two and the direction we are getting from setup is going to overwrite that value or in other words direction is going to be here the bullet type we don't need for now so let me at an underscore and after that I want to have Funk underscore process in which we are going to move the area to D by updating the position and all we have to do is plus equal direction times some kind of speed which doesn't exist at the moment so let's go with 100 instead we fix that part in just a second if I now run all of this I can shoot and we're getting an error that setup doesn't exist inside of the position and that's easy to fix this should be bullet. setup not bullet. position. setup next attempt and now the bullets are moving but they're moving way too fast that is because inside of the bullet we are not adding Delta so next attempt and now the bullets work but they're also working very very slowly and you can also tell that if we are shooting diagonally they're moving much faster that is because the direction was not normalized very easy to fix we when we getting the direction want to get the normalized direction so that should give us a constant speed and it does perfect besides that I want to change up the images depending on what gun we have so if we have an AK or the default then we want to have default.png the one we already have but if we're shooting a rocket I want to have large dot PNG and if we're using a shotgun there shouldn't be any visible bullet because we already have the particle effect I want to check if the type of the gun the one we have added an underscore to just a second ago if that one is in global. guns. AK or global. guns let me copy it do rocket if that is the case I want to update this bright 2D do texture and assign it a new texture now for that inside of global I want to set a General gun data dictionary so we don't have to set everything manually this gun data dictionary you can find inside of tutorial data in there we have gun data and this is what I want to use if you simply uncommented you are going to get an error because we do not have guns inside of this script but if you copy it into Global then it should be working because now we have the enum guns and all we are doing in here is for each of the guns for example for AK we have damage speed and a texture that we are preloading which means I can save the script and go back to Bullet in there I want to get Global gun data the current type of the gun and then get the texture besides that I can also create a speed and a damage for this bullet although for that first of all I want to create two more variables speed and bar damage speed needs to be some kind of integer and the same for damage after that for the speed I want to have Global gun data type and speed while for the damage I'm going to do the same thing except for the damage if you look at global. GD there we always have damage and speed except for the shotgun that means if I now run all of this if I shoot the AK we have a small bullet if I shoot the rocket we have a larger bullet although the speed we are not using yet because inside of process we always have 100 this should be speed next attempt and now this feels much better also if I use the rocket this thing moves slower very good also what I want to do in here if we're shooting a rocket the bullet needs to be explosive which I want to store inside of another variable which is going to get a Boolean value that by default is false and then we want to set explosive to the gun type being equal to global. guns do rocket if we have a rocket this value will be true if we have an AK it will be false and just to make sure we are implementing all of this I want to check if this bullet is colliding with any so with the area Tod selected I want to check if we have body entered if that is the case I want to get detonate and emit the signal along with a position now this detonate signal doesn't exist so at the top I want to have a signal called detonate with a position that needs to be a vector two the same thing that we have done inside of the Drone in fact you could create a parent class for the Drone and the bullet because those two share quite a few things but that might be a bit of an overkill for such a simple game but for a more complex one it would make sense anyway now inside of the bullet we have detonate which we want to emit along with a position which should be the current position of the node and after we have done that I want to run Q3 the only thing we now have to do is inside of the level when we are creating a bullet we have to connect the signal or in other words if the bullet type is equal to global. guns. Rocket then we want to get the bullet and connect this signal we have already done this before so I want to get the detonate signal and connect it to create explosion although make sure not to call it we only want to pass in the function if I now try all of this in the game I can select the rocket launcher and shoot at things this is working and if I go up I think to the right we have the Drone let me try to hit it and this also works we are getting the same explosion perfect besides that the debugger is unhappy with me because we are not using the body on body entered we are going to to do that later but for now I want to keep the debugger happy so with that we have two of the bullets besides that I want to check for the shotgun which is inside of else in other words the type is not in AK or rocket it can only be the shotgun if that is the case I want to basically disable the bullet entirely or in other words I want to get rid of the Collision shape 2D or at the very least set it to disabled and I want to hide this bright 2D let's try that part if I now select the shotgun we are only getting the particles cool that's working nearly done there are just two more things that I want to do number one inside of the bullet I do want to add a timer which I have called kill timer the basic idea is that if the bullet exists for too long we want to destroy it that way if for example we are in the sky level and the player shoots up the bullet might go on forever and never stops existing or in other words at the moment bullets only disappear once they collide with anything in the terrain but if that doesn't happen they might never disappear so to work on that I simply want to add a timer that every bullet disappears after 10 seconds just to be sure which means I want to connect a signal and once this timer runs out then I want to call Q3 after that inside of the timer I want to set auto start and one shot to through and for the wait time let's go with 10 seconds that should already work besides that I want to add a point light and for now let me simply hide it so if I am running the game and I shoot a bullet the bullet might be a bit hard to see and adding a light to it might make it more visible although this part you don't have to do for dis bullet I want to go to lights and then use main.png drag it into the texture and this is going to be way too large so we want to set the texture scale to something much more reasonable let's say 0.1 actually 0.05 obviously play around with this and the strength could also be a bit lower or if I now try this one and I shoot a bullet they are much more visible although at this point if I shoot with the shotgun there is going to be a very Fain light effect somewhere which means when we are shooting with a shotgun I also want to hide the light or in other words I want to get the point light Tod and hide it with that we can shoot a bullet also if I go to the sky scene and run this one this enemy should also be shooting bullets and that is looking pretty good they also disappear once they collide with the player we are making progress cool that means next up I want to implement the actual hit mechanic which is simply going to be a function inside of entity in there I want to create function hit along with the damage for now if that is the case I want to print the note itself and then the amount of damage that we should be receiving this function I want to call as soon as a bullet is colliding with this body in other words when the bullet or this area Tod is colliding with a body then we want to call hit on this body although that we only want to do if it exists inside of this body if that is the case Body Dot it along with the damage of the bullet now to test all of this I want to reopen this station scene and then move the opponent somewhere down here after that we can try the scene and shoot at the enemy and we're getting Soldier or player along with the damage that's already working pretty well once we have that there are three things that we need to do number one is actual health so that all of the entities have some amount of health and that amount of Health gets reduced whenever we get hit by a bullet and if the health reaches zero then we die besides that I want to create a hit Shader so that the entity flashes in white once we get hit and finally I want to have an invol timer so that after every single hit we are invulnerable for a very short amount of time so if we get hit five times at once we don't die immediately that would be a a bit annoying I suppose the health part is the easiest bit because for that inside of entity we simply have to create a variable called Health which always is going to be an integer and let's say a default value of a 100 after that inside of the hit function I want to reduce Health by the amount of damage that we are getting so Health minus equal damage once we have that after the health goes below or equal to zero we want to call the function which we can set once again via a set function which always wants the value that we are receiving and then we want to overwrite the health value with the value we are getting besides that I can check if health is smaller than or equal to zero if that is the case I want to trigger death which doesn't exist at the moment so Funk trigger death but now let's simply print F so we have something and for testing purposes after any entity got hit I want to print the health amount let's try all of that I can now shoot at the soldier and let me do it like this so we only get one output if you look at the output we are getting Health being reduced and at some point we getting death and zero we don't have the actual logic but the important part is in place and also we don't need the print statement anymore instead inside of the entity under timers I want to create one more timer that I have called the invol timer which is going to get a one shot and a duration of 0.4 so the issue at the moment is that this health is going to get reduced as soon as the player is hit or as soon as any entity is hit and this works fine however if we are going to the station and the player for example C with a saw which should also trigger the hit method and if we don't add an invol timer the saw is going to hit the player on every single frame of the game which means the player is guaranteed to be dead within like 10 frames and to avoid that we want to use the invol timer and to use it we don't even need a signal all we have to do is check if not invol timer. time left only if that is the case do we want to update the health and whenever we do update it we once again want to get the inval timer and then start it and to actually test it we have to look at the saw again so let me open saw we already checking if a body has entered the saw this we now want to use all we have to do is get the body and then call hit with some amount of damage let's say 10 for this one and just to be extra sure I still want to check if it is in the body and only then do I want to call the method and with that let's go to the station and move the player into the right spot so in here oh and also once any entity gets hit I want to print the damage let's try out of this now and and player should get hit and there we go so now the player only gets hit once but if we didn't do that and simply printed something let's say damage when there's contact if I now run all of this we are getting hit oh still only once oh and I realize why because inside of gdau for on body entered this only triggers once when the body is entering the shape which which I guess is another nice Safeguard so we didn't really have to worry about a timer but it's generally a good idea with that we have the invol timer and we have a start for the health next up I want to work on a hit Shader that way once an entity gets hit it flashes white for a short amount of time and for that first of all we have to create the Shader which we have to do in one of the entity scenes let's do it for the monster inside of sprite 2D I want to go to material and then create a new Shader material and for that we don't need the animation player inside of this material I want to create a new Shader and I want to use a visual Shader although for the name I do not want to call this monster. tress instead I want to call this Shader flash because we are going to reuse it also I want to save it not in entities instead I want to create a new folder called shaders in there we have the flash Shader and now I can create it in there we have let me reorganize all of this a bit fundamentally we only want to update the color for which we can create a color parameter that I want to rename simply to color and I think for this one we can also set a default value of white this I want to connect to the color and then we are already getting a silhouette this we want to be able to mix with the original color of the texture which means besides that I want to get the original texture which I can get via the texture this will contain the original color information and to read it I will need a texture 2D and let me zoom out a bit actually let me full screen all of this I want to place the texture into the sampl 2D Port then G is going to complain that this should be a sampler Port there we go now gdo is happy and by default we are already getting the UV so this we don't have to worry about as an output we are now getting a vector 4 that we want to mix with this color and for that we can use a mix function and make sure you're getting Vector four we want to get the first value and then the second value and the output is going to be our actual color that should already give us some of the original color back because right now the weight is at 0.5 so we are getting 50% of this color and 50% of the new color to control this weight I want to add a float parameter and connect it to the weight also I want to rename the float parameter to progress and set a hint range we want to go from 0 to 1 that finishes the Shader I can now go to Shader parameters and set the Shader progress along with the color so if you want to have some really freaky color go with that I'm going to stick with white and by default the progress should be zero this Shader we now want to apply to all of the textures of every single entity which means for the player I want to go to player graphics and in there we have LAX and torso which should both get the Shader material and then we can quick load the Shader we have just created same for the Torso material I want to create a new Shader material and then quickload the flash Shader by default this doesn't do anything but that we're going to work on in just a bit next up I want to work on the soldier because in there we simply have a Sprite 2D which once again is going to get a Shader and then in there I want to quickload the flash Shader finally we have the Drone and for the Drone we have an animated Sprite 2D which can also get a shade of material once again quickload and Flash cool with that every single entity texture can be flashed and let me clean up all of the scenes just a bit we don't need this guy and we don't need the bullet now inside of the hit function I want to call something like flash with the notes that can be flashed this is a function that doesn't exist at the moment so Funk flash along with the nodes and for now I simply want to print the notes that we are getting and let me talk through this by notes I am talking about all all of the nodes that have the flash Shader and this I want to get from inside of the hit function so in there I also want to get the nodes that means inside of the bullet when we are calling hit we have to somehow get all of the nodes how can we do that and well I basically want to get the body and then get the Sprites the way this system is going to work for example for the player I can minimize everything else and then at the bottom Funk getor Sprites no need for parameters for this one I simply want to return an array with the nodes that have the Shader for the player this would be player Graphics Lex and then we have player graphics and foro those are being returned by get Sprites so when we are are inside of the bullet calling this function we are getting all of the nodes inside of an array and then inside of entity when we are calling this function we are getting the notes that we are passing into this flash function and in there we are printing them the same thing I want to do for the saw so in there we have the damage besides that I want to get body. getet uncore Sprites get Sprites is not the perfect name but I think it captures the essence reasonably well so with that I can run all of this and now if the play gets H by a saw we are getting the Sprites that have the Shader that's really all we need once we have that we can work with the Shader inside of the entity I want to create a tween to control the parameters of the Shader which means I will need VAR tween and create TW once more after that on this tween I want to call a tween method I find when updating a Shader using tween method works best the way it works is that we have to pass a function into this twen method as an argument let's create it first of all I want to create a function set flash value which always needs to have a value that in our case should be a float for testing purposes for now I simply want to print that value after that inside of this tween method I want to get set flash value without calling it The tween itself is going to call it I don't want to do this manually after that we have to do the usual stuff for the tween we need a start value we need a final value in my case 0.0 and 1.0 and then a duration but now let's go with one second if I now run all of this you should be able to see the values going from 0.0 all the way to 1 over duration of 1 second that is what we have gotten from this function so basically we are simply calling it over and over again until we reach that point to this function I now want to add all of the nodes which I can do via bind and then pass through all of the noes to capture them I have to add another parameter for the notes I can simply go through all of the notes via for Loop for note in noes and then actually update the value so I want to get note material and then set Shader parameter the parameter I want to update is called progress and the value I want to give it is called value that should actually be it if I now run all of this the player should flash up once we get hit and he doesn't I think that's because we need an uppercase P for Progress next attempt and now this is working the player very slowly becomes white to make this a bit more Snappy I want to set the duration to to 0.1 and then set the transition for which I want to use Queen and trans quadratic next attempt and now the player should flash up much faster and there we go this works after this twin is finished as well I can duplicate the entire line and then go from 1.0 to 0.0 over a duration of 0.4 with that the player should only flash up for a short amount of time and there we go this looks pretty good so that covers the Shader for the player and I do realize that all of this was probably somewhat confusing so let me go over it again a bit more slowly inside of every single entity for example for the player we have some kind of sprite that contains all of the graphics inside of the player this means lags and torso I have given all of these Sprites a Shader The Flash Shader and this Shader can be updated by the color or by progress so if you toggle progress and set it to one then you're setting the texture to White and that's all that's happening in there after that for every single Sprite we are going to create for example the player a get Sprites function that simply returns all of the nodes that have the Shader and and as soon as anything hits that body for example a saw is hitting the player then we are calling body do hit with the amount of damage and with the Sprites that means then inside of entity we are calling the hit function and Via that we are calling flash which in turn is going to create a tween that itself is calling a method in our case set flash value and passes in all of the nodes along with a value which we are catching add parameters value and noes and finally after that we are looping through all of the notes and then updating the Shader that's basically all that's happening in here the ultimate logic is fairly simple but we are passing through a whole bunch of steps which might make all of this more complicated also what you always want to be aware of when you're working with a tween you want to be really specific with your data type so make sure you are basically always using floats if used integers in here like simply a zero then there is a pretty good chance that gdo is going to pass in an integer which wouldn't really work for our Shader now all of this I really want you guys to practice which means for the Shader Logic for the soldier the Drone and the monster you should implement the logic yourself most of the work I have already done but you will still have to implement a few more parts so pause the video now and try to finish up the Shader all righty I suppose just to see what's happening if I go to the station scene and then move the player over to the soldier if I now run the entire game and shoot at the soldier we're getting an error that get Sprites doesn't exist in the character body 2D soldier that makes sense because inside of body hit the soldier doesn't have get Sprites that is easy to fix so for this Soldier I need to add another function get uncore Sprites all this one needs to do let me open up the soldier scene the only thing that we want to do is to return the Sprite 2D or at the very least the node with the Shader so this I want to return and since we are going to Loop over it I want to return it inside of an array and that should fix the soldier if I now shoot at the soldier he also flashes for a bit next up then we can work on the Drone which as a reminder if I open the Drone scene autographics has an animated Sprite and this we want to return via getor Sprites return the array with animated Sprite 2D finally we have the monster which has simply a Sprite Tod which means we can copy the thing we have done for the soldier and simply return Sprite Tod let's do it all the way at the bottom function get Sprites return Sprite Tod that should be it if I now run all of this I guess we should try the soldier still works then we can go up and shoot at the Drone just have to make sure I'm hitting it and this one doesn't work yet also if I go to the sky scene it does work for the monster so this part is okay all right with that we are nearly done I just have to make sure that inside of the station we can shoot at the Drone and let me put it roughly on the same level as the player so it's a bit easier to test if I shoot at the Drone nothing happens and just to test things inside of on body entered for the bullet I want to check first of all if print drone hit is the case and if then hit isn't body for that I can print hit I think that's the issue if I now shoot at a bullet we are getting drone hit this part does work but the actual hit inside of the body does not that means there's no hit in the body of the Drone and if you open the scene you can tell why the Drone inherits from character body to D while it should inherit from entity if we now try all of this again there we go now the Drone is flashing perfect awesome with that we have the basic Shader for all of the entities that is some pretty good progress there's one more thing I do want to do before we come to death and that is set a proper amount of Health for all of the entities at the moment we are always going with 100 but if you look at Global I would rather set some kind of enemy parameter for health for example for the drones I want to have a health of 20 and for the soldier I want to have a health of let's say 60 besides that I want to have one more entry which would be the monster this one doesn't need speed I suppose 200 is pretty good with this one and then when we are inside of the Drone for example we can call Funk uncore ready and update Health to be the value that we are getting from globals so enemy parameters drone and health and obviously this should be Global this line I can now copy because next up I want to work inside of the soldier in which we can do the same I want to have Funk uncore ready and update the health in there except now I want to have this Soldier finally we have the monster on which we can do the same thing bunk uncore ready and then we are setting Health to the Monster Health I suppose after that inside of entity we can keep 100 for the player and just to test if this is working I want inside of bullet when we are hitting anything Sprint body. Health let's try this and for the drones I think we should get 10 or 20 so this is working pretty well with that in place we can start working on the death logic so for example for the Drone if Health gets to zero this thing should explode whereas for the enemy soldier we want to play the death animation and for the monster we want to play something a bit larger so let's go step by step Oh and before we start with that inside of entity we are already checking via the health if this value is below zero and then we are calling trigger death this at the moment doesn't do anything oh well it prints something but I want it to do nothing because this function I want to overr right for example in the Drone I want to have trigger de as well and this trigger def is now going to override this trigger def although you could call it via super and in there we have trigger def once again but that we don't want to do since trigger death and entity doesn't do anything inside of the Drone if the Drone dies we want to emit the detonate signal so detonate emit with the the global position of this node and besides that we want to Q fre the entire thing that should be it and the Drone dies in a single hit so I can shoot and the Drone disappears next up we can work on the soldier which once again is going to need a trigger death function in which we first of all want to set the speed underscore modifier to zero and then we want to set the anim a player do current animation to death or in other words if I close the Drone scene and open the soldier one inside of the animation player earlier we created a death animation this we want to play as soon as the soldier dies and that should actually be it at least for this part so inside of the station I want to move the player over there let's try all of this now and I can shoot at Soldier and eventually we should get the death animation and we don't so let's check if this function is being called in the first place print death so at some point we should be getting death and we do that means this function does run and I think we do play the animation but then be because of animate we are switching straight back to the regular shooting animation so what I want to do instead is under process only do all of this if health is greater than zero if that is not the case we want to play the death animation once and then we are good to go so if I now shoot at the soldier there we go we're getting the death animation and this almost works the one issue we have now is that the Collision shape for the soldier is still there also we can do this which is arguably pretty funny anyway what we want to do after the soldier has died we want to get the Collision shape 2D and set disabled to true although this usually gives you some weird behavior and gdo is going to complain let me try and there we are getting a debugger issue that we have to update physics inside of call deferred that's not a problem we simply have to create another function called disable collisions although the name doesn't really matter all we want to do in here is disable the collisions and then use called the third and the name of the function that we want to call my case disable collisions that way we can do all of this again and now we are not getting collisions anymore perfect that looks all right so finally we can come to the monster or first of all I want to close the soldier scene once again I want to create a function I suppose we can do it right below trigger attack function trigger death I want to start by disabling all of the timers move timer. stop and a attack timer. stop besides that I want to get the animation player and set the current animation to death I don't think this one exists at the moment inside of the animation player we have to create another animation so a new animation called def for which we first of all want to set a property track for the Sprite 2D and the value I am looking for is modulate basically over 1 second I want to start from a key that is all white and then at the end the value should have the same color still white but then the alpha value should go to zero all this is going to do it's well fading out the monster while this is happening I want to display lots of explosions for which I want to add a call method track that connects to the monster and in there I want to call lots of explosions for that though inside of the script we will need to add just a bit more first of all I want to create a signal detonate like we have done for the Drone and for the bullet in there we have the position and then when we are playing the death animation I want to call a function explode over and over again which is then going to give us a random X and Y position inside of this Sprite so fundamentally we simply want to get detonate and emit it with a vector to for randomx and random uncore y these two values do not exist at the moment to create them I want to have VAR random X and VAR random y for both of them I want to get the RNG or the random number generator along with Rand I range for which will need a start and an end point in my case I went with global position x 20 and Global positionx + 20 the same thing we can do for y except now I want to replace x with Y that is going to give us random positions around the center of the monster next up inside of the animation player for the death animation I want to call this explosion or in other words I want to create a key with the explode function and this I want to insert multiple times so throughout this function simply add explode wherever you think it's appropriate explode here explode there and we can do this a couple more times bya this system you are getting a ton of control although setting it up is arguably a bit tedious let's say something like that and then we should have a nice animation once the monster disappears all of this let's try the sky and then play the scene and we are getting already a semitransparent monster so this is not ideal but the explosions do work multiple times actually which I guess is also kind of funny but not the intended experience first of all for the animation player when we are playing the death animation the default value should be zero so make sure you are starting here on top of that when this thing is done I want to play another function which is simply Q3 that way we're getting rid of the entire thing now make sure that the timeline is at the beginning so the monster is visible and then inside of Sky I want to defeat the monster and the rocket launcher is best for that although it's going to take a bit there we go now disappears and now the monster should be gone and perfect this is working quite well that is leaving us only with the player and for this one I didn't really know what to do for trigger death because we don't really have a reset state so for this one Funk trigger death I simply want to end the game but which we have to get the tree and then call quit now to test that if I run the game I think this Soldier is going to shoot at us and after a couple of hits the game is going to end not amazing but good enough for our purposes although while I'm testing things I want to disable this function or well comment it out so the game doesn't end randomly we are nearly done there's just one more thing that we have to cover and that is inside of the bullet we do get the bullet if the player is using the AK or the rocket but if we using the shotgun none of that happens so this one right now doesn't do any damage in fact if I go to the shotgun and an enemy nothing happens for that first of all I want to get all of the enemies but this we can't really do at the moment for that though inside of all of the enemies so for example inside of the monster we can assign them to another group which is called enemies this I want to do for the monster I want to do it for the soldier so Soldier selected and manage group enemies finally the same thing for the Drone in there I want to have enemies as the group with that we can return to the bullet and VAR enemies is simply going to be get uncore 3 and get notes in group enemies in fact this we can use right away in a for Loop for enemy in get tree and enemies and then we can get bar enemy uncore position which is going to be enemy and POS in there we want to get two things fundamentally number one is the bullet angle number two is going to be the enemy angle and finally I want to check if position so the position that we are getting from this setup method is distance to enemy do position below 100 or well if you look at Global there we have gun data and shotgun range which should be a 100 if we are inside of this range Global gun data shotgun and range if we are close enough and the absolute value of the bullet angle minus the enemy angle is let's say below 90° if that is the case we want to call the hit function on the enemy so enemy do hit first of all though we have to get the bullet angle and the enemy angle both of which are fairly simple to get for the bullet angle we simply want to get bullet angle dot angle which is going to return a value in radians which I do not like to use so red 2 de then for the enemy angle I want to do the same thing radian 2 de and in there we want to get the target Vector so enemy. position and subtract the current position or our start point and from that we want to get the angle oh and I made a mistake this bullet angle should be the direction of the bullet next up inside of this thing G is complaining that we cannot get shotgun from the gun data let's have a look inside of global we have gun data and guns. shotgun so this shouldn't be sh shotgun this should be global. guns. shotgun and now G is happy again so with that we know that an enemy is close enough to the player and on top of that the enemy angle is within the same angle that the bullet is going in or at the very least it's in the same quadrant if that is the case I want to call enemy. hit with global do gun data in there we want to once again get global. guns. shotgun from which we can take the damage and finally we want to get enemy and get underscore Sprites that should be all if I now Run the game and select the shotgun I can shoot but we are getting an error this should be enemy. position not PA next attempt if I now shoot I made the same mistake in here again this should be enemy dot position so final attempt I have a good feeling now and we can hit the enemy and the enemy dies so this is a really good sign that means we now have the shotgun logic as well and that covers the entirety of the bullet logic at this point we only have to add some minor things like managing data between scenes and the player Health indicator along with a few more minor things like sound all of those we're going to add in the next part at this point the majority of the game is basically done and we pretty much just have to finish up some smaller bits the two most important parts are the player Health indicator and the enemy persistence across levels so that if we are defeating a soldier in one level switch to another scene and then come back the soldier is still defeated other than that I want to add some sound and then refine the levels just a bit more but those parts are going to be fairly minor let's Jump Right In Here we are in gdo and I want to start by giving the player a health indicator for that I am going to create a new scene for which the root note is going to be a Sprite 2D that I'm going to rename to health circle this I want to save inside of scenes entities and player along with the other player scenes and I guess while we are here I also want to open the player scene and then attach the health circle to it oh and by the way I closed all of the other scenes so things are a bit more organized for the health circle the basic logic is going to be that we have a circle around the player something like this and if the circle is full we are at 100% Health but if the play gets it we want to reduce this value which should also be animated and all of that we are going to do via a Shader for which inside of the health circle I want to assign some kind of texture you could either use the good texture and place it in there or alternatively you could remove it and then add a noise texture and set a width and a height on it we are going to display everything via a Shader anyway so I'm going to use the gdo logo in there I want to go to material and then create a new Shader material in which I want to create a new Shader and I guess just for some variety I'm going to use a code based Shader the name can stay as it is and then create and by the way you could also use a visual Shader for all of this we are not going to write anything too complicated so let me rearrange all of this so this becomes a bit more visible what the Shader I want to first of all Define a couple of values all of which are going to be uniform so we can influence them inside of the inspector I want to have uniform Vector to Center which is going to get a value of Vector 2 with 0.5 and 0.5 don't forget to semicolon next up I want to have a uniform float radius for which I want to have a hint range from 0 to 1 although without the step size and the default value is going to be 0.3 besides that I want to have a uniform load WID which is also going to be hint uncore range with a value from 0.0 to 1.0 by Def default it's going to be 0.2 besides that for now I want to create one more which is a uniform Vector 3 for the color which is going to get a source color hint with a default value of vector 3 1.0 so pure white simply by having all of these values inside of Shader parameters we can set a whole bunch of stuff the only Shader that we want to create is a void fr Shader without any parameters or arguments and in there I want to first of all create a circle or in other words I want to set the alpha values for which first of all I want to measure the distance between the center and the current pixel remember once again for a Shader we are separating the entire Sprite into very small units and then we are processing every single unit simultaneously so when we getting the distance from the center this point we can get some kind of circle the way this is going to work and let me call this one the Outer Circle I simply want to get the distance between the center and the current UV position this I can now use for the color Alpha value so I want to assign the Outer Circle that way it's a bit hard to see but the center is not visible at all and the further out we go the more visible all of the this becomes all of this we can make much more visible by adding a step which is going to give us a cutof point for which I want to use the radius with that we are getting a proper Circle that we can also influence via the radius so this changes the size of the entire thing besides that I want to create another float for the Inner Circle that we're going to cut away that way we can still see the player for which we are still going to use the step function along with the distance from the center to the current UV although for this one we want to get the radius minus the width don't forget the semicolon and then this should be working so this is basically just a smaller Circle compared to the Outer Circle and effectively we want to cut out the inner circle from the Outer Circle which we can do by getting the Outer Circle minus the Inner Circle and if I now save we are getting a cutout in the middle and for that we can set the WID so if I make this smaller we have a smaller WID I think 0.2 is a bit too much let's say 0.01 bit too small let's go with 0.05 and then if I reset the value okay this one is a bit too fake but you can experiment with that let's go with 0.03 I think that looks okay and for all of this we should check the player as well so I think that generally looks okay oh and by the way while we are here before we continue we can update color. RGB right away by setting it to the color that part's super easy with that we are getting whatever color we are specifying inside of the Shader parameters I'm going to go with some kind of red at least for now besides that one more easy thing that we can do is I want to get uniform float Alpha which is going to get a hint range between zero and one without a step size with a default value of 1.0 this value we want to use to toggle the visibility of the health circle which we do by simply multiplying it with the alpha value whatever we are getting in there will be multiplied with Alpha that way inside of the parameters we can make this thing visible or invisible or anything in between also you can update the center to place this thing basically wherever you want so I think for the player we might have to move it just a bit down although I think this actually looks okay cool so this covers the easy part now we have to cut away parts of it so we only want to get the full circle if the player has 100% Health but how can we cut away a part like this so this part for example I don't want but generally I simply want to toggle the progress of the circle for that first of all we will need one more uniform that needs to be a float which I called progress once again we can go with hint range from 0 to 1 with a default value of 1.0 after that to cut out parts of this we will need some very basic trigonometry or in other words before we are updating Alpha value of the color I want to get a float for the cutout for which I'm going to use Aon and in there I want to add UV dox and UV doy and and to see what this is doing let me comment out color. a and instead get color. a and set it to the cutout okay this is doing something to make all of this a bit more visible let's use this step function with 0.5 I think it's going to be more visible actually what we can do is use progress instead so now what I can do via progress is toggle this thing and get some kind of cutout what Aon is giving us is the angle between the origin point so this point up here and any of the pixels if this angle is large enough or bigger than the progress then we are going to get a visible pixel if not the pixel will be invisible the first issue we have with this one is that we are starting from the top left this is not correct we want to start from the center so inside of Aon and let me expand this I want to minus center. X forx and minus Center doy for y if I now save all of this this is already looking a lot better so now if I change the progress we are getting a small part of the progress to cover a greater range I want to multiply the progress with 2 * pi or tow which should already do quite a bit if I try this one again so now instead of progress we can go from zero and then at 0.5 the circle disappears not a terrible start but also not great yet basically at the moment we are covering half a circle and to finish the circle we simply have to add pi to it which we have to add to a ton there I simply want to add pi and then we are getting the entire circle and we can cover the whole thing I am fully aware I am going over this a bit faster simply for time sake later this year I am going to make a proper tutorial on shaders so I hope this wasn't too overwhelming if you are entirely lost check out an introduction to trigonometry we are not doing anything complicated in here anyway once we have that we simply want to multiply the cutout with our current Alpha value so we want to get the Outer Circle minus the Inner Circle time Alpha times the cutout and with that right now it's not doing anything but if I change the progress to any other value we are subtracting values so right now zero is the full amount and if I go to one this value decreases which isn't ideal I want one to be the full amount and then the further down we go the less of a circle we have to get that part I simply want to put the progress into parentheses and then do one minus progress that way we are inverting this value so with that I have to progress and I can select what amount of Health I want perfect so with that inside of the level we can see the player has a circle around it although in the foreground we have some random stuff that I want to remove because this looks a bit bad now one issue I have before we continue is that the health circle is affected by the directional light for which we kind of have a problem so usually if you have some kind of sprite that you don't want to be affected by light you can simply go to visibility and light M and change it there unfortunately this doesn't do anything for a directional light I can save it we are still getting the same result now you could do some fancy stuff and render the entire thing on another layer but that's a bit too complex instead I want to add a point light as a child to the health circle and then under graphics and lights we have have the main light which I want to add to it simply by having that we are lighting up the player a lot which doesn't look good but what we can do now inside of Point light 2D under range we have an item call mask and this one determines what is affected by the Light so with this one selected and the health circle being on light Mask 2 if I now go to the station the light only affects the player health circle so inside of the level this is not affected by the directional light of the background anymore that means now we can animate the entire thing I want to add a script to it and then we don't need any of this for now first of all though I want to get on ready VAR layer which we can get via getor Tre and get first note in group layer besides that I do want to have the ready function and get the current material and set the Shader perameter Alpha to 0.0 that way when the game runs normally we shouldn't see the health indicator and that looks all right but once we get hit it should become visible for which I want to use an update function which is going to get a value as the parameter although before we work in here let's for now now simply print the value to make sure this is working so how do we call this update well we want to do it if the health changes which we are tracking inside of entity this part to be specific in there we can check if the current class is in group and the group that we want to check is layer if that is the case we want to get the health circle somehow and I think the best way of doing that is to put the health circle inside of a group let's call it health cir that way we can track it anywhere inside of gdau so now get uncore three and get first note in group health circle once we have that I simply want to call the update method with the value could also be the health it doesn't really matter once we have that I can run the project and if the soldier shoots at us we're getting the health that looks good that means now we can work inside of the health circle first of all I want to create a tween which we do in the usual way create tween after which I want to Tween the property the object I want to Target is self and the property path is the material that we want to work with and in there we have the Shader uncore parameter which has an alpha value by that we are making the entire health circle visible so I want to set the alpha value to 1.0 over a period of 0.1 seconds let's try that and if we get hit we getting the circle cool then we can duplicate all of this next up I want to update the progress of the Shader for the value I want to get the value from the parameter and divide it by 100.0 or whatever the maximum health of the player is for the duration I want to go with 0.2 seconds if I now run all of this we are reducing the player health circle and this works just fine if we go below zero nothing happens anymore that also works finally I want to make the health circle invisible again for which we can duplicate the first line where we are setting the alpha value and then go back to 0.0 over a duration of 0.4 seconds now if the player gets hit we are getting a very quick update to the health which works pretty well that should also work with the Drone so I want to move the player next to the Drone and then and nothing happens so that we have to refine I guess while we are here we can also test if the player is affected by the saw so in there we should get some damage and we do so this part is working that means we have to check what's happening in the Drone and then let's have a look at the script the issue is quite simple on collision detection area body entered we want to call body. hit with some amount of damage I think inside of global I don't specify a damage for a drone I don't I guess we can add it in here damage and let's go with 15 that way we can get Global enemy parameters I want to get the Drone and I want to get damage next up we will need body. getet Sprites so with that we can try the entire thing again and move the player next to the Drone so now we are getting our health updated perfect and I guess we shouldn't have to test this but if I get hit by the monster the health also updates perfect besides that the debugger is being annoying and now we have the issue that we are narrowing a conversion which happens inside of these random values and it's usually not an issue so we can safely ignore these warnings and in our case we don't really care about the precise values here if this really annoys you what you can do is add at warning ignore and then we are looking for narrow ring conversion and this you want to place before the line that it applies to to run the code we are not getting a debugger warning anymore and this can be really nice because the debugger tends to be very annoying at times anyway with that we have a health circle for the player that means we can close these scenes I guess we can keep the player open but next up I want to keep persistence between the scenes let's move the Drone out of the way down here and then I want to get this Soldier and start the game if I now kill this Soldier and move outside of the scene and I can come back and the soldier is back alive this shouldn't be the case so how can we make sure that this Soldier stays dead after we are coming back and before we get to that I realized inside of the debugger we're getting two more issues that we are still getting debugger narrowing conversion the issue is that this warning ignore only applies to the next line which means we have to do it here and here so now if I go to the sky scene it shouldn't come up anymore and it doesn't that's much better to keep data persistent between scenes we have to store the data globally or in our case we already have a global script in which I want to create another variable let's call this one the enemy data which for now is going to be an empty dictionary I guess a cleaner way of doing this would be to create a dictionary like this after that inside of the level every time we are leaving the level which we can do via function exit tree this is being run whenever we are exiting a scene so for example I can print exit scene Run the game and then I can simply move to the sky scene and we get exit scene that's all that's happening in here if that is the case I want to create an array let's call it current enemy data which is simply going to be an array once we have that I want to go through all of the entities inside of the entity node which means for entity in Main and entities and then I want to get the children after that I want to get the current enemy data and a penda value there should be a list with the entity dot position The Entity dot velocity and finally The Entity Dot health and just to show what we are getting let's print the current enemy data run all of this and then I can go to another scene so now inside of the output we have an array with a couple of nested arrays which contain the position the velocity and the health of all of the enemies these values we want to store globally or in other words I want to get global do enemy data which is the dictionary we have just created I want to create a key value pair the key is going to be the name of the scene which we can get via get three and the current scene. name the associated value is going to be our current enemy data so that way every time we are leaving the scene we are storing all of the enemy information and that information we can use as soon as we are loading the level which happens inside of already we want to check first of all I suppose we can get the current scene name which we once again get in the same way that we have done down here and then we can check if the scene name is in global do enemy data if that is the case we can go by index so that the first item we have stored in there is going to be the first item in this new scene now for that we have to make some minor updates I want to go for I in main. entities. getchild count and then the VAR entity is going to be Main and entities doget uncore child with I with that setup we can still get all of the entities and now I want to call a setup method on all of them for which I can get the loable do enemy data and then select the current scene name which contains all of the data points which I can select via indexing so I now for that to work inside of each entity we will need a setup method that we don't have at the moment all the way at the bottom I want to have Funk set up also this thing needs to have a parameter for the data now in there I simply want to do if self. is in group and enemies I believe I called it then I want to get the position and set it to data zero next up I want to update the velocity to data one and finally I want to update the health two data to this should already do something so if I shoot at the enemy real quick and then leave the scene and come back then we are getting the soldier dying but well we can still see the dying animation effectively what's happening now is we have stored the data globally and once we're loading this particular Soldier inside of the soldier scene we are calling trigger death so we are playing the death animation and then the soldier is dead which isn't ideal I just want to display the dead soldier the animation shouldn't be there or in other words I basically want to do everything inside of this setup method plus a few more things which we can do inside of the soldier by creating another setup method Funk setup with the data importantly here we still want to do the original setup which which we can do via super do setup into which we are going to pass the data just to test things I want to print Soldier set up so once again I want to kill this Soldier then go in and out and we get Soldier setup but the soldier is still dead that's a good sign which means now since the soldier is dead I want to set this speed modifier to Zer right away get the animation player and stop whatever we are doing and instead get this bright and set the frame to 22 which is the dead animation frame I can once again defeat the soldier and then leave the scene and come back now the soldier keeps on being dead which is pretty much all we need now unfortunately I did realize a bug in the system so it's not perfect basically when we have a drone or the monster those scenes are being destroyed once they are running out of Health which means when we are leaving the level and we are creating the dictionary this entity does not exist anymore inside of get children which would break this entire system now unfortunately I don't have time anymore to fix it and deadlines can be rough so sorry about that but basically what you want to do instead of queuing free the Drone and the monster you want to store them in some kind of dictionary so you can still access them that way this system will become much more reliable but anyway with that we are nearly done there are just some minor things that I want to do first of all for each level so we are still inside of the level I want to set a camera limit or so we have the debugger being annoying again current enemy data was used but never assigned a value that's okay I guess once again we can get warning ignore and then I think this one is called unassigned variable now we can minimize this function and instead I want to create an export variable which I have called camera uncore limit and this is simply going to be a vector for integer so we can only store integers in there if I now store all of this and go back to the 2D scene with the station selected in the inspector we are getting four values which are going to be the left side the top side the bottom and the right of the camera the way we are going to implement this once everything is ready I want to get the camera or the player cam doesn't really matter what we call it which always needs to be a camera 2D and the value we assign is from get three get first note in group layer and finally we still have the get Cam method that way we have the camera and then before we are setting up all of the entities I want to set up the camera the way this is going to work basically I want to have camera. limit left which is going to be camera. X or or limit Pop I want to have camera. y or camera do right I need camera do that and finally for camera do Bottom I want to have camera. W with that if I don't do anything and Run the game again we are getting some really weird Behavior actually first of all we're getting an error because this should be camera limit not camera that me fix it for all of them and now try again so now the camera doesn't work because we have set a limit of zero for every single side which means we can't really get away from the origin point so to fix that we want to check the different sides for example the left side of the level would be 32 so I can set this to 32 and I already measured all of this the top side is negative 128 the right side is 1290 and the bottom is 640 that way if I run all of this again the player cannot see outside of the level anymore and I think if we go down here we can see it best so if I go all the way to the left at some point the camera stops and that way we cannot see the background anymore the same with the bottom I think down here there is another part and if we go to the underground this doesn't work anymore to fix those two parts really quick inside of the underground for the values I want to have 48 200 680 and 400 finally I want to update this sky in there the values are going to be 1606 1,66 and 480 and that should be pretty much it I suppose just to try one let's try the underground I haven't really used that scene in there we cannot go further to the left with the camera and at some point in the bottom it also stops so that's a pretty good sign next up one thing that is a bit annoying inside of the sky is that that we can see the background for that I want to add in the background another node which is called parallx background the way this works is we have to add another node a parallx layer and this one can get a Sprite and by adding multiple parallx layers you can create a staggered effect which looks really nice for example inside of of Graphics there we have sky where we have a plain background and then two kinds of clouds I think nen 2 should be further in the background so this is what I'm starting with and in there we're getting a background that I want to arrange something like this then I can duplicate the Sprite and move the entire thing a bit further to the right this I want to do one more time because that way we are covering higher WID something like this also all of this should be moved just a bit further down so the player cannot see the bottom I guess this would be this point after that I can duplicate the entire layer and then change the Sprite with another texture in there I always want to have nin one if I now run the entire thing we get a much nicer looking background although at the moment it's entirely static this you can change inside of parallex layer under motion by changing the scale for example for the first parallx layer I went with 0.9 and for the second one I went with 0.8 now I can try all of this and we should be getting just a bit of movement which I think looks really good although we are going to need just one more layer so I want to duplicate the first one and remove the Sprites so we only have a single one which should get nen free which is a plain background let's move it here so you can see what's going on this thing we want to stretch out to cover the entire area something like this and now if I run this this is looking significantly better perfect I should have done this ages ago better late than never I suppose that means now we simply have to add the sounds and then we are good to go most importantly we want to have the bullet sounds which I want to store inside of global in there we have the constant bullet sounds which is going to be a dictionary where we have the guns and then AK the associated value is going to be reload and then I want to load AK shoot. wav next up I want to have guns. shot gun which is going to get preload with the shotgun shoot. wav finally guns. rocket reload and rocket. shoot oh and I forgot this entire part could be your exercise as well I don't think this part should be much of a challenge but try to add all of the sound files yourself pause the video now and see how far you get all right now we have the bullet sounds and those we want to play whenever we are creating a bullet for that we have to open the bullet scene and add another note audio stream player 2D I guess the name we can leave as it is and to this thing we have to assign a stream which I want to do inside of the setup method I want to get the audio stream player and then assign this is stream which we are getting from Global and I call this one the bullet sounds for the key we are going to need the current type of gun the value is then going to be the stream and after we have that I can get the audio stream player 2D and play the entire thing and just to test things inside of this station I want to move the player a bit over here so we have things a bit more isolated I can now shoot and we're getting a sound same for the shot and same for the rocket perfect next up I want to work inside of the entities for which I want to open the entity scene and then add another audio stream player 2D this is going to be the hit sound for which we always keep the same audio file so inside of audio we have all of the audio files in there we have hit. OG and this we want to play as soon as an entity is hit since we already have a hit function this is fairly straightforward I simply want to get the audio stream player 2D and play the sound let's try this one and if I shoot in this direction we are getting a sound righty next up inside of the player whenever the player is Dashing I also want to play a sound and to keep things a bit more organized which is going to be another audio stream player 2D that I want to call Dash sound which is going to get the dash. wav sound when we are applying the movement under dash if we can Dash I want to play the dash sound so Dash sound dot a and I realized for the original Dash there was a particle effect which I do want to add all of that happened inside of the player graphics and there I want to create another note GPU particles 2D I suppose we can rename those to dash particles for that to work we have to add a process material particle process material then once again we getting the basic particles although those I want to set to time and one shot right away the lifetime of the particles is going to be 0.6 and the explosiveness is also going to be 0.6 after that inside of display I want to work with the scale the scale minimum should be two and the scale maximum should be 20 so Adit to true and we are getting much larger particles to make sure that they don't always spawn in the same position and spawn position and a mission shape as box the only value I want to change after that is for y we're getting 16 and next up for the velocity I want to set a spread of 10 an initial velocity of 110 and initial maximum velocity of 160 bit hard to see but those are the full terms let's see what we get now but we might might be in the wrong direction although this is definitely getting better now in the code we want to work inside of the player Graphics script and create a function Dore particles for which we are going to need one parameter Direction I want to get the dash particles Target the process material and set a direction like we have done for the shotgun the value we want for this one is the direction from the parameter and after we have that I want to get the dash particles and restart it now restarting is quite important because it's more reliable when you are emitting particles so when you are setting emitting to through you do get particles but if you dash fast enough you might get new particles before the old ones have disappeared and if that happens with emitting being true you do not get new particles but with restart you you do so this is generally a bit better at least for this specific purpose after we have that we can work in player. GD we are still inside of Dash and if that is the case I want to get layer graphics and then call dashore particles along with the current movement Direction which I think should be working already so now if we're moving we getting sound and particle also at this point what's really nice is that we can make the player flash very easily we already have Flash and all we need is the get Sprites method which I think adds something you could refine all of this quite a bit but for that you have to play around with the process material quite a bit which you can very safely do in your own time I think you got the basics there are two more things that we need the explosion sound and the background music let's start with the explosion sound I suppose this one we can store also inside of global I simply want to have a constant explosion underscore sound which is going to be preload and explosion medium. wav this we now want to play whenever we have an explosion which means inside of the explosion scene I need to add another note which would be an audio stream player to be oh in fact we could actually add the explosion medium right inside of the stream that actually is much easier so inside of global we don't need this constant at all inside of explosion as soon as this scene is ready we want to get the audio stream player here and play the sound with that I can shoot a rocket and we getting the sound that's pretty much it so finally we can work on the background music which should play constantly or rather on a global level and I think the easiest way of doing that is to create another scene which is just going to be a basic note doesn't even to be 2D and I call this one BG music which is going to get an audio stream player and make sure that this one is not 2D this is going to get a music. MP3 file now I think by default this one is quite loud so let me reduce the volume and then try I suppose we can set it to3 but play around with whatever feels good this one I also want to set to autoplay and on top of that with musicmp3 selected you want to go to import and then enable loop after which we have to repport the thing and now the file is looping which for background music is really important after we have that I can save the entire scene inside of global and background music is totally fine after we have that inside of project and project settings Auto to load I want to go to Global and then bgus music. TSN with that if I run the game we are getting the background music and that finishes the entire project now there are some minor bugs most importantly about keeping the entities across different levels so you would have to do a bit more work to make this project work really good but I think if you have gotten to this point you have made a ton of progress so I hope all of this was useful and I'll see you around