hello there in this tutorial you will learn about the tiled level editor we are going to create a bunch of different levels in different styles we will use terrains to create levels more efficiently and at the end we will cover how to import the level data into pygame and all of that should be fairly straightforward however before we get into all of this let's talk about what tiled is and what problem it solves tiled is a level editor that allows you to import graphics and then place them in such a way that you end up with a level of a game for example we could load this graphic of a title set into tiled and then inside of tiled we can pick specific parts of it and place it to build a level and i guess to visualize this a bit more here we are entitled already and in the middle you can see my level that i'm building right now and on the right we have some graphics that i can pick from and basically all i'm doing is pick different graphics and use them like a brush to create my level that is the main idea of tiled and since tiled supports a bunch of different export options it is basically supported by any major game engine or framework i will cover how to do it for pygame but if you look around you find the way to do it for basically any other game engine as well and tiled has actually been used for commercial games shovel knight axiom verge and carrion are probably the biggest ones but there are quite a few more as well it is a very powerful piece of software to use tiled we have to install it and this you do from the website which is looking like this and in here all you have to do is click on download and then click on download again and in here you could pay any amount of money you want and i would recommend you to pay at least a bit because a lot of work went into it but if you don't want to you don't have to you can just click on no thanks just take me to downloads and then you can download whatever version applies to you in my case i am using the installer for windows 64bit and chances are that you have the same version so if i click on download we get to a new website and we are downloading the program in my case i have already done this so i'm going to delete it but well in your case you want to finish the download and then install it and once you finish installing you can open the program like any other program and once you open it you can see something like this and in your version you probably see the same thing just a little bit brighter the reason why mine looks different is because i well made it darker and to make it look like mine all you have to do is go to edit preferences and in here there's theme and we want to change the base color and then here you have a brightness slider on the right side and in my case i put it down to something a little bit darker and i think this is looking significantly nicer all right now what can we do in here and right now we can see a bunch of options in the top left and to understand what they do we have to cover some basic functionality of tiled and the best way i think to think about it is in terms of painting because essentially what we are doing is painting a level and there are three elements that you want to be aware of the first one is the canvas so the element we are painting on entitled that is the map and this is what we can actually create here already we are going to create this one in just a second actually but then for painting you need two more elements you need colors and you need brushes and the colors entitled are essentially the tile sets this is where we are going to take elements from and place them on the map which is our canvas and then the brushes are the selection tools entitled that we can use to select different tile sets but basically all we want to do for now is to create let me show my mouse i want to create a new map so i click on it and now we get a few more options at the top we are getting map orientation tile layer format and tile render order and most of the time you only really want to care about the orientation because if you open this one you get 4 different options we have orthogonal isometric isometric staggered and hexagonal and these options are to create different styles for our game orthogonal is essentially the default where you have square tiles where you can place different elements so games like mario or zelda use this kind of style isometric is this 45 degree top down look games like simcity when it was 2d had that style of final fantasy tactics had the same style and the third style is hexagonal and if you think of civilization that's a hexagonal style it's fairly rare but well you can't create it entirely now in our case i want to stick with orthogonal although later on we are also creating an isometric tile set those two are the really common ones and for tile layer format we have different versions and fertile render order we also have a few more options but none of those really matter you just want to leave them as they are but then when we look below we have a few more options we have map size on the left and we have tile size on the right and basically what that means is when we are creating our map we are creating a map that consists of tiles so the map is the larger canvas and inside of this canvas we have individual elements that look something like this let me draw a couple more we are basically covering the entire map with tiles and right now our map is 35 tiles wide and 32 tiles high that is the information you get here and then each individual tile is 110 pixels wide and 64 pixels high and these numbers mean that each tile inside of the map is 110 pixels wide and 64 pixels high and for those numbers you do want to be really careful especially the tile size because when we're importing a tile set we have to work with a specific size and if you mess up the sizes you can get into a lot of problems actually let's have a look at this in photoshop right now and all right here we are in photoshop and this is the graphic we are going to use in just a second now for this graphic let me zoom in a tiny bit and basically how it works is that all of this is composed of different tiles and each tile would be something like here we have one tile here we have another tile and here we have a fertile and this we are going to continue for the entire tile set that's why it's called a tile set it's a set of different tiles it's amazing how that works and the size of these tiles in the graphic has to be the same size as the tiles in our map if they don't line up you end up with a lot of problems and in our case each tile is 128 by 128 pixels so that is the size we want to have for the tile size in our map and when you open any kind of tile set the first thing you do want to check is the size of each tile it's usually 16 by 16 32 by 32 64 by 64 or 128 by 128 although basically any size could be viable here you really have to check all right back to tiled and what i want to do in here is create tile size with 128 and 128 and you can actually tell now that we've changed the tile size we get a new number down here and that's the size of the entire map and this number we are literally just getting by multiplying the width of the map with the width of each tile size i guess we can make this really clear by changing each of those to one and one tile and we get 128 by 120. but let me undo all of this that is looking good all right finally i can click on ok and here you can see the actual menu of tiled now before we actually implement anything let me go through the different panels you can see right now the most important element the one in the middle this one here is called the map and this is essentially our canvas if i stay in the drawing analogy this is where we are going to create our level the next really important thing is on the right here we have layers and we have tile sets higher sets is going to be the colors we are going to use later on and we can create a new tile set here we are going to do that in just a bit layers are basically different layers you can draw on so if you want to put one element on top of another element that's what you would use layers for the next important element are these elements here all the way at the top specifically this row here these are essentially our brushes the one we have selected right now this one here is called a stamp brush that's like the default brush but we also have a fill brush this one here and we have an eraser and well that one erases stuff and those you would use to place tiles on the map like you would use a brush to paint colors on a canvas and then next up on the left side you have one panel with information right now it's for the map but it could also apply to tiles it really doesn't matter all that much but well if you really want to look up some information about the tile here is where you would find it and one more really important thing we can see right now we have untitled tmx all the way in the top and this is one tab and every single map and every tile set you open is going to be another tab that should be making sense in just a bit when i actually use it but what i want to do for now is to save this file and this you can do either under file and save or with control s and if i click on that i get to my folder setup and in here i have three folders i have code data and graphics and i want to go to data and then here i have tmx and i want to give it a name let's call it basic and if i save it now the name has changed to basic.tmx let's actually create a tile set so we can draw on this entire thing and for that i have to click on new tile set the element here all the way on the right and if i click on it i am getting another dialog and at the top we have a name and a type and for the type we can select based on the tileset image and based on a collection of images right now i want to stick with tileset image and if you have this one selected you have another dialog below and then here we have to browse for an image which i do want to click on and in here i want to select my tiles and click on open and now i have the path towards it before i can click on save as there are a few more options i do want to consider the more important ones here are tile width and tile height and those refer to the size of each tile inside of this tile set this is basically what we looked at in photoshop just a few minutes ago and this number you really want to be equal to this number here that way our graphics and the tiles in our map have the same size if they don't match up you are very likely to end up with problems although sometimes you do want it to be the case i will cover that later especially for isometric tiles this is becoming important but right now we just want them to be equal so we don't have to worry about it besides that we have margin and spacing and these are options you would be using if there are gaps in your tile set which is a fairly common thing but in my case they don't exist so i can leave those at 0 and 0. with all of that covered i want to click on save as and now i have to save a new file and right now i'm in the tmx folder i want to go up one folder and to my tsx folder and then here i want to save my tiles and once i do that i get a new tab and this one you can see all the way up here tiles.tsx and if you want to return to the tile map you have to go to the initial tab and now in here you can see all of the tiles of the graphic and if you want to move around here you have a couple of different options let me show the mouse again so if you want to navigate this you could either use these scroll bars but that's kind of inefficient usually what you do is hold the middle mouse button and then pan around that's much easier and if you wanted to zoom in and out you can use control and the mouse wheel that's basically what you want to use most of the time and then besides that you can click on every single tile and well select individual elements although you cannot use them in this menu instead what we have to do is to return to basic.tmx in here now all the way on the right you can see in the tile sets we have our graphic and inside of this you can use the same navigation options so if i hold ctrl and scroll out i am making all of this smaller so it's a bit easier to see and now in here you can see all of the tiles you can also hold the middle mouse button and pan around in here and now basically what you are going to do you are selecting the stamp brush the one i have already selected or you could press b for the same result and then you select one tile that you want to draw let's say this grass tile and now on the map i can just draw all of this wherever i want obviously this one is looking terrible so let me undo all of this and instead i want to place just a couple of grass tiles and then select other tiles to create a proper outline something like this right now this is a very slow process but we will learn about more efficient tools later on but this allows us to basically place elements wherever we want on our map and what you can also do is select multiple elements inside of the tile set for example if i wanted to place all of these parts here i can select all of them if i now go into my map i can place all of them wherever i want i can also drag them like any other brush although that admittedly looks horrible let me undo it actually let me keep those and by the way in this map you also have the same navigation options so if i hold the middle mouse button i can pan around if i hold ctrl and use the mouse wheel i can zoom in and zoom out and now the other brushes you have the next really important one is the bucket fill tool and this one well it fills the entire surface so let me select one of the dirt tiles this one here and then if i select anything on the map and click we are filling the entire area with dirt and this you could do with literally any other tile and this one is context aware so it checks for similar tiles that's something you do want to be aware of for example if i zoom into the grass style here the fill tool only fills identical tiles if we have a different tile they would not be filled and then the next important brush or weld tool is the eraser and this one you can use to erase things fairly obvious i suppose and i would really recommend you to practice all of this i guess a good idea would be to create your own map from just using all of these tiles so pick a couple of random ones and then try to draw an actual usable map and see how far you get all right let me get rid of all of this and let me show my mouse actually i think that's going to be better i first of all want to use the bucket fill tool and fill the entire area with dirt then i am going to zoom in select the stamp brush and now i have an outline and this i can fill as well oh yeah i didn't mention the fill tool selects identical tiles if they are in an enclosed space and now i have my grass area and now we come to the slightly more boring bit i have to create all of the outlines that would look something like this i am probably going to speed this part up because it is fairly monotonous all right and there we go we have well something very basic but this could be something you actually see in the game and you might have noticed this is a really slow and annoying process and later on we are going to learn a better way of doing this that is what terrain sets are for but for now this is the basic what you are going to need although now imagine you want to place something on the right here like this plant if i place this plant somewhere on the level let's say here we have a problem that you can see the background let me zoom in a bit more here you can see the background and this looks well kind of ugly so what i want is to place this plant on top of the grass let me undo it and to place something on top of each other we need layers and right now we only have one layer and if i double click on it we can rename it let's call this one the ground and to create a new layer i have to click on this symbol here and here we have a couple of options higher layer and object layer are the most common ones and i want to create a new tile layer and this one also needs a name let's call it plants and rocks and let me spell it properly and now i can select the plant again if i plant it it's on top of the ground and if i hide this layer it disappears i can do the same thing for the ground with the obvious result and this way i can place elements around wherever i want and these layers here are really important to create more complex levels for the bigger projects i made and tiled i usually have something like 7 or 8 different layers and in here you do have to be really careful which layer you are drawing on it happened to me really often that i think i'm on one layer and then i end up drawing on another layer so for example if i have ground selected and i draw something i would end up with something really horrible which i didn't want and all i really want to say is be careful what layer you are on it's very very easy to forgot what layer you are working on just keep it in mind all right now when i am placing let's use something more recognizable like this rock i do have a couple more options let me zoom in a bit more to see it better there we go now right now when i'm placing this rock we always have the same rock although if you look at the top at these four elements here you can either flip the rock with these two or you can rotate the rock with these two and if i click on this one here i have a rotated rock if i click on the other i have rotated the rock in the other dimension vertically and this i can also do for the other side as well and if you just use those two buttons you already get very different looks which can be a nice way to make your game look a bit more varied and then besides that you can also rotate the entire thing by 90 degrees in this case i guess same result but you get the idea and there's one more really useful button and that's this random mode here the little symbol of the dice if i click this nothing seems to change because for this one to work i have to select multiple elements so let me select all of these bits here all the plants and rocks and now if i return to my map you can already see the result let me zoom out a bit every time i go to a new tile we get a different element that is a random selection of these selected items here and those i can just now draw on the map and we get something completely randomized and if you don't like one specific randomized item you can just click again and you get something else it's super useful and what you can also do if you want to have some elements being more common let's say in my case i want your plants to be really common and just once in a while have a rock this you can also do but we do have to return to the title set so in the tab i want to click on tiles.tsx and move to these elements and if i select any of them on the right side now we have the properties panel and we have a couple of options we have id that's the number of the tile set that's not really important we can set a type ourselves also not something we care about we have width and height also something we don't really want to care about and then we have probability and right now it's one and that is the one we are going to care about because what we can do in here is set this to a different number let's say in this case i want to set this to 0.1 and if i click on the next element now this bush here this one still has the one so if i only selected those two elements in random mode this small bush is 10 times more likely to spawn than this larger bush or tree or whatever it is let me save it and return to the tile set and if i now select only those two tiles here and render mode is still activated i get lots of smaller bushes and only very rarely a larger one and that is the idea behind this probability and you can also select multiple elements and give them one probability so i want to give all of them a probability of one and all the rocks get a probability of 0.25 let's say and now if i return to this tile set select all of these elements again if i now draw them okay that's a bit hard to see let me go to another area if i now draw them we get a lot of plans and very very occasionally a rock but it is fairly rare there we got a few more alright this seems to be working just fine and with that we covered all the basic parts of a tile set if you just want to create some basic things this is all you are ever going to need it really isn't that hard although there are a few more elements entitled that i do want to cover the next one is objects and there's actually a whole tab next to layers objects and right now we don't have any objects and basically what objects do there are just other graphics that you can place on the map except that objects can have any size and you can place them wherever you want meaning they are not bound by this tile set you can just place them wherever you feel like they should be and especially if you have some more recognizable elements like a castle or a tree you do want to use objects and well to create them we first have to import them and this happens again by clicking on this new title set here and this time we don't want a tileset image we want a collection of images and those need a custom name let's say in my case i want let's call it objects now i click on save as now i'm back in my tmx folder and i want to go one fold up go to tsx and then here i want to save them with the tiles and i click on save and now i have a whole new window and this one looks very similar compared to the tiles except it's empty and the first thing that we have to do is to import some graphics into it and for that i need my folder this one here and if i go to graphics besides tile sets we also have objects and then here i just have a couple of random images and those i want to drag into tiled if i do that i can see my castle and if i zoom out i can see all of the elements and right now they all look like they have the same size but if i click on the castle for example you can see it's quite a large image and if i click on the mushroom it's much much smaller so all of these images have very very different sizes which is completely different compared to these ones here they are all identical in terms of size and you could also set the probability this one works in the same way but besides that there isn't really that much of a difference but now if i return to my tile map i get under tile sets another tab this one is objects and let me zoom out again in here i could select this castle for example and place it although if i am trying to do it you get something weird that the tile i have selected and where i place the castle have no relation to each other which is kind of annoying and the reason here is that the castle is just way too big for the tile so tile doesn't really know what to do with it oh that was one too much there we go now to account for that we have to create a new layer which we do here and now we don't want entire layer we want an object layer and now we have to rename this new layer and let me call it objects and now we have a new layer but more importantly if you look all the way at the top the icons we used before like the stamp brush or fill have all been grayed out meaning we cannot use any of these here and instead we have gotten a whole new set of tools all of these here and the one you are going to use the most is this one here this is basically the stamp brush for objects and this one is called insert tile now if i select this one and now go back to my title set now i can place the castle wherever i want it's in the center of my mouth and it is not constrained by the tile set i can move it around wherever i want and this applies to all of them so i can place some mushrooms some trees power doesn't really matter and all of this is done with this brush here or this tool whatever you want to call it besides that the other really important one is select object and this one well it selects objects so i can select this one this one this one and so on and also if you click on it twice you get different options the first one the one with the arrows allows you to scale the object you have if you click on it again now you can rotate the entire thing and more importantly if you look at the layers there we have objects as well and in here you can select all of the objects that we have created earlier and for each object we can set a name and a type those you can see here on the left side and let's say what i want to do i want to select all of my castles so i hold shift and click on all of them and i want to give each of them the name castle and type is going to be building and if you now look on the right side we have now a name and a type for each castle we can do the same for the towers as well those ones are going to be name power and type is also going to be a bill thing and besides that we have some trees and let's call them trees or just tree and type let's call it vegetation and then we have a ton of different mushrooms and let's call those mushroom and type vegetation and what you may be seeing that after you have given them a name you can always see the name on top whereas in my case they only show up when i select them this you get under view and show object names for you i think it may be for all objects in my case it's only for selected objects generally views is really really useful and well this is basically the start of what you would need to use objects and titles together i did forget two trees let me call them tree and vegetation there we go now we have all of the objects now there are a couple more these four here we have insert rectangle insert point insert ellipse and insert polygon and those well they do what the name implies if i select the shape one and draw now we are getting a rectangle if i select one of the points i can place some points if i select any lips i can place any lips and the polygon allows me to draw a polygon like this and then you could use edit polygons to manipulate each of these polygons if you really wanted to and you do want to give all of them a name as well so let me select all of the markers and let's call them name marker and type let's call it a shape then we have the rectangle and this one is also going to be a shape and we have the ellipse and the polygon those are both going to be type shape except for the ellipse it's going to be an ellipse and for the polygon i want to have a polygon there we go now these elements you can import into any kind of game engine but obviously right now they don't have any kind of graphic associated with them what you would rather do is import the geometry so you can get all of these points here let me draw actually that should be better so what you would import later on is the geometry like these four points for the rectangle and those you can then use to draw whatever you want inside of it so if you want to check if the player enters a certain area this kind of shape is really useful same for the markers like one of those you can use them to place certain elements like the main player if you want them in a certain spot like a starting position for example now one more thing that you could be doing is to insert text and let me return the mouse this is this button up here and if i click on it we can place some text let's place it i don't know here and right now this is a very small text box so what i want to do is to increase the width and the height of it let's say something like 400 by 400. the problem is the text is just generally very small and i guess another thing i can do is change the text in there let's call it my awesome level map and if you want to change the font size you would go to font you can also expand it and in here we can increase the font size quite nicely so it actually shows up on the whole level yeah i guess that works and then you can also move this text around like any other element now the only limitation with text is that importing it into pie games seemed to be kind of impossible or at least i didn't find a good way of doing it meaning that this would mostly be something used to annotate ideas in your level but maybe you find a way of doing it but with that we have covered all the fundamentals of tile now there's one more thing i do want to cover that is kind of important and that is let's say i take this castle and this tower here and i moved the tower in front of the castle now you can see let me zoom in a bit the tower is in front of the castle but if i move the tower a bit further up the tower is now behind the castle so they are drawn intelligently to figure out which element is on top of which other element that was a really weird sentence you get the idea that we get some kind of fake 3d that is really useful and how we are getting this is when you create a new map let me create a new one so new and map this is the tile render order this one right down here and in our case we are drawing elements right and down meaning the further down element is the higher it is drawn in terms of well drawing you could change it but there's very little reason to do so alright with that covered we are basically done if you just want to create a basic map this is all you are ever going to need and the games i've made so far like zelda and super mario were made in just this style that's basically all i did although there's one really useful tool entitled that you do want to use as well to work more efficiently and that is terrains now how terrains work is getting a bit more complex so let's explain what they are and what they do so let's talk about terrains and basically terrains are special tiles that react to their surroundings and what does that actually mean let's do an example say you have this kind of case here where you want to figure out what this tile is going to be and this one should be fairly obvious you want to draw the tile that connects these two like this with everything else being just dirt and this means if you know this tile here this tile here and i guess you know that this tile and this tile are empty you already know what tile needs to be in here you want to have the corner tile set and this is something we have done manually so far but tiled can also do it because it's a fairly easy process and this is what we are going to create however to create a terrain we have to talk about something else because there are different ways to create one let's go through them actually overall there are three different ways to create terrain tiles the first one is you look at the corners and this white rectangle right now is one tile and on this tile we want to check all of the corners these four here and if this tile borders on another tile so let's say we have another tile here all the way to the right and then for these tiles we know that this top one here is grass and the bottom one is dirt and if we have them connecting corners on the other tile so we know that on this right tile set we also have grass in the top left and we have dirt in the bottom left if that is the case we know we want to connect these two tiles here and that's the first case the second one is we are looking at the edges so instead of looking at the corners we now look at each of these connecting points meaning if we have a tile to the right again like so we only look at if this tile here and this tile here are identical say if both of those are grass tiles then we want to connect them and we don't really care what happens around the edges and finally we have corners and edges and this is a terrain set that does get really complicated because we are checking all of the corners these four here like we have done in the corner set and we are also checking all of the edges like so which means if this tile set has a tile to the right we have to check three different points for example if the bottom right of our tile is grass the middle one is dirt and the top one is water we are only going to connect the tile to the right if this also has water on the top left dirt in the middle on the right and then grass in the bottom left meaning for this kind of tile set we have to have a pretty complex setup and for this video i am only going to cover corners and edges for the simple reason that creating a corner and title set takes forever you're going to see very fast that creating title sets can be a really really long process but let's actually have a look at this in practice all right here we are back in tiled and i have two tile sets that are simplified that i want to use meaning i want to create a new tiles so i click on new tile set on browse and then here i have terrain corner and terrain edges and let's start with edges that's the easier one and all of these other attributes can stay the same so save as and i want to save all of this in another tsx file and let's leave terrain edges that one seems totally fine and now we have a new tile set and then here again we could just select individual images it's the same format we have seen here where we have just a couple of tiles so if you want to go to the level you could pick the terrain edges and just start drawing on it not on the objects layer but on this one so you could just create tiles here this one is just the same but i want this to be automatic and for that in the terrain edges i want to select this terrain set symbol here if i click on it we get a new panel on the right and in here we have to click on the plus at the bottom and now we can see what i just talked about we have a new corner set a new edge set and a new mix set which combines the corner and the edges and now to see if you paid attention is the tile set we need a corner set or an edge set try to think about it for a second the tile set we are going to need is an edge set so let me click on that let me zoom in a tiny bit on this tile set here for example if we look at this tile here the outline would look something like this and what we are looking for is if there is a connection here here here or here or i guess in this case we want to make sure that there's no connection on this tile here but you can already tell we don't check the edges like so and this is where we need the edge set if we're to use this tiles here for this one we do check the corners there it would be different but this is not what we worried about right now we want to create an edge set and first of all we have to rename things but so the terrain set i want to call i guess these are pipes i can't really tell what they are could also be a path doesn't really matter and then inside of the terrain set we have to give this red thing a name as well and i want to call it yellow and we could create more than one in here we are actually going to do that in just a bit but for now we just keep that one and now if you hover over the tiles you can see a red thingy and what we have to do is tell tiled where we want these elements to be and you can already sell how this is working so i know for this tile it connects on the left and at the bottom this is where i'm placing the dot thingies and this i have to do now for every single one of these tiles although this one leave out for now you're going to notice in a second why but all the other elements i just want to keep on drawing different points and there i just made a mistake i'm going to fix that in a second and for those individual tiles here they only connect in one way this one here and now i have to fix one error and that's this part here and for that i click on erase terrain and click on the point i want to erase and now we have all of the corners the green stuff here you can just ignore and this part we are going to add in just a bit but now i want to save this terrain set and go back to my basic tile and now nothing has changed but if i click on terrain set now we have pipes and in there i can select yellow and let's put all of this on a new tile layer and let's call this one pipes oh and now also importantly in the top left we have the terrain brush selected and what i can do now is just draw a pipe wherever i want and it always connects just fine and this is working really well so this is obviously looking horrible but it does work really well although let me undo all of it it does look pretty bad i just want to have a more simple one and let's just draw it like a simple circle now what do you want to be aware of if i return to the tile set right now we didn't use this tile set at all but if i add it as well just the corner and now return and draw another circle it works the same it works the same but now we get a sharp edge and there we get a sharp edge as well and what basically happens here let me return and start some drawing let's say we're looking at this tile here and this tile here and if you look at those two in isolation you can tell that from tile's perspective those are identical they both connect on the right and at the top meaning for tiled it doesn't really know when to place which of these meaning tiled is going to randomly select one of them and that is what we have seen in here where sometimes we are placing a round corner like here and here and sometimes we're placing a sharp corner like here and here and those are being selected randomly and this right now is fine if this is what you are looking for but this sometimes can cause a lot of problems we are going to see a case like that very soon actually but this is the basic idea of a terrain tile set ah this one is generally super useful so i guess let's continue to the other kind of tile set this one is even more useful and that is going to be a corner set and for that we actually have to import another tile set and that tile set is basically this style set here except in simplified so let me reveal the mouse i want to create a new tile set and this has to be a tile set image and from here i want to browse and create a terrain corner and this i want to open and everything else can stay the same and this i want to save as in my data as tsx terrain corner this one is just fine and now in here i've added some text to illustrate what we are going to work on and for now we are just going to focus on this part up here the problem bit you can ignore for now i'll get to that one in just a second but really all i want to do in here is create another terrain tile set let me show my mouse again and for that i have to click on the plus and in there i want to create a new corner set and this one let's call it round not proper spelling ground there we go and in here if you look at this tile set and compare this one to the edges for the edges we only had a single kind of tile it was always this yellow pipe thingy but for this one we have two different kinds of tiles we have dirt and we have grass so inside of this terrain set we need two terrains we need first of all some dirt and then i want to click on this plus down here and this allows me to add a second terrain and that is going to be the grass and well once we have that we can follow the same process except now we are filling in the corners so for example let's do this tile here together i know that this corner this corner and this corner are all supposed to be for dirt and then this grass corner here is going to be this corner for grass and now this we have to do for all of the other tiles as well and i think this could be a really good challenge for you right to add all of the terrains for this title set here and ignore the problem with and see how far you get all right let's do it together and let me start with the grass but it doesn't really matter in which order you start and all of these grass tiles i have to go through those those and those and that should cover all of them now with the dirt selected i can select all of the dirt tiles these corners here all of those this this this and this and in here we have the same issue again where we have two tiles if i select all the corners here where these two rectangles here to tiled are identical meaning it's going to pick one of them randomly which in our case is perfectly fine because they are well essentially identical so if you pick one of them randomly we don't really have to worry about it too much although what we can actually do if i go back to the selection box here and select this tile the probability is still going to work so if i set this to 0.2 and return to my terrain then this tile here is going to be placed much less often so that is really really nice but all right with that we have our terrain set so i want to save it and return to my basic tile set and now in here i want to create a new tile layer so we have some empty space to work on and let's call it floor and this i want to be below the pipes and i guess for now let me just hide everything else and now we have some space to work and i want to look at my terrain set and now besides the pipes i have ground and inside of ground we have dirt and grass and now if i try to draw with my dirt nothing happens and if i drop my grass nothing happens either so what is the problem here although the pipes if i draw those they still work just fine so what's the issue here and well if i go back to terrain corners what you have to understand here is that all of these tiles work in relation either to grass or to dirt so tile basically needs some kind of starting position which we don't have right now and all that really means in practice if i go back to my basic set i want to look at my title sets and my terrain corner and we basically have to fill the entire map with one of these tiles here in my case i want to pick the basic dirt tile and to make sure here you actually pick from this terrain set you could also by mistake use any of these and that wouldn't work because to tilt this third set here zoom in this third set here and this dirt set here to us look identical to terrain they are completely different things they just happen to have the same information but tiled needs some kind of starting point so we have to pick one of these tiles here it doesn't really matter which but once you have done that you can go to a terrain set click grass and now we can draw on here and we are getting proper shapes this is looking quite nice and of course we can also use dirt and draw over all of this add some insets and create islands or really whatever you want and well with that we have our basic set that's kind of it to be honest in terms of simplicity so let me create some basic tile sets here that look a bit more like an actual game i guess let me here one as well just so you can see what's going on so with that we have some basic terrain sets that really wasn't all that difficult now the problem is that this is still a very simple tile set and there are quite a few things that could go wrong and i guess let's have a look at this tile set here to see what could go wrong and i think it's best to just add these tiles here so i want to add some dirt tiles all of these and besides that i want to place some grass in these styles here and with that we do have a terrain set that looks good on the surface but this terrain set is very broken and if we use it you can see that pretty fast so now if you want to add some more grass and place this here we get something weird let me zoom in and i guess we can draw on this as well that should help a bit as well essentially what we are seeing here is that tiled is not sure what to place when it's placing a tile like this where we have grass on the bottom and dirt at the top so sometimes we get a large tile like this or we get a smaller tile like this one here and the same issue happens on the other side as well so sometimes we have this small green tile other times we have this larger green tile so what's the issue here and to understand what's going on we have to return back to our terrain corner set here and what you probably want to look at is this tile here and this tile here i think that illustrates the problem the best if you just look at those tiles i think you can understand the problem to child these two are identical both have grass on top and dirt at the bottom meaning tiled is just going to pick one of them randomly and since those two tiles look very different this is not going to work and as a consequence we are getting the problems we have encountered and this is not an isolated problem for example this tile here is identical to this tile up here and since those two are looking very different this is just going to cause more problems as a consequence you do have to be very careful how you place tiles and this sadly is just a thing you have to get used to it does take a lot of practice to create good terrain sets so let me get rid of all of this and back in the terrain set let me undo all of this that's looking better cool now one way you can approach this is if you look on the right there we have patterns and this is actually incredibly useful because in here you can tell what tiles have been covered essentially what this thing is tells you what tiles you need for proper working terrain and right now we have all of these so the terrain set is working but if i erase let's say this tile here then tiled is going to tell me it still needs this one by highlighting it and if i undo it now it disappears so this pattern here is really useful to see what terrain sets you are still going to need what it doesn't tell you is if you have a certain terrain tile twice for example we have two red terrain sets and this isn't reflected here at all and the problem we had earlier down here is that we did had a duplicate and one of the duplicates wasn't fitting in the terrain set and that's just something you have to be really careful about it's well one of the major problems with terrain sets but this is essentially a simple terrain set for corners now what you also want to be aware of is that this is still very simple what you could do in this terrain site here where i took the graphics from we have quite a few more elements we have let me actually create the terrain so i want to create a new corner set and let's call this one ground two and in here we have dirt and we also have rest and besides that i guess this is sand and this would be pavement so i want to add sand and i want to add pavement now if you want to create a terrain set for these four options you have to do a lot of work because if i look at patterns you have to cover all of these different options to have a working terrain set which would be taking you a lot of work and not all of these options are included in here so you would also need some photoshop to create new tiles i guess the effort here would be justified if you're creating a really large game and you would reuse the tiles all the time if you make a smaller game this would be way too much work so just keep that in mind and on the topic of really complicated work you could let me create another terrain set and this time it's a mixed set and let's call this one just test doesn't really matter and in here i want to create another terrain let's call them test 1 and test 2. it doesn't really matter what they are and now if we look at patterns it gets even worse because for these we have nine different edge tiles that we have to take care of so if i were to draw them in terrains for test one in here i would have to cover nine different points for each tile which would end up incredibly complicated and this you would really only do if you're working on a very very complicated tile set that you want to use for a fairly complex game but in my case this really isn't anything i would want to engage in so let me ignore all of those and well if you have to work with them just be prepared you have to put a ton of work in there also another thing you want to take care of is in the style set these third tiles here and these are different if you look at them in detail because those have a texture those don't so this would make the entire thing even more complex and i guess all i'm really trying to say is mostly stick to simple terrain sets it gets really complicated really fast all right and now with that let me make the other tiles visible again and i guess now for the pipes i want to get rid of those and create some tiles that work a bit better with the stuff we have so let me select the pipes and i want to create some yellow tiles that let's say they start something like this and we go down here and here and something like this okay this does look horrible i just want to cover the entire map of pipes so things are looking halfway okay and while with that we have corner and edge terrain sets and if you really want to you can also use ground and test although you would have to put a lot of work into making these well work but i hope you understand the principle if you make something really complicated this is incredibly useful and with that we have been making some pretty good progress there are two more topics that we do have to cover first of all how to export something and second of all isometric tiles i guess we could start by exporting something because we already have this tile and this is what i want to use in pygame and well you have quite a few options most of them either in export export s and export as image export s is usually the place where you want to start so if i click on it we are seeing an exposed dialogue and here i am in my folder setup and i want to create a new folder let me call it export and if i open this one i have quite a few different options to export something the one that is usually the default i think is tilemap file so we're just exporting a tmx file but you can also use csv gamemaker json javascript lua and game maker and those are some really popular game engines so if using one of those you can totally export it in the file format that works for you although in my case i am going to use tmx so i can click on save and we have an exported file and if i open the file explorer and here we have export and we have basic dot tmx now this basic.tmx and this dmx here are essentially the same file i think they are literally actually the same file so exporting tmx and just saving it pretty much gives you the same result most of the time if you use export s you would probably use something like csv or json and let me demonstrate what csv does for this one i can save again and if i now open the folder we can see four csv files and they all start with basic and an underscore and then the name of the layer and let me click on basic floor and now we can see a ton of numbers now what does all of that actually mean and let's do this by example for now keep in mind this 27 in the cell a1 and if i return to tiled we only want to look at the floor layer and in here we have this rain corner tile set and the tile that we have in the top left right now is a simple dirt tile set this one here and if you click on this in the top left you can see id 27 the same 27 that we have in the csv export and this is what we are actually exporting and basically what is happening is that tiled assigns an id to every single tile inside of this map and the id is coming from each individual tile set meaning if i opened terrain corner and select this third set here we have id 27 and this is what gets exported as csv data and this information is generated by tiles starting at top left and then giving an increasingly larger number to each tile and you really want to be aware of here that we are literally only exporting a number we are not exporting a position we are not exporting an image all we have is the id number of each tile and even worse this id tile is not unique which means if i look at this id tile this corner here has the id 8 and if i go to terrain edges i can look around and i'm probably going to find id8 again meaning this id here is not unique which would be quite a big problem if you're trying to import it by just using the id so just keep that in mind i guess you could find out the position though and how that would work let me open the csv data again if you want to find out the position of any of these tiles let's say the position of this top left tile here you would essentially look at the row so row 0 here or row 1 and then the column and from that you can figure out where this tile is supposed to be placed and this works for any of these id points i have actually made an earlier tutorial on tiled and in there i have used csv data if you want to check this one out it goes over how you would do this in practice in pygame although it really isn't the most straightforward process so not recommended by me but right this is basically how you would export things most of the time now what you can also do is export as image and if i click on that we are just exporting what we are seeing right now as one image and well you can select a couple of extra things in here i don't care about them i just want to export and if i now open the file explorer again under emx i can find the basic export and this is information you can also use in any kind of game most of the time when i use this option i want to have a floor for the game that isn't really doing anything except move along with the player so just having one floor for the entire game is usually quite a nice thing to start your game with but you could also use tmx data here this would work just fine i'll show you in a second how that would work and well that is basically all you are going to need for exporting data entitled and well next up we can start working on isometric tiles let's have a look at that all right now before we start coding there's another kind of tile set i want to cover and that is isometric tiles and those are like you see here this 45 degree angle tiles that do work slightly differently but we can create them quite easily in tile so i suppose we can jump right in and let's have a look at this here i'm back in tiled and i want to create a whole new map for that i go to file new and new map and in here instead of organelle we need isometric and the map size is still perfectly fine you can essentially choose whatever you want in here however for the tile size we have to do something different and let me open up the graphics for this part they are going to look like this we're going to import them in a tiny bit and each of those graphics they are all individual graphics and they're all 111 by 128 pixels wide and high and what we need in the tile map for the file size is something different than the size of each individual graphic now the width can stay identical so i want 111 in here however for the height we want half the height of this tile height the reason for that is that all of these have to overlay each other so we want to cut some parts off and depending on the graphic you might need some different things if you have your own isometric tile set you definitely want to play around with this but in my case i want 128 divided by 2 which is 64. and now i can click on ok and now we have an isometric tile set and this i do want to save and let's save it in the same folder and let's call it iso and this now is going to be an isometric tile set you can see it quite well although if i try to use any of the tile sets we have so far it just looks very weird so this is no good we need another kind of tile set or well we need different graphics that work with this kind of tile set map setup and for that we have to create a new tile set and this one is a collection of images and let me save this one as iso graphics that is not how you spell that graphics there we go and save as i want to go to my tsx folder and then here isographics and now again i have an empty folder however if i open my graphics i can just select all of them and drag and drop them in here and now i have all of my graphics available in here and they all have the same size that is important and just to be specific here they all have a width of 111 and a height of 128. however if i return to the iso tile set each of those tiles is going to be half as high as that so now we have a difference between the size of each tile on this map and of the graphics now in practice this really isn't going to make that much of a difference but if i now select the iso graphics those you probably have a bit more space on your screen than i do but here we have all of them and now basically all you have to do is pick different tile sets and place them this is going to work in just the same way so i can just place all of these let me fill in the gap this does actually also work with the fill tool so i just pressed f select it there we go and i guess let me get rid of this part here looks a bit silly and what you have to understand about isometric tiles is height so right now this might be our lowest layer let's call this one the floor and if i want to put anything on top of them i would need another layer on top of that level one and in here i think what i did earlier was pick a couple of brick ielts and just place them around like so and that way you can make the outline of a house i am really not good at placing these it does take some effort i think actually i used this tile at the beginning this one is looking a little bit better and with that we have the first level now we need level two and we can do the same thing and just draw more things on top it really isn't that much more complicated than that and unfortunately in child we don't have auto tiling or isometric tiles which does get a little bit annoying once in a while because this can be very labor intensive but well definitely does work and once you have this it's well an isometric tile set let me not show the grid and this is how it would look in the game which i think is looking really really good and well with that finally we can actually start importing all of this into pygame now in my case i am only going to import this tile set here and let me make all of this visible there we go and i guess let me put the plants and rocks on top so they can be seen this is what i am going to import into pygame now you could also import this one here although the logic would be slightly more complex because you have to account for the isometric tiles but i'm gonna focus on just the most straightforward one so let's talk about how to import tiled into pygame and fundamentally there are two different ways the first is the more manual way where you are importing some csv or json data and this would only give you the id of every individual tile but from this id you could select specific images and then put all of this into pygame it is possible i have actually done it myself in an earlier tutorial you can check that one out if you want to understand the logic problem is this is a really really extensive process that takes forever and there is an easier way and the easier way is called pi tmx which is a whole python module that takes care of all of this for us which is a much easier way of doing all of this which is why i'm going to use it now to use it we have to install the pi tmx module and to achieve that we need either the powershell or the terminal in my case powershell and type pip install pi tmx if you're on a mac with a terminal this is probably going to be pip 3 install pi tmx but in my case windows pip installed pi tmx is fine and i have it installed it only takes a second it's a really small module and once we have that we have all we need to start coding so let's have a look at all of the code we have alright so here we are in just about the simplest code you can have for pygame for a start if i run the code we get a plain black window that doesn't do anything which is perfect for our purposes and now to get started with using pi tmx we have to import the module and here we only want one very specific part and basically what we want is from high tmx dot util underscore igame import load underscore pygame and pytmx basically has a couple of different submodules for different gaming modules and pygame is one of them and this is a really neat function that allows us to work very very efficiently with pygame and tiled it's super useful although if you don't use pygame there's also a more general one that you could use as well it's really up to you but in my case i want to use load pi game and now what we first of all have to do is to load our tmx file and this i want to store in a variable that i call tmx data and all i have to call is load pi game and then here i need the name of the file or well the path to the file and in my case i want string i go up one folder then i go into the data folder in there we have tmx and inside of the tmx folder we have basic dot emx and if i run the code now we will still can't see anything but we don't get an error so we know that this path here is working as a matter of fact what we can do is to print what we get so tmx data and we are getting a tilemap object still not particularly helpful but something more useful that we can do is put this in a dir method and if i run this code now we can see all of the properties and methods that we have available and if you look at this list you can already tell pretty well what is useful in here we can for example get a layer by name or we can get all the visible layers we can also get all of the objects all of the layers and quite a lot more there's a ton of stuff you can work with in here and even more you could add a whole layer to the tmx file or a whole tile set it's really up to you there's a lot of stuff that you can do so how can we make sense of all of this information and i think the best way is to think of it like this right now we have a map or a tmx data file and this is going to be the broadest information or the general container for all the other elements what we want from this most of the time is some kind of layer we want for example one layer for the tiles and we could also want a tile for the objects so we have to figure out some ways to get the layers inside of tmx data and for that we have a ton of different ways i guess the most obvious one is emx data dot layers and let me print what we get and i don't care about the window if i run this we get ground floor plans and rocks pipes and objects and on top of that we also get information what kind of layer we have for example ground is a tile layer whereas objects is an object group so you already can tell quite well what you are getting in here and i guess let me add a comment here let's call it get layers and this would be get all layers now besides that we can also get tmx data dot visible layers and if i print that one now we're getting a generator object but it basically contains the same information we have here so what i can do let me cut it out and for layer in what we just got and print layer if i print this now we get basically the same formation we had earlier so we have ground floor plants and rocks pipes and objects the same thing we had in here it's essentially the same formation with one twist if a layer is invisible entirely it's not going to show up in here so let me return to tiled and right now all of the layers are visible which you can see here with the eye symbol and let's say i want to make ground invisible since we are not using it anyway and now really important this little star in the top left has to disappear meaning we have to save it if we don't save this file it's not going to show up when we import it into pygame which i think makes sense and let me run the code again and we still don't care about this now there's no ground in here anymore we are only getting the visible layers and let me add a comment here get visible layers another thing you can get is tmx data dot layer names and if i print that we are only getting the layer names although this time we are getting a dictionary but this one is fairly similar compared to all layers there is quite a bit of redundancy in here so i'm not going to cover it in too much detail there's one more i do want to cover and that is dmx dot data dot get layer by name and then here we need one argument and that's the name of the layer and one layer that we have is called floor for example and now if i put all of this into a print statement and run out of this again we are just getting the title layer floor all the way at the end so let me add comments this is get one layer by name and we want get all layer names as dictionary now there's one more thing that i do want to cover and that is that sometimes you do only want the object layers and this you can get with tmx data dot object groups and this is going to return an iterable so we need a for loop let's say for obj in dmx data dot object groups and then here i want to print my obj and let me comment out all the earlier stuff so things are a bit easier to see if i run this now and close this again we have one layer that is an object group and that is called objects which is what we have entitled as well so let me add a comment here and let's call this one get object layers and those are essentially all the different ways you would be getting different layers either tile layers or object groups or object layers it's the same thing meaning if i return to my drawing now we basically got the tiles and the object layers so all of these are mostly tiled layers and this one here is the object groups which is bringing us one step closer to actual objects that we can work with what we now have to figure out is inside of the tile and the object layer we want to get individual tiles that's the next major step and for that let me add another section let's call it get tiles and objects actually let's just focus on tiles now because tiles and objects do work slightly differently not that much and just to keep things simple i want to get my floor tiles let me copy this one and let's call it my layer and this is going to be my floor layer and besides that i'm going to comment out everything else now what happens if i print the layer we are getting not something that is particularly useful because what we want in here is dir which is a surprisingly useful function alright now what we get as the properties and methods for a layer all of the stuff that we have in here is going to be useful to us and tiles is pretty much the most important one that you are going to work with the most let's have a look what this one does i want to print layer dot tiles and this is a method so we need brackets and let's see what we get we get a generator so let's loop over this one i want four tile in layer.tiles and print the tile if i now run this what we get is an x in the y position let me go all the way to the top there are quite a few we have a very large tile set basically what we get here you can see where it's starting we first of all have an x position and this is for the tile then we have a y position and then we have a surface so we are getting three bits of information that is actually all we need and i am going to use all of this information in just a bit but this is pretty much all you are ever going to need now how you would actually use this in pygame is not by looking at the entire tile instead you would for x y and surface in layer.tiles and then you want to print x you want to print y and you want to print this surface if i run this now we are getting the x position the y position and the surface although be aware here x and y position refers to the tile inside of the map not an actual x and y position to get that we would have to multiply it with the size of the tile set which in this case is going to be 128 so this would give us the actual position on the map and once you have that information you can just use it that's basically it but let's have a look at some other things in here besides layer tiles you can also call layer dot data and this is going to return csv information let me print it and i think this is going to return an iterable no it actually doesn't cool so here you can see how the csv data would look like not particularly useful in this case because tiles is much more useful but you could be working with it although let me comment this one out because it well it's very space consuming now besides that you have layers dot name and this one should be fairly obvious and this should just be layered name and we get floor the name of the layer and we can also get layer dot id and this is going to return us the id of the layer you don't really use id very often name as well but i just wanted to mention it but basically this is all you are going to need to get different tiles most of the time you are just going to use dot tiles and you get all the information you could ever want so this is get all the information and well with that we have different tiles now besides that we also have to get objects and for this one let me comment out this one here and i want to create a new variable and let's call this one object layer and for this one i want to get my tmx data and again get a layer by name and this time i think i called this layer objects let me print the object layer and see what we get and we get a tiled object group objects so this is going to contain all of our objects all right now when we print dir and the object layer we are getting the window again this is getting a bit annoying but in here we have a ton of things that should look fairly familiar we have for example the id and we have the name of the layer and some things that i think are fairly obvious for example we could append something we could clear the entire layer we could also remove certain elements it's quite obvious what happens with these we also check if it's visible or not but the one thing that we don't have in here is some way to actually get all of the objects so if you read through this there's nothing that says get objects or something like this the reason for it is that we don't need to because this object layer can be iterated over all i have to do is for obj in my object layer and then print obj if i run this we are getting all of the objects in the game and there's actually another way to get this so let me comment out all of this and what i want to do is tmx data dot object that's horrible spelling objects there we go and this is returning the same information as this bit here meaning we can run a for loop so for obj in all of this and print obj again and we are getting exactly the same result so two different ways of getting the same outcome now i tend to prefer the first approach because this one is a bit more deliberate in terms of how it works especially if you have more than one object layer this one tends to make a bit more sense for obj let me run the dir method and now we are getting a ton of information and this is all the stuff we need to access an object and the really important attributes in here are x y and image image being the surface for this object and once we have that we basically have well all we need although there are a few more things that could also be useful to you for example we have rotation we have width we have height we have id we could get the name and there is also the type and those also tend to be quite useful but image x and y are the really important ones oh also there's s points when we are working with the shapes this one is becoming really important but essentially all we are going to do is obj.x then obj.y and obj.image if i run this we are getting the x the y position and the image or the surface now these at the bottom here don't have an image because they are the shapes but if i scroll up we are getting a bunch of surfaces for example the first one that's the castle it's an image that's 768 by 768 pixels and this one is in the position of these two coordinates and well with that we have all we need i guess there's one more thing that we do have to cover and that is the s points what i want to do is inside of this for loop i only want to get my shapes let me return to tiled actually and in here you can see all of my objects and what i want to do is only get the objects with the type shape and this could be a good exercise for you try in the for loop to only get the objects that have the type shape and i guess when you have that print the objects doesn't really matter what you do all right basically all you have to do is if obj.type is equal to shape and this has to have an upper case s and if that is the case i want to print the object so now if i run this we are only getting the different objects that are going to be shapes and in here the marker is the easiest one so let's work with this one first i want to add another if statement that if obj.name is equal to marker and now if that is the case i want to print obj if i run this again now we are only getting the markers and for reference here we are back in tiled and if i scroll in a tiny bit the marker is this tiny thing it's basically just a point on the map that doesn't really do anything besides that so all we would ever want from this is an x and a y position and this we will get with obj.x and obj.y meaning if i run this we're getting all of these points and this could for example be the starting position for a player or really whatever you want in here it's a fairly generic position and that is all you would really want to do with the markers they do have height and width and image in them but all of them return none or zero so it's not really useful now the more interesting object is if obj dot name is equal to the rectangle and let me comment out the markers so things are a bit easier to read and let me print the obj in here and this rectangle does have x and it does have a y position if i run this we are getting this information here if i go to tiled we are looking at this rectangle here right now and you can see we have the same position and besides that we could also get the width and the height let's actually do that one so i want to copy this again i want to get the width and i want to get the height if i run it now we are getting more information and if you just want to draw a rectangle this is basically what you would use although you could also object as underscore points and run this and this one would return all of the corner points of this rectangle which i guess could also be fairly useful although using those four bits of information is probably more useful now besides that let me comment out this one here we could look at if obj dot name is equal to ellipse and let's check if this is working so get my object and this should be a comparison operator there we go now we have the ellipse and this one is going to return the same information we have seen earlier now unfortunately there's no radius in here so if you wanted something round you would have to use the height and the width and then use that to create something round yourself sadly there's no easy way to create a rectangle here i guess you could use if it's a perfect circle either the width or the height as the radius but well that is all that is to that one and finally we have if obj dot name is equal to only gone and in here we can print the object again although that isn't going to do too much we're getting the same information again the one important thing here is as points and if you run this now we are getting the points and here it is very important that those are the bounding box of the rectangle they are not the actual polygons for that let me duplicate this line you would just need points so if i run this now these points here are the actual points of the polygon these points here are the bounding rectangle and let me visualize this entirely we are looking at this object right now and s points returns this bounding box here whereas if you just use points you're getting these five points here very different information but with that we have covered all of the different shapes that you could ever possibly work with as a matter of fact we have covered everything that you would need for the basics to use pi tmx and pygame that's kind of all you need so i guess with that in mind let's actually use it and most of the time you want or at the very least should use a sprite class meaning i want to create a tile and this one inherits from pygame dot sprite dot sprite and this one needs a dunder init method here we need self as always then we need a position and then we need a surface and now in here we need self dot image that's going to be the surface and we need self.rect and for self.rect we get self.image.getunderscorerect and we want to place the top left wherever the position is and this is then just about the easiest kind of sprite class you can create yourself oh i did forget we do need super and the dunder init method and then here i guess we can pass in the groups the class should be part of and this should also be a parameter for the ended method so now this is actually the most simple kind of sprite class i have been recording for a while sorry about that okay now when we are creating the init stuff for the actual python code so this part here i want to create a sprite group or whatever you want to call it and this one is just going to be pygame dot sprite dot group and now in the game loop all the way at the bottom i want to call sprite group dot draw and i want to draw on my screen and now all we have to do is add sprites to this group and then we can draw it and just thinking of it if none of what i have just said makes any sense check out my introduction to pygame that is going to help you a lot now i basically want to cycle through my tmx file and populate all of this with different tiles and i suppose let me put all of this at the bottom and add a fresh section here now first of all i want to cycle through all of my layers and this i usually do before layer in tmx starter dot layers and now i have to separate my tile layers from my object groups and as far as i could find there wasn't really a good way of doing it and there are two ways to approach this first of all you could check if layer dot name that is not how you spell that is in and now you write some strings like floor and lance and rocks and i think another one was pipes so this way you're selecting specific layers and you yourself know that there are tiles inside of these layers which i suppose works but really isn't the ideal approach because it's very manual although i suppose there are also situations where you do have titles you don't want to be shown and in that situation this approach would be quite useful however another approach would be to check the different attributes because tire layers and object groups have different kind of attributes and we can go with that and i know that the tire layer has the data attribute so i can check if has utter i want to check my layer and i want to check for data and if that is the case i want to print my layer if i run the code now we are getting an error because i didn't comment out everything properly now let's try this again there we go now we are only getting the tile layers and in here also i do not want to work with ground because this one is invisible so what i could also do is instead of layers look at visible layers so now if i run this we are only getting the visible tiled layers and now what we can do in here is what we have done in here so we're using layer.tiles and we're getting x y and the which means i want for x y and surface in layer dot tiles and now that i have that information i need to convert these x and y positions to actual positions we can use which means in my case i just want to multiply the entire thing with 128 this i want to do both for x and y and all of this should be in the position variable and now with that i can get my tile position should be the position the surface should be the surface and groups should be my sprite group and now if i run this we can actually see something now there's a bit of a problem let me go to tile to visualize what's wrong here basically what we are seeing in the game is this part here more or less which isn't ideal because we don't have a camera set up yet so we can't see all of the actually interesting stuff but i guess an easy way to fix this is if i use my floor i can draw some grass so let me draw some here so we have something a bit more interesting to look at and i guess we can also draw some dirt and then for plants and rocks i want to was it in objects yes so let's place in the objects i want to place a castle here a tree here here and here i know a couple of mushrooms we could place randomly it's really up to you what you want to do and now really importantly don't forget to save so this actually shows up in the game and now if i return and run this again now we can at the very least see the ground we can't see the castle yet because we didn't cover objects but at the very least something is working and well for the objects all we really need here since our case is fairly simple is for obj in tmx dot data dot objects i can just reuse my tiled and then here we need a position we need a surface and we need groups and this i think could be a good exercise for you right to figure out the arguments for these three parameters and see how far you get if you paid attention this should be fairly easy all right let's go through together first of all we need the position and the position here is going to be obj.x and obj dot y and important here this is not on a tile set so both the x and the y position is just information we can use straight away which makes it very easy to work with meaning the position we have already covered next up we need the surface and this one we can just put straight into the argument because all we need is obj dot image although this is going to cause problems in just a second but we'll cover that in a bit and for groups i want to have my sprite group now if i run this we will get an error because we have a nontype that for some objects we don't have an image so what we can do i suppose that's the easiest if obj dot image exists then we want to create a tile and now if we run this we can see the castle it's a bit stretched out so this isn't looking too great but at the very least it is working and that's all i'm caring about for now the mushrooms do look much better and in here using obj.image really isn't the cleanest way ideally you would want to have clear names for your different objects and let's have a look at this entire to really visualize what i mean here again we have all of our objects and ideally every single object has a name and a type that makes it really easy to work with them so right now this one here should be a castle and this should be a building and all the other stuff is type vegetation and the name for these trees should be three and then all the other elements are mush rooms and this is looking much better so when you work with objects really make sure to name things consistently it's very easy to forget all right now back to the code what you want to do in here is more something like if obj in either buildings or in vegetation so if i run this we can't see the castle because i think this was building there we go and now if that is not the case so else then i am working with the shapes and for those the title class isn't really going to work so i'm going to do this slightly differently let me get rid of this and copy all of this here instead and then i want to go into the game loop and on top of the group i am going to draw all of these shapes straight on the screen so what i first of all want to check if the object type is inside of shapes we are working with all of these objects here and just to make sure we can actually see them let me move them all on the screen or at least some of them on the screen there we go this is definitely going to be visible and again don't forget to save really important now in here i want to check actually i can copy all of this here make my life a bit easier and let me uncomment all of this and let me put these things after each other all right so now we have all the information we need to draw markers rectangles ellipses and polygons now markers are the easiest ones and we already have the x and the y position so what we could be doing for example is pie game dot draw dot circle and for this one we need a surface which in my case is screen then we are going to need a color let's say for this one we can use red then we need the center which we have that one is going to be obj.x and obj.y and then we need a radius let's say in this case we can go with five and let me comment out or delete these two points and comment out all the other stuff so we're not spamming too much text and now if i run this we can't see anything for the simple reason that this should be shape instead of shapes so here we can see one point and there we have another point obviously this isn't too useful but i think you get the principle now next up we have the rectangle and i think the easiest way to work with this is to turn this into an actual rectangle so pygame.rect and then here we need left top width and height and if you look below we have all of these points so obj.x is the left side obj.y is the top and this is horrible spelling then obj.weft is the wift and obj.height is the eighth meaning now i can get rid of all of these points and call pygame.draw.rect i want to screen again this one i want to be yellow and i want to have my rectangle so if i run this we can see the rectangle as well next up we can work on the ellipse and for this one basically what i want to do is pie game dot raw dot ellipse and in here we first of all need a surface which is my screen then we need a color which in my case let's go with blue and now we need a rectangle and the rectangle let's create it separately again is going to be pygame dot rect and for this one i can just copy all of this stuff we used for the rectangle and just paste it in here and now we have a rectangle so i can run this again and we get the rectangle we created and finally we have the polygon and for the polygon i only really care about the points so if i run this just to see what we get we have all of these points we basically get a list and the list contains point objects and each point has an x and a y attribute and those we have to extract first of all and for that let me get rid of all of this i want to create a points variable and i'm going to use list comprehension to extract all of the points and for now i want point for point in obj dot points and i don't want the point itself instead i want to have a tuple that contains point dot x and point dot y and if i print these points now and run all of this i get a list full of tuples with the x and the y position and this i can use for pygame.draw. polygon and polygon only wants three different arguments it wants a surface which in my case is screen then for the color something we haven't used yet let's go with green and points is going to be points so if i run this we can see on the right side the shape we have seen earlier and well that is pretty much all you are ever going to need so i hope that was helpful and i see you around