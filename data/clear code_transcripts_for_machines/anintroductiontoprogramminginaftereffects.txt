and welcome to an introduction to programming and after effects in this video you will learn how to use code to create flexible and dynamic animations for example you will learn how to create a box that automatically scales with the text inside you will learn about animations driven by code you will learn about powerful custom effects and quite a bit more overall this video covers 15 projects in total and it will become progressively more complex and i assume that you have no experience with coding whatsoever but i do expect that you know the basics of after effects already and finally all of the project files are available on github so i hope you enjoy hello and welcome to the first video in this series now for this video we are not going to do a proper project instead we are just going to do some really simple exercises to get started on coding and after effects and this is going to be a really good start to talk about the most sophisticated examples in the next few videos and there are four topics that i really want to cover in this video and let's go for them step by step i think that's going to be an easier way to approach this and the very first one is how can we write code and after effects in the first place and that is actually surprisingly simple because all you have to understand is that any property can get code or more specifically anytime you see some kind of property with a stopwatch you can write code for this property and let's actually have a look at this in after effects i think that's going to be the easiest way to approach this so here we have an incredibly simple setup for after effects i have a single composition that is called intro and inside of this composition i have one text layer that just says test and nothing else is going on in here and now if i wanted to animate any of the properties of this text layer i would have to open its properties and then look at all the different properties that are inside of it so in here you can see quite a few different stopwatches we have one for source text one for grouping and then we have anchor point position scale rotation and opacity and all of these could receive code however fill in stroke intercharacter blending and path could not get code because they don't have a stopwatch and let's say i want to influence the source text property and for that i hold alt and i click on the stopwatch itself and if i do that we can see some text and the screen run black but that only happens if you have this text selected if i click outside of it this disappears and in here you could write all of your code now obviously we don't really know how to do that yet but that is actually something we can talk about right now and that is the most fundamental concept of coding in after effects and that concept is values whenever you write code for property and after effects this code has to result in a value and the value has to be appropriate for the property as well so for example for the source text property we would need some kind of text and for the rotation property we would need a single number so those two would be different kinds of values and if you wanted to create numbers all you have to do is to write a number however if you wanted to write some text you would have to put quotations around that text and with that we have the most basic kinds of data types so let's actually try this in after effects and let's see how this is going to look like so here i am back in the setup we just left a second ago and i still want to write some code for my source text property and let's say i just want to write a number in here so i just type one two three which would be a number so now all i have to do is to click outside of this text box and we get one two three exactly the value we specified in here now what we could also do is to write some text in here and for that we would need quotation marks so let me write them and in here i want to write some text and now if i click outside of it we get some text and that really is the basics of how you can approach different properties on the most basic level and you could just write some information in here and then this would update and this would just be for source text or we could also look at let me scroll down a tiny bit let's say i want to look at rotation so on the stopwatch i hold alt and left click on it then i get a new code window and in here i could just write a number so let me write let's say 80. and here something that can be quite confusing you don't activate the scope by pressing enter this will just get you to the next line instead you have to click outside of this window but if i do that we get a rotation of 80. and this seems to be working pretty well but now here's one thing that if i wanted to pass in some text in here let's say text then after effects would give me a warning sign that you can see here and if i click again on my code i get an error couldn't turn result into a numeric value where effectively after effects is telling us that it can't do anything with this information it can't rotate this object around text it just doesn't work and i think it kind of makes sense why because we need a number to rotate and all right let me get rid of that and if you just delete all of the code then after effects is getting rid of all of this anyway cool so now we have the most basic kind of setup that we can put a single value inside of a property and this could either be text or it could be a number both would be fine however now for some properties we need a different kind of value so if we look at position or scale they need neither text nor a single number instead they need two numbers combined the same for anchor point actually all three of these need two numbers combined so how would that work and well let's try so let's say for position so on the stopwatch i hold alt and left click and now i can give it some code and now i have to figure out how to enter two numbers in here and for that after effects has a different type of value and that is called an array and arrays are created with square brackets and then inside of this you can add multiple values now this can be more than two and we are going to see this very soon but the position property looks for an array with two values inside so if i placed inside here let's say 100 and 200 then the first one would be the x position so this 960 here and the second one would be the y position so this 540 here and now if i click outside of the window we can see that our text has moved to position 100 and 200. so what that specifically means is that this anchor point is 100 pixels from the left and 200 pixels from the top and with that we have the three most common types of values that you are going to use in after effects we have numbers we have text and we have arrays but that still isn't going to help us all that much because we want to create some logic and for that we have to write multiple lines of code and to achieve that we are going to need two concepts number one is the order of execution and number two is variables and those two concepts work really closely together and let's talk about the theory first and then we're going to implement it the order of execution really just means that after effects when it looks at code it starts at the top and then works itself downwards so the first line of code is going to be executed first then comes the second line then comes the third line and so on and to connect these individual lines of code you need variables and a variable in the most basic sense is a box with a name that can contain a value and then you can reference this box across multiple lines for example on the first line of your code you can put a value inside of this box and then on the second line of code you can add a value towards the value inside of this box and then on the third line you can set this value as the value for your property and variables are created in a very specific way we first need the keyword var then we need the name of our variable and to assign it a value we need the equal sign and then the value we want to assign it so let's say if i wanted to create a variable with the name a and give it the value of 5 it would be var a equals 5. and in our next line of code if i wanted to add let's say 10 towards it i could just reference a and then add 10 towards it and there was a ton of theory let's actually implement all of this straight into after effects so here i'm back in after effects and there's one very useful thing that i haven't talked about yet that you can deactivate code so for example at the position property if i click on this equal sign then it's crossed out and now the code for this property is deactivated and i think right now this is quite useful because i want this to be kind of in the middle of the screen now let's give some code to the rotation property so i ord and left click on it and in here i want to create a new variable so i type the var keyword and now i have to give this variable a name and in here there are some restrictions on how you can name your variable the most important one is that your variable name has to be one connected string of characters so that we can't have a space between different words if you wanted to separate your words you would have to go with an underscore sign but besides that you can basically use any letter or number and in my case let's just go with the variable name test underscore value so this would be a perfectly fine variable name and now to assign this a value i have to use the equal sign and let's give it the value of 5 and this would be the first line of code now to go to a second line i can press enter and now i would have the second line of code and what i could be doing in here for example is to type test value and now assign it another value and what i want to do is to choose my test value again and i want to add let's say 10 towards it so what we have done here is we first created a variable with the value of 5 and on the next line we have taken that value and assigned it itself that's the number 10. and you can use very simple math operations like you have done in math so this wouldn't have to be a plus this could be a minus it could be a division or it could be a multiplication but for now i just want a plus and now we need one more line of code so let me press enter again and now what i have to do is to just write test value nothing else and that is really important and let me explain why that so far we have created a variable with the value of 5 and then we have changed this value but what we have not done is to tell after effects what value we want for this rotation property and for that we need the last line of code yet we just tell after effects that this is going to be the value we want for this property so this value just has to be there by the end just by itself and then after effects is going to look at it and assign this to value so if i clicked outside of this field we should theoretically see 15 so 5 plus 10. and let me click outside of it and we can see if you look at the property value you can see 15. so this one is working now while this is working there is a potential for an error that sometimes these lines of code can get really long and this could make it confusing in terms of where a line ends and where neverline begins so what you usually see at the end of every line you see a semicolon and this is telling after effects very specifically that this line of code is ending here and this is generally really good practice but if i clicked outside of this window you couldn't really see a result but alright with that we have covered some of the most fundamental concepts of programming and after effects it hasn't done too much yet but in the next tutorials we are going to see much more interesting examples but before we get to that let's do an exercise and i want you guys to play around with the opacity property and what i want you guys to do for the opacity is to create a variable with the value of 20 and then multiply this value by 3 and then set the resulting value to be the value for the property so pause the video now and try this yourself so here we are still in my code editor and let me minimize all the other parts because i'm not going to need them for now and i want to look at opacity so i alt left click on it and now i get some default code that i just want to delete and i want to start by creating a new variable with the value of 20 and for the name let's give it opacity value and this is just going to be 20 then a double colon and now i want to multiply this value by 20. and for that i'm just going to write opacity value is equal to opacity value so itself and then multiplied by 3. then i want another semicolon and then i'm telling after effects that a positive value is supposed to be the value for this property and now if a math isn't completely wrong this should be 60 so let me click outside of the field and that's exactly what we're seeing 60 so i hope all of that makes sense and i'll see you in the next video where we start with our first actual project all right hello and welcome to the first actual project and here's what we are going to make i have a circle and a text and whenever i move the text i also move the circle however i only move the circle up and down if i move the text left and right the circle is going to ignore that and i think it's actually best to jump straight into after effects and let's have a look at this so here i'm in my basic setup i have a new composition and instead of this composition i have a text layer and a circle which is a text layer and a circle fairly straightforward and now whenever i move this text layer i also want to move this circle which doesn't work right now very obviously and for that i have to look at the position properties so with circle selected i press p and also with move selected i press p as well so i get the position properties of both of these layers and the first thing i have to do is in the circle i want to separate the position so i left click on position and i click on separate dimensions so now we have an x position and a y position and the one i want to change is the y position so i alt left click on the stopwatch here and now i get the default value and let me get rid of that so in here we could just write some number to influence the height of the circle so if i just wrote 100 in here and clicked outside of the box our circle would be far at the top and one slightly confusing thing in here is that to go downwards you have to increase the number and if you want to go upwards you have to decrease the number so the yaxis is inverted which can be quite confusing but well we're not going to set the value anyway ourselves instead what we want to do is to look at the yvalue of this text and change that so what i want to get is this value here so when i look at my circle i would have to write some code to first target this layer and then this specific property and this would be quite complex but after effects has a very neat way to get around that and that's the pick whip you have probably used the pick whip before to make one layer the child of another layer so you could move them together but when you start to write some expressions you can use a pick whip for every single property so with this selected i get another pick whip and now i can select specific values and what i want to select is the y value of the position property of the text so if that's selected i get some more text in here and if you look at this this should actually see fairly straightforward so we start in this composition then we add a dot and then we add layer so we look at layer move which is this move layer then we look at transform and then we look at position and then we add one afterwards what the one means we don't have to worry about just yet but we are going to see that very soon but by itself this should look fairly straightforward and readable and now if i click outside of this box the circle moved back to the height of this move layer and now what i can do is to move this layer up and down and the circle is going to move along with it however if i move the text left and right it is going to ignore that and with that we have created a really basic setup that works pretty well so with that we have a pretty good start and let's do an exercise on this and here's what i want you guys to do right now the circle is connected to the text via the y property or the y position now change this that the circle is only following in the x position and ignores the y position and in addition to that also add an offset of 100 pixels to the right so the circle is always 100 pixels further to the right of the move text so pause the video now and try this yourself alright welcome back it was a slightly more advanced exercise but let's try to do it together now so here i'm back in after effects and the first thing i want to do is to disable this line of code here so i click on the equal sign so now this is disabled so we can move the text and nothing is going to happen anymore and instead what i want to do is to give the x position some code so i always left click on it and now i get some code here and i want to get rid of that and instead i want to use the pick whip to look for the x position of the move text layer and now again i get this comp then layer move then transform i know position zero so this line here and this line here is almost identical besides the one number at the end and now if i click outside of this box we can see that this circle is right on top of the move layer and if i move the move layer left and right the circle is moving along with it and i made a mistake that i accidentally reactivated this line here so i have to click on the equal sign again and now i can move my text up and down and the circle is going to ignore it but if i move left and right the circle is going to come along with it so this works pretty well but now i want to give this circle an offset so i have to change this value a tiny bit and really all i have to do is to add a value towards it so plus 100 pixels and really try to think about what's happening in this line of code we first take the position or the x position of the text and then we want to add 100 pixels towards it so now if i click outside of this this looks pretty good and now we can see that the circle is always slightly further to the right although granted it is kind of hard to see so let me increase the number ever so slightly let's say to 500 and now we can see this much better that the circle is still moving along with the text but it is 500 pixels greater or further to the right and this is something you really have to understand about code that really all that we are doing is we create different values and add them together so all that's happening in here is that we look at two different kind of values the first value is the x position of the text itself and the second value is a static 500 and we just add them together and tell this property that this is the value you want to set it to and that's really all that's happening here so i hope that made sense and i will see in the next video hello there in this video we are going to be learning two new things number one is how to set color in code and number two is how to use an if statement so that we only want to do a certain thing if a certain condition is true and here's what we are going to do i have a circle moving left and right and if the circle is on the right side of the screen i want it to be red if it's on the left side of the screen i want it to be black and let's talk about how we're going to do all of this in code first before we actually implement it so on a more general level here's what we are going to do in our code we are going to define two colors that are going to be black and red and then i want an if statement that if the circle is on the right side of the screen i want the circle to be red and if that is not the case i want it to be black and to make all of that work we need two concepts number one is how to create color in code and that is quite easy all you need is an array with the rgba values so the amount of red the amount of green the amount of blue and the transparency and each of these values has to be between 0 and 255 with 0 being the absence of the color and 255 being the full amount of the color so for example in my case the red color is going to have the values 215 68 63 and 255 so we have a ton of red very little green and blue and then the full transparency so 255 and let's implement this right in after effects i think that's going to be quite useful so here i'm back in after effects and i have a new composition that's called moving boolean we're going to see in a second what boolean means and inside of this composition right now i have one circle that moves left and right so if i play this composition we can see the circle moving left and right really nothing fancy and alright so let me hide all of this and the first thing i want to do is i have to figure out what kind of property do i want to animate so let me open it for the circle and i don't want to look at a transform because there's no color in here instead let me open contents then ellipse and now we have ellipse path stroke fill and transform and i want to look at fill and in there i have a color property and to there i could just change the color to really whatever i wanted but i don't want to do this with this color property instead i want to do it in code so again with alt and left click i create some code for this property and now again we have the standard value but i want to get rid of that although i think by now you might be able to read it a bit better but it doesn't matter anyway so let me get rid of it and now i want to create two variables with the respective colors the first one is going to be my var red so i just want to have a red color and for that i am going to need an array so square brackets again and inside of this i need four values the amount of red the amount of green the amount of blue and the alpha value and this is what i mentioned earlier that for red i want 215 for green i want 68 or blue i want 63 and for alpha i want 255 and this would be our first value but now i also want a second one and this is going to be bar black so my black color and this one is also going to be an array and this one has the value for red it's 51 or green it's 58 for blue it is 55 and then alpha is also going to be 255. so this one has very few colors overall so it's quite dark and all right with that we have two different colors and really what we can do now is just write red in here and then this color property is going to take the value of this red value or variable so if i click outside of it my circle went white and there's a reason for that right now all of these values are between 0 and 255 but after effects is looking for values between 0 and 1. and right now since all of these values are much greater than 1 the entire thing is going to be white but what we can do to overcome this is simply divide the entire array by 255 and this way every single value inside of it is going to be divided by that number so now if i click outside of it now we get red and we have to do the same thing for black so if i just went and typed black in here i will get a white circle again because all of these values are much greater than one so instead what i have to do is to just divide it by 255 and then i get black again and this way you can use standard rgb values to apply them in code now you could also write very small values like 0.1 in here and this would work but it's also kind of hard to work with so i tend to prefer just writing the rgb values and then dividing the entire thing by 255 and all right with that we have some colors the one thing we have left to figure out now is how to turn this into an if statement that i want the color to be red if the circle is on the right side of the screen and the color to be black if the circle is on the left side of the screen so let's talk about if statements so an if statement is a really common thing in all programming languages and what it does is it checks if a certain condition is true and if that is the case it runs a certain kind of code and how we implement this in after effects is we first write the word if and then we add brackets and into these brackets we can check a certain condition for example what we could be checking is if the center of the circle is in a certain position on the screen and then after these brackets we have to write some more code that is only being run if the condition inside of the if statement is true and in after effects this is usually done in curly brackets there are some other ways but they are not going to matter for now and i think it's best to start implementing this i think that's going to be the easiest way so here i am back in my code and for now i want to get rid of this black so now if i clicked outside of it after effects would be giving me an error message that has an undefined value used in expression could be an out of range array subscript this is a really common error message you see in after effects what it basically means is that after effects couldn't find a proper value to assign to this property so nothing is working and this should make sense here that in this code right now we have only assigned values to two different variables we didn't actually tell after effects what value it's supposed to be using but all right what i want to do is to type if and now brackets and now i have to check a certain condition and what i want to check let me open transform again so in transform we have x position and i want to check if this x position is greater than the middle of the screen and i can do that fairly easily all i have to do is to move the circle roughly to the middle and the middle is going to be 960. it's not exactly in the middle right now but a simple reason that the entire screen has a full hd resolution so it's 1920 pixels wide which divided by two is 960. so what i have to do instead of the if statement is to first look at this x position and for that again we can use the pick whip so i just select the x position and now i want to check if this is greater than 960 and this would mean we are on the right side of the screen and now after the brackets i have to use curly brackets and this code now is only going to be run if this condition here is true and if it is true i just want to tell after effects to use the red color and you could put all of this on a single line but what you rather see is that people indent it and do something like this and this is perfectly fine it's i think it's even a bit easier to read so let's leave it like that and now if i let me move the code i can already see it if i moved the circle or the timeline to the right where the circle is on the right side of the screen we can see our red circle but now if i move the circle to the left side it goes back to the standard color but only because that's the one we set in the beginning if i open my code again we get undefined values in expression again so after effects doesn't know what value to assign and this should make sense right now we are only telling after effects that we want to assign a value if the circle is on the right side of the screen but if the circle is on the left side of the screen well we don't have anything so after effects is complaining and what we can do now is to extend our if statement with an else statement that if this condition is true i want my circle to be read however if that is not the case so else then i want to run some other code which also should be in curly brackets and the only code i want to run is that i want my circle to be black so the final value for this property should be black and with that i am pretty much good to go so here again you could write this over multiple lines or leave it on one line it really doesn't matter at least for one line of code if you had multiple you would have to separate them by semicolons but after effects is generally quite forgiving about not using semicolons so you don't have to worry too much all right let me click outside of it and now if i click back into it we don't get an error message so that seems pretty good and now i can run the entire thing and we get a circle with a change in color that works completely automatically and let's finish this video off with an exercise and i want you guys to work with the transparency property that if the circle is on the left side of the screen it's supposed to be 50 if the circle's on the right side of the screen it's supposed to be 85. so pause the video now and try to implement this yourself let's try to do it together now and just to save me some writing i want to copy this if statement just to make my life a bit easier but once i have that i can minimize the color property and minimize all of the ellipse and contents and instead i want to look at opacity so again with alt and left click i create some code and i'm going to paste the if statement into this and now in here all we have to do is to replace this red and this black with more specific values and what i wanted was that this one here is that if the circle is on the right side of the screen so if that is the case i want the value to be 85 and if that is not the case i want the value to be 50. and i think let me put all of this on one line for the code i think that's easier to read so this is quite a bit easier to read and now if i go outside of this box we can see that we have different opacity values so this seems to be going quite well and let me actually emphasize this a bit more so for the right side i want let's say 60 and for the left side i just want 10 so you can see it a bit more and there we go now we have used one layer with lots of different if statements that make it really flexible and alrighty so with that we are almost done with this video but there's one more thing i do want to address and that is boolean values and that is actually the name of the composition so let's talk about what a boolean value is and well a boolean value is just another kind of data type so this would bring us to four different kinds we have text we have numbers we have arrays and now we also have boolean values and boolean values are arguably the easiest kind of data because there can only ever be two different kinds of values they can either be true or they can be faults that's the only two values possible and you would hardly ever use a boolean value by itself instead you would rather generate one within an if statement and this is actually what we have done for example when we use transform.x position is greater than 960 we created a statement that returns a boolean value and this one could have either been true or false those were the only two options here and the easiest and most common way to create a boolean value is to use comparison operators and we have seen greater than and smaller than but there are quite a few more for example is equal to or is different to or is greater or equal than or is smaller or equal than and all of these would always generate a boolean value which can be super useful for if statements so i hope that makes sense and i'll see you in the next video in this video we are going to be learning how to use custom expression controls which are really useful to control specific layers and make them really flexible and here's what we are going to do we have one layer with a couple of custom effects that can change the color the rotation and the drop shadow of this layer with just one click which would allow you to customize it quite easily and use it in lots of different circumstances and to make all of that work we need expression controls which are specific kind of effects that by themselves don't do anything but that you can use for specific custom effects so let's go straight into our code and let's have a look at this here we are in after effects and i only have a single layer inside of my new composition called menus and indexes what indexes are we are going to talk about in just a bit and this one layer is called box and right now it doesn't do anything it's just a plain rectangle and i want to give this a couple of custom effects so on effects and presets i have to go to expression controls and in there i want to apply a couple of effects to this the first one is angle control and this one is supposed to be for the rotation then i want a checkbox control and this one is supposed to control if there's a drop shadow or not and finally i want to drop down menu control and this one is for the color and let me actually rename all of these i think that's going to make it a bit easier so if i right click on them i can rename them and this is called rotation for the angle this one i'm going to call this a shadow and then the drop down menu control is going to be color and what we have to figure out now is how to connect these different effects to our layer and let's start with rotation i think that's going to be the easiest one so in my box i just click on r and i can see my rotation property and to make this one work really all we have to do is use the pick whip for this one property and connect it to the angle and if i have that let me open the code i can see effect rotation and angle and that's really all i need if i change this one now we have a rotating box that's really as simple as it is so this is working pretty well and just to explain how the rotation works is basically when we write this one here effect rotation at angle after effects is looking at this specific effect and then whatever value is inside of this effect is going to be returned inside of this effect and then after effects is picking that one up and using it for the rotation so it's actually a really simple effect to work with but now let's talk about color so i want to have a drop down menu for different color options and those are going to change the color of the actual rectangle and this is going to be slightly more confusing but the first thing i want to do is to click on edit for the color and here i can rename each of the items and i have three different colors i want to work with the first one is red the second one is gray and the third one is a darkish let's call it black so now if i click on ok i can see red gray and black so how could we use these values for our rectangle and well it's actually quite simple and to demonstrate it let me open the transparency or the opacity parameter audio opacity property and this one with the pick whip i want to connect to menu so we can see exactly what it's doing and really all you can see if i select different ones nothing happens but that's not the point of what i'm trying to do because the important point is when you look at the opacity right now we can see one with red selected and red is the first element inside of this list but now if i click on gray we can see two and if i click on black we can see three and this way we know what's being returned from each of these boxes that if we have red this effect would return the number one if we had rain here it would return the number two and if we had black in here it would return the number three and if we added more values in here they would increment by one number for each of the items in the list and that behavior we can use to choose different colors so let me get rid of opacity that wasn't supposed to be used anyway and all right now again i have to look for the colors for this rectangle so i go to contents then in rectangle we have fill property and this fill property is supposed to get code so with alt and left click i create some code and let me get rid of this one for now and the first thing i want to do is to create a new variable that i'm going to call color underscore choice and this is supposed to get the value of this color menu so i use the pick whip again and just click on menu and now a semicolon and i can go to the next line and let me extend this a tiny bit to get more space and in here there are a couple of ways to approach this and you in theory would at least already be able to do this from the last video because what we could be doing is to use an if statement that if color choice is equal to one all right i haven't covered equal to yet so so far we have seen greater than or is smaller than but we haven't seen equal two and this is a double equals sign for the simple reason that the single equal to sign is being used to assign values so if you want to check if one value is equal to another value you have to use a double equals sign but now you could do all of this yourself so i could check for example if colored choice is one and if that is the case i could set a specific color in here and for example the color i had last time was 215 68 63 and 255 all divided by 255 so this if i had red selected would work we would be getting red and now we could add more if and else statements to make all of this work but this really would not be an efficient way of approaching this kind of topic and instead what we can do is to use indexing and here's what indexing means in the most basic sense indexing just means you pick one value from an array and how you do that after the array you add square brackets and you add the index of the number that you want to pick and the first item in an array has the index 0 the second one the index 1 the third one the index 2 and so on so for example of our red color if you edit the entire array and then square brackets with 0 you get 215 the first value and effectively what i'm going to do is i'm going to put all the different colors into one larger array and then i use the color choice variable to pick one specific value from this and let's do all of this in code i think that is going to be the best way to think about it so here we are back in what i've seen earlier and the only thing i want to do is to copy the red color or cut it out rather and get rid of the entire line here because we have a better way of doing this and instead i want to create a new variable that i call color options and this one is going to be an array where each individual value is another array with one being the red color i had so far and then i want another color or two more colors actually the first one is a grayish color that has the value 166 165 and 161 and then i want one more color that is the darkest color we have seen earlier and this one had 51 58 and 55 and 255 for opacity i actually forgot that one for my gray color and all right now we have three different colors and it's perfectly fine to have one array inside of another array and what i could be doing now is to take my color options then square brackets for indexing and let's say i wanted the second element so the one with the index one because we start counting from zero if i added a semicolon and clicked outside of it now we get a whitish color but a simple reason that we haven't divided any of these values by 255 so at the end of this line all i have to add is divided by 255 and now we can see the gray color what i can also do now is to change this to a and we get our red color back and then of course i could change this to the number 2 and we get our very dark color again so this one is working quite well and really all we have to do now is to use our colored choice variable so this one we have set down here whichever returns one two or three and now if i click outside of it we get almost there that if i click on red we get a gray color and if i click on gray we get the black color and if i click on black we get nothing and instead we get an error and the essential problem here is that these different elements start counting from a different number that the menu always starts counting from one whereas for array indexing we always start counting from zero and as a consequence whenever we pick something from the menu we get the next item in the list but we can fix that very easily all we have to do is color choice minus one and now if i click outside of it now we get the black color we get the gray color and we get the red color so this one is working really well so with that we have two parts done the one thing left to do now let me minimize the rectangle again the one thing left to do now is that we have to have some drop shadows and let me actually add a drop shadow from the menu so drop shadow and let me increase the opacity to something like 80. and all right i want to make sure that if i click on this disabled shadow this drop shadow disappears and this is going to be your exercise so try to use this checkbox and see what it does so play around with the checkbox effect and see what kind of value it's returning and once you have that figured out try to use this effect to disable the drop shadow and a little tip here you can influence the opacity of drop shadows that's probably the best way to go on about it so pause the video now and try this yourself i think the first thing we should talk about is what kind of value this checkbox is returning so again i go to my opacity this tends to be a really good way to check for different values and now i connect it to the checkbox and let's see what it does so right now it's unchecked and i get a zero and if i check it i get a one so this is basically what values we get from checkbooks if it's unchecked it gives us a zero if it's checked it's giving us a one so we can use that to influence the drop shadow let me get rid of the value and instead i want to go in my box layer to effects and i want to target drop shadow and in drop shadow i have quite a few different properties the one i want to target is opacity so with alt and left click i want to give it some code so let me get rid of the standard text and instead i want to create a new variable that i'm going to call let's call it choice and the value of this choice is going to be this checkbox i need semicolon again and now we have to write some code that if this checkbox is ticked this opacity is supposed to be 0 and if that's not the case it's supposed to be 80. and for this we could either use an if statement or we could use indexing and let me use indexing because that's the one i want to focus on in this video so let me create a new array and this array has two values 80 and zero the two values i want to use and now all i have to do is to use square brackets and my choice variable and with that we are pretty much done so let me click outside of it and now the drop shadow has disappeared and if i untick this the drop shadow is back and let me talk for what happened here we start by creating a new variable that gets the value of the checkbox and this can either be 0 or 1 and on the next line we have an array with 2 values 80 and 0. and from this we're going to pick one of them and this happens right afterwards with the indexing square brackets and into this we would either have to pass 0 for the first value or 1 for the second value and this is exactly what we get back from checkbox so with that i can use semicolon afterwards to make it look a bit nicer but well we are pretty much good to go this is working quite well so with that you have a pretty useful rectangle that you can customize quite extensively on the fly and of course all of them have their own checkboxes so you could even add more effects to it or give them keyframes so this is actually quite powerful but alright i hope that made sense and i will see you next video hello and welcome back in this video we are going to learn about special keywords and after effects and the special thing about these values is that we are not setting them ourselves instead they're being set by after effects automatically so what does that mean and well let me give you an example we could for example use the time keyword and all that this one is giving us is the current time we are on so when we use time we don't have to set the value ourselves instead it's being set automatically to whatever time it is right now and another example would be index and this one is giving us the index of the layer we are looking at with the first layer being index 1 the second layer being index 2 and so on and there are quite a few more keywords but by just using time and index you can already create really sophisticated animations for example something like this and this is what we're going to create in this tutorial and for the entire animation we did not use a single keyframe and we only placed a single element anything else was done with a script and achieving all of that is actually fairly simple let's go straight into after effects and let's have a look at this alright here we are in our after effects composition it is called index and time and inside of that i have one text layer that has the word text in it nothing fancy going on so far and there are no keyframes or anything and let's start this by looking at the keywords i talked about earlier and i think the best way to do that is to look at source text and give this one some code so with this one selected i get rid of all the text and now all i'm going to write in here is going to be time and now if i click outside of it we get 8.86 and if you look at the timeline we are slightly before 9 seconds and if i go exactly to 9 we can see 9. so all that time is doing is it gives us our current time on this timeline so if i go to 0 we will get 0 if i went to 1 we will get to one so fairly straightforward now sometimes it's quite obvious that the numbers get really long and this is something that we are going to take care of in just a little bit but now don't worry about it because we don't want to print this number anyway we just want to work with it and for that having decimal places doesn't matter whatsoever but all right so that was time the other key what i talked about was index and now if i click outside of it we get a one and this one is not influenced by the time at all instead what it's doing is it looks at this number here the one for the layer so if i copy this text layer i can move it around and we get a 2 and now if i copy this thing again we get a 3. and i could copy this multiple times we would always get another layer index so let me move them on to the side and there we go now the text for each of these layers is going to be whatever index they're on so this information here right next to the name of the layer and all of this is automatically generated so for example if i get rid of this 2 here all the other numbers would update automatically so all that this index does is it gives us the index of the current layer and this is just going to be a number that you can use very easily and all right with that we have all we need to create the animation i talked about earlier and to get this started let me open my text code again and in here i don't just want to write the index instead i want to write the layer with the index and this would right now just be a string so if i click outside of it we get the layer with the index and then a double colon so how can we combine this with the index and well all we need is plus so now if i type plus index then after effects is going to combine this string with this number and all of that happens automatically so you don't have to worry about it the one thing you do want to worry about is that a space in a string is being considered and also what you have to do is index is always written in lowercase letters all right there we go so here the one important thing if you want to have a space between a double colon and a one you also need to have a space inside of this string if i were to remove this and click outside now they'll be right next to each other so that's not desirable and all right let's put a space in there that's quite easy and there we go now we have to layer with the index one and let me actually make it ever so slightly smaller i think it's getting a bit on the large side i think it's going to be a bit better okay cool and this is all i want to do for the source text itself but what i can do now is if i copy this the index would always update and this would happen automatically so we don't have to worry about it cool and now i want to use the index to influence the position of this layer and for that i have to open position and i think just to make things a little bit easier let me separate the dimensions so we can work with x and y separately and for now i just want to work with the y position and what i want to do is that the index is influencing the y position of this layer and well all the layers that come after it and since index is just a number i could also just write index in here and let's see what happens so we go all the way to the top except we go one pixel down and this one again is the index so if i copied this layer a couple of times now every time the index is getting one greater we move one pixel further down and of course right now this well isn't particularly useful so let me get rid of all of this and well all we have to do here is that i don't want to move by a single pixel instead i want to multiply this let's say by 50 and let's see how that looks and now we get to 50 because we multiply 1 times 50. and if we were to duplicate this layer now this number would be 100 because we are multiplying 2 by 50. and this we can do as many times as we want and we always get to a different position and that way we get a really easy way to use index to influence our layer or the position of our layer and i think 50 is a bit too small let's go with 80. and now if i copy this yeah this looks much better and all right with that we have our y position now for the x position let me give this some code as well i want to use time to influence it and here again time is just a number that you can use like anything else so just to get started i could just write time in here and let's see what happens so my layer is all the way to the side or more specifically the anchor point of my layer is all the way at point zero and now if i move down the timeline we are moving ever so slightly to the right so if we're at second thirty we get to pixel 30 on the x position so we know it's working and we can kinda see it moving although again it doesn't move very fast but really to fix it all we have to do is to multiply this by a number let's say let's go with 20. let's see how that works so now if i move this let me actually play the entire thing now we can see that we are moving at a decent pace and i think the number is still a bit small so let's put this to 50. let's see how that works uh yeah i think that's going to be okay so now i think you can see the value of these keywords that they just give us a number and then we can work with that and this could be for the position for the scale it could be for the opacity really anything works in here and the most powerful thing is now that i could copy this and the index would update and all of this would work automatically and right now we have to combine the two because i want all of these layers to move at different speeds so let me get rid of them again and now i want to use my time and my index together so that the further down in the index my layer is the faster it is moving and really all we need for that is to multiply the number we have with index so for the first index this is going to be 1 so it's going to be the same speed but the second index is going to move twice as fast already and the third index going to move three times as fast and so on so now if i duplicate all of these layers we get let me start at the beginning we get different speeds for each of the layers and this is potentially a bit too fast but i guess it's fine for now and all right this is working pretty well so with that we have covered some really important keywords for after effects now with that let's do an exercise and i want you guys to use the index to influence the opacity of each of the layers using the index keyword and specifically what i want you guys to achieve is this the first layer is supposed to have full opacity but the second layer is only supposed to have ninety percent the second layer eighty percent the third layer seventy percent and so on so for every successive layer i want to reduce the opacity by ten percent so try to figure this out yourself and see how far you get so pause the video now and try this yourself so here i'm back layer and what i want to do is look at the opacity so i just press t on my keyboard and i get opacity and in here i want to give it some code and let me get rid of the default one and now i have to figure out how to use index to influence this and if i were just to type index we would get an opacity of one so if you look very closely you might be able to see it very faintly but well that isn't particularly helpful and here we couldn't just multiply this by a hundred or well we could but it wouldn't solve the problem because now we can't see the first layer but if we duplicated the layer then this layer would have an opacity of 200 and since the maximum opacity is 100 this is well not helpful so this one isn't working so let's try something else instead what i want to do is to start with 100 and then minus and now what we get is we're moving backwards so for every index we are reducing the opacity by one percent so that's already getting closer to it and now all i have to do since i don't want to reduce the index by 1 instead i want to reduce it by 10. so all i have to do is to multiply the index by 10. and now for the first layer we get 290. we're going to fix that in a second but now for every other layer we go to 80 70 60 and so on and you can see the result really well that it becomes less and less visible so that's a pretty good looking effect and now the only thing we have left to cover is how can we make sure that we start at 100 and not at 90 and there are a couple of ways the easiest one i feel is to just start at 110 so now we start with 110 minus 1 times 10 which gets us to 100 and this would work pretty well so now i can copy this and we get to at layer number 10 we get to 0 opacity so this one doesn't matter anymore and all right with that we have made some pretty good progress and now what i can do let me zoom in a bit i can play the animation and we can see all of this is working really well so i hope all of that makes sense and i will see you in the next video hello there in this video we are going to learn a really powerful new concept and that is called functions and functions can do a ton of different things let's talk about them in the most basic sense a function is just a block of code that does one specific thing for example a function could loop a keyframe animation and this is exactly what we are going to see in this video we are going to look at the loop out function and all that this one does is it looks at the keyframe animation and it loops it in a certain way that's really all that's happening but this would just be a single function and we are going to see quite a range of different functions in the next couple of videos they are incredibly powerful to make well basically anything work in after effects and we can even create our own functions which is something we are going to do later on but for now let's just start with looping some animations so here i'm back in after effects and i have a new composition that is called loop and inside of this composition i have a layer called box and this box has two animations one for scale and one for rotation and if i play all of this all that we are seeing is that the box grows and shrinks and rotates by a 180 degrees so that's the final keyframe and right now this one is repeating because we are only previewing the first two seconds if i were to extend all of this and play it again we would only get one animation and then nothing would happen so what i want to achieve in this video is to lube both of these animations and let's start with scale so for this one i just want to give it some code and here's something that we haven't seen yet that you can combine keyframes and code and that is perfectly fine there's no problem with that whatsoever and all we have to do in here is to use a function or to use the more proper name we want to call a function and in order to call a function i first have to type the name which in my case is called loop out and now after this name we have to add some brackets which after effects does automatically and in here we have to pass in some information and these bits of information are called arguments and you can pass in a single or multiple arguments depending on the function and each of the argument has to be separated by a comma and at the minimum loop out is going to need one argument although you could pass in the second one but that's a slightly more advanced thing that we don't have to worry about for now so i want to just pass in a single argument in here and this one has to be a string and if i just type in quotation marks artifacts gives me all the options i have continue cycle offset and ping pong and each of these arguments are going to loop this animation slightly differently the easiest one is cycle and this one well it cycles over the animation so you can see it already let me play the entire thing again now and we can see the first animation and now we just see the scale animation and the reasoning here should be fairly clear that right now we are only looping this property here the scale property but the rotation we are not looping so this one only happens once and then it never happens again and because of that right now we are only repeating the scaling and this one happens in here but what we can do now is to pass in different arguments in here and well this is actually going to be your exercise let me leave this one at cycle and instead i want to work with the rotation so this one is also going to be loop out and now for the argument i want you guys to do an exercise and i want you guys to play around with the pingpong argument and try to implement this yourself and see what it actually does so pause the video now and try this yourself all right welcome back so really all i have to do to insert the argument ping pong i have to pass in the string ping pong in here and you can also just write it yourself and all right let's see what happens now so we get the normal animation and now if you can see it i think it makes sense now so what happens here is that the rotation first goes clockwise then it goes counterclockwise and then it goes clockwise again and well that's what pingpong does it doesn't cycle the animation from start to finish instead it pingpongs it so i'll go from start to finish and on the next cycle it goes backwards so goes from the finish to the start again and after that it starts from the start point again so what we could be doing in here is just to use cycle again and if i use that we are always going to move clockwise because now loopboard is always going to start from the start and finish at the finish point and well that is pretty much it for functions it's a pretty straightforward concept but can be really powerful so i hope that made sense and i will see you in the next section hello and welcome to the second part of this series and in the second part we are going to start getting into more complex examples and this can happen in a variety of ways although the most important concept here is that we have to use quite a lot more functions so in this entire section you are going to learn quite a lot more in terms of functionality that we have started to discover in the last video of the last section where we looked at loop out and in this video i want to focus on functions quite a bit more and for this video we are going to see four different functions that even start to get a bit more mathematical so i hope you are ready for doing some basic calculations it's not going to get too bad don't worry but here's what we are going to do in this video we have a text in the middle of the screen it wiggles left and right it shows the rounded time and it cycles between being visible and invisible and for the entire thing not a single keyframe was written all of this was made with expressions and more specifically we have used functions inside of expressions to make all of this work and there are quite a few different functions that made all of this work but i'm going to explain them what i implemented so let's go straight into after effects and let's have a look at this so here i am in my basic setup i have one layer that is called text and instead of that layer i have the word text and all of this is inside of a composition that is now in a folder in part two that's called function actually let me add a proper space there that's gonna annoy me okay and all the parts we've seen earlier are now in folder called part one so it's a bit easier to find but all right let's get going with this the first thing i want to do is i want to influence the position of this thing so that i want it to wiggle left and right so i want to give the position a script and in here we are going to use one expression you might have seen already because this one is really popular it's called wiggle and all that wiggle does is it well it wiggles something on the screen and for wiggle we will need two arguments and those would be the frequency and the amplitude or in more plane terms how fast we want to wiggle and how much we want to wiggle and let me just add a couple of basic values let's say for frequency i want to go with 1 and with the amplitude i want to go with 200 and let me click outside of it and now let me just play the entire thing so now what we can see is that our text is moving around on our viewport and specifically how much and how fast is set by these two arguments so the one means that we have a speed of 1 for this animation and the 200 means that from the origin point we are moving 200 pixels away at the most and if we change these we will get very different effects so for example the one could become let's say 20 quite an extreme value and let's say for the amplitude a thousand and let's see how that's going to look so now we can see that our text is jumping around very drastically and sometimes even goes outside of the window because the thousand is much larger than the window but i think in my case let's keep it at a more sensible point let's say four and let's say a hundred should be good yeah i think that looks okay cool so now we have a basic functionality but you can play around with this quite a bit more and to really understand how wiggle or really any function works is that you have to understand what is called a return value so let's talk about that every time you do an operation in after effects or really any programming language you create what is called a return value and really all that means is for example if you add one number with another number you are returning a new value which will be the result of this operation and this could be a math operation this could be using the pick web or this could be using a function all that they really do is to return a new value and this is something we have seen earlier for example when we use the pick web when we used index when we use time really all that's happening is that we are looking for value that is being returned by any of these operations and wiggle is no different and what wiggle returns is an array with two numbers by how much we want to go in the x and the y direction and this value we could store in a variable and then use in only one axis for example and let's actually do that so here i'm back in after effects and now what i want to do is to store what's being returned by wiggle in my variable let's call it my underscore wiggle although that probably isn't the greatest name but okay doesn't really matter so after that line i put a semicolon and now if i clicked outside we would get an error message because after effects doesn't have a value to set so effectively what we have done right now is that we have created a function that returns an array and this array is stored in the my wiggle variable but we haven't set any value for this property yet so in the easiest sense what we can do is just use my wiggle and now this would have the exact same outcome no change here however what we can do now let me get rid of it we can for example use indexing so my wiggle and i only want let's say the x1 so the index 0 would be x the index y would be 1. and of course for position we would need two values so this one value wouldn't do but instead what we can do is to create a new array and this array is composed out of my wiggle zero and my wiggle one the more often i say the worse it sounds in my head i'm really sorry okay um cool so now we still have the exact same outcome except now we have much more control over it so we put the wiggle amount inside of this variable and then we used indexing to specifically pick the first and the second value now of course what we can do we can just invert the entire thing and well we still get the result but now the result would be slightly different but that's not the point of what i'm trying to achieve because instead what we can do now is remove one of these values and instead just put in a generic value for example for the y i could just put in a static value like 450 which is the middle of the screen and if i have that now we are only going to wiggle in one direction and with that our text is only going to move left and right and this really is the thing you have to understand here that we are using a function to create a value and really that's all that's happening here that we use a function to create a basic value and then we can work with that or we can straight set it to the value of the property both would be okay but to really understand how functions work you have to understand the return value so if the last part didn't really make sense i would really recommend to go over it but well let's do another example i think that's going to illustrate it as well okay but i can leave this one as it is and we are good to go so next let me work on the text itself or the source text and what i want to do in here is that we are displaying the time that has passed since the start so again we need our time keyword and now this is kind of working but you see the problem already that we have a crazy amount of decimals right after the number so this is no good so i want to round whatever is being returned from time and for that we need a function called round and as an argument we have to pass time into it so round brackets time however this wouldn't work yet so let me click outside of it we get an error and after effects goes back to the default value so not great and the problem here is that round is a function connected to a mav object so the functions we have seen so far are freestanding they can just use them by themselves however in after effects you have some larger objects that have functions themselves and round would be one of them and it's part of the math object and really all that means is that if you want to call round you have to first write math.round so math is to object and then you use the dot to call the specific function of it and then you can use it like any other function and now if i click outside of it now this is working properly and now i can play all of this and with that we get a wiggling time indicator that only wiggles in the horizontal axis but this is working pretty well and here again you do have to understand the return value that we start in this part here where time returns the time that we are currently on so right now a tiny bit over 6 seconds as you can see here and then this time is passed into the function math.round and the method round just rounds it and then returns a new value and this value is then being captured by the text property and this one just sets the value so this is what we can see in the end with that we have the second part covered now for the final one i want to work on the opacity and this one is going to get slightly more fancy actually so let me give some code and here's what i want to do i want this text to cycle between being visible and invisible and i want to achieve all of that without using keywords and this is the part where we have to talk about math a little bit more really not that much it's very basic functions but the math part we need is called a sine wave and the sine wave in the most basic sense is a wave that alternates between 1 and 1 and then we get all the values in between and well this is something we can use let's actually implement it so for my opacity property i want to create math.syn short for sine wave and into this we have to pass one argument on what point we want to pick from this curve and in my case this would just be time so if you paid attention in high school then time would be the point on the x axis and the sine curve would give you all the y values and really all that means is that we have a curve and then we always pick one point from this and we want to get one point at the next point and the point afterwards and for that we can just use time and let's see what's happening here right now we get a zero but if i move a tiny bit then we can see a one and if i move a little bit more we get a one again and the reason here is that opacity stops at zero so we can never go below zero but if we could go below zero then this one would switch between one and negative one and now what we can do with this is multiply it by one hundred and now we can see this a little bit better so let me play the entire thing now and we can see it becoming visible then invisible for quite some time and now it's becoming visible again cool so this one is working but here's the problem now that we have very large gaps where our number remains invisible and that is because that we have a ton of negative parts in our function and for that we can use another function that is called the absolute number and all that an absolute number does is it takes a negative value and turns it positive and that's really all it does it's a quite simple function and well that one we can use in code and that way any curve that is below zero we can turn it to a positive curve and that way we wouldn't get large gaps between our curves and well let's implement this so for my math.sine function i want to put all of this into another function that is called math.abs short for the absolute value and in here as an argument we have to pass in the entire thing and now let's try this so it's still working that's a good start and if i play this now we get visible invisible and now we go straight back to being visible again and all right with that we are good to go for this part and again let me talk about what we are doing in here and i want to talk about the return values in particular we start in the innermost part here with time we just get the time we being on right now once we have that we use the math.sine function and this one takes the time we have passed into it and returns the point on the curve that we are on which could be a value between 1 and minus one and next up we are multiplying this entire value by a hundred so that one becomes a hundred and negative one becomes negative hundred and if we have a value like negative point one we get negative ten and finally we turn all of these numbers no matter what they are into a positive value so if we get negative 100 this becomes positive 100. and then all of this is being captured by the opacity property and we are good to go so with that we have our cycling animation and all right with that let's do an exercise to see if you can follow along that i want you guys to play around with the rotation property and what i want you guys to do is to make it rotate between negative 90 and positive 90. so pause the video now and try to figure this out yourself let me just focus on rotation and i want to give this an expression and now in here i want this to be between negative 90 and positive 9. so i first have to start by creating our basic sine curve so math.sin and time and this right now will give us the values between negative one and positive one and you can actually see it really well that we always switch between positive one and negative one and we get all the values in between so this is very well working cool and well really all that we have to do now is to multiply this by 90. and now if i play it we can see it's moving up and down and stops at positive or negative 9. and if i scrub along the timeline you can see it even better so we start at 0 then we go positive all the way to 90 and then we go all the way down to negative 90 there and then we just keep on repeating this forever and now what we could also do is to put all of this into an absolute function and then we would only get positive values so now we still start at 90 but now we go to 90 and downwards all the way to zero i hope i can get it i guess we get the point but then we go all the way back up to 90. so we never go into negatives and with that we have created something slightly more sophisticated granted it's still fairly random but if you get the principles from this video you can make really extended animations that will run forever so you don't have to worry about keyframes it just keeps on running and of course you can also combine this with keyframes which would also be very powerful but all right i think it's going to be good for this video so i will see you next month hello there in this video we are going to still work with functions but in the last few videos i think we started to create quite a bit of random functionality so in this video we are going to look at how to create functions with more deliberate outcomes and specifically what we are going to learn are four functions that basically do the same thing with some slight differences and those four functions are called linear ease ease in and ease out and all that they are doing is that they're interpolating from one point to another at a given speed that's all they're doing the only difference is that they're doing it in different ways and let me show this in curves add linear moves from one point to the other in a linear way whereas ease starts and ends a bit slower but the middle part is really fast so this one tends to look a bit nicer and if used after effects before this one should look fairly familiar and then we can use this function to animate basically any property with a great amount of control and here's what we are going to make we have a cube that grows from 0 to 100 and also has the opacity going from 0 to 100 all done without writing a single line of code and what we're also going to learn in the process of this tutorial is that we are going to give it a keyframe however this keyframe only controls when the animation is starting it doesn't do anything besides that let's actually jump into after effects and let's have a look at this so here we have our new composition it is called automatic animations and inside of that we have one layer called box and well it's just a box it doesn't do anything right now there are no keyframes or any scripts attached to this right now but i want to give it one and let's start with the opacity so if the layer selected i click on t and then i click on the stopwatch and now we can give it some code and now we have to pick one of the four functions that i talked about earlier it doesn't really matter which one you pick they all work in the same way they just have slightly different outcomes so i'm just gonna go with linear that is well the easiest one i suppose and this one at the minimum is going to need three arguments although it could accept more but the three arguments we absolutely need are the speed of the animation the start value and the end value and for start and end it's quite simple i want to go from zero opacity to a hundred percent opacity so this one is very straightforward but now we need a speed variable and let me explain what we need in here for this number we need a value that goes from zero to one and when we're at zero we have the value zero once we add one we get the value a hundred and then we get all the values in between when we're in between them and this argument would also be used to animate this property that we just have a number growing slightly over time and we use that to interpolate between one number and the other and the easiest thing we can do in here is to just use our time and let me actually click outside of it so right now let me zoom in a tiny bit and right now our time is zero so this time would be zero inside of this function now if we were to go all the way to 1 this value of time here would be 1 and as a consequence we would get 100 opacity but now if we went to 15 frames so right in the middle of 0 and 1 this time would become 0.5 and as a consequence we'll go straight to the middle of 0 and 100. and well this we do for every single value so the further we go down in this the higher our number becomes and of course we can also change that so let me stick again to 15 to 15 frames and now if i change the 100 to 80 now this is going to be 40 and 40 is the exact middle point between 0 and 80. and well that's pretty much it we just interpolate between one value and the other we still end at 1 because then time becomes 1 and then we reach the end point but let me keep this at 100 and all right this is working quite well and now you could replace this actually let me show it first so you know what's going on so now if i just play it we get a linear animation looks well straightforward but not much is happening here yes if i zoom out a tiny bit we can okay now let's play it again so we get a linear animation if we change this linear to ease this would look ever so slightly different if we played now if you have very keen eyes you can see that this is working slightly different we could also use ease in and this would still work and of course you could also use ease out and there you go all of these work with the same arguments they just have slightly different curves how they move between this value and this value nothing else is really happening here but now the problem is that our animation is always starting right at the beginning of our timeline so we always start at zero and we finish at one so well it's not great it's a start i suppose so how could we start this thing later and well the easiest thing we could do is just subtract a number when you want to start the animation so let me reduce five from this and now if i go down only when we reach this point here number five then we are starting the animation and really what's happening here is that time just increases but then every time we use time we subtract five from that number so if we're at second four we have negative one but this only looks for a value between zero and one so if we have negative one it's just going to be ignored and we get zero in here but once we are reaching five then time gets greater than five and we get a positive value and then we look for all the values between 0 and 1. and once we get greater than 1 all the numbers are being ignored again so this would be one way to influence this although it's also not great because you ideally want to move around the keyframe to start this animation you don't just want to well type in numbers so instead what i want to do let me place a keyframe at position 5 that should be good and now i only want to start the animation when we're on this keyframe and this we can also do fairly easily but this has to be a new variable and this variable i just called t short for time but we can't use the time keyword and then this one i want to use for my ease out function and this is going to be kind of similar compared to what i've done before so earlier i did time minus 5 and this started the animation at 5 because only then we get a number greater than 0 but now instead of using a generic number i want to get the time of this keyframe and for that we also have a function it is called nearest key short for keyframe and in here we have to pass in one argument in terms of what dimension we want to look for a key which in our case is time so we just want to find the nearest key in our timeline and well right now we only have a single keyframe so this one should be fairly straightforward so with this we get this keyframe or whatever keyframe is closest to this blue line and then for this one we can add dot and time and this will give us the exact time that this keyframe is on and with that i can write it semicolon and now this animation is only going to start on this keyframe and if i move it around let's say to second two now the animation starts at position two or second two and this works really flexibly and this sort of system is kind of similar compared to math.round for example and we first create an object and then we use dot to find one attribute of this object and what we can also do if we don't want to use a keyframe instead let me add a marker so i only want to start this animation when i am on this marker now this works in a very similar way that in after effects these markers are treated kinda like a keyframe the only difference that you have to look for is that now we need marker.nearestkey.time and now if i click outside of it and now once we pass this marker this animation is starting and if i move it around we get a different part of the animation so this is still working and now the keyframe is being ignored so that way you can start your animation basically whenever you want and alright with that let's do an exercise and i want you guys to play around with the position property and this one is supposed to go from the starting position all the way to the right side of the screen and of course all of this should happen by using a function which one that is is entirely up to you so pause the video now and try this yourself all right welcome back let's try to do it together now so here i am back in my animation and i want to look at position and i want to give this position some code and let's say i want to go with ease although it doesn't really matter and for this one i just want to go with time just the easiest one and now i want a start and an end value and here we have a tiny problem that so far we only ever looked at individual values so for opacity we have one value that works for the property but for position we need an array with two values so this is a slight difference but fortunately all of these functions can deal with that very easily so all we have to do is type in an array with two values let's say 960 and 540 and those are the starting default values and now i think i said move all the way to the right so let's say i want to go for 1800 and still keep at 540. and now let's try this up and i have to move this marker all the way to the beginning so we can actually see what's happening so now let's try and we can see our block is moving from the middle all the way to the right and with that we have a nice and simple animation so i hope that made sense and i will see you in the next video in this video we are going to be talking more about keyframes or more specifically how to influence keyframes by using expressions and here's what we are going to make we have a text growing and shrinking and this is done with keyframes and what i have done with an expression is to use the keyframes to either write the text i am growing or i am shrinking so this way we have combined keyframes and expressions which is a really powerful concept and we have already seen one function to get the keyframes it was called nearest key and all we had to do is to pass in the time in there and then we got the nearest key it's quite straightforward but there are quite a few more ways to get the keys or to get specific information from the keys and well let's actually have a look at this straight in after effects so here i have my new composition it's called keyframes and code and in there i have one text layer that just says text and it has three key frames that just animate the scale it's well really not much and besides that nothing is happening in here and what i want to do let me open this thing properly i want to give some expression to my source text property while also keeping my scale property open because this is where i am going to get my information from all right let me get rid of this and now we have to solve a couple of problems first the first problem is that right now we are in the source text property but we want to get the scale property keyframes so we have to get information in one property from another property and this is information i want to store in a variable let's call it my key the name here really doesn't matter though and now i could again use the pick whip and just select scale and then we would be good to go we could also type the entire thing and by now i think you should understand how this comes together so let me actually type it when you look at any layer you have different parts right now we have text and transform so in my expression i could just write transform or text and in my case i want transform then i have to use a dot to find the parts of it which in this case would be anchor point position scale rotation and opacity and i want scale and this would get me the scale property and specifically inside of the scale property i want to find my key frames and what we have seen so far is nearest key with time and this would be one proper line so now let me use my key and set this as the property and now if i click out of it and run off this we get 0 0 first because this is this keyframe then we get 100 100 that is now the nearest keyframe and if i continue a bit further we go back to 0 and 0 which is this keyframe so that way we would just get the key itself now what we can also do is to give this one another dot because this key also has a couple of attributes one would be value although we can't really see the difference because this is the default one we are getting so if we just write this expression here we are always getting the value but we could specify this to say value more specifically although in this case it doesn't make much of a difference but now what we can also do is to use time so we don't want to get the time in general instead we only want to get the time of this particular keyframe for example and now if i move this around this number is changing and another thing that we could be doing is to use index and if you use index this would be index one this would be index two and this would be index three so if i gonna be difficult to see there if i go outside of it now i can see one and if i go to the end dc3 because this is always the nearest key so just with this function you can always get the nearest key but well this isn't exactly precise because sometimes you want to get an exact key with an index for example and for that we can just use key and in here we have to pass an index for example if i pass in 1 we would get this index here and that's exactly what i see i get 0 and 0 the value of this key here and if i pass in a 2 we should be seeing the value of this which is 100 and 100 and if i do that that's exactly what we see and here again we can still access the attributes of this key for example we could look at time and now we would get 1.5 exactly the time of this keyframe and with that information we can do so many things for example and this is the example i've shown you earlier we can use if time is smaller than my key and let's just make this a bit clearer that my key is only going to have the key and when i compare time i want to compare time with my key and time so all that we are checking right now is if our current time is smaller than the time of this key so if we are somewhere here and if that is the case i just want to print i am rowing and now if we get up to this keyframe our text says i am growing now if we get beyond that nothing's happening and we would get an error or we would get nothing but this we can fix very easily by just including an else statement and in here we can just pass in another string and this could be i am shrinking and now we would see both and now if i play the entire thing we can see i am growing and i am shrinking exactly when we are growing or shrinking so this is working pretty well cool and with that we have covered how to use expressions to influence keyframes which is super useful so let's do an exercise now and what i want you guys to do is to rotate this text for the first second of the animation to 90 degrees or really any value you like and while the text is rotating i want it to be red and afterwards it should be black so pause the video now and try this yourself all right welcome back so at one second i am going to set a rotation keyframe that is going to get the value of 90. and then at the beginning of the timeline i'm going to set this to zero so that when we are moving we get to 90. and let me give a bit of easing to this so now this looks well a little bit better and actually just to make this look nice i suppose let me time reverse the keyframes so now this is yeah this looks a bit better all right so this is working now what i want to do while we are in this part here i want the text to be red and afterwards i want the text to be black and to achieve that we have to go to animate build color and there rgb and now we have a red text but obviously i am not going to use this property at all instead i want to give it some code and look at the rotation so i click on stopwatch and now i have some code that i'm going to get rid of and first of all i'm going to create a new variable that i'm going to call rotation e and this i'm going to use with the pick whip and just click rotation so now i have transform and rotation so the rotation property and from that i want a key and specifically i want the key with the index two so this one here this one would be number one and this one is number two and now again we can just use an if statement that if time is smaller than rotation e dot time if that is the case i just want to have a red color and let's make a really simple one 255 0 0 and 255 all divided by 255 the kind of color that we have seen earlier and now besides that we can use an else statement that if that is not the case i just want the color to be a black color and let's just go with a simple one 0 0 and 0 and 255 of that divided by 255 and now if i move around this is working really well so let me play the entire thing again now we get a different color for a different part of the animation so well that is basically it so i hope that was useful and i will see you in the next video hello there in this video we are going to create a basic menu and here's how this is going to look like that we have a couple of elements coming from the right into the screen with a slight delay for each element and all of this happens automatically without adding a single keyframe and even more importantly if you add other elements then they are going to be added towards this animation automatically so you don't have to do anything you just have to add more layers and they will be animated automatically and this animation is mostly going to rely on the concepts we have learned in the last few videos most importantly index and the ease function or any of the interpolation functions but we are going to learn one more function it's called value at time but we'll get to that when we have to deal with it here i have my basic composition after effects it's called slide list and right now inside of this list we have one text layer that just says menu nothing else is happening right now and just to get this started i want to animate the position of this layer and let me separate the x and the y position so we can work with this a little bit easier and the x position is what i want to animate so this one gets a script and let me get rid of all the stuff in here and to get this one started i want to create two variables the first one is called the target position so this is where i want this main to go once the animation is finished and let's set it to 1650. it's a fairly random value just play around with what looks good and then we also need another variable with the origin position and this one has to be a value slightly outside of the screen so let me go with 2100 and with that we have our start and end value so now all we have to do is let's say i want to use the ease function i want to use time i want to use the origin position and then i want to use the target position so we want to interpolate from this point to that point and well let's try this now so now our text layer is outside of the screen and if i move my timeline let me zoom in a bit a bit more okay now i can just move the menu inside of here so this one seems to work pretty well now for the next part we have to look at the y position this one is also important that i want to use the index to influence the y position so the position from the top and well for that all i really need is the index and let's say i want to multiply it let's say by 100 pixels so now we go slightly further to the top and well i think this looks alright at least for now but we are going to play with this later on as well but with that we have our basic position so what i can do now is just copy this thing and all of these layers would work in exactly the same way so if i play this now we already get a animation that moves a couple of layers inside of the screen but well this doesn't look good because i want that to be a delay between each of these elements and this is going to get us to a new kind of function and this one is called value at time and all that this function does is that it looks at the value of a certain property however we can influence at what time we want to look at this value so for example we could look at a value from a second ago or how a value is going to be in a second which is really useful to offset simple animations and really all i'm going to do is to create a second layer and this one is not going to animate its x position itself instead it will always look at the menu layer and look at the layers x position from a few milliseconds ago and that way we have an offset and if we combine this with the index we get a very coordinated animation so let's actually implement this so i want to copy my layer and let's call this one just the item and this one is supposed to be after the menu so the menu has to be the layer with the index 1 and then we get all the items connected to it and for this one let me open the x position so i want to get rid of all of this because we are not going to need it anymore and what i want to do instead let me open my menu exposition and let me return to coding here and i want to start by creating a new variable that i'm going to call the menu position and let's add an x just to be a bit more clear and this one is just supposed to be the x value of our menu or the x position so i use the pick whip to pick this element so now if i just set menu position x as my value for this property they would always be in the same position so no change so far except that we connected this one to this one so not particularly helpful yet but what we can do instead now is to add a dot and then add value at time and this again is a function connected to an object and this is kind of similar compared to what we've seen with math.round where math was the object and this object had a function called round and here we have a layer and each layer also has specific functions connected to it and one function would be value at time and we could just pass in time itself in here and we would still get the exact same outcome what we could also do is just to set the value at time of one and now this menu would always have or let me actually rename it i think it's going to be a bit clearer let's call it item so this item is always going to have the exposition of this menu at second one which right now would be static so not particularly helpful but instead what we can do is time minus 0.1 so we look for the value of this menu from 0.1 seconds ago and now if i play this we get a slight offset which is working really well looks really nice and now what i could be doing is to duplicate this thing multiple times and they would all be offset except by the same amount so this is still not great but here again what i can do is to multiply this value by index and now what we get so this value still works in exactly the same way but if i copy it multiple times now they're all going to be animated in the same way or while they all have a tiny offset let me end the preview earlier so this looks really good and of course you could rename all of these elements to whatever you like and if you want to add another one this was just copying a layer and then you have the exact same outcome so this is really flexible and powerful and alright with that let's do an exercise that i want you guys to animate all of these positions that they only become fully visible once they have reached their final point and of course they should still all be offset so pause the video now and try to implement this yourself here i'm back in my composition and i get rid of all the item layers so we can just duplicate this one and apply the same code to all of them and what i want to do is to look at the opacity and the one important value i have to figure out to make all of this work is that i have to know when is this animation finished and well we kind of have that already because we just want to animate this property here that this is effectively when our animation is supposed to finish that these three values here combined is going to give us the finishing point of our animation so all i have to do is copy it and now in our transform property let's actually use ease out and in there again i need a speed a start point and an endpoint and the start point is going to be 0 and the endpoint is going to be 100 and now for the speed all i would have to do is copy in this value and now if i click out of this box this is working pretty well and if i copy all of this and now let me try again by extending this a bit as well and well this is working pretty well so it's a very subtle effect but it's working quite well and here again the one thing you really have to understand about code is that we are just looking for different values so for example this value at time is supposed to be our end animation point and this we can just reuse multiple times that we just want to look at the time minus small value and then the index defines by how much the offset is and this then we can copy for every one of these values and with that we have a layered animation that works just by itself we don't need any keyframes and we can just add more values towards it and create a more sophisticated animation so i hope all of that made sense and i will see you in the next video hello and welcome back in this video we are going to learn a couple new elements that allow us to work more with time and what we're going to create is this that we have a layer and the start and the end point of the layer create an animation so that once the layer is starting we start an animation and before the layer is ending we have another animation and this system is super powerful i use it myself actually all the time so all the text elements and the overlays you have seen so far they have been made in essentially the same system and this sort of setup makes it really easy to drag a layer into a composition and just cut it to the right size that you want and then the animations are covered by the script so you don't have to worry about it at all and this really helps me to create these videos efficiently so let's have a look how we can make this sort of thing so here we have our after effects composition it's called better automatic animation i couldn't think of a better name and in there we have one text layer that says text it doesn't do anything else and now i want to animate this by just moving this layer and changing the start point or the endpoint so let me add an end point to this so i want this layer to start at this point here and then fade out once we reach the end and we have most of the tools to make all of this work but there are two keywords that we haven't learned yet that are super useful they are called in point and out point and basically what they're doing is that they're giving us the time of when the layer starts and when the layer ends and to demonstrate that let me open the text property so the source text and let's give it some code and really all i want to do is i just want to write in point and now if i click outside of it we get 6.8 and if you look very closely this is this point here so this starts at 6.8 now if i move it earlier you can see that this time changes if i move it all the way to zero we get zero so this way we can get the endpoint of this layer and connected to that we have out point and this one is giving us the end of the layer so right now it's at 16 and we could go lower or higher and all of this would work really well so with that we have all we need to animate this by just using the in point and the out point and i don't want to animate the text so i'm just going to ignore that part instead i want to animate the opacity so let's give this some code and in here i first want to create two new variables that i'm going to call start and this one is just going to be the endpoint then i want to sum my colon and then i want var end and and is going to be the out point and this is just to make it easier to work with both of these values and all right now we have the end and the start point now we have to think about how to animate this and for that we are also going to need our trusted ease function which is super useful and what we have seen so far was always time then 0 and 100. and well this one would give us the starting opacity so we have an animation right at the start but this wouldn't work if our animation starts somewhere here so this by itself is no good so we would have to make a slight change to this to make this work and we can do that all i want is to get my time and subtract my start from that and now what i get is only when this is starting we get a fade in animation no out animation yet but that comes in a bit but this thing by itself is working really well and i can move this around and now every time we drop the layer and set the start value we get a different start value so this is well it's working really well cool now what i can also do let's say alternatively i only want to animate the animation at the end so i want the opacity going from 100 here to 0 here and for that i would have to get rid of my start and instead use end although by itself right now this wouldn't work for the simple reason that right now exactly on this point here when we reach the end of it then this animation is going to start so now if i go further here now i can see it in the opacity indicator only then is our opacity increasing so only after the end of the layer so this one doesn't really help but we can fix that very easily all we have to do is to add plus one and now this is working beautifully except well that is going the wrong way but this we can also fix quite easily all we have to do is to set the start value to 100 and the end value to zero and now this is working really well but now we have lost a starting point though but first let's talk about what's going on here and let me set it right to the starting point here okay so right now our time is about eight seconds a bit before that and our endpoint is a bit beyond 8 seconds so let's say it's about 9 seconds so this one is 8 seconds this one is 9 seconds and as a consequence this entire thing would be negative 1 and because that's below 0 this animation is not going to start and it would only start once we have reached the end point so when time and end are equal to each other which of course doesn't help us but really all we have to do to overcome that is to add one towards the entire thing and all that's happening as a consequence is that we are offsetting the entire animation to happen one second earlier and since the animation itself is one second long this works really well together so with that we have a basic start but now the problem is that we only have one part of the animation so we have the text disappearing but we don't have it starting and unfortunately what we cannot do is to have two e's or any of these animations at the same time so let me recreate the one we had earlier so time might start from 0 to 100 and now we don't get an error message but well this animation is only running once so the outro is still working the intro is not so this one is effectively ignored so let me cut it out because this way it's not going to work instead what we have to use is an if statement that we only want to run let me put it in there i only want to run this line if a certain condition is true and i only want to run all of this if another condition is true so this way we would have more control over how the entire thing is going to work but of course we have to figure out what goes inside of this if statement and let me show you how i approach this i went with time minus start is smaller than one and now if i click outside of it we can see the text animating in and it's also going out and now i can change the start and the end point of this layer and this would still be working so what's happening here well let's plug in some real numbers and see what it does so right now we are on time being two and start is also two so as a consequence this would be smaller than one and as a consequence we would get this animation here and now if time was to get something greater let's say eight then time would be eight minus two for the start it would be much greater than one and as a consequence we would only be playing this animation so with that we have an incredibly flexible animation that works really well and this is exactly the one you've seen all the time whenever i use text i have this script in there to animate the entire thing and then i can just drag around the text and well change the layer size and this thing animates automatically and i don't have to worry about this whatsoever and with that let's do an exercise that besides the text i also have an overlay that you see a color like this one and this one is done in a very similar style so use this code to replicate this sort of animation you don't have to use any keyframes all you need is a few lines of code so pause the video now and try this yourself let me minimize the text and instead what i want to do is to create a circle and really all i'm doing here is to roughly place it in the middle and i can use my alignment tools to place it right in the middle and it doesn't need any fill and i'm just going to give it the color of my character although the color really doesn't matter for this one so there we go now we have an ellipse and we can animate the stroke width and for most of my animations i have this thing somewhere below the screen and now i can change this and we get this sort of effect which i think is looking really good and well let's make the scaling a bit less wide tends to look better okay now it's twice again and yeah now this looks very similar to what i created in my overlays cool and now of course we can animate all of this using code and this happens in stroke and stroke with and in here i can get rid of the default arguments and now again i have to create two variables and now in here you wouldn't even need the variables for the endpoint and the endpoint you could go straight to the f statement and just go with time minus in point is smaller than one and if that is the case i want to use my ease function and this one uses time minus in point and then i want to go from right now our stroke with this 800 and the maximum i can go with let's go with 4 000 so now we can see it when the animation starts this is working pretty well however once the time reaches more than one this thing falls apart because we didn't specify anything for an else statement but that we can do very easily so for the alt statement i can just copy this entire thing and pass it in here and now all i have to do is to reverse these values and then for the time i want time minus out point plus one and out point is starting with a lowercase letter and all right with that we basically have the entire thing so now i click outside of it and we can see the in animation and now for empty layer we can see the animation going backwards and with that you can see the entire thing working pretty well and of course you can combine so let me minimize this you can combine this text with this shape layer so this is what i do all the time that i first have this layer animating in and then right when this becomes visible i have this one coming up as well the problem right now is that they are both the same color so bad not helpful but if i change the color and let me place it in the middle now we should be seeing a really nice animation and this thing you can move around in your code and it works everywhere it's super useful and of course it works the other way around as well so i hope that was useful and i will see you in the next section in this video we're going to create a box around the text and this box is going to resize along with the text if we make any changes which is really useful to create lower thirds because then you don't have to resize stuff all the time it all happens automatically and to make all of this work we have to learn about a new function and this one is called source rect at time and what this one does is that it puts a rectangle around the layer that we have right now and then we can use the width and the height of this layer to well create a box around it and this can also be used for other purposes for example to set the anchor point right in the middle of this property also something we are going to see in this video but let's approach this slowly and let's go straight into after effects and let's have a look at this so here i have my new after effects composition it's called lower third and in there i have one text layer that just says some text nothing else the one important thing for now is that the anchor point of this layer is right in the center of it and this is important we're going to talk about this more in just a bit but okay what i want to do for now is to create a new rectangle so i just double click on rectangle and now we have a new rectangle that covers the entire screen but that doesn't really matter and i want to put this behind the text so we can see the actual text cool and now i already have contents and rectangle open and in there i want to go to rectangle path and then here we have a property called size and this is what the term is the size of this rectangle and this we can change very easily which i don't want to do for now instead i want to give it a script and in here we are going to get the size of this text and use that information to give the size of this rectangle path and to achieve that i am first going to create a variable and i'm going to call this text rect short for text rectangle and in here again i'm going to use my pick whip to get the text layer but now for this i want to add another dot and now i want to add another function and this one is called source rect at time and what this one is going to give us is the rectangle around this text layer at any given time so if we are changing it in the animation this one would still update so it's super useful and this is all i need for now so semicolon and i go to the next line but now i want to create another variable and this is going to be the variable for the width of my shape layer so i'm going to call this w just to keep it short and now what i want to do is to get my text rectangle or text rect and now i have a couple of attributes that i can work with the one that i want to use for now is called with and this is all i need so be careful in terms of what we are doing here we first get the rectangle of the text layer and of this text layer in the next variable we get the width and this we are storing in the w variable and now besides that we also need to get the height which i'm just going to shorten to age just to keep things short and this again is just going to be text direct but this time we need height and with that we have all the information that we need so now to set the property value i can just type in an array with w and h and now if i click outside of it we have the entire rectangle layer shortened to the dimensions of the text itself so this is working really well and even if i change the content of this text this would still update so for example some other text it would still be working although because the position is not updating we will get a problem so let me undo this for now but what we can also do now because right now the box goes right towards the text if i want to have a bit of a distance between them all i have to do is to give this box the stroke and well i just go to the layer property and i can set any color here and well let's just go with um reddish color and now in the stroke properties i can change the scaling of this and i can give it the same color as the inner box so we can't really see it and there we go now we can control how much spacing there is around this box and well that is pretty straightforward so this way we have created a box but the problem now is that if we change the text let me show it again then there would be a disconnect between the text itself and the position of the box behind it so this one is something we do have to address and for that the anchor point is going to become important so right now both the anchor point for the box and the text are in the same position and if we change the text so change the text what we get now is that the anchor point of the text and of the box are still the same but the anchor point of the text is not in the center anymore whereas for the box it is and this change for the anchor point of the text is what causes the problem here and really what i want to do is that the anchor point of the text is always in the center of the text itself and this you can almost do yourself you only need two more keywords to make all of this work and so far for source rect at time we have seen width and height but there are two more properties they are called left and top and well they are giving you the left and the top of the box and with these four bits of information you have all you need to change the anchor point of any property to the center at any point so try to pause the video now and implement this yourself so let me close my shape layer and for now i just want to open the text itself i go to transform and anchor point is what i want to influence and in here i have to write a couple of lines of code on the first line i want to create a new variable that is the box of this text itself so i want to create let's call it self rect and this one is just going to be source rect at time so this will be the first step now i need half of the width of this box and let's call this w again doesn't really matter and what we have seen so far is selfreact dot width spelled properly so this would give us the entire width of this box however now since i only want to go to the middle of it i have to divide this by two so this one will give us exactly half of the width that we need but this by itself would not be enough because this right now would only be a short number that would start in the top left of the screen because we didn't place it on the screen somewhere so instead what we have to do is to add self wrecked again but this time i want to get left so this is the left starting point of this rectangle which is here and really all we're doing here is we're getting the left starting point of this layer and then go half its width so we end up in the middle of it and now this we just have to do again for height and this is essentially the same line except now with height divided by two and then plus selfreact dot top and with that all i have to do is to create a new array with width and height and we should be good to go and there we go this is working really well now we have the anchor point right in the middle no matter what we do so now i could even change the text to something incredibly long and this would still update perfectly well so i could write this is line 1 and this is line 2. and let's give them a bit more line space so this one would also still work that even if we have multiple lines since the anchor point is updating all of this is working perfectly well now the last thing we need is that if we move the text the box wouldn't update along with it so all we have to do to change that is well link the two position properties which is a very simple thing to do with pick web and now i can move around the text and just write some stuff and there we go we have a really flexible box around our text that you can write in whatever you want so i hope that was helpful and i will see you around hello there and welcome back in this video we are going to create our own function it's going to be a really simple function but well you would get the principle and can use that to create more complex ones and what we are going to do is to create a function that can calculate a distance between two different points so what we can do in the end is just call our function pass in one position pass the upper position and we will get back the distance between the two something that can be really useful in quite a few different projects and let's talk about how to create a function in the first place before we do this in code you first have to use the keyword function which tells after effects that you are creating a function then you have to give the name of the function and then you have to use brackets and pass in what is called the parameters and we'll talk about those in just a second for now don't worry about it but once we have that we have to use curly brackets and inside of that we have to write all of our code and there we can do all of our calculations and do what we need to do although at the end of this code we should return a value and this happens with the return keyword that we first write return and then the value we want to return which is going to be the value we are going to create in this function and all of that is going to make much more sense when we get into after effects but first of all the parameters so so far when we call the function we have passed in arguments so each function has a couple of slots that you can pass arguments into and these slots are effectively the parameters and when you work with the function inside of the function you would use the parameters as a standin for the arguments that come in later so if you have a parameter a then you can pass in any argument you want but when you create the function you have to use the parameter a inside of your function and do all of your calculations with that but all right this is getting quite extensive so let's actually implement this alright so here i'm back in after effects and i have one composition that's called custom function and inside of that we have a couple of things we have two circles circle one and circle two that don't do anything right now i can just move them around on the screen and in the middle of the screen we have a text layer that says distance right now but nothing else and there's no code or any keyframe inside of this composition right now but i want to give it one and i only really have to worry about the text and i want to get my source text property and give this an expression and here i want to create a function so i have to start with the function keyword and then i have to give the name of the function and let's call this one get distance and now i need brackets and into these brackets i have to specify the parameters and in my case i'm just going to call them a and b and essentially those are going to be the variables inside of the function that i'm going to work with and now i need curly brackets and into these curly brackets i am going to write all of my code and now inside of this function i want to create a new variable that i'm going to call l for length and length is going to get the length function and this one is already giving us the distance between two points so in here i want to pass in a and b and then on the next line i want to return l and once we have that we should be good to go for the function but if i click outside of it well after effects doesn't really know what to do with this so it just prints the entire thing which isn't particularly helpful so instead i have to give it some information so right now we have created a function but we haven't called it and well to call it we first need two more bits of information and that's the position of both of these circles and let me put them in their own variable so let's call this one c1 for circle one and this one is just going to get the position of each of the circles so for that i use the pick whip for the position of circle one and then i do the same for circle two and i can use the pick move again to get the position and now we have the positions of our two circles and what we have to do now is to actually call our function and this again happens by just writing the name of the function so get distance and now to pass in bits of information so c1 and c2 this is the part that should make more sense now and okay now we click outside of it we get the distance and now i can move the circles around and this number would update and this is working pretty well now obviously you could just use the length of the two circles and this would be an inbuilt function in after effects however what you can do in the function itself is to add another value in here and then round this value so for example we can let me create another variable that i'm going to call rounded result and this is going to be math.round and into this i want to pass in l and then i only want to return the rounded result and now we get is only the rounded result and let me return it back to the center of the screen there we go so now i get a much nicer outcome and i get the exact distance between these two points and this is working pretty well and well let me go through again what is happening here i think that is going to be really helpful so on the first two lines we just get the position of the two circles this one should be fairly straightforward at this point but on the next line we are going to create a function the name of this function is getdistance and getdistance has two parameters a and b so when we pass in arguments they are going to be stored in the a and b variable that is only existing inside of this function and then the code for this function is three lines we first create a new variable called l and this l gets the value of the length between point a and point b the stuff we will pass into it into the parameters on the next line we create another variable that is called rounded result and this one really just rounds the number we created in the last line and on the final line we are returning a result so this rounded result and really all that means is that when we run this line here later on when we call the function it returns a value that we can store or use for the property immediately if you remember wiggle from a couple of videos ago then it's essentially the same principle except now we're setting this straight to the property value except of storing it into another variable and all right what i can do now is to minimize this function and now our code looks quite clean and with that let's do an exercise that i want you guys to add a third parameter to this function and what this first parameter does is it multiplies the value by any number so that we when we call the function could pass in a number let's say two and then the result would be doubled so pause the video now and try to work for the function and see if you can figure this out so here i have my function again and what i want to do is to add a third parameter and let's just call it c doesn't really matter and now all i want to use c4 is to multiply the result by c so this could either happen on this line when we return the value or it could happen somewhere here this would also be fine and now all i have to specify is another value let's say 2 and now we get twice the value from what we have before and if i move the circles very close to each other and i guess it's very hard to see but let me go to straight value yep now we have exactly 300 if i change this to 3 now we are getting 450 if i change this to 10 we get 1 500 and if i only change this to 1 then we get 150 so depending on what we specify in here we get different outcomes because we are multiplied the result with that number and well that is a basic function now obviously this one isn't particularly useful but if you get the principle here this one can be incredibly powerful and especially if you create more complex animations storing all of this in a function is really useful for organizing your code and you could also reuse these functions multiple times but alright i hope all of that made sense and i will see you in the next video hello there and welcome back in this video we are going to create this little animation which if you remember from the last few videos is exactly what i've used to explain a sine curve and well i'm going to recreate the entire thing here now for the tutorial which is actually a fairly simple thing to make although we are going to need a tiny bit of code and more specifically to make all of this work we have to understand how to connect one composition with another composition which is something we haven't done yet but once we have covered that part it's actually a fairly simple thing to achieve so let's have a look at all of this in after effects so here i am in my composition it's called sine wave and right now in there i have a center line that's just a plane line and then i have a point which is a point with a stroke that's really all that's happening in here and let's get started animating this so the first thing i want to do is on point i want to animate the position so with position selected i'm going to separate dimensions and for now i want to animate the y position and this one is going to get the sine curve again and really all i want to do in here is math.sin the one we have already seen with time and i've multiplied this by a hundred but now if i click outside of this we have a problem that while the sine curve switches between a 100 and negative 100 that doesn't really help because this is right at the top of the screen so no good and instead what i want that all of this should be relative to the middle of the screen or even better it should be wherever i originally placed this circle and this we can do it's done with the keyword value so i just type value and then plus and now this point is circling just in the middle of the screen and let me just demonstrate what value does so i cut this part out and value is essentially the value we put into this parameter when we place it initially so i could write in here let's say a hundred and now value is going to be a hundred so this one just replicates the value that we start with essentially and okay let's me oh yeah now i have to put this back to the middle of the screen so 540 and now we are back in the middle of the screen and i think what we can do right now is that the original number for this that i used was i believe 200 and yeah it feels like a better movement but you can change this number as you like it doesn't really matter although you do have to stay consistent with the other numbers you are going to see in a second what that means now we have a point moving up and down so that's a halfway decent start the next thing i want is that there should be a line connecting the dot to the center line and for that let me zoom in and i just want to draw a line so let me get rid of all of this stuff here and i literally just put a point there and a point there that roughly line up and are roughly in the middle of each other there we go and this line i have called connector and it should be behind the point so this one looks nicer and now how can we make sure that when we move this point this line updates as well and this doesn't actually need any code or well it does but it's not coded we write ourselves so instead what i'm going to do if i go to window and i go to create notes from paths if i click on that we get a new window and what i have to do now is i have to connect it to a path so with my connector selected i go to contents shape one and i have to have this path selected and now i can decide do i want points to follow nodes or do i want nodes to follow this path and i want to go with this one and now i have two nodes that control the end of this line so i could move this one around and it would work pretty well cool and the one thing you have to be aware of for this one is that if i opened it a ton of code is making all of this work and there's quite a bit of stuff that is a bit more advanced that we didn't really need for example this bit here is a for loop this is something that we're not going to see in this tutorial at all because it's slightly more advanced we're not that complicated but we don't really need it in most daytoday activities and there's also try and catch and quite a bit of stuff that gets more advanced so quite a bit more advanced stuff but at least the basic syntax you should recognize all right we don't need any of this so i'm just going to tug it away and ignore it and for now let me rename these layers so we know what they are so let's call this one start and this one end and i want to make sure that my end point is equal to the center of this circle and for that literally all i have to do is open the position for both and for the end all i want to do is i separate dimensions again and the y position should be exactly the same as this y position so i can just connect the two with the pick whip and now if i play all of this we get the curve updating and if you look very closely let me enhance it there's a very very very slight tilt of this line right now and you can see it here even better that the exposition here is 959.5 and here 960. so half a pixel of an offset and well we can just get rid of this by parenting the x position so now this point here and i also want to influence this point so for the start point as well they should all be on the same x position so for this one the x position as well should just be this x position and now this looks much cleaner and all right everything else is still working fine and we are getting an up and down movement so that's a good start now i can tuck these two away because we're not going to need them anymore and now we are going to need something else so what we have to figure out is how to create an actual curve around this and you could approach this in a couple of different ways you could for example for this center line give it a zigzag and for the zigzag you could give it smooth corners and then increase the size so this would give you some kind of a curve and there are a couple of other ways to create these curves as well by just using paths but the problem here is lining all of this up with the point itself is a huge pain so i am not going to do that because this is annoying instead here is what i did let me close this one entirely actually i have created a completely new rectangle layer that is completely empty there's nothing on it and let's call this one sine curve and this one is going to get an effect and the effect i want to go for is in generate and there it is all the way at the bottom it's called write on and if i click on that we right now can't see anything but what it does is it well it writes on our screen although we have to give it some kind of position otherwise it's not going to work and really all we have to do is for this brush position it has to move and what point i want to move is this point here so with the position selected i want to get this x and y position so for this sign curve here i go to effects write on and brush position is going to get a script and in here i want my variable to be x and let me scroll down a tiny bit i want this x position and then i can copy the entire line of code and change this to y and y position so now i get the x and the y position and all i have to do is set this to x and y and now you can if you zoom in a tiny bit you can see already that we have a white thing above well um our point that is moving so that's not a bad start and let me increase it so you can better see what's happening here and this effect is a little bit slower because we are drawing quite a bit of stuff but here you can see it much better that this is what's happening right now and if i change the color to the color of the rest of the composition we are getting something that starts to look much better so this is already getting a bit better but now what i want to achieve is that all of these points are moving to the left and for that literally enough to do is for the x add time towards it and just using time is going to be very slow so let's multiply this by 200 and now here's what we get this is starting to come together much nicer and what i can also do is to move the point above all of this then it looks even better and there we go this is already starting to get there but now we have a problem that i want this curve to move continuously to the left but by itself in this curve i couldn't do that because when i use these coordinates i am just drawing this curve i'm not moving all the other points so when i'm drawing all of these points the points themselves stay fixed and i can't work with them anymore unless i put all of them in their own composition so what i'm effectively going to do is to put this layer here in its own composition and then move the entire composition to the left although before that i want to move this circle here further to the left so that we have a bit more on the screen for this curve and since we have made this connector relative to this point we should be able to move the entire thing straight up to the left and not have any change in the rest of our animation and if you didn't use code this sort of thing would become drastically more difficult and let's put it roughly here and now let's try it again and all right this is starting to look better cool so now i want to get this signed curve and create its own composition so with ctrl shift c i create a new composition and i call this one sine graph but now this curve has disappeared and if i go into sine graph and i double click e now we're getting a warning and the reason here is that this point layer doesn't exist anymore but the simple reason that this point layer isn't a different composition that is not a problem because if you read the code you should be able to figure this out yourself actually we have this comp then layer with the name of the layer then transform and then exposition and really all we have to do to change this is instead of this comp we have to change this to comp and then we need quotation marks and now we get the name of all of our compositions and the one i want to go for is free sine wave so i click on enter and now we have the proper composition again so what after effects is going to do now it first looks at this composition and inside of that composition we look for this layer then the transform of that layer and then the x position of the transform of that layer in this composition and we have to do the same thing for the y variable but now we get our curve back this is working and this one is still doing the exact same thing so nice this is working cool and now i can go back to my sine wave composition the original one and i can still see the very same outcome so this is also continuing to work and all we have to do now to finish up this composition is to move this entire thing to the left which we can do very easily and we also know at what speed to move it so let me open its position and i want to just move the x position so i separate the dimension and for the x position this is supposed to be time multiplied by 200 and now this is almost working we are getting there i suppose and here essentially we have the same problem that we had with the y position of the circle that this right now has to be added to the start value it's not the start value itself but for that all we need is value plus time times 100 and now the only problem we have is that we are moving in the wrong direction so this should be minus and now let's try this again and now you can see that we're at the left side of this but not the right side so well there's this minor problem but all we have to overcome this is to duplicate this layer which we can also do very easily and move this layer further to the right and now i really just have to match these two up let me wait until my point is right in the middle or at least roughly and now literally all i did i just connected these two and then played around with this and i think this is matching up pretty well and now i just have to wait until they first meet and it's gonna be my starting preview and then i can go all the way to the second point this can be my end value and now i can just keep on repeating this animation and of course you have to be quite careful in terms of where you set the start and the end point but if you get a couple of good frames you can loop this animation very easily although there is this minor problem that's really annoying me at this point should be a tiny bit higher there we go this should look better now and there we go now all we would have to do is to cut out this part of the animation and then we can loop it and then we would have a perpetually running circle all right with that let's do an exercise and i want you guys to put a tiny label next to this point and give it the value of the sine wave so if we're at the top of the curve it should be one if we are at the bottom it should be minus one and just to practice what we learned in this tutorial this label should be in its own composition so make sure to create another one that is on top of the other stuff we have made so far so pause the video now and try this yourself so here i am back in my composition and i have minimized all of the layers just to keep things clean and what i want to do is to create a new composition and this one let's call it sign text everything else is still fine and in this i just want to put in a piece of text the size doesn't really matter just make sure it's small enough to not overpower the rest of the animation alright now for this property we want to influence the position so this one gets a script and in here i again want to create an x and a y variable so we have the position of this point here this is the one we want to get the problem right now is that for this one well we can't use the pig whip so we have to figure all of this out ourselves but by now i think we're able to do it so let's try to do it by hand i first want to look for composition so i need the keyword comp and in there i have to pass one argument that is the name of the composition i want to target which in my case is sine wave and it's really handy here that after effects gives me all the compositions so now i have the right composition next up i have to target a layer so i type layer and in there again i need a name or a string with the name of the layer i want to go for and again after effects gives me a couple of suggestions and in my case i just want the layer with the name point and of this layer i want to look at trans form and in transform i want to get the x position so we first look at the composition with the name sine wave in that composition we look for the layer with the name point and off the point layer we look for transform and x position and once we have that we can copy the entire thing and change an x to a y so we get the y position and now with that all i need to do is to create an array with the x and the y position and now i can already see my text moving and if i go back to the original composition and place my new composition in there and let's actually make it red so it stays on the same theme so what i have to do now is look closely and there we go i can't see my text this is already starting to work now obviously the text is right on top of it so i want to offset it a little bit further to the left and a little bit up and well all we have to do for that is to influence all of these points so instead of just getting the x position i want to move it slightly to the left let's say by a hundred pixels and then the same for up i want to subtract let's say 50 for this one and now let's see how this works and yeah i think this is already getting quite a bit better not perfect but workable at the very least and all right so with that we are almost done the one thing i want to do now is that this text should be the sine value so this should be 1 at the lowest point and one at the highest point and well this we can achieve very easily so here i'm back in my syntax composition and i want to go to text and source text and in here you might be tempted to try to get the actual position of this point here so that we are just measuring the y position of this point but that would well not be a good idea for the simple reason that this would take a crazy amount of code and would not exactly be necessary and instead what we can do since all of these compositions have the same time indicator we could just set the value of a simple sine curve to the value of this text and then they should have the same value really all i have to do is in the source text property i want math.thin and time and now i get all the decimal points in between and this is almost working except now the plus and the minus are inverted but that's not a problem all we have to do is to multiply this thing by 1 and now we are good to go so this is getting much closer although also not perfect just yet for the simple reason that we have a couple too many decimal points so the simplest thing we can do is put all of this into math.round and let me copy the entire thing and place it in there so now what we get is 1 and 1. so that's getting closer to it although i also want all the values in between so this one well i'm not particularly happy with it but if we just use it by itself this one is getting a little bit better at least slightly so this would be let's call it a start but well we can fix this fairly easily although it is going to look a little bit weird that we are first going to multiply this value by 10 before we are rounding it and then after we have finished rounding it we're going to divide it by 10 again and that way we get one decimal point and i think this is best illustrated by implementing it right away so what i want to do is instead of minus 1 minus 10 and if i click outside of that now we get all the values between 10 and positive 10. so well we just multiplied everything by 10. but now we can do is the entire statement after rounding dividing it by 10 again and now we get 1 and all the decimal points in between and the secret here is that this value gives you all the points between negative one and one but rounding only rounds whole numbers so the values we could possibly get are one minus one and zero but if you multiply the entire thing by ten we can get all the values from 10 to 10. so this is what we effectively end up rounding and then we can just divide out of this by 10 and since those numbers are much cleaner the result is a single decimal point that is looking much nicer so with that you could add a bit more of a background to it but i think by itself you get the principle this is working pretty well and especially if you combine it with the last few videos where you add a lower third rectangle behind it this could look pretty good so i hope all of that made sense and i will see you in the next video hello there in this video we are going to create a flexible arrow that consists of a triangle and a path and the really important point here is that we only have to control the start and end point of the path and the triangle at the end updates automatically along with that which is super powerful if you ever have to put lots of triangles in a certain position with different rotations which can get really annoying to do by hand unfortunately for that though we will have to talk a bit more about math although we don't have to do any math ourselves instead we just have to understand what one specific function does so here i have a new composition it's called flexible arrow and inside there we have a path and we have a triangle and neither of them have any keyframe or code it's a super simple setup right now and what i want to achieve is that i can move this path around and influence the arrow that was a terrible example let's say i can rotate the entire thing and to arrow and the error rotates along with it okay and the first thing we need for that is to be able to control the start and end point of this path and this is something we have seen in the last video i have to go to window again and open create notes from paths and now in my path i have to go to its own path so the name path might not have been great but anyway so with path selected i want to create points from nulls and now i can close this and now i have two nodes that can control my path and this is already making it much easier to control this layer and let me rename them that is going to help a little bit so for the first path i'm going to call this start and the second one is going to be end and there we go this feels much cleaner and now what i want to achieve is that this triangle has the same position as the endpoint of this null path and really all i have to do for that is to open the position property for both of them and well use the pick whip to set one to the other so right now this triangle always has the same position as this end point now i can move this around and we are getting a triangle moving along with it although it does not rotate along with that this is what we are going to cover now that we have to know for example if i put it in a slightly more interesting position let's say here i want to know what is the specific standpoint here and what's the end point here and i do know all of this but i do have to have all of this inside of a single variable so let me open for my triangle irritation this one gets some code and in here i want to get let's start with var position one and this one's going to get the end position so this one i just use the pick whip and get my end position then i want a semicolon and then i want part two and this is going to be let me just copy the entire bit and this one is supposed to be start and it needs to be e2 so now we have two positions that is a pretty good start and now well i want to know the relationship between these two and all i have to do to get that is going to be stored in a new variable let's call it change and really all i want to do is to subtract the end value from the start value so all i have to do is p one minus p two now we have one position that we want to get the angle two and our starting position is always going to be zero and zero so the very origin of our screen and for that i'm going to need a very specific mav function it is called aton 2 and this one needs the x and the y position of this change and the specific maps here are well quite complicated fortunately we don't have to do any of that because after effects takes care of all of it so let's just go straight forward so i want to store all of this in a new variable that i'm going to call let's call it direction and for this one i want math.atan2 and into this i have to pass in the x and the ycoordinates although it has to be first the ycoordinate and then the xcoordinate it's a little bit weird but well you get used to it so this has to be change one so the ycoordinate and then i want change x so the first index and with that we are almost done the one last problem we have is that all of this is in radians but our rotation needs to be in degrees so we have to turn the degrees into radians and fortunately again we don't have to do it ourselves because after effects has a function called radians to degrees and we can pass in our direction in there and now let's try this and we are almost there so now there's just a slight weird behavior and the only problem we have here is that the starting point of this triangle was slightly off and well all we have to do is to rotate this by 90 degrees and now this is working so the only problem we had here was that the starting rotation of this triangle should have been to the right instead of zero then it would have worked from the start but well all we have to do is to add 90 to it and now we get an arrow that is updating perfectly in terms of how the paths aligning with it which is super useful if you just want to point at something and create lots of arrows that you don't want to recreate every time all right so with that covered let's do an exercise and the exercise for this video is going to be slightly different from the other videos so far so let me explain if you have followed along for this video i am pretty sure you're quite confused about this setup so for example if i hadn't explained to you how any of this works how could you have figured it out yourself and this is what this exercise is going to be because to program in literally any language there's one skill you absolutely have to master and that essentially is to look stuff up online pretty much half of any programmer's job is to just use google and figure out problems that's a really common thing and that actually brings us to the exercise so i want you to imagine that this video never happened but you are still trying to figure out the same problem to find the angle between two points and after effects and just try to use google or search engine of your choice to figure out this problem yourself and find a website that explains it to you as well so just try to find something online that you think is going to help you so pause the video now and try this yourself alright so let's try together and here i am already in google and really all i have to do is to look for a certain thing and the best way usually to start is to start with after effects because that's what we are working in and then here i want to explain what i'm trying to find so in my case i want to calculate the angle between two points or something like that if you play around with this you're usually going to find something and in there you can find quite a few websites that are going to help you for example here is one website that seems to be quite on point for this and this is actually literally what we are looking for and this website is very famous it's called stack overflow and this is essentially a website where you can ask your coding questions and usually a very competent person is going to help you so this website is super useful to figure out any kind of coding problem for well literally any language and well here's a person describing a problem in quite some detail and if you scroll down there's one person giving an answer to it and if you look at this code it looks very similar compared to what i have done in the tutorial and well the reason for that is that when i figured out this myself i literally use this website it's super useful so this would be one way to get better at programming in after effects that you try to figure stuff out yourself and if you get stuck you can literally ask for help online and very often you are going to get a really good answer and if you do this often enough you will eventually become more and more independent and solve more and more problems yourself and maybe even answer somebody else's question which i would really recommend you to do but alright i hope that was helpful and i will see you in the next video hello and welcome back in this video we are going to learn how to sample colors and after effects and here's what we are going to do with that we have a couple of rectangles on the screen and they all animate in seemingly arbitrary ways but what is happening here is that all of these animations are driven by another layer and this layer is only black and white and what is effectively happening is that we are looking at every single pixel of this composition and if that pixel happens to be white we are going to make the rectangle in that position visible and give it a scale of 100 however if the pixel happens to be black then the rectangle is going to have a scale of 0 and is going to be invisible and then all the points in between are going to be middle points so for example if we have a perfectly gray color our rectangle in that position is going to have a scale of 50 and an opacity of 50 as well and then when we animate this background image we are going to animate every single rectangle on the screen as well which is a super powerful concept and actually quite easy to achieve because all we need is one new function and that is called sample image and well what this one does it samples an image and returns us a color and that we can use in lots of different ways so let's actually jump into after effects and let's have a look at this and alright here i am in my composition and it's called transition and i also have a background composition now as well this one we are going to look at in a second and inside of my transition composition i have two layers one is called box and one is called test and test i am only going to use to visualize what we are doing we're going to delete it in just a bit but it's really useful to illustrate what we are doing and then in my background this is just two layers let me minimize them that we have one white layer that is all the way in the background and then on top we have a black layer that we can just move around and in here it is really important that you cover the entire background either with black or with a white color and what you cannot do in here let me make them invisible you couldn't just use the default color of the composition so if i go to composition settings there i have set a color and this one is a whitish color and while we can see this one after effects is going to ignore it when it does the sample image so we have to have a layer in there all right back in my transition composition i want to put the background behind all the other layers so now we can see it but it doesn't do all that much yet but this is what we're going to do now and let me first do this on test so i can perfectly illustrate what we are doing so for test i want to give a script to the source text property i'm going to get rid of all the default text in here and now i'm going to give it a couple of variables the first one is just going to be the composition that we want to sample a color from which in our case is going to be this background and let's just call this bg just to save me some writing and in here we could just use the pick whip this would work perfectly fine so this would be the composition we want to look at and what we have to do now is to get the color from it which i'm also going to store in a variable that i'm going to call c and now what we have to do is to use bg and then the function sample image and this one is going to need two arguments number one is the property we want to look at so do we want to look at the opacity or the colors so by what measure do we want to look for pixels and in our case this is transform and position so we want to look for pixels via their position and then we need a second argument and that is the sample size so how large of an area do we want to look at and in my case this should be one by one so we are looking at one individual pixel with that we should be getting a color you're going to see in a second what that does so now all i want to do is set the result of all of this as the property value for this world property so now let me click outside and now we're getting 1 1 and 1. and if i move over to the black side you can see 0 0 and 0. so what we effectively get is the color argument for the background and i could make this even fancier if i added any other color so let me just add something else in here i could so now i have a red square in there and now that one you let me just lock this one this is going to be annoying so now we can move this thing around and whenever i get over the red text we get a really large number and let me actually change the color of the text so we can see what's happening so what we get is the full amount of red and we have just a little bit of green and then if i move it all the way to the side we would okay we can't even see it anymore but there's a tiny bit of green as well but effectively what we're getting here is the color argument and the trick to make all of this influence let me get rid of this red one now the really smart thing that makes all of this work is that we can use all of these numbers to influence any other property so for example if i just took let's say the index zero so only the first one and this one would be one and if i move it very hard to move these things so if i move this here then we can still see it now this would be zero and this is just a number that we could be using to influence the scale or the opacity or really any other property and this is what i talked about earlier that really all we are trying to get is different numbers that we can use for different purposes and in this case we are getting returned an array that has four different numbers for red green blue and the opacity and we can pick any of these values and then we just have a number that we can use like index or time so this is super powerful and makes the entire thing quite easy let me copy the entire thing now i don't need my text anymore and instead i want to open the scale property of this box and give it the same arguments i have done in here although if i click outside now after effects is going to give me an error that the result must have a dimension of 2 not 1. so not a problem let me create a new array and in there i just want my c0 and c0 again and now this would not exactly work well it would kind of work let me move this one up a tiny bit so if you look at the scale property now we are on the white background and if i zoom all the way in we should be able to see it very faintly so there you can see it right now it's one pixel wide and one pixel high because it's on the white background but if i move it over the black one the scale property gets to zero and zero because the first color argument here is a zero but obviously this is well very small but really all we have to do to fix that is to multiply all of this by a hundred and now well we still can't see it because we're over the black background but if i go over the white one there we go now we have one hundred percent so whenever i move this rectangle if we over white we have the full scale if we over black it disappears and this is pretty powerful and now all i have to do is with the background selected i have to make this thing a bit more blurry and then we can work with this a lot so i go to effects and presets and i just want to give it for now a gaussian blur and then i can just make this entire thing real blurry and then you can really see the effect of this so now we have a really blurry background and now if i move this thing it scales along with the background so it disappears over perfect black and over perfect white we have to full scale but for everything in between we are getting different sizes so this is pretty cool and of course what we can also do if i'm back in the background i can animate this thing so let me give it a position property maybe not that far back put it further at the beginning and then let's put it somewhere here now i just want to move this thing to the right and now if i go back to my transition and let me place my rectangle in there and a bit more zoomed in now if i just play this animation this is still working so after effects doesn't really care what is happening in the background or who cares what is the color at this point in time and then it uses that color to create the size of this rectangle and then if i duplicate this rectangle this would also still work so now let me do the entire thing again and we would still get same outcome so super powerful and with that you can create super complex animations for example what i've done in the thing i've showed you earlier let me get rid of this thing entirely actually we don't need it anymore and instead i want to create a rectangle that covers the entire screen and this needs to be black and the effect i have used was called jaws or cc jaws and there we can get if i change to completion we can get a well a jaws kind of pattern i don't really know what it's called and you could even change it to different things i think i used the wave in my one but let's stick with spikes for now and you can also change the direction it really doesn't matter you can play around with this as much as you want but the one part that is really useful is the center so you can move it up and down or you can move it left and right and here all of this is automatic so it never runs out so what we can do for this property i can give it some script and this is going to need an array so x and y and for x i just want to go with time multiplied by a hundred and for y i can just go with 540. and now if i play this animation this animation this thing is going to run forever it is never going to stop and now what i can do is to just give it a blur and i went with fastbox blur this one is a nice and reliable blur and repeat edge pixels so let me make this nice and blurry and with the height property you can also make this a bit more extreme yes that looks good cool so now if i play this thing again we get a very strange looking black and white pattern but if i go back to my transition property now i play this we get a very strange animation and of course you can just hide the background as well all of this is still going to work so you don't have to have this layer visible and with that part covered all we have to do now is to multiply all of these cubes and while we're doing this let me disable this effect so we can place them properly and let me open proportional grid probably going to make it easier to place them so to place them you could probably write a really smart function as well but in my case i well i'm just going to drag and drop them and here's something that you do want to consider especially if you have a very slow computer make sure that you don't over do this this is quite processor intensive in my case i have a fairly powerful computer but if i have 40 or so rectangles on the screen this is still getting very slow so don't add too many rectangles at once slowly build this up and test how this is working but alright in my case i don't really have to worry about that so i just drag and drop them down and then once we have that step covered let me reenable all of them and now you can already see this is working and i can just copy them again and again and again and a few more times and then we basically got this and now if i play all of this we can see a very strange animation that would probably take forever to make by hand and well what we can also do now is every time we change this we also change the animation itself so for example what i can do i can increase the width and i could change this to maybe look that looks weird let's say waves and let's make this a bit more blurry there we go this i think looks better and now if i play all of this again we get it well a different kind of weird animation but i think you can see the potential here that well we can add a ton of different things in there and really just animate them how we see fit and this way we could animate so many different properties and this is also going to be the exercise for you that i want you guys to add an opacity property to one of these layers and then duplicate that so basically what you have to do is to get rid of most of the layers add some code for the opacity and then copy all of them again and specifically what i want to do is if our rectangle is over white spot it should have 100 transparency if it is over a black spot it should be invisible so pause the video now and try this yourself so let me get rid of all of this again and now we only have a single rectangle this is going to make it easier to write all the code and now with shift and t i open the opacity property and this one is going to get some code and in here we could approach this in a couple of different ways number one is that we could just copy this entire line here and do the same operation but this would not be an ideal way to approach it for the simple reason that this would be really processor intensive that we look at one pixel another composition twice on one layer and then if we multiply this layer let's say 20 times then we are going to do this operation a whole lot of time which is going to make the entire thing really slow and fortunately we don't have to do this because we already know the color that we need we have this information and really all we're doing is that we are applying this to the scale right now so well all we have to do is to set this to transform its scale so the opacity is determined by the scale and from that i just want to have the first index so now we only get 70 because our scale is 16.9 and if i go a bit higher let's say here now we have a scale of 79 and that makes our scale 79 as well and that way we didn't have to sample the image again instead we just use scale which is so much faster to do and also easy i suppose and of course if you want to go crazy you could also use rotation for example and let's just do the same thing here and let's just see what happens so scale and zero and now we also get a rotation in there and okay now let me get a position where it's a bit larger and now i can minimize this and copy it a couple of times and of course you can also combine all of this with lots of other parts like time or index or in point really whatever you feel like it's incredibly powerful and this is what i'm really trying to get you at that if you're a bit creative and combine different parts of this you can create so many really interesting animations close enough okay and final one and okay this is going to look very strange let's play it now and there we go we have a really strange looking animation and if i changed all of this let me open it a bit less now we will get this kind of animation and i really want you to think about if you had to set up all of this by hand it would really take a crazy amount of time so this way we can do all of this much easier and have a much more interesting effect but alright i hope that made sense and i will see you in the next video