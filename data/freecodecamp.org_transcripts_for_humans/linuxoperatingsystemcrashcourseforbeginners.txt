With timestamps:

00:00 - learn the basics of using linux josh
00:02 - teaches this course for absolute
00:04 - beginners and he will help you get a
00:06 - full understanding of how the linux
00:08 - operating system works hello everyone my
00:10 - name is josh from keeping techie and
00:12 - welcome to my introduction to linux
00:15 - course the purpose of this course is to
00:17 - help you get a full overview of what the
00:19 - linux operating system is and how it is
00:22 - used in everyday life
00:24 - i noticed there was a need for a basic
00:27 - course for people interested in getting
00:29 - into the it feel
00:31 - now linux is used in pretty much all
00:34 - aspects of the field for example linux
00:36 - is used in the cloud
00:39 - it's also used in the cyber security
00:41 - field
00:42 - especially when you're looking at pin
00:44 - testing
00:45 - so i created this course so you can at
00:47 - least get the basics of using the linux
00:50 - operating system now a quick disclaimer
00:54 - if you're looking for a more advanced
00:56 - course
00:57 - for let's say a linux certification then
01:00 - this may have some information that can
01:02 - help you but it will not cover all
01:06 - the topics needed in order to pass a
01:09 - certification exam
01:11 - and just to give you an overview i will
01:13 - only cover basic topics such as
01:16 - installation basic configuration
01:18 - terminal usage understanding the file
01:21 - system
01:22 - as well as software management
01:25 - so please remember this course is
01:27 - designed for people that are very new to
01:30 - the linux operating system i have a
01:32 - course that hasn't been fully completed
01:34 - that will be released in the near future
01:37 - which will cover all modules that are
01:40 - needed for the comptia linux plus exam
01:43 - so once that's uploaded you can easily
01:46 - roll from this course into the next
01:49 - course in order to take the comptia
01:51 - linux plus exam now let's start off by
01:54 - giving you a little bit about myself
01:56 - i have been an i.t professional since
02:00 - 2007 i've worked in multiple positions
02:04 - some of which a network administrator
02:07 - systems administrator and i'm currently
02:09 - working as a database administrator
02:12 - and i've also been a linux user since
02:15 - the year of 2008
02:18 - so i have a lot of knowledge when it
02:19 - comes to working with the linux
02:21 - operating system now what is linux
02:24 - when most people ask this question the
02:26 - response that's given
02:29 - is simply debian ubuntu red hat or maybe
02:33 - arch linux
02:34 - but these are what is called linux
02:37 - distributions and linux is basically the
02:40 - kernel of those linux distributions
02:43 - combined with other software such as gnu
02:46 - software and other pre-installed
02:49 - software
02:50 - now just to break down everything that's
02:53 - combined to create a distribution we
02:56 - have to look at some of the creators of
02:59 - each separate port
03:01 - and the first one i need to cover is
03:03 - richard stallman
03:05 - and in the 80s
03:07 - many companies stored developing their
03:09 - own
03:10 - unix operating system for instance ibm
03:15 - sun and hp they all had
03:18 - different versions of the unix operating
03:21 - system that they were developing
03:23 - and the results was a mass of unix
03:27 - dialects and a dozen different ways to
03:30 - do the same thing and so this is where
03:32 - richard stallman came in to end the era
03:36 - of eunuch separation and prevent people
03:39 - from reinventing the will by starting
03:42 - the gnu project
03:44 - and gnu simply means gnu is not unix and
03:48 - his goal was to make an operating system
03:50 - that was freely available to everyone
03:53 - and where everyone could work together
03:56 - and many of the command line tools that
03:58 - are in modern day linux use the new
04:01 - tools that was created under this
04:04 - organization by richard stallman
04:07 - and just to give you a little bit of
04:08 - more about his background he's an
04:10 - american free software movement activist
04:13 - also a programmer that went to mit and
04:17 - he also created the organization called
04:21 - free software foundation and he's an
04:24 - avid campaigner for software to be
04:26 - distributed in a manner such that its
04:29 - users receive the freedom to use study
04:32 - distribute and modify that software
04:35 - so now this rolls right into the
04:38 - next question which is what is the linux
04:41 - kernel
04:43 - and the linux kernel is a free and open
04:45 - source monolithic module multitasking
04:49 - unix-like operating system kernel and
04:52 - the kernel is simply a program that
04:55 - talks directly to the hardware and
04:58 - manages the resources and processes and
05:00 - the meaning behind linux is
05:04 - linux is not unix
05:06 - and to cover the creator
05:09 - lin the linux kernel was actually
05:10 - created by a guy named linus torvalz
05:14 - and after its creation it was soon
05:16 - adopted as the kernel for the gnu
05:19 - operating system and it became a free
05:22 - replacement for unix and since that
05:25 - combination of these two projects it has
05:29 - spawned a large number of operating
05:31 - system distributions and they're pretty
05:34 - much all commonly
05:36 - called linux now that we understand the
05:39 - gnu project as well as the linux kernel
05:43 - let's
05:44 - go down and cover
05:46 - a linux distribution now there are many
05:49 - linux distributions
05:51 - but simply put a linux distribution is a
05:54 - complete linux system package
05:57 - and many linux distributions are
05:59 - available to me just about any computing
06:03 - requirements
06:04 - you could have and most distributions
06:07 - are customized for a specific user group
06:11 - such as a business user
06:13 - multimedia enthusiasts software
06:16 - developers
06:17 - and your average home user and as you
06:20 - can see on the screen this is four major
06:23 - linux distributions that are out there
06:26 - one is ubuntu
06:27 - debian and then kali linux as well as
06:31 - red hat and just to explain
06:33 - each one of them
06:35 - ubuntu and debian or one of
06:38 - your basic desktop linux distributions
06:41 - that you can use and we all know ubuntu
06:44 - is the most popular distribution in the
06:47 - world and i threw cali linux up there
06:50 - because this is the most used
06:52 - distribution when it comes to cyber
06:54 - security as well as the hacker culture
06:58 - and red hat covers the business side
07:01 - because this distribution is not a
07:03 - hundred percent free and the way they
07:06 - charge as far as the model for red hat
07:08 - is that businesses pay for the support
07:11 - but as stated there are a whole bunch of
07:14 - linux distributions that will meet most
07:17 - of your needs
07:18 - and now let's cover the course
07:20 - distribution
07:21 - which is the distribution i'll use
07:24 - throughout this course which is ubuntu
07:27 - and we know that it's debian based
07:29 - and it is composed mostly of free and
07:32 - open source software
07:34 - and ubuntu
07:35 - is released in three different editions
07:38 - they have a desktop edition a server
07:41 - edition and a core edition which is
07:44 - typically used for internet of things
07:46 - devices as well as robots
07:50 - and all the editions can run on the
07:53 - computer alone or in a virtual machine
07:56 - which is why i chose ubuntu for this
07:59 - course
08:00 - because i want you guys to kind of
08:02 - follow along
08:03 - no matter the hardware that you are
08:05 - working with
08:07 - now let's go down and get started
08:14 - now as i stated in the previous segment
08:16 - we will be using ubuntu for the full
08:19 - course
08:20 - so i will now cover how to actually
08:22 - download it and install the distribution
08:25 - and i'm currently at
08:27 - ubuntu.org this is the simplest way to
08:29 - actually get the ubuntu distribution if
08:32 - you hover up to the top where it says
08:34 - downloads click the down arrow
08:37 - that will get you the ubuntu desktop and
08:40 - the current version right now is 20.04
08:44 - and i always recommend people use the
08:47 - lts
08:48 - which stands for long-term support this
08:51 - release has the longest support time
08:55 - versus any of the others
08:57 - now you can also install the ubuntu
09:00 - server version but it doesn't have a
09:02 - desktop environment
09:04 - and like i said stated earlier there is
09:07 - a ubuntu core
09:09 - or ubuntu for iot
09:11 - that you can actually download for
09:14 - your mini boards like a raspberry pi
09:17 - now in order to download it all you have
09:19 - to do is click on the 20.04 and that
09:22 - will start the download and it only
09:24 - takes a couple minutes depending on your
09:27 - internet speed but you want to go down
09:29 - and download this and then i'll be back
09:32 - once it's finished to go through the
09:34 - install with you guys so now that we
09:37 - have ubuntu downloaded i just wanted to
09:39 - talk about the couple ways that you can
09:42 - install ubuntu now there's the direct
09:45 - way there's also
09:47 - a way to install it in a virtual machine
09:50 - as well as you can install it within the
09:52 - cloud but most of the times people
09:55 - install the server edition in the cloud
09:57 - because they may want to set up a web
10:00 - server or something to that effect now
10:03 - you can install it directly
10:05 - to your hard drive but i definitely
10:08 - don't recommend you do this for this
10:09 - course
10:10 - unless you have a secondary computer
10:14 - because
10:15 - when you install it directly on your
10:16 - system you have to make sure you have a
10:19 - backup of all your files and since we're
10:21 - just going through a course in a simple
10:24 - introduction
10:25 - i don't want people to go through this
10:27 - and mess up their computer by not having
10:29 - backups lose files and don't have a way
10:33 - to recover them and then also when it
10:35 - comes to a direct install you have to
10:37 - write the iso to a usb or a cd which
10:41 - will cause a little bit more confusion
10:44 - than necessary just to go through and
10:47 - follow and run a couple commands that
10:49 - i'll teach you through this course
10:52 - so the main way i want to show you guys
10:55 - how to install ubuntu is by using an
10:58 - application called virtualbox
11:01 - now oracle virtualbox is a type 2
11:04 - hypervisor and also virtual device can
11:07 - be installed
11:09 - on all three major platforms microsoft
11:12 - windows mac os and linux
11:15 - and then also when you use virtualbox
11:18 - you have the opportunity to try the
11:21 - operating system before you actually
11:23 - commit to installing it directly on your
11:26 - hardware
11:27 - and then also
11:29 - one thing about virtualbox you have to
11:31 - have
11:32 - newer hardware because the newer the
11:34 - hardware you have the more likely that
11:38 - virtualization is supported through your
11:40 - processor and since this is 2022 i know
11:43 - a lot of people are using newer laptops
11:46 - and virtualization is turned on by
11:49 - default
11:50 - and i wanted to make sure i open this up
11:52 - to as many people as possible so they
11:55 - can go through the training successfully
11:58 - now let's hop over to my desktop so we
12:00 - can walk through installing ubuntu
12:04 - within virtualbox
12:06 - okay so our iso is downloaded and i have
12:09 - it stored in a folder but this is what i
12:12 - actually downloaded right here which is
12:14 - what you will receive when you hit the
12:16 - download button from ubuntu so you want
12:18 - to make sure you find that
12:20 - location so you can create the virtual
12:23 - machine now this is virtualbox manager
12:26 - and it's a very simple application to
12:28 - use it looks and feels the exact same
12:31 - way on all different platforms so
12:33 - windows mac os
12:35 - as well as linux it looks pretty much
12:37 - the same
12:38 - and most likely when you first open this
12:40 - application there won't be anything
12:43 - there and i currently have some virtual
12:45 - machines already here that's why they're
12:47 - listed
12:49 - now in order to create our virtual
12:51 - machine all you have to do is hit new so
12:54 - we can hit new and then what you want to
12:56 - do is name the operating system now i
13:00 - know this is a ubuntu system so i'm
13:03 - gonna just put ubuntu as the name and
13:06 - you can also put the version number
13:08 - sometimes i put 20.04 at the end of it
13:11 - and i'll do that for the the purposes of
13:13 - this video so you guys can follow along
13:15 - with it
13:16 - now you want to select the type
13:18 - now it'll automatically kind of
13:20 - recognize based on whatever you type up
13:23 - here and it automatically pulled up
13:24 - ubuntu
13:26 - down here as well as the type which is
13:28 - linux and if we click under here i just
13:30 - want to show you guys the different
13:32 - options but you have microsoft windows
13:34 - solaris bsd
13:37 - ibm mac os x and other
13:40 - and what you want to do is make sure it
13:42 - selects linux most of the time like i
13:44 - said when you type in
13:46 - the operating system it'll automatically
13:48 - update here
13:49 - with the right information and you want
13:52 - to 64-bit as you can see when you click
13:55 - under type it'll open
13:57 - and expand the different versions and
14:00 - what you want to do is make sure it's
14:01 - when you've gone to 64 bits
14:04 - and so we're good there we can hit next
14:07 - and now this is your memory size now
14:09 - this is all dependent on the extra
14:12 - resources that you have on your system
14:14 - now my laptop has
14:17 - 16 gigabytes of memory so i have some to
14:21 - spare
14:22 - and for this demonstration i'll just
14:24 - select eight since i have the resources
14:26 - to spare
14:27 - but you may want to select like four or
14:29 - six
14:30 - when it comes to this depending on how
14:32 - much memory you have on the system
14:34 - now ubuntu can actually run with less
14:37 - memory depending on the desktop
14:39 - environment
14:40 - like for instance if you're using the
14:42 - xfce version of ubuntu then you can
14:45 - probably get away with two gigabytes of
14:47 - memory but i always recommend for people
14:50 - starting out just give it four gigabytes
14:53 - of memory
14:54 - and you'll be good to go
14:56 - so let's hit next there now
14:58 - we have to select our hard drive and
15:01 - this is just a way to select if you
15:02 - already have a hard drive created and
15:05 - what this is is a virtual hard drive it
15:07 - doesn't really exist it's kind of like a
15:09 - container so to speak and i'm only using
15:13 - that as an example it's not the actual
15:15 - application that runs containers like
15:17 - docker but it's essentially a
15:19 - containerized file
15:22 - that's virtual that's used by the
15:24 - virtual machine where all your files
15:26 - will be stored and it's looked at by the
15:28 - operating system as a real hard drive
15:31 - but it's actually not it's just created
15:33 - by virtualbox itself so what you want to
15:36 - verify is that you want to create a
15:38 - virtual
15:39 - disk now so you can hit create there
15:42 - and there are different types of hard
15:44 - disks within this application there's
15:46 - the vdi which is a virtualbox this image
15:49 - vhd which is virtual hard disk and vmdk
15:54 - which is a virtual machine disk
15:56 - and i know that's kind of confusing but
15:59 - some of these is basically the format of
16:02 - the type of virtualized hard disk that
16:05 - will be used
16:06 - for this operating system
16:09 - and the main thing that needs to be
16:10 - explained the difference is there are
16:12 - other types of hypervisors out there
16:15 - that use a different format for for
16:17 - instance i believe vhd
16:20 - is the one used by
16:22 - vmware
16:23 - but we're not going to worry about that
16:25 - we'll just use the virtual box this
16:27 - image for this demonstration so let's
16:29 - hit next there
16:31 - now this is an important step that i
16:33 - always try to tell people when i'm
16:35 - teaching them how to use virtualbox
16:38 - there are two different ways
16:40 - of storing the data within the hard disk
16:42 - there is dynamically allocated and a
16:45 - fixed size
16:47 - now dynamically allocated means that the
16:50 - the hard drive will only be as big as
16:54 - the actual
16:55 - files and as you add more and more files
16:58 - to it it will grow now with a fixed size
17:01 - if you select a hard drive of 10
17:04 - gigabytes then it will take up 10
17:07 - gigabytes of space on your system so i
17:10 - always tell people to use dynamically
17:12 - allocated that way it'll grow as you
17:14 - need it it won't take up take away from
17:17 - the resources from your main machine
17:19 - so let's hit next there and as you can
17:22 - see it will store the virtual machine in
17:24 - a location i won't go too deep into that
17:26 - but that's basically where the virtual
17:28 - machine is stored or the hard drive
17:31 - itself and then also the size you can
17:33 - set the size as 10 gigs or you can go
17:36 - even higher depending on how many how
17:39 - much resources you have in your system
17:41 - for instance i have a two terabyte hard
17:43 - drive within my laptop where this is
17:46 - located so that's why it's showing two
17:48 - terabytes but you can't use the full two
17:51 - terabytes because like i said this is
17:53 - running on
17:55 - a operating system that's already
17:57 - installed
17:58 - so if you don't have two terabytes
18:00 - which i'm sure i don't because of all
18:02 - the
18:03 - files and folders
18:05 - and applications that i have installed
18:07 - on this system
18:08 - i definitely don't have that space to
18:11 - give to this virtual machine now you
18:14 - don't have to really worry about it if
18:16 - you select it dynamically allocated
18:18 - because it will only grow to the size
18:21 - that it needs for the operating system
18:23 - and whatever files that you put on the
18:26 - virtual machine
18:27 - but i always recommend people use like
18:29 - 10 gigabytes for
18:31 - just a
18:32 - install that you're doing for testing
18:35 - purposes
18:36 - but let's go down and hit create and
18:38 - that will
18:39 - conclude the setup and that was
18:42 - basically the
18:44 - initial configuration of the virtual
18:46 - machine we have to go into the settings
18:48 - and make a few more changes before we
18:50 - actually
18:51 - launch the virtual machine
18:53 - so let's hit settings
18:55 - and you want to make sure
18:56 - that that virtual machine is selected
18:59 - that way it'll open up the settings for
19:01 - that virtual machine
19:02 - and we don't have to mess with anything
19:04 - under general but i'll go through and
19:06 - show you at least the tabs now there is
19:09 - a shared clipboard drive and drag and
19:11 - drop you could turn that on which i
19:13 - won't need that for this demonstration
19:16 - uh you can write a description in there
19:18 - and then they also allow you to create
19:20 - this encryption if you want to
19:23 - i recommend you don't do that especially
19:25 - if you don't have
19:26 - especially if this
19:28 - virtual machine is just temporary and
19:30 - you're probably going to delete it in
19:31 - the future now if we go to the next tab
19:34 - that's the system you can
19:36 - make changes to how you set up the
19:38 - virtual motherboard for instance that's
19:41 - the base memory and like i said i gave
19:43 - it eight gigabytes of memory but you can
19:45 - select it whatever you can make changes
19:47 - there if you need to and then also it
19:49 - has a virtualized boot order so you know
19:52 - like when you boot up a physical
19:54 - computer
19:55 - it'll pop up with hitting either like
19:58 - f12 or f9
20:00 - to select a different boot order or
20:02 - select something
20:04 - to boot first within the order
20:07 - from the bios then you can make those
20:09 - changes here as well
20:11 - and then some chipset information
20:13 - uh you can enable efi
20:16 - for special you know os's if you need it
20:19 - i don't recommend you
20:21 - select it you just use the default now
20:24 - under processing you can give your
20:27 - virtual machine more processors which
20:29 - i'll bump mine up to two now i have a
20:31 - whole bunch of cores on my system
20:33 - because i'm using a ryzen on my laptop
20:36 - so you select what's best for you but
20:38 - two cores is just enough for what i'm
20:41 - trying to do
20:42 - with this virtual machine as far as just
20:44 - showing you guys how it all works
20:46 - and then there is an acceleration tab
20:48 - which we will leave default now under
20:51 - display what i typically do is bump up
20:53 - the video memory
20:55 - to 128 and then
20:57 - enable 3d acceleration
21:00 - and then there are some other tabs in
21:01 - here remote display and recording if you
21:04 - need to
21:05 - um and then storage
21:07 - this is where you want to add your iso
21:11 - so right now it's a virtualized ide
21:14 - controller which is the cd drive and all
21:17 - you have to do is and select over here
21:18 - where the little dish is
21:20 - and you can find the iso by clicking
21:23 - choose a disk file
21:25 - and then all you have to do is go on
21:26 - your system now
21:28 - and find that iso that we downloaded
21:31 - from
21:32 - ubuntu a few seconds ago
21:34 - and once you find that iso you just
21:37 - select it and that will actually add it
21:39 - to the virtualized cd drive
21:41 - and then as you can see right here this
21:43 - is the hard drive that we created the 10
21:45 - gigabyte hard drive
21:47 - and that is where the operating system
21:50 - will be installed but this is needed in
21:53 - order to boot up the operating system in
21:55 - order to install it and i just wanted to
21:58 - explain that for people that are very
22:00 - very new
22:01 - so you can understand exactly what we're
22:04 - doing and this is similar to
22:08 - installing it on physical hardware
22:11 - meaning that this iso would typically be
22:14 - written to a cd or a usb drive and
22:17 - you're basically plugging it in
22:19 - to your hard drive and then your hard
22:22 - drive is booting this cd
22:24 - and then writing to your physical hard
22:26 - drive that's within your laptop
22:29 - now the rest of these options i won't go
22:30 - through uh but especially the audio
22:33 - network settings now one thing you can
22:35 - actually change right here
22:37 - which i didn't think about talking about
22:39 - but they do have different types of
22:41 - networks you could set up like net
22:44 - which it'll basically use your ip
22:46 - address for this machine
22:48 - and then they have bridge adapter
22:50 - internal network uh host only which i'll
22:53 - just leave it on that so we can have
22:56 - internet
22:57 - for this virtual machine
22:58 - and then also serial ports usb ports
23:01 - which i kind of leave most of this stuff
23:03 - off or i turn it off but you could just
23:06 - leave it the defaults now let's go down
23:08 - and press ok and that's pretty much
23:10 - saved our settings for the virtual
23:12 - machine and we can basically boot it up
23:14 - and store the install so it's two ways
23:17 - to actually start it you can double
23:18 - click on the actual virtual machine or
23:21 - you get this down arrow or you can just
23:23 - hit start but they do have options under
23:25 - here they have a normal store they have
23:27 - a headless store and a detached stort
23:30 - and what you want to use is the normal
23:32 - store or just double click on the
23:35 - virtual machine and it'll start it up
23:37 - and as you can see it's popping up it
23:39 - has our boot you know order it
23:41 - automatically recognize the cd drive
23:43 - that we had
23:44 - in the actual system
23:46 - and then
23:47 - one thing with ubuntu it'll go through
23:49 - and check your files before it opens up
23:52 - the installer
23:55 - now one thing that ubuntu will do it'll
23:57 - pop up with a installer right away as
24:00 - soon as it boots into the operating
24:02 - system and there are two options first
24:05 - thing you want to do is select your
24:06 - language so if you're in a different
24:08 - country you can select whatever language
24:10 - that applies to you but since i'm in the
24:12 - us i'ma select us or english
24:16 - but the two options are you can try
24:18 - ubuntu or you can install ubuntu and
24:21 - which is what we want to do
24:23 - we're going to install ubuntu but you
24:25 - can actually try
24:27 - the operating system
24:29 - before you actually do the install and
24:31 - this is beneficial if you're installing
24:34 - directly on your hardware
24:36 - because every now and then you'll run
24:38 - into a system
24:39 - that is not a hundred percent supported
24:43 - but this is very rare but i try to tell
24:46 - people to use the try ubuntu first that
24:48 - way it'll verify that your system
24:51 - will actually run the ubuntu operating
24:54 - system
24:55 - without any issues
24:57 - and it basically boots up the system as
24:59 - if it's on installed on
25:02 - the actual computer
25:04 - with all the applications and everything
25:06 - you want to do
25:07 - in order to use the operating system you
25:09 - can get on the internet you can play
25:11 - around with files you can do pretty much
25:13 - anything you can do
25:14 - if it was physically installed
25:17 - on your hardware
25:18 - now the only thing is if you download
25:21 - files or in install something or
25:23 - whatever it's gonna reset
25:26 - if you reboot the system so i won't save
25:28 - anything which that's basically called
25:30 - persistence
25:31 - now let's go through the installer by
25:33 - just hitting install ubuntu which is
25:35 - what i want you guys to do if you're
25:37 - going through this course
25:38 - now the first thing that will pop up is
25:40 - the keyboard lay by layout so you select
25:43 - whatever keyboard layout
25:44 - applies to you but since i'm in the us
25:47 - uh english us and in english us over
25:50 - here and then you can also test the
25:52 - keyboard just to make sure
25:54 - that all the keys line up and all that
25:56 - stuff so let's hit continue
25:59 - and so it says right here what apps
26:01 - would you like to install to start up
26:03 - you could do the normal installation now
26:05 - they do have a minimal installation
26:07 - it'll come with a web browser and basic
26:09 - utilities but i'll install the normal
26:11 - version so you can see all the software
26:14 - that's on it and then the updates right
26:16 - here it'll download updates while
26:18 - installing ubuntu because these packages
26:21 - or isos that are created are not always
26:25 - up to date like they'll update the iso
26:28 - let's say once a month or
26:30 - a couple months depending on the
26:33 - developers of the actual distribution so
26:36 - sometimes you'll download an iso and
26:38 - it's a couple weeks behind the update so
26:41 - this will verify that you have a
26:44 - up-to-date machine as soon as you boot
26:46 - up the operating system and the
26:48 - installation is complete so i'll just
26:49 - hit continue there i'm gonna just leave
26:51 - the defaults
26:52 - now this is a very important step this
26:54 - is where you want to install
26:57 - the operating system meaning the hard
26:59 - drive and one thing it says right there
27:02 - warning this will delete all your
27:04 - programs documents folders photos music
27:07 - and any other files
27:09 - on any other operating system that's on
27:11 - the hard drive so
27:13 - if you're installing this on physical
27:15 - hardware you want to make sure you have
27:16 - backups of all your files because when
27:18 - you run through this installation and
27:20 - you get to this step this lets you know
27:23 - that it's going to erase the hard drive
27:25 - and you will lose everything on the
27:26 - system we don't have to worry about that
27:29 - because
27:30 - we elected to install it all on
27:32 - virtualbox so this is an empty hard
27:34 - drive or virtual hard disk
27:37 - with nothing on it so we don't have to
27:39 - worry about it but they do have options
27:41 - for you to set up the hard drive
27:43 - in your own configuration which i won't
27:45 - go through that's pretty much advanced
27:48 - uh
27:49 - if you're just installing this to follow
27:50 - along with the class
27:52 - then i recommend you select just erase
27:54 - this and install ubuntu
27:57 - and we can just click install now and
27:59 - it'll go through the install
28:02 - and i actually forgot about this next
28:04 - step the next step is going to ask you
28:06 - where you're located uh i'm on the west
28:08 - coast so i select los angeles which is
28:11 - super cool and then also you have to
28:14 - select and create a user account and
28:17 - this is something
28:18 - that most linux distributions want you
28:20 - to do they want you to create
28:22 - a user account and not use the root
28:25 - account which i'll talk about
28:27 - later on in the course
28:29 - and i'll change the computer name to
28:31 - ubuntu
28:33 - 20
28:34 - and then what you want to do is select a
28:36 - password or create a password
28:39 - and so i'll throw that in there
28:41 - and just to throw you guys a little bit
28:44 - more information
28:45 - uh one thing they do have two options
28:48 - when it comes to logging in you can log
28:50 - in automatically or you can require a
28:52 - password to log in which i always
28:54 - recommend people use a password
28:57 - and then with ubuntu they also have it
28:59 - to where you can connect to active
29:01 - directory so if you understand
29:03 - uh windows in active directory you can
29:05 - add the system to
29:07 - active directory which is a little bit
29:10 - outside of it the scope of this course
29:13 - so let's move on
29:14 - hit continue
29:16 - and like i said it's going through the
29:18 - install
29:19 - and it actually doesn't take too long
29:21 - but i'll be back when it actually
29:22 - complete completes
29:24 - and so since the installation is
29:26 - complete this will pop up for you
29:28 - basically say installation complete you
29:30 - need to restore the computer in order to
29:33 - use the new installation so all you have
29:35 - to do is hit restart
29:37 - and this concludes the installation
29:39 - portion of
29:41 - ubuntu for the course
29:47 - okay so our installation is complete and
29:49 - this is the desktop that you'll see when
29:52 - you log into your ubuntu 20.04
29:55 - now i won't spend too much time on the
29:59 - desktop environment i'll just basically
30:01 - do an overview of how to actually use
30:04 - the linux desktop and then we'll dive
30:07 - into the terminal
30:09 - which is where all the magic happens
30:11 - when it comes to the linux operating
30:13 - system so let's start off by giving you
30:16 - guys a overview of how the desktop works
30:19 - and how to use it
30:21 - and if you're coming from windows or mac
30:23 - os
30:25 - then this shouldn't be too difficult for
30:26 - you to pick up on
30:28 - as you can see it has a main bar at the
30:30 - top which has audio tasks and
30:34 - hardware hardware changes like for
30:37 - instance uh
30:38 - the sound settings right here right here
30:41 - is the log out button or shutdown button
30:44 - so you can click there and that'll bring
30:46 - that up and you can shut down the system
30:48 - you can also modify your
30:51 - internet connection
30:53 - you know the simple things that you
30:54 - would see in a windows taskbar or the
30:56 - taskbar on a mac os system
30:59 - and then right here in the center you'll
31:00 - see you have the date and time and if
31:02 - you click on it there is a calendar
31:04 - and then also you'll receive
31:06 - notifications here
31:08 - which is super cool to see
31:10 - now if we go over here to the left on
31:11 - this actual taskbar you'll see where it
31:13 - says activities you can click there and
31:16 - that'll actually open up any processes
31:18 - that are going on on the system or
31:21 - applications that may be running and
31:23 - minimized on the system like currently
31:26 - i'm running some updates on this
31:28 - installation and i'll get into that
31:31 - later how to actually do updates on the
31:33 - system
31:34 - using the graphical user interface
31:37 - if we click on that that'll hide it back
31:40 - where it was and as you can see on the
31:41 - desktop you have folders so this is the
31:44 - home directory which is what they call
31:47 - it on a linux system the home directory
31:50 - this is where all your files and folders
31:52 - are stored
31:53 - and i wanted to cover this so you guys
31:55 - can at least see
31:56 - that the files that we are going to
31:58 - create and manipulate using the terminal
32:02 - once we get to that point
32:05 - can be modified using the gui as well
32:09 - and it looks different you know i'm
32:11 - saying it's different from your windows
32:12 - operating system as well as the mac os
32:15 - operating system is different but the
32:17 - concept is pretty much the same uh you
32:20 - can double click on folders and now open
32:22 - them up you there have they have a back
32:24 - button so you can go back
32:27 - and you can navigate throughout the file
32:29 - system as needed now let me go down and
32:31 - close this because i want to show you
32:33 - guys they do have a trash can so if you
32:35 - delete something it'll throw it in the
32:36 - trash can and that opened up our file
32:39 - explorer again
32:41 - which is another way to actually get to
32:43 - it so let's go ahead and close that
32:45 - again
32:45 - by default you have a lot of software
32:48 - installed especially on this version of
32:51 - ubuntu when we went through the install
32:54 - it installed pretty much the default
32:57 - software that anyone would need or what
33:00 - they think anyone will need
33:03 - to use the operating system to its full
33:05 - potential and just to cover some of it
33:08 - if we go on the left hand side you'll
33:09 - see this taskbar on the left hand side
33:12 - this shows you your favorite
33:15 - software that's on there and as you can
33:16 - see we have firefox so our web browser
33:19 - uh thunderbird is a male client similar
33:22 - to microsoft outlook you also that's the
33:25 - same file explorer like when we click on
33:27 - josh that'll open up the file explorer
33:29 - and i'll open it up again just so you
33:31 - guys can see
33:32 - this is a music player and like i said i
33:34 - don't want to go through all the
33:35 - software i just kind of want to show you
33:36 - what's there by default so you can
33:38 - understand
33:39 - that pretty much everything on this
33:41 - system is installed to make the
33:44 - transition from one of these other
33:46 - operating systems a whole lot easier and
33:49 - like i stated this is a music player
33:51 - then we have
33:52 - uh this is similar to microsoft word
33:55 - now one thing i want to show you guys
33:57 - was the software center so i'll go down
33:58 - and open that up but this is how you get
34:01 - other software
34:03 - and just so you guys can get a full
34:04 - understanding linux doesn't have the
34:07 - typical software that you would install
34:10 - on a windows operating system or mac os
34:14 - it has its own repositories or locations
34:18 - where
34:19 - certain free and open source software is
34:22 - located so you can install it and use it
34:25 - on the operating system and a lot of
34:27 - these applications are made to be a one
34:30 - co one to one comparison
34:33 - with software that you would see on
34:35 - other operating systems like earlier
34:37 - what i was talking about this is
34:38 - equivalent to microsoft word well you
34:41 - can actually write documents just like
34:43 - microsoft word you can even store the
34:46 - files in the microsoft word format so
34:50 - you can jump back and forth with a
34:52 - particular file and you can easily
34:54 - modify it on your windows system if you
34:56 - want to so i just kind of want to cover
34:58 - that but as you can see this is the
35:00 - software you can look at the explorer
35:03 - they have the editors pick so you can go
35:05 - through play around and install some of
35:07 - the software uh there are different
35:09 - categories so you can go through and
35:10 - look at all this different software and
35:13 - then also you can check out what's
35:15 - actually installed on the system
35:17 - and this right here is
35:19 - makes it very simple for new users to
35:22 - linux to actually transition over
35:25 - because it's not that difficult to
35:27 - install because once you find something
35:29 - under the explorer list let's say you
35:31 - want to install
35:32 - signal or
35:34 -  all you have to do is open up the
35:37 - actual application or click on it and
35:40 - then there's the install button and
35:41 - it'll install it on your system so let's
35:44 - go back and i just want to show you guys
35:47 - this is where you update your system as
35:49 - well but i'll show you the
35:51 - proper linux way of updating things once
35:54 - we get to the command line portion but i
35:56 - at least wanted you guys to see it here
35:59 - but this is where you can update all
36:01 - your applications
36:03 - that are installed on the system now
36:06 - let's go down and close that because i
36:07 - want to show you guys they do have a
36:09 - help guide so if you need help with
36:11 - while using this operating system that
36:14 - will open up the how to guide basically
36:18 - goes through the overview of using the
36:20 - system and i really want to show you
36:21 - guys this
36:23 - because i know a lot of people that are
36:24 - taking this course or new to the linux
36:26 - operating system this is a great place
36:29 - to get help
36:30 - and that's why i use ubuntu because the
36:33 - community all the documentation and
36:36 - pretty much everything is
36:38 - is out there
36:39 - for you to use so you can
36:42 - fully understand how to use the desktop
36:44 - environment as well as linux in general
36:47 - now let's go down close that but like i
36:49 - said this is the software updater that
36:52 - actually popped up and it's telling me
36:53 - to restart now but i'm not going to
36:56 - restore it at the moment let's minimize
36:58 - this because i want to show you guys a
37:00 - few other things and right here this is
37:02 - basically
37:03 - the installation iso i kind of left it
37:07 - on this system
37:08 - but most of the time you want to remove
37:10 - it or you want to remove it from the
37:12 - actual system if you're doing a physical
37:14 - install if you did it on you using a usb
37:18 - drive or a cd drive you want to remove
37:20 - that cd or remove the usb drive from the
37:24 - computer that way you'll you can verify
37:27 - that it's booting from the hard drive
37:30 - especially if you made changes within
37:32 - the bios
37:33 - as far as the boot order so it won't
37:36 - keep looping and going back into the
37:38 - installer versus booting from the hard
37:41 - drive
37:42 - now i want to show you guys how to
37:44 - actually get to all the software
37:46 - that's installed on the system as you
37:48 - can see this is just basically what's
37:50 - open
37:51 - as well as the favorite software
37:55 - but if you click here under show
37:56 - applications it'll pop up with a screen
37:59 - and this looks fairly similar to people
38:02 - that use android phones you know how you
38:05 - swipe up and that'll bring up all your
38:07 - applications that's ex exactly what this
38:10 - looks like
38:11 - but this is for a full blown system and
38:14 - not a phone
38:16 - but you can access all your software
38:18 - from here uh i won't go through them all
38:21 - i just kind of wanted to show you that's
38:22 - how you actually get to it if you need
38:25 - to use any of the software on the system
38:28 - and one area i want to show you guys
38:30 - before we move on to the next section is
38:32 - the settings now this is where you want
38:35 - to go if you need to make changes to
38:37 - this system
38:38 - in general pretty much all your settings
38:41 - are in this one location
38:43 - like you have your network settings
38:45 - bluetooth settings if you have a
38:46 - bluetooth bluetooth hardware on your
38:48 - system
38:50 - uh the background you can change the
38:51 - appearance notifications uh applications
38:55 - you can set your default applications in
38:57 - here uh privacy settings so you're not
39:00 - being tracked by any type of software or
39:03 - the operating system itself you can also
39:06 - log into online accounts if you want to
39:09 - for instance they have a way to connect
39:11 - to your google account
39:12 - that way your email and all that stuff
39:14 - will be connected directly to your
39:17 - google account which is
39:19 - which is very beneficial and then also
39:21 - sharing you can set up like share drives
39:24 - they also have sound power settings
39:27 - display settings and like i said any
39:29 - type of settings that you could think of
39:31 - or under here
39:32 - if you have a printer at home that you
39:34 - want to set up to it you can install
39:36 - your print drivers under here
39:38 - as you can see
39:39 - ubuntu is real good with this it picks
39:42 - up
39:43 - the printers on your network i have a
39:45 - brother's printer as well as a hp
39:48 - desktop jet printer that's on my network
39:50 - currently and it already picked those up
39:53 - and added them to the actual desktop and
39:56 - then also
39:57 - this is something i was going to get to
39:59 - within the command line but i wanted to
40:00 - show you that you could do a lot of this
40:02 - stuff that i'm gonna do in the command
40:04 - line from the gui but
40:06 - as i stated the power of linux is within
40:10 - the command line but you can modify user
40:13 - accounts as well which is super cool to
40:16 - actually have access to
40:18 - from a gui
40:19 - now let's go down and close this
40:22 - and this will conclude the portion of
40:24 - the basic understanding of how to use a
40:27 - linux desktop environment now a quick
40:30 - note depending on what distribution you
40:33 - use the desktop environment may look
40:36 - totally different from what i'm showing
40:37 - you here but if you're following along
40:39 - with this course and you install ubuntu
40:41 - your desktop environment should look
40:44 - similar to what mine is showing here but
40:47 - i just want to at least let you guys
40:48 - know that in the future once you start
40:51 - playing around with other distributions
40:54 - the desktop environment may look a
40:55 - little different certain things may in
40:57 - different may be in different places but
40:59 - the overall concepts are pretty much the
41:02 - same and that's why it's important for
41:05 - you guys to understand how to use the
41:06 - terminal because a lot of the tools and
41:09 - a lot of the
41:11 - software that you use within the
41:12 - terminal is used across all linux
41:16 - distributions
41:17 - so let's hop over to the next section
41:23 - and now we'll be covering how to
41:26 - actually use the terminal and the first
41:28 - thing i want to do is just basically
41:30 - show some of the configurations for the
41:32 - terminal once we get it up open and
41:35 - basically what is called the terminal
41:37 - emulator and you could just search for
41:39 - it under your applications you'll see it
41:42 - pop up you can actually just search up
41:44 - here to top type terminal and that'll
41:46 - bring up the actual terminal emulator
41:49 - and as you can see
41:51 - it should kind of remind you of those
41:54 - old
41:55 - hacker movies where someone is just
41:58 - typing at the terminal that's
42:00 - essentially what this is it's just the
42:02 - terminal emulator so application that
42:05 - affords you to interact with the os
42:08 - using commands
42:10 - and one of the first things that will
42:12 - pop up which you can kind of ignore but
42:14 - it talks about
42:16 - pseudo and i'll cover that a little bit
42:19 - later on in the demonstration where that
42:22 - actual application can help you while
42:25 - running certain commands
42:28 - now before we type anything i just
42:30 - wanted to show you guys some of the
42:32 - configurations that you have for the
42:34 - terminal emulator and this is similar to
42:36 - any application i can show you the
42:39 - settings the
42:40 - how to make it look a little different
42:43 - you know using the options that are in
42:46 - it so if you click right here this will
42:47 - open up the menu and you can just click
42:50 - preferences down here and this will open
42:53 - up all your preferences for the terminal
42:55 - emulator as you can see they have a help
42:58 - button up here that'll open up some
42:59 - information about
43:01 - how to actually use it but i'll walk you
43:03 - guys through it
43:04 - this is the generals tab and this has
43:07 - just basic information on the looks of
43:10 - it like there's a theme you could change
43:12 - the theme to dork
43:13 - you can open new terminals in a new
43:16 - window or you can open it as a tab which
43:19 - is beneficial especially if you're
43:21 - working with different
43:23 - systems because you can connect to other
43:26 - linux operating systems via the terminal
43:29 - and you can tab back and forth using
43:31 - those tabs so it's super cool but if you
43:34 - have tabs enabled up here this is kind
43:36 - of where it'll it'll help you if you
43:38 - have tabs turned on right here so
43:41 - anytime you open up a new terminal it'll
43:43 - open up as a tab and you can specify the
43:46 - position that you want it to pop up in
43:48 - once it opens up so last and then next
43:51 - is the
43:52 - the other option now next thing on here
43:55 - i want to show you guys these shortcuts
43:57 - this is something
43:58 - that i think you should definitely check
44:00 - out i'm not going to go through all
44:01 - these shortcuts but there are plenty of
44:04 - shortcuts to
44:05 - help you while using the terminal and
44:08 - then also you have a profile and
44:10 - currently right now this is the profile
44:13 - uh for us it's unnamed you can actually
44:16 - go in and name it if you want to i'm not
44:18 - gonna name it i'm gonna just leave it
44:19 - the way it is
44:20 - but this profile is tied to your user
44:23 - account so if you log out log back in
44:26 - whatever you set
44:27 - within this profile tab
44:29 - of unnamed will
44:31 - stay the same each and every time you
44:33 - log into the system but as you can see
44:36 - you have a whole bunch of options here
44:37 - this is how you modify the terminal to
44:41 - make it look a little different uh there
44:43 - are some text appearance uh you can set
44:46 - fonts
44:47 - you can set the spacing
44:49 - as far as the
44:51 - cursor that you see that's blinking
44:53 - right here
44:54 - uh you can modify that by making changes
44:57 - you could change it from block to a
44:59 - i-beam and i'll just go down and do it
45:01 - so you guys can see it should change it
45:03 - yeah as you can see the i-beam is just a
45:05 - line
45:05 - uh you can also you know change it to an
45:08 - underline like an underscore pretty much
45:11 - and it blinks and then you can also
45:12 - change that to where it doesn't blink i
45:15 - like the blocks
45:16 - i'll leave that as default but you can
45:18 - turn it off where it doesn't blink like
45:21 - it's blinking right now should be
45:23 - blinking right now yeah and then right
45:25 - here they do have sounds for the
45:27 - terminal i don't i never really mess
45:29 - with any of this stuff
45:30 - i may change the colors which is some of
45:33 - which is on the next tab
45:35 - and under here you have built-in themes
45:38 - so you can modify this if you want to
45:40 - currently it's set to use the system
45:42 - theme but you can easily modify that by
45:45 - unchecking this box and you can modify
45:47 - it using a theme that's already there
45:50 - or you can create your own custom theme
45:53 - by selecting different colors
45:55 - like there's attack text color
45:58 - background color
45:59 - bold color cursor
46:02 - colors and highlight colors and then
46:04 - also they have it where you can set
46:06 - transparency on the background which is
46:08 - super cool i like that
46:10 - and currently it's set to use the
46:12 - transparency from the system theme so
46:15 - a lot of people just use the default
46:17 - which is no problem with it but once you
46:19 - start getting good and familiar with
46:21 - using the terminal and different
46:23 - applications and linux in general then
46:25 - you can start customizing and modifying
46:27 - the system as you see fit but there are
46:30 - down below a lot of color palettes so
46:32 - you can go through and select whatever
46:34 - you want and make the terminal look
46:36 - however you want it now as far as
46:38 - scrolling a lot of times i leave this as
46:41 - default but this is basically if you're
46:43 - running a whole bunch of uh commands or
46:45 - something and you want to see what
46:48 - actually happened the screen will scroll
46:50 - down as you're running commands
46:52 - especially if it's a command that looks
46:54 - at let's say a lot of files or something
46:57 - then it's just going to scroll past
46:59 - everything and if there's an error
47:01 - then you may want to scroll up and look
47:03 - at it so i leave that as default but you
47:07 - can scroll back and forth up and down
47:10 - throughout all the commands that you've
47:12 - ran as well as the results that come
47:14 - through from the command that you
47:16 - actually ran
47:17 - now
47:18 - under here there are commands so you can
47:20 - run a specific command on login and
47:23 - custom commands if you want to
47:26 - and then also preserve working directory
47:28 - for the shell only that's that's just
47:30 - another option right there
47:32 - and then when command exit exit the
47:34 - terminal you get you can set that up
47:37 - um i don't recommend you do that
47:39 - just leave the defaults you should be
47:41 - fine
47:42 - and then also un under compatibility
47:45 - there are some changes there but we
47:47 - won't mess with that with that at all
47:50 - now let's go and close the preferences
47:52 - and one thing i want us to do is
47:54 - actually
47:56 - zoom in so you guys can see a little bit
47:59 - better
48:00 - because it's it's difficult to see
48:02 - things within the terminal
48:04 - unless you make it a little big
48:06 - especially while recording
48:08 - as you guys know i'm recording this in a
48:10 - virtual machine so it's kind of
48:12 - difficult to record where you guys can
48:14 - see everything without blowing it up so
48:18 - hopefully you guys can see this
48:20 - but this is what you'll be greeted with
48:23 - when you first open up the terminal
48:25 - and it's only showing this right here
48:28 - because this is our first time running
48:30 - it on this system all together
48:33 - and just to break things down
48:35 - the first thing that will show up is
48:38 - your user account so we know that when
48:40 - we install this operating system i set
48:42 - up a user account as josh which is my
48:45 - name so it'll show whatever your name is
48:47 - or whatever you set
48:49 - during the installation and then there's
48:51 - a at symbol so it's similar to an email
48:54 - address look at it that way you have the
48:56 - at symbol
48:58 - and then after that is the system name
49:01 - so this is what we actually named the
49:03 - operating system when we went through
49:04 - the install
49:06 - and then after this colon
49:08 - that basically explains or shows you
49:11 - where you are
49:12 - that's what this tilde is for and
49:15 - currently we are in the home directory
49:18 - and then after this this is where you
49:20 - actually type the command so
49:22 - you can just type right in there and
49:24 - that's where you actually run your
49:26 - commands
49:31 - and the first command that i'm finished
49:34 - show you is the most important command
49:37 - that you will learn using the terminal
49:40 - and that command is man
49:43 - and man basically stands for manual and
49:47 - this is something that you will i will
49:49 - use
49:50 - with every command that i show you guys
49:52 - that we run within the terminal
49:55 - man
49:56 - basically gives you information about
49:58 - whatever command you're trying to run
50:01 - within
50:03 - the linux terminal
50:04 - and let me give you an example the first
50:06 - example i will show you of a command and
50:10 - showing you the manual is man
50:13 - space
50:14 - man
50:15 - now that is the manual for the man
50:18 - command so essentially whenever you run
50:21 - the man command
50:24 - whatever you're looking for or whatever
50:26 - manual you're looking for you have to
50:28 - put that command behind it so there are
50:31 - other commands like cd you can put cd
50:34 - behind man and that will open up the
50:36 - manual for
50:38 - the cd command but like i said we want
50:41 - to look at the manual for the man
50:43 - command so it's man
50:45 - space man and press enter and you'll see
50:49 - it'll pop up with the actual man
50:52 - the manual for
50:54 - man
50:55 - as you can see right here just kind of
50:57 - break it down this shows you the actual
50:59 - command then it says manual page utility
51:03 - for the utility man
51:05 - and then it gives you a name a synopsis
51:07 - basically how to use the command and a
51:10 - description of everything about that
51:12 - command and it does the exact same thing
51:15 - for most of the other commands within
51:18 - the linux operating system and let's
51:20 - just read the name right fast so man and
51:24 - interface
51:25 - to the system reference manuals now at
51:28 - the end of the day there's basically a
51:30 - small database running on the system
51:32 - that hosts all the manuals for all the
51:35 - different commands
51:37 - and you can use the man command to pull
51:39 - up those manuals
51:41 - and they'll show up in the terminal just
51:43 - like this and in order to navigate all
51:45 - you have to do is use your up and down
51:48 - arrows and that'll move up and down
51:51 - throughout the terminal of the manual
51:54 - and as i was saying there is a synopsis
51:56 - so it kind of shows you some of the
51:58 - options
51:59 - because a lot of commands they also have
52:02 - options
52:03 - that allows you to modify the results of
52:06 - the commands
52:07 - so
52:08 - just to break down the first one it says
52:10 - man option
52:12 - section page etc so you can modify the
52:16 - result results that'll come out while
52:18 - running that actual command
52:20 - and then this breaks down the
52:22 - description
52:23 - and like i said this is in every manual
52:26 - for every command
52:28 - that's on the operating system and the
52:31 - information here is very beneficial uh
52:34 - when you're first learning how to use
52:36 - this
52:37 - and in certain cases there are examples
52:40 - of how to actually use the command so
52:42 - you can check these out they explain
52:44 - what they're actually doing while using
52:46 - the option
52:48 - and you can test some of these examples
52:50 - as well
52:51 - by running them on your own
52:54 - and the way you get out of these manuals
52:56 - is simply
52:57 - by looking at the bottom where it says
52:59 - press h for help or q for quit so all
53:03 - you have to do is hit the q button and
53:05 - that will actually
53:07 - exit you out of that command
53:09 - so congratulations that's the first
53:11 - command you have ran within the linux
53:14 - terminal and as you can see it's super
53:16 - simple
53:17 - but i want to highlight again man is
53:20 - very important especially when you're
53:22 - first starting out using the linux
53:25 - terminal because there's no way in the
53:27 - world that you can remember all these
53:30 - different commands and how to use every
53:34 - single option within it so if you're
53:36 - trying to figure something out using a
53:38 - command that you've never touched before
53:40 - or a command that you haven't touched in
53:42 - a long time then the man command is
53:45 - definitely beneficial now that you guys
53:47 - have a full understanding of the man
53:50 - command now i want to show you guys how
53:52 - to actually work with directories within
53:55 - the shell
53:56 - now i showed you guys earlier that you
53:59 - can navigate the shell
54:00 - by simply opening up the file explorer
54:04 - and going through and just looking you
54:06 - know at your documents or your different
54:09 - folders that you have where well there
54:12 - is a way to do this within the terminal
54:16 - and i'll show you guys a couple commands
54:18 - that can help you
54:19 - work within different directories
54:22 - and the first command i want to show you
54:24 - guys is the pwd command so we're going
54:27 - to use that man command again and i'll
54:30 - use that for every command that i run so
54:33 - you guys can actually see that the man
54:34 - command
54:35 - does help you
54:37 - while understanding commands so let's
54:39 - type man
54:40 - and then pwd and press enter and that'll
54:44 - open up the manual for pwd and as you
54:48 - can see the name of it is
54:50 - pwd and print name of current working
54:54 - directory
54:55 - and this is an important command because
54:58 - when you're navigating through files and
55:01 - folders on the linux operating system
55:04 - you can easily lose track of the
55:06 - location that you're at and this command
55:08 - is important because it'll allow you to
55:12 - just simply write this command
55:14 - and it'll show you the location that you
55:16 - add
55:17 - now let's press q for quit and let's go
55:20 - down and run this command now and let's
55:22 - type pwd and this is actually running
55:25 - the command and we can press enter and
55:27 - that'll show you the working directory
55:31 - and remember when i brought up the tilde
55:34 - represents the home directory well
55:36 - everybody's home directory or all users
55:39 - on the operating system will have a
55:42 - folder
55:43 - under the home directory which is just a
55:46 - folder
55:47 - on the file system and it'll be named
55:50 - after your username
55:52 - so let's click here under files and i
55:54 - want to show you guys the location of
55:56 - this
55:57 - so
55:58 - you can see
55:59 - a gui representation of it as well
56:02 - so
56:03 - in front of it looks like i have to go
56:05 - under other locations and that'll bring
56:07 - up computer uh and that's basically what
56:09 - i want to show you guys so we click on
56:11 - computer this is the root directory
56:14 - which is the represented by
56:17 - the forward slash right there and then
56:20 - what we're looking for is the home
56:22 - directory so that's that home directory
56:24 - and then the josh directory so that's
56:27 - essentially the same location as the
56:29 - home location right here you just don't
56:32 - see it they kind of hide it from you
56:35 - but it is there and that's one of the
56:37 - powers of using the terminal you can see
56:41 - the exact location where you are and
56:44 - this goes into absolute path versus
56:47 - relative path which i'll give you a
56:49 - quick overview of what that is
56:51 - and the absolute path is the full
56:54 - location to
56:55 - a file or folder or directory so home
56:59 - and josh
57:00 - and then a relative path
57:02 - is an assumed path
57:05 - which i'll cover a little bit more once
57:07 - we get to the cd command which is the
57:09 - next one
57:11 - now let's open up the cd
57:13 - man page so all we have to do is type
57:16 - man
57:17 - and then cd
57:18 - and basically cd stands for change
57:21 - directory and as you can see certain
57:24 - commands don't have a manual
57:26 - especially if it's a very old command
57:29 - and i wanted to do this on purpose so
57:31 - you guys can see
57:33 - that some commands you may run into
57:35 - won't have a manual but majority of them
57:38 - do
57:38 - when it comes to the cd command is so
57:41 - old and it's been around forever
57:44 - that they assume that most people know
57:46 - understand what it actually means but
57:48 - the cd command is simply a way to change
57:51 - directory that's what cd stands for
57:54 - and just to show you a quick example of
57:56 - how to use the cd command we can just
57:58 - type cd
58:00 - and then let's say we want to go to this
58:02 - home directory we just want to go to
58:05 - that home directory and this is what i
58:07 - was saying about relative path versus
58:10 - absolute path
58:11 - but let's type home
58:13 - and we can press enter and that will
58:15 - take us to that directory uh and as you
58:18 - can see right there
58:20 - the tilde is gone and now it's showing
58:23 - the actual location where you're located
58:26 - and the tilde was simply just a
58:28 - representation of home and josh
58:32 - now this gives me the opportunity to
58:34 - show you guys a relative path which
58:37 - basically means that the system
58:39 - understands where you are which is the
58:42 - home directory right now
58:44 - or the home folder
58:46 - and a relative path would be to change
58:49 - directories to the josh folder within
58:53 - home
58:54 - and so if we press enter there that'll
58:57 - get us back to our home directory and
59:00 - just to add a little more one thing
59:01 - about linux you could do things a number
59:04 - of different ways so there's not
59:07 - one way to actually do certain things
59:10 - because that took us back to our home
59:12 - directory
59:13 - and if we go back to the home folder
59:17 - by typing the path
59:19 - home
59:20 - and press enter
59:22 - we can also simply type cd
59:25 - and that will take us to our home
59:26 - directory as well
59:28 - because by default it will
59:31 - take you back to your home directory no
59:33 - matter where you are it'll take you back
59:35 - to home josh
59:37 - or whatever your user name is
59:41 - now the next command i want to show you
59:43 - guys is the ls command so let's type man
59:47 - and then ls press enter
59:50 - and that will give you the details of
59:53 - this actual command or the manual it
59:55 - says list directory contents and then it
59:58 - also gives you
59:59 - the synopsis on how to actually run it
60:01 - as well as the options
60:04 - and let's hit the q button just to get
60:06 - out of that and i downloaded some files
60:09 - for us to play around with with this
60:11 - command and they're located in another
60:13 - directory so we have to use that cd
60:16 - command like we just used but we just
60:18 - need to type cd
60:20 - and then the folder that it's in is
60:23 - under the documents
60:25 - folder
60:26 - and there's a folder underneath it
60:28 - called ansible saw all we have to do is
60:31 - type ansible
60:33 - examples and press enter and that'll
60:36 - change us
60:37 - our current location is within
60:39 - that ansible directory now let's play
60:42 - around with the ls command so all we
60:44 - have to do is type ls
60:47 - and press enter and that will list out
60:49 - the contents of the current working
60:52 - directory
60:53 - so that's essentially how the ls command
60:56 - works as you can see you can see all the
60:59 - folders that are underneath it as well
61:01 - as the files that are underneath it
61:04 - and if we go back to
61:06 - our explorer
61:07 - and we click in here under documents
61:10 - you'll see that ansible examples folder
61:13 - and you'll see the exact same
61:15 - information that was listed out within
61:18 - the terminal now this will be a good
61:20 - example
61:22 - to show you guys one of the options that
61:24 - you can run with the ls command and this
61:26 - will kind of show you how powerful the
61:29 - ls command is
61:31 - now within this directory there is a
61:33 - readme.md
61:35 - and linux
61:37 - has hidden files and folders just like
61:40 - in the windows operating system as well
61:42 - as mac os
61:44 - but in order to make something hidden
61:47 - linux uses a different designator for
61:50 - hidden files which is a period so any
61:54 - file or folder that has a period within
61:57 - within the front of it
61:59 - lets the linux operating system know
62:00 - that this file is a hidden file and so
62:04 - don't show it unless you have it
62:06 - set to where it shows hidden files
62:09 - and it's readme.md what i'm gonna do is
62:12 - just change it by going under rename
62:16 - and put a period in front of it and that
62:19 - will actually hide that file so we can
62:21 - hit rename as you can see it disappeared
62:24 - so that file is hidden now but if we go
62:27 - back to the terminal
62:28 - and we type ls
62:31 - we'll see that that file has disappeared
62:33 - as well there
62:34 - well a good example of how to use an
62:37 - option with the ls command or any
62:40 - commands in general and that's why it's
62:42 - important to understand how to look at
62:44 - those man pages is that there's a way to
62:47 - show hidden files while using the ls
62:50 - command so we can just type ls
62:52 - and then i know the option off the top
62:54 - my head but it's simply dash a
62:57 - for all so that'll basically show you
63:00 - all the files whether they're hidden or
63:03 - not hidden so let's press enter
63:05 - boom and as you can see it will show
63:08 - that that hidden file and by default
63:11 - when i downloaded this github directory
63:14 - they already had hidden files within it
63:17 - but i just wanted to show you guys how
63:19 - to hide something as well as how to see
63:22 - all the hidden files if you want to see
63:24 - it
63:25 - now there's another option i want to
63:27 - show you guys that you can run using the
63:30 - ls command and one thing i want to do is
63:33 - clear the actual screen and basically
63:35 - all this is doing is moving up moving up
63:38 - all this information so we're starting
63:41 - and it looks like it's a fresh terminal
63:43 - by typing the command clear
63:46 - as you can see it just basically moved
63:48 - everything up
63:49 - now let me run the ls command again
63:52 - just so you guys can see an example of
63:55 - what it shows when you run the ls
63:57 - command with no options but i also
63:59 - wanted to show you another option which
64:01 - is l so if we type ls
64:04 - and then dash l
64:07 - that stands for long or it's a long view
64:11 - and it puts it almost in a table so you
64:13 - can see a whole bunch of information
64:15 - associated with the specific files
64:18 - because right now all you see is just
64:20 - the files in general
64:22 - but you don't have any other information
64:24 - beside that besides just the name of the
64:27 - folder so if we press enter
64:29 - boom that will give us a lot more
64:32 - information as you can see it's broken
64:34 - out in a format that you will start to
64:37 - recognize and understand and this goes
64:39 - into the permissions portion that i'll
64:42 - show you guys later on in the course but
64:44 - as you can see it gives you a whole lot
64:46 - more information about these folders
64:50 - and it also shows you when they was
64:52 - actually created and also like the owner
64:55 - and the group of the actual files
64:58 - so this lets you know that josh
65:00 - the user owns these folders and files
65:04 - now one thing i want to show you guys as
65:06 - well and we're gonna use that l option
65:09 - again but you can also run options
65:12 - together so let's type ls
65:15 - and then dash l
65:17 - and the a option and we don't have to
65:19 - put two dashes
65:21 - we could just put them together and the
65:24 - system will understand it and press
65:26 - enter and that will run it with the all
65:28 - and that will bring in our hidden files
65:30 - and folders so as you can see that git
65:33 - ignore
65:35 - file is there as well as the readme dot
65:38 - md file is there as well
65:41 - now let me show you one more option that
65:43 - you can actually add to this
65:46 - and that is the h option which puts
65:48 - things in a human readable format and if
65:51 - we look at the man page which i'm not
65:53 - going to open up again but the h option
65:55 - is there you'll see it but one thing
65:58 - we're going to run is ls
66:01 - and then dash l
66:03 - and then the a option for all
66:06 - and then the h option and just to kind
66:08 - of explain it before i run it as you can
66:10 - see all these files and folders are in a
66:14 - bytes format that's the actual size of
66:17 - the files right there in this column
66:19 - right here in the middle
66:21 - that is the size of the files and
66:24 - folders now most folders are represented
66:27 - by 4k
66:28 - that's typically the size of a folder no
66:31 - matter how big something is in it it'll
66:34 - show as 4k
66:36 - but this is in the smallest format so if
66:38 - let's say we're looking at a file
66:41 - that's a gigabyte in size
66:43 - well if you run it without the h it'll
66:46 - have the
66:47 - the size in bytes
66:49 - and it'll be hard to kind of figure out
66:51 - what it is so let's press enter and that
66:54 - way i can show you the difference so as
66:56 - you can see it's in 4.0 k it basically
66:59 - puts it in the
67:01 - the size to make it human readable as
67:04 - you can see this file is 31 bytes and
67:07 - the readme dot md is 121 bytes
67:11 - now let's go down and clear the screen
67:14 - again and press the cd button that'll
67:16 - get us back to our home directory and we
67:19 - can clear again right fast just to get
67:21 - it back up to the top and the next
67:23 - command i want to show you guys is the
67:26 - mkdi mkdir which is stands for make
67:29 - directory now let's go to that man page
67:32 - for that by typing man
67:34 - mkdir
67:36 - and press enter and that'll open up that
67:38 - manual for us and as you can see it
67:40 - basically stands for make directories
67:42 - and then there's a whole bunch of
67:44 - options you can go through and check
67:45 - this out at your leisure
67:48 - but let's go through and show you guys
67:49 - how to actually use it so let's press q
67:51 - to get us back to the terminal and let's
67:54 - go to our documents folder by using that
67:56 - cd command we just learned and then type
67:59 - in the documents
68:01 - folder
68:02 - and press enter and as you can see now
68:04 - we're in that documents folder and if we
68:07 - ls using that ls command we just learned
68:11 - we could press enter and we can see that
68:13 - we only have one folder within this
68:15 - directory in the documents directory so
68:18 - let's say we wanted to make another
68:20 - folder within this directory without
68:22 - using the gui
68:24 - well you can use the make directory
68:26 - command so let's type mkdir
68:29 - and then you want to put the name of the
68:32 - directory that you want to create so i'm
68:34 - just created test a
68:37 - test directory
68:38 - and press enter and that'll create that
68:41 - directory for us
68:42 - and majority of the times when you run a
68:44 - command
68:46 - within the terminal no output is a good
68:49 - thing that lets you know
68:51 - that the command ran successfully now if
68:54 - something happened
68:55 - then it would have given us a error
68:59 - and just to give you a quick example of
69:01 - that if we run that same command again
69:03 - to make the same directory name
69:06 - so test with a capital t press enter
69:09 - you'll see it'll give you an error
69:11 - basically saying it cannot create
69:13 - directory test
69:14 - file exists so that means that folder is
69:17 - there now
69:19 - let's use the ls command again so we can
69:21 - see that that folder has been created in
69:24 - that location so if we type ls
69:27 - press enter that'll show you all the
69:30 - folders that are in that directory and
69:32 - you should see that the test directory
69:35 - is there
69:36 - so now let's say we wanted to create a
69:39 - folder underneath it well the easiest
69:41 - way to actually do it is by typing cd
69:44 - and we can go into that test directory
69:47 - and make another folder so
69:50 - and let's type
69:51 - mkdir
69:52 - and then type test2
69:55 - and press enter and it'll create us a
69:57 - folder underneath that directory so if
69:59 - we type ls
70:01 - boom under that director you'll see that
70:03 - there is that folder of test two
70:06 - now that kind of took a little bit
70:08 - longer and like i said in the linux
70:10 - terminal terminal there are multiple
70:13 - ways of scanning a cap i could have made
70:16 - both of those directories at one time
70:19 - and i'll show you guys that by using a
70:21 - option with the make directory and what
70:24 - i'm gonna do is
70:26 - cd from that directory and what i want
70:28 - to do is go back to the
70:30 - documents folder
70:32 - which is where we were where we created
70:34 - the first directory and let's ls again
70:37 - so we can verify where we are
70:41 - or we can also type in that print
70:43 - working directory which i won't
70:45 - print it out because we know what
70:46 - directory in
70:48 - by what's listed here the tilde which is
70:51 - our home directory and then the
70:53 - documents directory
70:55 - now let's make a parent folder and a
70:57 - child folder by using an option
71:00 - with the make directory command
71:02 - and all we have to do is type mk
71:05 - dir and then the option which is dash p
71:09 - and now we can specify a parent in a
71:12 - child directory and you can go as deep
71:15 - as you want when it comes to creating
71:17 - the folders for a full directory tree so
71:21 - the folder i want to create i'll just
71:23 - create uh
71:25 - linux folder
71:26 - linux
71:27 - and then in order to create a folder
71:29 - underneath that folder we just have to
71:31 - put the forward slash
71:33 - and then let's type ubuntu
71:36 - and then let's say we wanted to create
71:38 - another folder underneath that just to
71:40 - take it to another level we could type
71:42 - josh in there
71:44 - and press enter
71:46 - and it will create that full directory
71:48 - tree so if we ls within this directory
71:51 - under documents where we created that
71:54 - linux directory
71:56 - you'll see that we have that linux
71:58 - folder now if we go in
72:00 - cd into the linux directory
72:03 - press enter
72:04 - and if we ls again
72:07 - that'll that assurance that we have that
72:08 - ubuntu folder that we created now if we
72:11 - cd into the ubuntu folder
72:14 - boom and you type ls
72:17 - again and you'll see that it has a josh
72:20 - folder and you guys should get the idea
72:23 - of how that actually works so i'm gonna
72:26 - clear the screen
72:27 - because i wanted to show you the next
72:29 - command which is how to remove a
72:31 - directory now let's cd to go back
72:34 - and then let's cd in back into our
72:37 - documents directory and press enter and
72:40 - let's ls again
72:42 - so you guys can see the folders that are
72:44 - in
72:45 - that directory
72:46 - and the next command i want to show you
72:48 - guys is
72:49 - the remove directory command so let's
72:52 - type
72:53 - man and then rm dir press enter and
72:58 - that's the manual for the remove
73:00 - directory so it says remove empty
73:02 - directories now the word empty is very
73:04 - important when it comes to this command
73:06 - because you have to run an option in
73:09 - order to delete a folder
73:11 - that has
73:12 - either files or
73:14 - directories underneath it and i'll show
73:17 - you guys how to do that once we get to
73:19 - running the remove command so let's
73:22 - press q for quit and the first thing i
73:24 - want to do is go to that test directory
73:27 - and this i just want to show you guys a
73:30 - simple way
73:31 - of deleting a folder so as you can see
73:34 - it has that test.2
73:36 - directory underneath the test
73:38 - directory so in order to remove that
73:41 - test to directory and we know that that
73:43 - folder is empty because we didn't create
73:45 - anything underneath it so all we have to
73:47 - do is type remove
73:49 - dir
73:51 - and then we could just type in test two
73:54 - press enter and that'll remove that
73:56 - directory for us so if we type ls again
74:00 - you'll see that the task 2 directory is
74:02 - no longer there otherwise it would have
74:05 - listed just like up here when we first
74:07 - run the ls directory
74:10 - now let's type cd
74:12 - and go back to our home directory now
74:15 - let's go back into this documents folder
74:17 - because i want to show you guys an
74:19 - option on how to delete a parent and
74:22 - child folder so if we uh press enter
74:25 - there that'll get us back in that
74:27 - documents directory
74:28 - and let's type ls
74:30 - to list out their directory the contents
74:32 - of that directory now we know that the
74:35 - linux
74:36 - folder has multiple folders underneath
74:38 - it
74:39 - and just to show you you cannot remove
74:42 - a directory with a directory i'ma run
74:45 - the remove command against that linux
74:47 - directory that we created and press
74:50 - enter
74:51 - and as you can see it says fail to
74:53 - remove the linux directory because it's
74:56 - not empty so in order to get by that we
74:59 - use the same option that we used to
75:02 - create a parent child folder
75:04 - when we ran the make directory command
75:07 - which is dash p and you'll start
75:10 - learning that a lot of
75:12 - the options are pretty much similar
75:15 - so let's run it now
75:17 - remove
75:18 - dir so rmdi or
75:22 - dash p
75:23 - and then we have to specify
75:26 - all of the directories so if we type
75:28 - linux first
75:29 - and then there is a ubuntu directory
75:31 - underneath that and then the josh
75:33 - directory as well and if we press enter
75:37 - there that will delete that whole
75:39 - directory tree so all the folders
75:42 - underneath it are deleted as well as
75:44 - that folder and if we list this
75:46 - directory again you'll see that it's
75:48 - fully gone
75:54 - okay cool so now that we understand how
75:57 - to
75:58 - manipulate directories now let's hop
76:01 - over and learn how to manipulate files
76:04 - or create files remove files
76:07 - and the first thing we need to
76:09 - understand is that all files on the
76:12 - linux operating system are case
76:14 - sensitive meaning that you can create
76:17 - files with the exact same name the only
76:20 - difference is the case of a particular
76:23 - character within that file
76:25 - and that will be recognized by the linux
76:28 - operating system as a totally different
76:30 - file
76:31 - and this is very different from the
76:33 - windows operating system
76:35 - in windows a file no matter where it is
76:40 - within the same directory can't have the
76:42 - exact same name no matter the case so
76:46 - this is one of the big differences while
76:48 - working with files and linux that you
76:49 - need to understand
76:51 - and then also not to fully confuse you
76:54 - guys but
76:55 - in the linux operating system everything
76:58 - is considered a file
77:01 - even directories
77:03 - they are considered a file by the linux
77:05 - operating system it's a special type of
77:08 - file but it's considered a file
77:10 - nonetheless
77:12 - now the first command i want to show you
77:14 - guys
77:15 - is the file command
77:17 - it's very simple so let's open up the
77:20 - man page for the file command
77:23 - and we can type man
77:25 - and then file and press enter and that
77:28 - will bring up the manual for the file
77:29 - command so it says determines a file
77:32 - type and then here is the synopsis and
77:35 - then also the description of what is
77:37 - that how is actually used and then we
77:39 - can go down to the bottom and it will
77:41 - also show you some options that can be
77:44 - used with the actual file command so
77:46 - let's quit and i'll show you guys some
77:48 - of the basic examples of using the file
77:51 - command and before i type the command i
77:54 - just wanted to explain that the linux
77:56 - operating system does not use extensions
78:00 - to dis determine a file type now there
78:03 - are applications that sit on top that
78:05 - will
78:06 - use the file type to show you what
78:09 - application can open the file but as far
78:12 - as the file type it's not determined by
78:15 - the operating system if that makes sense
78:17 - so this is another reason why the file
78:20 - command is very important especially if
78:23 - you're working in the command line full
78:25 - time
78:26 - now let's go into our documents
78:29 - directory and look at some of the files
78:32 - using the file command
78:34 - so boom and then let's ls this directory
78:38 - uh let's actually go into the ansible
78:42 - examples directory and then let's run
78:44 - the ls command again
78:47 - and let's actually go into another
78:49 - directory right fast within here and
78:52 - what i'm basically looking for is
78:55 - a simple file that we can just play
78:57 - around with and look at the file type so
78:59 - if we ls this directory we should find
79:01 - something yes and so what i'm gonna look
79:03 - at is the readme.md
79:06 - file and the way you use the file
79:08 - command is simply just the command
79:10 - itself which is file and then the file
79:12 - that you want
79:14 - looked at by the file command so let's
79:16 - press enter
79:18 - and that'll give us the information
79:20 - about this actual file as you can see
79:22 - it's a text file and that's basically
79:25 - what amd
79:26 - md file is it's basically markdown a
79:29 - markdown language but it's it's
79:31 - essentially a text file and now now
79:33 - let's run it against this uh
79:37 - rollingupdate.gmo so let's type file
79:41 - and then rolling
79:43 - update.yaml and press enter and let's
79:46 - see what it brings up as well it brings
79:47 - up as a text file as well
79:51 - and let's go up one directory
79:54 - because i want to find another file so
79:57 - let's go to this
79:59 - db folder
80:01 - and let's see what's in here as well i
80:03 - think it's some images
80:05 - so our image directory
80:08 - and let's ls this directory now let's
80:10 - see what's in there so let's look at use
80:13 - the file command to actually look at one
80:15 - of these files now we already know by
80:17 - the extension what it is
80:19 - but this is a handy tool to give you
80:22 - more information about a file now as you
80:26 - can see this is the file name then this
80:28 - is a pn png image
80:31 - and you can look at the resolution of
80:33 - the actual file as well as the color
80:36 - color the rgb
80:38 - rgba
80:40 - and it says non-interlaced
80:42 - but that's a image file basically
80:45 - so that should help you understand the
80:47 - file command
80:48 - now the next command i want to show you
80:50 - is how to actually create files from the
80:53 - command line so let's actually cd
80:56 - or change directory back to our home
80:58 - directory and clear the screen
81:01 - and the command i wanted to show you
81:02 - guys is touch so if we type man
81:06 - and then touch
81:08 - this will give us the manual for the
81:09 - touch command and basically what it says
81:12 - is it's a change file time step
81:15 - but
81:16 - the major purpose for using the touch
81:18 - command is to create files
81:21 - but you can also do other things like
81:23 - change access and modification times
81:26 - as well as you know basically create
81:29 - empty files
81:30 - so let's go down and quit that and show
81:32 - you guys how to use the touch command
81:34 - and let's get back into our documents
81:37 - directory
81:38 - and use the touch command to create a
81:40 - couple files now the basic way to run
81:43 - the touch command is simply touch
81:46 - and then the file name
81:48 - so we can name it file
81:51 - one
81:52 - dot txt
81:54 - press enter and if we lsd documents
81:57 - directory
81:58 - we'll see that file 1 has been created
82:02 - now let's go down and create multiple
82:05 - files
82:06 - using the touch command and basically
82:08 - all you have to do is list out the files
82:11 - so let's create we already have file one
82:13 - let's create file
82:15 - two
82:16 - dot txt
82:18 - and file
82:20 - three dot txt
82:22 - and that's the two files and i'm just
82:24 - basically showing you that you can
82:26 - create
82:27 - more than one file at a time using the
82:29 - touch command you just have to separate
82:31 - them by a space so let's press enter and
82:34 - then list ls directory again
82:37 - and we'll see that all three of those
82:39 - files are there and just like other
82:42 - commands the touch command has has a lot
82:44 - of options where you could change things
82:47 - about a particular file but i won't go
82:50 - through that i just wanted to show you
82:51 - the touch file and this is the simplest
82:54 - way to create empty files on your
82:57 - computer
82:58 - now that we learned how to create the
83:00 - files let's go down and learn how to
83:02 - remove a file which is very simple it's
83:05 - similar to the remove directory command
83:07 - but instead of
83:09 - rmdi or
83:11 - it's just simply rm so let's go to the
83:14 - man page for that right fast so we can
83:16 - type man
83:18 - and then rm press enter it says remove
83:21 - files or directories and it basically
83:24 - covers how to actually
83:26 - use the command as well as a description
83:28 - just like all the other ones and as well
83:30 - as options that you can use so let's
83:33 - quit that and actually do some examples
83:36 - of removing these files that we already
83:38 - created so the basic way to remove a
83:40 - file is simply rm and then the file name
83:44 - which is
83:46 - uh the one the file1.txt which is the
83:50 - first one i want to delete so we press
83:52 - enter and that will delete that file so
83:54 - if we run the ls command we'll see that
83:57 - file1 has been removed
83:59 - now the same way with the touch command
84:01 - you can specify
84:03 - multiple files so
84:05 - all we have to do is type rm
84:08 - and then what i want to do is show you
84:10 - guys one of the options for the remove
84:13 - command which is dash i which is
84:15 - considered the interactive mode and it's
84:18 - basically a way of running the command
84:21 - where it verifies that you want to
84:23 - delete these files so let's uh type in
84:26 - our file names so file two dot txt and
84:31 - file
84:32 - and file
84:34 - three
84:35 - dot txt and press enter and it'll go
84:38 - through and it'll make you verify each
84:41 - one of these files and it says remove
84:43 - regular empty file and you have to
84:46 - respond by typing yes
84:48 - and press enter and i'll delete that
84:51 - file and then we have to type yes again
84:54 - and i'll delete that file so now let's
84:56 - run the ls command again
84:59 - and both of those files have been
85:01 - successfully deleted from the file
85:03 - system
85:04 - now don't you guys remember how i said
85:07 - there's more than one way to skin a cat
85:09 - within the linux terminal well you can
85:11 - also use the remove command to remove
85:14 - directories like it's stated within the
85:16 - man page
85:18 - and i want to show you guys how to do
85:19 - that now
85:21 - by using this test directory that's
85:24 - already there
85:25 - and in order to remove that directory
85:27 - all we have to do is type rm
85:29 - and let's try it without using any
85:32 - options
85:33 - let's type uh test and press enter
85:35 - because i want to show you guys what the
85:38 - response is as far as the error that
85:40 - will pop up when you try to remove it
85:42 - without using any of the options as you
85:45 - can see it says cannot remove test is a
85:48 - directory so in order to remove a
85:50 - directory you can use rm and then there
85:53 - is an option
85:55 - of recursive that's what the or stands
85:58 - for recursive and then force
86:01 - and this will force the remove command
86:03 - to remove that directory so let's press
86:06 - enter and that should remove that
86:08 - directory and we can ls this directory
86:11 - as you can see that test directory is
86:13 - gone now so i just wanted to throw that
86:15 - in there so you guys can see that there
86:17 - are multiple ways of doing things within
86:20 - the command line
86:21 - now let's go down and clear the screen
86:24 - again
86:25 - and the next thing i want to do is show
86:26 - you guys how to copy files so the first
86:29 - thing i want to do is
86:31 - create a directory so we can go make
86:34 - dir and then let's create a directory
86:36 - called test under the documents
86:39 - directory unless ls to make sure that
86:42 - directory was created now let's create a
86:45 - file within the test directory so we can
86:48 - just cd to that directory that's the
86:50 - simplest way
86:51 - and press enter and then ls this
86:53 - directory as you can see nothing is in
86:55 - there so now we can use the touch
86:58 - command so touch
87:01 - and then file
87:02 - one dot txt and press enter that'll
87:07 - create that file within the directory
87:09 - and as you can see it's listed there
87:11 - once we run the ls command
87:13 - now let's say we want to copy that file
87:16 - within that same location well all we
87:19 - have to do is type the copy command
87:21 - which is cp now the first thing before i
87:23 - copy i want to show you guys the man
87:25 - page for it so man copy
87:28 - basically copy files and directories and
87:31 - then all the options that you can use
87:34 - with the command so let's go down and
87:36 - quit that and let's run the command and
87:38 - and do some examples so all we have to
87:40 - do is type cp
87:42 - and then you want to specify the file
87:43 - you want to copy
87:45 - and then you want to specify where you
87:47 - want it and the file name so we want it
87:50 - in the same directory so we don't have
87:52 - to type anything before the file name we
87:54 - can
87:55 - name it file
87:57 - one
87:58 - cp dot txt and press enter and then if
88:03 - we ls this directory
88:06 - we'll see that we have the copy file and
88:09 - the original file that we copied from
88:12 - now let's say we wanted to copy one of
88:14 - these files to a specific directory
88:17 - within the file structure all you have
88:19 - to do is type copy
88:22 - the cp command and then let's copy that
88:25 - same file so file one dot txt and we
88:29 - want to copy it to a specific location
88:30 - let's copy it and put it within our
88:34 - documents directory now we can just type
88:36 - the absolute path that way we know for
88:39 - sure we're getting the file in the
88:41 - correct location
88:42 - so we could put the forward slash which
88:44 - is our roots and then the home directory
88:47 - and then josh and then let's say we want
88:50 - to put it in that documents directory
88:52 - like we stated and that's all we pretty
88:54 - much have to do unless we want to rename
88:56 - the file and we'll just place it in that
88:58 - location by pressing enter and if we ls
89:02 - this directory you'll see that file one
89:04 - is still there but we can ls a specific
89:08 - directory
89:09 - by typing the full path so we can go
89:11 - forward slash home
89:13 - josh
89:14 - and then documents
89:16 - and press enter and that will show us
89:18 - that file one that we put in that
89:21 - location
89:22 - now let's go up one directory
89:25 - and the way you go up one directory if i
89:27 - didn't show you guys this but it's cd
89:30 - change directory dot dot and that'll
89:32 - take you up one directory as you can see
89:34 - we went up one directory in a tree and i
89:37 - believe i forgot to explain that when we
89:39 - covered the cd command i just wanted to
89:41 - keep it simple and not confuse people
89:44 - but that is the way you move up one
89:47 - directory while using the cd command now
89:50 - back to the copy command
89:52 - if we want to copy
89:54 - a directory it's a little bit different
89:57 - we have to use an option of dash or in
90:01 - order to copy that directory as well as
90:04 - all the files within it so all we have
90:06 - to do is type cp
90:08 - dash or
90:10 - and then we want to copy that test
90:11 - directory
90:13 - that test directory
90:16 - and i want to put it in the same
90:17 - location so it's the exact same thing
90:19 - all we have to do is type out a name so
90:21 - let's go test
90:25 - and then cp that's the name of the
90:27 - directory and press enter and if we ls
90:31 - our documents directory we should see
90:33 - two folders in there now one of test and
90:36 - one of test cp which is the copy now
90:39 - let's ls that directory as well so let's
90:42 - go
90:43 - test cp because i wanted to show you
90:45 - guys
90:46 - that it does have those files in there
90:48 - that we created under test so that
90:51 - should be a clear example of how to
90:53 - actually use the cp command
90:56 - now let me clear the screen right fast
90:59 - because the next command i want to show
91:01 - you guys
91:02 - has two features involved with it and
91:06 - it's basically the
91:07 - move command you can move files and then
91:11 - you can also rename files and this is
91:14 - what a lot of people use the
91:16 - move command for for instance if you
91:19 - have a file named file 1
91:21 - and you want it to be named file 2
91:24 - within the same directory a lot of times
91:26 - people will use the move command to
91:28 - actually rename those files within the
91:31 - command line because it's basically a
91:33 - faster command it's just two letters in
91:36 - order to rename a file so before i show
91:39 - you the command let's go to the man page
91:41 - as normal
91:43 - and the move command
91:45 - let's press enter
91:46 - and as you can see in the man page it
91:48 - even says that
91:50 - you can rename files with it and it also
91:53 - goes through the description as well as
91:56 - all the options for using the command
91:59 - but i'm gonna show you guys the simplest
92:00 - ones if you want to get more advanced
92:03 - then definitely check out the man page
92:05 - but let's quit
92:06 - and then let's ls this documents
92:09 - directory again because i want to show
92:11 - you guys the simplest way to run the
92:13 - move command by renaming file1.txt
92:17 - and i'm going to do exactly that example
92:20 - that i said a few minutes ago so let's
92:22 - just type move
92:24 - and then file name uh file1.txt
92:28 - and we want to rename it to file2.txt
92:32 - and we'll leave it in that same
92:34 - directory so we don't have to put the
92:35 - path in front of it and we can press
92:37 - enter and unless ls this directory
92:41 - and we'll see that file one is now file2
92:45 - so that's in a simple example of using
92:48 - the move command
92:50 - to rename files and then you can also
92:52 - move the file through that process by
92:55 - specifying a absolute path
92:58 - which i'll show you guys now
93:00 - and so let's type move
93:03 - and then let's capture that file to file
93:06 - and we want to move it to the
93:09 - test directory
93:11 - and then let's also rename it to file
93:14 - three
93:15 - just to show you guys you can do all
93:17 - this in
93:19 - one command so let's press enter
93:21 - and that will move file to and if we ls
93:24 - this directory just to show you guys
93:25 - that it's gone
93:27 - now let's lsd test directory
93:30 - and press enter and that'll show us that
93:33 - we have that file three in there so
93:36 - basically we've moved and renamed at the
93:38 - exact same time by using one command and
93:42 - you can also do the exact same thing for
93:44 - directories with the move command so
93:47 - let's lse documents directory again and
93:49 - what i want to do now is rename the test
93:53 - cp to test pc and i apologize i typed
93:58 - the wrong command i put the remove
94:00 - command in there which i meant to put mv
94:03 - so apologize for that but let's go down
94:06 - and move forward but we're going to run
94:08 - that same command i'm just going to
94:10 - change it to the right command and i'm
94:12 - glad that didn't work
94:15 - because it's a directory i would have
94:17 - lost that file
94:18 - or directory
94:20 - but anyway let's run it now and we
94:22 - should be good to go so let's ls this
94:24 - directory now
94:26 - and it should be test pc
94:29 - so i apologize for that and even your
94:32 - instructor makes mistakes
94:34 - but let's keep rolling right on with it
94:36 - and by showing you guys all these
94:38 - commands you should be able to
94:39 - manipulate
94:41 - files within the linux file system so
94:44 - make sure you practice these commands
94:46 - because once you master these commands
94:48 - then there are more commands and more
94:50 - options that you can use in the future
94:58 - okay cool so now that we understand how
95:01 - to work with directories and files now i
95:05 - want to show you guys how to work with
95:07 - the content within a file and there are
95:09 - a couple commands that i wanted to show
95:11 - you guys that will help you do this
95:14 - now the first command i want to show you
95:16 - guys is the head command and as always
95:20 - with every command i will show you the
95:22 - man page first so
95:24 - head
95:25 - press enter as you can see it outputs
95:28 - the first port of a file now the purpose
95:31 - of this command it will print out the
95:33 - first 10 lines
95:35 - of a file and it'll do it right within
95:38 - the terminal
95:39 - and this is so you can get an idea of
95:42 - what's actually in the file so let's
95:44 - quit the man page right fast by pressing
95:46 - q
95:47 - and let's find a file to actually
95:50 - use the head command on so let's lsd
95:52 - documents directory and i may need to go
95:55 - into another directory yeah let's go
95:56 - into the ansible directory again press
96:00 - enter and ls again so we can list out
96:03 - the contents
96:04 - and let's go down and
96:06 - run the head command against the
96:08 - readme.md file
96:10 - so let's just go down type head
96:13 - and then read
96:15 - me dot md and press enter as you can see
96:18 - it pulls the first 10 lines
96:21 - now it's a little hard to count but the
96:23 - spaces are actually a line as well so
96:27 - that's why it shows content on blank
96:29 - lines as well as lines with content on
96:33 - it but it's the first
96:34 - 10 lines of the actual file now there is
96:38 - an option
96:39 - where you can show a certain amount of
96:41 - lines let's say you only want to see the
96:44 - first
96:45 - five lines of this same file so let's
96:48 - press up
96:49 - let's actually run that command again
96:51 - and run
96:53 - dash five
96:55 - and press enter and that will show you
96:56 - the first five lines of that line
96:59 - instead of the default of ten so that's
97:01 - a cool way of actually using the head
97:04 - command and now that we know how to use
97:06 - that command i want to show you another
97:08 - command that's very similar to this one
97:11 - and the difference between
97:13 - this command the head command and the
97:15 - command i'm about to show you is that it
97:17 - shows you the last 10 lines of a file so
97:20 - it's beneficial to use both of these
97:22 - commands
97:24 - if you're trying to figure out what's in
97:26 - a file without opening up the full file
97:29 - and the command i'm talking about is the
97:31 - tail command so we can type man
97:35 - man
97:36 - tail
97:37 - and press enter
97:39 - and as you can see it says outputs the
97:41 - last part of a file and the exact same
97:44 - thing as the head command but it's the
97:47 - total opposite while showing you the
97:49 - last 10 lines of the file so let's go
97:52 - down quit that
97:53 - and let's run the tank tail command
97:55 - against that same
97:57 - file
97:59 - and press enter
98:01 - and as you can see it pulls the last 10
98:04 - lines of that actual file
98:06 - and just so you guys know this file
98:08 - doesn't have much data in it i believe
98:11 - it has about 10 lines in it that's why
98:15 - it's showing the exact same information
98:17 - as the head command
98:18 - so let me find another command to give
98:20 - you a better example so we can go into
98:26 - the lamp
98:27 - uh directory
98:30 - and press enter and let's ls this
98:32 - directory and let's find a better
98:35 - file to actually look at and let's look
98:36 - at the site.yaml file and let's run the
98:40 - head first so ahead against the site
98:43 - file and press enter as you can see it
98:46 - pulls in the first 10 lines now
98:49 - let's run detail command the exact same
98:52 - way
98:54 - and press enter and you'll see that the
98:56 - information is different and that's the
98:58 - last 10 lines of that file
99:01 - and i wish i would have found this file
99:03 - first because it's a better example as
99:05 - you can see
99:06 - the information is totally different
99:08 - from when we ran it the first time on
99:10 - the original file which only had a
99:13 - little bit of content in it
99:15 - now let's go down and clear right fast
99:18 - and i wanted to show you another command
99:21 - which is the cat command
99:23 - and since we're deep in a directory
99:25 - let's go down and make the terminal full
99:27 - screen that way you guys can actually
99:29 - see everything and let's clear the
99:31 - screen again
99:32 - and run man
99:35 - cats which is command i'm about to show
99:37 - you now and cat is short for concatenate
99:40 - files and basically what this command is
99:43 - used for is to print out
99:45 - all the content of a file
99:48 - not just the first 10 lines not just the
99:50 - last 10 lines but the full
99:52 - file itself so let's quit that and let
99:55 - me show you guys how to actually run
99:57 - that now so we could just run cats
100:00 - and then the site
100:02 - dot yaml file press enter and as you can
100:05 - see it pulls in that whole file
100:08 - and we can scroll up and see it but as
100:11 - you can see that's the full file right
100:13 - there so that's just a quick way of
100:15 - printing out everything now the cat
100:18 - command as i stated
100:20 - stands for concatenate so you can take
100:24 - information or content from multiple
100:27 - files and concatenate that information
100:30 - into one big file using the cat command
100:33 - that's one of the
100:35 - more advanced features of the cat
100:37 - command so let me show you guys how to
100:40 - actually do this
100:41 - by creating a couple files and then i'll
100:45 - concatenate the information within each
100:48 - one of those files into one big file now
100:51 - let's
100:52 - let's cd
100:53 - and then clear the screen right fast so
100:55 - i can bring everything up to the top so
100:57 - you guys can see now let's change
100:59 - directories to our documents directory
101:02 - press enter and let's ls this directory
101:05 - because i'm gonna have to create a
101:06 - couple of files right fast
101:09 - and i haven't shown you guys the echo
101:11 - command but this is the simplest way of
101:14 - actually creating
101:15 - a file along with the content in it so
101:18 - let's first look at the man page for
101:20 - echo i just wanted to show you guys
101:23 - uh this right fast but echo
101:26 - press enter and it'll display a line of
101:28 - text this is it's a simple command
101:30 - that's been around for a very long time
101:33 - that allows you to display information
101:35 - and really all we have to do is type
101:37 - echo
101:39 - and then we can type some text so
101:41 - and then i want to write d
101:43 - and put it into an actual file
101:46 - within this directory and all we have to
101:48 - do is type
101:49 - text one or whatever you want to name it
101:53 - dot txt
101:54 - and press enter
101:56 - and that will echo d
101:59 - into that file name as well as create
102:01 - that file for us and if we ls this
102:04 - directory right fast just so you guys
102:06 - can see you'll see that text one is
102:08 - there
102:09 - and if we cut out that file
102:12 - and i just wanted to show you guys this
102:14 - we cut out that file
102:20 - and press enter you'll see that the
102:23 - word d is in there now let's run the
102:26 - same exact command uh echo
102:29 - and let's put something different in
102:30 - there so
102:34 - and just so you guys know what i'm doing
102:35 - is pressing the up arrow that'll show
102:38 - you commands that you've already ran
102:40 - but
102:42 - let's see the
102:45 - and let's write big to this actual file
102:49 - and let's press enter and that's text
102:51 - too
102:52 - and let's run it one more time
102:54 - and let's create a file called test
102:58 - text three
103:01 - and let's put a word in here as well the
103:05 - big
103:06 - apple
103:07 - so it'll write apple to that form to
103:10 - that file
103:11 - now let's cut out each one of those
103:13 - files right fast so you guys can see
103:15 - exactly what's in each one of those
103:17 - files
103:18 - and we'll start with test
103:21 - one
103:22 - press enter
103:23 - and then test two
103:26 - and then
103:27 - test three
103:29 - or text three
103:31 - press enter and so as you can see it
103:33 - says the big apple
103:35 - now watch this if we run the cat command
103:38 - against all three of those commands
103:40 - we'll see all the text printed out from
103:43 - each one of those text files
103:45 - so let's type cat
103:47 - and then we can type test
103:50 - text
103:51 - one
103:52 - and then text
103:55 - two
103:56 - and then text
103:58 - three
103:59 - and press enter as you can see it puts
104:01 - it all together so that's what the king
104:03 - kat that's what concatenates means it'll
104:06 - put
104:07 - the content of multiple files
104:10 - into one printout and you can also
104:13 - extract it all to another file which is
104:16 - a little bit more advanced but i just
104:18 - wanted to show you that it is possible
104:20 - to do this
104:21 - by simply we can run the same exact
104:24 - command but instead of it outputting
104:28 - to the terminal i wanted to output that
104:30 - information to a file so let's create
104:33 - another file and all we have to do is
104:35 - type the
104:36 - greater than sign
104:38 - and we can name the file all
104:41 - dot
104:42 - txt
104:44 - and press enter
104:46 - and if we ls this directory we'll see
104:48 - that we have another file now called all
104:52 - so if we cut out the all file
104:54 - right fast we'll see that that text is
104:57 - there so it basically took the text from
105:00 - text 1 text 2 text 3 and put it all into
105:04 - one file which is super cool and just
105:07 - think of the possibilities by doing
105:09 - something like this if you have a
105:11 - file with 100 lines in it or a couple
105:14 - files with 100 lines in each one of them
105:17 - and you want them to be combined you can
105:20 - use this simply the cat command in order
105:23 - to do this now let's say you want to
105:25 - create a file and you want to type the
105:27 - content within that file wanna show you
105:30 - guys the simplest way by using the cat
105:32 - command this is another feature of the
105:35 - cad command and let me clear the screen
105:37 - so we can get
105:39 - it back up to the top but let's
105:42 - let's start off by creating the file
105:44 - using the cat command and what we need
105:46 - to do is put the greater than sign
105:48 - and then we can name the file whatever
105:50 - we want it so let's name this file
105:54 - one
105:55 - dot txt
105:57 - and press enter
105:59 - and then as you can see the cursor is
106:01 - stuck to the left-hand side that's
106:03 - because we're using the cat command to
106:06 - create the file and then write the
106:09 - content into the file so all we have to
106:11 - do is type in whatever we wanted to say
106:15 - so i could type i
106:17 - am
106:18 - having
106:19 - a
106:20 - good
106:21 - day
106:22 - period and then you can actually add
106:25 - more than one line you don't have to
106:26 - keep typing you just press enter and it
106:29 - will take you to the next line and then
106:31 - you can continue typing i
106:33 - hope
106:34 - you
106:35 - are
106:36 - too
106:38 - now let's say you're finished done
106:39 - writing everything you want within this
106:41 - file
106:42 - in order to save it all you have to do
106:44 - is hold the control button and press d
106:50 - and it'll drop you back down to the
106:51 - command line now i know that's kind of
106:53 - weird where to put it but let's press
106:55 - enter just to get it out the way
106:57 - and now let's actually catch
106:59 - that file right fast so we can see
107:02 - exactly what's in it
107:04 - and press enter and that'll cut out that
107:06 - information for us and i should have put
107:08 - a return at the end of it that's why
107:10 - it's putting the the terminal prompt
107:12 - right after the end of the file which
107:14 - makes it kind of look weird but
107:17 - that's essentially how it works
107:20 - but with if you follow that process you
107:22 - can create the file
107:24 - write in the content that you want to
107:26 - write into the file and then save the
107:28 - file in that location now let's press
107:30 - enter again because i want to ls this
107:32 - directory because i don't think we i
107:34 - showed you that the file was actually
107:36 - there but as you can see file one that's
107:38 - that actual file
107:40 - now there's another cool feature of cat
107:43 - that i want to show you guys you can
107:45 - actually copy files or you can use it as
107:48 - a copy for a particular file
107:51 - and if we cut out
107:53 - uh file one again that way we can look
107:56 - at the text again so you guys can
107:58 - actually see what's in it
107:59 - we can actually copy that file and
108:01 - rename it something else by using the
108:04 - cat command like this so we can just
108:06 - type cats
108:08 - file
108:09 - one
108:10 - and then all you have to do is put the
108:12 - greater than sign
108:13 - and then name the file whatever you want
108:15 - to so i'll just name it file 2 dot txt
108:20 - and press enter
108:22 - and if we ls this directory again you'll
108:24 - see that there is a file 2
108:26 - and if we run the cat command against
108:29 - file 2
108:30 - that will show us
108:32 - the contents of that file which is
108:35 - exactly the same as file 2.
108:38 - all right cool so now we understand that
108:40 - let's uh clear the screen because i
108:42 - wanted to show you another command that
108:45 - helps when working with files now this
108:47 - is typically used
108:49 - when you have a very large file that
108:51 - you're trying to go through and look at
108:54 - and this command is called more so we
108:56 - can type man
108:58 - and then more
109:00 - and this will give you information about
109:01 - it but basically it just parses out data
109:04 - to your terminal
109:06 - but it allows you to tab through
109:09 - different pages and i'll show you guys
109:11 - how to actually use it once we get into
109:14 - it
109:14 - and i found a quick file let's see under
109:18 - the ansible directory
109:20 - and then the lamp
109:22 - directory hp i believe proxy
109:25 - press enter unless ls is directing i
109:28 - just want to try to find it uh in the
109:30 - provision.yaml file so let's run more
109:34 - against provision
109:37 - dot yaml file press enter and as you can
109:40 - see
109:41 - at the bottom now this is by running
109:44 - more
109:44 - more shows you the percentage of the
109:46 - file that you're at
109:48 - as well as you can tab through
109:51 - per page instead of going line by line
109:54 - with the cat command where it just kind
109:56 - of prints out everything let's say you
109:58 - want to look at everything like uh page
110:00 - by page if you hit the space button bar
110:03 - that'll go to the next page and if you
110:05 - hit it again that'll go to the end of
110:06 - the page
110:08 - and that's a super beneficial command as
110:10 - well now there is an alternative that
110:13 - some people like to use which is less
110:16 - and i'll show you guys that now using it
110:18 - against that same command but
110:20 - first let's go to the main page for less
110:22 - just so you guys can see it but it says
110:24 - the opposite of more so let's type it in
110:27 - and just run it right fast so let's go
110:29 - less
110:31 - and then the provision and file again
110:34 - just press enter as you can see it's
110:36 - pretty much the same you could tab
110:38 - as well and you can go back up you know
110:41 - what i'm saying and back down you can go
110:43 - line by line as well
110:45 - with this command but if you hit space
110:46 - that'll take you down to the end
110:48 - and all you have to do is hit the q
110:50 - command that'll quit the actual command
110:53 - but that's essentially a higher overview
110:56 - of the less command and the more command
111:00 - and this concludes all the commands i'll
111:02 - show you
111:03 - that'll allow you to manipulate the
111:05 - content within
111:07 - a file on the linux operating system so
111:10 - let's move on to the next segment
111:17 - okay guys so in the next segment i want
111:19 - to show you guys a high level overview
111:22 - of how the linux file six system is
111:25 - structured and i'll show you by
111:27 - basically bringing up the full file
111:29 - structure in the terminal and then break
111:32 - down each directory underneath the file
111:35 - system so let's go down and hit cd
111:38 - and then the forward slash and this
111:40 - represents the root of the file system
111:44 - and every file
111:46 - included within the operating system is
111:48 - stored under this one location it's
111:51 - similar to the windows operating system
111:54 - how everything is structured under the c
111:58 - drive well it's the same thing but a
112:00 - little bit different within the linux
112:02 - operating system so let's press enter
112:05 - there and what i want to do is run the
112:08 - ls command and then i'll run the dash l
112:12 - option and this will give us the full
112:14 - structure of the operating system and
112:17 - i'm gonna scroll up right fast a little
112:19 - bit just to put it all in
112:21 - so that everything is listed out
112:24 - and i'll go through and break down each
112:26 - one of these folders and like i said
112:27 - this will be a high
112:29 - overview
112:30 - because i don't want to go too deep and
112:32 - confuse new users of the linux operating
112:34 - system i just basically want to explain
112:38 - what a lot of these folders are used for
112:41 - and this will give you a better
112:42 - understanding of how the operating
112:44 - system works
112:46 - okay and the first directory i want to
112:48 - show you guys is the bin directory and
112:50 - this is where most of your binary files
112:53 - are stored
112:55 - now this means linux terminal commands
112:57 - and core utilities
112:59 - such as the cd command which we just
113:01 - used uh the pwd command which is print
113:06 - working directory which i showed you
113:07 - guys a little earlier as well as the
113:10 - move command and so on pretty much this
113:13 - is where all those binary files are
113:15 - stored now the next directory is the
113:18 - boot directory and this is a very
113:21 - important directory and you don't want
113:24 - to go playing around in this directory
113:26 - this is where all the needed files for
113:28 - the
113:29 - for linux to boot or kept
113:32 - and a lot of people that are used to
113:34 - running linux they typically separate
113:37 - this directory on a different partition
113:40 - from the remainder of the operating
113:42 - system especially when you're working or
113:45 - doing dual booting
113:47 - but that's a little high level for you
113:49 - guys i just wanted to give you guys a
113:51 - overview of what this folder is for and
113:54 - just a a little bit more of an idea of
113:56 - what's
113:57 - located in this directory is the boot
114:00 - files as well as grub most of the time
114:03 - which is a small program that allows you
114:06 - to select the operating system and boot
114:09 - the operating system now the next
114:11 - directory is cd-rom and that's obviously
114:14 - where your cd drive is stored so anytime
114:17 - you put a disk into your linux operating
114:20 - system it'll show up under cd-rom now
114:22 - the next directory i want to really talk
114:24 - about is the dev directory that's the
114:27 - next directory down and this is where
114:29 - all your physical devices are mounted so
114:33 - all your hard drives uh usb
114:36 - optical drives and the reason i say
114:39 - optical drive cd drives because they can
114:42 - be mounted under this location or stored
114:45 - under this location as well it just all
114:48 - depends on the different distributions
114:50 - different distributions store things in
114:52 - different places sometimes they have a
114:54 - extra directory here and there that's
114:57 - why i didn't talk much about the cd-rom
114:59 - folder which is obviously that's what
115:02 - that's for the cd drive but typically
115:04 - that's stored and depending on the
115:06 - distribution the cd-rom drives are
115:08 - stored under dev as well but all your
115:11 - hard drives are stored in this location
115:14 - they're they're actually mounted from
115:16 - that location and also if you have like
115:18 - multiple partitions on a single drive
115:21 - those will be stored under this location
115:23 - as well and you'll see that once you
115:26 - start really diving in
115:28 - how to partition a hard drive for your
115:31 - linux operating system now the next
115:33 - directory i want to explain to you guys
115:35 - is the etc directory and it basically
115:38 - stands for etsy but this is where all
115:40 - the configuration files are stored and
115:43 - this is for all the applications that
115:46 - are installed on the linux operating
115:48 - system so let's say you want to install
115:50 - an apache server well they'll have
115:52 - configuration files stored under the etc
115:56 - directory or if you want to set up my
115:58 - sql or if you're trying to modify your
116:01 - ssh connections or your configuration
116:04 - for your ssh server then the
116:06 - configuration file is underneath there
116:09 - and most of your configuration files
116:11 - have an extension of conf so c-o-n-f
116:15 - okay and so the next directory is
116:18 - basically the home directory and i kind
116:20 - of explained this when i was showing you
116:23 - guys how to navigate the linux file
116:25 - system by using the cd command well the
116:27 - home directory is where all the user
116:30 - name folders are stored so anytime a new
116:33 - user is created on the system depending
116:35 - on if that option is selected or not
116:39 - a home folder is actually created and
116:42 - this is where all your documents and
116:45 - photos and video files they're all
116:47 - stored under that user's
116:50 - home directory which is stored under
116:52 - this home folder
116:54 - now the next folder is the live
116:56 - directory and this is where binaries are
116:59 - kept and a lot of times you'll notice
117:01 - that many that many times when
117:03 - installing linux packages additional
117:06 - libraries are automatically downloaded
117:08 - and they almost always end up in the
117:12 - live directory somewhere and just to
117:14 - simply put it these files
117:16 - or files that are needed for your
117:19 - program to work on linux and just to
117:21 - relate it to windows you can think of
117:23 - this folder as somewhat an equivalent of
117:27 - the program files folder on windows but
117:30 - keep in mind it's not 100
117:32 - exactly the same and just to explain
117:34 - these other folders that are in there
117:36 - that says live live 32 is basically if
117:40 - you have a 32-bit
117:42 - piece of software this is where the
117:44 - libraries are stored for that as well as
117:46 - system
117:48 - 64-bit software that is where those
117:51 - libraries files are stored as well and
117:53 - then there's a lib x32 and this contains
117:57 - library files as well now the media
117:59 - directory which is the next directory
118:01 - i'm going to skip over that lost and
118:02 - found that's just a typical folder
118:05 - that's in aext4 partition but the media
118:09 - directory is basically another place
118:11 - where external devices such as usb
118:14 - drives whenever you plug them in they'll
118:16 - they'll pop up in there or you can mount
118:18 - them in there and it all depends on the
118:21 - linux distribution sometimes you may not
118:23 - even see that media directory you'll see
118:25 - a mount directory which is the next one
118:27 - i want to show you guys and this is
118:29 - basically a placeholder folder used for
118:32 - mounting folders or drives and this is
118:35 - where i typically mount external drives
118:38 - or remote drives to my operating system
118:41 - and like i said it is simply a
118:43 - placeholder and a lot of times i'll
118:45 - create multiple folders underneath that
118:48 - depending on where i'm connecting to
118:50 - let's say i'm connecting to
118:52 - a shared drive or i want to mount a
118:55 - shared drive on another server that's
118:58 - within my network and i wanted to always
119:01 - to that location i'll create a folder
119:03 - for it and i'll name it like the server
119:05 - name or something or the share name and
119:08 - then i'll set it up where that share
119:10 - drive is mounted at that location every
119:13 - single time the system boots up now the
119:15 - next folder is the opt directory and
119:18 - this is for optional software for the
119:20 - system and that's the simplest way to
119:22 - put it and i never have used the app
119:25 - directory for anything but it all
119:27 - depends on the distribution you're using
119:30 - as well now the prod directory is an
119:33 - important directory as well this is the
119:35 - processes folder where a lot of systems
119:38 - information is represented as files
119:41 - and it basically provides a way for the
119:43 - linux kernel to send and receive
119:46 - information from various processes
119:49 - running in the linux environment now the
119:51 - next directory is the root directory and
119:54 - this is different from the actual root
119:57 - location this is basically the home
120:00 - directory for the root account you know
120:03 - like we have the home folder and then
120:04 - josh where there is a built-in user
120:08 - called root that has full permissions to
120:10 - pretty much everything on the system
120:12 - with ubuntu they have this account
120:14 - disabled by default but it has its own
120:17 - home directory so if you ever logged
120:19 - into that root account which i don't
120:22 - recommend this is where the files are
120:24 - stored for the root directory so if you
120:26 - download something uh it'll default to
120:29 - the root directory while you're running
120:32 - as the root user now the next directory
120:34 - is the run directory and this is where a
120:36 - lot of drives are auto mounted
120:39 - when you like plug in a usb drive and
120:42 - this is something that's really only
120:44 - relevant to desktop environments so if
120:46 - you have a desktop environment installed
120:48 - a lot of times they'll have the run
120:51 - directory under your route where a lot
120:53 - of those drives that are like auto
120:56 - mounted to the system they'll pop up
120:58 - under run and you can unmount them from
121:00 - that location and let's say you want to
121:02 - mount them under the mount directory or
121:04 - the m t directory then you can easily do
121:07 - that but they put that there for newer
121:10 - modern linux distributions so that when
121:13 - you plug in a usb drive it'll
121:15 - automatically mount at that location i
121:18 - don't normally use it but it is there
121:20 - for a lot of users that are
121:22 - transitioning from different operating
121:24 - system just to make it more user
121:26 - friendly now the next directory is s bin
121:29 - and it's similar to the bin directory
121:31 - except that is dedicated to certain
121:33 - commands that can only be run by the
121:36 - root user or super user and this
121:39 - directory kind of depends on the
121:42 - distribution as well now the temp
121:44 - directory this is basically where files
121:47 - are temporarily stored and most of the
121:49 - time when you shut down the system it'll
121:52 - delete those files from that directory
121:54 - and i actually missed one of the
121:56 - directories and that's snap snap is a
121:59 - new way of actually installing
122:00 - applications by somewhat containerizing
122:03 - the application uh using they call it
122:06 - snap packages and you'll see that a lot
122:08 - in ubuntu systems but this is where that
122:11 - is stored now the us or directory it
122:14 - basically contains files and utilities
122:16 - that are shared between users that's why
122:19 - i call it i i just said the usr but it's
122:21 - i typically call it the user directory
122:24 - that's simply what that is it's just
122:26 - utilities that are shared between users
122:28 - and then the var directory is basically
122:31 - where variable data is kept and it's
122:34 - usually system logs but can also include
122:38 - other types of data as well like for
122:40 - instance if you're running this thing as
122:41 - a server then the default location for
122:44 - apache is var and then there's a folder
122:47 - underneath that called www and then html
122:50 - so that's where that's actually stored
122:52 - as force files and then they also have
122:55 - log files within there like if you're
122:57 - running a server and you have an apache
122:59 - server setup then you typically
123:01 - will see your log files under war and
123:04 - there's a directory called log and then
123:06 - also under the root directory you'll see
123:08 - a swap file uh depending on if you have
123:11 - swap on the system and typically if you
123:15 - install it without making any changes or
123:17 - modifying the way the system is set up
123:20 - you just take the defaults when you're
123:22 - going through the installation then
123:23 - you'll typically have a swap file
123:26 - and this is just an extra place to store
123:29 - things that are stored in memory that
123:31 - haven't been accessed for a while so
123:33 - let's say you have a browser open but
123:35 - then you go over and start working on
123:37 - something else and you eventually get to
123:38 - the point where it needs to store your
123:41 - system needs to store
123:43 - some information that you have open that
123:45 - you're not currently using well
123:47 - sometimes it'll write it to the swap
123:48 - file so that's essentially what that is
123:51 - but that's pretty much the linux file
123:53 - structure i just wanted to cover it this
123:55 - way just to make it super simple where i
123:57 - just talked about each one of the
124:00 - directories and you can see them on the
124:02 - system as i go through them so let's go
124:04 - down and move on to the next section
124:11 - in this next segment i want to cover
124:13 - some systems information commands that
124:16 - you can run within the linux terminal
124:18 - now when you have a desktop environment
124:21 - there are gui tools that can provide
124:23 - most of the information that i'm going
124:25 - to show you within the command line
124:28 - but it's a good idea to at least
124:30 - understand how to get this information
124:32 - from the command line and just to show
124:34 - you the gui version of kind of what i'm
124:37 - going to show you
124:38 - from the command line i just wanted to
124:40 - open it up right fast you can basically
124:42 - go
124:43 - hit those activities and then you can
124:45 - search in here
124:46 - for a system
124:48 - and you should bring up the system
124:49 - monitor and like i said this will give
124:51 - you a lot of information so this is the
124:53 - system processes that are running on the
124:56 - system
124:57 - uh and this is similar to
124:59 - opening up the computer management on
125:02 - windows
125:03 - systems but you can see your resource
125:05 - information as well
125:07 - uh file system information as well so
125:09 - hard drives and all that good stuff
125:11 - now i'm going to show you how to look at
125:13 - all this information
125:15 - from the command line
125:17 - because all this information is pulled
125:19 - from some of the folders that i actually
125:22 - showed you
125:23 - within the linux file system
125:25 - and it's just put in a graphical user
125:27 - interface
125:28 - so you guys can see it a little bit
125:30 - better but you can easily do the exact
125:32 - same thing from the command line which i
125:35 - will go down and show you now so let's
125:36 - go down and close this
125:38 - and open up the terminal
125:41 - and let's zoom in again and sorry i
125:43 - closed it but i need to
125:46 - show you guys the gui version of
125:49 - the commands i'm about to show you now
125:52 - let's start off with a couple basic
125:53 - commands like for instance i want to
125:56 - show you guys uptime
125:58 - up time so we can type man
126:01 - man
126:02 - up time
126:04 - just to show it to you but it basically
126:05 - tells you how long the system has been
126:08 - running so let's quit that and let's run
126:10 - up time
126:12 - and press enter and that's basically the
126:14 - information that it gives you it gives
126:16 - you the time that the system has been up
126:18 - as well as the amount of users and the
126:21 - load average of the cpu which is some of
126:24 - the information that's pulled
126:26 - into
126:27 - that system monitor
126:29 - now the next command i want to show you
126:31 - guys is the free command and this deals
126:33 - with memory so we can type man
126:37 - and then free
126:38 - and press enter and as you can see it
126:40 - says displays amount of free
126:43 - and used memory in the system so we can
126:45 - press q for quit
126:47 - and run free all i'm gonna do is just
126:49 - run the basic command but it gives you
126:51 - these this information
126:53 - for the memory usage on your system
126:56 - and like i said i just kind of wanted to
126:57 - show you guys a high overview or the
126:59 - base level
127:01 - of what the command is used for
127:03 - because a lot of these commands are used
127:06 - by systems administrators because when
127:08 - you're running a server you don't have a
127:10 - graphical interface you have to do
127:12 - everything from the command line
127:15 - and i don't want to make this course too
127:17 - advanced
127:18 - i just want to touch on some of these
127:21 - commands
127:23 - because it will definitely help you
127:25 - when you start going for
127:27 - linux certifications
127:30 - now the next command i want to show you
127:31 - guys is the ps command and this command
127:34 - will display
127:37 - linux processes that are currently going
127:39 - on it's and it's simply a snapshot
127:42 - so it won't refresh it'll just pull in
127:44 - what's currently happening at the moment
127:47 - on the linux operating system as far as
127:49 - snaps as far as processors
127:52 - processes that are running on the system
127:55 - so the first thing let me open up the
127:57 - main page for the ps command just so you
127:59 - can see
128:00 - that it does have a man page as well as
128:03 - some detailed description on how to use
128:05 - it but the basic way i typically run it
128:08 - is ps
128:10 - and then dash capital a
128:12 - this is the only way i think you should
128:14 - actually run it and like i said this is
128:16 - just a snapshot of all the processes so
128:18 - let's say you need to
128:20 - kill a process because occasionally that
128:22 - happens uh you need to go in and kill a
128:24 - process well this is the process id
128:27 - right here uh that number that shows the
128:30 - process id so you can actually kill a
128:33 - process if you need to via the command
128:35 - line i won't show you guys how to do
128:37 - that but that's something you may have
128:39 - to do in the future once you get a
128:41 - little bit more familiar with
128:44 - using the operating system
128:46 - now let's get into some hard drive or
128:48 - hard disk commands that i want to show
128:50 - you guys from the command line
128:52 - and i don't know if you remember but
128:54 - within that system monitor
128:56 - application
128:58 - you'll see that it showed some of the
128:59 - disk information and partitions and all
129:02 - that stuff well let me show you how to
129:04 - find that information from the command
129:06 - line if you need it and the first
129:08 - command i wanted to show you guys was
129:10 - the df command so let's type man
129:13 - df
129:15 - and basically this reports file systems
129:17 - disk space usage so let's go down and
129:20 - quit the
129:21 - man page and run the command
129:23 - and we could just run it it has a number
129:25 - of options but i'll just run it just to
129:27 - show you guys how to actually use it but
129:29 - as you can see it pulls in a lot of
129:31 - information based on the disk space
129:35 - like for instance this is the
129:37 - partition that housed the root directory
129:40 - and you can tell by it being mood
129:42 - mounted or the mount location but it's
129:45 - mounted at root so that pretty much
129:48 - holds the operating system right there
129:50 - and just to make
129:51 - the information look a little bit better
129:53 - so you can understand it because it's
129:54 - kind of hard to read this stuff in bytes
129:57 - well there is an option just like i
129:59 - showed you on other commands but it's
130:01 - dash h for human readable and that'll
130:04 - basically give you
130:06 - the sizes in a readable format and as
130:10 - you can see that breaks it out right
130:11 - there so as you can see the full size is
130:15 - 30 gigabytes and the operating system is
130:18 - taking up about nine gigabytes
130:21 - and you have 21 gigabytes available and
130:23 - so 31
130:25 - is actually taken up but this is a lot
130:27 - of great information you can get
130:29 - about hard drives and hard disks and
130:31 - partitions that are connected to your
130:34 - linux operating system
130:36 - now let's clear right fast because i
130:37 - want to show you guys another command
130:39 - and it's called f this so let's type man
130:42 - f this and press enter and as you can
130:46 - see you can manipulate this partition
130:49 - tables now this is a great command but
130:51 - just to pull information
130:54 - about your partitions you want to run
130:56 - the dash l option which is represented
130:58 - right here so that's the way we're going
131:00 - to run it that's typically how i pull
131:02 - information that i'm trying to see about
131:04 - partitions on the
131:06 - system so eftis
131:08 - dash l and press enter they may not work
131:12 - because you need permissions and this is
131:14 - where the pseudo command actually comes
131:16 - in on
131:18 - and i'll still cover that pseudo command
131:21 - in the next segment but i'll just run it
131:23 - so you guys can kind of see but i really
131:25 - want to explain what sudo is actually
131:28 - used for in
131:30 - the purpose of the actual program but
131:32 - sudo
131:33 - and then f this
131:36 - dash l and press enter and it should
131:39 - access for our user account password or
131:42 - our pseudo password so to speak and this
131:45 - gives you a little bit more information
131:47 - about all
131:48 - the partitions on the system
131:50 - and as you can see right here this is
131:52 - our main hard drive again a vda 32 gig
131:55 - uh and it breaks out all the different
131:57 - partitions as well as the partition
131:59 - types
132:00 - and the sizes and all that good
132:02 - information about the disk
132:05 - now let me clear because i want to show
132:07 - you one more command that i think is
132:08 - beneficial for you guys to actually
132:10 - learn or check out but let's type man
132:13 - and then there's another one called ls
132:16 - block
132:17 - and let's press enter and as you can see
132:19 - it lists block devices so let's press q
132:23 - and actually run the command so let's go
132:25 - ls
132:26 - block
132:27 - and see the results that actually comes
132:29 - up and as you can see it gives you a
132:31 - little bit more information but as you
132:32 - can see it breaks it down a little
132:34 - further it shows you the boot locations
132:36 - of pretty much everything or the mount
132:38 - points which it did using the other
132:40 - command
132:42 - but this is just another
132:44 - command that can help you while you're
132:46 - trying to
132:47 - check on discs that are connected to the
132:49 - system
132:50 - and i know you guys are probably
132:51 - wondering what are these loopbacks just
132:53 - ignore them you don't have to worry
132:55 - about it a lot of times that's just
132:57 - special block devices
133:00 - that are mapped to like normal files
133:02 - and it shows up as a virtual black
133:05 - device
133:06 - that's essentially what that is
133:08 - now let me go down and clear again but
133:11 - now let's put all this information
133:13 - together i showed you guys how to look
133:14 - at the processes that are running on the
133:17 - linux operating system
133:18 - as well as the
133:20 - cpu load the uptime
133:23 - and the memory information well there
133:26 - are some built-in utilities that you can
133:29 - use to look at all this information just
133:32 - like you would in the gui version but
133:34 - it's for the command line so
133:37 - the first one i wanted to show you guys
133:38 - is top so if we run man
133:41 - top
133:42 - this will just give you some information
133:44 - about it but it basically says displays
133:46 - linux processes but it it displays more
133:48 - information than
133:50 - what you think so let's go down and hit
133:52 - q and just run top so you guys can see
133:54 - it
133:55 - and as you can see it will update just
133:58 - like
133:59 - the processes were updating in the gui
134:01 - but this is all on the command line it's
134:03 - a little bit difficult to understand if
134:06 - you don't know what you're looking for
134:08 - so that's why i wanted to throw in the
134:11 - other one and the way you get out of it
134:12 - you just hit q and it'll drop you back
134:14 - down to the terminal but let's clear
134:17 - again and let's run man
134:20 - h top and i'm 100 sure this application
134:22 - is stored stored on here and it might
134:24 - not have a
134:25 - manual but i'm sure this application is
134:28 - on here but
134:30 - so let's go down and install it right
134:32 - fast uh because i want you guys to
134:33 - actually see it because there are some
134:35 - utilities that have gotten
134:37 - a facelift and as you can see h top it
134:40 - has the same
134:42 - word in it as top
134:44 - you know i'm saying it just has a
134:46 - facelift so it'll look a little better
134:48 - within the command line and you can get
134:50 - a little bit more information
134:52 - and it runs pretty much the same as top
134:56 - okay cool so let's install let's
134:58 - uh run h top as you can see it gives it
135:02 - a it gives a better representation of
135:04 - what you're actually looking for and i
135:06 - recommend you install h-top if you don't
135:08 - have it installed on your system most
135:10 - systems comes come with h-top install by
135:13 - default i'm not sure why
135:15 - ubuntu decided to remove that but h-top
135:19 - is a very valuable utility that's
135:22 - beneficial when trying to troubleshoot
135:25 - applications
135:26 - so as you can see you can get out of it
135:28 - using f10 or q
135:31 - and that'll exit out of h top so that
135:34 - concludes this segment showing you guys
135:36 - how to get some systems information from
135:38 - the command line so i'll see you guys in
135:40 - the next one
135:46 - now the next command i want to show you
135:48 - guys was dealing with networking
135:51 - now
135:51 - if you have a desktop environment there
135:53 - probably is a network manager
135:56 - uh in the gui and i'll just go there so
135:58 - you can see it but under wire
136:00 - connections you can go to wired settings
136:03 - and this will bring up the network
136:05 - connections which is under settings and
136:07 - you can go through and modify your
136:09 - settings as far as like setting a static
136:12 - iop address
136:13 - or changing up your dns servers you know
136:16 - all that good stuff you you can do it
136:17 - right here within a gui but i also just
136:20 - wanted to show you how to gather that
136:22 - information from the command line by
136:24 - showing you two specific commands the
136:26 - first one is an older command that's
136:28 - been around for very long time but it's
136:30 - called if config similar to
136:34 - ipconfig on a windows operating system
136:37 - so i have config press let's go to the
136:40 - man page and looks like it isn't a man
136:42 - page and they might have
136:44 - removed this command from the system um
136:47 - because i know it's becoming the oldest
136:50 - version or it's like an older version to
136:52 - look at the ip addresses associated with
136:55 - the system yeah and as you can see it's
136:57 - not on the system by default so let's go
137:00 - down and install that as well so let's
137:02 - go sudo apps
137:04 - install and you can easily install these
137:08 - uh packages that way you can
137:11 - use some of these tools that i'm going
137:13 - through you can follow this i'm just
137:15 - writing sudo app install and then the
137:18 - net tools and
137:20 - i know i haven't covered the software
137:22 - management
137:24 - piece
137:25 - but i'll get into that in a little bit i
137:27 - just wanted to
137:29 - show you guys these commands that should
137:31 - be
137:32 - on the system by default it all depends
137:35 - on the distribution that you're using
137:37 - because you could probably install a
137:39 - debian
137:40 - operating system and it may or may not
137:43 - have this tool on it but i still wanted
137:46 - to show it to you guys because it's
137:47 - still relevant it's something that a lot
137:49 - of people still use but i'll show you
137:51 - the newest version of this command in a
137:53 - couple seconds next
137:55 - now let's uh clear the screen and run if
137:59 - config
138:00 - and press all right actually let's go to
138:02 - the manual because it should have a
138:04 - manual now so if
138:06 - config
138:07 - press enter that'll open it up and
138:09 - basically what it says is configure a
138:12 - network interface so most people use it
138:14 - just like ipconfig just to get the
138:18 - get the ip information on your system so
138:21 - ifconfig press enter as you can see it
138:24 - pulls up the network device which that
138:27 - is the name of the network device on
138:29 - this system
138:30 - yours may have a different name but it's
138:33 - essentially the exact same thing and as
138:35 - you can see
138:36 - this is my ip address as well as the
138:38 - ipv6
138:40 - address there as well
138:42 - and other basic networking information
138:45 - uh now i won't cover all of this but i
138:47 - just want to at least show you how to
138:48 - gather that information now the newest
138:50 - version of this command is actually ip
138:54 - and this should be installed by default
138:56 - now uh man ip yes and it is it says
139:00 - shows manipulate routing network devices
139:03 - interfaces
139:04 - and tunnels and this is a
139:07 - way more detailed command
139:10 - there's a lot of options that go along
139:12 - with this command and
139:14 - hence this is why it's replacing
139:16 - ifconfig so let's press q to quit to get
139:19 - out of it and let's clear and just run
139:22 - ip
139:23 - and press enter and that should show you
139:26 - the help but i wanted to go let's uh ipa
139:29 - that'll pull all the
139:30 - ip information as you can see it pulls
139:33 - up basically the same information
139:35 - this is the device name right here as
139:38 - well as all the ip addresses underneath
139:40 - it so
139:41 - ipv4 in ipv6 as well as your other
139:45 - device information on this system and
139:48 - once you learn this command you can make
139:49 - changes to it you can set an ip address
139:51 - a static ip address or you can add more
139:54 - connections to it and force your system
139:57 - to pull another ip address
140:00 - and you can change how you write route
140:02 - traffic but a lot of that goes into
140:04 - these systems admin type of roles but i
140:07 - at least wanted to cover the command so
140:09 - you guys can see how to actually gather
140:12 - this information if you need to
140:18 - so within this segment we're going to
140:20 - cover the sudo command as well as the
140:24 - software center and the apt package
140:27 - manager which is what you'll use to
140:29 - manage software
140:31 - now before we get to the package manager
140:34 - as well as the software center i wanted
140:36 - to talk about the pseudo command just so
140:38 - you guys can get a clear understanding
140:40 - of what it actually is
140:42 - and just to simply break it down for you
140:45 - sudo stands for
140:47 - super user do
140:49 - and is used to access
140:51 - uh restricted files and operations
140:54 - because by default the linux operating
140:58 - system restricts access to certain ports
141:01 - of the system preventing
141:03 - sensitive files from being compromised
141:05 - and what happens when you run the pseudo
141:07 - command it temporarily elevates
141:10 - privileges allowing users to complete
141:13 - sensitive tasks without logging in as
141:16 - the root
141:18 - user
141:19 - so first thing i want to do is run
141:23 - man and sudo that way you can get a
141:25 - little bit more information about it and
141:28 - like i said i always run these man
141:29 - commands so you guys can see
141:32 - where to get the information for each
141:34 - one of these commands so let's press
141:35 - enter
141:36 - uh sudo and it says x execute a command
141:40 - as another user and typically is used to
141:43 - elevate a user to a super user status or
141:48 - as the root user of the system and the
141:51 - simplest way to relate it to a windows
141:54 - operating system when you want to run
141:56 - something as administrator you right
141:58 - click on the application
142:00 - and hit run as administrator
142:02 - now it doesn't actually for a password
142:05 - you know in windows but you do have to
142:07 - take that extra step to run things as
142:10 - the administrator it'll just simply pop
142:12 - up with a prompt asking you if you want
142:15 - to run this application as an
142:17 - administrator
142:18 - but in linux it's totally different you
142:20 - have to type in your password anytime
142:22 - you want to elevate your privileges
142:24 - so let's go down and quit and the way
142:27 - i'm gonna show you guys
142:28 - is what i typically use the sudo command
142:30 - for and that is updating
142:33 - your system now there are multiple ways
142:35 - of updating it i believe in earlier
142:37 - parts of the course i covered how to
142:40 - install
142:41 - packages within the software center
142:44 - which i'll bring it up after this just
142:46 - to show you that it's actually using
142:48 - sudo
142:49 - while using the software center as well
142:51 - but i wanted to cover in the command
142:54 - line
142:55 - how to update the system
142:58 - but before i do that let's run the man
143:00 - command against apt as well because most
143:04 - applications do have a manual
143:07 - and this is the case for the app package
143:09 - manager and as you can see it says
143:10 - command line interface and what it's
143:13 - used for is to install and update
143:16 - packages now let's go down and quit that
143:18 - i just wanted to kind of show it to you
143:20 - but apps actually stands for advanced
143:23 - package management tool
143:25 - and basically it facilitates the process
143:28 - of installing and uninstalling linux
143:31 - software packages
143:33 - an app is typically the package manager
143:36 - for debian based distributions so
143:39 - majority of debian based distributions
143:42 - will have the app package manager
143:45 - installed and ready for you to use to
143:47 - install packages on the system
143:50 - and depending on what distribution you
143:52 - are using there are other package
143:55 - managers out there but like i say that i
143:57 - want to focus on apps so now let's use
144:00 - the sudo command and app command to
144:03 - update our system now the first command
144:05 - i'm going to run is sudo
144:07 - apt
144:08 - update
144:10 - and just say break this command down
144:12 - first we're using sudo to elevate our
144:15 - privileges because we can only make
144:17 - changes to the operating system files
144:21 - if we elevate our privileges because a
144:24 - lot of the packages the where the
144:26 - binaries are and all that stuff is in an
144:29 - area that's owned by the root
144:32 - user of the operating system and in
144:34 - order for us to make changes to it we
144:36 - have to elevate our privileges so that
144:39 - we're running the command
144:41 - as root so this is simply what the sudo
144:44 - command is for and then we have apps
144:46 - which is our package manager
144:48 - and then there's an option called update
144:50 - and what update will do
144:53 - just to break it totally down most linux
144:56 - distributions have repositories
144:59 - where they store authorized software
145:02 - that you can install in the system and
145:04 - the update command basically updates the
145:08 - cache of the available packages to your
145:11 - operating system and this is something
145:13 - that you want to do because it'll let
145:15 - you know if you have updates so if it's
145:17 - if a new package is on their repository
145:21 - that's installed on your system
145:23 - then it'll let you know after running
145:25 - the update command so let's go down
145:27 - running now so you guys can kind of see
145:29 - what is what it's going to do and
145:31 - anytime you run sudo you have to type in
145:32 - your password for your user account
145:36 - unless
145:37 - it's timed out because i believe it's a
145:39 - time period of five minutes or so
145:42 - once you authenticate once if you run
145:44 - the sudo apt updated command again
145:47 - within that five minute time period it
145:49 - won't actually for you for the password
145:52 - again
145:52 - and so
145:53 - basically what it's doing is hitting all
145:56 - the ubuntu servers where packages are
145:58 - stored
145:59 - and it's refreshing that the cache on
146:02 - the system
146:03 - and as you can see
146:05 - we have three packages that can be
146:07 - updated on the system now and so in
146:11 - order to update our packages there's
146:13 - another command you basically run sudo
146:16 - apt
146:17 - upgrade
146:19 - this is how you actually
146:21 - upgrade those packages
146:24 - so you have to use the upgrade option
146:26 - with the app package manager in order to
146:28 - upgrade the packages because right now
146:31 - it didn't do the update it just told you
146:33 - that you had updates to the actual
146:35 - packages
146:36 - but in order to upgrade them you have to
146:39 - type upgrade and just to point this out
146:42 - right right fast you can actually look
146:44 - at what's being updated by
146:47 - uh running apps lists and then dash dash
146:50 - upgradable that'll list out the actual
146:53 - packages that are about to be upgraded
146:56 - before you run the upgrade command so
146:58 - now let's just go down and run it so you
147:00 - guys can see
147:01 - an update to the system and then right
147:03 - here it kind of shows you what packages
147:06 - are being updated and right now the
147:09 - python 3 update manager is being updated
147:13 - uh update manager is being updated and
147:15 - update manager core is being updated and
147:18 - then it tells you
147:20 - three upgraded
147:21 - applications will be installed and it
147:23 - also tells you
147:25 - how much additional space will be taken
147:27 - up by these upgrades so as you can see
147:30 - that's not much uh but let's go down and
147:32 - press enter
147:34 - or you can type y for yes and that's
147:36 - basically confirming that you want to
147:38 - upgrade these packages
147:39 - and essentially that's pretty much it
147:41 - that's how you update your system and
147:44 - now that we've done that let me go down
147:46 - and show you guys the software center uh
147:49 - and this will allow you to install
147:51 - applications i believe i showed a little
147:52 - bit earlier but i didn't go through and
147:55 - install anything so
147:57 - let's go down and install something here
147:59 - so you can see that the sudo command
148:01 - works pretty much the exact same way so
148:03 - let's install which is an image
148:05 - manipulations
148:07 - program
148:08 - and essentially all you have to do is
148:10 - click on it and then there's a button
148:12 - that says install and one cool thing
148:14 - about this package manager right here
148:16 - it it has reviews of the packages
148:20 - uh from everyone that's using it and you
148:23 - know information about the actual
148:24 - package
148:25 - that you're installing
148:27 - and all you have to do is hit install
148:29 - and this is basically running it as sudo
148:32 - because it has to authenticate
148:34 - it's exact same thing as if you were
148:36 - running it within the command line so
148:38 - let's press authenticate and then it'll
148:40 - go through the process of installing the
148:42 - packages package
148:44 - and at the end of the day this is doing
148:46 - exactly what you can do
148:48 - within the terminal
148:50 - and within my first couple years of
148:52 - learning linux i forced myself to not
148:56 - use the package manager i forced myself
148:58 - to install things from the command line
149:00 - and i recommend you do the same that way
149:03 - you can get the hang of actually
149:06 - updating installing packages from the
149:09 - command line because that's the best way
149:11 - to actually do it but let's go ahead and
149:13 - wait for this thing to finish this is
149:14 - kind of uh a pretty decent sized uh
149:17 - program so it'll take a little while to
149:19 - actually install
149:20 - but as you can see it's almost there
149:22 - it's right at 90 percent so
149:25 - let's wait a couple more minutes but i
149:27 - just wanted to show you guys that that's
149:28 - the full process of opening
149:31 - installing an application
149:34 - and that's pretty much it and if you
149:35 - ever want to remove an application all
149:37 - you got to do is hit remove
149:39 - so let's go down and close this i'm not
149:41 - going to open up the package
149:43 - that i installed
149:44 - but before we move on i want to show you
149:46 - a couple more things you could do with
149:48 - the app package manager right fast i
149:50 - figured that would
149:51 - be better for you to understand the
149:54 - actual program but if we type sudo and
149:57 - then apps and let's say we want to
149:58 - search for a package uh and you got to
150:01 - kind of know the names but all you have
150:03 - to do is type sudo app search and then
150:06 - the package name let's look for that
150:08 - same package that we just installed so
150:10 - uh search and it'll
150:13 - search the repository for
150:15 - the package menu or the
150:18 - package that we just installed now it
150:21 - doesn't narrow it down too much because
150:23 - a lot of these packages have in it
150:27 - but
150:28 - uh if you scroll through here you'll see
150:30 - the actual package and maybe that was a
150:33 - tough one to actually
150:35 - look for so let's go back down to the
150:37 - bottom and search for something else
150:40 - and let's uh press the up arrow and
150:42 - let's search for a zip program
150:45 - and we all know zip from windows how you
150:48 - compress files and folders you can use
150:50 - the the zip
150:52 - package where there is a ported version
150:54 - of zip on the linux operating system
150:57 - that you can use to zip and unzip files
151:00 - so let's go down and search for that and
151:02 - see if it's there
151:03 - and as you can see i believe is a zip
151:05 - tool or a zip
151:07 - not zip tool but it should be yeah here
151:09 - we go zip it's uh that is the actual
151:12 - package so archiver for zip
151:15 - files so
151:16 - that's a way to search for applications
151:19 - so let's say we want to install that
151:21 - application the package name
151:24 - is what's in green at least on the linux
151:27 - operating system and like i said other
151:30 - distributions use different package
151:32 - managers so different commands
151:34 - to actually search for packages but
151:37 - let's say we want to install zip let's
151:40 - go down
151:41 - and install it right fast and the
151:43 - command to install it and let me move my
151:45 - mouse out the way but it's sudo
151:48 - apps
151:49 - install
151:51 - and then zip
151:52 - and you can press enter and that'll
151:54 - install the zip package as you can see
151:56 - zip is already installed it already
151:58 - already has the latest version that's
152:01 - why it didn't do anything because zip is
152:04 - already installed so let's try unzip
152:06 - because then
152:07 - sometimes unzip is not on here let's try
152:10 - that and see if it goes through now
152:12 - unzip is on there as well
152:13 - so anyway that's pretty much how you
152:16 - install a package now let's say you want
152:18 - to remove a package and one thing we can
152:20 - remove is the unzip package and all you
152:24 - have to do is type sudo
152:26 - apps
152:27 - and the command to remove it is simply
152:30 - remove so remove
152:32 - and then and
152:33 - zip or actually let's uh remove the
152:36 - package and
152:39 - just press enter and i'll go through and
152:41 - remove and i believe i might have
152:43 - installed a snap package so that may not
152:46 - work so it wasn't installed through app
152:48 - through the package manager sometimes
152:50 - it'll default to the snap version and i
152:53 - know i didn't explain that guys but a
152:55 - snap
152:56 - is essentially a containerized piece of
152:58 - software that you can install it's they
153:01 - call it a snap package
153:03 - it's a new thing that they're pushing to
153:05 - manage
153:06 - packages
153:07 - but app is still relevant and it's
153:10 - something you need to learn in order to
153:11 - use that linux operating system so let's
153:14 - try removing unzip
153:17 - all right fast and we can remove that
153:19 - actual application
153:20 - should be good to go so unzip is going
153:22 - to be removed and then we'll just
153:24 - install it back on the system but that
153:27 - rip fully removed unzip from the system
153:30 - now let's go down and install it back on
153:32 - the system by just running uh sudo apps
153:36 - install
153:37 - unzip so you can see
153:39 - you know something actually being
153:41 - installed
153:42 - and that's pretty much it so you can use
153:44 - the zip and unzip
153:45 - package on this system and that's pretty
153:48 - much how you use the package manager on
153:52 - a linux operating system
153:54 - and this mainly will work for debian
153:56 - based distributions
153:57 - if you're using a different distribution
154:00 - then you'll have to refer to the package
154:02 - manager's documentation
154:05 - for that distribution of linux
154:11 - okay so in this segment i'll cover a
154:15 - couple text editors
154:17 - and this is very beneficial to
154:18 - understand
154:20 - so you can make changes within the linux
154:22 - operating system and i'm talking about
154:24 - like configuration files
154:26 - for various applications within the
154:29 - operating system
154:30 - that you'll occasionally have to do
154:32 - like when you install
154:34 - certain applications
154:36 - for example an apache server then there
154:39 - are configuration files that you have to
154:40 - modify in order to get apache up and
154:43 - running
154:44 - the proper way and so it's beneficial
154:47 - it's very beneficial to understand how
154:49 - to use a text editor so i'm going to
154:51 - show you two of the major ones that i
154:54 - recommend you guys start learning
154:56 - in order to get proficient with editing
154:59 - within the terminal because if we look
155:01 - around the desktop we can easily look
155:03 - around the desktop and there is what
155:05 - they call a text
155:07 - uh like i forget it's called text editor
155:11 - yeah and most links distributions if it
155:13 - has a desktop environment it'll come
155:15 - with a text editor it could be like
155:17 - mouse pad or something like that and you
155:19 - could easily make changes in here but
155:21 - it's better to understand how to use it
155:24 - from the command line so i wanted to
155:25 - cover it right fast
155:27 - uh so you guys can get a better
155:28 - understanding of it so first one i want
155:30 - to show you guys is nano and nano is
155:34 - the easiest and simplest one to actually
155:36 - use so let me go down and show you guys
155:38 - how to get
155:39 - started using nano and the first thing i
155:41 - want to do is open up the main page for
155:43 - it so you guys can at least see the
155:45 - information about the actual
155:48 - program
155:49 - and if we check it out you know i'm
155:50 - saying the manual has a lot of good
155:52 - information that can help you understand
155:54 - how to actually use it now let's go down
155:56 - and find a file in order for us to edit
155:59 - so let's go cd
156:00 - um and i know under documents and
156:04 - ansible
156:05 - and i think it's uh
156:08 - i think we have uh let's see a couple
156:10 - files in here we can edit so lamp
156:13 - uh simple let's go into there
156:16 - and press enter
156:18 - and then let's ls this directory right
156:20 - fast and there or
156:23 - let's try that host file right fast so
156:26 - uh actually let's cat it out right fast
156:28 - because i want to see how long it is
156:29 - which it really doesn't matter it
156:31 - doesn't have to be too long
156:33 - yeah that's a good enough file size so
156:35 - let's edit that file so
156:38 - let me clear right fast and
156:40 - the easiest way to use nano is just
156:42 - simply type in nano and then the actual
156:46 - file name which was
156:48 - host
156:50 - host and press enter there we go so
156:53 - let's just go down to the bottom i just
156:55 - kind of want to show you guys you can
156:57 - just easily edit this thing simply like
156:59 - this so let's type uh ubuntu
157:02 - and then let's just type 20.04
157:07 - uh lts but that's simply how you use the
157:09 - text editor now let's cover some of the
157:12 - menu options now let's say you needed
157:14 - help
157:15 - uh while you're actually using this uh
157:17 - you could just with the up arrow right
157:19 - there on each one of these that's
157:21 - basically the control button
157:23 - so ctrl g so let's hit ctrl g and
157:26 - that'll open up our help so as you can
157:29 - see that's the help right there you can
157:31 - go through it you know i'm saying it
157:32 - kind of explains a little more uh and
157:35 - explains those commands down at the
157:37 - bottom
157:38 - uh now we can uh just press q and
157:41 - that'll get us back to the
157:43 - actual file itself but just to cover
157:45 - some more of these options you got exit
157:47 - right believe right below it uh you got
157:50 - ctrl o which is writing out the changes
157:53 - so let's like for instance let's use
157:56 - that now we made changes by adding this
157:58 - ubuntu 20.04 lts so we can do control o
158:04 - and that'll write out our changes to
158:05 - that file name it's basically going to
158:07 - access are we sure we want to write it
158:09 - to that file
158:10 - uh and that name or we could change the
158:13 - format or we could change the file name
158:15 - if we wanted to like make a copy of it
158:17 - but let's save it as that file so that's
158:20 - cool it says write
158:22 - wrote nine lines
158:23 - and it basically overwrote that file and
158:26 - then we have read so that's uh control
158:29 - or
158:29 - uh control w is where is and that's
158:32 - beneficial if you're let's say looking
158:34 - for something
158:36 - in a big long
158:38 - file or a configuration file
158:41 - that's basically your search and then
158:43 - the control backslash that's actually a
158:46 - find replace then you got control k so
158:49 - let's say we want to
158:50 - cut this whole line all you got to do is
158:52 - be at the front of the line and hit ctrl
158:54 - k and that'll cut that actual line now
158:57 - let's say we want to paste
158:59 - whatever we just cut
159:01 - uh we can uh just do control u
159:05 - and that'll paste whatever you had there
159:08 - or whatever you'd recently cut so super
159:11 - cool that that's actually there cut
159:13 - paste you know what i'm saying uh then
159:15 - you got your ctrl j for justified
159:17 - uh ctrl t to spell
159:20 - and then ctrl c cursor position and then
159:23 - control underscore
159:25 - go to specific line and one thing that's
159:27 - beneficial for let's say you're a
159:29 - programmer or something a lot of times
159:30 - when you're programming an application
159:33 - or a script or something uh it'll throw
159:36 - an error and it'll tell you what line
159:38 - the error is on
159:40 - so it's beneficial to use that if you're
159:42 - looking for a specific line within the
159:44 - file that was thrown from the error
159:47 - while you was building whatever script
159:49 - or application that you was working on
159:51 - especially if the file has like a
159:54 - thousand or something lines you know
159:55 - within it it's very beneficial now
159:58 - that's pretty much the high level
160:00 - overview of the nano
160:02 - text editor so let's go down and exit
160:04 - out of it and just to show you how to
160:05 - exit it you can just hit uh control and
160:09 - then x and then we did make some more
160:11 - changes to it so it's basically asking
160:13 - you if you want to save those changes so
160:16 - all we have to do is type y for yes and
160:18 - then it's going to access if we want to
160:20 - write it on to that same file name press
160:22 - enter and that'll actually save out that
160:24 - file and we can cat it out right fast
160:29 - right fast by typing uh cat host press
160:32 - enter and i'll cut out that file we can
160:34 - see that those changes have been saved
160:36 - to that file
160:38 - now the next text editor i want to show
160:40 - you guys
160:41 - is vim now vim doesn't come on ubuntu by
160:45 - default you have to install it so all
160:47 - you have to do is type uh sudo
160:50 - apps
160:51 - install
160:53 - vim and that will install it on your
160:55 - operating system and
160:58 - let's go down and run it again
161:00 - uh even though i already have it
161:02 - installed on here
161:03 - i just want to run it so you guys can
161:05 - follow along
161:06 - and see how to install the vim
161:09 - text editor
161:10 - but vim is based on vi or v i believe vi
161:13 - came first and then vim it it's just
161:16 - basically
161:18 - vi on steroids it has a lot of features
161:21 - uh you can set key bindings and all kind
161:23 - of stuff uh using the film text editor
161:27 - and a lot of people rant and rave how
161:29 - great them is
161:30 - but i'm one of these people that like to
161:32 - i don't know just get things done it
161:34 - doesn't matter how it gets done so
161:36 - a lot of times i'll use nano but i do
161:39 - understand how to use vim and i see the
161:41 - power in using them so shout out to all
161:43 - you vim users out there um
161:46 - i definitely like the program but let's
161:48 - go down and give you a simple usage of
161:51 - the vim application
161:53 - and let's clear right fast and let's go
161:55 - down and open up a file using film so
161:58 - i'm just open up this readme.nd file
162:01 - there we go and
162:04 - as you can see the navigation is pretty
162:06 - much the same as nano but the problem or
162:10 - the thing that kind of kind of messes
162:11 - people up when they're first learning
162:13 - you have to use commands in order to do
162:15 - certain things like for instance you
162:17 - can't just type right now into the
162:19 - actual uh program you know what i'm
162:22 - saying into the text file you have to
162:24 - put it in what they call insert mode and
162:27 - the way you get the insert mode is just
162:29 - simply by typing i
162:30 - and then you'll see down at the bottom
162:32 - insert mode so scroll down add some
162:35 - changes to here so let's type ubuntu
162:38 - 20.0
162:40 - and then lts boom
162:44 - so in order to get out of insert mode
162:46 - all we could do all we need to do is
162:47 - just hit exit and that will take us out
162:49 - of insert mode and we can go back to
162:51 - just navigating the file or whatever but
162:54 - now this is basically stored in memory
162:57 - you know what i'm saying whenever you
162:59 - open up an application you make changes
163:00 - to something it's kind of stored in
163:02 - memory it hasn't been written out to the
163:04 - actual file and that's similar to the
163:06 - nano text editor as well whenever you
163:09 - make changes to the file it's re is
163:12 - basically changed in memory and then
163:14 - until you actually quit the application
163:17 - or save the actual changes
163:19 - then it's actually just in memory and
163:22 - there are commands in order to save
163:24 - things in
163:25 - them and so i want to show you guys some
163:28 - of them right fast so in order to let's
163:30 - say we want to write out those changes
163:32 - that we made
163:34 - um in order to do that all you have to
163:35 - do is hit the escape button
163:37 - and then type colon
163:39 - and then w and that'll write out the
163:41 - actual changes so let's press enter and
163:44 - as you can see we made those changes uh
163:46 - it tells you at the bottom right there
163:48 - written out so those changes we made or
163:51 - in the actual file now let's verify that
163:54 - we actually save those changes by let me
163:56 - show you guys how to quit it so all you
163:58 - have to do is type colon
164:00 - and then queue and press enter and i'll
164:03 - actually quit the file
164:04 - and then let's just cut out that file
164:06 - right fast to read me
164:08 - that way we can see that those changes
164:10 - are there and if we
164:12 - and if we look right here uh you'll see
164:15 - the ubuntu 20.04 that we may change to
164:18 - you know the file those changes were
164:20 - saved so let's go down open it up again
164:22 - uh in film
164:24 - and let's say we want to make those
164:25 - changes or change
164:28 - uh let's say we want to remove that lts
164:30 - out the end of it so let's go insert
164:32 - mode uh and then we could delete
164:35 - that text out of there
164:37 - now let me show you how to actually quit
164:38 - it instead of just writing the changes
164:40 - out let me show you how to quit it and
164:42 - save it at the same exact time so all we
164:44 - have to do is type escape and that will
164:46 - get us out of insert mode and then we
164:49 - just type colon
164:50 - and then right and
164:52 - q so w and q and that'll write changes
164:56 - and then quit the actual file so let's
164:58 - press enter and we can cut it out again
165:00 - just so you guys can see but if you look
165:02 - up here uh the lts is gone so that's
165:05 - basically how you make changes to the
165:07 - actual file you just go into insert
165:10 - mode and then you can write out those
165:12 - changes or you can quit and save those
165:14 - changes and then let's go back into it
165:17 - right fast and i just want to show you
165:18 - guys how to quit it without making
165:20 - changes uh and
165:22 - simply you can go back into insert mode
165:25 - right there and let's say we want to
165:28 - type lts and then let's say this is a
165:30 - very long file we start going through it
165:32 - and we don't remember what all the
165:34 - changes or the changes that we made
165:36 - within this file so let's say uh we
165:38 - don't want to save
165:40 - any changes that we actually made to
165:42 - this file so all we have to do is type
165:45 - colon
165:46 - or actually get out of insider mode
165:48 - first then control i mean then hit colon
165:52 - and q and then bang or the exclamation
165:55 - point and press enter and i'll actually
165:58 - exit out without saving those changes
166:01 - and we can cut it out again just to make
166:03 - sure
166:03 - uh but the changes that we did made
166:06 - uh they're not they weren't saved to the
166:08 - actual file so good to go now like i
166:11 - said i just wanted to give you guys the
166:13 - basics i could go like very deep into
166:16 - this actual command or into this actual
166:19 - text editor as well as nano i mean nano
166:22 - is you know
166:23 - awesome as well it's pretty basic but
166:26 - bim you know you can go super far with
166:28 - it but most people had issues with
166:31 - saving and exiting the actual program
166:34 - there is a meme that goes around a lot
166:36 - of times
166:37 - with a joke on it basically saying how
166:39 - do i exit them you know what i'm saying
166:43 - and it's kind of funny or whatever but
166:46 - hopefully these guys get you started
166:47 - with working with with text files within
166:50 - the terminal
166:51 - using a text editor
166:58 - so this concludes my introduction to
167:00 - linux course
167:02 - i hope you learned at least the basics
167:04 - of using the linux operating system
167:07 - because i think this will motivate you
167:09 - to want to learn more
167:11 - and throughout my years of working in
167:13 - the i t field i have always heard people
167:15 - say that learning linux is too confusing
167:19 - and i hope this course
167:21 - dispels that myth
167:23 - so make sure you keep practicing me
167:25 - because the way to become a guru is to
167:29 - keep using linux
167:30 - so i hope you have a good day and keep
167:33 - it techy
167:36 - [Music]
167:55 - you

Cleaned transcript:

learn the basics of using linux josh teaches this course for absolute beginners and he will help you get a full understanding of how the linux operating system works hello everyone my name is josh from keeping techie and welcome to my introduction to linux course the purpose of this course is to help you get a full overview of what the linux operating system is and how it is used in everyday life i noticed there was a need for a basic course for people interested in getting into the it feel now linux is used in pretty much all aspects of the field for example linux is used in the cloud it's also used in the cyber security field especially when you're looking at pin testing so i created this course so you can at least get the basics of using the linux operating system now a quick disclaimer if you're looking for a more advanced course for let's say a linux certification then this may have some information that can help you but it will not cover all the topics needed in order to pass a certification exam and just to give you an overview i will only cover basic topics such as installation basic configuration terminal usage understanding the file system as well as software management so please remember this course is designed for people that are very new to the linux operating system i have a course that hasn't been fully completed that will be released in the near future which will cover all modules that are needed for the comptia linux plus exam so once that's uploaded you can easily roll from this course into the next course in order to take the comptia linux plus exam now let's start off by giving you a little bit about myself i have been an i.t professional since 2007 i've worked in multiple positions some of which a network administrator systems administrator and i'm currently working as a database administrator and i've also been a linux user since the year of 2008 so i have a lot of knowledge when it comes to working with the linux operating system now what is linux when most people ask this question the response that's given is simply debian ubuntu red hat or maybe arch linux but these are what is called linux distributions and linux is basically the kernel of those linux distributions combined with other software such as gnu software and other preinstalled software now just to break down everything that's combined to create a distribution we have to look at some of the creators of each separate port and the first one i need to cover is richard stallman and in the 80s many companies stored developing their own unix operating system for instance ibm sun and hp they all had different versions of the unix operating system that they were developing and the results was a mass of unix dialects and a dozen different ways to do the same thing and so this is where richard stallman came in to end the era of eunuch separation and prevent people from reinventing the will by starting the gnu project and gnu simply means gnu is not unix and his goal was to make an operating system that was freely available to everyone and where everyone could work together and many of the command line tools that are in modern day linux use the new tools that was created under this organization by richard stallman and just to give you a little bit of more about his background he's an american free software movement activist also a programmer that went to mit and he also created the organization called free software foundation and he's an avid campaigner for software to be distributed in a manner such that its users receive the freedom to use study distribute and modify that software so now this rolls right into the next question which is what is the linux kernel and the linux kernel is a free and open source monolithic module multitasking unixlike operating system kernel and the kernel is simply a program that talks directly to the hardware and manages the resources and processes and the meaning behind linux is linux is not unix and to cover the creator lin the linux kernel was actually created by a guy named linus torvalz and after its creation it was soon adopted as the kernel for the gnu operating system and it became a free replacement for unix and since that combination of these two projects it has spawned a large number of operating system distributions and they're pretty much all commonly called linux now that we understand the gnu project as well as the linux kernel let's go down and cover a linux distribution now there are many linux distributions but simply put a linux distribution is a complete linux system package and many linux distributions are available to me just about any computing requirements you could have and most distributions are customized for a specific user group such as a business user multimedia enthusiasts software developers and your average home user and as you can see on the screen this is four major linux distributions that are out there one is ubuntu debian and then kali linux as well as red hat and just to explain each one of them ubuntu and debian or one of your basic desktop linux distributions that you can use and we all know ubuntu is the most popular distribution in the world and i threw cali linux up there because this is the most used distribution when it comes to cyber security as well as the hacker culture and red hat covers the business side because this distribution is not a hundred percent free and the way they charge as far as the model for red hat is that businesses pay for the support but as stated there are a whole bunch of linux distributions that will meet most of your needs and now let's cover the course distribution which is the distribution i'll use throughout this course which is ubuntu and we know that it's debian based and it is composed mostly of free and open source software and ubuntu is released in three different editions they have a desktop edition a server edition and a core edition which is typically used for internet of things devices as well as robots and all the editions can run on the computer alone or in a virtual machine which is why i chose ubuntu for this course because i want you guys to kind of follow along no matter the hardware that you are working with now let's go down and get started now as i stated in the previous segment we will be using ubuntu for the full course so i will now cover how to actually download it and install the distribution and i'm currently at ubuntu.org this is the simplest way to actually get the ubuntu distribution if you hover up to the top where it says downloads click the down arrow that will get you the ubuntu desktop and the current version right now is 20.04 and i always recommend people use the lts which stands for longterm support this release has the longest support time versus any of the others now you can also install the ubuntu server version but it doesn't have a desktop environment and like i said stated earlier there is a ubuntu core or ubuntu for iot that you can actually download for your mini boards like a raspberry pi now in order to download it all you have to do is click on the 20.04 and that will start the download and it only takes a couple minutes depending on your internet speed but you want to go down and download this and then i'll be back once it's finished to go through the install with you guys so now that we have ubuntu downloaded i just wanted to talk about the couple ways that you can install ubuntu now there's the direct way there's also a way to install it in a virtual machine as well as you can install it within the cloud but most of the times people install the server edition in the cloud because they may want to set up a web server or something to that effect now you can install it directly to your hard drive but i definitely don't recommend you do this for this course unless you have a secondary computer because when you install it directly on your system you have to make sure you have a backup of all your files and since we're just going through a course in a simple introduction i don't want people to go through this and mess up their computer by not having backups lose files and don't have a way to recover them and then also when it comes to a direct install you have to write the iso to a usb or a cd which will cause a little bit more confusion than necessary just to go through and follow and run a couple commands that i'll teach you through this course so the main way i want to show you guys how to install ubuntu is by using an application called virtualbox now oracle virtualbox is a type 2 hypervisor and also virtual device can be installed on all three major platforms microsoft windows mac os and linux and then also when you use virtualbox you have the opportunity to try the operating system before you actually commit to installing it directly on your hardware and then also one thing about virtualbox you have to have newer hardware because the newer the hardware you have the more likely that virtualization is supported through your processor and since this is 2022 i know a lot of people are using newer laptops and virtualization is turned on by default and i wanted to make sure i open this up to as many people as possible so they can go through the training successfully now let's hop over to my desktop so we can walk through installing ubuntu within virtualbox okay so our iso is downloaded and i have it stored in a folder but this is what i actually downloaded right here which is what you will receive when you hit the download button from ubuntu so you want to make sure you find that location so you can create the virtual machine now this is virtualbox manager and it's a very simple application to use it looks and feels the exact same way on all different platforms so windows mac os as well as linux it looks pretty much the same and most likely when you first open this application there won't be anything there and i currently have some virtual machines already here that's why they're listed now in order to create our virtual machine all you have to do is hit new so we can hit new and then what you want to do is name the operating system now i know this is a ubuntu system so i'm gonna just put ubuntu as the name and you can also put the version number sometimes i put 20.04 at the end of it and i'll do that for the the purposes of this video so you guys can follow along with it now you want to select the type now it'll automatically kind of recognize based on whatever you type up here and it automatically pulled up ubuntu down here as well as the type which is linux and if we click under here i just want to show you guys the different options but you have microsoft windows solaris bsd ibm mac os x and other and what you want to do is make sure it selects linux most of the time like i said when you type in the operating system it'll automatically update here with the right information and you want to 64bit as you can see when you click under type it'll open and expand the different versions and what you want to do is make sure it's when you've gone to 64 bits and so we're good there we can hit next and now this is your memory size now this is all dependent on the extra resources that you have on your system now my laptop has 16 gigabytes of memory so i have some to spare and for this demonstration i'll just select eight since i have the resources to spare but you may want to select like four or six when it comes to this depending on how much memory you have on the system now ubuntu can actually run with less memory depending on the desktop environment like for instance if you're using the xfce version of ubuntu then you can probably get away with two gigabytes of memory but i always recommend for people starting out just give it four gigabytes of memory and you'll be good to go so let's hit next there now we have to select our hard drive and this is just a way to select if you already have a hard drive created and what this is is a virtual hard drive it doesn't really exist it's kind of like a container so to speak and i'm only using that as an example it's not the actual application that runs containers like docker but it's essentially a containerized file that's virtual that's used by the virtual machine where all your files will be stored and it's looked at by the operating system as a real hard drive but it's actually not it's just created by virtualbox itself so what you want to verify is that you want to create a virtual disk now so you can hit create there and there are different types of hard disks within this application there's the vdi which is a virtualbox this image vhd which is virtual hard disk and vmdk which is a virtual machine disk and i know that's kind of confusing but some of these is basically the format of the type of virtualized hard disk that will be used for this operating system and the main thing that needs to be explained the difference is there are other types of hypervisors out there that use a different format for for instance i believe vhd is the one used by vmware but we're not going to worry about that we'll just use the virtual box this image for this demonstration so let's hit next there now this is an important step that i always try to tell people when i'm teaching them how to use virtualbox there are two different ways of storing the data within the hard disk there is dynamically allocated and a fixed size now dynamically allocated means that the the hard drive will only be as big as the actual files and as you add more and more files to it it will grow now with a fixed size if you select a hard drive of 10 gigabytes then it will take up 10 gigabytes of space on your system so i always tell people to use dynamically allocated that way it'll grow as you need it it won't take up take away from the resources from your main machine so let's hit next there and as you can see it will store the virtual machine in a location i won't go too deep into that but that's basically where the virtual machine is stored or the hard drive itself and then also the size you can set the size as 10 gigs or you can go even higher depending on how many how much resources you have in your system for instance i have a two terabyte hard drive within my laptop where this is located so that's why it's showing two terabytes but you can't use the full two terabytes because like i said this is running on a operating system that's already installed so if you don't have two terabytes which i'm sure i don't because of all the files and folders and applications that i have installed on this system i definitely don't have that space to give to this virtual machine now you don't have to really worry about it if you select it dynamically allocated because it will only grow to the size that it needs for the operating system and whatever files that you put on the virtual machine but i always recommend people use like 10 gigabytes for just a install that you're doing for testing purposes but let's go down and hit create and that will conclude the setup and that was basically the initial configuration of the virtual machine we have to go into the settings and make a few more changes before we actually launch the virtual machine so let's hit settings and you want to make sure that that virtual machine is selected that way it'll open up the settings for that virtual machine and we don't have to mess with anything under general but i'll go through and show you at least the tabs now there is a shared clipboard drive and drag and drop you could turn that on which i won't need that for this demonstration uh you can write a description in there and then they also allow you to create this encryption if you want to i recommend you don't do that especially if you don't have especially if this virtual machine is just temporary and you're probably going to delete it in the future now if we go to the next tab that's the system you can make changes to how you set up the virtual motherboard for instance that's the base memory and like i said i gave it eight gigabytes of memory but you can select it whatever you can make changes there if you need to and then also it has a virtualized boot order so you know like when you boot up a physical computer it'll pop up with hitting either like f12 or f9 to select a different boot order or select something to boot first within the order from the bios then you can make those changes here as well and then some chipset information uh you can enable efi for special you know os's if you need it i don't recommend you select it you just use the default now under processing you can give your virtual machine more processors which i'll bump mine up to two now i have a whole bunch of cores on my system because i'm using a ryzen on my laptop so you select what's best for you but two cores is just enough for what i'm trying to do with this virtual machine as far as just showing you guys how it all works and then there is an acceleration tab which we will leave default now under display what i typically do is bump up the video memory to 128 and then enable 3d acceleration and then there are some other tabs in here remote display and recording if you need to um and then storage this is where you want to add your iso so right now it's a virtualized ide controller which is the cd drive and all you have to do is and select over here where the little dish is and you can find the iso by clicking choose a disk file and then all you have to do is go on your system now and find that iso that we downloaded from ubuntu a few seconds ago and once you find that iso you just select it and that will actually add it to the virtualized cd drive and then as you can see right here this is the hard drive that we created the 10 gigabyte hard drive and that is where the operating system will be installed but this is needed in order to boot up the operating system in order to install it and i just wanted to explain that for people that are very very new so you can understand exactly what we're doing and this is similar to installing it on physical hardware meaning that this iso would typically be written to a cd or a usb drive and you're basically plugging it in to your hard drive and then your hard drive is booting this cd and then writing to your physical hard drive that's within your laptop now the rest of these options i won't go through uh but especially the audio network settings now one thing you can actually change right here which i didn't think about talking about but they do have different types of networks you could set up like net which it'll basically use your ip address for this machine and then they have bridge adapter internal network uh host only which i'll just leave it on that so we can have internet for this virtual machine and then also serial ports usb ports which i kind of leave most of this stuff off or i turn it off but you could just leave it the defaults now let's go down and press ok and that's pretty much saved our settings for the virtual machine and we can basically boot it up and store the install so it's two ways to actually start it you can double click on the actual virtual machine or you get this down arrow or you can just hit start but they do have options under here they have a normal store they have a headless store and a detached stort and what you want to use is the normal store or just double click on the virtual machine and it'll start it up and as you can see it's popping up it has our boot you know order it automatically recognize the cd drive that we had in the actual system and then one thing with ubuntu it'll go through and check your files before it opens up the installer now one thing that ubuntu will do it'll pop up with a installer right away as soon as it boots into the operating system and there are two options first thing you want to do is select your language so if you're in a different country you can select whatever language that applies to you but since i'm in the us i'ma select us or english but the two options are you can try ubuntu or you can install ubuntu and which is what we want to do we're going to install ubuntu but you can actually try the operating system before you actually do the install and this is beneficial if you're installing directly on your hardware because every now and then you'll run into a system that is not a hundred percent supported but this is very rare but i try to tell people to use the try ubuntu first that way it'll verify that your system will actually run the ubuntu operating system without any issues and it basically boots up the system as if it's on installed on the actual computer with all the applications and everything you want to do in order to use the operating system you can get on the internet you can play around with files you can do pretty much anything you can do if it was physically installed on your hardware now the only thing is if you download files or in install something or whatever it's gonna reset if you reboot the system so i won't save anything which that's basically called persistence now let's go through the installer by just hitting install ubuntu which is what i want you guys to do if you're going through this course now the first thing that will pop up is the keyboard lay by layout so you select whatever keyboard layout applies to you but since i'm in the us uh english us and in english us over here and then you can also test the keyboard just to make sure that all the keys line up and all that stuff so let's hit continue and so it says right here what apps would you like to install to start up you could do the normal installation now they do have a minimal installation it'll come with a web browser and basic utilities but i'll install the normal version so you can see all the software that's on it and then the updates right here it'll download updates while installing ubuntu because these packages or isos that are created are not always up to date like they'll update the iso let's say once a month or a couple months depending on the developers of the actual distribution so sometimes you'll download an iso and it's a couple weeks behind the update so this will verify that you have a uptodate machine as soon as you boot up the operating system and the installation is complete so i'll just hit continue there i'm gonna just leave the defaults now this is a very important step this is where you want to install the operating system meaning the hard drive and one thing it says right there warning this will delete all your programs documents folders photos music and any other files on any other operating system that's on the hard drive so if you're installing this on physical hardware you want to make sure you have backups of all your files because when you run through this installation and you get to this step this lets you know that it's going to erase the hard drive and you will lose everything on the system we don't have to worry about that because we elected to install it all on virtualbox so this is an empty hard drive or virtual hard disk with nothing on it so we don't have to worry about it but they do have options for you to set up the hard drive in your own configuration which i won't go through that's pretty much advanced uh if you're just installing this to follow along with the class then i recommend you select just erase this and install ubuntu and we can just click install now and it'll go through the install and i actually forgot about this next step the next step is going to ask you where you're located uh i'm on the west coast so i select los angeles which is super cool and then also you have to select and create a user account and this is something that most linux distributions want you to do they want you to create a user account and not use the root account which i'll talk about later on in the course and i'll change the computer name to ubuntu 20 and then what you want to do is select a password or create a password and so i'll throw that in there and just to throw you guys a little bit more information uh one thing they do have two options when it comes to logging in you can log in automatically or you can require a password to log in which i always recommend people use a password and then with ubuntu they also have it to where you can connect to active directory so if you understand uh windows in active directory you can add the system to active directory which is a little bit outside of it the scope of this course so let's move on hit continue and like i said it's going through the install and it actually doesn't take too long but i'll be back when it actually complete completes and so since the installation is complete this will pop up for you basically say installation complete you need to restore the computer in order to use the new installation so all you have to do is hit restart and this concludes the installation portion of ubuntu for the course okay so our installation is complete and this is the desktop that you'll see when you log into your ubuntu 20.04 now i won't spend too much time on the desktop environment i'll just basically do an overview of how to actually use the linux desktop and then we'll dive into the terminal which is where all the magic happens when it comes to the linux operating system so let's start off by giving you guys a overview of how the desktop works and how to use it and if you're coming from windows or mac os then this shouldn't be too difficult for you to pick up on as you can see it has a main bar at the top which has audio tasks and hardware hardware changes like for instance uh the sound settings right here right here is the log out button or shutdown button so you can click there and that'll bring that up and you can shut down the system you can also modify your internet connection you know the simple things that you would see in a windows taskbar or the taskbar on a mac os system and then right here in the center you'll see you have the date and time and if you click on it there is a calendar and then also you'll receive notifications here which is super cool to see now if we go over here to the left on this actual taskbar you'll see where it says activities you can click there and that'll actually open up any processes that are going on on the system or applications that may be running and minimized on the system like currently i'm running some updates on this installation and i'll get into that later how to actually do updates on the system using the graphical user interface if we click on that that'll hide it back where it was and as you can see on the desktop you have folders so this is the home directory which is what they call it on a linux system the home directory this is where all your files and folders are stored and i wanted to cover this so you guys can at least see that the files that we are going to create and manipulate using the terminal once we get to that point can be modified using the gui as well and it looks different you know i'm saying it's different from your windows operating system as well as the mac os operating system is different but the concept is pretty much the same uh you can double click on folders and now open them up you there have they have a back button so you can go back and you can navigate throughout the file system as needed now let me go down and close this because i want to show you guys they do have a trash can so if you delete something it'll throw it in the trash can and that opened up our file explorer again which is another way to actually get to it so let's go ahead and close that again by default you have a lot of software installed especially on this version of ubuntu when we went through the install it installed pretty much the default software that anyone would need or what they think anyone will need to use the operating system to its full potential and just to cover some of it if we go on the left hand side you'll see this taskbar on the left hand side this shows you your favorite software that's on there and as you can see we have firefox so our web browser uh thunderbird is a male client similar to microsoft outlook you also that's the same file explorer like when we click on josh that'll open up the file explorer and i'll open it up again just so you guys can see this is a music player and like i said i don't want to go through all the software i just kind of want to show you what's there by default so you can understand that pretty much everything on this system is installed to make the transition from one of these other operating systems a whole lot easier and like i stated this is a music player then we have uh this is similar to microsoft word now one thing i want to show you guys was the software center so i'll go down and open that up but this is how you get other software and just so you guys can get a full understanding linux doesn't have the typical software that you would install on a windows operating system or mac os it has its own repositories or locations where certain free and open source software is located so you can install it and use it on the operating system and a lot of these applications are made to be a one co one to one comparison with software that you would see on other operating systems like earlier what i was talking about this is equivalent to microsoft word well you can actually write documents just like microsoft word you can even store the files in the microsoft word format so you can jump back and forth with a particular file and you can easily modify it on your windows system if you want to so i just kind of want to cover that but as you can see this is the software you can look at the explorer they have the editors pick so you can go through play around and install some of the software uh there are different categories so you can go through and look at all this different software and then also you can check out what's actually installed on the system and this right here is makes it very simple for new users to linux to actually transition over because it's not that difficult to install because once you find something under the explorer list let's say you want to install signal or all you have to do is open up the actual application or click on it and then there's the install button and it'll install it on your system so let's go back and i just want to show you guys this is where you update your system as well but i'll show you the proper linux way of updating things once we get to the command line portion but i at least wanted you guys to see it here but this is where you can update all your applications that are installed on the system now let's go down and close that because i want to show you guys they do have a help guide so if you need help with while using this operating system that will open up the how to guide basically goes through the overview of using the system and i really want to show you guys this because i know a lot of people that are taking this course or new to the linux operating system this is a great place to get help and that's why i use ubuntu because the community all the documentation and pretty much everything is is out there for you to use so you can fully understand how to use the desktop environment as well as linux in general now let's go down close that but like i said this is the software updater that actually popped up and it's telling me to restart now but i'm not going to restore it at the moment let's minimize this because i want to show you guys a few other things and right here this is basically the installation iso i kind of left it on this system but most of the time you want to remove it or you want to remove it from the actual system if you're doing a physical install if you did it on you using a usb drive or a cd drive you want to remove that cd or remove the usb drive from the computer that way you'll you can verify that it's booting from the hard drive especially if you made changes within the bios as far as the boot order so it won't keep looping and going back into the installer versus booting from the hard drive now i want to show you guys how to actually get to all the software that's installed on the system as you can see this is just basically what's open as well as the favorite software but if you click here under show applications it'll pop up with a screen and this looks fairly similar to people that use android phones you know how you swipe up and that'll bring up all your applications that's ex exactly what this looks like but this is for a full blown system and not a phone but you can access all your software from here uh i won't go through them all i just kind of wanted to show you that's how you actually get to it if you need to use any of the software on the system and one area i want to show you guys before we move on to the next section is the settings now this is where you want to go if you need to make changes to this system in general pretty much all your settings are in this one location like you have your network settings bluetooth settings if you have a bluetooth bluetooth hardware on your system uh the background you can change the appearance notifications uh applications you can set your default applications in here uh privacy settings so you're not being tracked by any type of software or the operating system itself you can also log into online accounts if you want to for instance they have a way to connect to your google account that way your email and all that stuff will be connected directly to your google account which is which is very beneficial and then also sharing you can set up like share drives they also have sound power settings display settings and like i said any type of settings that you could think of or under here if you have a printer at home that you want to set up to it you can install your print drivers under here as you can see ubuntu is real good with this it picks up the printers on your network i have a brother's printer as well as a hp desktop jet printer that's on my network currently and it already picked those up and added them to the actual desktop and then also this is something i was going to get to within the command line but i wanted to show you that you could do a lot of this stuff that i'm gonna do in the command line from the gui but as i stated the power of linux is within the command line but you can modify user accounts as well which is super cool to actually have access to from a gui now let's go down and close this and this will conclude the portion of the basic understanding of how to use a linux desktop environment now a quick note depending on what distribution you use the desktop environment may look totally different from what i'm showing you here but if you're following along with this course and you install ubuntu your desktop environment should look similar to what mine is showing here but i just want to at least let you guys know that in the future once you start playing around with other distributions the desktop environment may look a little different certain things may in different may be in different places but the overall concepts are pretty much the same and that's why it's important for you guys to understand how to use the terminal because a lot of the tools and a lot of the software that you use within the terminal is used across all linux distributions so let's hop over to the next section and now we'll be covering how to actually use the terminal and the first thing i want to do is just basically show some of the configurations for the terminal once we get it up open and basically what is called the terminal emulator and you could just search for it under your applications you'll see it pop up you can actually just search up here to top type terminal and that'll bring up the actual terminal emulator and as you can see it should kind of remind you of those old hacker movies where someone is just typing at the terminal that's essentially what this is it's just the terminal emulator so application that affords you to interact with the os using commands and one of the first things that will pop up which you can kind of ignore but it talks about pseudo and i'll cover that a little bit later on in the demonstration where that actual application can help you while running certain commands now before we type anything i just wanted to show you guys some of the configurations that you have for the terminal emulator and this is similar to any application i can show you the settings the how to make it look a little different you know using the options that are in it so if you click right here this will open up the menu and you can just click preferences down here and this will open up all your preferences for the terminal emulator as you can see they have a help button up here that'll open up some information about how to actually use it but i'll walk you guys through it this is the generals tab and this has just basic information on the looks of it like there's a theme you could change the theme to dork you can open new terminals in a new window or you can open it as a tab which is beneficial especially if you're working with different systems because you can connect to other linux operating systems via the terminal and you can tab back and forth using those tabs so it's super cool but if you have tabs enabled up here this is kind of where it'll it'll help you if you have tabs turned on right here so anytime you open up a new terminal it'll open up as a tab and you can specify the position that you want it to pop up in once it opens up so last and then next is the the other option now next thing on here i want to show you guys these shortcuts this is something that i think you should definitely check out i'm not going to go through all these shortcuts but there are plenty of shortcuts to help you while using the terminal and then also you have a profile and currently right now this is the profile uh for us it's unnamed you can actually go in and name it if you want to i'm not gonna name it i'm gonna just leave it the way it is but this profile is tied to your user account so if you log out log back in whatever you set within this profile tab of unnamed will stay the same each and every time you log into the system but as you can see you have a whole bunch of options here this is how you modify the terminal to make it look a little different uh there are some text appearance uh you can set fonts you can set the spacing as far as the cursor that you see that's blinking right here uh you can modify that by making changes you could change it from block to a ibeam and i'll just go down and do it so you guys can see it should change it yeah as you can see the ibeam is just a line uh you can also you know change it to an underline like an underscore pretty much and it blinks and then you can also change that to where it doesn't blink i like the blocks i'll leave that as default but you can turn it off where it doesn't blink like it's blinking right now should be blinking right now yeah and then right here they do have sounds for the terminal i don't i never really mess with any of this stuff i may change the colors which is some of which is on the next tab and under here you have builtin themes so you can modify this if you want to currently it's set to use the system theme but you can easily modify that by unchecking this box and you can modify it using a theme that's already there or you can create your own custom theme by selecting different colors like there's attack text color background color bold color cursor colors and highlight colors and then also they have it where you can set transparency on the background which is super cool i like that and currently it's set to use the transparency from the system theme so a lot of people just use the default which is no problem with it but once you start getting good and familiar with using the terminal and different applications and linux in general then you can start customizing and modifying the system as you see fit but there are down below a lot of color palettes so you can go through and select whatever you want and make the terminal look however you want it now as far as scrolling a lot of times i leave this as default but this is basically if you're running a whole bunch of uh commands or something and you want to see what actually happened the screen will scroll down as you're running commands especially if it's a command that looks at let's say a lot of files or something then it's just going to scroll past everything and if there's an error then you may want to scroll up and look at it so i leave that as default but you can scroll back and forth up and down throughout all the commands that you've ran as well as the results that come through from the command that you actually ran now under here there are commands so you can run a specific command on login and custom commands if you want to and then also preserve working directory for the shell only that's that's just another option right there and then when command exit exit the terminal you get you can set that up um i don't recommend you do that just leave the defaults you should be fine and then also un under compatibility there are some changes there but we won't mess with that with that at all now let's go and close the preferences and one thing i want us to do is actually zoom in so you guys can see a little bit better because it's it's difficult to see things within the terminal unless you make it a little big especially while recording as you guys know i'm recording this in a virtual machine so it's kind of difficult to record where you guys can see everything without blowing it up so hopefully you guys can see this but this is what you'll be greeted with when you first open up the terminal and it's only showing this right here because this is our first time running it on this system all together and just to break things down the first thing that will show up is your user account so we know that when we install this operating system i set up a user account as josh which is my name so it'll show whatever your name is or whatever you set during the installation and then there's a at symbol so it's similar to an email address look at it that way you have the at symbol and then after that is the system name so this is what we actually named the operating system when we went through the install and then after this colon that basically explains or shows you where you are that's what this tilde is for and currently we are in the home directory and then after this this is where you actually type the command so you can just type right in there and that's where you actually run your commands and the first command that i'm finished show you is the most important command that you will learn using the terminal and that command is man and man basically stands for manual and this is something that you will i will use with every command that i show you guys that we run within the terminal man basically gives you information about whatever command you're trying to run within the linux terminal and let me give you an example the first example i will show you of a command and showing you the manual is man space man now that is the manual for the man command so essentially whenever you run the man command whatever you're looking for or whatever manual you're looking for you have to put that command behind it so there are other commands like cd you can put cd behind man and that will open up the manual for the cd command but like i said we want to look at the manual for the man command so it's man space man and press enter and you'll see it'll pop up with the actual man the manual for man as you can see right here just kind of break it down this shows you the actual command then it says manual page utility for the utility man and then it gives you a name a synopsis basically how to use the command and a description of everything about that command and it does the exact same thing for most of the other commands within the linux operating system and let's just read the name right fast so man and interface to the system reference manuals now at the end of the day there's basically a small database running on the system that hosts all the manuals for all the different commands and you can use the man command to pull up those manuals and they'll show up in the terminal just like this and in order to navigate all you have to do is use your up and down arrows and that'll move up and down throughout the terminal of the manual and as i was saying there is a synopsis so it kind of shows you some of the options because a lot of commands they also have options that allows you to modify the results of the commands so just to break down the first one it says man option section page etc so you can modify the result results that'll come out while running that actual command and then this breaks down the description and like i said this is in every manual for every command that's on the operating system and the information here is very beneficial uh when you're first learning how to use this and in certain cases there are examples of how to actually use the command so you can check these out they explain what they're actually doing while using the option and you can test some of these examples as well by running them on your own and the way you get out of these manuals is simply by looking at the bottom where it says press h for help or q for quit so all you have to do is hit the q button and that will actually exit you out of that command so congratulations that's the first command you have ran within the linux terminal and as you can see it's super simple but i want to highlight again man is very important especially when you're first starting out using the linux terminal because there's no way in the world that you can remember all these different commands and how to use every single option within it so if you're trying to figure something out using a command that you've never touched before or a command that you haven't touched in a long time then the man command is definitely beneficial now that you guys have a full understanding of the man command now i want to show you guys how to actually work with directories within the shell now i showed you guys earlier that you can navigate the shell by simply opening up the file explorer and going through and just looking you know at your documents or your different folders that you have where well there is a way to do this within the terminal and i'll show you guys a couple commands that can help you work within different directories and the first command i want to show you guys is the pwd command so we're going to use that man command again and i'll use that for every command that i run so you guys can actually see that the man command does help you while understanding commands so let's type man and then pwd and press enter and that'll open up the manual for pwd and as you can see the name of it is pwd and print name of current working directory and this is an important command because when you're navigating through files and folders on the linux operating system you can easily lose track of the location that you're at and this command is important because it'll allow you to just simply write this command and it'll show you the location that you add now let's press q for quit and let's go down and run this command now and let's type pwd and this is actually running the command and we can press enter and that'll show you the working directory and remember when i brought up the tilde represents the home directory well everybody's home directory or all users on the operating system will have a folder under the home directory which is just a folder on the file system and it'll be named after your username so let's click here under files and i want to show you guys the location of this so you can see a gui representation of it as well so in front of it looks like i have to go under other locations and that'll bring up computer uh and that's basically what i want to show you guys so we click on computer this is the root directory which is the represented by the forward slash right there and then what we're looking for is the home directory so that's that home directory and then the josh directory so that's essentially the same location as the home location right here you just don't see it they kind of hide it from you but it is there and that's one of the powers of using the terminal you can see the exact location where you are and this goes into absolute path versus relative path which i'll give you a quick overview of what that is and the absolute path is the full location to a file or folder or directory so home and josh and then a relative path is an assumed path which i'll cover a little bit more once we get to the cd command which is the next one now let's open up the cd man page so all we have to do is type man and then cd and basically cd stands for change directory and as you can see certain commands don't have a manual especially if it's a very old command and i wanted to do this on purpose so you guys can see that some commands you may run into won't have a manual but majority of them do when it comes to the cd command is so old and it's been around forever that they assume that most people know understand what it actually means but the cd command is simply a way to change directory that's what cd stands for and just to show you a quick example of how to use the cd command we can just type cd and then let's say we want to go to this home directory we just want to go to that home directory and this is what i was saying about relative path versus absolute path but let's type home and we can press enter and that will take us to that directory uh and as you can see right there the tilde is gone and now it's showing the actual location where you're located and the tilde was simply just a representation of home and josh now this gives me the opportunity to show you guys a relative path which basically means that the system understands where you are which is the home directory right now or the home folder and a relative path would be to change directories to the josh folder within home and so if we press enter there that'll get us back to our home directory and just to add a little more one thing about linux you could do things a number of different ways so there's not one way to actually do certain things because that took us back to our home directory and if we go back to the home folder by typing the path home and press enter we can also simply type cd and that will take us to our home directory as well because by default it will take you back to your home directory no matter where you are it'll take you back to home josh or whatever your user name is now the next command i want to show you guys is the ls command so let's type man and then ls press enter and that will give you the details of this actual command or the manual it says list directory contents and then it also gives you the synopsis on how to actually run it as well as the options and let's hit the q button just to get out of that and i downloaded some files for us to play around with with this command and they're located in another directory so we have to use that cd command like we just used but we just need to type cd and then the folder that it's in is under the documents folder and there's a folder underneath it called ansible saw all we have to do is type ansible examples and press enter and that'll change us our current location is within that ansible directory now let's play around with the ls command so all we have to do is type ls and press enter and that will list out the contents of the current working directory so that's essentially how the ls command works as you can see you can see all the folders that are underneath it as well as the files that are underneath it and if we go back to our explorer and we click in here under documents you'll see that ansible examples folder and you'll see the exact same information that was listed out within the terminal now this will be a good example to show you guys one of the options that you can run with the ls command and this will kind of show you how powerful the ls command is now within this directory there is a readme.md and linux has hidden files and folders just like in the windows operating system as well as mac os but in order to make something hidden linux uses a different designator for hidden files which is a period so any file or folder that has a period within within the front of it lets the linux operating system know that this file is a hidden file and so don't show it unless you have it set to where it shows hidden files and it's readme.md what i'm gonna do is just change it by going under rename and put a period in front of it and that will actually hide that file so we can hit rename as you can see it disappeared so that file is hidden now but if we go back to the terminal and we type ls we'll see that that file has disappeared as well there well a good example of how to use an option with the ls command or any commands in general and that's why it's important to understand how to look at those man pages is that there's a way to show hidden files while using the ls command so we can just type ls and then i know the option off the top my head but it's simply dash a for all so that'll basically show you all the files whether they're hidden or not hidden so let's press enter boom and as you can see it will show that that hidden file and by default when i downloaded this github directory they already had hidden files within it but i just wanted to show you guys how to hide something as well as how to see all the hidden files if you want to see it now there's another option i want to show you guys that you can run using the ls command and one thing i want to do is clear the actual screen and basically all this is doing is moving up moving up all this information so we're starting and it looks like it's a fresh terminal by typing the command clear as you can see it just basically moved everything up now let me run the ls command again just so you guys can see an example of what it shows when you run the ls command with no options but i also wanted to show you another option which is l so if we type ls and then dash l that stands for long or it's a long view and it puts it almost in a table so you can see a whole bunch of information associated with the specific files because right now all you see is just the files in general but you don't have any other information beside that besides just the name of the folder so if we press enter boom that will give us a lot more information as you can see it's broken out in a format that you will start to recognize and understand and this goes into the permissions portion that i'll show you guys later on in the course but as you can see it gives you a whole lot more information about these folders and it also shows you when they was actually created and also like the owner and the group of the actual files so this lets you know that josh the user owns these folders and files now one thing i want to show you guys as well and we're gonna use that l option again but you can also run options together so let's type ls and then dash l and the a option and we don't have to put two dashes we could just put them together and the system will understand it and press enter and that will run it with the all and that will bring in our hidden files and folders so as you can see that git ignore file is there as well as the readme dot md file is there as well now let me show you one more option that you can actually add to this and that is the h option which puts things in a human readable format and if we look at the man page which i'm not going to open up again but the h option is there you'll see it but one thing we're going to run is ls and then dash l and then the a option for all and then the h option and just to kind of explain it before i run it as you can see all these files and folders are in a bytes format that's the actual size of the files right there in this column right here in the middle that is the size of the files and folders now most folders are represented by 4k that's typically the size of a folder no matter how big something is in it it'll show as 4k but this is in the smallest format so if let's say we're looking at a file that's a gigabyte in size well if you run it without the h it'll have the the size in bytes and it'll be hard to kind of figure out what it is so let's press enter and that way i can show you the difference so as you can see it's in 4.0 k it basically puts it in the the size to make it human readable as you can see this file is 31 bytes and the readme dot md is 121 bytes now let's go down and clear the screen again and press the cd button that'll get us back to our home directory and we can clear again right fast just to get it back up to the top and the next command i want to show you guys is the mkdi mkdir which is stands for make directory now let's go to that man page for that by typing man mkdir and press enter and that'll open up that manual for us and as you can see it basically stands for make directories and then there's a whole bunch of options you can go through and check this out at your leisure but let's go through and show you guys how to actually use it so let's press q to get us back to the terminal and let's go to our documents folder by using that cd command we just learned and then type in the documents folder and press enter and as you can see now we're in that documents folder and if we ls using that ls command we just learned we could press enter and we can see that we only have one folder within this directory in the documents directory so let's say we wanted to make another folder within this directory without using the gui well you can use the make directory command so let's type mkdir and then you want to put the name of the directory that you want to create so i'm just created test a test directory and press enter and that'll create that directory for us and majority of the times when you run a command within the terminal no output is a good thing that lets you know that the command ran successfully now if something happened then it would have given us a error and just to give you a quick example of that if we run that same command again to make the same directory name so test with a capital t press enter you'll see it'll give you an error basically saying it cannot create directory test file exists so that means that folder is there now let's use the ls command again so we can see that that folder has been created in that location so if we type ls press enter that'll show you all the folders that are in that directory and you should see that the test directory is there so now let's say we wanted to create a folder underneath it well the easiest way to actually do it is by typing cd and we can go into that test directory and make another folder so and let's type mkdir and then type test2 and press enter and it'll create us a folder underneath that directory so if we type ls boom under that director you'll see that there is that folder of test two now that kind of took a little bit longer and like i said in the linux terminal terminal there are multiple ways of scanning a cap i could have made both of those directories at one time and i'll show you guys that by using a option with the make directory and what i'm gonna do is cd from that directory and what i want to do is go back to the documents folder which is where we were where we created the first directory and let's ls again so we can verify where we are or we can also type in that print working directory which i won't print it out because we know what directory in by what's listed here the tilde which is our home directory and then the documents directory now let's make a parent folder and a child folder by using an option with the make directory command and all we have to do is type mk dir and then the option which is dash p and now we can specify a parent in a child directory and you can go as deep as you want when it comes to creating the folders for a full directory tree so the folder i want to create i'll just create uh linux folder linux and then in order to create a folder underneath that folder we just have to put the forward slash and then let's type ubuntu and then let's say we wanted to create another folder underneath that just to take it to another level we could type josh in there and press enter and it will create that full directory tree so if we ls within this directory under documents where we created that linux directory you'll see that we have that linux folder now if we go in cd into the linux directory press enter and if we ls again that'll that assurance that we have that ubuntu folder that we created now if we cd into the ubuntu folder boom and you type ls again and you'll see that it has a josh folder and you guys should get the idea of how that actually works so i'm gonna clear the screen because i wanted to show you the next command which is how to remove a directory now let's cd to go back and then let's cd in back into our documents directory and press enter and let's ls again so you guys can see the folders that are in that directory and the next command i want to show you guys is the remove directory command so let's type man and then rm dir press enter and that's the manual for the remove directory so it says remove empty directories now the word empty is very important when it comes to this command because you have to run an option in order to delete a folder that has either files or directories underneath it and i'll show you guys how to do that once we get to running the remove command so let's press q for quit and the first thing i want to do is go to that test directory and this i just want to show you guys a simple way of deleting a folder so as you can see it has that test.2 directory underneath the test directory so in order to remove that test to directory and we know that that folder is empty because we didn't create anything underneath it so all we have to do is type remove dir and then we could just type in test two press enter and that'll remove that directory for us so if we type ls again you'll see that the task 2 directory is no longer there otherwise it would have listed just like up here when we first run the ls directory now let's type cd and go back to our home directory now let's go back into this documents folder because i want to show you guys an option on how to delete a parent and child folder so if we uh press enter there that'll get us back in that documents directory and let's type ls to list out their directory the contents of that directory now we know that the linux folder has multiple folders underneath it and just to show you you cannot remove a directory with a directory i'ma run the remove command against that linux directory that we created and press enter and as you can see it says fail to remove the linux directory because it's not empty so in order to get by that we use the same option that we used to create a parent child folder when we ran the make directory command which is dash p and you'll start learning that a lot of the options are pretty much similar so let's run it now remove dir so rmdi or dash p and then we have to specify all of the directories so if we type linux first and then there is a ubuntu directory underneath that and then the josh directory as well and if we press enter there that will delete that whole directory tree so all the folders underneath it are deleted as well as that folder and if we list this directory again you'll see that it's fully gone okay cool so now that we understand how to manipulate directories now let's hop over and learn how to manipulate files or create files remove files and the first thing we need to understand is that all files on the linux operating system are case sensitive meaning that you can create files with the exact same name the only difference is the case of a particular character within that file and that will be recognized by the linux operating system as a totally different file and this is very different from the windows operating system in windows a file no matter where it is within the same directory can't have the exact same name no matter the case so this is one of the big differences while working with files and linux that you need to understand and then also not to fully confuse you guys but in the linux operating system everything is considered a file even directories they are considered a file by the linux operating system it's a special type of file but it's considered a file nonetheless now the first command i want to show you guys is the file command it's very simple so let's open up the man page for the file command and we can type man and then file and press enter and that will bring up the manual for the file command so it says determines a file type and then here is the synopsis and then also the description of what is that how is actually used and then we can go down to the bottom and it will also show you some options that can be used with the actual file command so let's quit and i'll show you guys some of the basic examples of using the file command and before i type the command i just wanted to explain that the linux operating system does not use extensions to dis determine a file type now there are applications that sit on top that will use the file type to show you what application can open the file but as far as the file type it's not determined by the operating system if that makes sense so this is another reason why the file command is very important especially if you're working in the command line full time now let's go into our documents directory and look at some of the files using the file command so boom and then let's ls this directory uh let's actually go into the ansible examples directory and then let's run the ls command again and let's actually go into another directory right fast within here and what i'm basically looking for is a simple file that we can just play around with and look at the file type so if we ls this directory we should find something yes and so what i'm gonna look at is the readme.md file and the way you use the file command is simply just the command itself which is file and then the file that you want looked at by the file command so let's press enter and that'll give us the information about this actual file as you can see it's a text file and that's basically what amd md file is it's basically markdown a markdown language but it's it's essentially a text file and now now let's run it against this uh rollingupdate.gmo so let's type file and then rolling update.yaml and press enter and let's see what it brings up as well it brings up as a text file as well and let's go up one directory because i want to find another file so let's go to this db folder and let's see what's in here as well i think it's some images so our image directory and let's ls this directory now let's see what's in there so let's look at use the file command to actually look at one of these files now we already know by the extension what it is but this is a handy tool to give you more information about a file now as you can see this is the file name then this is a pn png image and you can look at the resolution of the actual file as well as the color color the rgb rgba and it says noninterlaced but that's a image file basically so that should help you understand the file command now the next command i want to show you is how to actually create files from the command line so let's actually cd or change directory back to our home directory and clear the screen and the command i wanted to show you guys is touch so if we type man and then touch this will give us the manual for the touch command and basically what it says is it's a change file time step but the major purpose for using the touch command is to create files but you can also do other things like change access and modification times as well as you know basically create empty files so let's go down and quit that and show you guys how to use the touch command and let's get back into our documents directory and use the touch command to create a couple files now the basic way to run the touch command is simply touch and then the file name so we can name it file one dot txt press enter and if we lsd documents directory we'll see that file 1 has been created now let's go down and create multiple files using the touch command and basically all you have to do is list out the files so let's create we already have file one let's create file two dot txt and file three dot txt and that's the two files and i'm just basically showing you that you can create more than one file at a time using the touch command you just have to separate them by a space so let's press enter and then list ls directory again and we'll see that all three of those files are there and just like other commands the touch command has has a lot of options where you could change things about a particular file but i won't go through that i just wanted to show you the touch file and this is the simplest way to create empty files on your computer now that we learned how to create the files let's go down and learn how to remove a file which is very simple it's similar to the remove directory command but instead of rmdi or it's just simply rm so let's go to the man page for that right fast so we can type man and then rm press enter it says remove files or directories and it basically covers how to actually use the command as well as a description just like all the other ones and as well as options that you can use so let's quit that and actually do some examples of removing these files that we already created so the basic way to remove a file is simply rm and then the file name which is uh the one the file1.txt which is the first one i want to delete so we press enter and that will delete that file so if we run the ls command we'll see that file1 has been removed now the same way with the touch command you can specify multiple files so all we have to do is type rm and then what i want to do is show you guys one of the options for the remove command which is dash i which is considered the interactive mode and it's basically a way of running the command where it verifies that you want to delete these files so let's uh type in our file names so file two dot txt and file and file three dot txt and press enter and it'll go through and it'll make you verify each one of these files and it says remove regular empty file and you have to respond by typing yes and press enter and i'll delete that file and then we have to type yes again and i'll delete that file so now let's run the ls command again and both of those files have been successfully deleted from the file system now don't you guys remember how i said there's more than one way to skin a cat within the linux terminal well you can also use the remove command to remove directories like it's stated within the man page and i want to show you guys how to do that now by using this test directory that's already there and in order to remove that directory all we have to do is type rm and let's try it without using any options let's type uh test and press enter because i want to show you guys what the response is as far as the error that will pop up when you try to remove it without using any of the options as you can see it says cannot remove test is a directory so in order to remove a directory you can use rm and then there is an option of recursive that's what the or stands for recursive and then force and this will force the remove command to remove that directory so let's press enter and that should remove that directory and we can ls this directory as you can see that test directory is gone now so i just wanted to throw that in there so you guys can see that there are multiple ways of doing things within the command line now let's go down and clear the screen again and the next thing i want to do is show you guys how to copy files so the first thing i want to do is create a directory so we can go make dir and then let's create a directory called test under the documents directory unless ls to make sure that directory was created now let's create a file within the test directory so we can just cd to that directory that's the simplest way and press enter and then ls this directory as you can see nothing is in there so now we can use the touch command so touch and then file one dot txt and press enter that'll create that file within the directory and as you can see it's listed there once we run the ls command now let's say we want to copy that file within that same location well all we have to do is type the copy command which is cp now the first thing before i copy i want to show you guys the man page for it so man copy basically copy files and directories and then all the options that you can use with the command so let's go down and quit that and let's run the command and and do some examples so all we have to do is type cp and then you want to specify the file you want to copy and then you want to specify where you want it and the file name so we want it in the same directory so we don't have to type anything before the file name we can name it file one cp dot txt and press enter and then if we ls this directory we'll see that we have the copy file and the original file that we copied from now let's say we wanted to copy one of these files to a specific directory within the file structure all you have to do is type copy the cp command and then let's copy that same file so file one dot txt and we want to copy it to a specific location let's copy it and put it within our documents directory now we can just type the absolute path that way we know for sure we're getting the file in the correct location so we could put the forward slash which is our roots and then the home directory and then josh and then let's say we want to put it in that documents directory like we stated and that's all we pretty much have to do unless we want to rename the file and we'll just place it in that location by pressing enter and if we ls this directory you'll see that file one is still there but we can ls a specific directory by typing the full path so we can go forward slash home josh and then documents and press enter and that will show us that file one that we put in that location now let's go up one directory and the way you go up one directory if i didn't show you guys this but it's cd change directory dot dot and that'll take you up one directory as you can see we went up one directory in a tree and i believe i forgot to explain that when we covered the cd command i just wanted to keep it simple and not confuse people but that is the way you move up one directory while using the cd command now back to the copy command if we want to copy a directory it's a little bit different we have to use an option of dash or in order to copy that directory as well as all the files within it so all we have to do is type cp dash or and then we want to copy that test directory that test directory and i want to put it in the same location so it's the exact same thing all we have to do is type out a name so let's go test and then cp that's the name of the directory and press enter and if we ls our documents directory we should see two folders in there now one of test and one of test cp which is the copy now let's ls that directory as well so let's go test cp because i wanted to show you guys that it does have those files in there that we created under test so that should be a clear example of how to actually use the cp command now let me clear the screen right fast because the next command i want to show you guys has two features involved with it and it's basically the move command you can move files and then you can also rename files and this is what a lot of people use the move command for for instance if you have a file named file 1 and you want it to be named file 2 within the same directory a lot of times people will use the move command to actually rename those files within the command line because it's basically a faster command it's just two letters in order to rename a file so before i show you the command let's go to the man page as normal and the move command let's press enter and as you can see in the man page it even says that you can rename files with it and it also goes through the description as well as all the options for using the command but i'm gonna show you guys the simplest ones if you want to get more advanced then definitely check out the man page but let's quit and then let's ls this documents directory again because i want to show you guys the simplest way to run the move command by renaming file1.txt and i'm going to do exactly that example that i said a few minutes ago so let's just type move and then file name uh file1.txt and we want to rename it to file2.txt and we'll leave it in that same directory so we don't have to put the path in front of it and we can press enter and unless ls this directory and we'll see that file one is now file2 so that's in a simple example of using the move command to rename files and then you can also move the file through that process by specifying a absolute path which i'll show you guys now and so let's type move and then let's capture that file to file and we want to move it to the test directory and then let's also rename it to file three just to show you guys you can do all this in one command so let's press enter and that will move file to and if we ls this directory just to show you guys that it's gone now let's lsd test directory and press enter and that'll show us that we have that file three in there so basically we've moved and renamed at the exact same time by using one command and you can also do the exact same thing for directories with the move command so let's lse documents directory again and what i want to do now is rename the test cp to test pc and i apologize i typed the wrong command i put the remove command in there which i meant to put mv so apologize for that but let's go down and move forward but we're going to run that same command i'm just going to change it to the right command and i'm glad that didn't work because it's a directory i would have lost that file or directory but anyway let's run it now and we should be good to go so let's ls this directory now and it should be test pc so i apologize for that and even your instructor makes mistakes but let's keep rolling right on with it and by showing you guys all these commands you should be able to manipulate files within the linux file system so make sure you practice these commands because once you master these commands then there are more commands and more options that you can use in the future okay cool so now that we understand how to work with directories and files now i want to show you guys how to work with the content within a file and there are a couple commands that i wanted to show you guys that will help you do this now the first command i want to show you guys is the head command and as always with every command i will show you the man page first so head press enter as you can see it outputs the first port of a file now the purpose of this command it will print out the first 10 lines of a file and it'll do it right within the terminal and this is so you can get an idea of what's actually in the file so let's quit the man page right fast by pressing q and let's find a file to actually use the head command on so let's lsd documents directory and i may need to go into another directory yeah let's go into the ansible directory again press enter and ls again so we can list out the contents and let's go down and run the head command against the readme.md file so let's just go down type head and then read me dot md and press enter as you can see it pulls the first 10 lines now it's a little hard to count but the spaces are actually a line as well so that's why it shows content on blank lines as well as lines with content on it but it's the first 10 lines of the actual file now there is an option where you can show a certain amount of lines let's say you only want to see the first five lines of this same file so let's press up let's actually run that command again and run dash five and press enter and that will show you the first five lines of that line instead of the default of ten so that's a cool way of actually using the head command and now that we know how to use that command i want to show you another command that's very similar to this one and the difference between this command the head command and the command i'm about to show you is that it shows you the last 10 lines of a file so it's beneficial to use both of these commands if you're trying to figure out what's in a file without opening up the full file and the command i'm talking about is the tail command so we can type man man tail and press enter and as you can see it says outputs the last part of a file and the exact same thing as the head command but it's the total opposite while showing you the last 10 lines of the file so let's go down quit that and let's run the tank tail command against that same file and press enter and as you can see it pulls the last 10 lines of that actual file and just so you guys know this file doesn't have much data in it i believe it has about 10 lines in it that's why it's showing the exact same information as the head command so let me find another command to give you a better example so we can go into the lamp uh directory and press enter and let's ls this directory and let's find a better file to actually look at and let's look at the site.yaml file and let's run the head first so ahead against the site file and press enter as you can see it pulls in the first 10 lines now let's run detail command the exact same way and press enter and you'll see that the information is different and that's the last 10 lines of that file and i wish i would have found this file first because it's a better example as you can see the information is totally different from when we ran it the first time on the original file which only had a little bit of content in it now let's go down and clear right fast and i wanted to show you another command which is the cat command and since we're deep in a directory let's go down and make the terminal full screen that way you guys can actually see everything and let's clear the screen again and run man cats which is command i'm about to show you now and cat is short for concatenate files and basically what this command is used for is to print out all the content of a file not just the first 10 lines not just the last 10 lines but the full file itself so let's quit that and let me show you guys how to actually run that now so we could just run cats and then the site dot yaml file press enter and as you can see it pulls in that whole file and we can scroll up and see it but as you can see that's the full file right there so that's just a quick way of printing out everything now the cat command as i stated stands for concatenate so you can take information or content from multiple files and concatenate that information into one big file using the cat command that's one of the more advanced features of the cat command so let me show you guys how to actually do this by creating a couple files and then i'll concatenate the information within each one of those files into one big file now let's let's cd and then clear the screen right fast so i can bring everything up to the top so you guys can see now let's change directories to our documents directory press enter and let's ls this directory because i'm gonna have to create a couple of files right fast and i haven't shown you guys the echo command but this is the simplest way of actually creating a file along with the content in it so let's first look at the man page for echo i just wanted to show you guys uh this right fast but echo press enter and it'll display a line of text this is it's a simple command that's been around for a very long time that allows you to display information and really all we have to do is type echo and then we can type some text so and then i want to write d and put it into an actual file within this directory and all we have to do is type text one or whatever you want to name it dot txt and press enter and that will echo d into that file name as well as create that file for us and if we ls this directory right fast just so you guys can see you'll see that text one is there and if we cut out that file and i just wanted to show you guys this we cut out that file and press enter you'll see that the word d is in there now let's run the same exact command uh echo and let's put something different in there so and just so you guys know what i'm doing is pressing the up arrow that'll show you commands that you've already ran but let's see the and let's write big to this actual file and let's press enter and that's text too and let's run it one more time and let's create a file called test text three and let's put a word in here as well the big apple so it'll write apple to that form to that file now let's cut out each one of those files right fast so you guys can see exactly what's in each one of those files and we'll start with test one press enter and then test two and then test three or text three press enter and so as you can see it says the big apple now watch this if we run the cat command against all three of those commands we'll see all the text printed out from each one of those text files so let's type cat and then we can type test text one and then text two and then text three and press enter as you can see it puts it all together so that's what the king kat that's what concatenates means it'll put the content of multiple files into one printout and you can also extract it all to another file which is a little bit more advanced but i just wanted to show you that it is possible to do this by simply we can run the same exact command but instead of it outputting to the terminal i wanted to output that information to a file so let's create another file and all we have to do is type the greater than sign and we can name the file all dot txt and press enter and if we ls this directory we'll see that we have another file now called all so if we cut out the all file right fast we'll see that that text is there so it basically took the text from text 1 text 2 text 3 and put it all into one file which is super cool and just think of the possibilities by doing something like this if you have a file with 100 lines in it or a couple files with 100 lines in each one of them and you want them to be combined you can use this simply the cat command in order to do this now let's say you want to create a file and you want to type the content within that file wanna show you guys the simplest way by using the cat command this is another feature of the cad command and let me clear the screen so we can get it back up to the top but let's let's start off by creating the file using the cat command and what we need to do is put the greater than sign and then we can name the file whatever we want it so let's name this file one dot txt and press enter and then as you can see the cursor is stuck to the lefthand side that's because we're using the cat command to create the file and then write the content into the file so all we have to do is type in whatever we wanted to say so i could type i am having a good day period and then you can actually add more than one line you don't have to keep typing you just press enter and it will take you to the next line and then you can continue typing i hope you are too now let's say you're finished done writing everything you want within this file in order to save it all you have to do is hold the control button and press d and it'll drop you back down to the command line now i know that's kind of weird where to put it but let's press enter just to get it out the way and now let's actually catch that file right fast so we can see exactly what's in it and press enter and that'll cut out that information for us and i should have put a return at the end of it that's why it's putting the the terminal prompt right after the end of the file which makes it kind of look weird but that's essentially how it works but with if you follow that process you can create the file write in the content that you want to write into the file and then save the file in that location now let's press enter again because i want to ls this directory because i don't think we i showed you that the file was actually there but as you can see file one that's that actual file now there's another cool feature of cat that i want to show you guys you can actually copy files or you can use it as a copy for a particular file and if we cut out uh file one again that way we can look at the text again so you guys can actually see what's in it we can actually copy that file and rename it something else by using the cat command like this so we can just type cats file one and then all you have to do is put the greater than sign and then name the file whatever you want to so i'll just name it file 2 dot txt and press enter and if we ls this directory again you'll see that there is a file 2 and if we run the cat command against file 2 that will show us the contents of that file which is exactly the same as file 2. all right cool so now we understand that let's uh clear the screen because i wanted to show you another command that helps when working with files now this is typically used when you have a very large file that you're trying to go through and look at and this command is called more so we can type man and then more and this will give you information about it but basically it just parses out data to your terminal but it allows you to tab through different pages and i'll show you guys how to actually use it once we get into it and i found a quick file let's see under the ansible directory and then the lamp directory hp i believe proxy press enter unless ls is directing i just want to try to find it uh in the provision.yaml file so let's run more against provision dot yaml file press enter and as you can see at the bottom now this is by running more more shows you the percentage of the file that you're at as well as you can tab through per page instead of going line by line with the cat command where it just kind of prints out everything let's say you want to look at everything like uh page by page if you hit the space button bar that'll go to the next page and if you hit it again that'll go to the end of the page and that's a super beneficial command as well now there is an alternative that some people like to use which is less and i'll show you guys that now using it against that same command but first let's go to the main page for less just so you guys can see it but it says the opposite of more so let's type it in and just run it right fast so let's go less and then the provision and file again just press enter as you can see it's pretty much the same you could tab as well and you can go back up you know what i'm saying and back down you can go line by line as well with this command but if you hit space that'll take you down to the end and all you have to do is hit the q command that'll quit the actual command but that's essentially a higher overview of the less command and the more command and this concludes all the commands i'll show you that'll allow you to manipulate the content within a file on the linux operating system so let's move on to the next segment okay guys so in the next segment i want to show you guys a high level overview of how the linux file six system is structured and i'll show you by basically bringing up the full file structure in the terminal and then break down each directory underneath the file system so let's go down and hit cd and then the forward slash and this represents the root of the file system and every file included within the operating system is stored under this one location it's similar to the windows operating system how everything is structured under the c drive well it's the same thing but a little bit different within the linux operating system so let's press enter there and what i want to do is run the ls command and then i'll run the dash l option and this will give us the full structure of the operating system and i'm gonna scroll up right fast a little bit just to put it all in so that everything is listed out and i'll go through and break down each one of these folders and like i said this will be a high overview because i don't want to go too deep and confuse new users of the linux operating system i just basically want to explain what a lot of these folders are used for and this will give you a better understanding of how the operating system works okay and the first directory i want to show you guys is the bin directory and this is where most of your binary files are stored now this means linux terminal commands and core utilities such as the cd command which we just used uh the pwd command which is print working directory which i showed you guys a little earlier as well as the move command and so on pretty much this is where all those binary files are stored now the next directory is the boot directory and this is a very important directory and you don't want to go playing around in this directory this is where all the needed files for the for linux to boot or kept and a lot of people that are used to running linux they typically separate this directory on a different partition from the remainder of the operating system especially when you're working or doing dual booting but that's a little high level for you guys i just wanted to give you guys a overview of what this folder is for and just a a little bit more of an idea of what's located in this directory is the boot files as well as grub most of the time which is a small program that allows you to select the operating system and boot the operating system now the next directory is cdrom and that's obviously where your cd drive is stored so anytime you put a disk into your linux operating system it'll show up under cdrom now the next directory i want to really talk about is the dev directory that's the next directory down and this is where all your physical devices are mounted so all your hard drives uh usb optical drives and the reason i say optical drive cd drives because they can be mounted under this location or stored under this location as well it just all depends on the different distributions different distributions store things in different places sometimes they have a extra directory here and there that's why i didn't talk much about the cdrom folder which is obviously that's what that's for the cd drive but typically that's stored and depending on the distribution the cdrom drives are stored under dev as well but all your hard drives are stored in this location they're they're actually mounted from that location and also if you have like multiple partitions on a single drive those will be stored under this location as well and you'll see that once you start really diving in how to partition a hard drive for your linux operating system now the next directory i want to explain to you guys is the etc directory and it basically stands for etsy but this is where all the configuration files are stored and this is for all the applications that are installed on the linux operating system so let's say you want to install an apache server well they'll have configuration files stored under the etc directory or if you want to set up my sql or if you're trying to modify your ssh connections or your configuration for your ssh server then the configuration file is underneath there and most of your configuration files have an extension of conf so conf okay and so the next directory is basically the home directory and i kind of explained this when i was showing you guys how to navigate the linux file system by using the cd command well the home directory is where all the user name folders are stored so anytime a new user is created on the system depending on if that option is selected or not a home folder is actually created and this is where all your documents and photos and video files they're all stored under that user's home directory which is stored under this home folder now the next folder is the live directory and this is where binaries are kept and a lot of times you'll notice that many that many times when installing linux packages additional libraries are automatically downloaded and they almost always end up in the live directory somewhere and just to simply put it these files or files that are needed for your program to work on linux and just to relate it to windows you can think of this folder as somewhat an equivalent of the program files folder on windows but keep in mind it's not 100 exactly the same and just to explain these other folders that are in there that says live live 32 is basically if you have a 32bit piece of software this is where the libraries are stored for that as well as system 64bit software that is where those libraries files are stored as well and then there's a lib x32 and this contains library files as well now the media directory which is the next directory i'm going to skip over that lost and found that's just a typical folder that's in aext4 partition but the media directory is basically another place where external devices such as usb drives whenever you plug them in they'll they'll pop up in there or you can mount them in there and it all depends on the linux distribution sometimes you may not even see that media directory you'll see a mount directory which is the next one i want to show you guys and this is basically a placeholder folder used for mounting folders or drives and this is where i typically mount external drives or remote drives to my operating system and like i said it is simply a placeholder and a lot of times i'll create multiple folders underneath that depending on where i'm connecting to let's say i'm connecting to a shared drive or i want to mount a shared drive on another server that's within my network and i wanted to always to that location i'll create a folder for it and i'll name it like the server name or something or the share name and then i'll set it up where that share drive is mounted at that location every single time the system boots up now the next folder is the opt directory and this is for optional software for the system and that's the simplest way to put it and i never have used the app directory for anything but it all depends on the distribution you're using as well now the prod directory is an important directory as well this is the processes folder where a lot of systems information is represented as files and it basically provides a way for the linux kernel to send and receive information from various processes running in the linux environment now the next directory is the root directory and this is different from the actual root location this is basically the home directory for the root account you know like we have the home folder and then josh where there is a builtin user called root that has full permissions to pretty much everything on the system with ubuntu they have this account disabled by default but it has its own home directory so if you ever logged into that root account which i don't recommend this is where the files are stored for the root directory so if you download something uh it'll default to the root directory while you're running as the root user now the next directory is the run directory and this is where a lot of drives are auto mounted when you like plug in a usb drive and this is something that's really only relevant to desktop environments so if you have a desktop environment installed a lot of times they'll have the run directory under your route where a lot of those drives that are like auto mounted to the system they'll pop up under run and you can unmount them from that location and let's say you want to mount them under the mount directory or the m t directory then you can easily do that but they put that there for newer modern linux distributions so that when you plug in a usb drive it'll automatically mount at that location i don't normally use it but it is there for a lot of users that are transitioning from different operating system just to make it more user friendly now the next directory is s bin and it's similar to the bin directory except that is dedicated to certain commands that can only be run by the root user or super user and this directory kind of depends on the distribution as well now the temp directory this is basically where files are temporarily stored and most of the time when you shut down the system it'll delete those files from that directory and i actually missed one of the directories and that's snap snap is a new way of actually installing applications by somewhat containerizing the application uh using they call it snap packages and you'll see that a lot in ubuntu systems but this is where that is stored now the us or directory it basically contains files and utilities that are shared between users that's why i call it i i just said the usr but it's i typically call it the user directory that's simply what that is it's just utilities that are shared between users and then the var directory is basically where variable data is kept and it's usually system logs but can also include other types of data as well like for instance if you're running this thing as a server then the default location for apache is var and then there's a folder underneath that called www and then html so that's where that's actually stored as force files and then they also have log files within there like if you're running a server and you have an apache server setup then you typically will see your log files under war and there's a directory called log and then also under the root directory you'll see a swap file uh depending on if you have swap on the system and typically if you install it without making any changes or modifying the way the system is set up you just take the defaults when you're going through the installation then you'll typically have a swap file and this is just an extra place to store things that are stored in memory that haven't been accessed for a while so let's say you have a browser open but then you go over and start working on something else and you eventually get to the point where it needs to store your system needs to store some information that you have open that you're not currently using well sometimes it'll write it to the swap file so that's essentially what that is but that's pretty much the linux file structure i just wanted to cover it this way just to make it super simple where i just talked about each one of the directories and you can see them on the system as i go through them so let's go down and move on to the next section in this next segment i want to cover some systems information commands that you can run within the linux terminal now when you have a desktop environment there are gui tools that can provide most of the information that i'm going to show you within the command line but it's a good idea to at least understand how to get this information from the command line and just to show you the gui version of kind of what i'm going to show you from the command line i just wanted to open it up right fast you can basically go hit those activities and then you can search in here for a system and you should bring up the system monitor and like i said this will give you a lot of information so this is the system processes that are running on the system uh and this is similar to opening up the computer management on windows systems but you can see your resource information as well uh file system information as well so hard drives and all that good stuff now i'm going to show you how to look at all this information from the command line because all this information is pulled from some of the folders that i actually showed you within the linux file system and it's just put in a graphical user interface so you guys can see it a little bit better but you can easily do the exact same thing from the command line which i will go down and show you now so let's go down and close this and open up the terminal and let's zoom in again and sorry i closed it but i need to show you guys the gui version of the commands i'm about to show you now let's start off with a couple basic commands like for instance i want to show you guys uptime up time so we can type man man up time just to show it to you but it basically tells you how long the system has been running so let's quit that and let's run up time and press enter and that's basically the information that it gives you it gives you the time that the system has been up as well as the amount of users and the load average of the cpu which is some of the information that's pulled into that system monitor now the next command i want to show you guys is the free command and this deals with memory so we can type man and then free and press enter and as you can see it says displays amount of free and used memory in the system so we can press q for quit and run free all i'm gonna do is just run the basic command but it gives you these this information for the memory usage on your system and like i said i just kind of wanted to show you guys a high overview or the base level of what the command is used for because a lot of these commands are used by systems administrators because when you're running a server you don't have a graphical interface you have to do everything from the command line and i don't want to make this course too advanced i just want to touch on some of these commands because it will definitely help you when you start going for linux certifications now the next command i want to show you guys is the ps command and this command will display linux processes that are currently going on it's and it's simply a snapshot so it won't refresh it'll just pull in what's currently happening at the moment on the linux operating system as far as snaps as far as processors processes that are running on the system so the first thing let me open up the main page for the ps command just so you can see that it does have a man page as well as some detailed description on how to use it but the basic way i typically run it is ps and then dash capital a this is the only way i think you should actually run it and like i said this is just a snapshot of all the processes so let's say you need to kill a process because occasionally that happens uh you need to go in and kill a process well this is the process id right here uh that number that shows the process id so you can actually kill a process if you need to via the command line i won't show you guys how to do that but that's something you may have to do in the future once you get a little bit more familiar with using the operating system now let's get into some hard drive or hard disk commands that i want to show you guys from the command line and i don't know if you remember but within that system monitor application you'll see that it showed some of the disk information and partitions and all that stuff well let me show you how to find that information from the command line if you need it and the first command i wanted to show you guys was the df command so let's type man df and basically this reports file systems disk space usage so let's go down and quit the man page and run the command and we could just run it it has a number of options but i'll just run it just to show you guys how to actually use it but as you can see it pulls in a lot of information based on the disk space like for instance this is the partition that housed the root directory and you can tell by it being mood mounted or the mount location but it's mounted at root so that pretty much holds the operating system right there and just to make the information look a little bit better so you can understand it because it's kind of hard to read this stuff in bytes well there is an option just like i showed you on other commands but it's dash h for human readable and that'll basically give you the sizes in a readable format and as you can see that breaks it out right there so as you can see the full size is 30 gigabytes and the operating system is taking up about nine gigabytes and you have 21 gigabytes available and so 31 is actually taken up but this is a lot of great information you can get about hard drives and hard disks and partitions that are connected to your linux operating system now let's clear right fast because i want to show you guys another command and it's called f this so let's type man f this and press enter and as you can see you can manipulate this partition tables now this is a great command but just to pull information about your partitions you want to run the dash l option which is represented right here so that's the way we're going to run it that's typically how i pull information that i'm trying to see about partitions on the system so eftis dash l and press enter they may not work because you need permissions and this is where the pseudo command actually comes in on and i'll still cover that pseudo command in the next segment but i'll just run it so you guys can kind of see but i really want to explain what sudo is actually used for in the purpose of the actual program but sudo and then f this dash l and press enter and it should access for our user account password or our pseudo password so to speak and this gives you a little bit more information about all the partitions on the system and as you can see right here this is our main hard drive again a vda 32 gig uh and it breaks out all the different partitions as well as the partition types and the sizes and all that good information about the disk now let me clear because i want to show you one more command that i think is beneficial for you guys to actually learn or check out but let's type man and then there's another one called ls block and let's press enter and as you can see it lists block devices so let's press q and actually run the command so let's go ls block and see the results that actually comes up and as you can see it gives you a little bit more information but as you can see it breaks it down a little further it shows you the boot locations of pretty much everything or the mount points which it did using the other command but this is just another command that can help you while you're trying to check on discs that are connected to the system and i know you guys are probably wondering what are these loopbacks just ignore them you don't have to worry about it a lot of times that's just special block devices that are mapped to like normal files and it shows up as a virtual black device that's essentially what that is now let me go down and clear again but now let's put all this information together i showed you guys how to look at the processes that are running on the linux operating system as well as the cpu load the uptime and the memory information well there are some builtin utilities that you can use to look at all this information just like you would in the gui version but it's for the command line so the first one i wanted to show you guys is top so if we run man top this will just give you some information about it but it basically says displays linux processes but it it displays more information than what you think so let's go down and hit q and just run top so you guys can see it and as you can see it will update just like the processes were updating in the gui but this is all on the command line it's a little bit difficult to understand if you don't know what you're looking for so that's why i wanted to throw in the other one and the way you get out of it you just hit q and it'll drop you back down to the terminal but let's clear again and let's run man h top and i'm 100 sure this application is stored stored on here and it might not have a manual but i'm sure this application is on here but so let's go down and install it right fast uh because i want you guys to actually see it because there are some utilities that have gotten a facelift and as you can see h top it has the same word in it as top you know i'm saying it just has a facelift so it'll look a little better within the command line and you can get a little bit more information and it runs pretty much the same as top okay cool so let's install let's uh run h top as you can see it gives it a it gives a better representation of what you're actually looking for and i recommend you install htop if you don't have it installed on your system most systems comes come with htop install by default i'm not sure why ubuntu decided to remove that but htop is a very valuable utility that's beneficial when trying to troubleshoot applications so as you can see you can get out of it using f10 or q and that'll exit out of h top so that concludes this segment showing you guys how to get some systems information from the command line so i'll see you guys in the next one now the next command i want to show you guys was dealing with networking now if you have a desktop environment there probably is a network manager uh in the gui and i'll just go there so you can see it but under wire connections you can go to wired settings and this will bring up the network connections which is under settings and you can go through and modify your settings as far as like setting a static iop address or changing up your dns servers you know all that good stuff you you can do it right here within a gui but i also just wanted to show you how to gather that information from the command line by showing you two specific commands the first one is an older command that's been around for very long time but it's called if config similar to ipconfig on a windows operating system so i have config press let's go to the man page and looks like it isn't a man page and they might have removed this command from the system um because i know it's becoming the oldest version or it's like an older version to look at the ip addresses associated with the system yeah and as you can see it's not on the system by default so let's go down and install that as well so let's go sudo apps install and you can easily install these uh packages that way you can use some of these tools that i'm going through you can follow this i'm just writing sudo app install and then the net tools and i know i haven't covered the software management piece but i'll get into that in a little bit i just wanted to show you guys these commands that should be on the system by default it all depends on the distribution that you're using because you could probably install a debian operating system and it may or may not have this tool on it but i still wanted to show it to you guys because it's still relevant it's something that a lot of people still use but i'll show you the newest version of this command in a couple seconds next now let's uh clear the screen and run if config and press all right actually let's go to the manual because it should have a manual now so if config press enter that'll open it up and basically what it says is configure a network interface so most people use it just like ipconfig just to get the get the ip information on your system so ifconfig press enter as you can see it pulls up the network device which that is the name of the network device on this system yours may have a different name but it's essentially the exact same thing and as you can see this is my ip address as well as the ipv6 address there as well and other basic networking information uh now i won't cover all of this but i just want to at least show you how to gather that information now the newest version of this command is actually ip and this should be installed by default now uh man ip yes and it is it says shows manipulate routing network devices interfaces and tunnels and this is a way more detailed command there's a lot of options that go along with this command and hence this is why it's replacing ifconfig so let's press q to quit to get out of it and let's clear and just run ip and press enter and that should show you the help but i wanted to go let's uh ipa that'll pull all the ip information as you can see it pulls up basically the same information this is the device name right here as well as all the ip addresses underneath it so ipv4 in ipv6 as well as your other device information on this system and once you learn this command you can make changes to it you can set an ip address a static ip address or you can add more connections to it and force your system to pull another ip address and you can change how you write route traffic but a lot of that goes into these systems admin type of roles but i at least wanted to cover the command so you guys can see how to actually gather this information if you need to so within this segment we're going to cover the sudo command as well as the software center and the apt package manager which is what you'll use to manage software now before we get to the package manager as well as the software center i wanted to talk about the pseudo command just so you guys can get a clear understanding of what it actually is and just to simply break it down for you sudo stands for super user do and is used to access uh restricted files and operations because by default the linux operating system restricts access to certain ports of the system preventing sensitive files from being compromised and what happens when you run the pseudo command it temporarily elevates privileges allowing users to complete sensitive tasks without logging in as the root user so first thing i want to do is run man and sudo that way you can get a little bit more information about it and like i said i always run these man commands so you guys can see where to get the information for each one of these commands so let's press enter uh sudo and it says x execute a command as another user and typically is used to elevate a user to a super user status or as the root user of the system and the simplest way to relate it to a windows operating system when you want to run something as administrator you right click on the application and hit run as administrator now it doesn't actually for a password you know in windows but you do have to take that extra step to run things as the administrator it'll just simply pop up with a prompt asking you if you want to run this application as an administrator but in linux it's totally different you have to type in your password anytime you want to elevate your privileges so let's go down and quit and the way i'm gonna show you guys is what i typically use the sudo command for and that is updating your system now there are multiple ways of updating it i believe in earlier parts of the course i covered how to install packages within the software center which i'll bring it up after this just to show you that it's actually using sudo while using the software center as well but i wanted to cover in the command line how to update the system but before i do that let's run the man command against apt as well because most applications do have a manual and this is the case for the app package manager and as you can see it says command line interface and what it's used for is to install and update packages now let's go down and quit that i just wanted to kind of show it to you but apps actually stands for advanced package management tool and basically it facilitates the process of installing and uninstalling linux software packages an app is typically the package manager for debian based distributions so majority of debian based distributions will have the app package manager installed and ready for you to use to install packages on the system and depending on what distribution you are using there are other package managers out there but like i say that i want to focus on apps so now let's use the sudo command and app command to update our system now the first command i'm going to run is sudo apt update and just say break this command down first we're using sudo to elevate our privileges because we can only make changes to the operating system files if we elevate our privileges because a lot of the packages the where the binaries are and all that stuff is in an area that's owned by the root user of the operating system and in order for us to make changes to it we have to elevate our privileges so that we're running the command as root so this is simply what the sudo command is for and then we have apps which is our package manager and then there's an option called update and what update will do just to break it totally down most linux distributions have repositories where they store authorized software that you can install in the system and the update command basically updates the cache of the available packages to your operating system and this is something that you want to do because it'll let you know if you have updates so if it's if a new package is on their repository that's installed on your system then it'll let you know after running the update command so let's go down running now so you guys can kind of see what is what it's going to do and anytime you run sudo you have to type in your password for your user account unless it's timed out because i believe it's a time period of five minutes or so once you authenticate once if you run the sudo apt updated command again within that five minute time period it won't actually for you for the password again and so basically what it's doing is hitting all the ubuntu servers where packages are stored and it's refreshing that the cache on the system and as you can see we have three packages that can be updated on the system now and so in order to update our packages there's another command you basically run sudo apt upgrade this is how you actually upgrade those packages so you have to use the upgrade option with the app package manager in order to upgrade the packages because right now it didn't do the update it just told you that you had updates to the actual packages but in order to upgrade them you have to type upgrade and just to point this out right right fast you can actually look at what's being updated by uh running apps lists and then dash dash upgradable that'll list out the actual packages that are about to be upgraded before you run the upgrade command so now let's just go down and run it so you guys can see an update to the system and then right here it kind of shows you what packages are being updated and right now the python 3 update manager is being updated uh update manager is being updated and update manager core is being updated and then it tells you three upgraded applications will be installed and it also tells you how much additional space will be taken up by these upgrades so as you can see that's not much uh but let's go down and press enter or you can type y for yes and that's basically confirming that you want to upgrade these packages and essentially that's pretty much it that's how you update your system and now that we've done that let me go down and show you guys the software center uh and this will allow you to install applications i believe i showed a little bit earlier but i didn't go through and install anything so let's go down and install something here so you can see that the sudo command works pretty much the exact same way so let's install which is an image manipulations program and essentially all you have to do is click on it and then there's a button that says install and one cool thing about this package manager right here it it has reviews of the packages uh from everyone that's using it and you know information about the actual package that you're installing and all you have to do is hit install and this is basically running it as sudo because it has to authenticate it's exact same thing as if you were running it within the command line so let's press authenticate and then it'll go through the process of installing the packages package and at the end of the day this is doing exactly what you can do within the terminal and within my first couple years of learning linux i forced myself to not use the package manager i forced myself to install things from the command line and i recommend you do the same that way you can get the hang of actually updating installing packages from the command line because that's the best way to actually do it but let's go ahead and wait for this thing to finish this is kind of uh a pretty decent sized uh program so it'll take a little while to actually install but as you can see it's almost there it's right at 90 percent so let's wait a couple more minutes but i just wanted to show you guys that that's the full process of opening installing an application and that's pretty much it and if you ever want to remove an application all you got to do is hit remove so let's go down and close this i'm not going to open up the package that i installed but before we move on i want to show you a couple more things you could do with the app package manager right fast i figured that would be better for you to understand the actual program but if we type sudo and then apps and let's say we want to search for a package uh and you got to kind of know the names but all you have to do is type sudo app search and then the package name let's look for that same package that we just installed so uh search and it'll search the repository for the package menu or the package that we just installed now it doesn't narrow it down too much because a lot of these packages have in it but uh if you scroll through here you'll see the actual package and maybe that was a tough one to actually look for so let's go back down to the bottom and search for something else and let's uh press the up arrow and let's search for a zip program and we all know zip from windows how you compress files and folders you can use the the zip package where there is a ported version of zip on the linux operating system that you can use to zip and unzip files so let's go down and search for that and see if it's there and as you can see i believe is a zip tool or a zip not zip tool but it should be yeah here we go zip it's uh that is the actual package so archiver for zip files so that's a way to search for applications so let's say we want to install that application the package name is what's in green at least on the linux operating system and like i said other distributions use different package managers so different commands to actually search for packages but let's say we want to install zip let's go down and install it right fast and the command to install it and let me move my mouse out the way but it's sudo apps install and then zip and you can press enter and that'll install the zip package as you can see zip is already installed it already already has the latest version that's why it didn't do anything because zip is already installed so let's try unzip because then sometimes unzip is not on here let's try that and see if it goes through now unzip is on there as well so anyway that's pretty much how you install a package now let's say you want to remove a package and one thing we can remove is the unzip package and all you have to do is type sudo apps and the command to remove it is simply remove so remove and then and zip or actually let's uh remove the package and just press enter and i'll go through and remove and i believe i might have installed a snap package so that may not work so it wasn't installed through app through the package manager sometimes it'll default to the snap version and i know i didn't explain that guys but a snap is essentially a containerized piece of software that you can install it's they call it a snap package it's a new thing that they're pushing to manage packages but app is still relevant and it's something you need to learn in order to use that linux operating system so let's try removing unzip all right fast and we can remove that actual application should be good to go so unzip is going to be removed and then we'll just install it back on the system but that rip fully removed unzip from the system now let's go down and install it back on the system by just running uh sudo apps install unzip so you can see you know something actually being installed and that's pretty much it so you can use the zip and unzip package on this system and that's pretty much how you use the package manager on a linux operating system and this mainly will work for debian based distributions if you're using a different distribution then you'll have to refer to the package manager's documentation for that distribution of linux okay so in this segment i'll cover a couple text editors and this is very beneficial to understand so you can make changes within the linux operating system and i'm talking about like configuration files for various applications within the operating system that you'll occasionally have to do like when you install certain applications for example an apache server then there are configuration files that you have to modify in order to get apache up and running the proper way and so it's beneficial it's very beneficial to understand how to use a text editor so i'm going to show you two of the major ones that i recommend you guys start learning in order to get proficient with editing within the terminal because if we look around the desktop we can easily look around the desktop and there is what they call a text uh like i forget it's called text editor yeah and most links distributions if it has a desktop environment it'll come with a text editor it could be like mouse pad or something like that and you could easily make changes in here but it's better to understand how to use it from the command line so i wanted to cover it right fast uh so you guys can get a better understanding of it so first one i want to show you guys is nano and nano is the easiest and simplest one to actually use so let me go down and show you guys how to get started using nano and the first thing i want to do is open up the main page for it so you guys can at least see the information about the actual program and if we check it out you know i'm saying the manual has a lot of good information that can help you understand how to actually use it now let's go down and find a file in order for us to edit so let's go cd um and i know under documents and ansible and i think it's uh i think we have uh let's see a couple files in here we can edit so lamp uh simple let's go into there and press enter and then let's ls this directory right fast and there or let's try that host file right fast so uh actually let's cat it out right fast because i want to see how long it is which it really doesn't matter it doesn't have to be too long yeah that's a good enough file size so let's edit that file so let me clear right fast and the easiest way to use nano is just simply type in nano and then the actual file name which was host host and press enter there we go so let's just go down to the bottom i just kind of want to show you guys you can just easily edit this thing simply like this so let's type uh ubuntu and then let's just type 20.04 uh lts but that's simply how you use the text editor now let's cover some of the menu options now let's say you needed help uh while you're actually using this uh you could just with the up arrow right there on each one of these that's basically the control button so ctrl g so let's hit ctrl g and that'll open up our help so as you can see that's the help right there you can go through it you know i'm saying it kind of explains a little more uh and explains those commands down at the bottom uh now we can uh just press q and that'll get us back to the actual file itself but just to cover some more of these options you got exit right believe right below it uh you got ctrl o which is writing out the changes so let's like for instance let's use that now we made changes by adding this ubuntu 20.04 lts so we can do control o and that'll write out our changes to that file name it's basically going to access are we sure we want to write it to that file uh and that name or we could change the format or we could change the file name if we wanted to like make a copy of it but let's save it as that file so that's cool it says write wrote nine lines and it basically overwrote that file and then we have read so that's uh control or uh control w is where is and that's beneficial if you're let's say looking for something in a big long file or a configuration file that's basically your search and then the control backslash that's actually a find replace then you got control k so let's say we want to cut this whole line all you got to do is be at the front of the line and hit ctrl k and that'll cut that actual line now let's say we want to paste whatever we just cut uh we can uh just do control u and that'll paste whatever you had there or whatever you'd recently cut so super cool that that's actually there cut paste you know what i'm saying uh then you got your ctrl j for justified uh ctrl t to spell and then ctrl c cursor position and then control underscore go to specific line and one thing that's beneficial for let's say you're a programmer or something a lot of times when you're programming an application or a script or something uh it'll throw an error and it'll tell you what line the error is on so it's beneficial to use that if you're looking for a specific line within the file that was thrown from the error while you was building whatever script or application that you was working on especially if the file has like a thousand or something lines you know within it it's very beneficial now that's pretty much the high level overview of the nano text editor so let's go down and exit out of it and just to show you how to exit it you can just hit uh control and then x and then we did make some more changes to it so it's basically asking you if you want to save those changes so all we have to do is type y for yes and then it's going to access if we want to write it on to that same file name press enter and that'll actually save out that file and we can cat it out right fast right fast by typing uh cat host press enter and i'll cut out that file we can see that those changes have been saved to that file now the next text editor i want to show you guys is vim now vim doesn't come on ubuntu by default you have to install it so all you have to do is type uh sudo apps install vim and that will install it on your operating system and let's go down and run it again uh even though i already have it installed on here i just want to run it so you guys can follow along and see how to install the vim text editor but vim is based on vi or v i believe vi came first and then vim it it's just basically vi on steroids it has a lot of features uh you can set key bindings and all kind of stuff uh using the film text editor and a lot of people rant and rave how great them is but i'm one of these people that like to i don't know just get things done it doesn't matter how it gets done so a lot of times i'll use nano but i do understand how to use vim and i see the power in using them so shout out to all you vim users out there um i definitely like the program but let's go down and give you a simple usage of the vim application and let's clear right fast and let's go down and open up a file using film so i'm just open up this readme.nd file there we go and as you can see the navigation is pretty much the same as nano but the problem or the thing that kind of kind of messes people up when they're first learning you have to use commands in order to do certain things like for instance you can't just type right now into the actual uh program you know what i'm saying into the text file you have to put it in what they call insert mode and the way you get the insert mode is just simply by typing i and then you'll see down at the bottom insert mode so scroll down add some changes to here so let's type ubuntu 20.0 and then lts boom so in order to get out of insert mode all we could do all we need to do is just hit exit and that will take us out of insert mode and we can go back to just navigating the file or whatever but now this is basically stored in memory you know what i'm saying whenever you open up an application you make changes to something it's kind of stored in memory it hasn't been written out to the actual file and that's similar to the nano text editor as well whenever you make changes to the file it's re is basically changed in memory and then until you actually quit the application or save the actual changes then it's actually just in memory and there are commands in order to save things in them and so i want to show you guys some of them right fast so in order to let's say we want to write out those changes that we made um in order to do that all you have to do is hit the escape button and then type colon and then w and that'll write out the actual changes so let's press enter and as you can see we made those changes uh it tells you at the bottom right there written out so those changes we made or in the actual file now let's verify that we actually save those changes by let me show you guys how to quit it so all you have to do is type colon and then queue and press enter and i'll actually quit the file and then let's just cut out that file right fast to read me that way we can see that those changes are there and if we and if we look right here uh you'll see the ubuntu 20.04 that we may change to you know the file those changes were saved so let's go down open it up again uh in film and let's say we want to make those changes or change uh let's say we want to remove that lts out the end of it so let's go insert mode uh and then we could delete that text out of there now let me show you how to actually quit it instead of just writing the changes out let me show you how to quit it and save it at the same exact time so all we have to do is type escape and that will get us out of insert mode and then we just type colon and then right and q so w and q and that'll write changes and then quit the actual file so let's press enter and we can cut it out again just so you guys can see but if you look up here uh the lts is gone so that's basically how you make changes to the actual file you just go into insert mode and then you can write out those changes or you can quit and save those changes and then let's go back into it right fast and i just want to show you guys how to quit it without making changes uh and simply you can go back into insert mode right there and let's say we want to type lts and then let's say this is a very long file we start going through it and we don't remember what all the changes or the changes that we made within this file so let's say uh we don't want to save any changes that we actually made to this file so all we have to do is type colon or actually get out of insider mode first then control i mean then hit colon and q and then bang or the exclamation point and press enter and i'll actually exit out without saving those changes and we can cut it out again just to make sure uh but the changes that we did made uh they're not they weren't saved to the actual file so good to go now like i said i just wanted to give you guys the basics i could go like very deep into this actual command or into this actual text editor as well as nano i mean nano is you know awesome as well it's pretty basic but bim you know you can go super far with it but most people had issues with saving and exiting the actual program there is a meme that goes around a lot of times with a joke on it basically saying how do i exit them you know what i'm saying and it's kind of funny or whatever but hopefully these guys get you started with working with with text files within the terminal using a text editor so this concludes my introduction to linux course i hope you learned at least the basics of using the linux operating system because i think this will motivate you to want to learn more and throughout my years of working in the i t field i have always heard people say that learning linux is too confusing and i hope this course dispels that myth so make sure you keep practicing me because the way to become a guru is to keep using linux so i hope you have a good day and keep it techy you
