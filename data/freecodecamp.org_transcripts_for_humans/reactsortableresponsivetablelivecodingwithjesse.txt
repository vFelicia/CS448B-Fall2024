With timestamps:

00:04 - hey everybody is Jessie and today I'm
00:09 - going to attempt something that I
00:12 - haven't done before and I'm not exactly
00:13 - sure how I'm going to do it and I'm
00:15 - excited about it I don't know about you
00:18 - but I get excited when I'm going to do
00:19 - something that's going to be cool and
00:21 - useful to the user and especially when
00:24 - I'm not really sure how I'm going to do
00:25 - it because I know I'm going to learn
00:26 - something and it's going to be awesome
00:29 - when it comes together and happens so
00:32 - let me show you I'm kind of right in the
00:38 - middle of kind of taking this stuff and
00:42 - making it its own component and I was
00:45 - going to put it in the utils falter and
00:47 - because I'm going to use this in
00:49 - multiple pages now so it'd probably be
00:51 - better if it was separated out so that's
00:54 - in anticipation for what we're about to
00:57 - do and let me bring bring a window over
01:02 - so you can see so I did make oh that's
01:08 - not good I made the search function live
01:14 - so for now this is the alignment of the
01:18 - search if you watch the this show when
01:21 - we set this up there was a lot of debate
01:23 - over how we should align this so I'm
01:26 - expecting another input to be here in
01:29 - the near future we'll see how it goes if
01:34 - we do end up not putting something here
01:36 - then maybe this will change but for now
01:37 - it's right here and it works and we also
01:42 - added the the images or live they don't
01:45 - show up all the time when I'm doing
01:48 - local development but on catechetical
01:51 - calm the images show up at least one
01:54 - image there's only one image that's been
01:55 - uploaded that's big enough to actually
01:57 - be used the rest of them the width gets
02:00 - checked and it doesn't use them if
02:03 - they're not wide enough so we're going
02:06 - to work on today
02:09 - if my alright I'll just show you over
02:12 - here
02:21 - for some reason it's not reloading
02:32 - but the live site will be fine so what I
02:35 - want to do on the events page down at
02:38 - the bottom right now I have this
02:41 - responsive table right so it works even
02:46 - on small screens because you know you're
02:47 - you get to scroll horizontally and
02:53 - obviously even when it gets smaller you
02:56 - know still works not ideal if you're on
02:58 - a screen this small but but it's
03:03 - definitely more usable than a normal
03:05 - table would be it which would throw off
03:06 - everything and we'd have horizontal
03:07 - scrolling of the entire page so what I
03:11 - want to be able to do all these are
03:14 - pulled in from the WordPress API so what
03:20 - I think I should do it might be the
03:22 - easiest is I want these to be sortable
03:25 - so if you click date you can get it from
03:29 - right now it shows the events let's see
03:34 - so the events that are coming up the
03:37 - soonest or at first so that's by default
03:40 - how everything's sorted which makes
03:43 - sense people probably want to know
03:45 - what's coming up soonest but there's a
03:47 - lot of other things you could sort by
03:49 - year so potentially you someone might
03:52 - want to sort by any of these things with
03:54 - the exception of link obviously probably
03:57 - the emails don't need to be sorted by
04:00 - but I could see definitely these might
04:05 - want to sort by these although kind of
04:07 - stinks everybody has doctor and from
04:08 - their name because it's not is everybody
04:12 - if everyone's a doctor maybe it'll work
04:13 - out but now I say so it is going to kind
04:17 - of mess up the alphabetical sorting here
04:20 - but since people have doctor but other
04:24 - than that you can see my point it would
04:26 - be nice to be able to sort this either
04:28 - you know alphabetic order reverse
04:29 - alphabetic order maybe reverse it so we
04:31 - see the events that are coming up the
04:34 - latest first I think location will
04:36 - probably be the most useful
04:39 - you know maybe somebody's not interested
04:41 - in traveling for so they don't care
04:43 - events not near them so maybe they want
04:46 - to you know sorted by that the other
04:49 - thing I'd like to do if I have time is
04:51 - have a search bar for for this so just
04:55 - like we had on the resources page they
04:58 - could search I'm not sure where I would
04:59 - put the search bar in this setup here
05:01 - would be it would be a little bit more
05:04 - awkward awkward looking I think to fit
05:07 - it in here so I have to give some
05:08 - thought to that but I can at least get
05:10 - the the functionality down and then
05:13 - worry later on about how I'm going to
05:16 - style that but that the search function
05:21 - could be super useful because you could
05:22 - potentially just put in the name of your
05:25 - city or a city near you and then get
05:28 - that or the name of a speaker but you
05:29 - really like and then they would just
05:32 - Auto populate just like the resources so
05:35 - at first I thought I would just take
05:36 - whatever data automatically got pulled
05:38 - in you know on the initial page live
05:41 - from the WordPress API and then just
05:43 - manipulate that data to sort it
05:45 - differently but then I thought maybe it
05:48 - would be better to actually make another
05:53 - API call when we do a sort and I'm not
05:58 - I'm not 100% decided on this but my
06:02 - reasoning being you the limit on how
06:06 - many how many events I can get from an
06:10 - API call is 100 so there may be some way
06:13 - around that limit but that's that's the
06:16 - limit I've hit with the WordPress API
06:18 - limits you 200 which is fine you know
06:20 - you don't want to pull in a ton of data
06:22 - but the you know for something like this
06:24 - it's not really a lot it's just some
06:26 - text you know JSON so I had thought well
06:30 - if somebody you know if they really
06:34 - wanted to get a more accurate listing
06:38 - you know let's say they want to go in
06:40 - reverse alphabetical order well they
06:44 - want to see everything from these
06:46 - speakers so I don't I don't know not not
06:51 - just whatever the you
06:53 - the first 100 that came up let's say
06:54 - there's 500 events in here I don't think
06:57 - they'll ever be that many but if there
06:58 - were 500 they'd be missing out on most
07:00 - of the events so anyway think about that
07:03 - let me know what you think on what would
07:05 - a user expect from sorting this or is
07:11 - there a totally different way or would
07:14 - just the search bar be sufficient and I
07:16 - shouldn't even worry about necessarily
07:18 - about the sorting as much all right I'm
07:21 - going to go and say hi to everybody in
07:23 - the live set I just wanted to get
07:25 - everything out of the way for people
07:27 - that are joining maybe for the first
07:30 - time just kind of let them know what's
07:32 - going on if you are joining joining for
07:35 - the first time this is just me streaming
07:37 - projects that I'm working on for my
07:40 - everyday job so it's not necessarily a
07:43 - tutorial some sometimes it kind of feels
07:45 - more like a tutorial but a lot of times
07:48 - it's me just trying to figure out how to
07:50 - do things and everybody watching helping
07:53 - out with that so if you're interested in
07:56 - that stick around if not thanks for
07:59 - joining in and maybe join a different
08:02 - time alright so let me look it looks
08:06 - like everybody's just saying hi hey
08:07 - everyone oh there's spoilers it says hit
08:18 - hits hearth I'm not sure if that's how
08:19 - you pronounce the name sorry if I
08:21 - mispronounced it hits heart says want
08:23 - spoilers something new is coming to FCC
08:26 - free code camp I'm I'm interested in
08:30 - that I don't know is anybody else
08:31 - interested I don't know what's what
08:34 - spoilers it would be but I'd be excited
08:39 - about something new Andy asks what's
08:45 - going on hopefully you just heard my
08:47 - explanation it looks like you you asked
08:48 - that before I explain this hopefully got
08:50 - that also
08:50 - so Andy M is in the live chat he also
08:53 - does a live stream so I don't I haven't
08:56 - really talked to Andy about it but I did
08:58 - check out a little bit I only had a few
09:01 - minutes the other day but I
09:02 - I thought I want to check out some of
09:03 - the live streams so I didn't watch a lot
09:06 - but I did check it out so if you want
09:08 - more live streaming check out Andy's
09:10 - channel on YouTube all right so we got
09:22 - one question in in the latch at says
09:27 - what data are you pulling at the moment
09:28 - a limited number of events by date yeah
09:31 - so right now the data that I'm pulling
09:34 - is a 100 100 events now what I did I I
09:45 - think I may have made this so that it
09:50 - doesn't show previous events let's take
09:54 - a minute and look at what the code I did
09:56 - this a few weeks ago so I actually can't
09:58 - remember I know I had intended to make
10:01 - it like that but I can't remember if I
10:02 - did so let's go into events I'm going to
10:05 - come back to this in a minute but let's
10:09 - go to events and see okay so I'm
10:18 - filtering by date order by ending so
10:34 - look down where I'm actually using it
10:36 - maybe I have oh now I remember I did end
10:43 - up
10:50 - ended up doing something
10:58 - maybe I didn't maybe I'm not seeing it
11:04 - here if you all see this when you can
11:06 - check out the the github repo it's it's
11:08 - all updated at this point and you can
11:12 - check this out as well the links in the
11:14 - description I also have links to what we
11:18 - worked on yesterday which was setting up
11:20 - prettier and standard J s which by the
11:23 - way is really amazing I'm really liking
11:25 - using that so then they submitted that
11:28 - pull request to set all that up and I
11:29 - really appreciate that because every
11:31 - time I use it I'm just I just love it
11:34 - even more so let me just explain since I
11:38 - can't find in the code whether or not I
11:40 - actually did this here's what my
11:42 - intention was
11:43 - I have I'm obviously pulling a date here
11:47 - so I have two different dates that I'm
11:49 - pulling one is the displayed date so
11:52 - that's what you see here so this is the
11:55 - format that it was requested that the
11:57 - day be put in so that's that's how it
12:02 - shows up and that's just a text field
12:03 - that whoever's managing that content
12:06 - puts in there they can put whatever they
12:08 - wanted to but that's not really easy to
12:12 - sort by right so I needed a better
12:14 - format for the date so then I also added
12:16 - a field that would give me the date in a
12:20 - format that was easier to use so I have
12:23 - that format as well and I'm not doing
12:28 - anything with it yet it looks like at
12:30 - least here but my intention was to only
12:36 - show events that were going to happen so
12:40 - any events that had already happened
12:43 - they wouldn't show up anymore now I
12:47 - guess it wouldn't be ideal to do it here
12:50 - and assorted here because that would be
12:52 - a waste of your data being sent so the
12:55 - ideal place to do it would be actually
12:57 - so I froze scrolling around here it
13:02 - would be actually here where I make the
13:04 - call
13:05 - so they give these parameters for what
13:07 - date I want and then that way I wouldn't
13:10 - even waste time even
13:11 - grabbing data that I know I'm not going
13:13 - to use so filter by date but I don't
13:19 - think I'm yeah I'm not doing it there
13:26 - I'm not sure how how I do it so I have
13:31 - it set up so that it could be done in
13:34 - terms of the data coming through and
13:36 - I'll show you what it looks like
13:39 - let's grab we'll take a look at this the
13:43 - raw data that might be a good place to
13:46 - start and then we'll all be on the same
13:48 - page in terms of what data were actually
13:49 - getting and you know how we can
13:52 - manipulate that to do what we want it
13:59 - sounds bad when I say I'm going to
14:00 - manipulate the data like like I'm doing
14:03 - something wrong to it but I'm not I'm
14:05 - just just going to add it into the site
14:11 - event
14:20 - all right so here's the data that I'm
14:25 - getting we have a title we have so
14:30 - here's the day this is what I was
14:31 - talking about and it's easier just to
14:33 - show you so we have two dates
14:36 - there's the display date and then we
14:37 - have the actual date and it comes in
14:39 - this just in this format which is it's a
14:43 - nice easy format and that you know it's
14:47 - I can just sort on the date varies I
14:51 - don't even have to convert this or
14:52 - anything like that which if you've
14:54 - worked with dates in JavaScript it's not
14:56 - always the most pleasant thing to do but
14:58 - I don't even have to worry about that
14:59 - it's just one number the higher the
15:01 - number means the later the date so what
15:11 - do you think I'm going to go to before I
15:12 - do this I make a decision on this I want
15:15 - to go to a live stream I'm going to see
15:16 - if I've got responses to any of the I
15:18 - think I've had several questions over
15:20 - the last couple minutes so I don't want
15:22 - to get too far ahead of myself I may
15:25 - have had some really good ideas and a
15:27 - come through the live chat Oscar says hi
15:32 - from Colombia hey how's it going thanks
15:35 - for watching
15:39 - Dennis s is that Dennis or didn't he
15:44 - sorry if I'm mispronouncing that a DN is
15:46 - what what do you think about async/await
15:49 - promises I'm actually using a weight
15:54 - like async/await stuff here I don't
15:58 - think I'm as I'm knowledgeable enough
16:00 - about async/await and promises to give a
16:03 - really good answer I will say the few
16:05 - times that I've used them I've really
16:07 - liked using them basically it's always
16:09 - in the concept context of using fetch
16:12 - that I end up using async/await and
16:16 - promises and stuff so I like it but I
16:21 - don't know enough about it to give you
16:22 - any detailed explanation of it but it's
16:24 - definitely easier than like having lots
16:27 - of callbacks and things like that
16:31 - umberto says I'm always working using
16:34 - database back and then still don't have
16:35 - much information about WordPress API but
16:37 - maybe a drop-down for each row to filter
16:40 - on dates the filter would be a date
16:43 - range names would be a list to pick from
16:46 - event titles and locations ha it's just
16:50 - possibly too much functionality for a
16:51 - small feature I hadn't thought about
16:53 - before let me think about that for a
16:54 - second so let me bring this over so you
16:58 - just get the visual so we're thinking
17:00 - there would be a drop-down for each row
17:06 - and then in that drop-down they could
17:12 - select something either a date range or
17:16 - something else in this rows to filter by
17:20 - hmm that that could work that could
17:29 - definitely work
17:30 - I could populate the dropdowns based on
17:32 - the data that I get from the API so
17:34 - everything that was in here could be in
17:38 - the drop-down I could do a check and if
17:41 - it if it equals something that was
17:42 - already in the drop-down it wouldn't put
17:44 - it in twice that could way that would it
17:49 - would be you're right it would be a lot
17:50 - of work it might be overkill for this
17:52 - feature but I think in terms of the
17:56 - layout of the site this is kind of
17:58 - tucked away now you know it's at the
17:59 - bottom of this page which I realize this
18:02 - this is the main event that's being put
18:04 - on by this cata catechol Institute so in
18:08 - terms of conferences this is this and
18:10 - this are their main conferences so this
18:13 - is more of a collaboration I think with
18:14 - another department here but you know
18:16 - this is their main conference so they do
18:18 - want to highlight that but really for
18:19 - from a user's perspective this is
18:22 - probably going to be one of the most
18:23 - useful parts of the site I would say
18:25 - this and the resource section that we've
18:27 - been working on for the last week or so
18:29 - so it might warrant a little bit more
18:33 - work
18:36 - I don't know let me know let me know
18:39 - what you all think about that or would
18:42 - it you know we could potentially do
18:44 - something similar just with a search bar
18:46 - that OTO suggests things and we can
18:54 - populate the autosuggest
18:55 - from these values as well would that be
18:59 - cleaner I'm a little worried about the
19:01 - clutter of dropdowns all right let's um
19:06 - actually do I want to get into some code
19:08 - so there's definitely some stuff that we
19:11 - can do without making these decisions
19:13 - yet so I want to get in there and do
19:15 - some of that stuff to prepare and then
19:19 - that way we'll get some things done and
19:21 - you will get to see some coding since I
19:24 - claim to be live coding and so far I've
19:27 - just been live talking so we'll do some
19:31 - of that first and then we'll come back
19:34 - and make some decisions on how exactly
19:36 - we want you know visually this to look
19:40 - and for people to be able to search but
19:42 - I mean I think it's pretty much agreed
19:45 - at least in my mind that somehow there I
19:48 - want users to be able to filter these
19:51 - ice or sort them in some way to find
19:55 - what they want and more easily than
19:57 - having to actually scroll right now
20:00 - there's not that many but eventually it
20:03 - could be really difficult to find what
20:06 - you want and not a good user experience
20:08 - alright so here's what I was thinking we
20:10 - need to set up so I have I know this is
20:13 - a little bit smaller than normal and
20:15 - that's on purpose because I have had
20:17 - these side-by-side and I needed to see
20:19 - what was going on so I will zoom in in
20:22 - just just a few seconds here but I have
20:27 - resources on this side because resources
20:29 - is not going to be the model for how we
20:31 - do everything else because we had a lot
20:34 - of refactoring going on here and some
20:36 - pool requests related to this so this is
20:39 - kind of the most polished way to do
20:41 - things we're doing thing we're not using
20:43 - jQuery for everything here we're doing
20:47 - it you know more more of the react way
20:50 - I just noticed I had my phone right next
20:53 - to the mic so I apologize if there are
20:55 - any like static sounds I'm going to move
20:57 - it farther away now let me know if you
20:59 - hear static and I'll move it like to the
21:01 - other side of the room if I have to so
21:05 - anyway this is going to be the model so
21:07 - I've already started to bring over some
21:09 - of that into here so I will kind of move
21:14 - this over make this text bigger so we
21:18 - can all see so instead of just saving
21:22 - this data to props and being done with
21:25 - it now we're going to go we're going to
21:27 - set the state and we are initially going
21:30 - to take this data that's that's a props
21:32 - and we're going to use it to set the
21:34 - state and then we're going to down here
21:37 - man I can't wait until I get all this
21:40 - pulled in through the API so don't have
21:42 - to scroll through it but instead of
21:46 - props here it's going to be state so I
21:48 - can actually let's change this to state
21:50 - I think I have enough code near for this
21:52 - to work at this point change it to state
21:55 - and my dev server should be yeah it's
22:03 - working now so we can see you on
22:07 - localhost
22:07 - it did work alright so now we're
22:10 - grabbing from state the reason that
22:12 - that's important if you didn't see what
22:15 - we did with the resources if you didn't
22:17 - happen to see that that show that's
22:20 - important because now every time we
22:22 - change state all of these will
22:26 - automatically change and that's that's
22:29 - the react more of the react way to
22:32 - manipulate the Dom is through changing
22:34 - state and not as we were doing on some
22:38 - pages using jQuery
22:44 - all right so so that's that's done so
22:48 - that's basically converted to set us up
22:50 - so that however we want to sort this all
22:53 - we have to do is change change the way
22:57 - things are in state and then all that
22:59 - will fall into place we want to we want
23:06 - to add this so assuming we're going to
23:11 - make some API calls after get initial
23:16 - props I wanted to add this section here
23:19 - which we use for our API calls whenever
23:23 - we're doing our live search in the
23:26 - section for resources I want to extract
23:29 - this out and make it its own component
23:32 - so I've already extracted some of this
23:34 - out I'm importing isomorphic fetch now I
23:39 - realized when we when I first talked
23:43 - about this I was saying something about
23:45 - I don't know if this will work because I
23:49 - don't know about how it how it uses
23:51 - basically polyfills for fetch and
23:54 - everything I didn't know if this
23:55 - isomorphic fetch only worked in the
23:57 - server side but then when I was doing
23:59 - this again I thought that was actually
24:01 - kind of ridiculous and didn't make sense
24:03 - what I was saying before because
24:04 - obviously whatever is going on here with
24:07 - fetch works on the client side and the
24:10 - server side you know this works all of
24:13 - you otherwise our client-side routing
24:15 - would not work so that definitely works
24:17 - so I figured maybe I ought to import
24:21 - isomorphic fetch because maybe maybe I
24:24 - don't know this yet I could have tested
24:26 - it that's what's necessary to make fetch
24:28 - work either way on client side or server
24:30 - side so I did import that if you have
24:34 - any insight to know whether or not I
24:35 - need to import it here just let me know
24:37 - but I can always take it out but for now
24:40 - I'm going to import it so everything's
24:42 - set up here I think it's all set up I
24:45 - need to pass a URL yeah I'm passing the
24:48 - URL in here to get I need to pass
24:56 - kid you all yeah I need to pass the URL
25:00 - n as well here and I did have a question
25:10 - about the syntax I don't know why so
25:13 - when I'm using an arrow function here I
25:17 - don't I'm assuming here I don't need to
25:20 - put the parentheses around it right is
25:24 - that is that a correct assumption since
25:26 - I didn't do it here and it's working I
25:30 - know there's a delay in the live stream
25:33 - so I'm not going to get an answer right
25:34 - away but I'm going to go back to the
25:36 - live chat since now we've come a little
25:38 - bit further I want to make sure they
25:39 - lose anybody or I didn't miss a good
25:41 - suggestion and if you have any questions
25:46 - feel free to put it in the live chat
25:48 - I got keep calling the live chat live
25:50 - stream sorry about that
25:53 - put it in the live chat or if you can't
25:58 - stick around and wait for the answer put
25:59 - it in the comments the video or direct
26:01 - message me on Twitter I know if you I
26:04 - say that all the time if you've been
26:05 - watching but I'm mainly saying it for
26:06 - people who might be new and watching for
26:08 - the first time
26:11 - alright so okay so this is a
26:18 - continuation of the the question about
26:21 - async await promises since I saw you use
26:26 - promises and get JSON function but don't
26:29 - use async await there okay yeah actually
26:32 - that is a good question basically um the
26:38 - reason I didn't do that is because and
26:43 - this is going to be a this is going to
26:45 - make me sound like a noob but I'm
26:47 - obviously if you've watched any of my
26:49 - other episodes you know I'm not afraid
26:51 - to look like a noob this is how it was
26:55 - done in the documentation for next it
26:58 - had all this kind of pre-made so this
27:00 - has been adapted slightly to my needs
27:02 - but I this was from there so I didn't
27:04 - mess with it and I used it
27:06 - this I grabbed from a previous project
27:09 - and I knew it worked so I grabbed it and
27:13 - I didn't really modify it too much the
27:15 - only thing I modified was I use arrow
27:17 - functions so that when I use this inside
27:20 - of here it would be the right this which
27:23 - now what I'm extracting this out I'm not
27:26 - even sure if I'll have the right this
27:27 - anymore but we can test it and find out
27:30 - so the answer is I just hadn't even
27:34 - thought of that
27:35 - I hadn't thought of why I would use it
27:37 - one way or another I just knew that they
27:39 - worked and so I kept them like that and
27:42 - didn't really mess with them too much so
27:46 - that's that's the honest reason it's not
27:49 - a grant a really good reason or reason
27:52 - that makes me look good but that's
27:53 - really why I didn't use a sink or a wait
27:56 - there if someone else has more knowledge
27:58 - about when to use async/await and when
28:01 - to not use it please uh you know put
28:05 - that in the live chat because I'd like
28:07 - to know more about it as well I think
28:11 - that's how it is sometimes I don't know
28:13 - if it's like that for all of you but for
28:15 - me certainly sometimes you get you grab
28:17 - some code you know it works you know
28:20 - enough about it to modify to your needs
28:22 - but you still don't completely know why
28:25 - it works I mean I think that's it I mean
28:29 - don't think about I really everybody
28:32 - does that I think about all the packages
28:34 - that projects load from you know the
28:36 - node modules and stuff you know I don't
28:40 - know of anybody that knows what
28:42 - everything does and why it does what it
28:44 - does but we all still use it so that's
28:47 - what's going on there basically is I
28:49 - know it works I'm not exactly sure why
28:52 - it needs to be like that
29:00 - all right so Andres and what do you have
29:03 - to sort so maybe on maybe engines
29:06 - getting in a little a basically we're
29:07 - sorting this so we're going to sort by
29:10 - date would be useful to sort by and look
29:13 - date and location are going to be the
29:15 - most useful things to sort by presenter
29:18 - maybe but I could see presenter being
29:21 - more like something you would want to
29:24 - search for especially because we have
29:26 - doctor in front of a lot of names so
29:28 - that just messes up our alphabetical
29:31 - order right now I could maybe try to ask
29:34 - the person that's inputting all this
29:36 - data and WordPress to maybe put a comma
29:39 - and then doctor so we could but even so
29:42 - like we still have first names ideally
29:45 - we would have last name comma first name
29:47 - comma and then title but that wouldn't
29:52 - really look that nice so that might end
29:56 - up just being something that's
29:57 - searchable so in any case we want
29:59 - alphabetical order for this and then we
30:01 - want to order by date for this and
30:05 - possibly alphabetical order for this as
30:07 - well
30:20 - um dr. Pavel says hi Jesse as the title
30:25 - says find the nearby event may be better
30:27 - made search bar for an exact request and
30:30 - just button something like show nearest
30:33 - event use geolocation that's a great
30:36 - idea that was my initial idea when when
30:39 - the people I was making the site for
30:40 - requested this section it said find a
30:42 - nearby event I immediately thought geo
30:44 - location but that's not what they had in
30:47 - mind so this is one of the areas where I
30:49 - kind of delivered pretty much exactly
30:52 - what the specifications were but I had
30:55 - intended if I had time to do more than
30:58 - then what will say the client in this
31:02 - case but really they work at the same
31:03 - organization that I do so yeah I agree
31:09 - it makes if you're going to call the
31:11 - section find a nearby event you would
31:14 - expect some sort of geolocation or at
31:16 - least some place where you could
31:17 - manually type in your address or
31:20 - something like that so that's I'm not
31:23 - going to work on that today because you
31:26 - know if people came based on the title
31:28 - of what this is going to be which is
31:30 - being able to sort a table data in a
31:33 - table and react and I'd rather work on
31:35 - that now and then save the geolocation
31:37 - thing for another you know maybe
31:39 - tomorrow but I think that's an awesome
31:41 - idea
31:45 - let's see
31:52 - at a question about from I know if it's
31:57 - Michael or Michal I'm not sure how you
31:59 - pronounce the reason of doing of going
32:04 - with fetch as opposed to library like
32:05 - Axios Patrick gave a nice answer to that
32:10 - fetches a new shine this is Patrick
32:12 - tensor fetches a new shiny way to make
32:14 - things simple simple is the reason those
32:17 - libraries came about fetch is built into
32:20 - updated browsers so yeah yeah that's a
32:25 - great answer Patrick yeah fetch fetch is
32:27 - like is now the newer browsers its
32:32 - built-in so like it's it's more
32:35 - lightweight you don't have to add an
32:36 - extra library to do the same thing you
32:39 - just do it with fetch and it's easy I
32:41 - mean obviously you can see from you know
32:44 - from how it is here it's it's super
32:46 - short it's really easy way easier than
32:49 - trying to do with jQuery or even just
32:51 - straight xhr so that's that's why I use
32:56 - it and with the polyfill older browsers
32:58 - are fine too so you can pretty much use
33:00 - it for most projects yeah Patrick says I
33:05 - think isomorphic means work on the
33:07 - client and server in this context yeah
33:10 - Patrick's a single argument doesn't need
33:12 - parenthesis good to know
33:27 - all right so Andrew linked a design for
33:34 - it looks like better data tables so
33:38 - maybe I'll take a look at that
33:39 - I don't know Andrew do you want me to
33:41 - take a look at that now or should I just
33:42 - check that out later so anyway I'm going
33:47 - to this should work then assuming that
33:49 - I'm doing the correct thing when it
33:52 - comes to this then this should work so
33:55 - let's go ahead and save this and Wow
34:01 - where am I at
34:03 - projects I'm going to save this in Utah
34:08 - so should we just call this if I just
34:13 - call it fetch do I wanna yeah I'm gonna
34:21 - go with I was just checking to see
34:23 - whether or not the other component in
34:25 - here was uppercase or lowercase so it is
34:28 - already lowercase so I'll just go with
34:29 - that
34:30 - this was called fetch j/s whoa
34:41 - that was weird if you didn't see that
34:45 - Texas said the editor is not responding
34:47 - so that would have been bad ooh oh
34:51 - excuse me sorry to sneeze um that would
34:55 - have been bad if my editor crashed right
34:57 - in the middle of this uh okay so what am
35:01 - I getting all these yeah I haven't I'm
35:08 - going to get weird stuff happening with
35:09 - uh with my editor as far as the hints go
35:13 - because I haven't updated my packages to
35:16 - reflect the stuff that we're doing here
35:19 - I'm poor this motion fish I'm definitely
35:22 - going to get rid of all these soon
35:26 - alright so I'm going to save that and
35:28 - now we need to to test to test this I'm
35:31 - going to edit this resources file and
35:36 - we're going to import what do we need to
35:43 - import we're going to call
35:51 - so I'm just trying to remember which one
35:53 - I call first we're going to call get
35:54 - JSON and then that's going to call get
35:56 - so what I want to grab from there is I'm
36:00 - just going to copy this since we're
36:01 - going to use the same basic format here
36:05 - what I want to get is the function get
36:08 - JSON from fetch okay and we don't have
36:20 - to put the Dodge as obviously you can
36:23 - see here and that should be enough that
36:27 - should work
36:29 - so I'm going to save that and I'm going
36:34 - to bring over resources let's see we
36:46 - should now if I search this should work
36:49 - so let's go nice it does work great all
37:00 - right so now actually I'm not even going
37:05 - to look at what's in the live chat right
37:08 - now because I know somebody noticed this
37:10 - and it's trying to call me out I should
37:14 - have removed all that to make sure that
37:17 - it really was working so now I am
37:19 - removing it I'm gonna do a empty cache
37:23 - and refresh just to be sure that I'm
37:25 - getting rid all that now let's try it
37:28 - okay now it's not working so um
37:34 - [Music]
37:37 - oh thanks because you're saying bless
37:40 - you from when I sneeze thanks guys
37:44 - so we have a come from J Steve Martinez
37:48 - says fetch has no support on ie that's
37:50 - true yeah there's no support so you want
37:52 - to use a polyfill it's depending on what
37:55 - you need to support if you use older
37:57 - browsers use the polyfill for fetch to
38:01 - have it work in older browsers so I have
38:04 - used fetch before with the polyfill and
38:06 - gotten it to work in IE 11 I didn't
38:09 - tested any farther back than 11 but it
38:11 - does work alright so I'm going to check
38:21 - out Andrews saying that this link he
38:27 - sent is a good example of design for a
38:33 - table so let's check it out
38:43 - oops maybe
38:53 - I'm not getting I got a 404 when I tried
38:55 - to type that in what did I mess up yeah
39:09 - I'm getting a 404 till Andrew I don't
39:13 - know I tried to type in that link and
39:18 - it's not working for me
39:30 - yeah that's what I did Andrew saying
39:32 - changed the star with dot that's what I
39:34 - did I replace the I did replace the star
39:39 - with a dot and whoa what did it still
39:45 - four or four yeah okay so Sebastian is
39:47 - getting to four or four as well so it's
39:49 - not just that's just me I thought I was
39:51 - doing something wrong
39:54 - all right so let's troubleshoot and see
39:58 - let's see what's going on I guess it's
40:01 - not like I don't have to get this
40:04 - working right now so really we can skip
40:07 - this and just work on it later and then
40:11 - just get onto some more like the sorting
40:14 - stuff so I can throw this back in here
40:16 - and get rid of this for now and work on
40:22 - this later and let's just throw these in
40:27 - here oops
40:33 - thought I copied these I guess not
40:40 - there we go so we'll just throw those in
40:42 - there for now obviously it would be
40:45 - better to have these separately so we
40:48 - don't repeat ourselves and multiple
40:50 - multiple pages but for now this should
40:54 - work so what we need to do for now let's
41:03 - just have let's do a reverse date so
41:07 - let's see if we can reverse the date few
41:08 - because that should be the easiest thing
41:10 - to do we're going to have let's find
41:16 - it's fine where you have the date let me
41:21 - let me describe to you what's going to
41:24 - happen here so we can go through the
41:26 - steps to make sure this makes sense
41:27 - logically so what I'm going to do is on
41:33 - the date I'll bring it over here so we
41:38 - can all see it so where it says date
41:41 - here we're going to have an on click
41:44 - event handler there so on click it's
41:49 - going to fire off a call an API call
41:52 - that is going to grab this data and it's
42:00 - going to basically use the same URL
42:02 - except it's going to order by descending
42:05 - instead of ascending all right that's
42:08 - what I'm starting with this one is going
42:09 - to be so easy to to do at that point
42:13 - it's the state is going to get reset
42:18 - with this data that's now sorted in a
42:22 - different way and then that's going to
42:26 - change change the order of these does
42:31 - that make sense to everyone
43:05 - all right so we're just going to make a
43:07 - function I'm going to make the function
43:09 - first before I even before I do the
43:12 - click the on click because that's not
43:14 - really a big deal so I'm going to make
43:19 - the function and all we really need is
43:27 - when we do this is to grab we just need
43:36 - to make a call an API call so I'm
43:40 - actually going to grab a lot of what we
43:43 - did over here just so we don't have to
43:46 - type it out again because it'll be very
43:49 - similar
43:55 - so this is already doing a lot of what
43:57 - we want to do here we'll just have to
43:59 - change the parameters in for the API
44:03 - call all right so basically we're
44:05 - getting near this is the URL and these
44:08 - are the parameters which we're now going
44:10 - to change to this
44:22 - and we're going to change this to
44:27 - descending so we're going to change the
44:29 - order and then so we're making the API
44:38 - call it's going why did I split this in
44:41 - between I don't want to split those up
44:46 - okay so we're making the call here and
44:50 - then that's going to use fetch within
44:52 - here it's going to return us JSON just
44:54 - great and then we're going to take that
44:57 - data that JSON data and we're now going
44:59 - to make that this state we're going to
45:02 - set that to data in the state once the
45:04 - state is set then that will trigger all
45:09 - the components you know to re-render
45:12 - down here so I'm going to save that and
45:18 - now what did I call this we call it a
45:20 - sort date okay so let's go down and find
45:23 - where we actually have the word date
45:30 - here we go so let's go on on click and
45:40 - then this is how we do we just call it
45:48 - this is how we called it
46:01 - um which the Patrick says why are you
46:04 - not importing get JSON and events dot J
46:08 - s I'm not sure I know perhaps Patrick
46:19 - saying dry man dry yeah so I want to do
46:23 - it like that
46:24 - but when I tried it I don't know if I
46:26 - maybe I did it on my other screen and so
46:28 - you all didn't see it but when I so I
46:31 - put this in this separate file here and
46:33 - I tried to import it in resources as a
46:35 - test and it didn't work
46:37 - I don't maybe I didn't say that out loud
46:40 - and just thought it sorry about that so
46:42 - it didn't work so instead of spending
46:44 - time trying to fix this right now I
46:46 - wanted to get more like to the point of
46:48 - the topic I don't want to be false
46:51 - advertiser here since since I made the
46:55 - title the video about sorting a table
46:58 - and I tweeted saying that I was going to
47:00 - try to sort a table I wanted to get to
47:02 - that if we get this down
47:04 - I almost said if we get this sorted but
47:08 - that would have been just trying to be
47:11 - funny but um if we get this down then I
47:15 - can go back and try to get this so
47:17 - Patrick I totally I totally agree with
47:21 - you and I want to do that so it's gonna
47:26 - happen but I just wanted to get
47:29 - something accomplished and not not spend
47:34 - my time on something that I didn't
47:36 - absolutely need to be to be working
47:38 - right right here so this should work
47:41 - right I know we had a vaguely remember
47:45 - that having some sort of trouble with
47:49 - whether or not what was I doing whether
47:51 - or not I call the function on and where
47:57 - did I do this
48:01 - come on click oh I guess I'll see it in
48:06 - a second
48:24 - okay so right now let me pull this over
48:26 - right now nothing happened when I click
48:29 - that so do I need to call this oh this
48:40 - always have to put this in there still
48:44 - nothing
48:57 - do I have to do it like I didn't think I
49:00 - had to put that but ya know I just
49:03 - thought could say someone I got a weird
49:10 - error here saying this thought get JSON
49:13 - is not a function yeah I have it in
49:15 - there don't I right oh shoot I need to
49:26 - use an arrow function for this okay we
49:31 - just went through this like last week so
49:33 - already I'm forgetting so we need to use
49:39 - an arrow function if you're not familiar
49:41 - with arrow functions there are newer
49:43 - thing
49:44 - it's es2015 or sometimes called es6 in
49:48 - this case the reason we want to use an
49:51 - arrow function is because otherwise the
49:54 - value of this is not what we want it to
49:57 - be okay so we need this to mean like the
50:02 - context of this basically this entire
50:07 - component here right this is or at least
50:09 - this section of the component so that's
50:14 - why we did this so before when I clicked
50:17 - it went through here but I got to this
50:19 - point it said I don't know what get JSON
50:21 - is okay because it was looking just
50:24 - within this scope so that's why we use
50:27 - the arrow function and you you actually
50:30 - end up using arrow functions quite
50:32 - frequently and react at least I I've
50:35 - been having to use them frequently and
50:37 - it's the same same concept here when
50:39 - we're using this as well so I'm sure
50:44 - there are other benefits using arrow
50:46 - functions but for our purposes right now
50:48 - that's the main benefit that's why we're
50:51 - using it so I've saved that and let's
50:55 - check it out
50:56 - so we've got rid of the air that's a
50:59 - good sign
51:00 - oh yeah and it actually did it did what
51:04 - we wanted so I'm going to refresh that
51:08 - so we can see it happen okay
51:12 - whoa I'll shoot because I'm calling it I
51:17 - knew I didn't have to put that on there
51:20 - anyway if you're wondering what I'm
51:22 - talking to myself about here originally
51:25 - I didn't call that there but then it
51:27 - didn't work and I I thought hey it's not
51:29 - working because I didn't do it right but
51:31 - that's probably not what happened
51:33 - so anyway it was just being invoked at
51:37 - least I think let's test it out and see
51:38 - if that's in fact what did happen okay
51:44 - good so when I click this we should see
51:46 - the switch yep
51:50 - there we go awesome so we started with
51:55 - events in June being here and going
51:58 - further down into the timeline you know
52:02 - further ahead in the future now we're
52:04 - starting with the latest event and
52:06 - working backwards so that works that
52:10 - works like we wanted to do so so since
52:14 - that works I'm going to go to the live
52:17 - chat and just check out make sure I
52:20 - haven't missed anything important and
52:21 - then we'll see what time it is we were a
52:26 - bit it's been like almost an hour to get
52:29 - to this point so I'll see maybe we'll do
52:31 - some more obviously we want it on a
52:33 - second click we want to be able to sort
52:36 - the other way as well so think about
52:40 - that for a minute while I go through the
52:41 - live chat I'm wondering if here's my
52:45 - thought this is what I was thinking when
52:46 - I first made this function what I'd
52:48 - probably do is somehow just do like have
52:53 - some variable it could even be a boolean
52:55 - or something that gets checked to true
52:57 - or false
52:57 - when sort date is run and if it's true
53:02 - it these params will change to either be
53:05 - ascending or descending so I don't have
53:08 - to write another function that does this
53:10 - I just switch this function in or out so
53:13 - it would accept
53:17 - yeah I don't know somehow I would switch
53:19 - that off that's what I'm thinking if you
53:21 - have a better idea please let me know so
53:24 - let's catch up here with the live chat
53:42 - um Missouri has some some other
53:45 - suggestions here for trying to get that
53:50 - article to work that Andrew had linked
53:53 - to so I'll have to have to check it out
54:02 - alright I'm going to copy and paste
54:04 - again this this new link that was sent
54:07 - yeah that worked this time so cool
54:17 - cool it looks good I'm scrolling through
54:20 - this on my other screen here this looks
54:22 - really cool I'm going to look through
54:24 - this after the stream and see I'm always
54:28 - I think I mentioned this before but I'm
54:30 - a little bit restricted in terms of let
54:34 - me bring this over like in terms of
54:36 - layout like a lot of these decisions as
54:40 - to how this worked like to make a change
54:43 - really like required a meeting and
54:45 - discussion so I'm so some changes are
54:50 - probably fine and I can make it and it
54:51 - wouldn't be a big deal but some changes
54:53 - may require like more meetings like I
54:56 - would make the change and then get an
54:57 - email or phone call shortly thereafter
54:59 - and so if the change is like for sure
55:04 - like needs to be done would make it so
55:06 - much better than I'm down to do that but
55:08 - if it's not really going to be a huge
55:10 - benefit to change it then it's probably
55:12 - not worth it to go through all of that
55:13 - so just so you know if you make a
55:16 - suggestion even if it's awesome I might
55:18 - not use it and it's not because I don't
55:20 - think it's awesome it's just because of
55:22 - that because of other factors so don't
55:25 - don't feel that if your suggestion
55:27 - doesn't make it in it's not it's not
55:30 - exactly up to me what makes it in with
55:32 - doesn't all right
55:41 - it looks like I didn't really miss that
55:43 - much in live chat I did a somewhat
55:45 - decent job of keeping up with it
55:48 - Patrick does mention the arrow function
55:50 - lexically binds this to the parent scope
55:53 - that's that's how you say it so hey
55:56 - thanks Patrick so Patrick has given a
55:59 - very accurate correctly worded
56:02 - definition here for what I was trying to
56:06 - say say with this so so I'll read that
56:09 - again just because it was so good the
56:11 - arrow function lexically binds this to
56:15 - the parent scope so
56:28 - all right Patrick says I feel like you
56:30 - should be using state state for this so
56:34 - do you mean is that in reference to me
56:36 - saying something about I needed to go
56:41 - both ways likes to switch the day and I
56:44 - was talking about some sort of variable
56:46 - that I would use like a boolean or
56:48 - something if you're talking about that
56:52 - let me know if you're talking about
56:53 - something else haha Patrick says thanks
57:02 - Scott Allen for that watch the video
57:04 - about it yesterday so his is an arrow
57:06 - function statement they're so cool I
57:09 - mean I know like going through what was
57:15 - it the book is that you don't know Jay s
57:17 - is that the one that's on github and
57:19 - this is totally free so I remember one
57:21 - of those books or something I remember
57:24 - getting the official definition at some
57:26 - point but it's hard to remember okay so
57:42 - all right so Jay stevemartina says sort
57:44 - date is getting the data you should
57:47 - already have in your state are you
57:52 - meaning let me see
57:54 - are you meaning that basically I already
57:58 - have all this data in the state from
58:00 - before so I don't need to make another
58:01 - API call so let me know I think that's
58:08 - what you mean
58:09 - let me know if I'm wrong about that
58:10 - Patrick says the fact that this table
58:12 - can be sorted means it has multiple
58:14 - states keep this stuff in state and let
58:16 - react render the Dom based on it okay so
58:27 - let's see okay and Jessie okay yeah says
58:33 - does next yes when in production have an
58:36 - index.html file I'll countered an issue
58:39 - using next how do you deploy with the
58:41 - index.html file um no I don't I don't
58:49 - think there's an it so you would need to
58:50 - deploy it to something that runs a node
58:52 - so node can can run in index j s instead
58:57 - of an index.html so that's what you need
59:02 - so it may depend on where you're
59:04 - deploying it to as to what what has to
59:07 - happen
59:09 - all right maybe if anybody in a live
59:12 - chat has a better answer please PLEASE
59:15 - add two to what I said but could you
59:20 - explain maybe more about what your
59:21 - production environment is like what are
59:23 - you running in terms of the server and
59:26 - then maybe maybe I gave you a better
59:29 - answer okay so back to back to the whole
59:33 - state thing help me out here so
59:40 - basically this state
59:50 - to saying keep this stuff in state and
59:53 - let react render the dorm based on it
59:57 - that's okay so Jonathan has just said
60:00 - basically what I was kind of thinking
60:02 - here
60:03 - [Music]
60:04 - can't we just sort the data so do this
60:07 - data sort so yeah actually I've thought
60:13 - about doing that I think I explained at
60:15 - the beginning whether or not so I had
60:21 - kind of two options either just sort the
60:23 - data that I already have which will work
60:24 - fine for now because we don't have that
60:26 - many events or make a separate API call
60:28 - the reason being when I make an API call
60:31 - at some point when we get lots of events
60:34 - I'm not going to grab every single event
60:36 - with that first call so I'm not actually
60:38 - going to have all the data saved in
60:42 - state like right off the bat
60:45 - so the idea what my thought process was
60:48 - is would a user expect you know if they
60:52 - if they hit this date here and let's say
60:58 - we have 500 events and I've only loaded
61:00 - 100 events they're not necessarily going
61:04 - to know that I've only loaded 100 events
61:06 - if I'm only sorting the data I already
61:08 - have then they're only getting you know
61:12 - a small number you know with a try 500
61:16 - then I get 100 they're only getting 1/5
61:18 - of the possible events now the reason
61:22 - I'm saying 100 is because in the
61:24 - WordPress API there is a limit on how
61:27 - many of the the post types you can grab
61:32 - how many particular posts in that type
61:34 - and the limit is 100 I'm assuming
61:38 - there's some way around that I just
61:39 - don't know it right now so I was based
61:42 - on what I have right now that's was my
61:44 - thinking for making a separate API call
61:46 - so anybody have any insight on that you
61:49 - know maybe I'm thinking too much about
61:51 - this and it would be fine to just sort
61:53 - what I have but I expected some point
61:56 - that there will be quite a few events
61:58 - here I don't really know what to expect
62:01 - exactly I'm not I'm not getting this
62:04 - data and I'm not entering this data in
62:06 - so I'm just not I'm not sure maybe maybe
62:11 - it'll never be that many events but I'd
62:14 - like to be prepared for that
62:16 - okay so Jonathan Jonathan said that
62:19 - makes sense okay all right good yeah I
62:21 - kind of like my first thought was
62:24 - simpler and it seemed a lot easier like
62:26 - I'll just sort all the data that I
62:27 - already have and potentially that would
62:29 - just be that would be faster anyway it
62:31 - already happens pretty fast so I'm not
62:33 - worried that much about speed but all
62:37 - right so that's why I'm making another
62:39 - API call it's not going to be that easy
62:41 - I think with everything as the date the
62:44 - dates the easiest thing to sort on but
62:48 - that's the basic idea so I think before
62:50 - I end this video I wanted to keep the
62:53 - videos short like around an hour so
62:56 - since there's not a lot of questions I
63:04 - think I'm going to finish up with at
63:07 - least this portion so that we can suit
63:09 - when we click on it again it takes us
63:11 - back to the initial state so I'd like to
63:15 - finish that because I think that would
63:17 - give if anybody else wants to like watch
63:19 - this and implement something similar if
63:21 - we finish at least that one that would
63:23 - give enough info I think to repeat it
63:25 - with multiple rows so let's try to
63:28 - finish this up and then I'll end the
63:30 - video normally I do you know kind of
63:32 - like I'm actually pretty long Q&A
63:34 - session at the end but there's just not
63:36 - a lot of questions so we won't have to
63:39 - have to do that
63:41 - so Patrick says okay well you want to
63:44 - conditionally sort based on the current
63:45 - state of the table you need to store
63:49 - that in state also don't retrieve the
63:52 - data over and over if the user clicks
63:54 - date again okay thank you for the
63:56 - explanation that makes perfect sense so
63:58 - Patrick's point here is so I had
64:03 - initially when it loaded I had all the
64:05 - data from this API call saved in state
64:08 - and then
64:09 - i overrode all that with everything in
64:13 - this API code now when I want to click
64:16 - that again I'm basically going to make
64:17 - this API call again which doesn't make
64:20 - any sense why not if I've gotten the
64:22 - state at once when I keep it stored so
64:24 - that does make sense and Patrick let me
64:28 - know if that is in fact what you meant I
64:30 - think it is but if not let me know so
64:33 - the thing is it's not enough for us just
64:36 - to keep making these API calls again and
64:38 - again because that's a waste although we
64:42 - will be caching API calls so technically
64:45 - it won't it won't necessarily require
64:49 - like a search through the database on
64:52 - the WordPress end but still it does make
64:53 - sense it'd be better to just keep it in
64:55 - state so let me think
65:06 - I'm just thinking about how how I'm
65:08 - going to do this so that I can keep
65:10 - things in state and here's what I'm
65:19 - thinking let me know if this makes sense
65:21 - or if you have a better idea so
65:22 - basically I'm still going to do this at
65:25 - the beginning this is going to be saved
65:26 - to data right in in-state then when you
65:32 - click to sort before this gets soared to
65:36 - data I'm going to basically take what's
65:39 - currently stored in data and I'm going
65:41 - to store it in some other variables so I
65:43 - don't even know maybe I'll call it old
65:45 - data right now I don't know there's
65:46 - going to be a better name probably but
65:48 - that of any name will work so basically
65:50 - everything that wasn't data now gets
65:52 - stored in old data and so it we still
65:56 - keep it all and then at the point when I
65:58 - want to switch back I just take what's
66:01 - in I can take what's in old data and
66:04 - move it flip it back up to data and this
66:10 - switch switch them out basically so I
66:13 - keep both of them now it it becomes more
66:16 - complicated when I add this to the other
66:18 - rows and do I want to keep every call so
66:22 - I may have to yeah it's I certainly
66:25 - could keep every call and just make
66:27 - different you know different sections
66:31 - within the state you know to hold them
66:33 - all does that make sense
66:41 - okay so Bastian says save the sorted
66:44 - data in sorted data
66:49 - when I got some other I got some
66:51 - detailed advice here so let me read
66:53 - through this Patrick says so grab
66:57 - ascending once grab descending once and
66:59 - then render based on state all right
67:01 - awesome so it looks like I did get that
67:04 - right so Alberto says for name if you're
67:08 - pretty sure that the last name will
67:10 - always be last you could do sort by like
67:14 - current valid split and okay so you say
67:17 - I can split it I'm actually not certain
67:19 - that the less I'm not certain of
67:24 - anything concerning the name I could
67:27 - probably like suggest a naming
67:29 - convention and have it right there and
67:31 - the instructions for whoever's importing
67:33 - it in so assuming that they follow the
67:35 - instructions maybe I could have some
67:37 - certainty that that would be it
67:39 - so maybe all right so let's let's get to
67:48 - this let's take a crack at this saving
67:50 - stuff in state and I'm going to I'm
67:53 - actually pretty excited about this
67:54 - because I mean this kind of gets at
67:57 - least for me this kind of gets to the
67:59 - thing that's cool about react is you
68:02 - know changing of state and having things
68:03 - rerender on the page very quickly right
68:05 - that's that's what's awesome about react
68:09 - among other things so being able to
68:12 - manipulate things like this is what I'd
68:14 - like to be able to do better than I'm
68:18 - already doing it so because I need to
68:20 - move out of building things like this in
68:23 - jQuery to building things like this in
68:27 - react which is much preferable to the
68:30 - the mess that usually happens when I try
68:32 - to build this out in jQuery which which
68:34 - starts out very simple and nice and then
68:37 - as features get added it just becomes
68:39 - very hard to maintain so let's just this
68:44 - is kind of try out um
68:48 - let's say so now I am going to use just
68:55 - the the silly name of old data no that's
69:03 - not what I want I want to set the state
69:05 - so this set state and I want to use let
69:20 - me use I guess I can just call I will
69:27 - call it old data so stop me if I'm doing
69:29 - this wrong but I'm going to use old data
69:32 - now I'm just going to use data right
69:38 - that's what needs to happen and then now
69:43 - this gets set so that'll be safe so
69:45 - that's the first step and I've just
69:50 - saved it and I've got no error messages
69:52 - I have it up on my other screen so
69:54 - that's good sign
70:03 - um now we need a way to switch it back
70:10 - so how am I going to do this
70:31 - let's see if I could just do
70:40 - I'm blanking out here so hey so I'm
70:50 - actually don't forget to set up the
70:54 - default state oh okay
71:01 - Sebastian says why not make both API
71:04 - calls on page load and then save them to
71:06 - state then make the button just change
71:09 - what is displayed pulled from the state
71:12 - that's a great idea however at least I
71:18 - probably could do it on component amount
71:21 - so I couldn't I can't make another API
71:23 - call here at least I don't I've tried
71:26 - before and it's come up with errors so
71:30 - there's I assume there's some way to
71:33 - make multiple calls here so it's not
71:35 - going to be here but what I could do is
71:37 - on component did mount I could do it
71:41 - then
71:47 - would that be preferable ought I to make
71:49 - all the API calls that I need on page
71:52 - load or should I wait because a user may
71:55 - not ever even click to need that would
71:58 - it just be what do you all think would
72:00 - that be would that be preferable because
72:03 - if a user did use it it would be faster
72:05 - or would it be more of a waste of
72:10 - bandwidth because I'd be making lots of
72:14 - unnecessary API calls I'm not I don't I
72:21 - don't really have a decision one way or
72:23 - the other at this point
72:24 - I'm going to think about it so let me
72:26 - know okay so Patrick saying set up the
72:33 - default state do you mean like here I
72:36 - need to set like old data up here and
72:43 - then have it do this I'm assuming that
72:45 - what you meant okay so this that state
72:53 - old data equals data so we've got that
72:56 - oh no I know that's what I need to do I
72:58 - should have wrote in some comments what
73:00 - was going to happen so I wouldn't forget
73:01 - so I usually do but so basically here we
73:05 - need to have a check what the current
73:18 - stay is and change data
73:29 - okay so basically I need to figure out
73:32 - which way it's sorted ascending or
73:35 - descending and then change the data so I
73:37 - need to flip this data around one way or
73:39 - another but I need to know I need some
73:44 - some way so what did I say earlier I was
73:47 - just going to have some some check like
73:50 - so we can make it
74:03 - actually what if we had here this is my
74:07 - idea what if we also added so let's say
74:12 - for each row so so basically we have we
74:16 - have data that's always going to be what
74:19 - gets rendered there is whatever is in
74:21 - data but then for each row we not only
74:24 - have you know old data and then I'm
74:29 - going to change it so this will end up
74:31 - being like date ascending date
74:34 - descending we'll probably have that so
74:37 - let's just do that now since that's what
74:40 - was going to be date ascending and then
74:47 - date descending and but then also we're
74:56 - going to have a date current state does
75:07 - that make sense
75:08 - is that too much because this I get
75:14 - ended up being like repeated for several
75:15 - of the rows but my thought is eventually
75:18 - we could have the ascending and
75:20 - descending both save to these and then
75:25 - the this will just basically say whether
75:28 - or not it's ascending or descending and
75:33 - that doesn't have to be a value that
75:34 - could end up being I just a true or
75:38 - false right so
75:45 - I mean this it could maybe be something
75:48 - like is date ascending true or false
75:51 - right I don't know this seems more
75:53 - descriptive me what it's actually doing
75:54 - though let me know what you all think I
75:57 - don't need that okay so what what it
76:04 - will do then is
76:13 - check so too many commas in class
76:28 - I think he's Jonathan just said too many
76:32 - comments I think he was referring to
76:34 - this last comment that I just took out
76:36 - so
76:37 - [Music]
76:45 - sorry I'm kind of like really slow it's
76:48 - actually super hot here and I'm
76:50 - literally just like sweating and
76:52 - sweating I don't want to turn my fan on
76:53 - because it's going to mess up the sound
76:55 - for the video but I'm like dressed up in
76:59 - a dress clothes and everything for my
77:00 - job and I'm just like dying here
77:03 - so actually I'm gonna I'm gonna need
77:06 - some water hold on a second I just I
77:08 - don't have to go anywhere I'm just gonna
77:09 - kind of pour it right here okay all
77:23 - right cool Jonathan Jonathan said you
77:25 - got that's what I that's what I thought
77:27 - it's tough cuz there's a delay when
77:28 - we're when we're doing this so I think
77:30 - you know sometimes there is like a
77:34 - little mix-up of of things Sebastian
77:37 - said is 31.5 degree C in his room which
77:43 - I'm in the United States so I don't
77:47 - really know how hot that is anybody know
77:50 - what that is in Fahrenheit I could look
77:52 - it up real quick
78:00 - all right so that is really hot that's
78:02 - like almost 90 degrees Fahrenheit for
78:04 - those of you in the u.s. so I actually
78:07 - used Celsius and the metric system when
78:10 - I'm cooking
78:11 - but then for the temperature I use
78:14 - Fahrenheit and that's I don't think
78:15 - that's common to use it for cooking in
78:17 - the u.s. people still six in Fahrenheit
78:18 - but all the cooking shows that I like
78:21 - are all usually from from the UK and so
78:26 - they they use Celsius so anyway let's
78:32 - get back to this so Sebastian if he
78:36 - feels my pain right now because it's
78:38 - also super hot where he is um okay so I
78:44 - still need some way so I have these set
78:47 - up at least a place to store what I want
78:50 - to store but I still need some way to
78:52 - set that and then and then check it so
78:57 - actually the initial state is always
79:03 - going to be ascending right because
79:10 - that's what we're loading first so the
79:12 - initial state for that will be ascending
79:14 - so I guess I could just put I could just
79:22 - put it in there
79:26 - I mean authoritah just put it right
79:28 - there okay we said about stuff in the
79:32 - live chat I'm going to check Flint
79:41 - Frankie I'm not sure how to pronounce
79:43 - Fla n ck e says old data could be an
79:48 - object that holds the query parameter
79:51 - used to get the data from the API so you
79:55 - can specify what old data exactly holds
79:59 - and you don't have to do the same API
80:01 - request again
80:11 - okay so it could hold the query it could
80:14 - actually hold the params okay
80:35 - I'm just so I'm just checking out the
80:39 - the code that was just put in live chat
80:41 - just to see see what's going on there
80:50 - okay
81:04 - wondering
81:07 - actually all right I just had an idea
81:12 - sorry if this is annoying you I keep
81:14 - having ideas and changing things but if
81:19 - this if this what makes sense this might
81:22 - actually work better than whatever I was
81:25 - trying to do right here so I have set it
81:29 - up before and I have it set up basically
81:40 - I've set up caching of the API calls
81:45 - like when I did something like this but
81:48 - I did it with all jQuery stuff I set up
81:51 - caching of the API calls so that
81:55 - obviously I wouldn't have to make more
81:57 - requests and it was set up so that every
82:00 - time an API call was made so basically
82:05 - this portion had a check inside of here
82:09 - and so it checked to see if those query
82:13 - params had already been saved and the
82:17 - reason I thought about this is is
82:18 - because Frankie just had the suggestion
82:23 - of saving the actual params along with
82:26 - the data so that got me thinking like
82:28 - well why not do that and so basically
82:30 - the it would be key we could essentially
82:33 - have key value pairs stored up and the
82:36 - key would be the query parameter in fact
82:39 - the entire URL would be the key and then
82:43 - the value would be the data so that each
82:47 - time I go to make the API request it
82:52 - checks to see if it's already been made
82:56 - and if it has been made instead of
83:04 - return making the API call it just
83:06 - returns what was saved and the key value
83:10 - pairs it could be saved
83:15 - I think it when I did it before I
83:18 - actually saved it in in local storage
83:21 - and I gave it an expiration as well so
83:24 - there was there's another piece of data
83:26 - there too but I don't know does that
83:30 - make sense does that make more sense
83:32 - than the lamb doing it right now - kind
83:35 - of like basically simplify things so
83:37 - that I don't have to spell all this out
83:40 - beforehand and it just kind of would
83:43 - build everything up and store it I don't
83:50 - know let me know
84:01 - I'm just wondering anyway so what I just
84:03 - described I'm just wondering like would
84:05 - that be the react way to do things like
84:08 - I said before I used local storage to do
84:11 - that but is that not the react way to do
84:14 - it what are the REC way to do it in fact
84:16 - be to just have it all set in state and
84:22 - and do it like that and not have not hit
84:26 - [Music]
84:27 - local storage not save stuff in there at
84:32 - this point I think I'm kind of
84:34 - overthinking it I knew that's why if you
84:40 - read the the tweet that I put out for
84:42 - this video I said I'm attempting to do
84:44 - this I wasn't sure that I would actually
84:47 - get it done
84:57 - all right so I'm not getting any
84:59 - response back it may be a little bit of
85:01 - a delay so I'm not getting response back
85:03 - on that so
85:04 - and I'm also losing viewers so I suspect
85:06 - that some people are in agreement with
85:09 - me that I'm overthinking this and it's
85:11 - taking too long
85:27 - click once
85:32 - actually let me do a let me do a silly
85:36 - thing let
85:45 - you
85:51 - toggle can I use that let's take table
86:00 - will equal zero state toggle
86:12 - those flus
86:16 - if
86:33 - if you're watching this and you're
86:34 - thinking what am i doing then I'm kind
86:38 - of thinking that too so just wait the
86:40 - idea the idea is this this is actually
86:43 - going to be really simple why not just
86:45 - set this variable oops I need to set
86:50 - this actually somewhere else outside of
86:52 - here so let's say let's actually make
87:01 - date current state equal to
87:08 - [Music]
87:18 - hmm
87:21 - can I just said something in state I
87:23 - don't have to make it equal to an array
87:25 - right could I just potentially make this
87:27 - equal to zero and then current state
87:35 - this let's see this doc current state
87:40 - I don't think so worry I've never tried
87:43 - this before this said state hold data
87:51 - let's go with
88:02 - start state
88:10 - you stay
88:19 - and I think my editor for us it's not
88:21 - let me do it there we go all right
88:26 - awesome that's what I thought Patrick
88:27 - just confirmed that I can set properties
88:29 - however I want um where am I at
88:34 - okay so the idea is basically like I'm
88:38 - just going to be able to click on this a
88:39 - bunch of time so instead of I don't know
88:44 - an easy way it might be like let's just
88:46 - increment every time I click it and then
88:50 - if it's an odd number
88:53 - it's the ascending if it's an even
88:57 - number is descending some makes sense
89:01 - everybody and then that way it'll just
89:06 - keep track so what I need to do then I'm
89:08 - setting it initially to zero okay so the
89:13 - first time it runs alright it'll just be
89:19 - one and then we're going to do an if
89:21 - statement here it's going to say so we
89:30 - need to make a call at some point so
89:35 - let's do
89:40 - alright so the first time it definitely
89:42 - does it does have to make the call
89:44 - because we have to get the data
89:50 - so I guess would be slightly more
89:52 - complicated than I expected
89:59 - alright Umberto's says I always use bull
90:01 - and set the value to exclamation point
90:05 - value so I used to not buy okay um let
90:11 - me does this make sense out doing it or
90:13 - is this just silly and more complicated
90:14 - than it needs to be be honest with me
90:17 - because honestly I'm this is taking a
90:21 - lot longer than I expected it to and I
90:23 - kind of want to just either finish this
90:26 - tomorrow or like get it working as fast
90:29 - as possible and then fix it up tomorrow
90:32 - or something I'd hate to just end the
90:34 - video at this point because it would
90:37 - feel slightly like a failure even though
90:39 - we kind of did what we wanted to do okay
90:46 - Patrick says it does make sense but it's
90:48 - a bit harder to understand me you come
90:49 - back to it okay I do I do agree yeah I
90:55 - think it would just be better if I could
90:58 - just have one value or another here's
91:01 - what I'm thinking though I'm just
91:02 - blanking here on maybe I should try
91:06 - streaming in the morning and my brain
91:07 - would be better at times I just maybe
91:11 - it's the fact that I am streaming and I
91:13 - so I'm trying to think and talk but
91:15 - occasionally it just seems like I'm
91:20 - better able to figure out this sort of
91:21 - thing when I'm not streaming I like to
91:26 - do it with all of you because you give
91:28 - me great ideas too but in terms of my
91:30 - contribution to this it always seems
91:33 - harder when I'm doing it but anyway what
91:35 - I what I basically have stuck at is when
91:38 - I click how do I change how do I change
91:46 - whatever value I'm going to put here
91:48 - whether it be a boolean or what and then
91:52 - check that check that here like I know
91:56 - what needs to happen but the step in
91:58 - between I'm just drawing a blank on what
92:00 - the best way to do that is
92:10 - okay umberto has an idea
92:18 - so and we also so Frankie says if so if
92:22 - WordPress returns only the first 500
92:24 - resources is there a flag that says if
92:27 - there are more in this case if we know
92:29 - all resources are returned then we can
92:31 - just sort it on the front end okay
92:37 - it actually WordPress only returns 100
92:39 - resources but regardless the point is
92:41 - still valid I don't think there's a flag
92:45 - that returns ID I'll have to check the
92:47 - documentation to see if there's it may
92:51 - have to be a separate API call but the
92:53 - API call I might be able to just get the
92:55 - number of how many I'm dealing with so
93:00 - yeah but it there's no flag I mean this
93:03 - basically this is the data that gets
93:05 - returned and that's all this it's just
93:09 - this repeated over again I am cutting
93:13 - out some of the fields so there probably
93:15 - would be some sort of ID let me see if
93:19 - there's an ID field okay so there is an
93:25 - ID but it looks like that's not going to
93:26 - help me I was thinking that it would
93:28 - start it like one and keep going up but
93:30 - it looks like it it doesn't because this
93:33 - is registering 260 and there's no way I
93:35 - have 260 so that won't help let me just
93:41 - take all of this out right now and see
93:42 - let's get everything and see if there's
93:44 - something I've never seen anything that
93:51 - I know of but I've never looked either
93:53 - no all right looks like there's nothing
93:57 - there that would tell me so anyway so I
94:00 - mean that was a good thought I wish it
94:02 - did work out like that I know it's
94:04 - possible to edit the API within
94:09 - WordPress to make it do other things
94:11 - that it doesn't do but I don't I'm not
94:13 - as confident with my PHP skills as I
94:16 - would need to be I think to make that
94:17 - happen
94:19 - Nuno says hi really nice really nice
94:24 - lives good work Thanks
94:26 - thanks for watching all right so Patrick
94:29 - says how about
94:30 - date is ascending true and that's
94:34 - default date is ascending equals not
94:39 - data sasanian okay all right so let's
94:42 - see so basically let's see so let's
94:51 - change
94:52 - I do like I'm gonna go with date is
94:54 - ascending since that is state is sending
95:02 - equals true that's the first one so now
95:07 - when we get in here we toggle so date is
95:17 - ascending equals date is okay so now
95:27 - this is going to toggle and then within
95:33 - here we're going to do one or the other
95:42 - but I still I still do have one issue
95:44 - and that's basically I don't want to
95:47 - make this call every single time what I
95:50 - could do is set up that cache like I was
95:52 - talking about earlier so it doesn't
95:54 - matter I can't make this call every time
95:56 - and it's not actually going to to call
95:58 - anything if it's cash because I'll cash
96:00 - it up and here somewhere
96:02 - or otherwise I need a way for within
96:08 - here for this only one run once or
96:14 - potentially I guess I could have this
96:17 - check as well to say if oh yeah I can
96:22 - just check the state right I can just
96:23 - check and see if there's any data in
96:26 - descending then I'm not going to make
96:29 - that call right yeah that makes sense
96:32 - and that won't require me setting up a
96:34 - separate cache which might be
96:37 - complicated so
96:41 - this data oops now if this state and I
96:53 - figure what I call it date descending
97:00 - date descending I could probably just
97:04 - check the length right like Shelley ng
97:10 - th length is greater than zero right
97:18 - length is greater than zero then we're
97:21 - going to do all this stuff right
97:30 - otherwise and not only so this will
97:39 - actually be wrapped nested if statements
97:43 - this should be read if um date
97:57 - so you want this to be with if it is
98:00 - ascending if they is ascending so I mean
98:07 - if that is true then we want to do this
98:18 - and actually let's if this is else 20
98:27 - tails after I fixed after I do this then
98:31 - let me know if there's a way I could
98:33 - refactor this to make it better but just
98:36 - to get this done I'm doing it like doing
98:41 - it kind of a very basic way I guess so
98:44 - basically we went to this thought data
98:51 - our dates
98:57 - folks this state sorry
99:07 - okay this state date descending right
99:13 - yeah
99:15 - date descending is going to equal whoops
99:22 - now that ah why am i my brain just not
99:27 - working here so I need this set state
99:31 - and now I need to set date descending no
99:41 - I don't wait if the state if state
99:43 - length I need to say set data that's it
99:49 - that's what I'm going he said data to
99:51 - date descending okay so is ascending let
100:00 - me make sure that this has happened so
100:04 - if the date is ascending and date
100:08 - descending length is greater than nice
100:13 - that's flipped around if it's it needs
100:20 - to be I would say not equal to zero
100:25 - because that's going to return zero
100:27 - right it should right
100:32 - [Music]
100:34 - yeah you guys should have looked just
100:38 - like Jonathan Jonathan caught that
100:41 - before I did so good good look on that
100:45 - one I'm going to check the other posts
100:51 - here in the live chat just to see if
100:53 - anyone caught anything else that I
100:54 - messed up on
100:59 - okay so Frankie says from the WordPress
101:01 - API page to determine how many pages of
101:04 - data are available the API returns two
101:06 - header fields so xwp total the total
101:11 - number of records in the collection okay
101:15 - very nice thank you for that information
101:17 - I'm not going to do anything with it
101:19 - right now obviously because this video
101:21 - has been too long as it is but I'm gonna
101:23 - look that up either probably not today
101:27 - I'll probably leave as soon as I'm done
101:28 - with this but tomorrow if I get a chance
101:30 - I will look that up as well thank you
101:37 - all right so States to know for your
101:40 - data and get rid of the length check all
101:42 - to get all together
101:46 - Patrick's saying set initial states to
101:48 - null for your data and get rid of the
101:51 - length check all together okay I will
101:55 - that sounds good I will ask though
101:56 - initially for at least for this data we
101:59 - set this here so that we wouldn't get an
102:01 - error potentially down below but since
102:04 - we're not directly calling any of these
102:05 - down below then it shouldn't be an issue
102:09 - correct and I'll wait a minute before I
102:14 - change that to see hopefully or if you
102:18 - need more explanation for that but I
102:20 - think some of you were around for when
102:22 - we kind of when we talked did this part
102:25 - on our on our resources and why we set
102:29 - it like that in the first place
102:31 - Umberto's says I'm kind of confused
102:33 - you're checking if we are currently
102:34 - trying to sort by date ascending you
102:36 - want to check if we have data for date
102:39 - descending
102:44 - mint data sending and date descending
102:48 - okay yeah that's what I thought so it
102:50 - shouldn't make a difference then right
102:53 - alright so so basically Patrick just to
103:01 - give this right so I could do something
103:04 - like should I legit like just putting
103:08 - all there or can I just leave this blank
103:12 - let me know
103:13 - so then down here I could just say get
103:24 - rid of the length and is this says stay
103:29 - equals equals null so is this what you
103:36 - were thinking something like this or let
103:39 - me know so anyway that would work if
103:45 - it's an all them we need to fill it with
103:46 - something otherwise we need to set data
103:49 - to the date descending because otherwise
103:52 - that means we actually already have set
103:54 - this at some point and so we need to set
103:56 - it back so if date is ascending if date
104:07 - is already descending right so if it's
104:10 - this one so that would be the else for
104:13 - this right else we've obviously already
104:27 - we've already switched it over so all we
104:29 - need to do is something like this right
104:36 - data ascending so at that point we've
104:42 - already we don't have to switch any data
104:44 - around because the first time that this
104:47 - would have been clicked it would have
104:49 - saved this we need to change this and
104:51 - set this to data ascending right okay so
104:57 - first time it's click date ascending
105:00 - gets set so we never have to set it
105:01 - again right
105:03 - also first time this is click this gets
105:06 - set to data so but we also want
105:18 - we also actually want this set here so
105:21 - probably this would be the place where
105:23 - we could set the date descending set
105:29 - data to date descending or I'm sorry
105:31 - take set date descending to data right
105:34 - yeah so whatever there
105:54 - oh there
105:59 - all right let's try I think I'm at the
106:06 - point where I could actually try this
106:10 - and I'm sure if there's some error you
106:12 - all have seen it and oh you let me know
106:22 - oops
106:42 - oh good look okay so Patrick had a
106:45 - wonderful idea
106:47 - um like obviously I don't need to call
106:51 - set state twice so I can just do
106:56 - descending can I do it like so could i
107:01 - potentially do
107:09 - so I could do it like that I mean I'm
107:12 - assuming it this we both happen in order
107:14 - as well so it would be fine and I'm
107:18 - assuming that's what you were referring
107:20 - to Patrick okay and I fixed that all
107:29 - right so let's see I was getting an
107:32 - error
107:33 - I'll bring the service you can see why
107:36 - am I get an error
107:42 - let me i'm just restarting the dev
107:46 - server because occasionally that causes
107:48 - problems okay cool so Patrick is
107:57 - verified then that that that is what
108:00 - what he was referring to what we just
108:03 - changed
108:03 - all right great we got a page load
108:06 - always a good sign and let's go down
108:10 - here so everything loaded up so we
108:12 - haven't broken that and now here's going
108:14 - to be the first click uh and nothing
108:19 - happened on the first click all right so
108:21 - let's see let me just see if we're
108:25 - actually if we are going to get any
108:26 - errors here there's my console I'll
108:35 - bring the console over so we can all see
108:37 - the errors so here's what we're getting
108:40 - oh let's go to the top here ok I'll call
108:45 - it reference their date is ascending is
108:47 - not defined yep now I understand what is
108:52 - going on here so it's going to be this
108:55 - dot date is ascending right that's why I
108:59 - couldn't find it am i using where else
109:01 - am i using that this dot date is
109:03 - ascending is equal to how would I so
109:08 - what I need to could I just do it like
109:12 - that or should I actually write in
109:19 - something else all right so anyway
109:21 - hopefully this works
109:26 - I just want to check and make sure I'm
109:28 - not using this anywhere else if I
109:31 - highlighted it should show me yep this
109:35 - there we go
109:36 - and let me make sure I'm not oops and it
109:40 - needs to be state 2 there we go this
109:49 - state just a date ascending okay I think
109:57 - that's everywhere that I'm referencing
109:58 - something in state then I need to change
110:06 - so
110:18 - okay here's the next era I'm getting
110:20 - it's saying data is not defined on line
110:22 - 59 let's check it out
110:24 - oh no no obviously that's not it
110:28 - where am I not defined where's data not
110:31 - define
110:54 - yes we do
111:06 - all right where I'll show this I'll show
111:12 - this to you again because obviously I
111:17 - have I'm using data a lot so trying to
111:21 - figure out why it's saying it's not
111:23 - defined let me check the latch at sea
111:31 - Mauro's thought that this state data is
111:34 - a sending thing before I did so thank
111:35 - you I I didn't look over and see that
111:38 - you caught that but thanks thanks for
111:40 - catching that pastor Gong sook let's say
111:47 - everybody caught it except for me and I
111:49 - just didn't look over in time to see it
112:05 - oh okay I see what Patrick is saying so
112:09 - basically let me what's happening here
112:15 - is the default state is ascending right
112:18 - but then here I'm setting the state I'll
112:23 - take this out because I'm not actually
112:24 - doing it here what I'm doing is I'm
112:27 - setting the state to say that it's not
112:29 - ascending and then I'm checking this so
112:31 - obviously it's checking to see if this
112:33 - is ascending and it's saying no it's not
112:35 - ascending so set it to ascending so
112:37 - that's why I'm not seeing anything
112:38 - happen so Patrick rightly says put this
112:42 - at the bottom
112:52 - okay and I I didn't do anything about
112:57 - that error that says date is not defined
112:59 - so I expect to get that again
113:01 - I suppose alright so here's the air that
113:07 - I'm getting data is not defined now it's
113:10 - saying it's at line 52 this at state
113:17 - data why are we getting
113:30 - okay so data should be maybe it's a
113:37 - problem with the API call I'm going to
113:44 - check real quick to make sure that this
113:46 - actually works
113:57 - okay so you alright that it does
113:59 - actually work so when I put this in the
114:01 - browser it is returning data so we
114:05 - should be getting data back and
114:17 - let's see in that case the data you're
114:20 - referencing should be this state data
114:26 - also you need to use set state for the
114:29 - toggle oh okay yeah good alright so I
114:38 - guess I got some input about these
114:40 - errors here so it should be data date
114:50 - descending not dates and data so ever
114:52 - yet this says state where we add
115:03 - Oh
115:15 - you're right
115:17 - well you actually
115:21 - so Frankie is saying it should be data :
115:27 - date descending not the other way around
115:29 - which which line are you talking about
115:36 - as you said also you need to set state
115:38 - okay so I do need to set state for the
115:41 - toggle so this state date is descending
115:50 - so and I do need it for the table I need
115:56 - assess a so I need this dot set state
116:04 - and we're gonna go date is ascending and
116:11 - I should be able to just to do this
116:17 - start set state oops this dot state dot
116:29 - date is ascending no yes wait a second
116:35 - this state Davis ascending equals
116:46 - oh I see
116:53 - I see I've messed this up a bit
117:28 - all right mrs. 948 I have
117:44 - data ascending instead of Davison in
117:48 - life 48
117:55 - okay so so I have like two different
117:59 - issues that I'm both getting feedback on
118:01 - in the live chat so I apologize for
118:04 - those watching the recording of this
118:05 - because you can't see the live chat
118:07 - because there's a lot going on in there
118:09 - so in regard to the error of the the
118:14 - data okay then we're saying data is at
118:18 - at this point not local to this function
118:22 - so it needs to be this state data which
118:27 - makes sense that's why I saying data is
118:28 - not defined in this case it's okay
118:34 - because we're getting the data from this
118:36 - this call so it'll be okay and then
118:38 - where else am I using data so down here
118:43 - I also need to use it state uh
118:56 - autocomplete for me okay this state data
118:59 - there okay great so that um should fix
119:05 - that error I'm just going to check that
119:09 - real quick so I'm going to ignore this
119:11 - for just a second just to make sure I'm
119:13 - not getting that same error
119:21 - oops I got a different error so that's
119:26 - good I didn't get the same error and
119:36 - okay shoot yeah this this threw an error
119:39 - really quick so let me let me just take
119:44 - this out just for a second I just want
119:45 - to make sure to take this one at a time
119:47 - I want to make sure that I fix the data
119:49 - error thing
120:03 - and it looks like I'm not getting that
120:06 - error but I'm still not getting the
120:07 - result that I want so okay yeah so until
120:18 - you fix the error okay okay it looks
120:26 - like I have a typo as well Matt says
120:34 - there's a typo in the left half of :
120:37 - declaration the second a should be an e
120:40 - all right let me let me try to find that
120:44 - um this state data what am I looking at
120:57 - I don't see it was it in here
121:11 - I'm trying to find the the taper but I'm
121:14 - not finding it
121:26 - okay so Patrick says you're moving
121:28 - things around in state as if it is a
121:30 - cash you need to make sure that when
121:32 - you're removing something in state you
121:34 - reference it with this state data okay
121:38 - oh yes thank you
121:41 - uh I need I need curly brackets okay
121:48 - that obviously is an issue let's see my
121:54 - rumps is a yes inline 48 I'm at 48 this
121:58 - said state date ascending there we go
122:02 - thank you I I looked in this area
122:06 - several times I just couldn't see it
122:09 - thank you very much
122:11 - thanks Matt agon and Patrick for
122:16 - everybody responded with the line so
122:18 - everybody can see that except for me
122:20 - okay so I think we're really close to
122:23 - this the only part that I'm not sure on
122:28 - so Patrick in particular but anybody can
122:32 - can contribute here so I know I edited
122:39 - this a little bit from what it was
122:40 - originally have I messed this line up
122:42 - line 56 do I need to change this it was
122:47 - originally it was originally different
122:53 - than this correct Patrick says it's much
122:56 - easier to catch mistakes when you're
122:58 - just watching deleted okay good
123:03 - thanks Patrick so Patrick says I can act
123:05 - I can delete this line see so this set
123:12 - state data is ascending this
123:23 - and then add to set state
123:36 - Patrick says I need to add an
123:38 - exclamation point to the set state do I
123:44 - add it I'll just get at in here let me
123:46 - know if that's not the right place to
123:47 - add it in here oh there's a nut Morrow
123:53 - sees 156 before this state okay life
123:58 - before this state declarations okay good
124:02 - so that is in fact yep
124:06 - all right awesome okay I saved that and
124:10 - let me bring bring this over
124:15 - if I get any errors as well I'll bring
124:17 - the the console over and let's try it
124:22 - out what is going on
124:26 - oops wrong page all right um all right
124:33 - let me refresh that
124:39 - okay so that's what it should be and we
124:43 - click it great now let's click it again
124:48 - okay when we click it again we get an
124:50 - error well at least it works at least
124:54 - you didn't get crazy errors at first
124:56 - right off the bat so data setting is not
124:58 - defined and events J s56 let's check it
125:03 - out fifty-six all right that's what we
125:08 - were just talking about so date is oh my
125:13 - hat day descending he's not defined
125:23 - in line 56 I'm not even using that am I
125:27 - in line 56 this sad state date is
125:33 - ascending this to state day please okay
125:42 - listen
125:47 - that's an odd error right am I am I
125:50 - missing something obviously I'm not even
125:53 - using this online 56 but I am using it
126:03 - this state Davis oh do I need to do this
126:06 - data equals this state that's probably
126:12 - it all right now let's bring this over
126:24 - we refresh okay alright so click changes
126:32 - changes nice ok it worked in case you
126:39 - didn't catch that it did work we clicked
126:41 - once we click twice and the first two
126:43 - clicked work the third click he'll ever
126:46 - gives us an error here date descending
126:51 - is not defined which this at this point
126:53 - this is easy because I feel like I've
126:55 - had keep having the same error instead
126:58 - of just yep this state date descending
127:04 - okay and that makes sense because this
127:06 - wouldn't actually have fired until the
127:07 - third click anyway so good so this
127:13 - should be this was the only line that
127:14 - hadn't fired yet so assuming we fix this
127:17 - which I think we did this should work so
127:22 - I'm gonna I'm just going to make sure I
127:26 - refresh to reset the state back to the
127:30 - original state and it figures the dev
127:34 - server would just hang so all right I
127:38 - feel it I feel like we're close I said
127:43 - at the beginning that this is going to
127:44 - be one of those times when I don't
127:47 - really know what I'm doing or how I'm
127:48 - going to do it but I'm going to learn a
127:49 - lot and I feel really good when it
127:51 - happens I think this is about to happen
127:55 - alright so click one works
127:59 - click to works here's click 3 it works
128:03 - yay we go back and forth and just to
128:07 - show the network let's see if we can
128:12 - find I'll show you the network so here
128:17 - is where we actually got our descending
128:21 - things so you can see it's only fired
128:24 - once we just click like I don't know six
128:27 - seven times it only fired once so we did
128:30 - only fetch the data one time and it
128:32 - never fires again after that so awesome
128:37 - great job everybody for sure
128:41 - yay on this one this was a little bit me
128:45 - and mostly all of you helping out so I
128:50 - pretty much just brought the here's what
128:53 - we need to do and then you all brought
128:55 - most of the most of the other stuff I
128:57 - really appreciate that this has been Wow
129:00 - over two hours of a video I did so well
129:03 - the other like yesterday it was like an
129:06 - hour you know so I was doing good and
129:09 - then then we went we went over so we
129:12 - went way over the normal time hey thanks
129:15 - everybody some Christian said congrats
129:18 - but thanks for the congrats but really
129:20 - like congratulations to all of you for
129:23 - for kind of coaching me through all that
129:26 - I'm sure it was frustrating at some
129:28 - times when it actually cooled down in my
129:31 - office and my brains a little bit more
129:32 - clearer now but there were there was a
129:34 - time there in kind of the middle that my
129:37 - brain was just not working and you all
129:40 - kind of had to had to hold my hand there
129:44 - and say baby steps with me so yeah I
129:48 - appreciate that a voice Allah says we
129:51 - hope we see you soon so yeah but Co soon
129:53 - so thank you very much for all the help
129:56 - and hopefully this helps somebody
129:59 - watching to know how to do this
130:02 - obviously you could you know repeat
130:04 - these steps now I will say this this in
130:07 - particular we're using the WordPress API
130:10 - right so I'm basically
130:12 - going the the sorting through the
130:14 - wordpress api if you wanted to do this
130:18 - and you like already had the data and
130:20 - you didn't want to make another API call
130:21 - then you'd have to do the sorting on the
130:23 - data you already had if we had done it
130:27 - that way I think it would have been
130:28 - helpful to more people but obviously as
130:31 - we discussed earlier in this case at
130:33 - least at this point since I can only get
130:35 - a hundred entries per page for the
130:39 - events I needed to keep making API calls
130:43 - because I think that otherwise the user
130:47 - would not be seeing everything you know
130:50 - all of the events available so just so
130:55 - that's that's clear that there's a
130:58 - different way to do it to actually sort
131:00 - on the data maybe I'll have an
131:01 - opportunity to do something like that if
131:03 - I can figure out how to get all the
131:06 - entries or something because I would
131:08 - like to do that as well because I think
131:10 - it would be helpful for you all and
131:11 - certainly there'll be occasion for me to
131:13 - use in the future
131:14 - but other than that little caveat
131:17 - hopefully this is some stuff that you
131:20 - can use in your projects and this was
131:24 - certainly helpful for me so I'll be back
131:27 - tomorrow at 2:00 and I'm thinking Friday
131:32 - I might not do a stream so I was I was
131:36 - gonna do a stream earlier in the day but
131:40 - I now have a meeting so I don't think
131:48 - I'll be able to do it early I'm going on
131:50 - vacation next week but I'm leaving
131:52 - Friday nights and I'm going to drive
131:54 - through the night so it takes about
131:56 - eight hours to get where I'm going to
131:58 - the beach and I'm driving my family
131:59 - through the night so the kids can all
132:01 - sleep and I think I probably should
132:05 - leave work early and take a nap
132:07 - so that I can safely drive throughout
132:09 - the night
132:10 - so it'd be probably best if I left work
132:14 - a little bit early so I don't think I'll
132:16 - be able to do a stream if something
132:18 - changes I'll certainly let you know but
132:20 - as of right now I don't think a stream
132:22 - will be possible for me on Friday I
132:25 - really wanted to do
132:26 - since I may not be able to do one for
132:29 - all week but really I really do want to
132:33 - make sure that I'm awake enough to drive
132:35 - safely you know through the whole night
132:38 - so I do plan on hopefully making some
132:43 - recorded videos and maybe releasing them
132:46 - next week so hopefully you'll have that
132:50 - so you may not have any live streams but
132:52 - I'll be releasing recorded videos and
132:53 - those will go on my youtube channel free
132:57 - code camp is just for the live streams
132:58 - and then my like recorded videos will be
133:01 - on my channel so anyway so enough talk
133:07 - for me you're awesome that you stuck
133:09 - around this long and I know some of you
133:10 - in different time zones it's like two
133:12 - o'clock in the morning now so so go to
133:15 - sleep and and I'll see y'all tomorrow
133:17 - and thanks again

Cleaned transcript:

hey everybody is Jessie and today I'm going to attempt something that I haven't done before and I'm not exactly sure how I'm going to do it and I'm excited about it I don't know about you but I get excited when I'm going to do something that's going to be cool and useful to the user and especially when I'm not really sure how I'm going to do it because I know I'm going to learn something and it's going to be awesome when it comes together and happens so let me show you I'm kind of right in the middle of kind of taking this stuff and making it its own component and I was going to put it in the utils falter and because I'm going to use this in multiple pages now so it'd probably be better if it was separated out so that's in anticipation for what we're about to do and let me bring bring a window over so you can see so I did make oh that's not good I made the search function live so for now this is the alignment of the search if you watch the this show when we set this up there was a lot of debate over how we should align this so I'm expecting another input to be here in the near future we'll see how it goes if we do end up not putting something here then maybe this will change but for now it's right here and it works and we also added the the images or live they don't show up all the time when I'm doing local development but on catechetical calm the images show up at least one image there's only one image that's been uploaded that's big enough to actually be used the rest of them the width gets checked and it doesn't use them if they're not wide enough so we're going to work on today if my alright I'll just show you over here for some reason it's not reloading but the live site will be fine so what I want to do on the events page down at the bottom right now I have this responsive table right so it works even on small screens because you know you're you get to scroll horizontally and obviously even when it gets smaller you know still works not ideal if you're on a screen this small but but it's definitely more usable than a normal table would be it which would throw off everything and we'd have horizontal scrolling of the entire page so what I want to be able to do all these are pulled in from the WordPress API so what I think I should do it might be the easiest is I want these to be sortable so if you click date you can get it from right now it shows the events let's see so the events that are coming up the soonest or at first so that's by default how everything's sorted which makes sense people probably want to know what's coming up soonest but there's a lot of other things you could sort by year so potentially you someone might want to sort by any of these things with the exception of link obviously probably the emails don't need to be sorted by but I could see definitely these might want to sort by these although kind of stinks everybody has doctor and from their name because it's not is everybody if everyone's a doctor maybe it'll work out but now I say so it is going to kind of mess up the alphabetical sorting here but since people have doctor but other than that you can see my point it would be nice to be able to sort this either you know alphabetic order reverse alphabetic order maybe reverse it so we see the events that are coming up the latest first I think location will probably be the most useful you know maybe somebody's not interested in traveling for so they don't care events not near them so maybe they want to you know sorted by that the other thing I'd like to do if I have time is have a search bar for for this so just like we had on the resources page they could search I'm not sure where I would put the search bar in this setup here would be it would be a little bit more awkward awkward looking I think to fit it in here so I have to give some thought to that but I can at least get the the functionality down and then worry later on about how I'm going to style that but that the search function could be super useful because you could potentially just put in the name of your city or a city near you and then get that or the name of a speaker but you really like and then they would just Auto populate just like the resources so at first I thought I would just take whatever data automatically got pulled in you know on the initial page live from the WordPress API and then just manipulate that data to sort it differently but then I thought maybe it would be better to actually make another API call when we do a sort and I'm not I'm not 100% decided on this but my reasoning being you the limit on how many how many events I can get from an API call is 100 so there may be some way around that limit but that's that's the limit I've hit with the WordPress API limits you 200 which is fine you know you don't want to pull in a ton of data but the you know for something like this it's not really a lot it's just some text you know JSON so I had thought well if somebody you know if they really wanted to get a more accurate listing you know let's say they want to go in reverse alphabetical order well they want to see everything from these speakers so I don't I don't know not not just whatever the you the first 100 that came up let's say there's 500 events in here I don't think they'll ever be that many but if there were 500 they'd be missing out on most of the events so anyway think about that let me know what you think on what would a user expect from sorting this or is there a totally different way or would just the search bar be sufficient and I shouldn't even worry about necessarily about the sorting as much all right I'm going to go and say hi to everybody in the live set I just wanted to get everything out of the way for people that are joining maybe for the first time just kind of let them know what's going on if you are joining joining for the first time this is just me streaming projects that I'm working on for my everyday job so it's not necessarily a tutorial some sometimes it kind of feels more like a tutorial but a lot of times it's me just trying to figure out how to do things and everybody watching helping out with that so if you're interested in that stick around if not thanks for joining in and maybe join a different time alright so let me look it looks like everybody's just saying hi hey everyone oh there's spoilers it says hit hits hearth I'm not sure if that's how you pronounce the name sorry if I mispronounced it hits heart says want spoilers something new is coming to FCC free code camp I'm I'm interested in that I don't know is anybody else interested I don't know what's what spoilers it would be but I'd be excited about something new Andy asks what's going on hopefully you just heard my explanation it looks like you you asked that before I explain this hopefully got that also so Andy M is in the live chat he also does a live stream so I don't I haven't really talked to Andy about it but I did check out a little bit I only had a few minutes the other day but I I thought I want to check out some of the live streams so I didn't watch a lot but I did check it out so if you want more live streaming check out Andy's channel on YouTube all right so we got one question in in the latch at says what data are you pulling at the moment a limited number of events by date yeah so right now the data that I'm pulling is a 100 100 events now what I did I I think I may have made this so that it doesn't show previous events let's take a minute and look at what the code I did this a few weeks ago so I actually can't remember I know I had intended to make it like that but I can't remember if I did so let's go into events I'm going to come back to this in a minute but let's go to events and see okay so I'm filtering by date order by ending so look down where I'm actually using it maybe I have oh now I remember I did end up ended up doing something maybe I didn't maybe I'm not seeing it here if you all see this when you can check out the the github repo it's it's all updated at this point and you can check this out as well the links in the description I also have links to what we worked on yesterday which was setting up prettier and standard J s which by the way is really amazing I'm really liking using that so then they submitted that pull request to set all that up and I really appreciate that because every time I use it I'm just I just love it even more so let me just explain since I can't find in the code whether or not I actually did this here's what my intention was I have I'm obviously pulling a date here so I have two different dates that I'm pulling one is the displayed date so that's what you see here so this is the format that it was requested that the day be put in so that's that's how it shows up and that's just a text field that whoever's managing that content puts in there they can put whatever they wanted to but that's not really easy to sort by right so I needed a better format for the date so then I also added a field that would give me the date in a format that was easier to use so I have that format as well and I'm not doing anything with it yet it looks like at least here but my intention was to only show events that were going to happen so any events that had already happened they wouldn't show up anymore now I guess it wouldn't be ideal to do it here and assorted here because that would be a waste of your data being sent so the ideal place to do it would be actually so I froze scrolling around here it would be actually here where I make the call so they give these parameters for what date I want and then that way I wouldn't even waste time even grabbing data that I know I'm not going to use so filter by date but I don't think I'm yeah I'm not doing it there I'm not sure how how I do it so I have it set up so that it could be done in terms of the data coming through and I'll show you what it looks like let's grab we'll take a look at this the raw data that might be a good place to start and then we'll all be on the same page in terms of what data were actually getting and you know how we can manipulate that to do what we want it sounds bad when I say I'm going to manipulate the data like like I'm doing something wrong to it but I'm not I'm just just going to add it into the site event all right so here's the data that I'm getting we have a title we have so here's the day this is what I was talking about and it's easier just to show you so we have two dates there's the display date and then we have the actual date and it comes in this just in this format which is it's a nice easy format and that you know it's I can just sort on the date varies I don't even have to convert this or anything like that which if you've worked with dates in JavaScript it's not always the most pleasant thing to do but I don't even have to worry about that it's just one number the higher the number means the later the date so what do you think I'm going to go to before I do this I make a decision on this I want to go to a live stream I'm going to see if I've got responses to any of the I think I've had several questions over the last couple minutes so I don't want to get too far ahead of myself I may have had some really good ideas and a come through the live chat Oscar says hi from Colombia hey how's it going thanks for watching Dennis s is that Dennis or didn't he sorry if I'm mispronouncing that a DN is what what do you think about async/await promises I'm actually using a weight like async/await stuff here I don't think I'm as I'm knowledgeable enough about async/await and promises to give a really good answer I will say the few times that I've used them I've really liked using them basically it's always in the concept context of using fetch that I end up using async/await and promises and stuff so I like it but I don't know enough about it to give you any detailed explanation of it but it's definitely easier than like having lots of callbacks and things like that umberto says I'm always working using database back and then still don't have much information about WordPress API but maybe a dropdown for each row to filter on dates the filter would be a date range names would be a list to pick from event titles and locations ha it's just possibly too much functionality for a small feature I hadn't thought about before let me think about that for a second so let me bring this over so you just get the visual so we're thinking there would be a dropdown for each row and then in that dropdown they could select something either a date range or something else in this rows to filter by hmm that that could work that could definitely work I could populate the dropdowns based on the data that I get from the API so everything that was in here could be in the dropdown I could do a check and if it if it equals something that was already in the dropdown it wouldn't put it in twice that could way that would it would be you're right it would be a lot of work it might be overkill for this feature but I think in terms of the layout of the site this is kind of tucked away now you know it's at the bottom of this page which I realize this this is the main event that's being put on by this cata catechol Institute so in terms of conferences this is this and this are their main conferences so this is more of a collaboration I think with another department here but you know this is their main conference so they do want to highlight that but really for from a user's perspective this is probably going to be one of the most useful parts of the site I would say this and the resource section that we've been working on for the last week or so so it might warrant a little bit more work I don't know let me know let me know what you all think about that or would it you know we could potentially do something similar just with a search bar that OTO suggests things and we can populate the autosuggest from these values as well would that be cleaner I'm a little worried about the clutter of dropdowns all right let's um actually do I want to get into some code so there's definitely some stuff that we can do without making these decisions yet so I want to get in there and do some of that stuff to prepare and then that way we'll get some things done and you will get to see some coding since I claim to be live coding and so far I've just been live talking so we'll do some of that first and then we'll come back and make some decisions on how exactly we want you know visually this to look and for people to be able to search but I mean I think it's pretty much agreed at least in my mind that somehow there I want users to be able to filter these ice or sort them in some way to find what they want and more easily than having to actually scroll right now there's not that many but eventually it could be really difficult to find what you want and not a good user experience alright so here's what I was thinking we need to set up so I have I know this is a little bit smaller than normal and that's on purpose because I have had these sidebyside and I needed to see what was going on so I will zoom in in just just a few seconds here but I have resources on this side because resources is not going to be the model for how we do everything else because we had a lot of refactoring going on here and some pool requests related to this so this is kind of the most polished way to do things we're doing thing we're not using jQuery for everything here we're doing it you know more more of the react way I just noticed I had my phone right next to the mic so I apologize if there are any like static sounds I'm going to move it farther away now let me know if you hear static and I'll move it like to the other side of the room if I have to so anyway this is going to be the model so I've already started to bring over some of that into here so I will kind of move this over make this text bigger so we can all see so instead of just saving this data to props and being done with it now we're going to go we're going to set the state and we are initially going to take this data that's that's a props and we're going to use it to set the state and then we're going to down here man I can't wait until I get all this pulled in through the API so don't have to scroll through it but instead of props here it's going to be state so I can actually let's change this to state I think I have enough code near for this to work at this point change it to state and my dev server should be yeah it's working now so we can see you on localhost it did work alright so now we're grabbing from state the reason that that's important if you didn't see what we did with the resources if you didn't happen to see that that show that's important because now every time we change state all of these will automatically change and that's that's the react more of the react way to manipulate the Dom is through changing state and not as we were doing on some pages using jQuery all right so so that's that's done so that's basically converted to set us up so that however we want to sort this all we have to do is change change the way things are in state and then all that will fall into place we want to we want to add this so assuming we're going to make some API calls after get initial props I wanted to add this section here which we use for our API calls whenever we're doing our live search in the section for resources I want to extract this out and make it its own component so I've already extracted some of this out I'm importing isomorphic fetch now I realized when we when I first talked about this I was saying something about I don't know if this will work because I don't know about how it how it uses basically polyfills for fetch and everything I didn't know if this isomorphic fetch only worked in the server side but then when I was doing this again I thought that was actually kind of ridiculous and didn't make sense what I was saying before because obviously whatever is going on here with fetch works on the client side and the server side you know this works all of you otherwise our clientside routing would not work so that definitely works so I figured maybe I ought to import isomorphic fetch because maybe maybe I don't know this yet I could have tested it that's what's necessary to make fetch work either way on client side or server side so I did import that if you have any insight to know whether or not I need to import it here just let me know but I can always take it out but for now I'm going to import it so everything's set up here I think it's all set up I need to pass a URL yeah I'm passing the URL in here to get I need to pass kid you all yeah I need to pass the URL n as well here and I did have a question about the syntax I don't know why so when I'm using an arrow function here I don't I'm assuming here I don't need to put the parentheses around it right is that is that a correct assumption since I didn't do it here and it's working I know there's a delay in the live stream so I'm not going to get an answer right away but I'm going to go back to the live chat since now we've come a little bit further I want to make sure they lose anybody or I didn't miss a good suggestion and if you have any questions feel free to put it in the live chat I got keep calling the live chat live stream sorry about that put it in the live chat or if you can't stick around and wait for the answer put it in the comments the video or direct message me on Twitter I know if you I say that all the time if you've been watching but I'm mainly saying it for people who might be new and watching for the first time alright so okay so this is a continuation of the the question about async await promises since I saw you use promises and get JSON function but don't use async await there okay yeah actually that is a good question basically um the reason I didn't do that is because and this is going to be a this is going to make me sound like a noob but I'm obviously if you've watched any of my other episodes you know I'm not afraid to look like a noob this is how it was done in the documentation for next it had all this kind of premade so this has been adapted slightly to my needs but I this was from there so I didn't mess with it and I used it this I grabbed from a previous project and I knew it worked so I grabbed it and I didn't really modify it too much the only thing I modified was I use arrow functions so that when I use this inside of here it would be the right this which now what I'm extracting this out I'm not even sure if I'll have the right this anymore but we can test it and find out so the answer is I just hadn't even thought of that I hadn't thought of why I would use it one way or another I just knew that they worked and so I kept them like that and didn't really mess with them too much so that's that's the honest reason it's not a grant a really good reason or reason that makes me look good but that's really why I didn't use a sink or a wait there if someone else has more knowledge about when to use async/await and when to not use it please uh you know put that in the live chat because I'd like to know more about it as well I think that's how it is sometimes I don't know if it's like that for all of you but for me certainly sometimes you get you grab some code you know it works you know enough about it to modify to your needs but you still don't completely know why it works I mean I think that's it I mean don't think about I really everybody does that I think about all the packages that projects load from you know the node modules and stuff you know I don't know of anybody that knows what everything does and why it does what it does but we all still use it so that's what's going on there basically is I know it works I'm not exactly sure why it needs to be like that all right so Andres and what do you have to sort so maybe on maybe engines getting in a little a basically we're sorting this so we're going to sort by date would be useful to sort by and look date and location are going to be the most useful things to sort by presenter maybe but I could see presenter being more like something you would want to search for especially because we have doctor in front of a lot of names so that just messes up our alphabetical order right now I could maybe try to ask the person that's inputting all this data and WordPress to maybe put a comma and then doctor so we could but even so like we still have first names ideally we would have last name comma first name comma and then title but that wouldn't really look that nice so that might end up just being something that's searchable so in any case we want alphabetical order for this and then we want to order by date for this and possibly alphabetical order for this as well um dr. Pavel says hi Jesse as the title says find the nearby event may be better made search bar for an exact request and just button something like show nearest event use geolocation that's a great idea that was my initial idea when when the people I was making the site for requested this section it said find a nearby event I immediately thought geo location but that's not what they had in mind so this is one of the areas where I kind of delivered pretty much exactly what the specifications were but I had intended if I had time to do more than then what will say the client in this case but really they work at the same organization that I do so yeah I agree it makes if you're going to call the section find a nearby event you would expect some sort of geolocation or at least some place where you could manually type in your address or something like that so that's I'm not going to work on that today because you know if people came based on the title of what this is going to be which is being able to sort a table data in a table and react and I'd rather work on that now and then save the geolocation thing for another you know maybe tomorrow but I think that's an awesome idea let's see at a question about from I know if it's Michael or Michal I'm not sure how you pronounce the reason of doing of going with fetch as opposed to library like Axios Patrick gave a nice answer to that fetches a new shine this is Patrick tensor fetches a new shiny way to make things simple simple is the reason those libraries came about fetch is built into updated browsers so yeah yeah that's a great answer Patrick yeah fetch fetch is like is now the newer browsers its builtin so like it's it's more lightweight you don't have to add an extra library to do the same thing you just do it with fetch and it's easy I mean obviously you can see from you know from how it is here it's it's super short it's really easy way easier than trying to do with jQuery or even just straight xhr so that's that's why I use it and with the polyfill older browsers are fine too so you can pretty much use it for most projects yeah Patrick says I think isomorphic means work on the client and server in this context yeah Patrick's a single argument doesn't need parenthesis good to know all right so Andrew linked a design for it looks like better data tables so maybe I'll take a look at that I don't know Andrew do you want me to take a look at that now or should I just check that out later so anyway I'm going to this should work then assuming that I'm doing the correct thing when it comes to this then this should work so let's go ahead and save this and Wow where am I at projects I'm going to save this in Utah so should we just call this if I just call it fetch do I wanna yeah I'm gonna go with I was just checking to see whether or not the other component in here was uppercase or lowercase so it is already lowercase so I'll just go with that this was called fetch j/s whoa that was weird if you didn't see that Texas said the editor is not responding so that would have been bad ooh oh excuse me sorry to sneeze um that would have been bad if my editor crashed right in the middle of this uh okay so what am I getting all these yeah I haven't I'm going to get weird stuff happening with uh with my editor as far as the hints go because I haven't updated my packages to reflect the stuff that we're doing here I'm poor this motion fish I'm definitely going to get rid of all these soon alright so I'm going to save that and now we need to to test to test this I'm going to edit this resources file and we're going to import what do we need to import we're going to call so I'm just trying to remember which one I call first we're going to call get JSON and then that's going to call get so what I want to grab from there is I'm just going to copy this since we're going to use the same basic format here what I want to get is the function get JSON from fetch okay and we don't have to put the Dodge as obviously you can see here and that should be enough that should work so I'm going to save that and I'm going to bring over resources let's see we should now if I search this should work so let's go nice it does work great all right so now actually I'm not even going to look at what's in the live chat right now because I know somebody noticed this and it's trying to call me out I should have removed all that to make sure that it really was working so now I am removing it I'm gonna do a empty cache and refresh just to be sure that I'm getting rid all that now let's try it okay now it's not working so um oh thanks because you're saying bless you from when I sneeze thanks guys so we have a come from J Steve Martinez says fetch has no support on ie that's true yeah there's no support so you want to use a polyfill it's depending on what you need to support if you use older browsers use the polyfill for fetch to have it work in older browsers so I have used fetch before with the polyfill and gotten it to work in IE 11 I didn't tested any farther back than 11 but it does work alright so I'm going to check out Andrews saying that this link he sent is a good example of design for a table so let's check it out oops maybe I'm not getting I got a 404 when I tried to type that in what did I mess up yeah I'm getting a 404 till Andrew I don't know I tried to type in that link and it's not working for me yeah that's what I did Andrew saying changed the star with dot that's what I did I replace the I did replace the star with a dot and whoa what did it still four or four yeah okay so Sebastian is getting to four or four as well so it's not just that's just me I thought I was doing something wrong all right so let's troubleshoot and see let's see what's going on I guess it's not like I don't have to get this working right now so really we can skip this and just work on it later and then just get onto some more like the sorting stuff so I can throw this back in here and get rid of this for now and work on this later and let's just throw these in here oops thought I copied these I guess not there we go so we'll just throw those in there for now obviously it would be better to have these separately so we don't repeat ourselves and multiple multiple pages but for now this should work so what we need to do for now let's just have let's do a reverse date so let's see if we can reverse the date few because that should be the easiest thing to do we're going to have let's find it's fine where you have the date let me let me describe to you what's going to happen here so we can go through the steps to make sure this makes sense logically so what I'm going to do is on the date I'll bring it over here so we can all see it so where it says date here we're going to have an on click event handler there so on click it's going to fire off a call an API call that is going to grab this data and it's going to basically use the same URL except it's going to order by descending instead of ascending all right that's what I'm starting with this one is going to be so easy to to do at that point it's the state is going to get reset with this data that's now sorted in a different way and then that's going to change change the order of these does that make sense to everyone all right so we're just going to make a function I'm going to make the function first before I even before I do the click the on click because that's not really a big deal so I'm going to make the function and all we really need is when we do this is to grab we just need to make a call an API call so I'm actually going to grab a lot of what we did over here just so we don't have to type it out again because it'll be very similar so this is already doing a lot of what we want to do here we'll just have to change the parameters in for the API call all right so basically we're getting near this is the URL and these are the parameters which we're now going to change to this and we're going to change this to descending so we're going to change the order and then so we're making the API call it's going why did I split this in between I don't want to split those up okay so we're making the call here and then that's going to use fetch within here it's going to return us JSON just great and then we're going to take that data that JSON data and we're now going to make that this state we're going to set that to data in the state once the state is set then that will trigger all the components you know to rerender down here so I'm going to save that and now what did I call this we call it a sort date okay so let's go down and find where we actually have the word date here we go so let's go on on click and then this is how we do we just call it this is how we called it um which the Patrick says why are you not importing get JSON and events dot J s I'm not sure I know perhaps Patrick saying dry man dry yeah so I want to do it like that but when I tried it I don't know if I maybe I did it on my other screen and so you all didn't see it but when I so I put this in this separate file here and I tried to import it in resources as a test and it didn't work I don't maybe I didn't say that out loud and just thought it sorry about that so it didn't work so instead of spending time trying to fix this right now I wanted to get more like to the point of the topic I don't want to be false advertiser here since since I made the title the video about sorting a table and I tweeted saying that I was going to try to sort a table I wanted to get to that if we get this down I almost said if we get this sorted but that would have been just trying to be funny but um if we get this down then I can go back and try to get this so Patrick I totally I totally agree with you and I want to do that so it's gonna happen but I just wanted to get something accomplished and not not spend my time on something that I didn't absolutely need to be to be working right right here so this should work right I know we had a vaguely remember that having some sort of trouble with whether or not what was I doing whether or not I call the function on and where did I do this come on click oh I guess I'll see it in a second okay so right now let me pull this over right now nothing happened when I click that so do I need to call this oh this always have to put this in there still nothing do I have to do it like I didn't think I had to put that but ya know I just thought could say someone I got a weird error here saying this thought get JSON is not a function yeah I have it in there don't I right oh shoot I need to use an arrow function for this okay we just went through this like last week so already I'm forgetting so we need to use an arrow function if you're not familiar with arrow functions there are newer thing it's es2015 or sometimes called es6 in this case the reason we want to use an arrow function is because otherwise the value of this is not what we want it to be okay so we need this to mean like the context of this basically this entire component here right this is or at least this section of the component so that's why we did this so before when I clicked it went through here but I got to this point it said I don't know what get JSON is okay because it was looking just within this scope so that's why we use the arrow function and you you actually end up using arrow functions quite frequently and react at least I I've been having to use them frequently and it's the same same concept here when we're using this as well so I'm sure there are other benefits using arrow functions but for our purposes right now that's the main benefit that's why we're using it so I've saved that and let's check it out so we've got rid of the air that's a good sign oh yeah and it actually did it did what we wanted so I'm going to refresh that so we can see it happen okay whoa I'll shoot because I'm calling it I knew I didn't have to put that on there anyway if you're wondering what I'm talking to myself about here originally I didn't call that there but then it didn't work and I I thought hey it's not working because I didn't do it right but that's probably not what happened so anyway it was just being invoked at least I think let's test it out and see if that's in fact what did happen okay good so when I click this we should see the switch yep there we go awesome so we started with events in June being here and going further down into the timeline you know further ahead in the future now we're starting with the latest event and working backwards so that works that works like we wanted to do so so since that works I'm going to go to the live chat and just check out make sure I haven't missed anything important and then we'll see what time it is we were a bit it's been like almost an hour to get to this point so I'll see maybe we'll do some more obviously we want it on a second click we want to be able to sort the other way as well so think about that for a minute while I go through the live chat I'm wondering if here's my thought this is what I was thinking when I first made this function what I'd probably do is somehow just do like have some variable it could even be a boolean or something that gets checked to true or false when sort date is run and if it's true it these params will change to either be ascending or descending so I don't have to write another function that does this I just switch this function in or out so it would accept yeah I don't know somehow I would switch that off that's what I'm thinking if you have a better idea please let me know so let's catch up here with the live chat um Missouri has some some other suggestions here for trying to get that article to work that Andrew had linked to so I'll have to have to check it out alright I'm going to copy and paste again this this new link that was sent yeah that worked this time so cool cool it looks good I'm scrolling through this on my other screen here this looks really cool I'm going to look through this after the stream and see I'm always I think I mentioned this before but I'm a little bit restricted in terms of let me bring this over like in terms of layout like a lot of these decisions as to how this worked like to make a change really like required a meeting and discussion so I'm so some changes are probably fine and I can make it and it wouldn't be a big deal but some changes may require like more meetings like I would make the change and then get an email or phone call shortly thereafter and so if the change is like for sure like needs to be done would make it so much better than I'm down to do that but if it's not really going to be a huge benefit to change it then it's probably not worth it to go through all of that so just so you know if you make a suggestion even if it's awesome I might not use it and it's not because I don't think it's awesome it's just because of that because of other factors so don't don't feel that if your suggestion doesn't make it in it's not it's not exactly up to me what makes it in with doesn't all right it looks like I didn't really miss that much in live chat I did a somewhat decent job of keeping up with it Patrick does mention the arrow function lexically binds this to the parent scope that's that's how you say it so hey thanks Patrick so Patrick has given a very accurate correctly worded definition here for what I was trying to say say with this so so I'll read that again just because it was so good the arrow function lexically binds this to the parent scope so all right Patrick says I feel like you should be using state state for this so do you mean is that in reference to me saying something about I needed to go both ways likes to switch the day and I was talking about some sort of variable that I would use like a boolean or something if you're talking about that let me know if you're talking about something else haha Patrick says thanks Scott Allen for that watch the video about it yesterday so his is an arrow function statement they're so cool I mean I know like going through what was it the book is that you don't know Jay s is that the one that's on github and this is totally free so I remember one of those books or something I remember getting the official definition at some point but it's hard to remember okay so all right so Jay stevemartina says sort date is getting the data you should already have in your state are you meaning let me see are you meaning that basically I already have all this data in the state from before so I don't need to make another API call so let me know I think that's what you mean let me know if I'm wrong about that Patrick says the fact that this table can be sorted means it has multiple states keep this stuff in state and let react render the Dom based on it okay so let's see okay and Jessie okay yeah says does next yes when in production have an index.html file I'll countered an issue using next how do you deploy with the index.html file um no I don't I don't think there's an it so you would need to deploy it to something that runs a node so node can can run in index j s instead of an index.html so that's what you need so it may depend on where you're deploying it to as to what what has to happen all right maybe if anybody in a live chat has a better answer please PLEASE add two to what I said but could you explain maybe more about what your production environment is like what are you running in terms of the server and then maybe maybe I gave you a better answer okay so back to back to the whole state thing help me out here so basically this state to saying keep this stuff in state and let react render the dorm based on it that's okay so Jonathan has just said basically what I was kind of thinking here can't we just sort the data so do this data sort so yeah actually I've thought about doing that I think I explained at the beginning whether or not so I had kind of two options either just sort the data that I already have which will work fine for now because we don't have that many events or make a separate API call the reason being when I make an API call at some point when we get lots of events I'm not going to grab every single event with that first call so I'm not actually going to have all the data saved in state like right off the bat so the idea what my thought process was is would a user expect you know if they if they hit this date here and let's say we have 500 events and I've only loaded 100 events they're not necessarily going to know that I've only loaded 100 events if I'm only sorting the data I already have then they're only getting you know a small number you know with a try 500 then I get 100 they're only getting 1/5 of the possible events now the reason I'm saying 100 is because in the WordPress API there is a limit on how many of the the post types you can grab how many particular posts in that type and the limit is 100 I'm assuming there's some way around that I just don't know it right now so I was based on what I have right now that's was my thinking for making a separate API call so anybody have any insight on that you know maybe I'm thinking too much about this and it would be fine to just sort what I have but I expected some point that there will be quite a few events here I don't really know what to expect exactly I'm not I'm not getting this data and I'm not entering this data in so I'm just not I'm not sure maybe maybe it'll never be that many events but I'd like to be prepared for that okay so Jonathan Jonathan said that makes sense okay all right good yeah I kind of like my first thought was simpler and it seemed a lot easier like I'll just sort all the data that I already have and potentially that would just be that would be faster anyway it already happens pretty fast so I'm not worried that much about speed but all right so that's why I'm making another API call it's not going to be that easy I think with everything as the date the dates the easiest thing to sort on but that's the basic idea so I think before I end this video I wanted to keep the videos short like around an hour so since there's not a lot of questions I think I'm going to finish up with at least this portion so that we can suit when we click on it again it takes us back to the initial state so I'd like to finish that because I think that would give if anybody else wants to like watch this and implement something similar if we finish at least that one that would give enough info I think to repeat it with multiple rows so let's try to finish this up and then I'll end the video normally I do you know kind of like I'm actually pretty long Q&A session at the end but there's just not a lot of questions so we won't have to have to do that so Patrick says okay well you want to conditionally sort based on the current state of the table you need to store that in state also don't retrieve the data over and over if the user clicks date again okay thank you for the explanation that makes perfect sense so Patrick's point here is so I had initially when it loaded I had all the data from this API call saved in state and then i overrode all that with everything in this API code now when I want to click that again I'm basically going to make this API call again which doesn't make any sense why not if I've gotten the state at once when I keep it stored so that does make sense and Patrick let me know if that is in fact what you meant I think it is but if not let me know so the thing is it's not enough for us just to keep making these API calls again and again because that's a waste although we will be caching API calls so technically it won't it won't necessarily require like a search through the database on the WordPress end but still it does make sense it'd be better to just keep it in state so let me think I'm just thinking about how how I'm going to do this so that I can keep things in state and here's what I'm thinking let me know if this makes sense or if you have a better idea so basically I'm still going to do this at the beginning this is going to be saved to data right in instate then when you click to sort before this gets soared to data I'm going to basically take what's currently stored in data and I'm going to store it in some other variables so I don't even know maybe I'll call it old data right now I don't know there's going to be a better name probably but that of any name will work so basically everything that wasn't data now gets stored in old data and so it we still keep it all and then at the point when I want to switch back I just take what's in I can take what's in old data and move it flip it back up to data and this switch switch them out basically so I keep both of them now it it becomes more complicated when I add this to the other rows and do I want to keep every call so I may have to yeah it's I certainly could keep every call and just make different you know different sections within the state you know to hold them all does that make sense okay so Bastian says save the sorted data in sorted data when I got some other I got some detailed advice here so let me read through this Patrick says so grab ascending once grab descending once and then render based on state all right awesome so it looks like I did get that right so Alberto says for name if you're pretty sure that the last name will always be last you could do sort by like current valid split and okay so you say I can split it I'm actually not certain that the less I'm not certain of anything concerning the name I could probably like suggest a naming convention and have it right there and the instructions for whoever's importing it in so assuming that they follow the instructions maybe I could have some certainty that that would be it so maybe all right so let's let's get to this let's take a crack at this saving stuff in state and I'm going to I'm actually pretty excited about this because I mean this kind of gets at least for me this kind of gets to the thing that's cool about react is you know changing of state and having things rerender on the page very quickly right that's that's what's awesome about react among other things so being able to manipulate things like this is what I'd like to be able to do better than I'm already doing it so because I need to move out of building things like this in jQuery to building things like this in react which is much preferable to the the mess that usually happens when I try to build this out in jQuery which which starts out very simple and nice and then as features get added it just becomes very hard to maintain so let's just this is kind of try out um let's say so now I am going to use just the the silly name of old data no that's not what I want I want to set the state so this set state and I want to use let me use I guess I can just call I will call it old data so stop me if I'm doing this wrong but I'm going to use old data now I'm just going to use data right that's what needs to happen and then now this gets set so that'll be safe so that's the first step and I've just saved it and I've got no error messages I have it up on my other screen so that's good sign um now we need a way to switch it back so how am I going to do this let's see if I could just do I'm blanking out here so hey so I'm actually don't forget to set up the default state oh okay Sebastian says why not make both API calls on page load and then save them to state then make the button just change what is displayed pulled from the state that's a great idea however at least I probably could do it on component amount so I couldn't I can't make another API call here at least I don't I've tried before and it's come up with errors so there's I assume there's some way to make multiple calls here so it's not going to be here but what I could do is on component did mount I could do it then would that be preferable ought I to make all the API calls that I need on page load or should I wait because a user may not ever even click to need that would it just be what do you all think would that be would that be preferable because if a user did use it it would be faster or would it be more of a waste of bandwidth because I'd be making lots of unnecessary API calls I'm not I don't I don't really have a decision one way or the other at this point I'm going to think about it so let me know okay so Patrick saying set up the default state do you mean like here I need to set like old data up here and then have it do this I'm assuming that what you meant okay so this that state old data equals data so we've got that oh no I know that's what I need to do I should have wrote in some comments what was going to happen so I wouldn't forget so I usually do but so basically here we need to have a check what the current stay is and change data okay so basically I need to figure out which way it's sorted ascending or descending and then change the data so I need to flip this data around one way or another but I need to know I need some some way so what did I say earlier I was just going to have some some check like so we can make it actually what if we had here this is my idea what if we also added so let's say for each row so so basically we have we have data that's always going to be what gets rendered there is whatever is in data but then for each row we not only have you know old data and then I'm going to change it so this will end up being like date ascending date descending we'll probably have that so let's just do that now since that's what was going to be date ascending and then date descending and but then also we're going to have a date current state does that make sense is that too much because this I get ended up being like repeated for several of the rows but my thought is eventually we could have the ascending and descending both save to these and then the this will just basically say whether or not it's ascending or descending and that doesn't have to be a value that could end up being I just a true or false right so I mean this it could maybe be something like is date ascending true or false right I don't know this seems more descriptive me what it's actually doing though let me know what you all think I don't need that okay so what what it will do then is check so too many commas in class I think he's Jonathan just said too many comments I think he was referring to this last comment that I just took out so sorry I'm kind of like really slow it's actually super hot here and I'm literally just like sweating and sweating I don't want to turn my fan on because it's going to mess up the sound for the video but I'm like dressed up in a dress clothes and everything for my job and I'm just like dying here so actually I'm gonna I'm gonna need some water hold on a second I just I don't have to go anywhere I'm just gonna kind of pour it right here okay all right cool Jonathan Jonathan said you got that's what I that's what I thought it's tough cuz there's a delay when we're when we're doing this so I think you know sometimes there is like a little mixup of of things Sebastian said is 31.5 degree C in his room which I'm in the United States so I don't really know how hot that is anybody know what that is in Fahrenheit I could look it up real quick all right so that is really hot that's like almost 90 degrees Fahrenheit for those of you in the u.s. so I actually used Celsius and the metric system when I'm cooking but then for the temperature I use Fahrenheit and that's I don't think that's common to use it for cooking in the u.s. people still six in Fahrenheit but all the cooking shows that I like are all usually from from the UK and so they they use Celsius so anyway let's get back to this so Sebastian if he feels my pain right now because it's also super hot where he is um okay so I still need some way so I have these set up at least a place to store what I want to store but I still need some way to set that and then and then check it so actually the initial state is always going to be ascending right because that's what we're loading first so the initial state for that will be ascending so I guess I could just put I could just put it in there I mean authoritah just put it right there okay we said about stuff in the live chat I'm going to check Flint Frankie I'm not sure how to pronounce Fla n ck e says old data could be an object that holds the query parameter used to get the data from the API so you can specify what old data exactly holds and you don't have to do the same API request again okay so it could hold the query it could actually hold the params okay I'm just so I'm just checking out the the code that was just put in live chat just to see see what's going on there okay wondering actually all right I just had an idea sorry if this is annoying you I keep having ideas and changing things but if this if this what makes sense this might actually work better than whatever I was trying to do right here so I have set it up before and I have it set up basically I've set up caching of the API calls like when I did something like this but I did it with all jQuery stuff I set up caching of the API calls so that obviously I wouldn't have to make more requests and it was set up so that every time an API call was made so basically this portion had a check inside of here and so it checked to see if those query params had already been saved and the reason I thought about this is is because Frankie just had the suggestion of saving the actual params along with the data so that got me thinking like well why not do that and so basically the it would be key we could essentially have key value pairs stored up and the key would be the query parameter in fact the entire URL would be the key and then the value would be the data so that each time I go to make the API request it checks to see if it's already been made and if it has been made instead of return making the API call it just returns what was saved and the key value pairs it could be saved I think it when I did it before I actually saved it in in local storage and I gave it an expiration as well so there was there's another piece of data there too but I don't know does that make sense does that make more sense than the lamb doing it right now kind of like basically simplify things so that I don't have to spell all this out beforehand and it just kind of would build everything up and store it I don't know let me know I'm just wondering anyway so what I just described I'm just wondering like would that be the react way to do things like I said before I used local storage to do that but is that not the react way to do it what are the REC way to do it in fact be to just have it all set in state and and do it like that and not have not hit local storage not save stuff in there at this point I think I'm kind of overthinking it I knew that's why if you read the the tweet that I put out for this video I said I'm attempting to do this I wasn't sure that I would actually get it done all right so I'm not getting any response back it may be a little bit of a delay so I'm not getting response back on that so and I'm also losing viewers so I suspect that some people are in agreement with me that I'm overthinking this and it's taking too long click once actually let me do a let me do a silly thing let you toggle can I use that let's take table will equal zero state toggle those flus if if you're watching this and you're thinking what am i doing then I'm kind of thinking that too so just wait the idea the idea is this this is actually going to be really simple why not just set this variable oops I need to set this actually somewhere else outside of here so let's say let's actually make date current state equal to hmm can I just said something in state I don't have to make it equal to an array right could I just potentially make this equal to zero and then current state this let's see this doc current state I don't think so worry I've never tried this before this said state hold data let's go with start state you stay and I think my editor for us it's not let me do it there we go all right awesome that's what I thought Patrick just confirmed that I can set properties however I want um where am I at okay so the idea is basically like I'm just going to be able to click on this a bunch of time so instead of I don't know an easy way it might be like let's just increment every time I click it and then if it's an odd number it's the ascending if it's an even number is descending some makes sense everybody and then that way it'll just keep track so what I need to do then I'm setting it initially to zero okay so the first time it runs alright it'll just be one and then we're going to do an if statement here it's going to say so we need to make a call at some point so let's do alright so the first time it definitely does it does have to make the call because we have to get the data so I guess would be slightly more complicated than I expected alright Umberto's says I always use bull and set the value to exclamation point value so I used to not buy okay um let me does this make sense out doing it or is this just silly and more complicated than it needs to be be honest with me because honestly I'm this is taking a lot longer than I expected it to and I kind of want to just either finish this tomorrow or like get it working as fast as possible and then fix it up tomorrow or something I'd hate to just end the video at this point because it would feel slightly like a failure even though we kind of did what we wanted to do okay Patrick says it does make sense but it's a bit harder to understand me you come back to it okay I do I do agree yeah I think it would just be better if I could just have one value or another here's what I'm thinking though I'm just blanking here on maybe I should try streaming in the morning and my brain would be better at times I just maybe it's the fact that I am streaming and I so I'm trying to think and talk but occasionally it just seems like I'm better able to figure out this sort of thing when I'm not streaming I like to do it with all of you because you give me great ideas too but in terms of my contribution to this it always seems harder when I'm doing it but anyway what I what I basically have stuck at is when I click how do I change how do I change whatever value I'm going to put here whether it be a boolean or what and then check that check that here like I know what needs to happen but the step in between I'm just drawing a blank on what the best way to do that is okay umberto has an idea so and we also so Frankie says if so if WordPress returns only the first 500 resources is there a flag that says if there are more in this case if we know all resources are returned then we can just sort it on the front end okay it actually WordPress only returns 100 resources but regardless the point is still valid I don't think there's a flag that returns ID I'll have to check the documentation to see if there's it may have to be a separate API call but the API call I might be able to just get the number of how many I'm dealing with so yeah but it there's no flag I mean this basically this is the data that gets returned and that's all this it's just this repeated over again I am cutting out some of the fields so there probably would be some sort of ID let me see if there's an ID field okay so there is an ID but it looks like that's not going to help me I was thinking that it would start it like one and keep going up but it looks like it it doesn't because this is registering 260 and there's no way I have 260 so that won't help let me just take all of this out right now and see let's get everything and see if there's something I've never seen anything that I know of but I've never looked either no all right looks like there's nothing there that would tell me so anyway so I mean that was a good thought I wish it did work out like that I know it's possible to edit the API within WordPress to make it do other things that it doesn't do but I don't I'm not as confident with my PHP skills as I would need to be I think to make that happen Nuno says hi really nice really nice lives good work Thanks thanks for watching all right so Patrick says how about date is ascending true and that's default date is ascending equals not data sasanian okay all right so let's see so basically let's see so let's change I do like I'm gonna go with date is ascending since that is state is sending equals true that's the first one so now when we get in here we toggle so date is ascending equals date is okay so now this is going to toggle and then within here we're going to do one or the other but I still I still do have one issue and that's basically I don't want to make this call every single time what I could do is set up that cache like I was talking about earlier so it doesn't matter I can't make this call every time and it's not actually going to to call anything if it's cash because I'll cash it up and here somewhere or otherwise I need a way for within here for this only one run once or potentially I guess I could have this check as well to say if oh yeah I can just check the state right I can just check and see if there's any data in descending then I'm not going to make that call right yeah that makes sense and that won't require me setting up a separate cache which might be complicated so this data oops now if this state and I figure what I call it date descending date descending I could probably just check the length right like Shelley ng th length is greater than zero right length is greater than zero then we're going to do all this stuff right otherwise and not only so this will actually be wrapped nested if statements this should be read if um date so you want this to be with if it is ascending if they is ascending so I mean if that is true then we want to do this and actually let's if this is else 20 tails after I fixed after I do this then let me know if there's a way I could refactor this to make it better but just to get this done I'm doing it like doing it kind of a very basic way I guess so basically we went to this thought data our dates folks this state sorry okay this state date descending right yeah date descending is going to equal whoops now that ah why am i my brain just not working here so I need this set state and now I need to set date descending no I don't wait if the state if state length I need to say set data that's it that's what I'm going he said data to date descending okay so is ascending let me make sure that this has happened so if the date is ascending and date descending length is greater than nice that's flipped around if it's it needs to be I would say not equal to zero because that's going to return zero right it should right yeah you guys should have looked just like Jonathan Jonathan caught that before I did so good good look on that one I'm going to check the other posts here in the live chat just to see if anyone caught anything else that I messed up on okay so Frankie says from the WordPress API page to determine how many pages of data are available the API returns two header fields so xwp total the total number of records in the collection okay very nice thank you for that information I'm not going to do anything with it right now obviously because this video has been too long as it is but I'm gonna look that up either probably not today I'll probably leave as soon as I'm done with this but tomorrow if I get a chance I will look that up as well thank you all right so States to know for your data and get rid of the length check all to get all together Patrick's saying set initial states to null for your data and get rid of the length check all together okay I will that sounds good I will ask though initially for at least for this data we set this here so that we wouldn't get an error potentially down below but since we're not directly calling any of these down below then it shouldn't be an issue correct and I'll wait a minute before I change that to see hopefully or if you need more explanation for that but I think some of you were around for when we kind of when we talked did this part on our on our resources and why we set it like that in the first place Umberto's says I'm kind of confused you're checking if we are currently trying to sort by date ascending you want to check if we have data for date descending mint data sending and date descending okay yeah that's what I thought so it shouldn't make a difference then right alright so so basically Patrick just to give this right so I could do something like should I legit like just putting all there or can I just leave this blank let me know so then down here I could just say get rid of the length and is this says stay equals equals null so is this what you were thinking something like this or let me know so anyway that would work if it's an all them we need to fill it with something otherwise we need to set data to the date descending because otherwise that means we actually already have set this at some point and so we need to set it back so if date is ascending if date is already descending right so if it's this one so that would be the else for this right else we've obviously already we've already switched it over so all we need to do is something like this right data ascending so at that point we've already we don't have to switch any data around because the first time that this would have been clicked it would have saved this we need to change this and set this to data ascending right okay so first time it's click date ascending gets set so we never have to set it again right also first time this is click this gets set to data so but we also want we also actually want this set here so probably this would be the place where we could set the date descending set data to date descending or I'm sorry take set date descending to data right yeah so whatever there oh there all right let's try I think I'm at the point where I could actually try this and I'm sure if there's some error you all have seen it and oh you let me know oops oh good look okay so Patrick had a wonderful idea um like obviously I don't need to call set state twice so I can just do descending can I do it like so could i potentially do so I could do it like that I mean I'm assuming it this we both happen in order as well so it would be fine and I'm assuming that's what you were referring to Patrick okay and I fixed that all right so let's see I was getting an error I'll bring the service you can see why am I get an error let me i'm just restarting the dev server because occasionally that causes problems okay cool so Patrick is verified then that that that is what what he was referring to what we just changed all right great we got a page load always a good sign and let's go down here so everything loaded up so we haven't broken that and now here's going to be the first click uh and nothing happened on the first click all right so let's see let me just see if we're actually if we are going to get any errors here there's my console I'll bring the console over so we can all see the errors so here's what we're getting oh let's go to the top here ok I'll call it reference their date is ascending is not defined yep now I understand what is going on here so it's going to be this dot date is ascending right that's why I couldn't find it am i using where else am i using that this dot date is ascending is equal to how would I so what I need to could I just do it like that or should I actually write in something else all right so anyway hopefully this works I just want to check and make sure I'm not using this anywhere else if I highlighted it should show me yep this there we go and let me make sure I'm not oops and it needs to be state 2 there we go this state just a date ascending okay I think that's everywhere that I'm referencing something in state then I need to change so okay here's the next era I'm getting it's saying data is not defined on line 59 let's check it out oh no no obviously that's not it where am I not defined where's data not define yes we do all right where I'll show this I'll show this to you again because obviously I have I'm using data a lot so trying to figure out why it's saying it's not defined let me check the latch at sea Mauro's thought that this state data is a sending thing before I did so thank you I I didn't look over and see that you caught that but thanks thanks for catching that pastor Gong sook let's say everybody caught it except for me and I just didn't look over in time to see it oh okay I see what Patrick is saying so basically let me what's happening here is the default state is ascending right but then here I'm setting the state I'll take this out because I'm not actually doing it here what I'm doing is I'm setting the state to say that it's not ascending and then I'm checking this so obviously it's checking to see if this is ascending and it's saying no it's not ascending so set it to ascending so that's why I'm not seeing anything happen so Patrick rightly says put this at the bottom okay and I I didn't do anything about that error that says date is not defined so I expect to get that again I suppose alright so here's the air that I'm getting data is not defined now it's saying it's at line 52 this at state data why are we getting okay so data should be maybe it's a problem with the API call I'm going to check real quick to make sure that this actually works okay so you alright that it does actually work so when I put this in the browser it is returning data so we should be getting data back and let's see in that case the data you're referencing should be this state data also you need to use set state for the toggle oh okay yeah good alright so I guess I got some input about these errors here so it should be data date descending not dates and data so ever yet this says state where we add Oh you're right well you actually so Frankie is saying it should be data date descending not the other way around which which line are you talking about as you said also you need to set state okay so I do need to set state for the toggle so this state date is descending so and I do need it for the table I need assess a so I need this dot set state and we're gonna go date is ascending and I should be able to just to do this start set state oops this dot state dot date is ascending no yes wait a second this state Davis ascending equals oh I see I see I've messed this up a bit all right mrs. 948 I have data ascending instead of Davison in life 48 okay so so I have like two different issues that I'm both getting feedback on in the live chat so I apologize for those watching the recording of this because you can't see the live chat because there's a lot going on in there so in regard to the error of the the data okay then we're saying data is at at this point not local to this function so it needs to be this state data which makes sense that's why I saying data is not defined in this case it's okay because we're getting the data from this this call so it'll be okay and then where else am I using data so down here I also need to use it state uh autocomplete for me okay this state data there okay great so that um should fix that error I'm just going to check that real quick so I'm going to ignore this for just a second just to make sure I'm not getting that same error oops I got a different error so that's good I didn't get the same error and okay shoot yeah this this threw an error really quick so let me let me just take this out just for a second I just want to make sure to take this one at a time I want to make sure that I fix the data error thing and it looks like I'm not getting that error but I'm still not getting the result that I want so okay yeah so until you fix the error okay okay it looks like I have a typo as well Matt says there's a typo in the left half of declaration the second a should be an e all right let me let me try to find that um this state data what am I looking at I don't see it was it in here I'm trying to find the the taper but I'm not finding it okay so Patrick says you're moving things around in state as if it is a cash you need to make sure that when you're removing something in state you reference it with this state data okay oh yes thank you uh I need I need curly brackets okay that obviously is an issue let's see my rumps is a yes inline 48 I'm at 48 this said state date ascending there we go thank you I I looked in this area several times I just couldn't see it thank you very much thanks Matt agon and Patrick for everybody responded with the line so everybody can see that except for me okay so I think we're really close to this the only part that I'm not sure on so Patrick in particular but anybody can can contribute here so I know I edited this a little bit from what it was originally have I messed this line up line 56 do I need to change this it was originally it was originally different than this correct Patrick says it's much easier to catch mistakes when you're just watching deleted okay good thanks Patrick so Patrick says I can act I can delete this line see so this set state data is ascending this and then add to set state Patrick says I need to add an exclamation point to the set state do I add it I'll just get at in here let me know if that's not the right place to add it in here oh there's a nut Morrow sees 156 before this state okay life before this state declarations okay good so that is in fact yep all right awesome okay I saved that and let me bring bring this over if I get any errors as well I'll bring the the console over and let's try it out what is going on oops wrong page all right um all right let me refresh that okay so that's what it should be and we click it great now let's click it again okay when we click it again we get an error well at least it works at least you didn't get crazy errors at first right off the bat so data setting is not defined and events J s56 let's check it out fiftysix all right that's what we were just talking about so date is oh my hat day descending he's not defined in line 56 I'm not even using that am I in line 56 this sad state date is ascending this to state day please okay listen that's an odd error right am I am I missing something obviously I'm not even using this online 56 but I am using it this state Davis oh do I need to do this data equals this state that's probably it all right now let's bring this over we refresh okay alright so click changes changes nice ok it worked in case you didn't catch that it did work we clicked once we click twice and the first two clicked work the third click he'll ever gives us an error here date descending is not defined which this at this point this is easy because I feel like I've had keep having the same error instead of just yep this state date descending okay and that makes sense because this wouldn't actually have fired until the third click anyway so good so this should be this was the only line that hadn't fired yet so assuming we fix this which I think we did this should work so I'm gonna I'm just going to make sure I refresh to reset the state back to the original state and it figures the dev server would just hang so all right I feel it I feel like we're close I said at the beginning that this is going to be one of those times when I don't really know what I'm doing or how I'm going to do it but I'm going to learn a lot and I feel really good when it happens I think this is about to happen alright so click one works click to works here's click 3 it works yay we go back and forth and just to show the network let's see if we can find I'll show you the network so here is where we actually got our descending things so you can see it's only fired once we just click like I don't know six seven times it only fired once so we did only fetch the data one time and it never fires again after that so awesome great job everybody for sure yay on this one this was a little bit me and mostly all of you helping out so I pretty much just brought the here's what we need to do and then you all brought most of the most of the other stuff I really appreciate that this has been Wow over two hours of a video I did so well the other like yesterday it was like an hour you know so I was doing good and then then we went we went over so we went way over the normal time hey thanks everybody some Christian said congrats but thanks for the congrats but really like congratulations to all of you for for kind of coaching me through all that I'm sure it was frustrating at some times when it actually cooled down in my office and my brains a little bit more clearer now but there were there was a time there in kind of the middle that my brain was just not working and you all kind of had to had to hold my hand there and say baby steps with me so yeah I appreciate that a voice Allah says we hope we see you soon so yeah but Co soon so thank you very much for all the help and hopefully this helps somebody watching to know how to do this obviously you could you know repeat these steps now I will say this this in particular we're using the WordPress API right so I'm basically going the the sorting through the wordpress api if you wanted to do this and you like already had the data and you didn't want to make another API call then you'd have to do the sorting on the data you already had if we had done it that way I think it would have been helpful to more people but obviously as we discussed earlier in this case at least at this point since I can only get a hundred entries per page for the events I needed to keep making API calls because I think that otherwise the user would not be seeing everything you know all of the events available so just so that's that's clear that there's a different way to do it to actually sort on the data maybe I'll have an opportunity to do something like that if I can figure out how to get all the entries or something because I would like to do that as well because I think it would be helpful for you all and certainly there'll be occasion for me to use in the future but other than that little caveat hopefully this is some stuff that you can use in your projects and this was certainly helpful for me so I'll be back tomorrow at 200 and I'm thinking Friday I might not do a stream so I was I was gonna do a stream earlier in the day but I now have a meeting so I don't think I'll be able to do it early I'm going on vacation next week but I'm leaving Friday nights and I'm going to drive through the night so it takes about eight hours to get where I'm going to the beach and I'm driving my family through the night so the kids can all sleep and I think I probably should leave work early and take a nap so that I can safely drive throughout the night so it'd be probably best if I left work a little bit early so I don't think I'll be able to do a stream if something changes I'll certainly let you know but as of right now I don't think a stream will be possible for me on Friday I really wanted to do since I may not be able to do one for all week but really I really do want to make sure that I'm awake enough to drive safely you know through the whole night so I do plan on hopefully making some recorded videos and maybe releasing them next week so hopefully you'll have that so you may not have any live streams but I'll be releasing recorded videos and those will go on my youtube channel free code camp is just for the live streams and then my like recorded videos will be on my channel so anyway so enough talk for me you're awesome that you stuck around this long and I know some of you in different time zones it's like two o'clock in the morning now so so go to sleep and and I'll see y'all tomorrow and thanks again
