With timestamps:

00:00 - This course will help you improve your skills 
with HTML and CSS. Popular instructor John Smilga  
00:06 - will teach you how to create a multi page recipe 
website using just HTML and CSS. Hey, what's up,  
00:13 - he is john from coding addict, and welcome to 
another HTML and CSS project. And this video,  
00:19 - we'll build a multi page food recipe site. If 
you want to see the entire project in action,  
00:25 - just navigate to the URL HTML, CSS simply recipes 
dotnet for that app, again, the URL is HTML,  
00:34 - CSS simply recipes dotnet will find that 
up. And effectively, we've got a recipe site  
00:41 - with a bunch of pages. So we've got a home page, 
and about page, the tags page. And then once we  
00:47 - click on a tag, we'll navigate to a tag template 
page. We also have got recipes page, as well  
00:54 - as the contact page. And also if we click on a 
similar recipe, we'll have a single recipe page.  
01:03 - Before we start setting up the project, or image 
just mentioned that since it's a HTML CSS project,  
01:08 - there's going to be very minimal functionality. So 
I'm copying and pasting, since in plenish, demo,  
01:14 - there are no templates or components. So 
for example, if you want to display navbar,  
01:19 - and all pages, yes, you will have to copy and 
paste, since there's no way around it. In order  
01:24 - to follow along with the project, you'll 
need a star and probably the fastest way  
01:29 - to get it is by navigating to john smith without 
calm again, the URL is john smith, calm, and then  
01:35 - look for the project page and filter by YouTube. 
So check for you to project. And in here, if you  
01:43 - click on this button, of course, you'll navigate 
to the project, the one that I just showed you,  
01:47 - but you're looking for the stars. So just 
click on the star or the source code,  
01:53 - both of them lead to the same repo. And once 
we get here, just look for download zip option.  
02:00 - And once you download the zip, of course, you 
want to crack it open here. And then I'll just  
02:04 - drag and drop and place it on desktop, I'll use 
my favorite text editor, Visual Studio code.  
02:12 - And I always prefer working side by side with 
a browser window. So open up the browser.  
02:19 - I'll set them side by side. And then we'll 
go over what you can find in the project.  
02:25 - And essentially, we've got two folders, we've got 
a final one, star one. And of course in the final  
02:33 - is where you'll find the entire source code, just 
in case you ever need a reference. And the star  
02:38 - is world we doing all of our work in the store, 
you'll find the general structure for the project.  
02:45 - So I already prepared some stuff for you. Like 
we have assets. So this is where you'll find  
02:51 - all the images, some CSS files that I'm 
going to talk about a little bit later,  
02:56 - some empty HTML pages. So these are all 
the pages that eventually will create,  
03:03 - as well as one lonely JavaScript file. And if 
you take a look at the index HTML, you'll find  
03:10 - here the general setup, where essentially we've 
got some link tags. So one is going to be for  
03:17 - favicon. Then the next one will be for normalized 
CSS. We also have one for Font Awesome icons,  
03:25 - and one for main CSS. And if you take a look at 
the main CSS, you'll find some global styles that  
03:32 - are used in all of my project. If you're confused 
about some of this stuff, for example, why are  
03:38 - using normalize? And what is the benefit of global 
styles, please watch my default star video where  
03:44 - I cover all of that in great detail. And you can 
find the video link in the description. Lastly,  
03:50 - we're working on HTML CSS project, I prefer 
extension called preview on a web, which spins  
03:57 - up the local web server. And as a result, once I 
save the file, I can see the changes instantly.  
04:03 - So let me show you. So these are my extensions. 
The one that I prefer using is this one, we review  
04:10 - on a web server. And of course, you just need to 
install it. And if you want to see in a browser,  
04:16 - you can either right click it, and 
I'll show you that in a second.  
04:20 - Or you can use this shortcut. So once you install 
the extension, just navigate to index HTML  
04:28 - in the star. So of course, this is all do the 
work. Now if you want to check out the final,  
04:33 - of course, navigate there. And then like 
I said, we can right click over here,  
04:39 - and then choose this option. Or you can just go 
for the shortcut, and I believe it was Ctrl Shift  
04:47 - L and once you split it up, you should see 
a bridge in the browser. And like I said,  
04:53 - the reason why I prefer using this extension is 
because every time you make some kind of changes,  
04:59 - you'll right away See that in the browser. So 
if I go here with Hello people. And once I save  
05:04 - the file, check it out. Now, of course, I have the 
element displayed in the browser. And then lastly,  
05:11 - once in a while, I want to showcase more, we've 
got on a big screen as well. So therefore,  
05:16 - I'll navigate here. And I'll just copy and paste 
this URL. So essentially, I have two browsers,  
05:23 - one is going to be the smart one, where it will 
see the result right away. And once in a while,  
05:28 - I'll hop back to the big browser, just to showcase 
how something looks on a big screen as well. All  
05:34 - right, and we're gonna kick things off with a 
navbar, which has two layouts, we have a small  
05:39 - screen layout and a big screen layout. And on 
the small screen, we can also toggle the length.  
05:45 - So let me make this smaller nurse is going 
to be a small screen layout where of course,  
05:51 - we can toggle. Now, I also probably forgot to tell 
you that when I'm recording, I actually zoom in.  
05:59 - So that's why everything looks so big. 
Technically, if I go back to 100%.  
06:04 - Now, of course, you'll see that everything is 
smaller. So don't be surprised if at some point,  
06:09 - your application looks a little bit different than 
mine. Let me make this big. I'm gonna navigate  
06:16 - back to the index HTML. Again, I'm using my web 
server located in the star in the index HTML.  
06:24 - And of course, as always, we just 
need to start by adding the HTML,  
06:29 - we're going to do that in the following way, we're 
shall remove all the code all the dummy code. And  
06:34 - I'll close the sidebar just so we have more 
real estate. So now I have an app. And of now,  
06:40 - that's just my preference. And let's go with nav 
element also right away, add a class of navbar.  
06:46 - And inside of the nav bar, I want to grow with 
knives on third live. And then sort of this day,  
06:52 - we're gonna have two more. One is going to be for 
novel links, and one is going to be for neither.  
06:58 - So first, let's set up the header. And again, 
I'm going to use some comments here. So let's say  
07:03 - header. So one year, we'll place a logo with 
a toggle button, and then also one for now,  
07:10 - of course, this is where all the links are going 
to be. Now, as far as nav center, why I prefer  
07:16 - sticking in a number, because now we're on a 
big screen, I can always make sure that the  
07:22 - nav content is spanning only certain with 
and of course, I'll show you once we start  
07:28 - styling the big screen, because notice navbar 
actually is going to be spanning all across,  
07:33 - then as far as the content, the nerve center, one 
that I will always be certain with. That's why I  
07:39 - have that nav center inside of Napa. Now when it 
comes to header, we want to place two things over  
07:46 - here, we have a link back to the homepage. So 
basically, I'm wrapping my image in the link.  
07:51 - So we can always Navigate back home. Just to 
show Grace, how is not going to work. Like  
07:56 - if I go to about page. That's the look. But if 
I want to navigate back, either click on home,  
08:02 - or I can simply click on a logo, and I'll be back 
home. And then the second thing is the toggle  
08:08 - button, which of course is going to have that 
Font Awesome icon. So let's start with a link  
08:14 - for the href. We're going to go with index HTML. 
And of course, this is going to make sense once  
08:19 - we add this navbar to different pages. Because of 
course, we are already located in the index HTML,  
08:24 - when we'll add a class of nav logo. And then 
inside of this link, let's go with IMG. And then  
08:31 - all the images are going to be in the assets. 
And then more specifically, we have recipes one  
08:37 - show these ones we'll use a little bit later than 
40. About for the main one, as well as logo, well,  
08:43 - they're just going to be located right in 
the assets folder. So let's set up the path.  
08:49 - We're going to go with forward slash report 
assets. And as far as logo one, we're just looking  
08:55 - for logo, SVG. And then let's add a alternative 
text on our site here, simply recipes, server one,  
09:04 - we should see the logo on screen. And of course 
we do. And after that, let's set up that button.  
09:10 - And this button is going to have two classes, it's 
gonna have a class of btn. So this is coming from  
09:16 - the global styles as well as the NAB btn because 
we'll do a little bit more styling. And also,  
09:22 - you know, let's add a type. Let's say that is 
going to be equal to the button ran inside of  
09:28 - the button. Like I said, we're going to go with 
Font Awesome icon. So we're looking for I element.  
09:32 - And of course, I can access these classes, because 
I have the link to the font. Awesome. Notice over  
09:39 - here, so that's the CDN link for Font Awesome. And 
then as far as the classes we're looking for FA s  
09:46 - and then FA and align, justify. So once I have my 
element, of course, I should see my icon. Since I  
09:55 - do good move on to the next thing. So once we 
set up the header We're here, when we want to  
10:01 - add a comment of lunch. And as the name already 
suggests, in the nav links, we'll have a bunch  
10:07 - of link elements. But one of them the last one, 
contract one is going to be wrapped in a div,  
10:13 - because it will have a little bit different 
styling, not just on a big screen,  
10:17 - as different styling, and of course, also on a 
small screen. Because of that, of course, we'll  
10:22 - wrap it in a div. So let's create four links, 
we need to make sure that the values for the  
10:29 - href actually match our pages. Otherwise, it's not 
gonna make sense. And I'll start with index HTML.  
10:36 - And as far as the text, I'm going to go with 
home. But we also want to add a class of nav  
10:42 - link amount, I'm going to have one for about one 
for tags, and one for recipes. And then make sure  
10:50 - the editor value actually matches the pages that 
we have over here. So let me toggle the sidebar.  
10:56 - Man, I'll copy and paste four times, and learn as 
far as the values and we're gonna go with about  
11:02 - HTML, when I'm looking for tags, HTML. And the 
last one will be recipes, HTML, recipes, HTML,  
11:11 - all of them have a class of modeling, so that 
stays the same. And now of course, we just want  
11:16 - to change these routers around as far as the text 
ones. So let me select them. When I look for home,  
11:22 - I'll remove all of them. And we'll go 
with about when we're looking for tags.  
11:28 - And of course, the last one little beer recipes. 
Like already previously mentioned, when it comes  
11:34 - to contact us, it's going to be a link Yes, 
it's going to navigate to the contact page.  
11:39 - But we'll wrap it in a div with two classes with 
nav one class as well as the contact one class.  
11:45 - So let's say your nav link, another close contact 
link. So contact hyphen link. inside of this div,  
11:54 - let's go with another href element. And I'll say 
contact HTML. And then we'll just add a class of  
12:03 - button. And of course, as far as the text will go 
with contact, and that should do it for the HTML.  
12:11 - As far as the logo I created in figma, which is 
arguably the most popular web design software out  
12:17 - there. It's very, very easy to get started. And 
you can easily find bunch of great tutorials on  
12:22 - how to get up and running with pigma on YouTube, 
as well as Udemy. And once the bones are in place,  
12:29 - of course, now we can just start styling the 
number mesh. And once we have the HTML in place.  
12:35 - Now of course, let's start styling. First, we'll 
worry about the small screen layout. So first, I  
12:42 - want to set this one up. Don't worry about toggle 
effect. And only then I'll set up the big screen  
12:49 - where we're going to do that by navigating to 
main CSS, again, it is located in the CSS folder,  
12:56 - and more specifically, main CSS. And then we 
have the navbar comment. So these are all the  
13:01 - global styles and then right off the navbar common 
will start styling. And let's just start with nav  
13:07 - center. And eventually there's also going to be 
some styles for number. But for time being though  
13:12 - probably not going to make sense. So I'll just add 
selector for the entire navbar. First we'll start  
13:19 - with our center, and then you'll see what styles 
we want to add to nav bar as well. So let's start  
13:24 - over here and I just want to go with some kind of 
width. Since I want to set up this width fluid,  
13:30 - meaning I want to set it based on a screen size, 
I'm going to go with width, and 90 view width.  
13:36 - So those are units. And essentially, that 
just means 90% on screen with regardless  
13:43 - whether that's really small, or really big. And 
then as far as the max width, we're going to go  
13:49 - over here. And then remember, I mentioned that 
I'm going to be using a CSS variable for that.  
13:54 - And in my global styles, I have max width set 
to 11 120 pixels. So that's the width I'm going  
14:01 - to use. Let me go back here, I'm just gonna say 
half an hour friend, and then max width. And what  
14:08 - this means is that our content number is never 
going to be bigger than 1112. That's why we have  
14:16 - an App Center. That's why we added Of course, max 
width. Now you'll notice right now that of course  
14:23 - the nerve center is all the way in the left hand 
side. Why? Well because we have the width bar,  
14:28 - we haven't set up the margin, or we haven't styled 
the parent container. So we have two choices  
14:33 - either you go here with margin zero and auto. 
So that will also always place it in the center.  
14:39 - Or we're gonna work with a parent container. 
And in this case, we'll just say display flex,  
14:44 - and then justify content. We'll set it in the 
center. And lastly we'll go with a line items  
14:49 - and I'll set it equal to center but I can tell 
you right away that we won't be able to see that.  
14:55 - Why well because now bar doesn't have any height. 
So once we add the height and is going to be on  
15:00 - a big screen, then we'll actually see this 
property in action. If you're ever in doubt,  
15:07 - I highly suggest just adding the background. 
So in this case, let's say you're confused,  
15:12 - what's happening with map center, simply go 
with background and then set it equal to run.  
15:17 - Again, this is just going to be temporary. And 
then you can do the same thing with a navbar  
15:21 - and trudge around and set it equal to blue. And 
what you'll notice, once you go to the big screen,  
15:28 - so this is going to be that nav center, 
it's never going to be bigger than that  
15:32 - 1100 20 unless you use the remaining of 
the number. Again, if you're ever in doubt,  
15:39 - two options, either you can set up the board. And 
that's also something that people use. Or you can  
15:43 - just add the background colors. And that way you 
can clearly see Okay, so this is my nerve center.  
15:49 - And this is the remaining of the map. Now, of 
course, since I have justified con on center,  
15:54 - you can clearly see that Madison's are sitting 
in the center of the nav bar. So now let me come  
15:59 - and these ones out, because they're useful. But 
they're also a little bit annoying, because of  
16:04 - course, I don't want to look at the red color all 
the time. And next, I want to go with the header.  
16:11 - Now of course we're styling, where we have the 
logo, as well as the button. This is going to  
16:16 - be the case where I'll set up the height. And 
I'm going to go with six REM. And what's really  
16:22 - interesting is that once we get to the big screen, 
we'll change this height around, and effectively  
16:26 - we'll add the height to the entire number. But for 
now, since we're just styling the small screen,  
16:32 - we'll go with height six arms for the header. 
And then again, we want to go with display flex.  
16:38 - And we'll go with justify content, space between. 
And essentially in here, we're just pushing these  
16:45 - items as far as possible, away from each other. 
So notice now buttons all the way and right inside  
16:52 - the logo is all the way on the left hand 
side. And then I also want to set them up  
16:56 - in the center vertically. And of course, in order 
to do that, we just go with align items center. Of  
17:02 - course, you can use the grid for that. But it's 
just always my preference to stick with flex.  
17:07 - If you have these straight up horizontal and 
vertical layouts. Of course, once it starts to get  
17:14 - more complex, then grid is always a better choice. 
And after that, they want to make my logo a little  
17:20 - bit smaller. So go with a nav header. And 
then I'll target the image. And essentially,  
17:27 - I just want to go over 200 pixels. Now you'll 
see that course our logo is a little bit smaller  
17:34 - than we want to go with now button. As you can 
see, we already have a bunch of styles applied  
17:39 - because we're using that global button class. But 
I just want to add a little bit different padding.  
17:45 - So in here, let's go with NAB btn. And then 
I'm looking for padding, zero point 15.  
17:52 - And of course, I'm going to go with REM. And then 
the same thing is going to be over here, where  
17:57 - we'll go with zero point 75. REM essentially in 
here, just make this padding a little bit smaller,  
18:04 - this one a little bit bigger. Of course, 
that is a choice. If you don't want that,  
18:09 - you don't have to apply the styles. And then 
let's go for Font Awesome. Now one is, of course,  
18:13 - the IOM and so I'll go with navigation. And then 
I'll set the font size equal to one point 25.  
18:20 - One point 25 RPMs. And once we have the map 
button in place, when I just want to go all the  
18:28 - links. So of course now I'm talking about the 
entire list. And as far as the nav links, I'll  
18:32 - set it equal to a display flex again. So display 
flex hour, we're going to go with flex direction,  
18:39 - equal to a column. So now of course, instead 
of being in one line, were stacked one on top  
18:46 - of each other. And then there's going 
to be more styles. So out here to do,  
18:50 - but we'll worry about them once we start actually 
toggling the links, and then we'll right away go  
18:57 - for that one individual link. My one has a class 
of link on here. Let's go with display block.  
19:05 - So we'll change from being line one to display 
block one, and we want to go for text align. And  
19:11 - I'll set it equal to center. And of course, Texas 
in the center, then let's also add text transform.  
19:18 - And we're just going to go with capitalize. And 
after that let's add a different color. And in  
19:24 - this case, I'm going to grow water gray one, 
but I'm going to go for 900. So now of course  
19:29 - all the links have the same color as our text. 
And then let's go for letter spacing, MT will  
19:35 - be equal to our CSS variable when we want to add a 
padding for only add padding top bottom, padding,  
19:43 - one REM and then left and right zero. And also I 
want to add a border on top. So let's go board top  
19:50 - one pixels solid, and then we're shooting for our 
CSS variable. So again, I'm going to go for gray  
19:56 - and 500. So that's going to be my border. Then I 
also want to add transition because as we'll be  
20:03 - hovering, I'll change the color of my link. So I'm 
gonna go over here, we transition that is equal to  
20:11 - my CSS variable, of course, in the global styles. 
And then let's just go with nav link, and then  
20:17 - hover. So as we're hovering, we want to change the 
color, and we'll set it equal to the primary one.  
20:24 - And then lastly, as far as this Contact link, I 
just want to change the padding again, just like  
20:30 - we did over here with an app button. Not to do 
that, we just go here with contact, and then link,  
20:36 - and I'm targeting the actual link element here. So 
I have the class and then I'm targeting the link.  
20:42 - And in here, let's go with padding. And again, 
I'm going to go with zero point 15. REM, and then  
20:49 - one REM left and right. And once 
we're done styling, the Contact link,  
20:53 - we're almost almost done. But before I let you 
go, there's something that I want to point out.  
20:59 - And that is simply the fact that if you take a 
look at the logo, button, you probably noticed  
21:05 - that even though I set up for the parent, for 
the header to be aligned items in the center,  
21:12 - the logo, and button are not vertically in 
assembling. Now first of all, let's take a  
21:18 - look at why is that happening. More remember, 
in the index HTML, we have course a link,  
21:24 - and that link wraps the image. So if we're going 
to go back, and again, I'm going to do that right  
21:30 - after header, but doesn't really matter where you 
do that, I'm going to go with nav logo. And let's  
21:35 - do that trick. We'll go with background. And then 
let's add the red one. And you'll notice that yes,  
21:41 - these ones, so the link, not the logo, but 
the link is in one line with the button,  
21:47 - but not the logo that is sitting inside of going. 
In order to fix that, we simply need to set our  
21:53 - logo to be in display flex. And then in order 
to place the image in the center, we simply need  
21:59 - to go with align items, and then center. Again, 
please keep in mind, we're talking about the logo.  
22:07 - So we're talking about the link, a man we set it 
up as display flex and line items in the center.  
22:12 - So now the actual image is in the center. 
Now, of course you can clearly see that are  
22:18 - actually in one line. So now we want to remove 
the background, we don't even know more. And  
22:23 - once we fixed this tiny bug, we're done styling 
the navbar for the small screen layout. Alright,  
22:30 - it looks like we're done with initial navbar CSS. 
But before we worry about styling, the big screen  
22:36 - layout, let's quickly knock out the toggle 
functionality. And as a side note, if you're  
22:40 - not comfortable with JavaScript, you can simply 
copy and paste the code from the final directory.  
22:45 - And the idea is following on a small screen, 
we want to hide all the strings by default.  
22:50 - And we'll do that by setting up the height zero in 
lunch and not show them we'll create a new class  
22:57 - with the current height or the knowledge. And 
lastly in JavaScript will toggle the nav links  
23:02 - by adding and removing the show links class. So 
the end result should look something like this.  
23:10 - What if I made my screen smaller? Notice the 
button. And once we click, we show the links.  
23:17 - And once we click one more time was LAN we hide 
the links. Like I already mentioned, the plan is  
23:23 - following where we'll find the nav links, murders, 
we have our to do before we do anything before  
23:30 - we set height zero, I actually want to check the 
height of the nav links. So let's open up the dev  
23:36 - tools. We're looking for the elements. And more 
specifically, we're looking forward into how links  
23:41 - and I can see that the height for nav links is 
309 point 79 pixels. And once I know that info,  
23:49 - I'll create a class, I'll say show lunch. And 
then we'll set up the height to be exactly that,  
23:57 - whatever we have right now for not once, and 
in my case, I'm going to go with 310 pixels.  
24:03 - And once I have this height. Now of course I want 
to go to now which I'm like I said by default will  
24:09 - hire them. So say here, height is equal to zero, 
then we also need to set up the overflow hidden.  
24:17 - Otherwise, you can clearly see that we can still 
see the links. So let's go over here or flow  
24:22 - hidden. We also want the transition because when 
we'll be toggling actually one that toggle effect  
24:30 - to happen over time, not instantly. So therefore 
we'll go here with transition. We'll just be  
24:36 - looking for the CSS variable, the transition 
one. And once we have all of this in place,  
24:42 - we can actually test it out by just adding 
and removing the class the show links one,  
24:49 - E and F those and then of course we'll navigate to 
the JavaScript file out of functionality there as  
24:55 - well. So let's go to the big screen. I always find 
it to be easier working there. So let's inspect,  
25:01 - of course, I'm looking for the nav links element 
or here, and then just click on the class.  
25:07 - And right next to the nav links, just go 
with show links. And what you'll notice,  
25:13 - the moment you press enter, now you can 
see the links. If I remove the class,  
25:18 - then you can probably already guess, we won't be 
able to see the links. Effectively, the only thing  
25:24 - we need to do right now is just navigate to the 
JavaScript file. So let's go to the directory,  
25:30 - the JavaScript one, we're looking for app j, s. 
And in here, we'll start with simple Hello World.  
25:37 - And then back in the index HTML, we want to set 
up the script tags. So let's say your script.  
25:43 - And as far as the source, again, we're pointing 
to the JavaScript folder, and the app js. If you  
25:49 - can see the hello world in a console, then of 
course, we're moving in the right direction. As  
25:55 - far as the address, you can select the nav links 
and nav button directly. But I always like to  
26:01 - set up a function that gets me not element and 
if the element doesn't exist. So essentially,  
26:07 - if I get back No, then I just throw there might 
seem like an overkill on a small project for  
26:14 - still decided to share the functionality. So in 
here, we want to go with const get element. And  
26:21 - we'll pass in the selector. So this is going 
to be either the nav links or nav button, or  
26:26 - whichever element you want to select. On. First, 
let's go with const element. So now selected,  
26:33 - and I'll say document, and then query selector. 
And now we pass in the selector. And you probably  
26:39 - already know that in vanilla j s, if there is no 
element. Sure, if I pass in some kind of selector,  
26:46 - that doesn't point to an element, which I'll get 
back to know. So I'll say here, if element exists,  
26:52 - only if it exists, then I'll return the 
element. Otherwise, I'll throw the air.  
26:57 - And I'll just say throw an error. And of course, 
I'll pass in some kind of message. In this case,  
27:03 - I'm going to go with template string, I'll 
say please, double check your class names.  
27:12 - And we'll go there is no. And of course, now 
I'm looking for that selector. And let's add  
27:19 - a class here. And once I have the function, of 
course, we're going to test it out, where I'm  
27:23 - going to go with cons lunch, snom, selecting 
the nav links, and all pass in the class of  
27:28 - nav links. If I don't see anything in the console, 
then of course, we are in good shape. Now if I'll  
27:36 - add some class name, that doesn't point to 
an element that of course will have please  
27:40 - double check your class names. There is no 
bla bla bla class. Hopefully that is clear.  
27:46 - So now of course, we can set the proper class 
here, copy and paste, we're going to be looking  
27:52 - for nav be 10. In this case, of course, we 
also need to change the name here. So nav,  
27:58 - btn, and then DOM. And then let's just add 
a event listener on the button, the click  
28:06 - around and then every time I click the button 
will toggle the showings class. So we'll add  
28:13 - an remove class on the links element. So let's say 
hello here now btn, van, add an event listener.  
28:23 - And then we'll be listening for click events. And 
of course, we need to pass in a callback function.  
28:29 - As far as the logical simpler go with links, class 
list. And toggle. So class lists is the property  
28:36 - on there we have toggle method. And in here, we 
just need to say which class we want to toggle.  
28:41 - Keep in mind or in here, you do need to pass in 
the.we already know that we're talking about the  
28:46 - class or you simply need to provide the class 
value. And the moment I save, I can see that I  
28:52 - have no bugs in the console, which is always a 
good time. And then of course, notice, as we're  
28:58 - clicking, we're toggling the links. So if you 
want to test it out on a big screen, of course,  
29:03 - you can do that. And you'll clearly see that the 
moment I click, I show links over here, notice how  
29:10 - we're again, adding this class. Of course, in this 
case, we're not doing this manually. And then once  
29:15 - we click one more time, then we hide the links. 
And before I let you go, let me just say that  
29:20 - I'm fully aware that we are cheating a little bit, 
simply because if we change the amount of links,  
29:26 - or functionality is not going to work as expected, 
because keep in mind that back in the main CSS,  
29:32 - we're actually hard coding this height value. So 
of course, as we're going to be adding more links,  
29:39 - or removing the links, our functionality 
is not going to work as expected.  
29:45 - If you took my JavaScript course, you probably 
worked on a project where we cover the  
29:49 - proper toggle functionality, but since it's 
not the main focus of the project, I decided to  
29:55 - take this route instead. Alright, and once we 
have toggle function Now we're going to place  
30:01 - finger and close the app js. And now of course, 
we'll focus on a big screen wild. So essentially,  
30:07 - that's the look that I'm shooting for. Once we get 
to the big screen, I want all of them in one line,  
30:14 - links are going to be on the left hand side, 
and then the contact one is going to be  
30:18 - all the way on the right hand side, and not user, 
we just need to come up with some kind of value  
30:24 - for the media query. On In my case, I'm going 
to go for 992. Just keep in mind that of course,  
30:29 - I'm zoomed in. So technically, it's 
not going to happen exactly at 992.  
30:36 - So let's go media screen. And we'll be looking 
for min width, min width. As far as the value,  
30:45 - like I said, I'm going to go with 992. The first 
thing that I want to do is hide the knob button.  
30:51 - So let's just start with the class knob 
btn. And we're going to go with display.  
30:58 - Once we get to the big screen, I don't want 
to show the button. Of course, once we get  
31:04 - past nine to notice we don't have the button, 
that's the first thing we want to accomplish.  
31:09 - After that, we want to go with nav bar, and we 
want to set the height to be six milligrams. If  
31:15 - you remember, on a small screen, we now have had 
or what six outcomes correct. Now in this case,  
31:20 - that's not what I want. Therefore, I'll go with 
number. And then we'll set height to be six RPMs.  
31:28 - And again, if you want to check it out, of course, 
background right there, and you'll see how it's  
31:32 - gonna look like then we want to go with a knife 
center. And I want to set up display flex, why?  
31:39 - Because I want all of them in one line, keep in 
mind that course for the links will still have to  
31:44 - send them up as display flex as well. Otherwise, 
it's not gonna work, there will still be flex  
31:50 - direction column. But as far as nerve center, yes, 
I want the header, I want the length in one line.  
31:57 - Therefore, we'll go here with now center. And 
we're looking for display. And of course, we'll  
32:04 - set it equal to flex, then we want to align them 
vertically in the center. So go with align items  
32:11 - center. After that, we have the now header. And 
this is the case where of course we'll target that  
32:18 - will say nav header, I don't want the height 
to be six items. So we'll just say here, auto.  
32:24 - So essentially, this is going to be the height 
of the actual content. And then let's go with  
32:29 - margin. Right. So this is just going to create a 
little bit of distance in between the links. Now,  
32:37 - if I navigate to the big screen, this is what you 
should see. Now of course, we can see the links.  
32:43 - And this is exactly what we're going to work 
on right now. Where essentially, we need to  
32:47 - understand that if I take a look at the links, 
I set it to be equal to zero. So what happens  
32:56 - if I hide the links on a small screen, of 
course, is exactly what I have right now,  
33:01 - I'm not going to be able to see them on a big 
screen. So notice, if I show the links on a small  
33:06 - screen, I'll also see them on a big screen. 
Now of course, the layout is still domestic,  
33:11 - don't worry about that. That's not what we focused 
on. What I want to showcase is that if we hide  
33:16 - them on a small screen, we're not going to be able 
to see them on a big screen. Why? Well, because  
33:22 - this height is set to zero. And in order to fix 
that, we simply need to target the class first,  
33:29 - some nav links, we want to go with height, 
auto. And now you'll notice that even though  
33:36 - the links are hidden on a small screen, once 
we get to the big screen, we set the height,  
33:42 - we can see the links. Now of course, what's 
more common is layout and because it is a mess,  
33:47 - I simply want to change my flex direction. And 
I want to set it equal to row. And of course  
33:52 - they will be in one line, then I want to align 
them in the center vertically because I have  
33:58 - the button and I have the ones just in case 
there are some differences there. And also,  
34:04 - notice over here, the nav center is taking up 
all of the space. And when it comes to header,  
34:12 - it just has its own width correct. And the same 
goes for knowledge. But I want to change that  
34:18 - centrally. Since now center is taking all of this 
space, I want my links to take up the remaining  
34:27 - of the space. The way we set that one up, we 
just go with width, and we set it equal to 100%.  
34:34 - And yes, the moment nothing changed over here, 
don't worry. We'll work on that a little bit  
34:39 - later. But now if we take a look at the links, 
notice actually spanning all across so I have my  
34:47 - now center of our still display flex and now 
the nav links are spanning all across again.  
34:53 - You want us to route just go with background and 
red and you'll see that now. The links are picking  
35:00 - up the remaining space. And if I remove that 
with 100. And of course, it's not the case. Now,  
35:06 - of course, what I want is to style those nav 
links specifically, because if you remember,  
35:12 - there are quite a few styles coming from the 
small screen, I actually want to override them.  
35:18 - So go with an avalanche of nontargeting at 
one specific link, and I'm going to go with  
35:22 - padding zero, since we added some padding on a 
small screen, then we want to go with war top,  
35:29 - sort of equal to none, when as far as the margin, 
so I want some distance in between, we're going  
35:34 - to go with margin, right, and we'll set it 
equal to one REM. And as far as the font size,  
35:40 - I'm going to go with non REM. And then lastly, 
when it comes to that Contact link things,  
35:46 - I want to place it all the way on the right 
hand side and simply go with margin left,  
35:52 - and we'll set it equal to zero. And what 
you'll notice is that we have the header,  
35:57 - we have the lunch. And of course, the Contact 
link is all the way on the right hand side.  
36:02 - And probably the biggest gotcha is that height 
zero, we're essentially, again, on a small screen,  
36:09 - we set it equal to height zero, of course, once 
we get to the big screen, if we're hiding those  
36:16 - links on a small screen, we need to show 
them and therefore we set it equal to aura.  
36:21 - And with this in place, we're done installing 
the navbar. Now of course, we can move on to  
36:26 - our next task. Alright. And once we're done 
with the navbar, let's set up a structure for  
36:32 - all our pages. Now before we do that, the admin 
just quickly mentioned that if you're bothered  
36:39 - with the small margin on a contact one, you can 
simply go back and add here margin. And of course,  
36:46 - we're looking for margin right in this case. And 
we'll consider equal to zero because of course,  
36:51 - all the links get this margin, right. So if we 
remove it, of course, will not have that space  
36:58 - all the way on the right hand side. As far as the 
structure, we want to set up the page class. And  
37:05 - then we also want to set up the footer. So this is 
going to be structure for all the pages. And then  
37:11 - in different pages, of course, we'll add different 
content, but all of them will have the navbar will  
37:17 - have the footer, as well as the bridge. And you'll 
see once we get there. So first, let's go back to  
37:23 - index HTML. And then right after nav, we have an 
of nav, and let's just say here, main or page or  
37:29 - whatever. So some kind of comment, copy and paste, 
and we'll say end of main. And now let's set up a  
37:36 - main element. And let's add a class of page. And 
then after the main one, this is where we want  
37:42 - to set up a for short Mingo here with Porter. 
And I'm going to go with the poorer element. As  
37:48 - far as the class, since there might be a footer, 
also, in some kind of card or something like that.  
37:54 - I always prefer setting it up explicitly as page 
footer. But of course, this is the preference.  
38:00 - Technically, you can just select the footer in the 
CSS, and you'll still be in good shape. And as far  
38:07 - as poorer. I want to go with paragraph here, then 
we'll go with special HTML character. So I'm going  
38:14 - to go here with ampersand and then we'll say copy. 
So of course, now we'll get that copyright sign.  
38:22 - And then I just want to set up the date. Now 
for time being we'll hard code that. And then  
38:27 - later on video will actually set up the JavaScript 
code as well. So let's go here with ID and date.  
38:33 - So that's what we'll use in JavaScript. Like I 
said, For now, we'll just hardcode we'll say 2021.  
38:41 - And then right next in the span, we'll set up 
another one. So still within the same paragraph,  
38:47 - we'll go with second span. And here, let's 
class and we'll say for logo for logo. And  
38:56 - let's just write whatever is the logo of the 
site. So in my case, it is simply recipes. But  
39:01 - of course, you can add different logos as well. 
And then right outside of the span, but still  
39:08 - within the paragraph, we'll go with built by, 
I'm just gonna use a shameless plug. And I'll  
39:15 - set up a link back to John's milk about calm. So 
go with href when I want to go to the big screen,  
39:23 - and I'm going to be looking for John's melton.com, 
I'm going to grab the href copy and paste.  
39:28 - And of course, now I have a link, let's just step 
over here coding. So that should do it for the  
39:35 - HTML part for the structure for all the pages. 
Now of course, we just want to swing back to the  
39:40 - main CSS. And I'll grab this comment one, and then 
copy and paste and we'll set up one for footer as  
39:48 - well. Let me copy this one copy and paste and then 
let's set up one for photo and you're not mature.  
39:54 - We're going to copy paste one more time, because 
that way I can set up the next Comment as well.  
40:02 - And for the sake of simplicity, I'm just gonna 
leave it blank. Now we'll actually start with a  
40:07 - footer. And only then we'll worry about the page. 
And you'll see in a second why, for the time  
40:13 - being, what we can do on a page is just set up our 
famous background red, so that we will clearly see  
40:19 - what we're styling. And let's just start by 
targeting the page footer. So let's say here,  
40:25 - page footer, and I want to go with height 
equals to forums. So add some kind of height,  
40:33 - then we'll also go with text align center. So 
now all the text is going to be in the center,  
40:38 - then we want to add background. And let's 
go with CSS variable. So in this case,  
40:44 - I'm looking for the value of black. And then of 
course, we also want to add some kind of color.  
40:49 - In this case, we'll go with color. And we're 
looking forward to white one. So now of course,  
40:54 - all the text is white, apart from the link, but 
I'm noticing here that of course, I am the height.  
41:01 - But I'm not placing the content in the center. So 
actually, a better approach is removing this text  
41:07 - align center, and we'll go display. And I'll set 
it equal to flex. And then let's align them in  
41:14 - the center vertically, and also justify content, 
which of course, is going to do that horizontally.  
41:22 - So both justify content, as well as the Align 
items are set to center. Now, we still have some  
41:29 - default margins. And therefore we will target the 
footer, and more specifically paragraph, and also  
41:36 - margin bottom is equal to zero. And once we have 
that, I just want to add colors to the link,  
41:42 - as well as the logo. And in order to accomplish 
that, we simply go with footer logo, then comma,  
41:49 - and then we'll go with page footer. And then, 
of course, I want to go with color. And we'll  
41:56 - be looking for the primary one. So once we set 
it up first, now the logo, as well as the link  
42:03 - this primary color. If I take a look at the 
complete project, that's what I'm shooting for.  
42:09 - Now the next thing that I want to do is set up 
the page height. Because if you notice a moment,  
42:15 - of course, yes, we do have the nine bar we 
have the footer, but I actually want the page  
42:20 - to take up the remaining space. And how we can do 
that, well, we can use min height. And we'll use  
42:27 - the calc function, because both the navbar as well 
as the footer have some kind of height. And first,  
42:33 - let's start with some kind of width. So in here, 
let's say background red, and we'll go with width.  
42:39 - And width always will be 90% of the screen size. 
That's why we have view with units. And of course,  
42:48 - I also want to set up some kind of max width. 
And this will be equal to my CSS variable. So  
42:54 - let's go over here with max width. And eventually, 
what you'll notice is that the content of the page  
43:01 - is going to be aligned exactly like the navbar. So 
if you remember, we also use the max width in the  
43:08 - map center. And that's why both of them will be in 
one line. Now, of course, we have no content. So  
43:13 - you cannot see that yet. But trust me, eventually, 
it's going to be there, whenever we want to go  
43:17 - with margin, zero and auto. So now I always place 
it in the center. And then I also want to add a  
43:23 - little bit of padding on top. So say here, padding 
top, and let's just go with two REM now of course,  
43:29 - you can clearly see our red box, which essentially 
is going to be our page. And lastly, what we want  
43:36 - is set up that min height. So for all the pages, 
there's always going to be this min height. I want  
43:43 - this to be 100%. But I want to subtract the height 
of the navbar as well as the height of the footer.  
43:51 - So we can do that by setting up min height. When 
we'll go with calc function. Let's just go with  
43:57 - honored view heights. So this is going to be 100% 
on the screen minus. And then of course, we want  
44:02 - to add six hours plus the forearms, I don't want 
you'll notice that regardless on screen size,  
44:10 - this is going to take at least 100% of the 
height. Now of course, if we'll add more content,  
44:17 - it's going to be bigger. And you'll see that in 
later pages, but at least minimum is going to be  
44:23 - 100% minus the navbar as well as the footer. 
And then before we have that all the pages,  
44:31 - I actually want to go to the app js, I want 
to target the date element. And I just want  
44:38 - to showcase how we can add this dynamically. So 
for the time being, let's just remove this code,  
44:43 - essentially, let's just remove the current year 
because we're not going to be hard coding that.  
44:48 - And I want to swing back to App j s. And in 
here right after the button. We'll go with  
44:54 - const date. So now we're selecting get element 
and of course I'm looking for that Id missed a  
45:00 - date. And in here, we'll just go with constant 
current year. And if you want to current year in  
45:08 - JavaScript, we just simply go with new date, we 
invoke it. And we have functioned by the name of  
45:14 - get full year. So now of course, we just need 
to go with date. So that's the element when  
45:20 - text content matter is equal to the current year. 
So this way, we'll always have the current year,  
45:27 - we won't have to hard code this. And then lastly, 
once we have this structure, I actually want to  
45:33 - take it, copy and paste and set it up in all 
the pages. And before you get mad about it,  
45:39 - before you get mad about the fact that we 
still need to copy and paste and all the pages,  
45:44 - let me just say one more time, since we're 
just using straight up HTML and CSS, we don't,  
45:51 - we don't have any concept of templates or 
components that we have in Korea. So yes,  
45:56 - if we have multiple pages, there's really no other 
way. And of course, once we set up a structure for  
46:03 - all the pages, then we'll worry about index HTML. 
And then one by one, we'll add code, meaning the  
46:11 - HTML and CSS to the rest of the pages. So once you 
have the structure, since we'll use it and all the  
46:18 - pages, and since we have all the correct links, 
whether that is for CSS, or for JavaScript, I want  
46:25 - to take all of us, and then one by one, I want 
to add it to all the pages. Because in here, yes,  
46:31 - we have some boilerplate code. But essentially, 
what we want is just select everything,  
46:36 - and then overwrite with our current code that 
is coming from the index HTML. And of course,  
46:43 - the only thing you need to do over here is just 
change the title. And since this is 404 page,  
46:50 - since this is an error page, we're going to go 
here with error. And if you want add more text,  
46:55 - of course, you can do that. But in my case, I 
want and then just so I can understand what is  
47:00 - happening, where I have the page, also add 
a new one. And I'll say our page, again,  
47:08 - we need to do that for all the pages, we want to 
do that for about contract recipes, single recipe,  
47:15 - back template, and tags. And of course, I'll 
stop the video because I don't think it's very  
47:21 - useful for you to watch how I do 200 pages. But I 
strongly suggest you do the same because that way,  
47:27 - it's going to be easier later on when we set 
up the pages. And once you copy and paste our  
47:32 - page structure, your website should look 
something like this, where all the pages,  
47:39 - use the navbar, you'll have the footer, 
you'll also have the page with a heading one  
47:45 - with the name of the page. And of course, a title 
that matches whatever is the file name or here.  
47:52 - And essentially from the navbar, you should 
be able to navigate to all the pages as well  
47:58 - as the 404. So the 404, of course, is the one 
where we need to go to the URL. And let's just  
48:04 - say for for HTML. And effectively, this is an 
error page, if the user is looking for some kind  
48:11 - of resource on a server that doesn't exist. And 
just to showcase how is that going to look like  
48:18 - in the actual dynamic application. Let me just 
find here, Gatsby version three. So this is the  
48:24 - original project. Notice, if I'm looking 
for some kind of page that doesn't exist,  
48:28 - let's say Users page, also in this portal for, 
so that's the one that we'll set up here in the  
48:34 - error page. And with all this in place. Now of 
course, we can keep working on a project. Next,  
48:42 - I actually want to work on homepage, where we have 
this banner. Alright, and once we have all the  
48:48 - structure in place. Now of course, let's worry 
about our hero. And essentially what I want is  
48:53 - some kind of div with a background. And for that 
background, we'll use the image. And then we'll  
48:59 - also place a text in the center. And as far as the 
HTML, we want to go to index HTML. So of course,  
49:06 - there's going to be our homepage. And then inside 
of the main, let's just add here a comment. Let's  
49:12 - say that we're going to be looking for the header 
element here. And let's go with the actual header  
49:19 - element with a class of hero. And inside of it, 
we're going to go with hero container and hero  
49:26 - tags. And you'll see in a CSS, why we have this 
nested structure. So let's go with hero container.  
49:34 - And then inside of that hero container, we're 
gonna go with hero text. And in there we'll place  
49:40 - the heading one with some kind of text again, 
in my case, it's going to be simply recipes. And  
49:46 - then right below it, we'll go with a subtitle. Now 
one will be no fluff, no fluff, just the recipes.  
49:57 - And once we have the HTML in place now of course 
we want Navigate to main CSS, open up the main CSS  
50:04 - here, we have already a comment. So we'll just 
say your hero, I guess, before we do anything,  
50:11 - maybe let's just copy and paste. So we don't 
worry about the next one. So copy and paste.  
50:17 - And then let's just say here, here, oh, and in 
here, I just want to set up some kind of height  
50:22 - for my hero. And I guess I'm gonna go with height 
of 40 view heights, essentially going to 40%  
50:29 - of the screen. So let's go with height. And 
once we have that, let's add that in background.  
50:35 - So let's go over here with background URL. And 
we'll be looking for the image. And in this case,  
50:40 - I'm looking in the assets. And we'll go with 
main jpg. But of course, we want to place it  
50:46 - in the center, we want to make sure it covers 
everything. And also there's no repetition,  
50:51 - of course, we can do it long way. Or there's 
also a shortcut, where we go and center cover,  
50:57 - and then we set it equal to no repeat. So once 
we do that, of course, we should see the image.  
51:04 - Now what I want is to add a border radius. So I 
want around the edges. And I also want to add a  
51:11 - little bit of margin in the bottom. So let's 
go here with margin bottom on assert equal to  
51:18 - two RMS. And also I want to add that border 
radius. So let's just go with border radius,  
51:24 - and set it equal to our border radius 
global property. Now, in order to set up  
51:32 - Look, where I have a text right in the center, and 
as you notice, here, the background is actually  
51:40 - a little bit darker. So there's some kind of 
overlay on image will actually set this one as  
51:46 - position relative position relative, and 
then the hero center. So this enclosing div,  
51:54 - this is where all set up position absolute. And 
then we'll use this player flex to place a text  
52:00 - in the center. So let's keep scrolling. And we're 
gonna go with hero container. And like I said,  
52:06 - we're gonna go with position absolute. And since 
the parent is position log, Now, of course,  
52:12 - we're setting up everything based on a parent. 
And then here, I just want to have a width 100%,  
52:20 - height, all 100%. And then let's just set up 
top and left to be equal to zero. So top left,  
52:29 - both are equal to zero. And once we have all of 
this in place, Now, of course, let's add that  
52:35 - overlay. And we do that by going with background. 
And then we're looking for RGBA. And I'm just  
52:42 - gonna go with 000 0.4. So RGBA. Now, this gives 
me 0.04. That's not what I want. So essentially,  
52:52 - notice how the background right now is darker. 
So we added the overlay on top of the image.  
52:59 - And of course, if we go really dark, then of 
course, there's going to be hard to see the image.  
53:03 - So therefore, I go here with RGB. And as a result, 
I can nicely control this color. So the darker  
53:10 - you'll go here, of course, the darker the overlay 
is going to be. And the reason why we want to set  
53:15 - that up, is because if we don't do that, then of 
course with white text, it is going to be hard  
53:20 - to see the text. That's why we want to set up the 
image, we want to add the overlay, and we want to  
53:26 - add some dark color to it. And then we'll make 
the text white. So right after the background,  
53:33 - we can probably go with border radius, since at 
the moment, our image has the border radius, but  
53:39 - not the container. So let's go with border radius, 
and set it equal to the border radius property.  
53:45 - And then if I want to place the text in the 
center, we want to go with display flex align  
53:50 - items center. So now it's going to be for 
vertical, just for content is going to be for  
53:56 - horizontal center. And then we want to target the 
Hero Packs. So that's going to be a div inside of  
54:03 - that container. So here are tags. And let's just 
set up text align center, because you notice,  
54:09 - even though the hero text is in the center, the 
actual text inside of it is not before we go  
54:15 - text align, and we set it equal to centers. 
Now, of course, everything is in the center.  
54:20 - And let's also add that white color. So let's 
go with our CSS variable. And of course, the  
54:25 - name is white. And then the very last thing that 
I want to add is the media query for 768 pixels.  
54:34 - And once we get to that screen size, I want to 
make the font size for heading one for RPMs and  
54:40 - set the margin bottom to be equal to zero. From 
here, let's go with media screen. And of course,  
54:47 - we're looking for some kind of value. In this 
case, I'm going to grow with men with 768 pixels.  
54:54 - And once we get to the screen size, like I said, 
we're going to go with hero text and how Everyone,  
55:01 - let's just go with font size for RPMs. And 
then let's set up the margin bottom to be  
55:07 - equal to zero. And once we have everything in 
place, let's navigate here, this is going to be  
55:13 - the look on a big screen. And if we make this 
smaller, of course, this is going to be the  
55:18 - look on my screen. Now, as always, I'm massively 
zoomed in. So technically, if you take a look at  
55:24 - the small screen, it's going to look something 
like this. And once we have our here on place,  
55:30 - now of course, we can focus on our recipes, 
where we'll have two column layout. On one side,  
55:36 - we'll have tags. And then on the other side, we'll 
have the cards beautiful. With our hair out of the  
55:43 - way. Now let's tackle the big beast, the recipes 
layout, where we've got a two column layout with  
55:48 - tags in one column, and cards in the other. Now, 
since we'll reuse this layout in multiple pages,  
55:55 - please take your time. And don't rush with this 
one. Better to take more time right now than chase  
56:02 - some silly spelling errors later on from my part, 
I'll probably be even more annoying than usual,  
56:08 - by repeating the same things over and over. Since 
in here we have the nested layout. So it can get  
56:15 - tricky. And therefore I think it's important that 
I basically keep repeating the same thing. And  
56:20 - we'll also split this one into multiple videos, 
just so we can build everything step by step.  
56:27 - The good news is, once we're done with the 
recipes, it's pretty much smooth sailing from here  
56:32 - on out. And effectively, we want to go back to the 
index HTML, of course, we're looking for the main  
56:39 - and you want to place this one in the main. So 
not outside of main not inside of the footer,  
56:44 - you still want to place it in the main and 
therefore allowed bunch of comments here  
56:48 - as well. Again, we will reuse this one. So it's 
much easier if you have clear comments where the  
56:55 - next section starts, or element. And hopefully 
you get the gist. So we'll go here with end of  
57:01 - error. And we'll have another set of comments. 
And let's just go with recipes container  
57:09 - container. I'll do it over here as well. And let's 
just say endof love recipes container. And we're  
57:18 - going to go with section with a class of recipes, 
container section, recipes, container, inside of  
57:26 - the container will have two major things. We'll 
have a tags container. So I'm talking about verse  
57:34 - column over here. So this is gonna be our tags. 
And then we'll have recipes cards. And of course,  
57:41 - there's going to be more content. But for now, 
let's just set up those main elements. And again,  
57:46 - we'll place a bunch of comments, let's say tag 
container. And we'll copy and paste course, on  
57:55 - here, we'll say tag container. And as far as the 
tags, we'll just go with div with a class of tags  
58:03 - container. So if you want, maybe let's add an 
s here as well, just so it makes a little more  
58:09 - sense. And then we have a recipes list. So these 
are going to be those cards. And in this case,  
58:15 - I think I can just copy and paste, we'll just 
change things around where I want to select  
58:22 - all the tags here. And let's say recipes. And 
instead of container, this is going to be a list.  
58:29 - So let's say here. So that's going to be the 
structure for this container, recipes container,  
58:37 - run tags container, where we'll have the 
tags. Here, of course, we'll have the cards,  
58:43 - the recipe cards. And now one by one, let's add 
more content. As far as the recipes container,  
58:50 - we're going to have 104 with a text of recipes. 
And then also have a div with a class of  
58:58 - tags list. And essentially in here, I'm 
just gonna have lunch. Now, since again,  
59:03 - this is HTML and CSS project will simply navigate 
through the page to the tag template page  
59:11 - will display these recipes when you're talking 
about the dynamic project one, but we set it up in  
59:16 - Gatsby. Of course, in here we navigate to the 
tag, of course, we display that one specific or  
59:22 - multiple recipes that are associated with 
that tag. Keep in mind that in this case,  
59:27 - of course, it's not going to be dynamic, we'll 
just have one page and we'll navigate there,  
59:32 - content will always be the same. But when it comes 
to dynamic project, of course, you'll click on a  
59:38 - tag and then you only display the recipes that are 
associated with that tag. And hopefully you can  
59:45 - already see when it comes to layout, it resembles 
a lot to what we have here in recipes list.  
59:53 - So this is what I'm talking about where we 
will reuse this layout. Some parts of this  
59:58 - layout quite heavily Around the project. So let's 
make sure that we set up everything correctly.  
60:04 - So back in the index HTML tags contain an array of 
heading four. And in here, I want to go with tags  
60:11 - list. And essentially, these are just going to 
be linked to the tag template page, then they're  
60:16 - not going to be dynamic, all them will point 
to the same page. And essentially in there,  
60:21 - we'll just have static content. And as far as 
the href, we want to go with that template HTML.  
60:28 - And here, let's just add some different values. 
So I'm going to go with beef. And I'll say one.  
60:34 - So what I'm trying to say here is that there's one 
recipe that has the tag of beef. And of course,  
60:41 - we'll just copy and paste and change these routers 
around. So for breakfast, we'll go with two  
60:48 - than four carrots, we'll go with three carrots, 
we'll go with three. And here, of course,  
60:54 - we'll have the generic one, the food one, which 
is for, and again, not to be redundant, but in a  
61:01 - normal project, of course, versus coming from the 
database. So this info is coming from database.  
61:07 - And it changes it is dynamic, the more items you 
add course, you'll display different info in here,  
61:14 - just HTML and CSS project. So of course, we're 
just hard coding. When it comes to recipes list,  
61:20 - we want to set up those guards. So we're done 
with tags container should look something like  
61:27 - this. I'm back in the recipes list, we want to 
set another comment, we'll go with single recipe.  
61:36 - So this is going to be that card. And we'll 
copy and paste. So say and have single recipe.  
61:42 - And in here, I want to go with link. Now this link 
is going to go to single recipe page. Essentially,  
61:50 - this page probably is going to be the last we 
set up because there's also quite a bit of work  
61:55 - over there. But the idea is that this goes to 
the tag page. But then this one goes to that  
62:02 - single recipe, whatever it is, again, in our case, 
it's going to be hard coded. So if you take a look  
62:08 - all the time display the same info here. But in 
general, when you have dynamic product, of course,  
62:14 - you display a different recipe. Hopefully that 
is clear. As far as the href will go with single  
62:21 - recipe HTML, right away out of class here, have a 
recipe. And inside of it, we want to go with image  
62:31 - as far as the source while it's going to be in 
the assets. And we'll start with recipe one,  
62:36 - then two, I believe we'll have four. So you can 
already guess that, of course being the assets,  
62:43 - we have recipes folder. And in there, I have 
recipe one, recipe two, three, and four.  
62:50 - So let's start with the first one. So we're gonna 
we have here a image tag. Now let me close the  
62:55 - sidebar. And we're going to be looking in the 
assets, and then more specifically the recipes.  
63:00 - And then in there we have recipe one, 
jpg. Now as far as the alternative,  
63:05 - not just say food. And I also want to right away 
add classes. So the generic IMG class, remember,  
63:15 - was set in global styles, as well as recipe. 
ru IMG master class, I want to learn right  
63:23 - after my image. Let me close this one. And right 
after my image, let me go with the heading five.  
63:30 - And I'm going to go with some kind of text. Let 
me just see. So I'm going to go with this one. And  
63:37 - I'm also going to go with prep time and cook 
time. So I'm going to set up a paragraph  
63:41 - with the text of prep. And again, in 
this case, we're hard coding, of course,  
63:46 - we're going to go with 15 minutes of a vertical 
bar. And of course, we'll go with cook. This is  
63:53 - going to be equal to five minutes. Let me save 
it, let me take a look. That should be the look  
63:59 - on a big page. Okay, looks about right. And 
now we simply want to copy and paste this one  
64:05 - and just change the heading five. So I'll leave 
the paragraph exactly the same. But since I'm  
64:12 - going to be changing the pictures, I'll also 
change the text over here. And if you want to see  
64:16 - the final text, just navigate to complete project 
and of course, this is what we're shooting for.  
64:22 - So these are the titles of our recipes. So let me 
just take here where I have the starting comment  
64:30 - and select everything, including the admin comment 
and now of course we want to copy and paste three  
64:35 - times so 123 and now the only thing left to do 
is scroll up. Okay, that's our first recipe.  
64:44 - And we will look for the next one, we'll just 
change the image. Now of course this is going  
64:50 - to be recipe number two. And as far as the 
text, these are going to be Greek ribs, ribs  
64:57 - and let me just save it so I can see Yep, that 
looks about right, then we have vegetable soup.  
65:04 - And that is going to be recipe number three. And 
of course, I'll change the text here as well.  
65:10 - And the last one will be banana pancakes. And 
of course, we want to change the image as well.  
65:15 - So in this case, we're looking for recipe number 
four. So if I take a look at the big screen should  
65:21 - look something like this. Of course, we have 
the recipes. So these are going to be our tags.  
65:26 - And then we have those four recipe cards. 
Wonderful. We're actually done with HTML.  
65:32 - So now let's navigate to main CSS. And of 
course, let's set up the styles. Like always,  
65:38 - we'll start with the small screen, of course, 
and then we'll worry about the big screen layout,  
65:43 - I have my comment here. Let me copy and paste. And 
here, I'll just write recipes. And then in order  
65:50 - to help us, I'll add some borders, again, just so 
we have an understanding of what's happening. So  
65:56 - in here, let's go with a recipes container. So 
that's gonna be that main container. And here,  
66:02 - we'll go with display grid. And if you remember, 
by default, is going to be a one column layout.  
66:09 - So that's exactly what I want on a small screen. 
But eventually, keep in mind that this is going to  
66:15 - be a two column layout. Correct. So we might 
as well set up the gap right now for both  
66:20 - for rows, as well as the columns. Again, I'm 
talking about the parent container, where I have  
66:26 - the recipes and the cards. And therefore, I'll 
go with gap here. And I'll say, to REM, and we'll  
66:34 - set it up as one REM again, at the moment, we'll 
only use one, because we have one Commonwealth.  
66:41 - But then eventually, once we have two columns, 
essentially, once we set up the meter queer,  
66:46 - of course, then we'll use both of the values are 
we're about as clear workers, in order to help us  
66:52 - more just go with two pixels, solid, and red, just 
so we can see what's happening. So that's gonna be  
66:59 - my main container. When we want to go with tags 
container gun, that is for tags, tags container.  
67:06 - And essentially, we want to set up 
right away board just so we can see what  
67:11 - is happening. So what we're styling. And in this 
case, I'm going to go with below. And once I save,  
67:17 - I should see over here that that is my 
tags container. And as far as the styles,  
67:23 - I actually want to place it all the way at 
the bottom. So I want to change the order.  
67:28 - Notice over here in the index HTML, what do I 
have first, of course, I have the tags. Correct,  
67:34 - I have my dark container. And only then I have 
the recipes list. And as I noted, may just change  
67:40 - this one as well. So it's not going to be recipes 
container will go with recipes lists, so and of  
67:48 - recipes list, just so we have a little bit more 
clarity on what I'm trying to do on a small screen  
67:56 - is to actually change the order. So notice here, 
I have the hero first. And then I have the cards.  
68:02 - And all the way in the bottom, I have 
the recipes. I mean, it's not a big deal,  
68:06 - you can technically keep it at the top, but 
it's actually my preference to change the order.  
68:11 - And if you remember, by default, all of them 
have order of zero. So if you add order of one,  
68:18 - you'll notice that the recipes are going to 
be all the way in the bottom. So essentially,  
68:23 - we have the recipes list still with order 
zero, and we just change the order over here.  
68:28 - Now of course, once we get to the big 
screen, we'll change it back again. But  
68:32 - that's a different scenario, than we want to go 
with display flex, and flex direction column.  
68:40 - Now again, keep in mind that I'm talking about 
the parent container for the heading for as well  
68:45 - as the lunch. So for both of them. Now, when it 
comes to links, there's going to be another nested  
68:50 - layout. But we'll worry about that one a little 
bit later. So let's just say here, display flex,  
68:56 - then we want to go with flex direction, we're 
going to be looking for the column. Eventually,  
69:01 - we want to set up the button in the bottom 
as well. And we'll set it equal to three REM,  
69:07 - so should look something like this, then we 
want to go with a recipes list. And then we'll  
69:13 - swing back to the tags. So let's go over here 
with a recipes list. And again, by default,  
69:19 - this is going to be a one column layout. And 
we'll do that just by setting up display grid.  
69:26 - And then we'll right away set up the gap of qR 
yams and one REM and again, this is going to  
69:32 - be the same as with the main container where since 
we have one column layout, of course, we're not at  
69:38 - the moment using both values. But how the recipe 
list eventually is going to look like. Well,  
69:44 - it's going to be a three column layout. Correct. 
So therefore i right away and that got property  
69:49 - with both of the values. And also I want to do 
the same thing where I'll add the padding bottom  
69:55 - equal to three REM when we want to swing back The 
tags. So I set up pretty much the major styles  
70:03 - for the recipes list. Now I want to worry about 
the tags. First, me scroll down just so you can  
70:09 - see what's happening. We're going to go with tags 
container, when we're looking for heading for,  
70:15 - of course, and we'll add a little bit of margin 
in the bottom. So say here 0.5 RPMs. And as far as  
70:23 - the font word was changed around, and let's set 
it equal to 500. After that, I want to go with  
70:30 - entire list course, I'm talking about the actual 
tags list, and I'll make the screen size bigger  
70:36 - just because I have zoomed in. Otherwise, it's 
gonna look funky. And we're gonna go tags list.  
70:42 - And in here, we want to go with display grid, 
and right away, set it up as a three column  
70:47 - layout. So let's say grid, template columns. And 
we're looking for one fraction, one fraction,  
70:53 - and one fraction. Again, keep in mind that this is 
going to be a small screen layout. Once we get to  
70:59 - the big screen, of course, we'll set it back to 
one column while running, we want to style the  
71:05 - actual link. So let's say over here, tags list. 
And of course, the moving forward link element. As  
71:11 - far as the text transformation, we'll capitalize 
it when we want to set them up as display block.  
71:19 - And after that, we want to set up the color. And 
I'm going to go with my gray 500 here. And also  
71:25 - I'll add transition because there's going to be a 
hover effect. So transition. As far as hovering,  
71:31 - let me just speed this up by copying. Then 
I'll say hover. And as we're hovering,  
71:37 - I'm just going to change it to primary. So 
again, covering both the color, and instead of  
71:42 - gray. Let's go with primary. Once we save, 
we should see that as we're hovering, notice,  
71:49 - of course, we're changing the color of the link, 
run, we want to go and style the recipe. Now what  
71:55 - is the recipe? Well, that is going to be our 
card. So we're pretty much done with a tags,  
72:02 - of course, apart from the big screen, and 
therefore I'll still leave those borders,  
72:07 - I'll remove them at the very, very end. And you're 
not actually with me look for the recipes list.  
72:15 - And let me add the border here as well. Because 
I think it's gonna be very helpful later. So  
72:20 - let's say here, green, let's say that one on 
your course, we're going to see where we have  
72:26 - our columns. And like I said, we're gonna target 
the recipe. So that's going to be the entire card  
72:32 - recipe here. And remember, it was a link. So start 
with display block. And then once we set this up,  
72:39 - now, of course, I want to target the image. So 
each card has the image. So let's target it,  
72:45 - let's say recipe. And I believe 
the class 40 image was recipe IMG.  
72:51 - And I'll set up the height, and I'll go 15 REM 
work. So Vern, all right away a border radius.  
73:00 - Look for our CSS variable for that course, 
border radius. And as far as the margin, well,  
73:06 - we're just set up margin bottom one, REM, 
we save that one. And then we want to go  
73:12 - with a recipe and heading five. So of course, 
it's going to be the title, and also want to  
73:19 - style the paragraph. And then we're pretty much 
done with a small screen. So let's go over here,  
73:24 - let's say recipe. And heading five, like I 
said, we're looking for margin bottom zero,  
73:31 - then I want to make the line height smaller. So 
go with one, if you remember in global styles,  
73:36 - of course, by default, it was bigger. And then as 
far as the color, let's go with color. And we're  
73:42 - gonna go with gray 700. So it's not going to be as 
dark as the rest of our text, it's going to be a  
73:48 - little bit lighter. And then also we have one for 
the paragraph. So let's say your recipe paragraph.  
73:55 - And basically what we're looking for is margin 
bottom to be zero because there is some margin as  
74:01 - a default. And the same thing, line height will be 
equal to one. And that's usually the case when I'm  
74:08 - dealing with some kind of cards because you don't 
want those massive line heights around what's also  
74:13 - add right away margin top to be 0.5 RPMs. Just so 
we get a little bit of space. As far as the color,  
74:21 - I'm going to go with gray, but I'm looking for 
500. So I'll just copy this one, just so we can  
74:26 - save a little bit of time. And then I also want to 
set up the letter spacing. So the letter spacing,  
74:32 - and we're looking forward to CSS variable. There 
it is. With this in place, we're actually done  
74:37 - styling the small screen layout. Now of course, 
we just need to focus on multiple media queries.  
74:44 - Wonderful. Our small screen looks pretty good, 
apart from those borders, which of course will  
74:50 - remove a little bit later. So now let's focus 
on the multiple screen sizes. And of course,  
74:55 - we'll do that setting up the media queries. So 
let me go here with media screen And I believe  
75:01 - we'll have three of them. So right away, set 
them up. And then we'll just worry about the  
75:06 - code inside of them. So let's just go with 
576 pixels. And then we want to copy and  
75:12 - paste this one two times. And then as far 
as the values, one is going to be for 992.  
75:20 - Online, last one will be for 1200 pixels. So we 
set this one up. And inside of the first one,  
75:28 - we want to go with recipes list. So this is the 
actual list where we have the cards. Keep that in  
75:34 - mind, I'm not talking about the container, talking 
about the recipes list where we have the cards,  
75:39 - and I want to set it up as two column layout. So 
let's go over here with recipes list. And we want  
75:46 - to go with grid template columns. And we'll set 
it up as one fraction, one fraction. Now keep in  
75:53 - mind that if we scroll up, if we take a look at 
the recipe list, it is already a display grid.  
76:00 - Correct. So therefore, I can right away, set 
up that column. Well, I also like to set up  
76:07 - my images a little bit more, once they're side 
by side. So on a small screen, I mean, 15 remc,  
76:14 - is pretty good. But once actually the screen size 
gets a little bit bigger meaning starting with  
76:20 - 576. Once I have to come Well, actually, it makes 
a little bit more sense to go with a recipe.  
76:28 - And then IMG, at least in my opinion, of course 
you don't have to but in my opinion, I always  
76:33 - go with 10 RPMs. Basically, I said them smaller, 
maybe sometimes bigger than than REM. So hopefully  
76:40 - you get the gist. So now let me navigate here to 
the big screen just to showcase what's happening.  
76:45 - So I'll make this one on over here. So 
this is going to be our one column layout.  
76:49 - And then once we get to the 576 course, this 
is going to be the look. So now we have that  
76:57 - two column layout. Hopefully that is clear. Now 
we can focus on 992. Now at 992 will actually  
77:06 - change the layout for the entire container, where 
we have the tags, as well as this recipe list.  
77:14 - And we will do that, of course, we will look 
for our media query. that's step number one.  
77:19 - And we're looking for recipes and container. 
Now again, it is already in display grid.  
77:25 - Correct, starting with a small screen. So the 
only thing we really need to do is come up  
77:30 - with values for the columns. And in my case, I 
went with 200 pixels. So that's for the tags.  
77:36 - That's the width of my first column, and then one 
fraction, basically to take up the remaining space  
77:43 - for the recipe list. And as far as the recipes 
list, well, I have already a grid template column  
77:51 - set to one fraction, one fraction, so I don't 
need to worry about that. The only thing that  
77:56 - I want to set up here, and maybe I'll style the 
paragraph a little bit differently as well. But  
78:01 - as far as the tags container, I want to go with 
or zero. Remember, on a small screen, what was the  
78:08 - order? It was one. And what was the result? Well, 
the result was that tags are all doing the bottom  
78:14 - correct. So they're after the recipes list. Now 
of course, once we get to 992, I want this look,  
78:21 - I want actually both of them side by side, 
like this. So I need to place it back where  
78:26 - it belongs. And of course, I can do that with 
order of zero. So let's go with tags. And then  
78:34 - list let's set up or I'm sorry, not tagged with 
my bad. So tags container first, and we'll go with  
78:42 - or, and of course it's going to be zero. 
And then as far as the tags list, of course,  
78:48 - we have three column layout on a small screen. But 
it's got something we want over here, where's No,  
78:54 - we want one column layout, because now 
of course, they will be side by side.  
78:58 - Now how we can achieve that all we can go to tags 
list and remember it is already display grid,  
79:05 - it already has the column layouts, we simply need 
to change it, we need to go with grid template  
79:09 - columns and set it up as one fraction. And lastly, 
as far as the recipe, I actually want to go  
79:17 - with Paragraph Font size to be zero point 85. 
REM, so you can place it at the very end or  
79:25 - after the recipe doesn't really matter. We'll go 
with recipe paragraph. And let's just go with font  
79:31 - size. And like I said, we're going to be looking 
for 0.5 REM. Let's save it. And let's take a look.  
79:39 - And we can clearly see that this is our main 
container with a red border. And then of course  
79:45 - we have blueboard order recipes, meaning for the 
tags I'm sorry, and the green one for recipes.  
79:51 - And as you can see, once we have a smaller screen, 
then of course we have this layout. And once we're  
79:58 - good over here beautiful Now we have two column 
layout. And lastly, once we get to 1200 pixels,  
80:06 - the only thing I really want to do here is make 
the recipes list, a three column layout. So let  
80:13 - me swing back. And we'll keep on scrolling. And 
of course, at 1200 pixels, will set up our recipes  
80:20 - list to be a grid template columns. And of course, 
I'm looking for three column layout. So I'm  
80:27 - gonna go with one fraction, one fraction and one 
fraction. And yes, I'm fully aware. And of course,  
80:32 - we can write the repeat and all that. But in 
this case, I just thought that it's going to  
80:36 - be quicker if I go with one fraction. And then 
as far as the font size for the heading five, I  
80:42 - want to set it up to be one point 15. REM. So I'm 
looking for a recipe. And since I already have for  
80:49 - the paragraph, I might as well copy and paste. And 
essentially, we want to go with heading five here,  
80:55 - believe it was hitting five, and then we'll go 
with 1.1 point 15 RMS, let's save that one. And  
81:04 - I need to navigate back to the homepage here. Now 
let's take a look at our big screen layout. So  
81:09 - essentially, once our screen gets bigger, bigger, 
bigger, bigger van, of course, we arrived at the  
81:16 - three comwell. Again, this is going to be the look 
on a small screen, where we have recipes list.  
81:22 - First of all, and we have the tags van once we get 
to the 576 we have two column layout for recipes  
81:30 - list. Then once we get to 992, we have two column 
layout for the entire container. And we still have  
81:38 - these two columns over here for the recipes 
list. And then once we get to the big screen,  
81:43 - Wallah course. Now we have two column layout. Here 
we have three column layout. So now of course, the  
81:50 - only thing really left is to remove those borders. 
So we have recipes list, we have tags container,  
81:58 - of course, we have the recipes container. And 
with this in place, we have tackled the big beast,  
82:04 - congratulations. And of course, we can move on 
to our next step. Not bad, not bad. Essentially,  
82:10 - we're done with our own page. So now let's knock 
out the other pages as well. We'll start with the  
82:16 - easy ones first, like error and recipes, and 
eventually work on more complex ones as well.  
82:22 - And this video, I want to complete three pages, 
or a page or recipes page. template page. Let's  
82:29 - start with an error. I know I already said this 
before. But essentially the 404 error page is if  
82:36 - the server cannot find the resource in the Gatsby 
project is going to look something like this.  
82:42 - Or again, we go with a domain and then we say 
error. And of course that's going to spit back  
82:47 - the error page. And actually, if you deploy 
this project, really simple recipes, one,  
82:52 - it's going to work the same way. So even the HTML 
and CSS one on natla phi, if you're looking for  
82:58 - some kind of pressure, there's an existence, we 
have the 404 course we'll get back this result.  
83:05 - Now in our local development, that's not going to 
happen because the extension is not that smart. So  
83:12 - in order to see the page, of course, we'll have 
to do that manually. The way we're going to do  
83:16 - that in the project is following we were first 
on a big screen, let's just type 404. html, Okay,  
83:25 - looks about right. And then we want to do 
the same thing. So let me grab the URL,  
83:31 - and just copy and paste and set it up on a small 
screen as well. So let me select everything.  
83:37 - And then I'm looking for 404. So this is 
how it's gonna look like. Now when it comes  
83:42 - to actual code course we want to navigate to 
404. html course this is going to be our basic  
83:48 - structure for all the pages. And for the error 
page, we simply want to add one more class here,  
83:55 - since we'll add a little bit more styles. And 
let's say here are on hyphen page. And then as  
84:02 - far as the content will go here with section and 
then serve section. Let's go with heading one,  
84:09 - let's say error. And then lastly, let's go with 
heading three, and also a page not on font.  
84:16 - So resave it over here. And now of course 
we just want to go back to main CSS.  
84:22 - Again, we're looking for our comment, we want to 
make sure that we have for the next one. on here,  
84:29 - I'll just say error as far as the code. 
Essentially what we're looking for  
84:34 - is that class of error page error page. And we'll 
go with text align, text align, center, like so.  
84:44 - And of course, we also want to add a little bit 
of padding to the top amount will be equal to  
84:50 - five arms. And when it comes to a heading one, 
let's just go with error page on heading one  
84:57 - and let's go with font size and RPMs. And you 
know, I messed up a little bit more in the 404, we  
85:05 - actually want to go with 404, the numbers marked 
the text of her. And of course, we have our page.  
85:13 - And once that is done with me just navigate back. 
And in this case, we're looking for recipes page,  
85:19 - again, in the navbar. recipes page. And the same 
is going to be on a big screen where we want to go  
85:26 - to the recipes page. And what's really cool, we 
already have all the code for it. And you know,  
85:33 - get the code over here, take a look at the 
project. So this is our homepage, correct. We have  
85:39 - the hero as well as the recipes layout. Now, what 
do you think is going to be in recipes? Well, is  
85:45 - going to be pretty much the same page without the 
hero. And again, this is the case where of course,  
85:51 - normally, this is some kind of template, or this 
is a component where you just pass in the data.  
85:58 - So you don't have to repeat yourself. But 
like I have already said million times,  
86:02 - since we're working with just HTML and CSS. Yes, 
we will have to copy and paste. Now, of course,  
86:09 - let me go back to my project. And I'm looking for 
the index HTML. This is the reason why I added so  
86:17 - many comments over here, because we definitely 
don't want to mess this up. So we have main over  
86:22 - here, correct with a class of page, then we have 
the hero so we can actually collapse this one. And  
86:29 - what we're looking for is this entire container. 
Now there's going to be few more instances where  
86:35 - we'll just be looking for recipes list. This 
is not the case, in the recipes page, you want  
86:42 - to take the whole thing. So therefore I have 
these comments where recipes container, so copy  
86:48 - everything with the comment of recipes container, 
and then and of recipes container. That's what  
86:55 - you're looking for, not the main. Now that stays 
over here. But the recipes container. Yeah,  
87:01 - take the whole thing, copy. And now of course, I 
want to navigate to recipes, HTML, that's my page,  
87:08 - we keep on scrolling. And where we have the 
page, the main one, we simply want to dump  
87:15 - our recipes layout. So we just paste our code over 
here. Let me save recipes, HTML, as well as the  
87:22 - index one. And now in our project, if we take a 
look, Wallah, we have a recipes page down. So this  
87:30 - is going to be our home page. And this is going 
to be our recipes page. And lastly, In this video,  
87:36 - I want to work on tag template, which also is 
going to look very, very familiar. Because if we  
87:43 - take a look at complete project, either to Gatsby 
one, or just HTML and CSS, which you'll notice,  
87:50 - but if we navigate to a tag bridge, what do we 
have over here, we have some kind of hard coded  
87:56 - value, which of course, again, is not going to 
be the case in dynamic project. So this value  
88:00 - will change based on the tag. Now in this case, 
of course, that's not the case will always have  
88:06 - this beef. And then what do you see over here? 
It looks like a list. Correct? Now, where do  
88:11 - you think his list is coming from over here. 
So that's why we set up the CSS in such a way  
88:17 - where it doesn't really matter where we're placing 
that list, gonna have one column where I'll put on  
88:23 - a small screen, and two column layout on a bigger 
screen. And then once we get to the big screen,  
88:29 - it's gonna be a three column world. And in order 
to set that up, we simply go and look for the  
88:37 - tag template, because remember, index HTML, or in 
the recipes now as well, when we're talking about  
88:44 - those tags links, where do they navigate back 
template correct. So therefore, we'll look for  
88:51 - tag template. And then again, we have the main 
one, a class of page. Now, of course, we just  
88:57 - want to change it around a little bit, where 
we'll start by setting up a enclosing div. And  
89:03 - we're simply doing that because I want to place 
the heading for on top of rest of the content. And  
89:09 - we're going to go with beef. So again, we're hard 
coding some kind of value, in this case, beef. And  
89:15 - now what you want is grab the recipes list from 
the index HTML. And I'm not going to repeat this  
89:21 - whole spiel about why we're copying pasting, 
because I think I already have mentioned this  
89:26 - way too many times during the project. So we're 
looking for recipes list, not the container.  
89:33 - We're looking for recipes list. Take a look at 
the comment and look for the end one as well.  
89:40 - So we're looking for and have on here probably 
muster up, or no, sorry, I muster up right now  
89:46 - because I was looking for different comment. 
Again, we're looking for recipes was my bad.  
89:52 - I mixed it up with the recipes container and the 
recipes list. That's the endpoint. We copy this  
89:58 - one and by In the tag template, copy and paste, 
and congratulations, we have three pages out of  
90:06 - the way. So now of course, we have the home page, 
we have the recipes, we have 404. If we click on  
90:14 - one of the tags, whether in the recipes page, or 
in the home page, where are we going to navigate,  
90:19 - we're going to navigate to a tag template, where 
it will display the bag and list of recipes,  
90:26 - which again normally would point to the recipes 
that are associated with that tag. And of course,  
90:32 - you will be setting this up dynamically normally. 
But if we're just worried about HTML and CSS,  
90:38 - we have three pages out of the way. And 
of course, we can focus on next pages.  
90:44 - Nice. And next, I want to work on the about page, 
where effectively we'll have two column layout  
90:50 - for the info, as well as the picture. And then 
here at the bottom. Again, we're going to use  
90:57 - a list. So technically, these would be some 
featured recipes that you want to display. Again,  
91:03 - normally, this is going to be dynamic, you'll 
just pass in which recipes you want to showcase  
91:08 - point and Rockers, we'll just use our recipes 
list, same one, we used in tag template, this  
91:16 - one over here. Now in this case, or we only want 
to pass in three. So we're in the tag template,  
91:22 - we set up four parameters goes, we'll just go with 
three. And effectively, we will reuse that list  
91:28 - few more times throughout the project. The setup 
is going to be exactly the same where again,  
91:34 - looking for about HTML, I have my page. So I do 
have the structure. And here let's set up those  
91:42 - recipes first, and navigate here to the about page 
as well. So we can see right away. And once we set  
91:48 - up those featured recipes, so the recipe list, 
then we'll worry about the rest of the content.  
91:55 - Inside of the page, we want to go with section. 
And then let's add a bout page. So this is where  
92:01 - the info as well as the photo are going to be 
located. And then we want to go with another  
92:07 - section. And then let's just call this featured, 
recipes, recipes. And actually don't think that  
92:14 - there are any styles with it, but more just on the 
section with this class. And then inside of it,  
92:20 - we want to go with heading five. And we're 
looking for a featured title. And I'm sorry, this  
92:25 - is a class. So it's a featured title. The only 
reason why I'm adding here this class is because  
92:34 - I want to place the text in the center. And again, 
technically, we can use this feature recipes. But  
92:40 - if I remember correctly, the heading five 
was already in the car. So that's why I  
92:46 - just went here with this class. Again, long 
story short, basically, we'll set this one  
92:51 - in the center. And then as far as the text logist, 
right look at this awesome source. And right  
92:58 - below it. This is where we want to place those 
recipes. So let's go back to index HTML. Again,  
93:05 - we're looking forward to recipes list. Same deal, 
man. This goes Of course, eventually we'll remove  
93:11 - one of the cards placed in my setup. But if you 
want, of course, you can keep all four. So we  
93:17 - copy and paste the list. We're looking for 
what we were looking for about HTML correct.  
93:24 - Got a little bit last order. And then right after 
the heading five. So within featured recipes, we  
93:31 - want to copy and paste and like I said, Margot's, 
I'll remove one of them. So I'll remove the last  
93:38 - recipe. And once we save, of course, we right away 
have our nice layout, like I previously mentioned,  
93:45 - effectively for this one for 205, I just want 
to place it in the center. So let's quickly go  
93:51 - to CSS. And we're looking for feature title, I 
believe, featured. And we're looking for title.  
93:58 - And we're simply want to go text align center. 
Now of course, it's going to be in the center  
94:04 - without the recipes less part. Now of course, 
we just want to add that info, which is going  
94:09 - to be here in the About page. We also want to add 
a photo. So let's set that one up. And in here we  
94:18 - want to go with article. So this is where the info 
is going to be located. And then right below it,  
94:24 - we're going to go with image. And in this case, 
we're looking in the assets. More specifically,  
94:29 - we're looking for the about one and nine as 
far as the alternative. I'll just say pouring  
94:35 - salt. And we'll also add few more classes to 
image. Those are following we'll go with our IMG,  
94:44 - so the global one, as well as about IMG. Now when 
it comes to info, we're looking for Heading Two.  
94:52 - We'll just type some kind of text and you're 
not in this case just so we can speed this  
94:56 - one up. Look for this project already. Other 
one, basically just copy and paste the text,  
95:03 - there's really no point to return that from 
the scratch. And essentially, I got this text,  
95:08 - I believe from the hipster ipsum, which is 
my favorite place to get lorem ipsum text,  
95:14 - effectively the dummy text. And we want to go 
here with the first paragraph. So there will  
95:20 - be two paragraphs. And I'm just getting the text 
over here, if you want, you can simply type Lorem,  
95:26 - and then whatever amount of characters, so you can 
go here with Lorem. And then let's say 20, or 10,  
95:32 - or whatever. Now in my case, since I liked that 
text better, we're just going to copy and paste.  
95:36 - That's my first paragraph. And then of 
course, we're looking for a second one.  
95:41 - And at the very, very, very bottom, also have 
the button. So it's here button class will be  
95:48 - btn. And we want or you're not sure is going to 
be a link, my button shows me remove my apologies,  
95:56 - we're going to go with link, this is going to be 
to contact HTML, when we want to add a class of  
96:02 - btn. And let's add a contact. And since we have 
already global class for to beat him, that's why  
96:09 - we have to look. And now of course, we want to 
swing back to main CSS, and we just want to apply  
96:15 - few styles to about page, I'm just gonna keep this 
one on the bottom. Because I like to keep things  
96:22 - organized that way, but of course, you're gonna 
leave it at the top as well. We're gonna go with  
96:27 - about page, we're looking forward to heading two. 
So that's that main heading with dummy text. So  
96:34 - both page heading Q and hero, say text transform, 
set equal to none. And there's no transformation  
96:43 - because for all the headings, we have that base 
transformation, then as far as the font size, I'll  
96:49 - go with bold, so I'll make it a little bit bolder. 
And then in here, let's also set up about page.  
96:57 - Now, of course, I'm talking about that section. 
And first, I want to go with display grid,  
97:03 - display grid. And again, by default is going to be 
that one column layout. But that doesn't stop me  
97:08 - from setting up the gap. Correct. So again, I have 
two arms, and forearms. So this one, of course,  
97:16 - is going to be for my row. And then this one will 
be for my columns. And again, the morning we have  
97:23 - one column, so it doesn't really matter. And then 
we also want to set up right away some kind of  
97:29 - padding here. Let's go with padding bottom, three 
REM, so that's going to be added to this entire  
97:36 - thing. So now of course we have distance between 
section, the about page, our featured recipes.  
97:43 - And then we also want to target right away 
the image. As far as the about the image,  
97:49 - we have the class correct. So let's go with 
about half an IMG. And we're looking for border  
97:55 - radius. And we use our CSS variable for that. 
As far as the height, well, let's set it up as  
98:01 - 300 pixels. Now, of course, the height is a little 
bit smaller. And then we also want to of course,  
98:08 - go with some kind of media query because on a 
bigger screen, we'll have a two column world.  
98:13 - So let's set up a meteor screen. As far as the 
size, let's go with men with macros. Again,  
98:21 - I went with 992. That was just my preference. And 
we'll target the about page, setup grid template  
98:29 - columns, grid template columns as one fraction 
and one fraction. So we have two column layout.  
98:36 - And then when it comes to rows, I'm going to go 
with 400 pixels. Now keep something in mind where  
98:42 - we will have only one row. And essentially what 
I'm doing, I'm setting up the height for my row,  
98:48 - and then I'll use the height for the image 
and I'll set it equal to 100%. So effectively,  
98:54 - as a result, my image is going to be the height 
of my arrow. So let's try it out over here. We'll  
99:01 - say grid template rows, and we're looking for 
400 pixels. And then of course in here we'll  
99:08 - go with a line items, and we'll placing it in the 
center. And I'll comment this one out in a second  
99:14 - just so we can see why we're adding that one. And 
let's go with our about IMG and then here we'll  
99:20 - go with height. And like I said, we're gonna go 
with 100%. So now what happens on a small screen  
99:28 - while this look so once I make my screen size 
smaller is going to look something like this.  
99:35 - And once we get to 992 we have this two column 
layout, and then image is the height of my row.  
99:43 - And since text is smaller, now of course we're 
placing it in the center. Now if I'll comment  
99:48 - this one out, you'll notice that text is all the 
way at the top. So let me put it back in there.  
99:55 - And of course we have the about page completed 
as well. All right, as far as the next step,  
100:02 - we want to go to contact page. And of course, 
tile this sucker. Practically here, where I'm  
100:08 - saying feature of recipes are, we already know 
where to get them. The moment we have them already  
100:13 - in the about a man when it comes to form. I 
mean, most of it is already in a global CSS.  
100:20 - So we should be done with this in no time. 
Now, at the moment, of course, in the contact,  
100:24 - this is all I have a text with contact page. 
And of course, we'll start in the contact HTML.  
100:31 - That's what we're looking for. And like I said, 
since I want to simplify this, first, we'll go to  
100:37 - about HTML. And we're looking for those featured 
recipes. So take this section, the featured one,  
100:44 - and just copy and paste and place it in 
the contact page. So take all this code,  
100:51 - navigate back to contact HTML. And in here, we'll 
have two sections. One is going to be for dot  
100:57 - info, as well as the form. Now let me close the 
sidebar. So let's start with that section. Let's  
101:04 - set up a section with a class of contact, and 
then hyphen, container. And right after it, we'll  
101:12 - copy and paste our featured ones. So this is what 
you should see on a screen, the featured recipes.  
101:18 - And of course, we just need to navigate up where 
we have the actual container, the contract one,  
101:25 - as far as the HTML, I mean, there's 
not much, there's some headings,  
101:30 - some paragraphs, like I keep saying form 
as well. And we'll start with an article.  
101:36 - So the article is gonna have some kind of 
class. And we're gonna go with contact info.  
101:43 - And this goes on, as far as text. Again, I'm just 
gonna speed this up. And I'm just going to copy  
101:48 - and paste from the final one. So we're looking for 
heading three, copy and paste. And the same goes  
101:56 - for these three paragraphs. That's it, that's all 
we have to do, come up with paragraph and then  
102:01 - copy and paste. Same goes for the rest of the two. 
So another paragraph here, another set of text.  
102:10 - If you don't like my text, course, you can always 
go with Lorem. third paragraph, and learn again,  
102:17 - we copy and paste the text. And then right 
next to this article, we'll place another one.  
102:23 - And this is where we will place our form. And 
effectively, we're looking for form class, as  
102:29 - well as the contact form. So this is where we'll 
add a little bit more styling. And this is what  
102:34 - you should see on the screen. Now I will remove 
the action because of course, it's not going to be  
102:40 - dynamic, not going to be a working form. 
And then third, we're going to go with  
102:45 - form row. And then I want to add the label, as 
well as the input. So we'll go here with label,  
102:52 - as far as the poor attribute will go here 
with name, I want to add a class of form,  
102:58 - hyphen label, again, this is coming from global 
CSS, and then we'll just add your name, Ron,  
103:05 - we'll save it. And after that, I'm going 
to go with input, a type will be text,  
103:11 - we're just set up a name is equal to name. And 
then we want to go with ID as well as the class  
103:18 - of form input. So let's set it up over here, 
not say ID, and I'll set that one equal to nine.  
103:25 - So just make sure that both attributes, the 
ID and four have the same value. And we'll  
103:32 - also look for the class. And that will be form 
input. And once I have my first row, essentially,  
103:39 - what we want to do is just add a comment. And 
we'll say, single form row, also added over here,  
103:49 - the end of my div, and also end up single row. 
And now of course, we just want to copy and paste,  
103:55 - I believe two more times. I mean, this is 
going to be text area, so maybe you only want.  
104:02 - So let's take this one, copy and paste. And as 
far as the values, essentially everywhere where  
104:08 - we have the name, we want to change it around to 
email showed me select all the names over here.  
104:16 - I'll go for email, and the only one that I 
need change back, of course, is this one.  
104:21 - So say name is also equal to an email. So if I 
take a look, yep, there it is. Now, of course,  
104:27 - we still need to add some CSS, but at least 
the basic setup is working. And like I said,  
104:33 - we'll also add a text area. So let me keep on 
scrolling here. And after this row, we'll set up  
104:40 - another one. The class is exactly the same. So go 
here with form row. And then inside of it. Again,  
104:47 - another label. In this case we're looking for 
a message class will still be a form our label.  
104:56 - As far as the text, let's just write message and 
this is where we want to go With that text area,  
105:01 - so right after this label will go with text area. 
And as far as the attribute values, let's set up  
105:08 - both name and ID equal to a message. And then I'll 
remove the columns and rows, because of course,  
105:15 - we have already all the styling in a global CSS, 
so go with form, we're looking forward to class of  
105:23 - text area. And once we save, we only need to add 
a button. So right after this Dev, we'll go with  
105:30 - button. Now in this case, it's going to be type 
Submit. And now as far as the styling will go with  
105:35 - btn, btn iphon block. Now, of course, the button 
is going to be spanning all across our form.  
105:44 - And line as far as the text messages go with 
sub. And once we have all of this in place,  
105:52 - essentially, we just want to navigate to main CSS. 
Sure, let me open up the file for CSS and working  
105:59 - for main CSS, I have the about think I need to 
copy the comment as well copy and paste. And of  
106:07 - course, now I'm looking for the contact page. 
First the value contact page. And I'll close  
106:12 - the sidebar here. And what I want to do is set 
up that form to be 100%. Remember, by default,  
106:20 - we have some value already on the forum class. 
And that's why we added that contact form class.  
106:26 - And in here, let's just say width to be our 
percent. And as far as the margin, I'm going to go  
106:32 - with zero. Now the word of course, will use the 
container, the contract container to set them up  
106:38 - side by side. And in fact, we'll do that right 
now. where we want to go back through the main  
106:44 - CSS, we want to look for contact and learn hyphen 
container. And here we'll go with display grid.  
106:53 - Now again, on the small screen, by default, it's 
going to be a one column layout. But that doesn't  
106:58 - stop us from setting up the properties for the 
gap. So to REM reorients. Over here for the  
107:05 - column, a man I'll also add a padding to the 
bottom markers. And we're gonna go with three  
107:12 - RPMs. So that's gonna be the distance in between 
these guys. And once we have all of this in place,  
107:19 - Now, of course, we just want to worry about 
the media. And we'll go with Meteor screen.  
107:24 - As far as the min width, one, we'll 
just set it up as 992 min width 992  
107:33 - pixels. Of course, I'm here, let's just go with 
contact container. And I'm going to be looking for  
107:40 - grid template columns. And in this case, I'm going 
to go with one fraction. So that's for the text,  
107:46 - that's for the left column over here. And as far 
as the form, I'm actually going to hard code,  
107:53 - I'm going to say 450 pixels. And then since 
I want text in the center, again, I'm going  
108:01 - to go with that align items center. So let's go 
back over here on line items. And we'll set it  
108:08 - equal to center. And of course, once we have 
added the CSS, we're done with the contact form,  
108:14 - now we can focus on our next task. And 
once we have the contact form in place,  
108:19 - Now, of course, let's set up the tags page, the 
moment has only a heading one. And what we're  
108:25 - shooting for is this look where we have the tags. 
Of course, these are going to be dynamic in normal  
108:32 - project. But in our case, we'll just hard code. 
And once you click on a tag, when you navigate  
108:38 - that tag template page, and of course, this page 
we already have, that's why we have the recipes  
108:46 - in place. And as part of the setup Well, here, let 
me go back to the tags. And I'll do the same here.  
108:52 - And of course, I'm already in the page, 
so I'm good. We're looking for tags, HTML,  
108:59 - close the sidebar For now, we want to remove that 
heading one will still keep the page. What we're  
109:05 - looking for is the section. And I'm going to go 
with tags wrapper. So that's the class in here.  
109:12 - Let's add a comment. So single Montag, and I'm 
just because it's going to be under single tag  
109:19 - and optional tag. And then as far as the setup, 
it's going to be a link class will be a tag.  
109:26 - And again, we'll hard code these values. And I'm 
not going to go over why we're hard coding values,  
109:31 - because I believe I have said that already more 
than enough times during this project where  
109:36 - you want this link to navigate well, to the tag 
template. Remember, that represents some specific  
109:43 - tag and recipes that have that tag. And as far 
as the proper path. Well, it is tagged template  
109:50 - HTML. Correct. Like I said, we'll add a class over 
here, and I'll say tag, and as far as the values,  
109:56 - we'll just go with heading five We'll set it equal 
to beef. And as far as the mana recipes, well,  
110:04 - it's going to be a paragraph with one recipe. And 
now what we want to do is just take this one tag,  
110:13 - copy and paste, let me take a look how many are 
created, think I went with five, suddenly see,  
110:20 - the moment I have 1234 showed me copy that one 
more time. And now we're just want to change  
110:26 - these routers, we're gonna, this is gonna 
have two recipes. And we have dinner, food,  
110:32 - and all that. So let me scroll up, let me make 
sure that I don't do anything with the first  
110:37 - one. Okay, that one stays the same. For the second 
one, we're looking for breakfast, it's gonna have  
110:44 - two recipes. Then we have one for carrots. And 
that is going to have, I believe three recipes.  
110:52 - Then we have dinner and food. We have one recipe 
for dinner with foresters, online food with one  
110:57 - wants, the HTML is in place. Now, of course, let's 
just navigate to main CSS. And we want to set up  
111:08 - another new comment in here. So go here with tags, 
of course, this one a little bit more serious as  
111:17 - of the contact page, because, of course, we're the 
contact page, the biggest one was the form. But  
111:22 - we already had bunch of styles in a global CSS. So 
let's go here with tags page. And then I'm going  
111:28 - to worry about my wrapper, again, is going to be a 
one column layout, starting with the small screen.  
111:35 - And as the screen size increases, then we'll 
also change the amount of columns. But that  
111:41 - doesn't stop us from tags wrapper. So that's the 
entire wrapper. When we go with display grid,  
111:48 - I'm going to go with qR M. So that's going to 
be for the columns and rows, and adding the same  
111:54 - deal. We'll go with padding bottom three are 
yums. And once we have all our lists in place,  
112:01 - now of course, we just want to worry about that 
one single tag. And we will set up the CSS is  
112:08 - going to be following where we'll target the tag, 
we're looking for background. And in this case,  
112:13 - I'm going to go with gray, and 500. That's going 
to be the default value, then I also want to add  
112:20 - right away a border radius. And of course, we'll 
use our CSS variable for that. After that we want  
112:26 - to go text align center. So make sure that 
the text is in the center color, white thing  
112:33 - that should look good. And as far as transition, 
while we're just use our CSS variable, because  
112:40 - when we'll hover, I'll change this color. And 
then we're pretty much done, I just want to set  
112:45 - up the padding top bottom, zero point 75, REM, and 
left and right zero. As I'm hovering over the tag,  
112:55 - like I said, I want to change it to 
a primary color, religious grab the  
112:59 - background one person over here, and instead 
of gray 500, we'll go with primary 571.  
113:09 - Notice as we're hovering Now, of course, we're 
changing the color, and we just want to add some  
113:15 - margins, zero to the bottom of heading five, 
paragraph because if you remember, the default,  
113:22 - we have them there. So now of course we'll remove 
those margins. And I want to do for both for tag  
113:30 - paragraph as well as the heading. So therefore 
we'll go with tag paragraph tag heading. And  
113:36 - then like I said, we're gonna go with margin 
bottom zero, so both of them have no margin.  
113:41 - They're also I want to increase the font weight 
for the heading. So let's set up the hearing here.  
113:48 - We're going to go with font weight. And let's just 
set it up as 600. Let's save as you can see, now  
113:56 - of course, the font weight is a little bit bolder. 
And lastly, we'll have to Commonwealth starting  
114:02 - with 576. And a three column layout. Once we get 
to nine or 92. Since I want to save a little bit  
114:11 - of time on a boilerplate, we'll just copy and 
paste, set it up over here 576 we're targeting  
114:20 - a tags wrapper, of course. So the classes, tags 
and wrapper. Since we already have display grid,  
114:28 - we're just going to go with grid template columns. 
one fraction, one fraction. Of course, the only  
114:34 - thing that's left to do is to take this copy and 
paste 992 and then we'll have three Commonwealth  
114:44 - shows because some people probably are annoyed and 
we're going to go repeat. We're just say three,  
114:49 - one production. So of course that is the 
alternative syntax that we can use. Now let  
114:55 - me navigate to the big screen for tags. route 
is going to be my layout Once I click on a tag,  
115:02 - navigate to a tag template page, and with this 
in place, we're really need to worry about that  
115:08 - single recipe page, this one over here. And don't 
freak out about this error page. Essentially,  
115:15 - when I was setting up the structure for all 
the pages, I just forgot to change it to a  
115:20 - single recipe. If you take a look at the title, of 
course, it says single recipe. And as far as the  
115:26 - single recipe page, it's gonna look something like 
this, we're back in home. And we just click on one  
115:32 - of the recipes. Again, we're hard coding these 
values, there's going to be four banana package.  
115:39 - Stop, we have some kind of info. And 
then we have instructions, ingredients,  
115:43 - and tools. And in order to make it easier, again, 
we'll separate these two, were in the first video,  
115:51 - or worry about all the info section. And then 
we'll deal with instructions ingredients.  
115:56 - And we'll start by navigating to single recipe of 
course, in here, first, I want to remove that one,  
116:05 - we're not gonna use that anymore, the 
layout is going to be following or again,  
116:09 - we have the page. So this is where we'll place 
all of our content. And instead of the recipe page  
116:15 - are going to be two sections. One is going to 
be recipe hero section with a class of recipe  
116:23 - and hyphen hero. And then the second one will 
be the recipe content. So that's where the  
116:28 - instructions tools and all that is going to go in. 
So we're going to go here with recipe content. And  
116:34 - this is the one that we'll work on in the next 
video. And this video will focus on this one,  
116:40 - I'll start by placing some kind of image 
like I said, we are hard coding this.  
116:44 - So we're simply needs to look for the assets. And 
then more specifically image we want and Marcos,  
116:50 - since I'm going with banana pancakes, 
I'm going to go with recipe number five,  
116:54 - I do want to add some classes here. So we'll 
start with our image class. And there's also  
116:59 - going to be a recipe hyphen, hero, and 
hyphen IMG. As far as the alternative,  
117:05 - let's just say bank x, once we save, we should 
see the image, which is always a good sign right  
117:12 - next to the image, we'll have that second 
layout. And this is going to be the article,  
117:18 - sort of the articles start with heading two. And 
we're just write the names of banana pancakes.  
117:26 - And after that, we want to set up some 
kind of dummy text. And in this case,  
117:30 - I'm going to go with paragraph and of course, 
like I did before, I'm just gonna grab my  
117:36 - hipster text, copy and paste my text. Awesome. 
And we'll have a recipe icons. So of course,  
117:45 - we're talking about this column over here. And 
the same goes for tags. And I guess more properly,  
117:52 - this is a row with a three column layout. Well, of 
course, we have the icons. And then here we have  
117:58 - another row where we display the tags. So let's 
keep scrolling. As far as the recipe icons, well,  
118:06 - we want to go with they've sort of 
they've set up some articles. Again,  
118:11 - we're not placing in the recipe content. 
So let's just add here a comment recipe  
118:17 - content. So we're clear where we're setting 
this up. So we want to look for recipe hero.  
118:23 - And then right off to the paragraph, we'll go 
with Dev, and we'll just say recipe, icons,  
118:30 - we'll copy and paste. And of course, the moment 
I'm just setting up the comment, but eventually  
118:35 - the dev is going to be there. And the second one 
will be recipe tags. And this is very useful. Once  
118:42 - you start troubleshooting. Trust me, adding these 
comments seems like a silly idea. But once in a  
118:48 - while, it really helps you out. And then we'll 
look for them. And like I said, we'll be looking  
118:53 - for a recipe icons inside of it, we're going to go 
with one article. And that is going to be a single  
119:00 - recipe icon. As far as the setup, well, we just 
need to look for the icon, and therefore I'll go  
119:07 - for element. The classes are following FA s and 
FA Clark, a man would just add some kind of dummy  
119:15 - text that's going to be placed in the heading five 
or say prep time. And also we'll have a paragraph  
119:22 - with some kind of hard coded value. In this case, 
that's going to be 30 minutes. And now of course,  
119:28 - I just want to take this article, copy 
and paste and change some values around  
119:34 - where the second one will be f A are not 
FA s FA are not going to be a prep time.  
119:42 - Gonna be a cook time. Here, I'm just gonna go 
with 15 minutes. And then lastly, we have the user  
119:50 - friends. So that's the name of the icon. We're 
looking for FA s fa. And let's remove this piece  
119:57 - and let's say user Friends, this is just going to 
be amount of servings, servings. And we're looking  
120:06 - for some kind of value again. So in this case, 
I'm going to go with six servings. And lastly,  
120:12 - we want to set up those tags. So again, make sure 
that you don't place this in the recipe icons,  
120:19 - make sure that you place here in the recipe tags. 
So there will the class of recipe tags. And as far  
120:27 - as the content here, we'll go with tags. So that's 
text. And this is going to be a link. Now again,  
120:35 - we're navigating to a tag template page, therefore 
in my href, doctype, tag, template, and HTML, and  
120:44 - we just want to set up some dummy values. So beef, 
save it, now you want to take the link. So don't  
120:51 - think tags tag just don't link, I think I'm going 
to copy and paste this, I don't know two more  
120:57 - times. So three total. Let me close the sidebar, 
we just want to change these powers around.  
121:04 - second one will be breakfast. Third one will 
be pancakes. And the fourth one will be food.  
121:11 - Once we have the HTML for to hear on voice, Now, 
of course, let's just navigate to main CSS, we're  
121:19 - looking for the last thing pretty much all the 
way in the bottom, we'll have our recipe template.  
121:26 - So let's take this comment, copy and paste. And 
we'll just say, a recipe. template or single  
121:34 - recipe, you're not actually I'm gonna go with 
single recipe, single recipe page. And we want  
121:41 - to start with that recipe hero. So recipe hero, 
by default is going to be a one column layout.  
121:47 - And we'll right away, set it up as display grid 
should be already familiar with that. All right  
121:53 - away also set up the gap to be through your items. 
Once I have this in place, now I want to focus on  
122:00 - that image. And remember the class was a recipe 
hero, IMG, recipe Hero, Hero IMG. Basically I want  
122:11 - to go with height to be 300 pixels. So now it's 
a little bit bigger. As far as the border radius,  
122:18 - well, we have the property for that we have border 
radius property, when it comes to the paragraph,  
122:25 - this one over here, I'm just gonna make it 
a little bit lighter as far as gray color.  
122:30 - So therefore, I'll go with recipe info. And then 
I'm looking for paragraph. And of course, we want  
122:36 - to go with color. And I'm looking for gray. And 
I'm going to go with 600. So now it's a little bit  
122:42 - later, then we can start focusing on those icons. 
So that's the next row. As far as the setup there,  
122:49 - we'll go with a recipe. I can't, man, I'm looking 
for display grid, sure, I want to set up as a grid  
122:57 - layout. And right from the get go, it's going to 
be a three column while so go over here with grid  
123:03 - template columns. And in this case, I'm going to 
go to repeat. And as far as the value, I'll repeat  
123:08 - three times, and one fraction. So right from the 
get go, we have a three column layout. And again,  
123:14 - I've massively zoomed in. So of course, 
normally it's going to look something like this.  
123:19 - And then once we have all of this in place. Now 
let's add a little bit of gap. And in my case,  
123:24 - I'm going to go to one REM and we do want to 
add a margin top bottom, and therefore I'm going  
123:30 - to go with two REM and zero, so nothing on left 
and right. And when it comes to the text align,  
123:37 - I want to place it in the center. So let's set up 
here text align center. When we want to focus on  
123:44 - the icon, we can access that by recipe icons. So 
recipe hyphen, icons, and I'm looking for Ireland.  
123:53 - And here I'm going to go with font 
size 1.5 RPMs. And as far as the color,  
123:59 - let's just go with primary color. And we're going 
to be looking for our primary one. And I believe  
124:05 - I'm going to go with 500. Why don't we want to 
target the heading five as well as the paragraph.  
124:11 - And in this case, I think it's going 
to be faster if I just copy and paste.  
124:15 - So we're looking forward to heading five. And 
we're also looking for the paragraph, or we  
124:20 - just want to set up the margin bottom to be equal 
to zero. And then font size to be zero point 85.  
124:29 - REM, let's say well one. And lastly, I want to 
target this recipe icons paragraph and just add  
124:36 - a different color. And in this case, I'm going 
to go for gray. And again, I'm looking forward  
124:42 - at 600 value. So let's go here. And let's say 
600. So that's going to be the color for that  
124:49 - paragraph. Man, we just really need to worry about 
those tags, as well as the two column layout once  
124:55 - we get to the big screen. And in order to style 
the tags. We'll start With the actual container,  
125:01 - and we'll set it up as display flex. So right from 
the get go, we're going to be display flex, a man  
125:08 - will align them in the center vertically. So align 
items center around, we'll make sure that it wraps  
125:15 - if the screen size is not big enough, so flex 
wrap equal to rub a man as far as the font size,  
125:22 - I'm going to go with 0.7. This is the interesting 
part, where I'm going to be looking for em values.  
125:29 - So basically, depending on my container, I also 
want to add the font weight. And in this case,  
125:36 - it's going to be equal to 600. So the font weight, 
of course, is going to be a little bit bigger.  
125:42 - And then let's target those links. So of 
course, I'm not talking about that text,  
125:47 - talking about the link. So recipe tags, and we're 
looking for a element and background will be equal  
125:55 - to the primary 500. So primary hyphen, hyphen, 
primary 500. And as far as the border radius,  
126:03 - or not border bottom, sorry, border radius, that's 
going to be equal to a border radius CSS variable,  
126:10 - then we want to set up some kind of color, that's 
going to be equal to white. And man as far as the  
126:16 - padding top is actually going to be quite 
small. So 0.05 REM, as far as left and right,  
126:25 - we're going to go with 0.5 REM. And then 
we also want to add a little bit of margin,  
126:30 - we're not going to go with top bottom, so that's 
why it's going to be zero, but left and right  
126:35 - is going to be zero point 25. REM, then we want 
to go with text transform. And we'll capitalize  
126:43 - text transform on couplers. Lastly, like I said, 
we want to worry about that to Commonwealth once  
126:50 - we get to the big screen. Since I'm lazy, typing 
the media queries, let me just select this code,  
126:58 - copy and paste. And we just need to change some 
of ours around where the men will still be 992.  
127:06 - So that's the same point in here, we want to go to 
a recipe hyphen hero. Once we get the big screen,  
127:13 - I just want to change it to two column layout. 
As far as the image is going to be for fractions.  
127:19 - When it comes to the text, as well as the icons 
and all that it's going to be five fractions.  
127:25 - And again, since I want both of them to be in 
center, we're just going to go with align items  
127:31 - in the center since the height for one 
of them probably is going to be bigger.  
127:36 - If we go to the next one. Notice now in this 
case, the image is the one that it's smaller  
127:41 - on a big screen, therefore, it's sitting 
right in the center. So that's the look  
127:46 - that we have for hero. Beautiful Congrats, 
we have finally arrived at the last step.  
127:52 - And essentially in here, we want to set up the 
instructions, ingredients, tools. But before we  
127:58 - do that, there's actually a tiny typo here are 
noticed the recipe info, it's not a recipe info  
128:05 - should be recipe hero. Now, of course, my text is 
gray. Essentially, I'm looking here for 600. Now,  
128:14 - everything is just like in the final project, 
I will start in a single recipe. And you're not  
128:21 - in this case, I'll collapse the hero. Sure, sir, 
not in a way. We're looking for recipe content.  
128:28 - That's the one we want to set up. And here we 
have two Commonwealth wherefor inside of this  
128:34 - section First, I want to set up that article. 
And then there's going to be another article.  
128:39 - And since I was lazy, as far as the class names, 
I just set it up as second column. That's it. So  
128:47 - I'm here in the second column. This is where we'll 
place the ingredients and tools. But first, we'll  
128:53 - worry about the instructions. Some instructions, 
of course, are going to go in our first column.  
128:59 - And I want to start with heading four. And we'll 
just say instructions, when we'll set up a single  
129:04 - instruction comment. And after that, let's go with 
deal with the same class. So single instruction.  
129:12 - Now inside of the div. If you take a look at the 
complete project, you'll notice this step on the  
129:19 - horizontal line. So that's going to be in our 
header. And then we'll have some kind of text.  
129:25 - So let me start by getting this text here, 
just because I want to speed this up. So first,  
129:30 - I'm going to set up the paragraph. But above 
the paragraph, there's going to be a header.  
129:35 - And inside of it, we'll have another 
paragraph. And I'm going to go with  
129:39 - step one. And then right next to it, 
we want to place a empty div. And yes,  
129:45 - there's there needs to be here. Now there's a 
million different ways how we can set it up. But  
129:50 - in this case, I just went with extra HTML element. 
Once I have this single instruction, I just want  
129:57 - to copy and paste and let me take a look at this. 
If I have three, so let me just copy and paste  
130:03 - One, two, when we want to change the step, this 
is going to be two, this is going to be three,  
130:10 - just to stay consistent. Also take this text 
and add in step number two. And same thing  
130:19 - for step number three, of course, you can keep 
all of them the same, it doesn't really matter  
130:24 - which service. Okay, so I have step 123. 
And then inside of the second column,  
130:31 - this is where we want to set up the ingredients. 
And we also want to go with those. Now both of  
130:38 - them are going to be in separate Dev. So let's go 
with dev Saturday, we're going to go with heading  
130:43 - for an ingredient. Hopefully, I can spell it 
correctly, because that's usually an issue.  
130:49 - And we're just looking for paragraph, 
a class of single ingredient.  
130:57 - And then as far as the value again, yes, I know 
that it's probably annoying to some people. But  
131:02 - we'll just copy and paste. Since I don't see the 
point of setting up everything from the scratch.  
131:08 - What you want to do is just take this paragraph, 
so not the heading for just a paragraph from the  
131:13 - same class, you probably want to copy and paste 
at least in my case, I'm going to copy and paste  
131:18 - this two times. And we just want to change these 
vowels around. So we want to select this one,  
131:26 - we want to do the same thing for the third one 
as well. And then the same goes for the tools.  
131:33 - But of course, the difference is the class name, 
as well as the text. So we can copy and paste  
131:40 - or we can set up everything from scratch. 
In this case, I think I'm going to go with  
131:45 - setting up everything from scratch. So Dev, Van 
heading for tools. And let's go with paragraph.  
131:53 - Let's add a class here. So class, I'm more looking 
for a single tool. And as far as the value again,  
132:01 - Mark, just take these ones, copy and paste the 
first tool, I'm just going to copy and paste  
132:07 - and essentially get those values once we 
have the HTML. Now let's navigate to main  
132:12 - CSS. And let's continue over here. First, we'll 
worry about the recipe content. Now, of course,  
132:18 - I'm talking about the container where both the 
instructions, ingredients and tools are sitting,  
132:26 - because we'll have to Commonwealth. So let's 
go here with recipe, recipe hyphen content.  
132:32 - And we're going to be looking for a padding, top 
bottom, three, REM and then left and right zero  
132:39 - whenever we want to go with display grid. So 
that's, of course, our small screen layout.  
132:44 - And we'll set it up as gap to our games for the 
rows and firearms for the columns. But of course,  
132:52 - we only have the rows on a small screen. And then 
let's go with a media query. And if you want, you  
132:58 - can add it here as well just make sure that you 
move this media query below the recipe counted.  
133:04 - Otherwise, there's going to be a mess up, you 
know, in my case, just stay consistent. I'm just  
133:09 - going to copy it and paste. And we're looking for 
recipe content, I want to go with grid template  
133:14 - columns. And as far as the values will go with 
two fractions, so that's for the first column.  
133:20 - That's for instructions, and then one fraction for 
the other value. Now if we go to the big screen,  
133:27 - check it out, we have the instructions, as well 
as ingredients and tools in a second column. And  
133:32 - then slowly but surely, let's start working 
on those instructions. So we're looking for  
133:38 - single instruction. And first, I want to go 
with header. And this is going to be a display  
133:47 - grid. So now of course I'm dealing with this 
step, the horizontal line that we cannot see,  
133:53 - as far as the setup is going to be grid template 
columns. We're looking for auto, one fraction,  
133:59 - show the step will have its height, or I'm 
sorry, its width, and the horizontal line  
134:05 - is going to take up the rest. I also want to 
add a little bit of gap here. I'm going to go  
134:10 - 1.5 RPMs. And what's that one that horizontal 
line in the center? We're going to go with a  
134:15 - line items on center. Sir, it the reason why 
we don't see anything is because we haven't  
134:20 - styled that horizontal line. So why don't we do 
that? First, let's go with single instruction  
134:26 - when we're looking for the header, and then 
more specifically a div. And here, let's go  
134:32 - with height, two pixels. And background will be 
a gray one. And I think I'm going to go with that  
134:38 - 300 we have our single recipe. That's good. And we 
also have that horizontal line. Now there's still  
134:47 - some things we need to add. Don't worry about it. 
As long as you can see this horizontal line. That  
134:51 - means that we are moving in the right direction. 
And I'm going to hop back to the header and more  
134:56 - specifically, the paragraph. So we're living 
A single instruction van will import a header.  
135:04 - And instead of the day, we're looking for the 
paragraph. And in this case, I want to go with  
135:09 - text transform, and set it up as uppercase. Now, 
of course, we're dealing with that step one, two,  
135:16 - and three, then let's go with font weight. 
And we'll set it up as 600. Gray. And let's  
135:24 - add right away a margin bottom to be zero, margin 
bottom, zero, and I also want to change the color.  
135:31 - And I'll set it up as primary. And once we save 
everything works, lastly, when it comes to the  
135:41 - instruction, so this one over here, I want to set 
up a different, Great North target that since I  
135:49 - don't want to select this paragraph over here, 
I'm just gonna say, single, single instruction,  
135:56 - one error, and I'm just targeting the paragraph. 
And you're not actually need to remove this error,  
136:02 - my bad. So basically, I'm looking for the 
entire paragraph, therefore algos single  
136:09 - instruction. And only the direct child of 
that instruction, which is the paragraph  
136:14 - will have that color and gray. So go here with 
color. And for gray. I think I'm going to go with  
136:22 - seminar. Now, of course, this one is a little bit 
lighter. If you don't believe me, can actually  
136:27 - send this up as 300. And you will clearly 
see that I'm targeting the correct paragraph  
136:33 - when we want to style the second column. So 
let's keep moving, we'll say second column.  
136:41 - And in this case, there's not much to it, we'll 
say display grid, we're looking for grid in this  
136:47 - case. Now I do want to add a program, that's 
going to be equal to two RPMs. So that's the  
136:53 - distance in between. and knowledge just started 
the single ingredient, as well as single tool.  
137:00 - Now when it comes to single ingredient may 
again make sure that I spell this correctly.  
137:06 - I'm looking for a border bottom border bottom. 
Now it's going to be two pixels solid. And we're  
137:13 - looking for two gray one. So let's set up here 
var and then we're looking for gray, and then  
137:19 - 300. That's going to be the border. I also want 
to add a little bit of padding in the bottom,  
137:24 - padding bottom zero point 75 RPMs and nine as far 
as the color, I'm going to go with that gray 700.  
137:33 - And, same goes for single tool, single tool in 
here. We'll go with the same border, show copy  
137:41 - and paste. Same goes for padding. So pretty much 
the same stuff. Just the colors are going to be  
137:47 - different, where I'm going to go the color for 
my primary 500 and then as far as text, I just  
137:54 - want to capitalize, so text transform, set it up 
as capitalized. And once all of this is in place,  
138:02 - we're done with the project. Congratulations. 
And I hope to see you in the next one.

Cleaned transcript:

This course will help you improve your skills with HTML and CSS. Popular instructor John Smilga will teach you how to create a multi page recipe website using just HTML and CSS. Hey, what's up, he is john from coding addict, and welcome to another HTML and CSS project. And this video, we'll build a multi page food recipe site. If you want to see the entire project in action, just navigate to the URL HTML, CSS simply recipes dotnet for that app, again, the URL is HTML, CSS simply recipes dotnet will find that up. And effectively, we've got a recipe site with a bunch of pages. So we've got a home page, and about page, the tags page. And then once we click on a tag, we'll navigate to a tag template page. We also have got recipes page, as well as the contact page. And also if we click on a similar recipe, we'll have a single recipe page. Before we start setting up the project, or image just mentioned that since it's a HTML CSS project, there's going to be very minimal functionality. So I'm copying and pasting, since in plenish, demo, there are no templates or components. So for example, if you want to display navbar, and all pages, yes, you will have to copy and paste, since there's no way around it. In order to follow along with the project, you'll need a star and probably the fastest way to get it is by navigating to john smith without calm again, the URL is john smith, calm, and then look for the project page and filter by YouTube. So check for you to project. And in here, if you click on this button, of course, you'll navigate to the project, the one that I just showed you, but you're looking for the stars. So just click on the star or the source code, both of them lead to the same repo. And once we get here, just look for download zip option. And once you download the zip, of course, you want to crack it open here. And then I'll just drag and drop and place it on desktop, I'll use my favorite text editor, Visual Studio code. And I always prefer working side by side with a browser window. So open up the browser. I'll set them side by side. And then we'll go over what you can find in the project. And essentially, we've got two folders, we've got a final one, star one. And of course in the final is where you'll find the entire source code, just in case you ever need a reference. And the star is world we doing all of our work in the store, you'll find the general structure for the project. So I already prepared some stuff for you. Like we have assets. So this is where you'll find all the images, some CSS files that I'm going to talk about a little bit later, some empty HTML pages. So these are all the pages that eventually will create, as well as one lonely JavaScript file. And if you take a look at the index HTML, you'll find here the general setup, where essentially we've got some link tags. So one is going to be for favicon. Then the next one will be for normalized CSS. We also have one for Font Awesome icons, and one for main CSS. And if you take a look at the main CSS, you'll find some global styles that are used in all of my project. If you're confused about some of this stuff, for example, why are using normalize? And what is the benefit of global styles, please watch my default star video where I cover all of that in great detail. And you can find the video link in the description. Lastly, we're working on HTML CSS project, I prefer extension called preview on a web, which spins up the local web server. And as a result, once I save the file, I can see the changes instantly. So let me show you. So these are my extensions. The one that I prefer using is this one, we review on a web server. And of course, you just need to install it. And if you want to see in a browser, you can either right click it, and I'll show you that in a second. Or you can use this shortcut. So once you install the extension, just navigate to index HTML in the star. So of course, this is all do the work. Now if you want to check out the final, of course, navigate there. And then like I said, we can right click over here, and then choose this option. Or you can just go for the shortcut, and I believe it was Ctrl Shift L and once you split it up, you should see a bridge in the browser. And like I said, the reason why I prefer using this extension is because every time you make some kind of changes, you'll right away See that in the browser. So if I go here with Hello people. And once I save the file, check it out. Now, of course, I have the element displayed in the browser. And then lastly, once in a while, I want to showcase more, we've got on a big screen as well. So therefore, I'll navigate here. And I'll just copy and paste this URL. So essentially, I have two browsers, one is going to be the smart one, where it will see the result right away. And once in a while, I'll hop back to the big browser, just to showcase how something looks on a big screen as well. All right, and we're gonna kick things off with a navbar, which has two layouts, we have a small screen layout and a big screen layout. And on the small screen, we can also toggle the length. So let me make this smaller nurse is going to be a small screen layout where of course, we can toggle. Now, I also probably forgot to tell you that when I'm recording, I actually zoom in. So that's why everything looks so big. Technically, if I go back to 100%. Now, of course, you'll see that everything is smaller. So don't be surprised if at some point, your application looks a little bit different than mine. Let me make this big. I'm gonna navigate back to the index HTML. Again, I'm using my web server located in the star in the index HTML. And of course, as always, we just need to start by adding the HTML, we're going to do that in the following way, we're shall remove all the code all the dummy code. And I'll close the sidebar just so we have more real estate. So now I have an app. And of now, that's just my preference. And let's go with nav element also right away, add a class of navbar. And inside of the nav bar, I want to grow with knives on third live. And then sort of this day, we're gonna have two more. One is going to be for novel links, and one is going to be for neither. So first, let's set up the header. And again, I'm going to use some comments here. So let's say header. So one year, we'll place a logo with a toggle button, and then also one for now, of course, this is where all the links are going to be. Now, as far as nav center, why I prefer sticking in a number, because now we're on a big screen, I can always make sure that the nav content is spanning only certain with and of course, I'll show you once we start styling the big screen, because notice navbar actually is going to be spanning all across, then as far as the content, the nerve center, one that I will always be certain with. That's why I have that nav center inside of Napa. Now when it comes to header, we want to place two things over here, we have a link back to the homepage. So basically, I'm wrapping my image in the link. So we can always Navigate back home. Just to show Grace, how is not going to work. Like if I go to about page. That's the look. But if I want to navigate back, either click on home, or I can simply click on a logo, and I'll be back home. And then the second thing is the toggle button, which of course is going to have that Font Awesome icon. So let's start with a link for the href. We're going to go with index HTML. And of course, this is going to make sense once we add this navbar to different pages. Because of course, we are already located in the index HTML, when we'll add a class of nav logo. And then inside of this link, let's go with IMG. And then all the images are going to be in the assets. And then more specifically, we have recipes one show these ones we'll use a little bit later than 40. About for the main one, as well as logo, well, they're just going to be located right in the assets folder. So let's set up the path. We're going to go with forward slash report assets. And as far as logo one, we're just looking for logo, SVG. And then let's add a alternative text on our site here, simply recipes, server one, we should see the logo on screen. And of course we do. And after that, let's set up that button. And this button is going to have two classes, it's gonna have a class of btn. So this is coming from the global styles as well as the NAB btn because we'll do a little bit more styling. And also, you know, let's add a type. Let's say that is going to be equal to the button ran inside of the button. Like I said, we're going to go with Font Awesome icon. So we're looking for I element. And of course, I can access these classes, because I have the link to the font. Awesome. Notice over here, so that's the CDN link for Font Awesome. And then as far as the classes we're looking for FA s and then FA and align, justify. So once I have my element, of course, I should see my icon. Since I do good move on to the next thing. So once we set up the header We're here, when we want to add a comment of lunch. And as the name already suggests, in the nav links, we'll have a bunch of link elements. But one of them the last one, contract one is going to be wrapped in a div, because it will have a little bit different styling, not just on a big screen, as different styling, and of course, also on a small screen. Because of that, of course, we'll wrap it in a div. So let's create four links, we need to make sure that the values for the href actually match our pages. Otherwise, it's not gonna make sense. And I'll start with index HTML. And as far as the text, I'm going to go with home. But we also want to add a class of nav link amount, I'm going to have one for about one for tags, and one for recipes. And then make sure the editor value actually matches the pages that we have over here. So let me toggle the sidebar. Man, I'll copy and paste four times, and learn as far as the values and we're gonna go with about HTML, when I'm looking for tags, HTML. And the last one will be recipes, HTML, recipes, HTML, all of them have a class of modeling, so that stays the same. And now of course, we just want to change these routers around as far as the text ones. So let me select them. When I look for home, I'll remove all of them. And we'll go with about when we're looking for tags. And of course, the last one little beer recipes. Like already previously mentioned, when it comes to contact us, it's going to be a link Yes, it's going to navigate to the contact page. But we'll wrap it in a div with two classes with nav one class as well as the contact one class. So let's say your nav link, another close contact link. So contact hyphen link. inside of this div, let's go with another href element. And I'll say contact HTML. And then we'll just add a class of button. And of course, as far as the text will go with contact, and that should do it for the HTML. As far as the logo I created in figma, which is arguably the most popular web design software out there. It's very, very easy to get started. And you can easily find bunch of great tutorials on how to get up and running with pigma on YouTube, as well as Udemy. And once the bones are in place, of course, now we can just start styling the number mesh. And once we have the HTML in place. Now of course, let's start styling. First, we'll worry about the small screen layout. So first, I want to set this one up. Don't worry about toggle effect. And only then I'll set up the big screen where we're going to do that by navigating to main CSS, again, it is located in the CSS folder, and more specifically, main CSS. And then we have the navbar comment. So these are all the global styles and then right off the navbar common will start styling. And let's just start with nav center. And eventually there's also going to be some styles for number. But for time being though probably not going to make sense. So I'll just add selector for the entire navbar. First we'll start with our center, and then you'll see what styles we want to add to nav bar as well. So let's start over here and I just want to go with some kind of width. Since I want to set up this width fluid, meaning I want to set it based on a screen size, I'm going to go with width, and 90 view width. So those are units. And essentially, that just means 90% on screen with regardless whether that's really small, or really big. And then as far as the max width, we're going to go over here. And then remember, I mentioned that I'm going to be using a CSS variable for that. And in my global styles, I have max width set to 11 120 pixels. So that's the width I'm going to use. Let me go back here, I'm just gonna say half an hour friend, and then max width. And what this means is that our content number is never going to be bigger than 1112. That's why we have an App Center. That's why we added Of course, max width. Now you'll notice right now that of course the nerve center is all the way in the left hand side. Why? Well because we have the width bar, we haven't set up the margin, or we haven't styled the parent container. So we have two choices either you go here with margin zero and auto. So that will also always place it in the center. Or we're gonna work with a parent container. And in this case, we'll just say display flex, and then justify content. We'll set it in the center. And lastly we'll go with a line items and I'll set it equal to center but I can tell you right away that we won't be able to see that. Why well because now bar doesn't have any height. So once we add the height and is going to be on a big screen, then we'll actually see this property in action. If you're ever in doubt, I highly suggest just adding the background. So in this case, let's say you're confused, what's happening with map center, simply go with background and then set it equal to run. Again, this is just going to be temporary. And then you can do the same thing with a navbar and trudge around and set it equal to blue. And what you'll notice, once you go to the big screen, so this is going to be that nav center, it's never going to be bigger than that 1100 20 unless you use the remaining of the number. Again, if you're ever in doubt, two options, either you can set up the board. And that's also something that people use. Or you can just add the background colors. And that way you can clearly see Okay, so this is my nerve center. And this is the remaining of the map. Now, of course, since I have justified con on center, you can clearly see that Madison's are sitting in the center of the nav bar. So now let me come and these ones out, because they're useful. But they're also a little bit annoying, because of course, I don't want to look at the red color all the time. And next, I want to go with the header. Now of course we're styling, where we have the logo, as well as the button. This is going to be the case where I'll set up the height. And I'm going to go with six REM. And what's really interesting is that once we get to the big screen, we'll change this height around, and effectively we'll add the height to the entire number. But for now, since we're just styling the small screen, we'll go with height six arms for the header. And then again, we want to go with display flex. And we'll go with justify content, space between. And essentially in here, we're just pushing these items as far as possible, away from each other. So notice now buttons all the way and right inside the logo is all the way on the left hand side. And then I also want to set them up in the center vertically. And of course, in order to do that, we just go with align items center. Of course, you can use the grid for that. But it's just always my preference to stick with flex. If you have these straight up horizontal and vertical layouts. Of course, once it starts to get more complex, then grid is always a better choice. And after that, they want to make my logo a little bit smaller. So go with a nav header. And then I'll target the image. And essentially, I just want to go over 200 pixels. Now you'll see that course our logo is a little bit smaller than we want to go with now button. As you can see, we already have a bunch of styles applied because we're using that global button class. But I just want to add a little bit different padding. So in here, let's go with NAB btn. And then I'm looking for padding, zero point 15. And of course, I'm going to go with REM. And then the same thing is going to be over here, where we'll go with zero point 75. REM essentially in here, just make this padding a little bit smaller, this one a little bit bigger. Of course, that is a choice. If you don't want that, you don't have to apply the styles. And then let's go for Font Awesome. Now one is, of course, the IOM and so I'll go with navigation. And then I'll set the font size equal to one point 25. One point 25 RPMs. And once we have the map button in place, when I just want to go all the links. So of course now I'm talking about the entire list. And as far as the nav links, I'll set it equal to a display flex again. So display flex hour, we're going to go with flex direction, equal to a column. So now of course, instead of being in one line, were stacked one on top of each other. And then there's going to be more styles. So out here to do, but we'll worry about them once we start actually toggling the links, and then we'll right away go for that one individual link. My one has a class of link on here. Let's go with display block. So we'll change from being line one to display block one, and we want to go for text align. And I'll set it equal to center. And of course, Texas in the center, then let's also add text transform. And we're just going to go with capitalize. And after that let's add a different color. And in this case, I'm going to grow water gray one, but I'm going to go for 900. So now of course all the links have the same color as our text. And then let's go for letter spacing, MT will be equal to our CSS variable when we want to add a padding for only add padding top bottom, padding, one REM and then left and right zero. And also I want to add a border on top. So let's go board top one pixels solid, and then we're shooting for our CSS variable. So again, I'm going to go for gray and 500. So that's going to be my border. Then I also want to add transition because as we'll be hovering, I'll change the color of my link. So I'm gonna go over here, we transition that is equal to my CSS variable, of course, in the global styles. And then let's just go with nav link, and then hover. So as we're hovering, we want to change the color, and we'll set it equal to the primary one. And then lastly, as far as this Contact link, I just want to change the padding again, just like we did over here with an app button. Not to do that, we just go here with contact, and then link, and I'm targeting the actual link element here. So I have the class and then I'm targeting the link. And in here, let's go with padding. And again, I'm going to go with zero point 15. REM, and then one REM left and right. And once we're done styling, the Contact link, we're almost almost done. But before I let you go, there's something that I want to point out. And that is simply the fact that if you take a look at the logo, button, you probably noticed that even though I set up for the parent, for the header to be aligned items in the center, the logo, and button are not vertically in assembling. Now first of all, let's take a look at why is that happening. More remember, in the index HTML, we have course a link, and that link wraps the image. So if we're going to go back, and again, I'm going to do that right after header, but doesn't really matter where you do that, I'm going to go with nav logo. And let's do that trick. We'll go with background. And then let's add the red one. And you'll notice that yes, these ones, so the link, not the logo, but the link is in one line with the button, but not the logo that is sitting inside of going. In order to fix that, we simply need to set our logo to be in display flex. And then in order to place the image in the center, we simply need to go with align items, and then center. Again, please keep in mind, we're talking about the logo. So we're talking about the link, a man we set it up as display flex and line items in the center. So now the actual image is in the center. Now, of course you can clearly see that are actually in one line. So now we want to remove the background, we don't even know more. And once we fixed this tiny bug, we're done styling the navbar for the small screen layout. Alright, it looks like we're done with initial navbar CSS. But before we worry about styling, the big screen layout, let's quickly knock out the toggle functionality. And as a side note, if you're not comfortable with JavaScript, you can simply copy and paste the code from the final directory. And the idea is following on a small screen, we want to hide all the strings by default. And we'll do that by setting up the height zero in lunch and not show them we'll create a new class with the current height or the knowledge. And lastly in JavaScript will toggle the nav links by adding and removing the show links class. So the end result should look something like this. What if I made my screen smaller? Notice the button. And once we click, we show the links. And once we click one more time was LAN we hide the links. Like I already mentioned, the plan is following where we'll find the nav links, murders, we have our to do before we do anything before we set height zero, I actually want to check the height of the nav links. So let's open up the dev tools. We're looking for the elements. And more specifically, we're looking forward into how links and I can see that the height for nav links is 309 point 79 pixels. And once I know that info, I'll create a class, I'll say show lunch. And then we'll set up the height to be exactly that, whatever we have right now for not once, and in my case, I'm going to go with 310 pixels. And once I have this height. Now of course I want to go to now which I'm like I said by default will hire them. So say here, height is equal to zero, then we also need to set up the overflow hidden. Otherwise, you can clearly see that we can still see the links. So let's go over here or flow hidden. We also want the transition because when we'll be toggling actually one that toggle effect to happen over time, not instantly. So therefore we'll go here with transition. We'll just be looking for the CSS variable, the transition one. And once we have all of this in place, we can actually test it out by just adding and removing the class the show links one, E and F those and then of course we'll navigate to the JavaScript file out of functionality there as well. So let's go to the big screen. I always find it to be easier working there. So let's inspect, of course, I'm looking for the nav links element or here, and then just click on the class. And right next to the nav links, just go with show links. And what you'll notice, the moment you press enter, now you can see the links. If I remove the class, then you can probably already guess, we won't be able to see the links. Effectively, the only thing we need to do right now is just navigate to the JavaScript file. So let's go to the directory, the JavaScript one, we're looking for app j, s. And in here, we'll start with simple Hello World. And then back in the index HTML, we want to set up the script tags. So let's say your script. And as far as the source, again, we're pointing to the JavaScript folder, and the app js. If you can see the hello world in a console, then of course, we're moving in the right direction. As far as the address, you can select the nav links and nav button directly. But I always like to set up a function that gets me not element and if the element doesn't exist. So essentially, if I get back No, then I just throw there might seem like an overkill on a small project for still decided to share the functionality. So in here, we want to go with const get element. And we'll pass in the selector. So this is going to be either the nav links or nav button, or whichever element you want to select. On. First, let's go with const element. So now selected, and I'll say document, and then query selector. And now we pass in the selector. And you probably already know that in vanilla j s, if there is no element. Sure, if I pass in some kind of selector, that doesn't point to an element, which I'll get back to know. So I'll say here, if element exists, only if it exists, then I'll return the element. Otherwise, I'll throw the air. And I'll just say throw an error. And of course, I'll pass in some kind of message. In this case, I'm going to go with template string, I'll say please, double check your class names. And we'll go there is no. And of course, now I'm looking for that selector. And let's add a class here. And once I have the function, of course, we're going to test it out, where I'm going to go with cons lunch, snom, selecting the nav links, and all pass in the class of nav links. If I don't see anything in the console, then of course, we are in good shape. Now if I'll add some class name, that doesn't point to an element that of course will have please double check your class names. There is no bla bla bla class. Hopefully that is clear. So now of course, we can set the proper class here, copy and paste, we're going to be looking for nav be 10. In this case, of course, we also need to change the name here. So nav, btn, and then DOM. And then let's just add a event listener on the button, the click around and then every time I click the button will toggle the showings class. So we'll add an remove class on the links element. So let's say hello here now btn, van, add an event listener. And then we'll be listening for click events. And of course, we need to pass in a callback function. As far as the logical simpler go with links, class list. And toggle. So class lists is the property on there we have toggle method. And in here, we just need to say which class we want to toggle. Keep in mind or in here, you do need to pass in the.we already know that we're talking about the class or you simply need to provide the class value. And the moment I save, I can see that I have no bugs in the console, which is always a good time. And then of course, notice, as we're clicking, we're toggling the links. So if you want to test it out on a big screen, of course, you can do that. And you'll clearly see that the moment I click, I show links over here, notice how we're again, adding this class. Of course, in this case, we're not doing this manually. And then once we click one more time, then we hide the links. And before I let you go, let me just say that I'm fully aware that we are cheating a little bit, simply because if we change the amount of links, or functionality is not going to work as expected, because keep in mind that back in the main CSS, we're actually hard coding this height value. So of course, as we're going to be adding more links, or removing the links, our functionality is not going to work as expected. If you took my JavaScript course, you probably worked on a project where we cover the proper toggle functionality, but since it's not the main focus of the project, I decided to take this route instead. Alright, and once we have toggle function Now we're going to place finger and close the app js. And now of course, we'll focus on a big screen wild. So essentially, that's the look that I'm shooting for. Once we get to the big screen, I want all of them in one line, links are going to be on the left hand side, and then the contact one is going to be all the way on the right hand side, and not user, we just need to come up with some kind of value for the media query. On In my case, I'm going to go for 992. Just keep in mind that of course, I'm zoomed in. So technically, it's not going to happen exactly at 992. So let's go media screen. And we'll be looking for min width, min width. As far as the value, like I said, I'm going to go with 992. The first thing that I want to do is hide the knob button. So let's just start with the class knob btn. And we're going to go with display. Once we get to the big screen, I don't want to show the button. Of course, once we get past nine to notice we don't have the button, that's the first thing we want to accomplish. After that, we want to go with nav bar, and we want to set the height to be six milligrams. If you remember, on a small screen, we now have had or what six outcomes correct. Now in this case, that's not what I want. Therefore, I'll go with number. And then we'll set height to be six RPMs. And again, if you want to check it out, of course, background right there, and you'll see how it's gonna look like then we want to go with a knife center. And I want to set up display flex, why? Because I want all of them in one line, keep in mind that course for the links will still have to send them up as display flex as well. Otherwise, it's not gonna work, there will still be flex direction column. But as far as nerve center, yes, I want the header, I want the length in one line. Therefore, we'll go here with now center. And we're looking for display. And of course, we'll set it equal to flex, then we want to align them vertically in the center. So go with align items center. After that, we have the now header. And this is the case where of course we'll target that will say nav header, I don't want the height to be six items. So we'll just say here, auto. So essentially, this is going to be the height of the actual content. And then let's go with margin. Right. So this is just going to create a little bit of distance in between the links. Now, if I navigate to the big screen, this is what you should see. Now of course, we can see the links. And this is exactly what we're going to work on right now. Where essentially, we need to understand that if I take a look at the links, I set it to be equal to zero. So what happens if I hide the links on a small screen, of course, is exactly what I have right now, I'm not going to be able to see them on a big screen. So notice, if I show the links on a small screen, I'll also see them on a big screen. Now of course, the layout is still domestic, don't worry about that. That's not what we focused on. What I want to showcase is that if we hide them on a small screen, we're not going to be able to see them on a big screen. Why? Well, because this height is set to zero. And in order to fix that, we simply need to target the class first, some nav links, we want to go with height, auto. And now you'll notice that even though the links are hidden on a small screen, once we get to the big screen, we set the height, we can see the links. Now of course, what's more common is layout and because it is a mess, I simply want to change my flex direction. And I want to set it equal to row. And of course they will be in one line, then I want to align them in the center vertically because I have the button and I have the ones just in case there are some differences there. And also, notice over here, the nav center is taking up all of the space. And when it comes to header, it just has its own width correct. And the same goes for knowledge. But I want to change that centrally. Since now center is taking all of this space, I want my links to take up the remaining of the space. The way we set that one up, we just go with width, and we set it equal to 100%. And yes, the moment nothing changed over here, don't worry. We'll work on that a little bit later. But now if we take a look at the links, notice actually spanning all across so I have my now center of our still display flex and now the nav links are spanning all across again. You want us to route just go with background and red and you'll see that now. The links are picking up the remaining space. And if I remove that with 100. And of course, it's not the case. Now, of course, what I want is to style those nav links specifically, because if you remember, there are quite a few styles coming from the small screen, I actually want to override them. So go with an avalanche of nontargeting at one specific link, and I'm going to go with padding zero, since we added some padding on a small screen, then we want to go with war top, sort of equal to none, when as far as the margin, so I want some distance in between, we're going to go with margin, right, and we'll set it equal to one REM. And as far as the font size, I'm going to go with non REM. And then lastly, when it comes to that Contact link things, I want to place it all the way on the right hand side and simply go with margin left, and we'll set it equal to zero. And what you'll notice is that we have the header, we have the lunch. And of course, the Contact link is all the way on the right hand side. And probably the biggest gotcha is that height zero, we're essentially, again, on a small screen, we set it equal to height zero, of course, once we get to the big screen, if we're hiding those links on a small screen, we need to show them and therefore we set it equal to aura. And with this in place, we're done installing the navbar. Now of course, we can move on to our next task. Alright. And once we're done with the navbar, let's set up a structure for all our pages. Now before we do that, the admin just quickly mentioned that if you're bothered with the small margin on a contact one, you can simply go back and add here margin. And of course, we're looking for margin right in this case. And we'll consider equal to zero because of course, all the links get this margin, right. So if we remove it, of course, will not have that space all the way on the right hand side. As far as the structure, we want to set up the page class. And then we also want to set up the footer. So this is going to be structure for all the pages. And then in different pages, of course, we'll add different content, but all of them will have the navbar will have the footer, as well as the bridge. And you'll see once we get there. So first, let's go back to index HTML. And then right after nav, we have an of nav, and let's just say here, main or page or whatever. So some kind of comment, copy and paste, and we'll say end of main. And now let's set up a main element. And let's add a class of page. And then after the main one, this is where we want to set up a for short Mingo here with Porter. And I'm going to go with the poorer element. As far as the class, since there might be a footer, also, in some kind of card or something like that. I always prefer setting it up explicitly as page footer. But of course, this is the preference. Technically, you can just select the footer in the CSS, and you'll still be in good shape. And as far as poorer. I want to go with paragraph here, then we'll go with special HTML character. So I'm going to go here with ampersand and then we'll say copy. So of course, now we'll get that copyright sign. And then I just want to set up the date. Now for time being we'll hard code that. And then later on video will actually set up the JavaScript code as well. So let's go here with ID and date. So that's what we'll use in JavaScript. Like I said, For now, we'll just hardcode we'll say 2021. And then right next in the span, we'll set up another one. So still within the same paragraph, we'll go with second span. And here, let's class and we'll say for logo for logo. And let's just write whatever is the logo of the site. So in my case, it is simply recipes. But of course, you can add different logos as well. And then right outside of the span, but still within the paragraph, we'll go with built by, I'm just gonna use a shameless plug. And I'll set up a link back to John's milk about calm. So go with href when I want to go to the big screen, and I'm going to be looking for John's melton.com, I'm going to grab the href copy and paste. And of course, now I have a link, let's just step over here coding. So that should do it for the HTML part for the structure for all the pages. Now of course, we just want to swing back to the main CSS. And I'll grab this comment one, and then copy and paste and we'll set up one for footer as well. Let me copy this one copy and paste and then let's set up one for photo and you're not mature. We're going to copy paste one more time, because that way I can set up the next Comment as well. And for the sake of simplicity, I'm just gonna leave it blank. Now we'll actually start with a footer. And only then we'll worry about the page. And you'll see in a second why, for the time being, what we can do on a page is just set up our famous background red, so that we will clearly see what we're styling. And let's just start by targeting the page footer. So let's say here, page footer, and I want to go with height equals to forums. So add some kind of height, then we'll also go with text align center. So now all the text is going to be in the center, then we want to add background. And let's go with CSS variable. So in this case, I'm looking for the value of black. And then of course, we also want to add some kind of color. In this case, we'll go with color. And we're looking forward to white one. So now of course, all the text is white, apart from the link, but I'm noticing here that of course, I am the height. But I'm not placing the content in the center. So actually, a better approach is removing this text align center, and we'll go display. And I'll set it equal to flex. And then let's align them in the center vertically, and also justify content, which of course, is going to do that horizontally. So both justify content, as well as the Align items are set to center. Now, we still have some default margins. And therefore we will target the footer, and more specifically paragraph, and also margin bottom is equal to zero. And once we have that, I just want to add colors to the link, as well as the logo. And in order to accomplish that, we simply go with footer logo, then comma, and then we'll go with page footer. And then, of course, I want to go with color. And we'll be looking for the primary one. So once we set it up first, now the logo, as well as the link this primary color. If I take a look at the complete project, that's what I'm shooting for. Now the next thing that I want to do is set up the page height. Because if you notice a moment, of course, yes, we do have the nine bar we have the footer, but I actually want the page to take up the remaining space. And how we can do that, well, we can use min height. And we'll use the calc function, because both the navbar as well as the footer have some kind of height. And first, let's start with some kind of width. So in here, let's say background red, and we'll go with width. And width always will be 90% of the screen size. That's why we have view with units. And of course, I also want to set up some kind of max width. And this will be equal to my CSS variable. So let's go over here with max width. And eventually, what you'll notice is that the content of the page is going to be aligned exactly like the navbar. So if you remember, we also use the max width in the map center. And that's why both of them will be in one line. Now, of course, we have no content. So you cannot see that yet. But trust me, eventually, it's going to be there, whenever we want to go with margin, zero and auto. So now I always place it in the center. And then I also want to add a little bit of padding on top. So say here, padding top, and let's just go with two REM now of course, you can clearly see our red box, which essentially is going to be our page. And lastly, what we want is set up that min height. So for all the pages, there's always going to be this min height. I want this to be 100%. But I want to subtract the height of the navbar as well as the height of the footer. So we can do that by setting up min height. When we'll go with calc function. Let's just go with honored view heights. So this is going to be 100% on the screen minus. And then of course, we want to add six hours plus the forearms, I don't want you'll notice that regardless on screen size, this is going to take at least 100% of the height. Now of course, if we'll add more content, it's going to be bigger. And you'll see that in later pages, but at least minimum is going to be 100% minus the navbar as well as the footer. And then before we have that all the pages, I actually want to go to the app js, I want to target the date element. And I just want to showcase how we can add this dynamically. So for the time being, let's just remove this code, essentially, let's just remove the current year because we're not going to be hard coding that. And I want to swing back to App j s. And in here right after the button. We'll go with const date. So now we're selecting get element and of course I'm looking for that Id missed a date. And in here, we'll just go with constant current year. And if you want to current year in JavaScript, we just simply go with new date, we invoke it. And we have functioned by the name of get full year. So now of course, we just need to go with date. So that's the element when text content matter is equal to the current year. So this way, we'll always have the current year, we won't have to hard code this. And then lastly, once we have this structure, I actually want to take it, copy and paste and set it up in all the pages. And before you get mad about it, before you get mad about the fact that we still need to copy and paste and all the pages, let me just say one more time, since we're just using straight up HTML and CSS, we don't, we don't have any concept of templates or components that we have in Korea. So yes, if we have multiple pages, there's really no other way. And of course, once we set up a structure for all the pages, then we'll worry about index HTML. And then one by one, we'll add code, meaning the HTML and CSS to the rest of the pages. So once you have the structure, since we'll use it and all the pages, and since we have all the correct links, whether that is for CSS, or for JavaScript, I want to take all of us, and then one by one, I want to add it to all the pages. Because in here, yes, we have some boilerplate code. But essentially, what we want is just select everything, and then overwrite with our current code that is coming from the index HTML. And of course, the only thing you need to do over here is just change the title. And since this is 404 page, since this is an error page, we're going to go here with error. And if you want add more text, of course, you can do that. But in my case, I want and then just so I can understand what is happening, where I have the page, also add a new one. And I'll say our page, again, we need to do that for all the pages, we want to do that for about contract recipes, single recipe, back template, and tags. And of course, I'll stop the video because I don't think it's very useful for you to watch how I do 200 pages. But I strongly suggest you do the same because that way, it's going to be easier later on when we set up the pages. And once you copy and paste our page structure, your website should look something like this, where all the pages, use the navbar, you'll have the footer, you'll also have the page with a heading one with the name of the page. And of course, a title that matches whatever is the file name or here. And essentially from the navbar, you should be able to navigate to all the pages as well as the 404. So the 404, of course, is the one where we need to go to the URL. And let's just say for for HTML. And effectively, this is an error page, if the user is looking for some kind of resource on a server that doesn't exist. And just to showcase how is that going to look like in the actual dynamic application. Let me just find here, Gatsby version three. So this is the original project. Notice, if I'm looking for some kind of page that doesn't exist, let's say Users page, also in this portal for, so that's the one that we'll set up here in the error page. And with all this in place. Now of course, we can keep working on a project. Next, I actually want to work on homepage, where we have this banner. Alright, and once we have all the structure in place. Now of course, let's worry about our hero. And essentially what I want is some kind of div with a background. And for that background, we'll use the image. And then we'll also place a text in the center. And as far as the HTML, we want to go to index HTML. So of course, there's going to be our homepage. And then inside of the main, let's just add here a comment. Let's say that we're going to be looking for the header element here. And let's go with the actual header element with a class of hero. And inside of it, we're going to go with hero container and hero tags. And you'll see in a CSS, why we have this nested structure. So let's go with hero container. And then inside of that hero container, we're gonna go with hero text. And in there we'll place the heading one with some kind of text again, in my case, it's going to be simply recipes. And then right below it, we'll go with a subtitle. Now one will be no fluff, no fluff, just the recipes. And once we have the HTML in place now of course we want Navigate to main CSS, open up the main CSS here, we have already a comment. So we'll just say your hero, I guess, before we do anything, maybe let's just copy and paste. So we don't worry about the next one. So copy and paste. And then let's just say here, here, oh, and in here, I just want to set up some kind of height for my hero. And I guess I'm gonna go with height of 40 view heights, essentially going to 40% of the screen. So let's go with height. And once we have that, let's add that in background. So let's go over here with background URL. And we'll be looking for the image. And in this case, I'm looking in the assets. And we'll go with main jpg. But of course, we want to place it in the center, we want to make sure it covers everything. And also there's no repetition, of course, we can do it long way. Or there's also a shortcut, where we go and center cover, and then we set it equal to no repeat. So once we do that, of course, we should see the image. Now what I want is to add a border radius. So I want around the edges. And I also want to add a little bit of margin in the bottom. So let's go here with margin bottom on assert equal to two RMS. And also I want to add that border radius. So let's just go with border radius, and set it equal to our border radius global property. Now, in order to set up Look, where I have a text right in the center, and as you notice, here, the background is actually a little bit darker. So there's some kind of overlay on image will actually set this one as position relative position relative, and then the hero center. So this enclosing div, this is where all set up position absolute. And then we'll use this player flex to place a text in the center. So let's keep scrolling. And we're gonna go with hero container. And like I said, we're gonna go with position absolute. And since the parent is position log, Now, of course, we're setting up everything based on a parent. And then here, I just want to have a width 100%, height, all 100%. And then let's just set up top and left to be equal to zero. So top left, both are equal to zero. And once we have all of this in place, Now, of course, let's add that overlay. And we do that by going with background. And then we're looking for RGBA. And I'm just gonna go with 000 0.4. So RGBA. Now, this gives me 0.04. That's not what I want. So essentially, notice how the background right now is darker. So we added the overlay on top of the image. And of course, if we go really dark, then of course, there's going to be hard to see the image. So therefore, I go here with RGB. And as a result, I can nicely control this color. So the darker you'll go here, of course, the darker the overlay is going to be. And the reason why we want to set that up, is because if we don't do that, then of course with white text, it is going to be hard to see the text. That's why we want to set up the image, we want to add the overlay, and we want to add some dark color to it. And then we'll make the text white. So right after the background, we can probably go with border radius, since at the moment, our image has the border radius, but not the container. So let's go with border radius, and set it equal to the border radius property. And then if I want to place the text in the center, we want to go with display flex align items center. So now it's going to be for vertical, just for content is going to be for horizontal center. And then we want to target the Hero Packs. So that's going to be a div inside of that container. So here are tags. And let's just set up text align center, because you notice, even though the hero text is in the center, the actual text inside of it is not before we go text align, and we set it equal to centers. Now, of course, everything is in the center. And let's also add that white color. So let's go with our CSS variable. And of course, the name is white. And then the very last thing that I want to add is the media query for 768 pixels. And once we get to that screen size, I want to make the font size for heading one for RPMs and set the margin bottom to be equal to zero. From here, let's go with media screen. And of course, we're looking for some kind of value. In this case, I'm going to grow with men with 768 pixels. And once we get to the screen size, like I said, we're going to go with hero text and how Everyone, let's just go with font size for RPMs. And then let's set up the margin bottom to be equal to zero. And once we have everything in place, let's navigate here, this is going to be the look on a big screen. And if we make this smaller, of course, this is going to be the look on my screen. Now, as always, I'm massively zoomed in. So technically, if you take a look at the small screen, it's going to look something like this. And once we have our here on place, now of course, we can focus on our recipes, where we'll have two column layout. On one side, we'll have tags. And then on the other side, we'll have the cards beautiful. With our hair out of the way. Now let's tackle the big beast, the recipes layout, where we've got a two column layout with tags in one column, and cards in the other. Now, since we'll reuse this layout in multiple pages, please take your time. And don't rush with this one. Better to take more time right now than chase some silly spelling errors later on from my part, I'll probably be even more annoying than usual, by repeating the same things over and over. Since in here we have the nested layout. So it can get tricky. And therefore I think it's important that I basically keep repeating the same thing. And we'll also split this one into multiple videos, just so we can build everything step by step. The good news is, once we're done with the recipes, it's pretty much smooth sailing from here on out. And effectively, we want to go back to the index HTML, of course, we're looking for the main and you want to place this one in the main. So not outside of main not inside of the footer, you still want to place it in the main and therefore allowed bunch of comments here as well. Again, we will reuse this one. So it's much easier if you have clear comments where the next section starts, or element. And hopefully you get the gist. So we'll go here with end of error. And we'll have another set of comments. And let's just go with recipes container container. I'll do it over here as well. And let's just say endof love recipes container. And we're going to go with section with a class of recipes, container section, recipes, container, inside of the container will have two major things. We'll have a tags container. So I'm talking about verse column over here. So this is gonna be our tags. And then we'll have recipes cards. And of course, there's going to be more content. But for now, let's just set up those main elements. And again, we'll place a bunch of comments, let's say tag container. And we'll copy and paste course, on here, we'll say tag container. And as far as the tags, we'll just go with div with a class of tags container. So if you want, maybe let's add an s here as well, just so it makes a little more sense. And then we have a recipes list. So these are going to be those cards. And in this case, I think I can just copy and paste, we'll just change things around where I want to select all the tags here. And let's say recipes. And instead of container, this is going to be a list. So let's say here. So that's going to be the structure for this container, recipes container, run tags container, where we'll have the tags. Here, of course, we'll have the cards, the recipe cards. And now one by one, let's add more content. As far as the recipes container, we're going to have 104 with a text of recipes. And then also have a div with a class of tags list. And essentially in here, I'm just gonna have lunch. Now, since again, this is HTML and CSS project will simply navigate through the page to the tag template page will display these recipes when you're talking about the dynamic project one, but we set it up in Gatsby. Of course, in here we navigate to the tag, of course, we display that one specific or multiple recipes that are associated with that tag. Keep in mind that in this case, of course, it's not going to be dynamic, we'll just have one page and we'll navigate there, content will always be the same. But when it comes to dynamic project, of course, you'll click on a tag and then you only display the recipes that are associated with that tag. And hopefully you can already see when it comes to layout, it resembles a lot to what we have here in recipes list. So this is what I'm talking about where we will reuse this layout. Some parts of this layout quite heavily Around the project. So let's make sure that we set up everything correctly. So back in the index HTML tags contain an array of heading four. And in here, I want to go with tags list. And essentially, these are just going to be linked to the tag template page, then they're not going to be dynamic, all them will point to the same page. And essentially in there, we'll just have static content. And as far as the href, we want to go with that template HTML. And here, let's just add some different values. So I'm going to go with beef. And I'll say one. So what I'm trying to say here is that there's one recipe that has the tag of beef. And of course, we'll just copy and paste and change these routers around. So for breakfast, we'll go with two than four carrots, we'll go with three carrots, we'll go with three. And here, of course, we'll have the generic one, the food one, which is for, and again, not to be redundant, but in a normal project, of course, versus coming from the database. So this info is coming from database. And it changes it is dynamic, the more items you add course, you'll display different info in here, just HTML and CSS project. So of course, we're just hard coding. When it comes to recipes list, we want to set up those guards. So we're done with tags container should look something like this. I'm back in the recipes list, we want to set another comment, we'll go with single recipe. So this is going to be that card. And we'll copy and paste. So say and have single recipe. And in here, I want to go with link. Now this link is going to go to single recipe page. Essentially, this page probably is going to be the last we set up because there's also quite a bit of work over there. But the idea is that this goes to the tag page. But then this one goes to that single recipe, whatever it is, again, in our case, it's going to be hard coded. So if you take a look all the time display the same info here. But in general, when you have dynamic product, of course, you display a different recipe. Hopefully that is clear. As far as the href will go with single recipe HTML, right away out of class here, have a recipe. And inside of it, we want to go with image as far as the source while it's going to be in the assets. And we'll start with recipe one, then two, I believe we'll have four. So you can already guess that, of course being the assets, we have recipes folder. And in there, I have recipe one, recipe two, three, and four. So let's start with the first one. So we're gonna we have here a image tag. Now let me close the sidebar. And we're going to be looking in the assets, and then more specifically the recipes. And then in there we have recipe one, jpg. Now as far as the alternative, not just say food. And I also want to right away add classes. So the generic IMG class, remember, was set in global styles, as well as recipe. ru IMG master class, I want to learn right after my image. Let me close this one. And right after my image, let me go with the heading five. And I'm going to go with some kind of text. Let me just see. So I'm going to go with this one. And I'm also going to go with prep time and cook time. So I'm going to set up a paragraph with the text of prep. And again, in this case, we're hard coding, of course, we're going to go with 15 minutes of a vertical bar. And of course, we'll go with cook. This is going to be equal to five minutes. Let me save it, let me take a look. That should be the look on a big page. Okay, looks about right. And now we simply want to copy and paste this one and just change the heading five. So I'll leave the paragraph exactly the same. But since I'm going to be changing the pictures, I'll also change the text over here. And if you want to see the final text, just navigate to complete project and of course, this is what we're shooting for. So these are the titles of our recipes. So let me just take here where I have the starting comment and select everything, including the admin comment and now of course we want to copy and paste three times so 123 and now the only thing left to do is scroll up. Okay, that's our first recipe. And we will look for the next one, we'll just change the image. Now of course this is going to be recipe number two. And as far as the text, these are going to be Greek ribs, ribs and let me just save it so I can see Yep, that looks about right, then we have vegetable soup. And that is going to be recipe number three. And of course, I'll change the text here as well. And the last one will be banana pancakes. And of course, we want to change the image as well. So in this case, we're looking for recipe number four. So if I take a look at the big screen should look something like this. Of course, we have the recipes. So these are going to be our tags. And then we have those four recipe cards. Wonderful. We're actually done with HTML. So now let's navigate to main CSS. And of course, let's set up the styles. Like always, we'll start with the small screen, of course, and then we'll worry about the big screen layout, I have my comment here. Let me copy and paste. And here, I'll just write recipes. And then in order to help us, I'll add some borders, again, just so we have an understanding of what's happening. So in here, let's go with a recipes container. So that's gonna be that main container. And here, we'll go with display grid. And if you remember, by default, is going to be a one column layout. So that's exactly what I want on a small screen. But eventually, keep in mind that this is going to be a two column layout. Correct. So we might as well set up the gap right now for both for rows, as well as the columns. Again, I'm talking about the parent container, where I have the recipes and the cards. And therefore, I'll go with gap here. And I'll say, to REM, and we'll set it up as one REM again, at the moment, we'll only use one, because we have one Commonwealth. But then eventually, once we have two columns, essentially, once we set up the meter queer, of course, then we'll use both of the values are we're about as clear workers, in order to help us more just go with two pixels, solid, and red, just so we can see what's happening. So that's gonna be my main container. When we want to go with tags container gun, that is for tags, tags container. And essentially, we want to set up right away board just so we can see what is happening. So what we're styling. And in this case, I'm going to go with below. And once I save, I should see over here that that is my tags container. And as far as the styles, I actually want to place it all the way at the bottom. So I want to change the order. Notice over here in the index HTML, what do I have first, of course, I have the tags. Correct, I have my dark container. And only then I have the recipes list. And as I noted, may just change this one as well. So it's not going to be recipes container will go with recipes lists, so and of recipes list, just so we have a little bit more clarity on what I'm trying to do on a small screen is to actually change the order. So notice here, I have the hero first. And then I have the cards. And all the way in the bottom, I have the recipes. I mean, it's not a big deal, you can technically keep it at the top, but it's actually my preference to change the order. And if you remember, by default, all of them have order of zero. So if you add order of one, you'll notice that the recipes are going to be all the way in the bottom. So essentially, we have the recipes list still with order zero, and we just change the order over here. Now of course, once we get to the big screen, we'll change it back again. But that's a different scenario, than we want to go with display flex, and flex direction column. Now again, keep in mind that I'm talking about the parent container for the heading for as well as the lunch. So for both of them. Now, when it comes to links, there's going to be another nested layout. But we'll worry about that one a little bit later. So let's just say here, display flex, then we want to go with flex direction, we're going to be looking for the column. Eventually, we want to set up the button in the bottom as well. And we'll set it equal to three REM, so should look something like this, then we want to go with a recipes list. And then we'll swing back to the tags. So let's go over here with a recipes list. And again, by default, this is going to be a one column layout. And we'll do that just by setting up display grid. And then we'll right away set up the gap of qR yams and one REM and again, this is going to be the same as with the main container where since we have one column layout, of course, we're not at the moment using both values. But how the recipe list eventually is going to look like. Well, it's going to be a three column layout. Correct. So therefore i right away and that got property with both of the values. And also I want to do the same thing where I'll add the padding bottom equal to three REM when we want to swing back The tags. So I set up pretty much the major styles for the recipes list. Now I want to worry about the tags. First, me scroll down just so you can see what's happening. We're going to go with tags container, when we're looking for heading for, of course, and we'll add a little bit of margin in the bottom. So say here 0.5 RPMs. And as far as the font word was changed around, and let's set it equal to 500. After that, I want to go with entire list course, I'm talking about the actual tags list, and I'll make the screen size bigger just because I have zoomed in. Otherwise, it's gonna look funky. And we're gonna go tags list. And in here, we want to go with display grid, and right away, set it up as a three column layout. So let's say grid, template columns. And we're looking for one fraction, one fraction, and one fraction. Again, keep in mind that this is going to be a small screen layout. Once we get to the big screen, of course, we'll set it back to one column while running, we want to style the actual link. So let's say over here, tags list. And of course, the moving forward link element. As far as the text transformation, we'll capitalize it when we want to set them up as display block. And after that, we want to set up the color. And I'm going to go with my gray 500 here. And also I'll add transition because there's going to be a hover effect. So transition. As far as hovering, let me just speed this up by copying. Then I'll say hover. And as we're hovering, I'm just going to change it to primary. So again, covering both the color, and instead of gray. Let's go with primary. Once we save, we should see that as we're hovering, notice, of course, we're changing the color of the link, run, we want to go and style the recipe. Now what is the recipe? Well, that is going to be our card. So we're pretty much done with a tags, of course, apart from the big screen, and therefore I'll still leave those borders, I'll remove them at the very, very end. And you're not actually with me look for the recipes list. And let me add the border here as well. Because I think it's gonna be very helpful later. So let's say here, green, let's say that one on your course, we're going to see where we have our columns. And like I said, we're gonna target the recipe. So that's going to be the entire card recipe here. And remember, it was a link. So start with display block. And then once we set this up, now, of course, I want to target the image. So each card has the image. So let's target it, let's say recipe. And I believe the class 40 image was recipe IMG. And I'll set up the height, and I'll go 15 REM work. So Vern, all right away a border radius. Look for our CSS variable for that course, border radius. And as far as the margin, well, we're just set up margin bottom one, REM, we save that one. And then we want to go with a recipe and heading five. So of course, it's going to be the title, and also want to style the paragraph. And then we're pretty much done with a small screen. So let's go over here, let's say recipe. And heading five, like I said, we're looking for margin bottom zero, then I want to make the line height smaller. So go with one, if you remember in global styles, of course, by default, it was bigger. And then as far as the color, let's go with color. And we're gonna go with gray 700. So it's not going to be as dark as the rest of our text, it's going to be a little bit lighter. And then also we have one for the paragraph. So let's say your recipe paragraph. And basically what we're looking for is margin bottom to be zero because there is some margin as a default. And the same thing, line height will be equal to one. And that's usually the case when I'm dealing with some kind of cards because you don't want those massive line heights around what's also add right away margin top to be 0.5 RPMs. Just so we get a little bit of space. As far as the color, I'm going to go with gray, but I'm looking for 500. So I'll just copy this one, just so we can save a little bit of time. And then I also want to set up the letter spacing. So the letter spacing, and we're looking forward to CSS variable. There it is. With this in place, we're actually done styling the small screen layout. Now of course, we just need to focus on multiple media queries. Wonderful. Our small screen looks pretty good, apart from those borders, which of course will remove a little bit later. So now let's focus on the multiple screen sizes. And of course, we'll do that setting up the media queries. So let me go here with media screen And I believe we'll have three of them. So right away, set them up. And then we'll just worry about the code inside of them. So let's just go with 576 pixels. And then we want to copy and paste this one two times. And then as far as the values, one is going to be for 992. Online, last one will be for 1200 pixels. So we set this one up. And inside of the first one, we want to go with recipes list. So this is the actual list where we have the cards. Keep that in mind, I'm not talking about the container, talking about the recipes list where we have the cards, and I want to set it up as two column layout. So let's go over here with recipes list. And we want to go with grid template columns. And we'll set it up as one fraction, one fraction. Now keep in mind that if we scroll up, if we take a look at the recipe list, it is already a display grid. Correct. So therefore, I can right away, set up that column. Well, I also like to set up my images a little bit more, once they're side by side. So on a small screen, I mean, 15 remc, is pretty good. But once actually the screen size gets a little bit bigger meaning starting with 576. Once I have to come Well, actually, it makes a little bit more sense to go with a recipe. And then IMG, at least in my opinion, of course you don't have to but in my opinion, I always go with 10 RPMs. Basically, I said them smaller, maybe sometimes bigger than than REM. So hopefully you get the gist. So now let me navigate here to the big screen just to showcase what's happening. So I'll make this one on over here. So this is going to be our one column layout. And then once we get to the 576 course, this is going to be the look. So now we have that two column layout. Hopefully that is clear. Now we can focus on 992. Now at 992 will actually change the layout for the entire container, where we have the tags, as well as this recipe list. And we will do that, of course, we will look for our media query. that's step number one. And we're looking for recipes and container. Now again, it is already in display grid. Correct, starting with a small screen. So the only thing we really need to do is come up with values for the columns. And in my case, I went with 200 pixels. So that's for the tags. That's the width of my first column, and then one fraction, basically to take up the remaining space for the recipe list. And as far as the recipes list, well, I have already a grid template column set to one fraction, one fraction, so I don't need to worry about that. The only thing that I want to set up here, and maybe I'll style the paragraph a little bit differently as well. But as far as the tags container, I want to go with or zero. Remember, on a small screen, what was the order? It was one. And what was the result? Well, the result was that tags are all doing the bottom correct. So they're after the recipes list. Now of course, once we get to 992, I want this look, I want actually both of them side by side, like this. So I need to place it back where it belongs. And of course, I can do that with order of zero. So let's go with tags. And then list let's set up or I'm sorry, not tagged with my bad. So tags container first, and we'll go with or, and of course it's going to be zero. And then as far as the tags list, of course, we have three column layout on a small screen. But it's got something we want over here, where's No, we want one column layout, because now of course, they will be side by side. Now how we can achieve that all we can go to tags list and remember it is already display grid, it already has the column layouts, we simply need to change it, we need to go with grid template columns and set it up as one fraction. And lastly, as far as the recipe, I actually want to go with Paragraph Font size to be zero point 85. REM, so you can place it at the very end or after the recipe doesn't really matter. We'll go with recipe paragraph. And let's just go with font size. And like I said, we're going to be looking for 0.5 REM. Let's save it. And let's take a look. And we can clearly see that this is our main container with a red border. And then of course we have blueboard order recipes, meaning for the tags I'm sorry, and the green one for recipes. And as you can see, once we have a smaller screen, then of course we have this layout. And once we're good over here beautiful Now we have two column layout. And lastly, once we get to 1200 pixels, the only thing I really want to do here is make the recipes list, a three column layout. So let me swing back. And we'll keep on scrolling. And of course, at 1200 pixels, will set up our recipes list to be a grid template columns. And of course, I'm looking for three column layout. So I'm gonna go with one fraction, one fraction and one fraction. And yes, I'm fully aware. And of course, we can write the repeat and all that. But in this case, I just thought that it's going to be quicker if I go with one fraction. And then as far as the font size for the heading five, I want to set it up to be one point 15. REM. So I'm looking for a recipe. And since I already have for the paragraph, I might as well copy and paste. And essentially, we want to go with heading five here, believe it was hitting five, and then we'll go with 1.1 point 15 RMS, let's save that one. And I need to navigate back to the homepage here. Now let's take a look at our big screen layout. So essentially, once our screen gets bigger, bigger, bigger, bigger van, of course, we arrived at the three comwell. Again, this is going to be the look on a small screen, where we have recipes list. First of all, and we have the tags van once we get to the 576 we have two column layout for recipes list. Then once we get to 992, we have two column layout for the entire container. And we still have these two columns over here for the recipes list. And then once we get to the big screen, Wallah course. Now we have two column layout. Here we have three column layout. So now of course, the only thing really left is to remove those borders. So we have recipes list, we have tags container, of course, we have the recipes container. And with this in place, we have tackled the big beast, congratulations. And of course, we can move on to our next step. Not bad, not bad. Essentially, we're done with our own page. So now let's knock out the other pages as well. We'll start with the easy ones first, like error and recipes, and eventually work on more complex ones as well. And this video, I want to complete three pages, or a page or recipes page. template page. Let's start with an error. I know I already said this before. But essentially the 404 error page is if the server cannot find the resource in the Gatsby project is going to look something like this. Or again, we go with a domain and then we say error. And of course that's going to spit back the error page. And actually, if you deploy this project, really simple recipes, one, it's going to work the same way. So even the HTML and CSS one on natla phi, if you're looking for some kind of pressure, there's an existence, we have the 404 course we'll get back this result. Now in our local development, that's not going to happen because the extension is not that smart. So in order to see the page, of course, we'll have to do that manually. The way we're going to do that in the project is following we were first on a big screen, let's just type 404. html, Okay, looks about right. And then we want to do the same thing. So let me grab the URL, and just copy and paste and set it up on a small screen as well. So let me select everything. And then I'm looking for 404. So this is how it's gonna look like. Now when it comes to actual code course we want to navigate to 404. html course this is going to be our basic structure for all the pages. And for the error page, we simply want to add one more class here, since we'll add a little bit more styles. And let's say here are on hyphen page. And then as far as the content will go here with section and then serve section. Let's go with heading one, let's say error. And then lastly, let's go with heading three, and also a page not on font. So resave it over here. And now of course we just want to go back to main CSS. Again, we're looking for our comment, we want to make sure that we have for the next one. on here, I'll just say error as far as the code. Essentially what we're looking for is that class of error page error page. And we'll go with text align, text align, center, like so. And of course, we also want to add a little bit of padding to the top amount will be equal to five arms. And when it comes to a heading one, let's just go with error page on heading one and let's go with font size and RPMs. And you know, I messed up a little bit more in the 404, we actually want to go with 404, the numbers marked the text of her. And of course, we have our page. And once that is done with me just navigate back. And in this case, we're looking for recipes page, again, in the navbar. recipes page. And the same is going to be on a big screen where we want to go to the recipes page. And what's really cool, we already have all the code for it. And you know, get the code over here, take a look at the project. So this is our homepage, correct. We have the hero as well as the recipes layout. Now, what do you think is going to be in recipes? Well, is going to be pretty much the same page without the hero. And again, this is the case where of course, normally, this is some kind of template, or this is a component where you just pass in the data. So you don't have to repeat yourself. But like I have already said million times, since we're working with just HTML and CSS. Yes, we will have to copy and paste. Now, of course, let me go back to my project. And I'm looking for the index HTML. This is the reason why I added so many comments over here, because we definitely don't want to mess this up. So we have main over here, correct with a class of page, then we have the hero so we can actually collapse this one. And what we're looking for is this entire container. Now there's going to be few more instances where we'll just be looking for recipes list. This is not the case, in the recipes page, you want to take the whole thing. So therefore I have these comments where recipes container, so copy everything with the comment of recipes container, and then and of recipes container. That's what you're looking for, not the main. Now that stays over here. But the recipes container. Yeah, take the whole thing, copy. And now of course, I want to navigate to recipes, HTML, that's my page, we keep on scrolling. And where we have the page, the main one, we simply want to dump our recipes layout. So we just paste our code over here. Let me save recipes, HTML, as well as the index one. And now in our project, if we take a look, Wallah, we have a recipes page down. So this is going to be our home page. And this is going to be our recipes page. And lastly, In this video, I want to work on tag template, which also is going to look very, very familiar. Because if we take a look at complete project, either to Gatsby one, or just HTML and CSS, which you'll notice, but if we navigate to a tag bridge, what do we have over here, we have some kind of hard coded value, which of course, again, is not going to be the case in dynamic project. So this value will change based on the tag. Now in this case, of course, that's not the case will always have this beef. And then what do you see over here? It looks like a list. Correct? Now, where do you think his list is coming from over here. So that's why we set up the CSS in such a way where it doesn't really matter where we're placing that list, gonna have one column where I'll put on a small screen, and two column layout on a bigger screen. And then once we get to the big screen, it's gonna be a three column world. And in order to set that up, we simply go and look for the tag template, because remember, index HTML, or in the recipes now as well, when we're talking about those tags links, where do they navigate back template correct. So therefore, we'll look for tag template. And then again, we have the main one, a class of page. Now, of course, we just want to change it around a little bit, where we'll start by setting up a enclosing div. And we're simply doing that because I want to place the heading for on top of rest of the content. And we're going to go with beef. So again, we're hard coding some kind of value, in this case, beef. And now what you want is grab the recipes list from the index HTML. And I'm not going to repeat this whole spiel about why we're copying pasting, because I think I already have mentioned this way too many times during the project. So we're looking for recipes list, not the container. We're looking for recipes list. Take a look at the comment and look for the end one as well. So we're looking for and have on here probably muster up, or no, sorry, I muster up right now because I was looking for different comment. Again, we're looking for recipes was my bad. I mixed it up with the recipes container and the recipes list. That's the endpoint. We copy this one and by In the tag template, copy and paste, and congratulations, we have three pages out of the way. So now of course, we have the home page, we have the recipes, we have 404. If we click on one of the tags, whether in the recipes page, or in the home page, where are we going to navigate, we're going to navigate to a tag template, where it will display the bag and list of recipes, which again normally would point to the recipes that are associated with that tag. And of course, you will be setting this up dynamically normally. But if we're just worried about HTML and CSS, we have three pages out of the way. And of course, we can focus on next pages. Nice. And next, I want to work on the about page, where effectively we'll have two column layout for the info, as well as the picture. And then here at the bottom. Again, we're going to use a list. So technically, these would be some featured recipes that you want to display. Again, normally, this is going to be dynamic, you'll just pass in which recipes you want to showcase point and Rockers, we'll just use our recipes list, same one, we used in tag template, this one over here. Now in this case, or we only want to pass in three. So we're in the tag template, we set up four parameters goes, we'll just go with three. And effectively, we will reuse that list few more times throughout the project. The setup is going to be exactly the same where again, looking for about HTML, I have my page. So I do have the structure. And here let's set up those recipes first, and navigate here to the about page as well. So we can see right away. And once we set up those featured recipes, so the recipe list, then we'll worry about the rest of the content. Inside of the page, we want to go with section. And then let's add a bout page. So this is where the info as well as the photo are going to be located. And then we want to go with another section. And then let's just call this featured, recipes, recipes. And actually don't think that there are any styles with it, but more just on the section with this class. And then inside of it, we want to go with heading five. And we're looking for a featured title. And I'm sorry, this is a class. So it's a featured title. The only reason why I'm adding here this class is because I want to place the text in the center. And again, technically, we can use this feature recipes. But if I remember correctly, the heading five was already in the car. So that's why I just went here with this class. Again, long story short, basically, we'll set this one in the center. And then as far as the text logist, right look at this awesome source. And right below it. This is where we want to place those recipes. So let's go back to index HTML. Again, we're looking forward to recipes list. Same deal, man. This goes Of course, eventually we'll remove one of the cards placed in my setup. But if you want, of course, you can keep all four. So we copy and paste the list. We're looking for what we were looking for about HTML correct. Got a little bit last order. And then right after the heading five. So within featured recipes, we want to copy and paste and like I said, Margot's, I'll remove one of them. So I'll remove the last recipe. And once we save, of course, we right away have our nice layout, like I previously mentioned, effectively for this one for 205, I just want to place it in the center. So let's quickly go to CSS. And we're looking for feature title, I believe, featured. And we're looking for title. And we're simply want to go text align center. Now of course, it's going to be in the center without the recipes less part. Now of course, we just want to add that info, which is going to be here in the About page. We also want to add a photo. So let's set that one up. And in here we want to go with article. So this is where the info is going to be located. And then right below it, we're going to go with image. And in this case, we're looking in the assets. More specifically, we're looking for the about one and nine as far as the alternative. I'll just say pouring salt. And we'll also add few more classes to image. Those are following we'll go with our IMG, so the global one, as well as about IMG. Now when it comes to info, we're looking for Heading Two. We'll just type some kind of text and you're not in this case just so we can speed this one up. Look for this project already. Other one, basically just copy and paste the text, there's really no point to return that from the scratch. And essentially, I got this text, I believe from the hipster ipsum, which is my favorite place to get lorem ipsum text, effectively the dummy text. And we want to go here with the first paragraph. So there will be two paragraphs. And I'm just getting the text over here, if you want, you can simply type Lorem, and then whatever amount of characters, so you can go here with Lorem. And then let's say 20, or 10, or whatever. Now in my case, since I liked that text better, we're just going to copy and paste. That's my first paragraph. And then of course, we're looking for a second one. And at the very, very, very bottom, also have the button. So it's here button class will be btn. And we want or you're not sure is going to be a link, my button shows me remove my apologies, we're going to go with link, this is going to be to contact HTML, when we want to add a class of btn. And let's add a contact. And since we have already global class for to beat him, that's why we have to look. And now of course, we want to swing back to main CSS, and we just want to apply few styles to about page, I'm just gonna keep this one on the bottom. Because I like to keep things organized that way, but of course, you're gonna leave it at the top as well. We're gonna go with about page, we're looking forward to heading two. So that's that main heading with dummy text. So both page heading Q and hero, say text transform, set equal to none. And there's no transformation because for all the headings, we have that base transformation, then as far as the font size, I'll go with bold, so I'll make it a little bit bolder. And then in here, let's also set up about page. Now, of course, I'm talking about that section. And first, I want to go with display grid, display grid. And again, by default is going to be that one column layout. But that doesn't stop me from setting up the gap. Correct. So again, I have two arms, and forearms. So this one, of course, is going to be for my row. And then this one will be for my columns. And again, the morning we have one column, so it doesn't really matter. And then we also want to set up right away some kind of padding here. Let's go with padding bottom, three REM, so that's going to be added to this entire thing. So now of course we have distance between section, the about page, our featured recipes. And then we also want to target right away the image. As far as the about the image, we have the class correct. So let's go with about half an IMG. And we're looking for border radius. And we use our CSS variable for that. As far as the height, well, let's set it up as 300 pixels. Now, of course, the height is a little bit smaller. And then we also want to of course, go with some kind of media query because on a bigger screen, we'll have a two column world. So let's set up a meteor screen. As far as the size, let's go with men with macros. Again, I went with 992. That was just my preference. And we'll target the about page, setup grid template columns, grid template columns as one fraction and one fraction. So we have two column layout. And then when it comes to rows, I'm going to go with 400 pixels. Now keep something in mind where we will have only one row. And essentially what I'm doing, I'm setting up the height for my row, and then I'll use the height for the image and I'll set it equal to 100%. So effectively, as a result, my image is going to be the height of my arrow. So let's try it out over here. We'll say grid template rows, and we're looking for 400 pixels. And then of course in here we'll go with a line items, and we'll placing it in the center. And I'll comment this one out in a second just so we can see why we're adding that one. And let's go with our about IMG and then here we'll go with height. And like I said, we're gonna go with 100%. So now what happens on a small screen while this look so once I make my screen size smaller is going to look something like this. And once we get to 992 we have this two column layout, and then image is the height of my row. And since text is smaller, now of course we're placing it in the center. Now if I'll comment this one out, you'll notice that text is all the way at the top. So let me put it back in there. And of course we have the about page completed as well. All right, as far as the next step, we want to go to contact page. And of course, tile this sucker. Practically here, where I'm saying feature of recipes are, we already know where to get them. The moment we have them already in the about a man when it comes to form. I mean, most of it is already in a global CSS. So we should be done with this in no time. Now, at the moment, of course, in the contact, this is all I have a text with contact page. And of course, we'll start in the contact HTML. That's what we're looking for. And like I said, since I want to simplify this, first, we'll go to about HTML. And we're looking for those featured recipes. So take this section, the featured one, and just copy and paste and place it in the contact page. So take all this code, navigate back to contact HTML. And in here, we'll have two sections. One is going to be for dot info, as well as the form. Now let me close the sidebar. So let's start with that section. Let's set up a section with a class of contact, and then hyphen, container. And right after it, we'll copy and paste our featured ones. So this is what you should see on a screen, the featured recipes. And of course, we just need to navigate up where we have the actual container, the contract one, as far as the HTML, I mean, there's not much, there's some headings, some paragraphs, like I keep saying form as well. And we'll start with an article. So the article is gonna have some kind of class. And we're gonna go with contact info. And this goes on, as far as text. Again, I'm just gonna speed this up. And I'm just going to copy and paste from the final one. So we're looking for heading three, copy and paste. And the same goes for these three paragraphs. That's it, that's all we have to do, come up with paragraph and then copy and paste. Same goes for the rest of the two. So another paragraph here, another set of text. If you don't like my text, course, you can always go with Lorem. third paragraph, and learn again, we copy and paste the text. And then right next to this article, we'll place another one. And this is where we will place our form. And effectively, we're looking for form class, as well as the contact form. So this is where we'll add a little bit more styling. And this is what you should see on the screen. Now I will remove the action because of course, it's not going to be dynamic, not going to be a working form. And then third, we're going to go with form row. And then I want to add the label, as well as the input. So we'll go here with label, as far as the poor attribute will go here with name, I want to add a class of form, hyphen label, again, this is coming from global CSS, and then we'll just add your name, Ron, we'll save it. And after that, I'm going to go with input, a type will be text, we're just set up a name is equal to name. And then we want to go with ID as well as the class of form input. So let's set it up over here, not say ID, and I'll set that one equal to nine. So just make sure that both attributes, the ID and four have the same value. And we'll also look for the class. And that will be form input. And once I have my first row, essentially, what we want to do is just add a comment. And we'll say, single form row, also added over here, the end of my div, and also end up single row. And now of course, we just want to copy and paste, I believe two more times. I mean, this is going to be text area, so maybe you only want. So let's take this one, copy and paste. And as far as the values, essentially everywhere where we have the name, we want to change it around to email showed me select all the names over here. I'll go for email, and the only one that I need change back, of course, is this one. So say name is also equal to an email. So if I take a look, yep, there it is. Now, of course, we still need to add some CSS, but at least the basic setup is working. And like I said, we'll also add a text area. So let me keep on scrolling here. And after this row, we'll set up another one. The class is exactly the same. So go here with form row. And then inside of it. Again, another label. In this case we're looking for a message class will still be a form our label. As far as the text, let's just write message and this is where we want to go With that text area, so right after this label will go with text area. And as far as the attribute values, let's set up both name and ID equal to a message. And then I'll remove the columns and rows, because of course, we have already all the styling in a global CSS, so go with form, we're looking forward to class of text area. And once we save, we only need to add a button. So right after this Dev, we'll go with button. Now in this case, it's going to be type Submit. And now as far as the styling will go with btn, btn iphon block. Now, of course, the button is going to be spanning all across our form. And line as far as the text messages go with sub. And once we have all of this in place, essentially, we just want to navigate to main CSS. Sure, let me open up the file for CSS and working for main CSS, I have the about think I need to copy the comment as well copy and paste. And of course, now I'm looking for the contact page. First the value contact page. And I'll close the sidebar here. And what I want to do is set up that form to be 100%. Remember, by default, we have some value already on the forum class. And that's why we added that contact form class. And in here, let's just say width to be our percent. And as far as the margin, I'm going to go with zero. Now the word of course, will use the container, the contract container to set them up side by side. And in fact, we'll do that right now. where we want to go back through the main CSS, we want to look for contact and learn hyphen container. And here we'll go with display grid. Now again, on the small screen, by default, it's going to be a one column layout. But that doesn't stop us from setting up the properties for the gap. So to REM reorients. Over here for the column, a man I'll also add a padding to the bottom markers. And we're gonna go with three RPMs. So that's gonna be the distance in between these guys. And once we have all of this in place, Now, of course, we just want to worry about the media. And we'll go with Meteor screen. As far as the min width, one, we'll just set it up as 992 min width 992 pixels. Of course, I'm here, let's just go with contact container. And I'm going to be looking for grid template columns. And in this case, I'm going to go with one fraction. So that's for the text, that's for the left column over here. And as far as the form, I'm actually going to hard code, I'm going to say 450 pixels. And then since I want text in the center, again, I'm going to go with that align items center. So let's go back over here on line items. And we'll set it equal to center. And of course, once we have added the CSS, we're done with the contact form, now we can focus on our next task. And once we have the contact form in place, Now, of course, let's set up the tags page, the moment has only a heading one. And what we're shooting for is this look where we have the tags. Of course, these are going to be dynamic in normal project. But in our case, we'll just hard code. And once you click on a tag, when you navigate that tag template page, and of course, this page we already have, that's why we have the recipes in place. And as part of the setup Well, here, let me go back to the tags. And I'll do the same here. And of course, I'm already in the page, so I'm good. We're looking for tags, HTML, close the sidebar For now, we want to remove that heading one will still keep the page. What we're looking for is the section. And I'm going to go with tags wrapper. So that's the class in here. Let's add a comment. So single Montag, and I'm just because it's going to be under single tag and optional tag. And then as far as the setup, it's going to be a link class will be a tag. And again, we'll hard code these values. And I'm not going to go over why we're hard coding values, because I believe I have said that already more than enough times during this project where you want this link to navigate well, to the tag template. Remember, that represents some specific tag and recipes that have that tag. And as far as the proper path. Well, it is tagged template HTML. Correct. Like I said, we'll add a class over here, and I'll say tag, and as far as the values, we'll just go with heading five We'll set it equal to beef. And as far as the mana recipes, well, it's going to be a paragraph with one recipe. And now what we want to do is just take this one tag, copy and paste, let me take a look how many are created, think I went with five, suddenly see, the moment I have 1234 showed me copy that one more time. And now we're just want to change these routers, we're gonna, this is gonna have two recipes. And we have dinner, food, and all that. So let me scroll up, let me make sure that I don't do anything with the first one. Okay, that one stays the same. For the second one, we're looking for breakfast, it's gonna have two recipes. Then we have one for carrots. And that is going to have, I believe three recipes. Then we have dinner and food. We have one recipe for dinner with foresters, online food with one wants, the HTML is in place. Now, of course, let's just navigate to main CSS. And we want to set up another new comment in here. So go here with tags, of course, this one a little bit more serious as of the contact page, because, of course, we're the contact page, the biggest one was the form. But we already had bunch of styles in a global CSS. So let's go here with tags page. And then I'm going to worry about my wrapper, again, is going to be a one column layout, starting with the small screen. And as the screen size increases, then we'll also change the amount of columns. But that doesn't stop us from tags wrapper. So that's the entire wrapper. When we go with display grid, I'm going to go with qR M. So that's going to be for the columns and rows, and adding the same deal. We'll go with padding bottom three are yums. And once we have all our lists in place, now of course, we just want to worry about that one single tag. And we will set up the CSS is going to be following where we'll target the tag, we're looking for background. And in this case, I'm going to go with gray, and 500. That's going to be the default value, then I also want to add right away a border radius. And of course, we'll use our CSS variable for that. After that we want to go text align center. So make sure that the text is in the center color, white thing that should look good. And as far as transition, while we're just use our CSS variable, because when we'll hover, I'll change this color. And then we're pretty much done, I just want to set up the padding top bottom, zero point 75, REM, and left and right zero. As I'm hovering over the tag, like I said, I want to change it to a primary color, religious grab the background one person over here, and instead of gray 500, we'll go with primary 571. Notice as we're hovering Now, of course, we're changing the color, and we just want to add some margins, zero to the bottom of heading five, paragraph because if you remember, the default, we have them there. So now of course we'll remove those margins. And I want to do for both for tag paragraph as well as the heading. So therefore we'll go with tag paragraph tag heading. And then like I said, we're gonna go with margin bottom zero, so both of them have no margin. They're also I want to increase the font weight for the heading. So let's set up the hearing here. We're going to go with font weight. And let's just set it up as 600. Let's save as you can see, now of course, the font weight is a little bit bolder. And lastly, we'll have to Commonwealth starting with 576. And a three column layout. Once we get to nine or 92. Since I want to save a little bit of time on a boilerplate, we'll just copy and paste, set it up over here 576 we're targeting a tags wrapper, of course. So the classes, tags and wrapper. Since we already have display grid, we're just going to go with grid template columns. one fraction, one fraction. Of course, the only thing that's left to do is to take this copy and paste 992 and then we'll have three Commonwealth shows because some people probably are annoyed and we're going to go repeat. We're just say three, one production. So of course that is the alternative syntax that we can use. Now let me navigate to the big screen for tags. route is going to be my layout Once I click on a tag, navigate to a tag template page, and with this in place, we're really need to worry about that single recipe page, this one over here. And don't freak out about this error page. Essentially, when I was setting up the structure for all the pages, I just forgot to change it to a single recipe. If you take a look at the title, of course, it says single recipe. And as far as the single recipe page, it's gonna look something like this, we're back in home. And we just click on one of the recipes. Again, we're hard coding these values, there's going to be four banana package. Stop, we have some kind of info. And then we have instructions, ingredients, and tools. And in order to make it easier, again, we'll separate these two, were in the first video, or worry about all the info section. And then we'll deal with instructions ingredients. And we'll start by navigating to single recipe of course, in here, first, I want to remove that one, we're not gonna use that anymore, the layout is going to be following or again, we have the page. So this is where we'll place all of our content. And instead of the recipe page are going to be two sections. One is going to be recipe hero section with a class of recipe and hyphen hero. And then the second one will be the recipe content. So that's where the instructions tools and all that is going to go in. So we're going to go here with recipe content. And this is the one that we'll work on in the next video. And this video will focus on this one, I'll start by placing some kind of image like I said, we are hard coding this. So we're simply needs to look for the assets. And then more specifically image we want and Marcos, since I'm going with banana pancakes, I'm going to go with recipe number five, I do want to add some classes here. So we'll start with our image class. And there's also going to be a recipe hyphen, hero, and hyphen IMG. As far as the alternative, let's just say bank x, once we save, we should see the image, which is always a good sign right next to the image, we'll have that second layout. And this is going to be the article, sort of the articles start with heading two. And we're just write the names of banana pancakes. And after that, we want to set up some kind of dummy text. And in this case, I'm going to go with paragraph and of course, like I did before, I'm just gonna grab my hipster text, copy and paste my text. Awesome. And we'll have a recipe icons. So of course, we're talking about this column over here. And the same goes for tags. And I guess more properly, this is a row with a three column layout. Well, of course, we have the icons. And then here we have another row where we display the tags. So let's keep scrolling. As far as the recipe icons, well, we want to go with they've sort of they've set up some articles. Again, we're not placing in the recipe content. So let's just add here a comment recipe content. So we're clear where we're setting this up. So we want to look for recipe hero. And then right off to the paragraph, we'll go with Dev, and we'll just say recipe, icons, we'll copy and paste. And of course, the moment I'm just setting up the comment, but eventually the dev is going to be there. And the second one will be recipe tags. And this is very useful. Once you start troubleshooting. Trust me, adding these comments seems like a silly idea. But once in a while, it really helps you out. And then we'll look for them. And like I said, we'll be looking for a recipe icons inside of it, we're going to go with one article. And that is going to be a single recipe icon. As far as the setup, well, we just need to look for the icon, and therefore I'll go for element. The classes are following FA s and FA Clark, a man would just add some kind of dummy text that's going to be placed in the heading five or say prep time. And also we'll have a paragraph with some kind of hard coded value. In this case, that's going to be 30 minutes. And now of course, I just want to take this article, copy and paste and change some values around where the second one will be f A are not FA s FA are not going to be a prep time. Gonna be a cook time. Here, I'm just gonna go with 15 minutes. And then lastly, we have the user friends. So that's the name of the icon. We're looking for FA s fa. And let's remove this piece and let's say user Friends, this is just going to be amount of servings, servings. And we're looking for some kind of value again. So in this case, I'm going to go with six servings. And lastly, we want to set up those tags. So again, make sure that you don't place this in the recipe icons, make sure that you place here in the recipe tags. So there will the class of recipe tags. And as far as the content here, we'll go with tags. So that's text. And this is going to be a link. Now again, we're navigating to a tag template page, therefore in my href, doctype, tag, template, and HTML, and we just want to set up some dummy values. So beef, save it, now you want to take the link. So don't think tags tag just don't link, I think I'm going to copy and paste this, I don't know two more times. So three total. Let me close the sidebar, we just want to change these powers around. second one will be breakfast. Third one will be pancakes. And the fourth one will be food. Once we have the HTML for to hear on voice, Now, of course, let's just navigate to main CSS, we're looking for the last thing pretty much all the way in the bottom, we'll have our recipe template. So let's take this comment, copy and paste. And we'll just say, a recipe. template or single recipe, you're not actually I'm gonna go with single recipe, single recipe page. And we want to start with that recipe hero. So recipe hero, by default is going to be a one column layout. And we'll right away, set it up as display grid should be already familiar with that. All right away also set up the gap to be through your items. Once I have this in place, now I want to focus on that image. And remember the class was a recipe hero, IMG, recipe Hero, Hero IMG. Basically I want to go with height to be 300 pixels. So now it's a little bit bigger. As far as the border radius, well, we have the property for that we have border radius property, when it comes to the paragraph, this one over here, I'm just gonna make it a little bit lighter as far as gray color. So therefore, I'll go with recipe info. And then I'm looking for paragraph. And of course, we want to go with color. And I'm looking for gray. And I'm going to go with 600. So now it's a little bit later, then we can start focusing on those icons. So that's the next row. As far as the setup there, we'll go with a recipe. I can't, man, I'm looking for display grid, sure, I want to set up as a grid layout. And right from the get go, it's going to be a three column while so go over here with grid template columns. And in this case, I'm going to go to repeat. And as far as the value, I'll repeat three times, and one fraction. So right from the get go, we have a three column layout. And again, I've massively zoomed in. So of course, normally it's going to look something like this. And then once we have all of this in place. Now let's add a little bit of gap. And in my case, I'm going to go to one REM and we do want to add a margin top bottom, and therefore I'm going to go with two REM and zero, so nothing on left and right. And when it comes to the text align, I want to place it in the center. So let's set up here text align center. When we want to focus on the icon, we can access that by recipe icons. So recipe hyphen, icons, and I'm looking for Ireland. And here I'm going to go with font size 1.5 RPMs. And as far as the color, let's just go with primary color. And we're going to be looking for our primary one. And I believe I'm going to go with 500. Why don't we want to target the heading five as well as the paragraph. And in this case, I think it's going to be faster if I just copy and paste. So we're looking forward to heading five. And we're also looking for the paragraph, or we just want to set up the margin bottom to be equal to zero. And then font size to be zero point 85. REM, let's say well one. And lastly, I want to target this recipe icons paragraph and just add a different color. And in this case, I'm going to go for gray. And again, I'm looking forward at 600 value. So let's go here. And let's say 600. So that's going to be the color for that paragraph. Man, we just really need to worry about those tags, as well as the two column layout once we get to the big screen. And in order to style the tags. We'll start With the actual container, and we'll set it up as display flex. So right from the get go, we're going to be display flex, a man will align them in the center vertically. So align items center around, we'll make sure that it wraps if the screen size is not big enough, so flex wrap equal to rub a man as far as the font size, I'm going to go with 0.7. This is the interesting part, where I'm going to be looking for em values. So basically, depending on my container, I also want to add the font weight. And in this case, it's going to be equal to 600. So the font weight, of course, is going to be a little bit bigger. And then let's target those links. So of course, I'm not talking about that text, talking about the link. So recipe tags, and we're looking for a element and background will be equal to the primary 500. So primary hyphen, hyphen, primary 500. And as far as the border radius, or not border bottom, sorry, border radius, that's going to be equal to a border radius CSS variable, then we want to set up some kind of color, that's going to be equal to white. And man as far as the padding top is actually going to be quite small. So 0.05 REM, as far as left and right, we're going to go with 0.5 REM. And then we also want to add a little bit of margin, we're not going to go with top bottom, so that's why it's going to be zero, but left and right is going to be zero point 25. REM, then we want to go with text transform. And we'll capitalize text transform on couplers. Lastly, like I said, we want to worry about that to Commonwealth once we get to the big screen. Since I'm lazy, typing the media queries, let me just select this code, copy and paste. And we just need to change some of ours around where the men will still be 992. So that's the same point in here, we want to go to a recipe hyphen hero. Once we get the big screen, I just want to change it to two column layout. As far as the image is going to be for fractions. When it comes to the text, as well as the icons and all that it's going to be five fractions. And again, since I want both of them to be in center, we're just going to go with align items in the center since the height for one of them probably is going to be bigger. If we go to the next one. Notice now in this case, the image is the one that it's smaller on a big screen, therefore, it's sitting right in the center. So that's the look that we have for hero. Beautiful Congrats, we have finally arrived at the last step. And essentially in here, we want to set up the instructions, ingredients, tools. But before we do that, there's actually a tiny typo here are noticed the recipe info, it's not a recipe info should be recipe hero. Now, of course, my text is gray. Essentially, I'm looking here for 600. Now, everything is just like in the final project, I will start in a single recipe. And you're not in this case, I'll collapse the hero. Sure, sir, not in a way. We're looking for recipe content. That's the one we want to set up. And here we have two Commonwealth wherefor inside of this section First, I want to set up that article. And then there's going to be another article. And since I was lazy, as far as the class names, I just set it up as second column. That's it. So I'm here in the second column. This is where we'll place the ingredients and tools. But first, we'll worry about the instructions. Some instructions, of course, are going to go in our first column. And I want to start with heading four. And we'll just say instructions, when we'll set up a single instruction comment. And after that, let's go with deal with the same class. So single instruction. Now inside of the div. If you take a look at the complete project, you'll notice this step on the horizontal line. So that's going to be in our header. And then we'll have some kind of text. So let me start by getting this text here, just because I want to speed this up. So first, I'm going to set up the paragraph. But above the paragraph, there's going to be a header. And inside of it, we'll have another paragraph. And I'm going to go with step one. And then right next to it, we want to place a empty div. And yes, there's there needs to be here. Now there's a million different ways how we can set it up. But in this case, I just went with extra HTML element. Once I have this single instruction, I just want to copy and paste and let me take a look at this. If I have three, so let me just copy and paste One, two, when we want to change the step, this is going to be two, this is going to be three, just to stay consistent. Also take this text and add in step number two. And same thing for step number three, of course, you can keep all of them the same, it doesn't really matter which service. Okay, so I have step 123. And then inside of the second column, this is where we want to set up the ingredients. And we also want to go with those. Now both of them are going to be in separate Dev. So let's go with dev Saturday, we're going to go with heading for an ingredient. Hopefully, I can spell it correctly, because that's usually an issue. And we're just looking for paragraph, a class of single ingredient. And then as far as the value again, yes, I know that it's probably annoying to some people. But we'll just copy and paste. Since I don't see the point of setting up everything from the scratch. What you want to do is just take this paragraph, so not the heading for just a paragraph from the same class, you probably want to copy and paste at least in my case, I'm going to copy and paste this two times. And we just want to change these vowels around. So we want to select this one, we want to do the same thing for the third one as well. And then the same goes for the tools. But of course, the difference is the class name, as well as the text. So we can copy and paste or we can set up everything from scratch. In this case, I think I'm going to go with setting up everything from scratch. So Dev, Van heading for tools. And let's go with paragraph. Let's add a class here. So class, I'm more looking for a single tool. And as far as the value again, Mark, just take these ones, copy and paste the first tool, I'm just going to copy and paste and essentially get those values once we have the HTML. Now let's navigate to main CSS. And let's continue over here. First, we'll worry about the recipe content. Now, of course, I'm talking about the container where both the instructions, ingredients and tools are sitting, because we'll have to Commonwealth. So let's go here with recipe, recipe hyphen content. And we're going to be looking for a padding, top bottom, three, REM and then left and right zero whenever we want to go with display grid. So that's, of course, our small screen layout. And we'll set it up as gap to our games for the rows and firearms for the columns. But of course, we only have the rows on a small screen. And then let's go with a media query. And if you want, you can add it here as well just make sure that you move this media query below the recipe counted. Otherwise, there's going to be a mess up, you know, in my case, just stay consistent. I'm just going to copy it and paste. And we're looking for recipe content, I want to go with grid template columns. And as far as the values will go with two fractions, so that's for the first column. That's for instructions, and then one fraction for the other value. Now if we go to the big screen, check it out, we have the instructions, as well as ingredients and tools in a second column. And then slowly but surely, let's start working on those instructions. So we're looking for single instruction. And first, I want to go with header. And this is going to be a display grid. So now of course I'm dealing with this step, the horizontal line that we cannot see, as far as the setup is going to be grid template columns. We're looking for auto, one fraction, show the step will have its height, or I'm sorry, its width, and the horizontal line is going to take up the rest. I also want to add a little bit of gap here. I'm going to go 1.5 RPMs. And what's that one that horizontal line in the center? We're going to go with a line items on center. Sir, it the reason why we don't see anything is because we haven't styled that horizontal line. So why don't we do that? First, let's go with single instruction when we're looking for the header, and then more specifically a div. And here, let's go with height, two pixels. And background will be a gray one. And I think I'm going to go with that 300 we have our single recipe. That's good. And we also have that horizontal line. Now there's still some things we need to add. Don't worry about it. As long as you can see this horizontal line. That means that we are moving in the right direction. And I'm going to hop back to the header and more specifically, the paragraph. So we're living A single instruction van will import a header. And instead of the day, we're looking for the paragraph. And in this case, I want to go with text transform, and set it up as uppercase. Now, of course, we're dealing with that step one, two, and three, then let's go with font weight. And we'll set it up as 600. Gray. And let's add right away a margin bottom to be zero, margin bottom, zero, and I also want to change the color. And I'll set it up as primary. And once we save everything works, lastly, when it comes to the instruction, so this one over here, I want to set up a different, Great North target that since I don't want to select this paragraph over here, I'm just gonna say, single, single instruction, one error, and I'm just targeting the paragraph. And you're not actually need to remove this error, my bad. So basically, I'm looking for the entire paragraph, therefore algos single instruction. And only the direct child of that instruction, which is the paragraph will have that color and gray. So go here with color. And for gray. I think I'm going to go with seminar. Now, of course, this one is a little bit lighter. If you don't believe me, can actually send this up as 300. And you will clearly see that I'm targeting the correct paragraph when we want to style the second column. So let's keep moving, we'll say second column. And in this case, there's not much to it, we'll say display grid, we're looking for grid in this case. Now I do want to add a program, that's going to be equal to two RPMs. So that's the distance in between. and knowledge just started the single ingredient, as well as single tool. Now when it comes to single ingredient may again make sure that I spell this correctly. I'm looking for a border bottom border bottom. Now it's going to be two pixels solid. And we're looking for two gray one. So let's set up here var and then we're looking for gray, and then 300. That's going to be the border. I also want to add a little bit of padding in the bottom, padding bottom zero point 75 RPMs and nine as far as the color, I'm going to go with that gray 700. And, same goes for single tool, single tool in here. We'll go with the same border, show copy and paste. Same goes for padding. So pretty much the same stuff. Just the colors are going to be different, where I'm going to go the color for my primary 500 and then as far as text, I just want to capitalize, so text transform, set it up as capitalized. And once all of this is in place, we're done with the project. Congratulations. And I hope to see you in the next one.
