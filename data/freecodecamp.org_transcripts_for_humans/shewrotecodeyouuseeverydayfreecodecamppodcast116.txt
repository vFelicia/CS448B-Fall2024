With timestamps:

00:00 - [Music]
00:19 - hey welcome back to the free Coke Camp
00:21 - podcast I'm Quincy Larson teacher and
00:24 - founder of freecodecamp.org each week
00:26 - we're bringing you Insight from
00:28 - developers founders and ambitious people
00:30 - who are getting into Tech this week
00:32 - we're talking with Jessica Lord Jessica
00:35 - worked as a software engineer for more
00:37 - than a decade at companies like GitHub
00:39 - and glitch uh she created the electron
00:42 - team at GitHub if you haven't heard of
00:43 - electron it's a library for building
00:46 - desktop desktop apps using browser
00:49 - Technologies and if you've used the
00:51 - desktop version of slack figma VSS code
00:54 - then you've used electron Jessica you're
00:57 - over in London how's the weather over
00:58 - there dim dim this is the the natural
01:03 - light we've got really
01:05 - today awesome well I hope it clears up a
01:08 - little bit and you get a little bit of
01:09 - Sun at least well we're so happy to have
01:11 - you on the podcast and real quick before
01:13 - we jump into our conversation I want to
01:15 - thank the
01:18 - 8,427 kind people who support our
01:20 - charity each month and who make this
01:23 - podcast possible you can join them and
01:25 - support freec Cod Camp's Mission at
01:27 - freecodecamp.org donate or you can click
01:30 - the link in the description so Jessica
01:33 - you are the first person I've ever
01:35 - talked to who is both a Lord and a
01:40 - lady it's true it's true I really like
01:43 - having this last name sometimes the male
01:45 - comes for me as Lord Jessica just
01:48 - depending on how their database spits
01:50 - out addresses um also fun fact
01:56 - emically emically is that is that right
01:59 - emically
02:00 - yeah and their shared emology is that
02:03 - they have to do with bread Keepers so
02:06 - Lord is like a loaf Ward and over many
02:10 - years it got smooshed into Lord and then
02:12 - lady was a a loaf maiden like Neer like
02:17 - bread Neer and then that also got
02:19 - smooshed and so Lord and Lady come from
02:22 - like the people who had to deal with the
02:24 - bread interesting so like you think of
02:27 - those people as like High Society you
02:29 - know and nobility essentially and yet
02:32 - you know they were originally just like
02:35 - terms for people that worked alongside
02:37 - you know the farmers and everybody else
02:39 - inet said it was a loaf Ward so like or
02:42 - Ward so the person who gave out guarded
02:45 - guarded like the bread because I guess
02:48 - it was maybe valuable then so yeah well
02:52 - I imagine it was valuable back in like
02:53 - medieval times and stuff get yeah
02:56 - everybody's working really hard to to
02:57 - make all the inputs to make that bread
02:59 - possible so you got to guard the
03:01 - finished product right um but like I
03:03 - mean you wouldn't think of like the you
03:05 - know the mall security like watching
03:07 - over the the Apple Store uh you can
03:09 - think of that person as being like some
03:10 - elevated person in society today right
03:14 - yeah I think it's like back when spices
03:16 - and sugar and maybe bread had to be
03:18 - locked up in kitchens yeah well I mean
03:22 - like wars were fought over spices right
03:24 - like territories were conquered over
03:26 - spices people people really love uh
03:28 - having tasty food
03:32 - yeah
03:33 - so I am very interested in like learning
03:36 - a little bit more about your background
03:37 - obviously you've worked in tech for a
03:39 - long time you probably have tons of
03:41 - amazing War Stories and tons of stories
03:44 - of like getting things done uh with the
03:46 - many projects you've worked on but I
03:48 - always like to like have some sort of
03:50 - chronology to my podcast so that people
03:53 - can like understand how you got you are
03:57 - like you grew up in the states yeah yeah
04:00 - I I lived in the states until three
04:02 - years ago I'm like I'm I'm technically
04:05 - British by the skin of my teeth like two
04:08 - technicalities including my mom being
04:10 - born on an Air Force Base during
04:13 - Birthright citizenship years so oh okay
04:15 - so they they had something called
04:17 - Birthright citizenship at one point is
04:19 - yeah which America has today still right
04:22 - if you're born in America you're
04:23 - American but not the case here but they
04:27 - did have it um back then yeah yeah well
04:31 - so when did you find out that you were
04:34 - British or had some claim to like a
04:35 - British passport 3 years ago I just yeah
04:39 - I moved quickly after getting it but I I
04:42 - was always
04:44 - unsure um because being a military child
04:47 - my mom moved really quickly from here
04:50 - she kind of she has no memory of this
04:52 - place she left when she was two um but
04:55 - she has a British birth certificate and
04:57 - there was another gacha which is the K
04:59 - didn't give women the right to pass on
05:01 - their citizenship until January 83 I was
05:05 - born in September of that year so I was
05:07 - the right side of that and because of
05:09 - those two things I qualified and so a
05:12 - friend actually recommended like an
05:14 - immigration lawyer and I spoke to them
05:17 - and I was like here are all the things I
05:18 - know does that make me British and they
05:20 - were like
05:21 - yeah am I British enough wow that's
05:26 - crazy so three years ago like yeah uh so
05:30 - 83 I was bornn in 80 so three and a half
05:34 - maybe yeah yeah yeah so I mean you lived
05:38 - like the first 30 plus years of your
05:40 - life like totally oblivious of your
05:42 - roots I guess yeah yeah yeah it's so
05:47 - cool that like the moment you could you
05:48 - picked up and like
05:51 - just yeah and it was it was in 2020 and
05:54 - so it it's the middle of the pandemic
05:56 - too and I still made it happen wow
06:00 - awesome well let's talk about like so
06:02 - where did you grow up uh I mean probably
06:05 - a lot of places if your parents were in
06:07 - the military right well so it was my
06:09 - mom's grandparents who were in the
06:10 - military my parents weren't and so I
06:13 - grew up in one place okay where was that
06:16 - yeah so it's like Warner Robbins Georgia
06:19 - shout out if like anybody listening
06:22 - knows about Warner Robbins Georgia it's
06:24 - in the region called Middle Georgia it's
06:27 - the geographic center of the state or
06:29 - the heart of Georgia
06:32 - and yeah
06:34 - it's it's
06:37 - where okay the heart of Georgia yeah
06:40 - there's it's just it's a lot of small
06:43 - towns we do have a big Air Force Base
06:45 - there which employs a lot of people and
06:47 - brings a lot of people to wner Robins
06:50 - usually though if anyone's heard of any
06:53 - town in Georgia that's near it they've
06:55 - heard of mon which is also in Middle
06:58 - Georgia so
07:00 - yeah so
07:02 - monish okay so it a pretty small town
07:05 - like it's not like some bustling
07:06 - Cosmopolitan place like where you live
07:08 - now no yeah and what was your childhood
07:12 - like super suburban sprawl it was I mean
07:16 - my childhood was good it was a very
07:18 - Suburban childhood lots of subdivisions
07:21 - and things but also subdivisions in
07:23 - between Farms so goat farms
07:27 - and like crop farms and then a
07:30 - subdivision called like River
07:33 - Wind that's like the name of a casino in
07:36 - Oklahoma where I grew up a River
07:39 - Wind so it definitely evokes that kind
07:42 - of like Suburban kind of uh like pining
07:45 - for like not being somewhat agrarian
07:47 - like we celebrate The Agrarian in
07:49 - Oklahoma and yet like it's Suburban like
07:52 - it's like yeah you look at it it's just
07:54 - a bunch of you know culde saacs and
07:56 - stuff so yeah um that's cool and by the
07:59 - way if anybody who hasn't heard the Rush
08:01 - song uh subdivisions amazing song from
08:04 - the 1980s I'm gonna link to it you got
08:06 - to listen to that after this it's just
08:08 - such a cool song and it's about growing
08:10 - up in the suburbs because like you know
08:12 - the rush that they were kind of they
08:14 - didn't like the fact that they grew up
08:16 - at the subs they wanted to grow up at
08:17 - the city but like yeah pretty cool song
08:20 - uh subdivision I'm just making a note to
08:22 - add that to the show notes subdivisions
08:25 - such a cool song it's got this iconic
08:27 - like 80s like huge Sy sound uh
08:32 - so you were over there and
08:35 - uh when did you decide that you wanted
08:38 - to get into technology and computers and
08:41 - you know the people aspect of Technology
08:43 - as well it sounds like well so my career
08:46 - in Tech actually started so much later
08:51 - but I got really into Tech
08:54 - myself when I was like in middle school
08:57 - early High School um but I genuinely and
09:01 - I've like tried to reflect back on this
09:03 - because now actually having been in tech
09:06 - for a decade plus now I'm like how how
09:12 - was it that I as this like girl in
09:14 - Middle
09:15 - Georgia was like programming on her own
09:18 - I didn't have any friends who did it but
09:20 - I was like I was spending my allowance
09:23 - money on like HTML books and I was
09:27 - building myself a personal website every
09:30 - two weeks like rebuilding it from
09:31 - scratch using like Photoshop 7 or
09:34 - something building new Suites of buttons
09:38 - every time um I was like in M IRC
09:42 - writing scripts there
09:45 - and and I I did yeah I didn't have like
09:49 - a community of friends that were into it
09:51 - and I
09:52 - genuinely didn't think it was a career
09:55 - or I couldn't imagine what a career in
09:58 - Tech would be like so it was a hobby it
10:00 - sounds like then yeah yeah yeah so you
10:02 - just approached it like you were just
10:04 - intellectually curious about yeah you
10:06 - know HTML CSS like a lot of the early
10:08 - web Technologies which ultimately became
10:10 - like the backbone of web Technologies
10:13 - because if it's if it ain't broke don't
10:14 - fix it right like as every engineer
10:16 - cringes a little bit when they hear that
10:18 - but yeah uh we just built all kinds of
10:20 - layers of abstraction on top of these
10:22 - these yeah HTML CSS I was ftping files I
10:28 - guess I was writing Pro scripts like for
10:31 - for MRC and and so MRC you said you
10:35 - didn't have any friends but if you were
10:36 - on IRC you were probably talking to a
10:38 - lot of people yeah I had like internet
10:40 - friends but not Middle Georgia
10:44 - friends so how old were you when you get
10:46 - got internet
10:48 - access it must have been like late
10:52 - middle school early high school so like
10:56 - I don't know six seventh
11:00 - mhm yeah yeah that's about when I got it
11:02 - I I remember going to nintendo.com they
11:05 - had chat rooms and I would just hang out
11:07 - and talk with people about Nintendo
11:09 - games and stuff and got exposed to a lot
11:11 - of things that a 13-year-old kid
11:12 - probably shouldn't be exposed to but uh
11:14 - yeah it was it was really interesting uh
11:17 - and I I mean like internet friends you
11:19 - used to have internet friends and then
11:20 - you had your friends that you actually
11:21 - like hung out and ride bikes with and
11:23 - stuff right yeah totally totally and
11:27 - yeah all my friends at school and in the
11:28 - neighborhood Ood had no idea or interest
11:32 - I have a brother who's just a year
11:33 - younger than me also no interest in any
11:36 - of this and so it was just my like side
11:41 - thing and I was super I was super into
11:44 - it I I I'm proud I was a really good
11:47 - child and I didn't get in trouble a lot
11:50 - yeah but I genuinely like when I did get
11:54 - um like grounded and stuff the things I
11:57 - got grounded for were not taking ey
11:59 - breaks from the computer and because
12:02 - like in the very early internet computer
12:04 - days my mom was super stressed about me
12:06 - looking at a screen for too long and so
12:08 - there were rules about how I had to take
12:10 - a 15 minute eye break after every hour
12:13 - or something wow and I just like I
12:15 - wouldn't get off the computer I wouldn't
12:17 - take my eye breaks and that's what I
12:19 - would get in trouble for yeah that
12:22 - reminds me of like all the concern
12:23 - around screen time which you know there
12:25 - it might be well founded but I just
12:26 - remember during the pandemic like
12:28 - suddenly all those rules just kind of
12:29 - went out the window people let their
12:31 - kids use the tablet as much as they
12:32 - wanted so they get some sanity for
12:35 - themselves uh but yeah so it's
12:37 - interesting to hear that your parents
12:38 - were like very concerned about your your
12:40 - health and your eye Health uh at a young
12:43 - age My Eye Health
12:44 - yeah they were like it's cool you're
12:47 - interested in this but please protect
12:49 - your eyes yeah yeah so um
12:55 - you wanted to did you want to get out of
12:57 - the burps did you like Suburban life
12:59 - like
13:01 - I I mean I didn't know anything else we
13:04 - were just like a workingclass family in
13:06 - Middle Georgia you know our like
13:08 - vacations were just you would drive to
13:10 - Florida right so it's like everything
13:12 - was kind of the same in that respect
13:14 - like the biggest place I'd been to was
13:16 - Atlanta until I went to college in
13:20 - Atlanta um and so I just didn't know
13:23 - that much but I I had always loved
13:25 - architecture and if I wasn't like doing
13:29 - doing weird MRC script writing I was
13:34 - also using really random like 3D house
13:37 - Builder software that I would buy at
13:39 - Walmart and um or just drawing plans on
13:42 - graph paper and my dad is a builder and
13:46 - has done a bunch of construction work in
13:48 - building himself and my parents were
13:51 - always
13:53 - into houses and and because I grew up in
13:56 - this like sprawling suburb place there
13:59 - was always a new subdivision being
14:01 - developed and so I feel like every
14:03 - weekend for most of my childhood we
14:06 - would go check out a new subdivision and
14:08 - walk around the houses under
14:09 - construction and my parents were like
14:12 - you know interested in like where
14:14 - kitchen layouts were and where this was
14:16 - and I started learning about how houses
14:18 - were built and thinking about space and
14:22 - um yeah I mean when I was a kid I didn't
14:24 - even give two thoughts to you know why
14:28 - houses were the way they
14:29 - it's just a house I had like zero
14:31 - intellectual curiosity and today there
14:32 - are like several TV stations that are
14:35 - like dedicated just to like building
14:37 - house house construction house
14:38 - remodeling you know tons of reality
14:41 - shows around like uh like oh we
14:43 - surprised them by completely remodeling
14:45 - their house when they didn't even
14:46 - realize it and now it looks all art
14:48 - decoy or something right yeah yeah
14:50 - that's cool and so like
14:53 - I I I guess I knew that that was a job
14:57 - right like building house houses was a
14:59 - job and I didn't really know what kind
15:02 - of jobs were computers and and so like
15:06 - yeah when I went to University my mom
15:08 - was surprised they didn't do computer
15:11 - science I chose architecture well
15:14 - architecture does use a lot of
15:15 - Technology right like you're modeling
15:18 - things you're probably rendering a lot
15:20 - of stuff maybe you could talk a little
15:21 - bit more about that a bit there was
15:24 - actually at least when I was in
15:26 - university still a really strong because
15:27 - it architecture is this this like
15:30 - collision between technology but also
15:35 - art and and creativity so there was this
15:38 - really strong emphasis on like we had to
15:41 - like really like know the plans we were
15:44 - drawing physically and so we were not
15:46 - allowed to submit like final designs in
15:49 - CAD even though like CAD of course
15:51 - existed yeah then but we had to like
15:54 - draw them with our hands and learn to
15:57 - like feel them
15:59 - so it was it was a kind of a tactile
16:01 - like experience like you would actually
16:03 - would you actually carry those big tubes
16:05 - with like architectural Blueprints and
16:06 - stuff or around campus so yes I mean but
16:10 - we also had architecture studio so you
16:12 - would have a dedicated desk and lockers
16:14 - so that you didn't have to Lug so many
16:17 - supplies around and the architecture
16:20 - Studio was like the only building on
16:22 - Georgia Tech campus that was open 24
16:24 - hours a day like Atlanta police officers
16:27 - sometimes came by and brought us Donuts
16:29 - because we were there like slicing our
16:31 - fingers open building models at 400 a.m.
16:34 - after not sleeping for two days so you
16:37 - would like actually use like the that
16:38 - foam stuff and like actually sculpt
16:41 - buildings yeah yeah yeah and like
16:44 - chipboard and and wood and stuff and we
16:47 - had to yeah we had to draw the plans
16:49 - build the models for them do the
16:51 - topography for you know like the
16:54 - Hillside and things that they were built
16:56 - into when I was living in tingan there
16:58 - was like giant kind of like diarama
17:00 - Museum and it was just diaramas of
17:02 - different parts of the city and so you
17:04 - would stand on this giant like kind of
17:06 - like thing and you look down at like
17:08 - this recessed kind of like platform that
17:11 - was just covered in like models of
17:13 - literally every building in the city and
17:16 - I was like wow like it must have taken
17:17 - so much work to like figure out like
17:20 - where everything was and like map it out
17:21 - and then actually build it out so you
17:23 - were building things like
17:25 - that yeah yeah I mean not at City scale
17:28 - we were building it for like you know
17:29 - the building that we were building on
17:31 - the piece of land that it was on but
17:34 - yeah yeah yeah I mean it does sound like
17:36 - a lot of fun it's like Lego blocks to
17:38 - the next level basically where yeah did
17:41 - you play with Legos as a kid oh for sure
17:44 - for sure yeah yeah my kids love Legos
17:46 - and like we go to the mall I don't know
17:49 - if you see those Lego flowers back there
17:51 - like every time we go I'll get them like
17:52 - a different Lego flower and they'll
17:53 - assemble it and we'll put it in that
17:54 - little bouquet back there but um yeah
17:57 - that's so cool so so one of the things I
17:59 - have of course I'd love to hear more
18:01 - about architecture school but uh for the
18:04 - sake of our audience who may not be that
18:06 - interested in architecture um I I'm
18:09 - really interested in how software and
18:12 - Technology were used at the time and how
18:15 - that has progressed even I don't know if
18:16 - you still follow the field of
18:19 - architecture and of uh you know like
18:22 - Civic planning and and these other
18:24 - related urban urban planning uh if you
18:27 - still follow these fields and read any
18:29 - of the journals or or watch like
18:30 - YouTubers that talk about this stuff but
18:33 - like what was the technology like back
18:35 - then and how has it
18:38 - changed so I I still have one foot in on
18:42 - all of that stuff I'm sure there's
18:45 - plenty of stuff I don't know about but
18:47 - what eventually was frustrating for me
18:50 - is so I graduated with architecture
18:52 - degree worked as an architect for a year
18:54 - then I went to Boston City Hall and I
18:56 - was an urban designer there and I worked
18:59 - in the Urban Design Technology Group and
19:01 - I was like this is perfect like this is
19:04 - the role I'll be in for the rest of my
19:05 - life it's like clearly made for me I
19:07 - love computers I love cities um and I
19:11 - came to learn there was not a lot of
19:13 - Technology
19:15 - actually um and that I you know was one
19:18 - of the youngest people there and the
19:21 - person who had the best idea about what
19:24 - current technology was but I mean at the
19:27 - time at City Hall we were using CAD um
19:33 - sometimes like Google SketchUp and I
19:34 - think someone else has bought SketchUp
19:36 - now and I forget who owns that um when I
19:40 - so when I first graduated and
19:44 - did the architecture job we were using
19:47 - Revit which was kind of a big deal then
19:50 - of like building information modeling of
19:52 - like it used to be when you did Cad and
19:54 - you had a plan and you moved a window in
19:56 - it you then needed to move that window
19:58 - in the section in the elevation and
20:01 - everywhere else but um Revit so you you
20:05 - can like cluster things together so you
20:07 - can move like entire like I gu
20:10 - collections of elements kind of like how
20:12 - you can like set everything as a group
20:14 - or a layer in like Photoshop and move it
20:16 - at once yes exactly you could move the
20:18 - window once and it's moving everything
20:21 - else like it's moving that window and
20:23 - all other related documents it can
20:25 - create the other documents for you it
20:27 - can do building material calculations it
20:30 - can do renderings and so it was the next
20:35 - level and it was such a big learning
20:37 - curve still at that time that a lot of
20:39 - architecture firms were still stuck on
20:41 - CAD because like the inertia to get
20:44 - everybody there to learn this new
20:46 - software but I I was lucky in that I
20:49 - joined a very small Architecture Firm um
20:52 - and so we did switch to yeah I mean and
20:56 - CAD is like a primordial tool like it is
20:59 - I mean CAD computer AED drafting right
21:01 - we used it in wood shop class when I was
21:03 - a kid and I mean I'm sure that there are
21:06 - like industrial versions of CAD that are
21:08 - way more powerful and everything but
21:09 - like I I think of CAD for Designing like
21:12 - you know like something that you're
21:14 - going to uh
21:15 - machine like a part right uh some small
21:19 - like widget that you're going to put
21:20 - into like an engine or something not for
21:22 - Designing something is complicated and
21:25 - you know deliberated upon uh and impr
21:28 - precise is like a house I guess like if
21:30 - somebody wants to have their dream home
21:32 - they probably don't want to be using CAD
21:34 - to build right no you absolutely do CAD
21:36 - really precise like yeah well I mean
21:38 - it's extremely precise it's extremely
21:40 - precise but what I'm thinking is like I
21:42 - mean with a part like the the design
21:44 - considerations are probably pretty baked
21:46 - in and maybe you wouldn't go through as
21:48 - much iteration as you would with like a
21:50 - house like okay now we're going through
21:52 - this rendering of the house and like I
21:53 - don't like where this this bathroom is
21:55 - or something like like okay well let me
21:57 - just move the 20
21:59 - five polygons or whatever that make up
22:01 - this bathroom individually to a
22:02 - different part of the house and yeah I
22:04 - can just imagine that being like a lot
22:06 - of work well you also start on paper too
22:10 - right and sketch and work with a client
22:13 - and so by the time it even gets into CAD
22:15 - it's gone through so much iteration just
22:17 - because getting things into CAD is
22:19 - probably very expensive in terms of time
22:21 - and I'm sure there's like different like
22:23 - versions that do have like shortcuts and
22:26 - like component libraries and stuff that
22:28 - make make some of this easier too but
22:30 - there was still a very big leap between
22:33 - like Cad and the like building
22:36 - information the Bim building information
22:38 - modeling system software building
22:42 - information modeling B BM yeah yeah so
22:45 - that's a jonro software that I just
22:47 - learned
22:49 - about awesome well
22:52 - um I'm very curious so of course I'm
22:55 - curious like what you did after you got
22:56 - out of school but but while we're on the
22:58 - top a school you went to one of the
23:00 - Premier engineering schools in the
23:02 - United States uh Georgia Tech I've had I
23:05 - think several Georgia Tech alums on the
23:08 - Freo Camp podcast uh they have you know
23:11 - a very prestigious computer science
23:14 - degree program and so you're studying
23:17 - architecture but you're interested in
23:18 - computers did you ever think like maybe
23:20 - I should switch to computer science or
23:22 - honestly get this is something I've
23:24 - reflected on now that I'm this many
23:26 - years outside of having switch to Tech
23:29 - full-time because yeah I went in to
23:32 - Georgia Tech doing architecture they
23:35 - definitely had a computer science
23:37 - program but still like I like I think I
23:40 - just couldn't imagine and I think that
23:42 - sounded really boring to me um like what
23:45 - kind of job would that be and so I did
23:50 - architecture um but Georgia Tech at the
23:52 - time was one of the few or only schools
23:55 - that required all majors to take a CS
23:59 - course to graduate you had to take like
24:01 - an intro CS course and it was my easiest
24:04 - a at Tech like I really like I had
24:07 - architecture studio is nuts it's so it's
24:11 - so subjective and it takes a lot of
24:14 - hours architecture Studio was worth like
24:16 - a lot of credit hours too and so it was
24:18 - like it weighed heavy on your GPA and
24:21 - yeah it was just like down to like does
24:23 - someone like the way you did this
24:26 - compared to like my friends who are in
24:27 - other major where it's like it's science
24:30 - there are like really clear answers to a
24:32 - lot of these like objectively right
24:36 - um yeah so it was like doing the
24:39 - computer science class was my easa at
24:42 - Tech all my
24:44 - architecture like fellow Majors they
24:47 - really struggled with it we did like
24:50 - gyon which was like Java python
24:53 - something and sounds fun created it it
24:57 - was fun we created like scripts um and
25:01 - and made websites and then I took like a
25:04 - few other like CS courses like that went
25:09 - wherever I could like for electives and
25:11 - stuff and yeah it was like fun and easy
25:14 - for me but I still was like but this
25:16 - isn't a jaw yeah so it sounds like you
25:20 - just kind of viewed I mean throughout
25:22 - your entire childood you almost kind of
25:23 - took technology for granted to something
25:26 - that was fun and interesting but it
25:27 - wasn't like a serious field you could go
25:30 - into and
25:31 - like yeah at what point so you're
25:34 - working for Boston you know massive city
25:37 - in the United States esteem for its very
25:39 - old architecture yeah all right because
25:41 - it's one of the oldest cities in the
25:42 - United States so it probably has like
25:44 - buildings from like pretty much every
25:45 - period from the past 400 years 300 years
25:49 - I don't know um what was what was the uh
25:53 - I guess the path from doing that to
25:56 - working as a software engineer because
25:57 - obviously you did transition into
25:59 - software engineering yeah yes so like I
26:03 - said I was in the Urban Design
26:04 - Technology Group and I was feeling a bit
26:08 - frustrated that there wasn't as much
26:09 - technology as I thought there should be
26:12 - there and that considering the name of
26:13 - the organization for sure right you
26:15 - think they would have a technology
26:17 - Focus right and I didn't want to be the
26:20 - person like I didn't have anybody else
26:22 - to ask or talk to about technology there
26:26 - are some things I felt like I was hid
26:28 - my head against a wall trying to get
26:30 - some things going I felt
26:32 - like you know at the time I didn't know
26:35 - about the term open source and the open
26:37 - source Community but one of the things I
26:39 - was really wanting to make happen at the
26:41 - city was that cities should share their
26:44 - ideas and their thinking I like kept
26:47 - trying to push for us to have a Blog
26:48 - where we talked about like the planning
26:50 - initiatives or we talked about the
26:51 - things that the urban designers and
26:54 - Architects at the city were thinking
26:56 - about because yes like City are
26:58 - different but also they're the same and
27:00 - they share a lot of the same
27:02 - problems and
27:05 - eventually I had been there like three
27:07 - years or so and this thing called code
27:10 - for America started and had its very
27:12 - first year where it was
27:16 - partnering with um cities to build open-
27:21 - Source software that cities could share
27:24 - and so even though that was like
27:25 - genuinely what I was like trying to do
27:28 - and hoping to do when I was at the city
27:31 - I still I still was like this is
27:35 - cool but again I don't think I want to
27:38 - write code all day that just seems
27:40 - really
27:41 - boring and so I really I I spent almost
27:46 - the whole year working with some of you
27:49 - know the teens that they were working
27:50 - with and knowing about it and it wasn't
27:53 - until the very last minute I was like
27:55 - well it's free to apply why don't I
27:59 - apply and at the time I was considering
28:01 - like should I go to grad school for
28:04 - something and I it was like I might as
28:08 - well just apply and I applied and then I
28:11 - got it and I was
28:14 - like okay well I'm going to go do this
28:16 - I'm going to go spend a year basically
28:18 - geeking out and being able to actually
28:20 - talk about
28:22 - technology with other sort of Civic Tech
28:25 - nerds and be able to bring it back to
28:27 - cityall Hall spoiler alert I did not go
28:31 - back to see Hall let's talk real quick
28:34 - about code code for America So for
28:35 - anybody who hasn't heard of it like it's
28:37 - an organization I greatly admire uh
28:39 - Jennifer paa I think is her name the
28:42 - founder like she started it you know
28:45 - this is probably like 20 2009 2010 like
28:48 - is that about when you yeah so the first
28:51 - Fellowship year was 2011 and then I was
28:53 - in the 2012 Fellowship year so you were
28:56 - very early to
29:00 - this that
29:01 - esss developers with
29:05 - people right and tries to like like hey
29:08 - how can we fix your sewage problem with
29:10 - technology or something like that right
29:12 - yeah yeah and I I mean I think they've
29:14 - changed the model a bit now but during
29:17 - the first few years when it was
29:19 - primarily a
29:21 - fellowship fellows like me would apply
29:24 - to be the fellows and then cities would
29:27 - apply with a problem they had that they
29:30 - want the fellows to solve and so then
29:33 - the organization would pick a group of
29:35 - fellows and then pick a group of cities
29:38 - and then everyone worked together to try
29:41 - and solve that problem with open source
29:43 - software that other cities could use
29:46 - yeah that sounds cool and how has it
29:47 - changed just out of curiosity because
29:49 - you said they're not necessarily using
29:50 - that approach anymore so I don't know
29:53 - all of the details
29:54 - actually um but I think I think it sort
29:57 - of works more as like a consultancy now
29:59 - but I could be totally wrong um I think
30:03 - the primarily Fellowship stuff lasted
30:05 - for like five or so
30:08 - years yeah that's so they's they're
30:10 - still doing like human centered open
30:13 - source government work but I think in
30:16 - terms of like H Staffing that and like
30:20 - having a longer running project rather
30:22 - than projects that get spun up then shut
30:24 - down like every year they they iterated
30:27 - on that yeah well I would love to
30:29 - eventually get Jennifer on the podcast
30:32 - uh aspirational goal of mine like maybe
30:35 - I'll just cold reach out to her if if
30:36 - you know anybody I can talk to like
30:38 - definitely send me a link because I
30:39 - would like to uh learn about the history
30:41 - of the organization again it's an
30:43 - organization that I deeply admire uh and
30:45 - was really inspiring and I have a lot of
30:47 - friends who went through it it's I I
30:48 - kind of joke that it's like the peace
30:51 - score for people that just want to code
30:53 - and don't want to go overseas yeah yeah
30:57 - yeah we used to say it was peace core
30:59 - for geeks peace peace core for geeks
31:02 - okay so I'm not that far off from what
31:04 - people are thinking but it you know it
31:06 - sounds like a great bridge into working
31:09 - as a Dev because you're kind of working
31:10 - as a Dev but you don't have to go
31:13 - through like the grueling interview
31:15 - process and you don't have to explain
31:16 - yourself to hiring managers and stuff
31:18 - did having a year of working with code
31:21 - for America help when you went into the
31:24 - job search later on well so it yes it
31:28 - helped that it also showed me what
31:32 - writing software as a job actually
31:34 - looked like and what the other people
31:36 - who did that were
31:37 - like um and so it really sort of became
31:41 - real in my mind rather than like all
31:44 - these years I had been like no there's
31:46 - definitely no way I want to program all
31:48 - day
31:50 - um but I I also fell into the right
31:53 - place at the right time in terms of like
31:56 - San Francisco and 2012 and on and I and
32:00 - like code for America was great at
32:03 - really connecting you with other people
32:06 - and other like interesting open source
32:09 - developers and organizations and so I I
32:12 - fell into JavaScript and node at the
32:15 - right place at the right time and got
32:17 - really involved um in node then and and
32:21 - so I got really energized then in that
32:24 - year like seeing like oh this is what a
32:28 - career in software development looks
32:30 - like and I got really excited you know
32:32 - with the people I met who were doing
32:34 - software and I got excited and energized
32:37 - by how fast things went especially
32:40 - having come from the last three years
32:42 - being at City Hall where things don't
32:45 - move fast and maybe they shouldn't move
32:47 - fast certainly but yeah I mean there's
32:48 - some Merit to things not changing too
32:50 - quickly when it's government related
32:53 - yeah um but it was it was really eye
32:57 - open
33:00 - and yeah it it just painted the picture
33:02 - to me of like oh this is like and
33:04 - actually software is creative and you
33:07 - can have fun and um and it's like really
33:10 - collaborative and stuff and and it
33:12 - finally also put a name to open source
33:15 - because like I said I didn't really know
33:17 - about open source I didn't know about
33:19 - the open source Community I had always
33:21 - been in this little bubble of my own um
33:24 - writing code for fun and so once I so
33:29 - like really started to then understand
33:31 - like the open source Community the role
33:33 - of GitHub and open source and stuff it
33:36 - just it just filled in a lot of blanks
33:39 - for me I'm I'm definitely like sensing
33:42 - kind of like a theme in your I guess
33:45 - your history and your your career
33:47 - progression and all that and one of the
33:49 - things you've always emphasized is
33:51 - wanting to help people collaborate right
33:54 - and do you think that this childhood
33:57 - where you like the only person who was
33:59 - into technology and you had internet
34:01 - friends but you didn't really have like
34:03 - real in inperson collaboration do you
34:06 - think that that kind of like spurred you
34:08 - to like I want to increase the amount of
34:09 - collaboration in the
34:12 - world I don't know maybe like for some
34:16 - reason I've always really cared about
34:18 - the idea of like shared knowledge so I
34:21 - remember like when I applied for code
34:23 - for
34:25 - America I you know didn't have like that
34:27 - much to show I done like super random
34:30 - stuff I had done some websites for the
34:33 - city for planning projects and things
34:36 - but I also had like a personal blog that
34:38 - I did with my best friend still online
34:41 - called ecab EAB online ECA b
34:46 - o online however you spell online um
34:50 - where we it's like all how to make and
34:53 - sew things but we would draw tutorials
34:56 - and diagrams and I
34:58 - I was just
34:59 - really I don't know why but I've always
35:02 - just felt like it's important to like
35:04 - work in the open and share what you're
35:06 - working on and share
35:09 - knowledge
35:11 - and yeah I don't I don't know and I
35:14 - don't know where that I don't know this
35:16 - is so cool I mean like the it looks like
35:18 - a Google Blog blogger blogger BL from P
35:23 - yeah oh man so cool like your own pencil
35:28 - JY Pala saw that site and was like yeah
35:30 - this person cares about like sharing
35:33 - knowledge and so I was like yes my craft
35:36 - Blog has helped
35:39 - me yeah awesome I'm GNA link to that in
35:41 - the show notes for anybody who wants to
35:42 - check it out note that the uh https like
35:45 - it it it wasn't um like yeah I don't
35:49 - know maybe that's something you just go
35:50 - into blogger and configure but it's it
35:52 - looks safe to me I clicked through
35:54 - despite the scary warning from chrome uh
35:57 - yeah so so cool
35:59 - so you maybe you can explain the the
36:02 - process because I'm I'm really curious
36:04 - about okay when you finished code from
36:06 - was it like a preset like I'm going to
36:08 - commit for like one year and then I'm
36:10 - going to figure out what to do from
36:11 - there like you're winding down your time
36:14 - at code for
36:16 - America what is your next step like how
36:18 - how do you approach the next leg of your
36:20 - life yeah so I was winding down code for
36:23 - America I was like having to decide am I
36:26 - going to go back to Boston do I go back
36:28 - to City
36:30 - Hall and I like through connections at
36:35 - the time I got a kind of three-month
36:37 - temporary gig at diy.org to help them
36:40 - build out like challenges so that young
36:43 - people could learn about how browsers
36:45 - and servers worked um and so I came on
36:49 - and was working with them and then I I
36:51 - actually got like a DM asking if I
36:54 - wanted to talk about working at GitHub
36:56 - and so
36:58 - I got lucky in that respect of like I
37:00 - don't think I've even would have thought
37:02 - of applying to gith HUB and
37:05 - so I met up with someone at GitHub and I
37:08 - started the interview process and then I
37:11 - got an offer and I just had that moment
37:14 - well actually the moment I told myself
37:15 - was like this is like really amazing and
37:20 - unbelievable but I thought I was going
37:22 - to go back to City Hall but also in the
37:25 - grand scheme of things I'm only going to
37:27 - be learning learning more that I can
37:28 - bring back to City Hall later so if I
37:31 - just do this for like if I just do this
37:33 - for three years I can go back to City
37:36 - Hall then you know with more knowledge
37:40 - yeah I always kind of entertain this
37:42 - this notion of going back to be a School
37:44 - director and being like the most
37:45 - competent School director ever uh in
37:47 - terms of like being able to take all the
37:48 - Automation and you know management
37:50 - skills I've gotten for free C Camp and
37:52 - just run like a you know a tiny English
37:53 - school or something like that uh so I
37:56 - can kind of relate to that notion that
37:58 - like everything I'm learning I could
37:59 - take more so why don't not learn even
38:00 - more and so that kept repelling you like
38:02 - 10 years in do you still like entertain
38:04 - the notion of going back to to City Hall
38:07 - I do well yes I do actually and I still
38:10 - have some contacts and actually
38:12 - amazingly like another code for America
38:15 - fellow who I think was the year after me
38:18 - is now like chief of staff at the city
38:20 - of Boston um you know and works with the
38:22 - old the department I used to work with
38:25 - there so I think in Boston has always
38:28 - done some really cool stuff um they've
38:30 - had like the office of new Urban
38:32 - mechanics in Boston and they've done
38:36 - cool stuff um so yeah it's still back
38:40 - there in the back of my
38:42 - mind that one day I'll go back did you
38:45 - you didn't have to give up your US
38:46 - citizenship are you like a dual citizen
38:48 - or I'm a dual citizen okay yeah that's
38:50 - one thing like the US does with some
38:52 - friendly countries but with like China
38:55 - and India and a lot of the other big
38:56 - countries they they I guess all the
38:57 - nuclear powerered countries I don't know
38:59 - does does Britain have nukes I can't
39:01 - remember but but yeah like um that's
39:04 - cool so you could still potentially go
39:06 - back and uh and work in in government
39:09 - there I'm not sure if like even if you
39:10 - were a British citizen you might be able
39:12 - to work in the US government I'm not
39:13 - sure what the restrictions are sorry for
39:14 - this
39:16 - tangent my thinking is like Okay cool
39:20 - so you're at GitHub now like or you get
39:24 - this like you know Cinderella story of
39:26 - like not even having interview basically
39:28 - did they still interview you so I yeah I
39:30 - did I did interview I just didn't apply
39:33 - myself like someone reached out to me
39:36 - and started the conversation um because
39:38 - yeah I don't think I would have ever
39:40 - attempted which which completely changes
39:42 - the dynamic is like oh you want me huh
39:45 - okay well like it it probably gave you a
39:47 - lot of like they probably were a lot
39:49 - less rough on you than they would like a
39:51 - peral walk- on who's trying to uh try
39:54 - out for the team it was also 2013 so
39:56 - honestly it was like there were not a
39:59 - lot of like rules and regulations
40:02 - happening at San Francisco companies at
40:04 - that time and I benefited from that for
40:06 - sure yeah like you just maybe you can
40:10 - describe because that was like pre
40:12 - Microsoft acquisition that was like way
40:14 - back in startup land like uh I
40:17 - remember uh you know cuz free Co Camp
40:19 - started in 2014 so this was before even
40:21 - that um and yeah what what was it like
40:24 - getting a job at GitHub do you remember
40:26 - like do they ask you a bunch of
40:28 - interview questions like at the
40:30 - Whiteboard or was it more of like a are
40:32 - you a a GitHub I can't remember the term
40:34 - that they use for people that work at
40:36 - GitHub an octocat hubber yeah hubber
40:39 - okay yeah I'm trying to remember I think
40:42 - I had some small coding exercises and
40:45 - then I had um just some were just
40:49 - sitting down and talking to people and
40:51 - then some were because at that time
40:54 - GitHub had no managers we didn't have
40:57 - have um like we didn't have product I'm
41:01 - pretty sure all the engineers were also
41:04 - designers as well right this was like
41:06 - Mark Otto was there who had done
41:08 - bootstrap I there was very much of like
41:10 - Mar met him I met him at a conference
41:13 - and I was too intimidated to talk to him
41:14 - but I stood by him and like nodded while
41:16 - he talked to his you know click of other
41:19 - developers yeah and so there was very
41:21 - much of like you wear multiple hats and
41:24 - so I also
41:27 - I one of the interviews was just going
41:30 - through one of the GitHub pages and
41:32 - talking about how I would redesign it
41:34 - and code it and like sort of do a walkth
41:36 - through of like interventions to improve
41:39 - the page and why but yeah everyone had
41:42 - to kind of design their own stuff at the
41:44 - time
41:46 - too yeah and then that was and then the
41:48 - job offer I got then it set because
41:51 - again this was like
41:53 - the everything was so it said frontend
41:56 - super star is what literally my title
41:59 - was on the job off wow front end
42:01 - Superstar I've heard I haven't heard
42:03 - that one I've heard like ninja I've
42:04 - heard like you know Master Chef like I
42:07 - can't remember all the all the different
42:09 - like you know names I've heard for job
42:11 - roles but Superstar is a pretty good one
42:13 - you must must have felt pretty good
42:14 - putting that on your
42:16 - LinkedIn I I didn't even create a
42:18 - LinkedIn until like three years ago but
42:21 - that is privilege right
42:25 - there I I I
42:27 - probably had to send it to like
42:29 - landlords and stuff who were like okay
42:33 - this is fake
42:37 - yeah so um yeah what was it like the
42:40 - early days like again this is like and
42:42 - and of course I just want to stipulate
42:44 - that like this is your current job like
42:46 - your current floyer is get up so I'm not
42:48 - asking you to like say anything bad
42:50 - about them or anything like anything you
42:51 - can say if you can't talk about
42:52 - something it's totally cool just tell us
42:54 - you can't talk about it but like what
42:56 - can you talk about do see
42:57 - tidbits the dayto day was there like
43:00 - crazy you know beef jerky and and like
43:03 - uh confectioneries everywhere like did
43:05 - you have like lots of
43:07 - confectionaries I mean there were
43:10 - beverages as well
43:12 - [Applause]
43:13 - there but it was it was very interesting
43:18 - it there were lots of things I liked
43:20 - about it there are lots of things now
43:21 - that I've been in tech for long enough
43:24 - that I knew could never work work in the
43:27 - long run of like we didn't have managers
43:30 - everyone it was like a a sort of land
43:32 - grab freefor all of you went into the
43:36 - repo you clicked issues and you picked
43:38 - something right and you planted a flag
43:41 - and like I'm now like questioning some
43:44 - of these metaphors I'm using yeah but
43:47 - you put your stick in the ground like
43:48 - the Oklahoma Land Run I got to tie it
43:50 - back to Oklahoma yeah you yeah you just
43:53 - you claim stuff and if someone else
43:55 - maybe was working on it would have to
43:57 - work up the courage to ask them like
43:59 - could you join them and work on this too
44:03 - and and yeah so it really benefited
44:07 - stronger
44:08 - personalities yeah um and and people who
44:13 - are friends with each other worked
44:15 - together on stuff and so it was like
44:19 - kind of chaotic at the beginning and and
44:22 - that was during the period when GitHub
44:24 - was really like proud that it had no
44:27 - managers and that and they would say no
44:29 - one will tell you what to do at GitHub
44:32 - yeah which is a fiction because at the
44:33 - end of the day there are things like
44:35 - that you know there are lines you can't
44:37 - cross they may not be visible lines but
44:38 - there are lines yeah yeah I I want to
44:41 - take a moment just to talk about um the
44:43 - role of bureaucracy and the importance
44:45 - of bureaucracy in like militaries and
44:48 - governments and uh even like large
44:51 - corporations like there are some pretty
44:52 - big companies out there like Walmart has
44:55 - like a more than a million employees
44:57 - you know of course the federal
44:58 - government in the US has like 2 million
45:01 - um like even a company like Microsoft
45:03 - might have like hundreds of thousands of
45:05 - employees
45:06 - like if you don't have any sort of like
45:09 - chain of command and like people you
45:11 - report up to it just becomes charismatic
45:13 - leadership you get like the uh the the
45:15 - Wei work guy coming in and like serving
45:18 - tequila shots and right after he fired
45:20 - half the people you know and like you
45:21 - just get like this weird you know kind
45:24 - of like uh the loudest voice in the room
45:26 - becomes The Voice that people have to
45:27 - listen to or or the most imposing
45:29 - threatening tall person who's like
45:31 - looming over you you know or or or the
45:33 - person who just has the most crazy kind
45:35 - of memorable ideas even if they're not
45:37 - good ideas um and I am very cognizant of
45:42 - that because free C Camp like our our
45:44 - organization our charity we don't have
45:46 - like a a chain of command so to speak
45:47 - like I consider myself kind of like an
45:49 - individual contributor and IC alongside
45:52 - everybody else but at the same time I'm
45:54 - very aware that this will not scale and
45:57 - it might work with like 35 people but
45:59 - it's not going to work when we have like
46:01 - hundreds of people you know decades from
46:03 - the future if that ever comes to pass
46:05 - like yeah uh and and so I think what
46:07 - you're describing if I can editorialize
46:09 - a little bit not having ever worked to
46:11 - get up and only knowing a few people
46:13 - that have uh but it probably was like
46:16 - kind of like the growing like going from
46:18 - small founder driven startup to like
46:20 - bigger company and you were there for a
46:22 - lot of that growth like do you remember
46:24 - how many people were working there when
46:25 - you joined I think I was like
46:28 - 175 okay um and when I left three and a
46:32 - half years later we had like over
46:35 - 600 and I think
46:39 - today we have like
46:42 - 3,000 interesting so you came in under
46:45 - the dunar number which is like like the
46:48 - psychological theory that like a human
46:50 - can keep like about 150 human
46:52 - relationships in their mind and so oh I
46:55 - know this person they're on this they're
46:57 - working on this and like you could
46:59 - conceivably know everybody that worked
47:00 - with the company and it's like 100 what
47:02 - what did you say your number was it's
47:04 - like 175 I think okay so you were just
47:06 - over the Dum the dumb Bar number is 150
47:08 - so but but still like you're kind of
47:09 - stretching the dumb Bar number but like
47:11 - once you get up to like 300 plus people
47:13 - then that starts to break down pretty
47:15 - quickly especially if there's like a lot
47:16 - of churn which in Tech famously like I
47:19 - don't know about that era but like it
47:22 - you know the average tenure of a
47:23 - developer at a company might only be
47:25 - like two years or something um yeah like
47:27 - like was was there a lot of was it
47:30 - chaotic back
47:32 - then
47:35 - there yes I yeah I woulda I think
47:38 - chaotic is like a fair word I mean we
47:40 - still did stuff we it wasn't all like we
47:42 - are like chickens with our heads cut off
47:45 - and nothing was getting done we were
47:47 - still doing stuff we still had like a a
47:49 - singular Mission you know
47:53 - but
47:55 - it yeah it but it it experienced every
47:59 - growing pain like I and I but I so I
48:03 - think that there was like a period where
48:05 - it everything felt like it was the right
48:07 - size we all knew each other we all
48:08 - trusted each other and everything was
48:10 - like golden for a while but like you
48:12 - said yeah as it grows and you start to
48:15 - know fewer and fewer people and what and
48:18 - less and less about what's going on um
48:21 - then it then it breaks down more then
48:23 - you need more structure like I mean I
48:26 - remember when we got lawyers and stuff
48:29 - and you grow and you have to go through
48:32 - all of these things
48:34 - and so yes and even still at the at the
48:38 - time that I left
48:42 - originally they were still trying to
48:44 - figure out GitHub had finally sort of
48:46 - caved to having
48:48 - managers um but then it kept
48:50 - flip-flopping about should managers be
48:52 - technical should they know should they
48:55 - have like technical skills
48:57 - in the area they're working on or should
49:00 - they just be people
49:02 - managers
49:04 - um there's something in developer
49:06 - culture sorry to interrupt you but like
49:08 - more than most Fields I think developers
49:10 - want developers as managers they want
49:13 - people that are quote unquote technical
49:15 - because it's it seen as kind of like a
49:17 - badge of an honor like I can yeah go in
49:19 - and I I can go to a whiteboard and I can
49:20 - explain how this this data structure
49:22 - works and I want my manager to be able
49:24 - to do that I don't want to be managed by
49:26 - some you know point pointy haired boss
49:27 - you know as as they're called like
49:29 - Dilbert if you've ever read that comic
49:31 - uh it's it's all about like the the
49:33 - people that like have risen to their
49:36 - highest level of incompetence where like
49:38 - they can't rise any higher so they're
49:39 - just there but unfortunately they're
49:41 - there above you and you have to report
49:43 - to this person who doesn't even really
49:44 - understand the work that you're doing
49:46 - right like that's every developer's kind
49:47 - of like nightmare is reporting to some
49:50 - person whose background was like selling
49:52 - sugary soda or something and then they
49:54 - transitioned in like to use the you know
49:56 - the Apple Steve Steve Jobs bringing in
49:58 - John Scully metaphor like they had this
50:00 - culture of like developers and
50:02 - innovators and then they bring in the
50:03 - Pepsi guy and he proceedes to like run
50:05 - the company to the ground and every like
50:07 - nobody in the company respects him and
50:08 - everything like that right like so I
50:11 - think more so in software engineering
50:13 - than a lot of other fields people want
50:16 - to look up to somebody it would be like
50:18 - if you were like a soldier and like some
50:21 - general son came in to manage you or
50:22 - something who didn't have as much
50:24 - military like you'd be upset and you
50:26 - probably
50:27 - some um what's the term for it
50:30 - like you wouldn't necessarily comply
50:32 - with the rules um and you wouldn't
50:34 - necessarily You' perhaps grudgingly
50:37 - carry out their you'd be insubordinate
50:39 - that's the word I'm looking for did did
50:41 - you sense any of that like when you when
50:44 - GI brought in managers who had like an
50:46 - HR background or had a legal background
50:48 - or something but they were like suddenly
50:50 - over developers did that happen very
50:51 - often um so I don't think people
50:55 - came
50:57 - with like HR illegal backgrounds to
51:00 - become engineering managers but they
51:02 - maybe had been Engineers you know 15
51:05 - years ago and on a completely different
51:07 - Tech stack um or they had come from like
51:10 - a really giant corporation that didn't
51:12 - get the GitHub culture right um and so I
51:17 - think that was where some of those
51:19 - issues were around you know trust and
51:22 - respect and feeling like your your
51:24 - manager even understands what's going on
51:26 - on but I think you know the the inverse
51:29 - there was the problem too of well if our
51:32 - managers are Engineers who know the tech
51:37 - stock deeply they maybe have just right
51:40 - been promoted up into management and
51:43 - gotten a pay raise but actually have
51:45 - none of the skills it takes because they
51:47 - are entirely different skills like being
51:50 - a people
51:52 - manager um but they thought it would
51:54 - further their career and it was more
51:56 - money and so then an engineer like
51:59 - becomes a manager and so like
52:01 - theoretically they understand all of
52:03 - your technical challenges really well
52:06 - but they're awful at the people stuff
52:09 - yeah or maybe they actively kind of
52:11 - avoid the people stuff that people part
52:13 - of their job and they just kind of
52:14 - retreat into like code-based minutia as
52:17 - a way to yeah kind of like use up their
52:19 - time as opposed to like actually
52:21 - cultivating younger Talent or or they
52:24 - really hate not coding and then they
52:26 - keep coding
52:27 - and not doing not not unblocking their
52:30 - people yeah I mean like a manager who
52:32 - complains about meetings that's always
52:34 - like the the worst in my mind because it
52:38 - but I'm not I'm not again I just want to
52:39 - be clear I'm not characterizing any
52:41 - managers that GitHub my own knowledge of
52:43 - that is limited but I have had lots of
52:45 - managers who uh kind of like regretful
52:48 - managers problem either yeah I think I
52:51 - think lots of companies have gone
52:52 - through that growing pain of figuring
52:55 - out how to get good managers yeah so you
53:00 - are a manager yourself now after many
53:04 - years working as a software engineer you
53:06 - are a product manager the other PM you
53:09 - know there's pro project management and
53:12 - then there's product management and
53:13 - they're both simplified to pm and you
53:16 - hear that PM term a lot but if you're
53:18 - working in like construction or
53:20 - something a PM is completely different
53:21 - than if you're working in software and
53:22 - there are project managers in software
53:25 - like there's agile project Managers from
53:27 - like the the PMI ACP the project
53:30 - management institution uh
53:33 - agile something something uh project
53:36 - manager agile certified project manager
53:38 - right like so so just to just to be
53:40 - clear product management and P and
53:42 - project management are two different
53:44 - things it took me a long time to realize
53:46 - that and it was a source of great
53:47 - confusion for me but uh maybe you could
53:49 - describe very quickly what a product
53:52 - manager is and what they do yes so a
53:56 - product manager in the most general
53:59 - terms I think is making sure you're
54:01 - building the right thing in the right
54:04 - way at the right
54:07 - time um and and so yeah I came back to
54:11 - GitHub almost three years ago and this
54:14 - is my first time as a PM
54:17 - and this is a culmination of a few
54:21 - things to part of it I think it really
54:24 - suits my architecture Urban Design brain
54:26 - like I think about how people experience
54:29 - the systems they're in right and you
54:31 - know working in product is like I'm
54:33 - thinking about the end user right like
54:36 - ultimately I'm thinking about when you
54:38 - go to github.com like does it work the
54:41 - way you expect it to does it help you
54:42 - collaborate does it make you more
54:44 - productive or does it like piss you off
54:47 - yeah um and so I think that that that's
54:50 - part of it I think part of it is
54:54 - that I feel like now I
54:57 - seen engineers get stuck on really
55:00 - interesting technical problems while
55:03 - their really cool product idea sort of
55:07 - dies because they don't know how to talk
55:09 - about it and they aren't prioritizing
55:11 - building the right things in the right
55:13 - order and so I think for me there's
55:17 - also there's satisfaction in getting to
55:20 - be a part of the decisions about what we
55:23 - do so that I that I like I can feel less
55:27 - frustrated that we're doing the wrong
55:29 - things right which as an engineer you
55:31 - only have like so much say around
55:36 - um yeah and I think I also got kind of
55:39 - tired of not getting to write exactly
55:41 - the niche JavaScript that I wanted to
55:44 - write which is completely unrealistic if
55:47 - you want to like work at a big job
55:49 - anyways so there was like multiple
55:51 - factors where I was like I'm going to
55:54 - try and be a PM for a developer to
55:57 - um and
55:58 - actually so when I was first at GitHub
56:01 - and I the last thing I worked on was
56:03 - starting the electron team and that
56:06 - was like I was wearing a lot of hats at
56:09 - that time and one of them I was wearing
56:11 - but I didn't realize I was wearing at
56:13 - the time was product and so some of the
56:15 - stuff that was the most fun about
56:17 - working on electron getting it to its
56:20 - 1.0 then is like actually very product
56:24 - related and
56:26 - not to like be too boastful but I
56:29 - genuinely think was like really
56:31 - important to establish an electron early
56:34 - on like establish how we talk about it
56:38 - how we do the
56:39 - documentation um and how we prioritize
56:43 - you know what
56:45 - features are needed to be done when so
56:49 - essentially making sure that you're
56:50 - building the right thing in the right
56:52 - way at the right time and communicating
56:54 - what that thing is right like product
56:56 - management exactly yeah yeah yeah yeah
56:58 - so I've come back now and I'm a product
57:01 - manager awesome and uh we we can talk
57:04 - about your journey away from GitHub and
57:05 - your journey back to it but uh I just
57:07 - want to talk a little bit about electron
57:09 - because it's such a cool fundamental
57:12 - technology that we take for granted like
57:13 - that there's this Library where you can
57:15 - build desktop apps that also leverage
57:17 - all the power of like chromium and all
57:19 - these other browser tools and
57:22 - essentially make you know native app
57:25 - development put that in air
57:27 - quotes that make Native app development
57:30 - like web development so if you're a web
57:31 - developer which more than half of all
57:33 - developers on Earth are web developers
57:36 - uh even like mobile app developers uh
57:38 - they're not spending all day like you
57:39 - know doing mobile app development per se
57:41 - they're doing a lot of web app and uh
57:43 - development in and writing apis that the
57:46 - mobile app consumes right so uh I I just
57:49 - want to clear clarify that because so
57:50 - many people are like why do I have to
57:51 - learn you know web app development I
57:53 - want to do game development or something
57:55 - like well you don't understand like web
57:56 - app development is development in 2024
57:59 - like everything uses the internet as a
58:01 - platform uh so I'll get off my soap box
58:05 - but um yes you you were involved you
58:09 - essentially uh in the Inception of this
58:11 - critical tool that like you know
58:14 - Microsoft uses heavily with VSS code
58:16 - that slack their entire mobile app uh I
58:18 - think Spotify like a lot of other if you
58:21 - ever downloaded kind of like the mobile
58:23 - or or the desktop app version of a
58:26 - website it's probably running electron
58:30 - under the under the hood yeah maybe you
58:33 - can describe what that that process was
58:35 - like like why was it created like was it
58:38 - to scratch your own
58:40 - itch no it
58:42 - was no no part of me actually had ever
58:46 - wanted to build a desktop app and I knew
58:48 - nothing I knew nothing about Native
58:51 - development I didn't know
58:53 - how like siloed it was was or how you
58:57 - would have to have three teams building
58:58 - the Mac version which like if I had to
59:00 - sit down and think about it I could get
59:03 - there but I just never thought about it
59:05 - before because it was never like I never
59:07 - needed to think about death stop ass um
59:11 - it was because I had moved on to the
59:13 - Adam team at GitHub and so Adam shout
59:16 - out to everyone who still remembers and
59:18 - loved Adam yeah you we used it like I
59:21 - think I did yeah I loved it um and Adam
59:25 - uh yeah go ahead Adam was gith hubs IDE
59:29 - it's like code editor which I mean you
59:32 - can go way back in the origin stories be
59:35 - because it was even like um Chris
59:37 - wanstrath who was one of the founders of
59:39 - GitHub defunct his handle um he it was
59:44 - like a sort of pipe dream of his even
59:47 - when he was founding GitHub and he kind
59:49 - of Never Let It Go eventually he hired a
59:52 - few people to start working on it at
59:54 - GitHub they're writing it and Ruby it
59:57 - wasn't going great for all of the like
59:59 - asynchronous things that needed to
60:01 - happen in the text editor um they also
60:05 - part of um dun's like original Vision
60:08 - too was that it should be built with web
60:10 - technology and so there was this kind of
60:12 - Goldilocks situation where the I think
60:17 - it was like three people originally were
60:19 - sort of just working on it like at
60:21 - GitHub before it was even like talked
60:24 - about at all they had tried um there was
60:28 - like
60:28 - nwjs and then there was NW like
60:32 - Northwest like Northwest but it I think
60:34 - it stands for like node webkit or
60:36 - something okay I can't remember now and
60:39 - then there was another
60:43 - one it had the word Chrome in it I think
60:46 - I can't remember it's what it's what
60:48 - Spotify was using years ago um but both
60:52 - of these libraries tried to do the same
60:54 - kind of thing which is allow you to
60:56 - build desktop apps with web technology
60:59 - but they did them in sort of different
61:01 - ways that made it like really harder to
61:04 - access node or was bundling too much of
61:07 - chrome into it so it became really big
61:11 - and so yeah it was this Goldilocks thing
61:12 - where they kept trying this and then
61:14 - trying that and none of them was quite
61:16 - right and they ended up talking to this
61:20 - guy Chang who had been working on
61:22 - nwjs and he also shared this vision for
61:27 - like a another like alternate version of
61:31 - what the library could be and so he
61:33 - started working on it at GitHub and it
61:36 - was just called Adam shell Adam shell s
61:39 - yeah s h l l so it was just it was
61:43 - literally just built to build Adam it
61:45 - was just a thing that existed so Adam
61:47 - could
61:48 - exist um and at this point it was just
61:50 - like an internal tool like it was it
61:52 - open source it was open it was open
61:55 - source one Adam itself launched and open
61:58 - sourced because Adam when it launched it
62:00 - did open source like its entire or of
62:03 - repos so it was open source from the
62:05 - beginning but you'd really only know
62:08 - about it or care about it if you were
62:11 - already also trying to solve that
62:13 - problem of I just want to build a
62:14 - desktop app with web technology right
62:18 - because that's what would lead you to
62:19 - question well how was this built um and
62:23 - yeah and so there had there was no plan
62:25 - for for it it was called Adam shell it
62:29 - just existed
62:30 - to like it its sort of road map was only
62:33 - to build things that Adam would need
62:36 - yeah um and So eventually I joined the
62:40 - Adam team I onboarded I started learning
62:43 - about all these things I learned about
62:45 - why like why trying to build a desktop
62:48 - app is hard
62:51 - um and I just started I just thought it
62:56 - was actually the Revolutionary sort of
62:59 - tool besides Adam which and I loved Adam
63:03 - right but Adam's a text editor does a
63:05 - lot of things that other text editors do
63:07 - but I thought the like real game changer
63:09 - was actually Adam shell and so I
63:11 - honestly just started being really
63:13 - annoying and I I benefited again from it
63:17 - being kind of Loosey Goosey at early
63:19 - GitHub yeah I mean it sounds like this
63:20 - is the perfect environment if there's
63:22 - ever been a perfect environment to like
63:24 - just step in and say hey I I want get
63:26 - this project going and like
63:27 - permissionless Innovation right like
63:29 - nobody's going to tell you stop because
63:31 - there's nobody to tell you stop I did
63:33 - get tell I did get told stop for a bit
63:37 - um I genuinely was told if you care
63:39 - about this just work on it on your
63:41 - weekends like it's it's I like I kept
63:43 - being emphasized that it was not
63:45 - important it was not
63:47 - important um and
63:49 - then and then eventually so this is
63:52 - pre-acquisition but Microsoft had
63:54 - reached out to say hey we're building a
63:56 - text editor too and it we're using Adam
64:00 - shell just giving you a heads up we're
64:02 - going to launch this at this conference
64:04 - and we had this moment where're like
64:06 - okay it's going to start getting
64:07 - confusing actually if other people are
64:11 - making text
64:12 - editors and actually they can make
64:14 - anything and it's all linked and named
64:17 - to Adam another text editor it would
64:19 - just get confusing so we just had like
64:22 - an internal brainstorm whatever we
64:24 - picked the name electron and so then
64:26 - then it got so then it got renamed
64:28 - electron but it was still just going to
64:30 - be this dependency of adom um and I I
64:34 - kept being annoying I wrote up road maps
64:38 - about what should be developed so that
64:40 - other people could build apps yeah and
64:44 - then eventually yeah
64:46 - eventually I someone said that I could
64:49 - spend my time on it and so and it and it
64:52 - grew from there of like putting together
64:54 - the road map making sure all the
64:58 - documentation was good and building like
65:02 - like the demos app and stuff and making
65:04 - sure we could communicate like what it
65:06 - was and why you should care about it
65:09 - yeah so at the risk of maybe edifying
65:12 - you too much it sounds like a lot of
65:14 - this stuff like like without your
65:16 - internal advocacy and things like that
65:18 - it it may have taken a lot longer for a
65:20 - tool like this to get off the ground and
65:22 - so you being the squeaky wheel you
65:24 - ultimately got the grease and in this
65:25 - case the Greece was having a whole lot
65:27 - of people adopting this tool and having
65:30 - this very you know active open source
65:32 - project that uh because I mean like a
65:35 - lot of people don't realize this but
65:36 - like most people who contribute to open
65:39 - source are getting paid to contribute to
65:42 - it right like like people software
65:45 - engineers at Microsoft right Microsoft
65:47 - has a lot of software Engineers on their
65:49 - payroll and once they're contributing
65:51 - along with the GitHub team and you know
65:53 - potentially the slack team and like all
65:54 - these other Engineers are coming
65:55 - together like hey we depend on this tool
65:57 - we need to add this feature we need to
65:59 - improve the per over here the
66:00 - performance we need to do XYZ right
66:03 - like that had to really help kind of
66:06 - like be a shot in the arm in terms of
66:07 - the project really yeah speeding up but
66:09 - maybe you could talk about that that's
66:11 - my presupposition like did having a you
66:15 - know a bigger table did bringing more
66:17 - people to it did that accelerate
66:21 - development I think so I think yeah I
66:24 - started like using my time to speak
66:27 - about it at GI help conferences and
66:29 - other conferences and um I mean
66:34 - Microsoft took it after the
66:37 - acquisition it's not like yeah you may
66:39 - you may have added a few uh tens of
66:42 - millions of dollars to the acquisition
66:43 - price because he like oh yeah more more
66:45 - Spoils of our acquisition
66:48 - yeah yeah so I definitely think so and
66:51 - yeah like slack Engineers were very
66:53 - active early on helping it
66:58 - along yeah yeah that's cool well um at
67:02 - what point did you decide like hey I
67:04 - want to go work at other companies like
67:05 - I don't want to just stay working here
67:07 - at GitHub because you know a lot of
67:09 - people would you know be perfectly happy
67:12 - working at like one of the most
67:14 - successful Tech startups of all time
67:16 - perhaps yeah definitely one of the
67:18 - biggest Acquisitions of all time uh and
67:21 - uh yeah maybe you can talk about that a
67:23 - little bit Yeah like I'm happy to talk
67:26 - about it honestly I just didn't work
67:28 - with enough women and I was like I think
67:31 - I can do better somewhere yeah and like
67:34 - because I've been there three and a half
67:36 - years um and I I had never I had not had
67:40 - another technical I not had another
67:43 - software
67:43 - engineer like woman on any of the teams
67:46 - I've been on that's not to say they
67:47 - weren't there I mean some of them were
67:50 - there and they were my best friends but
67:51 - we were never on the same team and so my
67:55 - person personal experience there was
67:57 - that I had never ended up on a team that
68:00 - had another woman like um in a technical
68:04 - role and so I just kind
68:08 - of yeah I like I felt
68:11 - like I wanted to see electron to its 1.0
68:16 - like that was really important for me
68:17 - and I wanted electron to have enough
68:20 - traction internally that I felt like I
68:23 - could sort of like marry Popp out of
68:27 - there and so and and that's kind of how
68:31 - it worked out like we did our
68:35 - 1.0 like GitHub started to say and see
68:39 - like oh this is important and
68:41 - interesting and worth funding and so we
68:44 - got like a proper engineering manager
68:48 - who I knew and trusted and so um yeah
68:54 - and so once all of that seemed like it
68:57 - seemed like it had a solid foundation
68:59 - then I was like okay so it's
69:02 - almost kind of like uh like my my baby's
69:05 - all grown up and I'm going to set it
69:07 - Loose into the world and now I'm going
69:08 - to go you know enjoy life as an empty
69:10 - nester kind
69:13 - of yeah yeah and so I went and I I
69:17 - looked
69:18 - for different kinds of engineering
69:21 - teams yeah and uh where did you go from
69:28 - so um technically I was at mongodb for a
69:32 - minute but there's like a whole other
69:34 - background of like their hiring system
69:35 - and why that did that's like a story for
69:37 - another time but then I went to splice
69:40 - which is like sometimes they would say
69:42 - it's like GitHub for musicians okay um
69:45 - oh splice like where you buy all your
69:46 - stems and stuff for if you're like a DJ
69:49 - yeah yeah yeah if you're a music
69:51 - producer yeah okay I'm familiar with him
69:54 - yeah yeah yeah so um I knew a few people
69:59 - there who I I trusted and thought were
70:02 - great
70:04 - and and it honestly it was like a
70:07 - life-changing experience it was the most
70:11 - collaborative and
70:13 - diverse engineering team I've been on
70:16 - and and so I really like at that point I
70:18 - I swung the pendulum because I'd been
70:21 - really dedicated to JavaScript and node
70:23 - and open source and developer
70:26 - tools and like Civic Tech and open gov
70:29 - and all of that for a while at that
70:31 - point and I swung the pendulum and I was
70:34 - like the only thing I'm caring about
70:36 - right now is like a good engineering
70:38 - team and so I started writing go um go
70:42 - go the go yeah go and I you know it was
70:47 - close source and I didn't understand the
70:50 - first thing about music production so
70:53 - like myself so you didn't have the
70:56 - domain expertise like really the the
70:58 - feel for like users and empathy for
71:00 - users that you needed to be able to do a
71:02 - good
71:03 - job well I mean I think I did a fine job
71:07 - I just it was for me it was different to
71:11 - not understand our users as well as I
71:13 - understood the users at GitHub so it was
71:16 - just different you know like I'd be in
71:18 - meetings where someone would like throw
71:19 - out a music term and I was like can
71:22 - someone what's a
71:24 - sample oh
71:26 - no and so it's like so it was like a
71:29 - cultural fit but it was not a cultural
71:30 - fit it's like you know toxic culture
71:32 - it's just like completely different like
71:34 - would you consider cultural or just were
71:37 - most of the de developers that you work
71:39 - with like interested in music like yes
71:42 - yeah yeah like and and I did love that
71:45 - so like I still love that it to me it
71:48 - felt like a non-evil company that was
71:50 - trying to do good I felt like the
71:52 - founders were genuine and wanting to to
71:55 - Like democratize Music Creation more and
71:59 - get artists
72:00 - paid um and you know when our All Hands
72:03 - hearing them talk I felt inspired like I
72:05 - loved the stories about some of the like
72:08 - things we are enabling for people so in
72:10 - terms like in that aspect of culture
72:12 - like it felt really aligned to me and
72:14 - like I wanted to not work at an evil
72:16 - company I wanted to do good I wanted to
72:18 - do stuff that enabled people to be
72:20 - creative and follow their dreams and
72:22 - then I worked with like amazing
72:24 - engineers
72:25 - um and so in that respect it was all
72:28 - fine right and like in theory I could
72:30 - have carried on there forever it just
72:33 - ended up for
72:35 - me I I missed I missed being active in
72:39 - the community I missed like working on
72:42 - solving the problems for the community I
72:44 - was in you know and and so that's the
72:48 - only reason I left like I still think
72:52 - there are people there that I know that
72:54 - are amazing and are some of my favorite
72:56 - humans let alone engineers in the world
73:00 - um but I I ended up going to glitch
73:03 - after that yeah and glitch I'm so
73:06 - excited to talk about this company this
73:08 - is like the part I've been like all
73:09 - right I can't wait to talk about because
73:10 - I'm a huge Anil Dash fan uh and uh I had
73:14 - the pleasure of interviewing him many
73:16 - years ago he like bri coken was very new
73:18 - and he agreed to come and like hang out
73:21 - with us on New Year's Eve we had this
73:22 - big New Year's bash where I interviewed
73:24 - a bunch of uh devs including him uh so
73:28 - yeah let's talk about that sorry I
73:30 - didn't mean to interrupt you I just had
73:31 - to I have to contain my enthusiasm a
73:33 - little bit it just it ended up like yeah
73:37 - I I knew people at glitch and a Neal for
73:40 - some time and actually when I originally
73:43 - left gith help I talked to them about
73:45 - going to glitch and I didn't because it
73:48 - was so small and like mostly dudes at
73:51 - that time yeah like and I was like
73:53 - that's not what I'm optimizing for right
73:55 - now you know and so yeah after after
74:00 - splice which was just like an amazing
74:02 - group and it was tough but I was like
74:05 - I'm I have to swing the pendulum back
74:07 - and I have to optimize for like yeah for
74:11 - like open web stuff again um and so I I
74:17 - joined when they were starting to grow a
74:19 - bit more and they were going to really
74:21 - build out um a team to work on the
74:24 - editor self um and so I joined and was
74:29 - there for two years um working on that
74:32 - which was yeah a whole other experience
74:34 - because it was a very very tiny tiny
74:38 - startup yeah and when did how many
74:41 - people were there when you joined how
74:42 - many uh devs and then how many non-dev I
74:45 - don't know it was really it was really
74:48 - small was it it based in New York where
74:51 - where where was it based so yeah we had
74:53 - an office in New York but it was still
74:55 - still remote friendly so some people
74:57 - were remote I mean I think at most we
75:00 - had like 50 55 but it definitely was
75:04 - like 20 you know at times yeah and
75:06 - glitch just for anybody who's never used
75:08 - it like free Cod camp we used to use it
75:10 - as part of our Core Curriculum because
75:12 - it was like such good user experience
75:14 - you didn't have to learn get you didn't
75:15 - have to learn uh how to like go into
75:18 - like the command line and you know run
75:20 - all these you know make files and stuff
75:22 - like you just went in and uh into the
75:26 - cloud-based editor and you just started
75:28 - building your full stack app uh using
75:30 - node.js using react using whatever tools
75:32 - you want and you could just build and
75:34 - and to be completely Fair like a lot of
75:36 - this functionality may still exist I
75:38 - haven't used glitch in a while but uh it
75:40 - was just like a great kind of like
75:42 - intermediary step to actually developing
75:44 - locally on your on your own you know
75:47 - development environment on your own
75:48 - computer so you said there were about 55
75:51 - people it was a very technical product
75:53 - like I immediately saw this I was like
75:55 - wow they put a lot of engineering into
75:57 - this U maybe you could talk about like
76:00 - glitch the product
76:03 - containers yeah
76:06 - um yeah so it was really interesting
76:09 - because it's yeah it's the in browser
76:12 - editor and then instant continuous
76:15 - deployment of JavaScript and node apps
76:18 - um and so it was like you know easy
76:21 - enough to like if you just like
76:23 - literally needed to show someone on how
76:25 - one thing worked you could just write it
76:27 - and you would know it always work in the
76:28 - right way when you sent them that glitch
76:31 - link and then you could also remix sites
76:34 - so we also wanted it to be a way for
76:38 - like Bas it's like I used to have this
76:41 - thing called like fork and go fork and
76:43 - go like like in GitHub or in get like
76:47 - for branch I briefly tried to promote
76:49 - the idea of forking go of like building
76:52 - websites that are intended to be forked
76:54 - and gone with so like boiler plates and
76:57 - things like that yeah yeah yeah that
76:59 - were like 90% done and only needed you
77:02 - to like go in and change like a name and
77:05 - a bio or whatever um so like WordPress
77:09 - templates
77:10 - almost almost but just like so simple
77:14 - yeah way way more simple
77:17 - than um and because also GitHub Pages
77:21 - you know are also deployed instantly so
77:24 - it's like you could Fork a giagia site
77:26 - and then you also then have a live site
77:29 - um but so glitch like this was really
77:31 - baked into glitch too and you could it
77:34 - would work for node apps and so that was
77:36 - like the big difference whereas um
77:38 - GitHub pages is static sites yeah and
77:41 - and that was the big differentiator is
77:43 - like you had GitHub Pages you had code
77:45 - pen you had like code sandbox I it may
77:48 - have come a little more recently jsbin
77:50 - shout out to jsbin great great website
77:53 - that just solo found founder if you ever
77:56 - want to read some War Stories for being
77:58 - a solo founder of a project did you ever
78:00 - read that series of blog posts where he
78:01 - talked about like JS Spin and like what
78:03 - a nightmare it's been for him like he
78:05 - wishes he never started the project
78:07 - basically I'll see if I can find it I
78:09 - can link to it but you have people
78:11 - listening to this you've got to read
78:12 - this series of blog
78:13 - posts it's it's pretty sad but it is
78:16 - just like wow this is real you know yeah
78:20 - no there's a very
78:22 - like unhappy side to open Source right
78:25 - especially if you're a solo person and a
78:27 - project exploded and become widely
78:30 - dependent on and it wasn't
78:32 - your it doesn't fit in with your life
78:35 - goals yeah you can yeah there's a lot of
78:39 - unhappy friction friction in that path
78:42 - for sure well so you're working a glitch
78:45 - you're trying to build these fork and go
78:47 - which sounds like a a restaurant that
78:49 - would be like on the bottom floor of
78:51 - like a big tall office building yeah but
78:54 - so I glit is called remix so you could
78:56 - remix a glitch project um and
78:59 - essentially also have instant deployment
79:02 - you know and a URL right after you
79:05 - remixed it yeah and it was yeah it was a
79:08 - small startup I like I joined to be an
79:10 - engineer I was going to go back to
79:11 - writing JavaScript and node and front
79:14 - end
79:16 - um but it also quickly seemed like there
79:22 - needed to be some
79:23 - organization and and so I was like we
79:26 - need a manager and so I actually sort of
79:29 - became a manager like three weeks after
79:31 - I started as an
79:33 - engineer yeah and so that's my first and
79:37 - only stint in people management and so I
79:39 - was a people manager for my time at um
79:42 - glitch and yeah like eventually was like
79:45 - engineering director yeah for
79:48 - engineering that's quite a quite a
79:50 - series of like I guess with a smaller
79:53 - organization you can rise very quickly
79:54 - say you can do that in a smaller
79:56 - organization especially with lots of
79:58 - like the change and stuff at at startups
80:02 - um but yeah we had I mean it was still
80:05 - pretty small teens um running the these
80:09 - things but I thought it was really
80:12 - really
80:14 - interesting like coming from Adam I I
80:18 - was really interested in like building
80:20 - editor interfaces and that and that
80:22 - still really excites me about
80:25 - like glitch and excites me in general
80:29 - because I don't love vs code I think I'm
80:32 - allowed to say that that's
80:34 - fine you dis the name of our beloved
80:38 - it's like a space spaceship Command
80:41 - Center and so I yeah it is very
80:44 - complicated just to make sure I'm
80:46 - understanding like there it's it's like
80:48 - Microsoft Excel when you just need like
80:50 - Google Sheets or something yeah and so I
80:53 - thought that there was really really a
80:55 - need and a place for a simple a simple
81:00 - editor that and I think that simple
81:03 - editors aren't just to say oh it's only
81:06 - beginners need simple editors I think
81:09 - genuinely like people and I I say I
81:11 - think this but I've also like talked to
81:13 - these people yeah you know to confirm it
81:16 - like even you know established senior
81:19 - plus
81:20 - Engineers when you want to do something
81:22 - for fun or do something for a demo like
81:26 - you just need the essentials and you
81:28 - need to know how everything works and
81:29 - you just want to get in and start doing
81:32 - stuff you know you don't want to have to
81:33 - toggle a bunch of things or bring a
81:35 - config over and so I think it's really
81:39 - interesting like that problem of like
81:42 - what are good defaults in like a bare
81:44 - minimum code editor convention over
81:48 - configuration yeah yeah yeah the
81:50 - pendulum always swings like oh we've got
81:52 - total customizability oh you don't have
81:54 - to customize things CU we've got same
81:56 - defaults right like that always happens
81:58 - with like the tool hype cycle right um
82:00 - sorry for the the tangent um but okay
82:05 - so it sounds like you were doing a lot
82:08 - of stuff a glitch and like it's a small
82:12 - organization very exciting one-of-a-kind
82:14 - product like nothing like this had ever
82:16 - existed as far as I could tell I almost
82:17 - look at glitches like an invention more
82:19 - than a
82:20 - product well so we did have competitors
82:23 - for sure like code sandbox replit like
82:26 - they were all out yeah but I mean like
82:29 - repet of course and and I think code
82:31 - sandbox just does front end stuff right
82:33 - like you couldn't run like full you
82:35 - couldn't run full stack apps there and
82:38 - and rep you you might be able to do that
82:40 - but they didn't abstract so much away
82:42 - from you like glitch did yeah that's why
82:44 - I think of glitches in a category of its
82:46 - own um in terms of just simplifying the
82:49 - development experience like if you knew
82:50 - what you were doing you could get in and
82:51 - get something live so quickly it was
82:54 - amazing
82:55 - uh so uh what made you want to like
82:58 - leave and and like why didn't you just
83:00 - stay at that glitch did glitch get
83:03 - acquired what what's going on with
83:04 - glitch these days I saw it was very
83:05 - popular for whle like everybody was
83:07 - using it glitch for whle like I couldn't
83:09 - believe the amount of get acquired by
83:12 - Cloud flare um so that's where it's at
83:15 - now but it it was just the startup life
83:20 - of like it was really chaotic I was
83:23 - wearing a lot of
83:25 - hats um a few other people started to
83:29 - leave and and yeah it it was tough
83:35 - because I I do I do think glitch is
83:37 - really really cool but I I had also like
83:42 - I had had a conversation with friends
83:45 - that were still at GitHub and had been
83:46 - there you know since I was originally
83:49 - there and I was checking in with them
83:50 - I'm like so what's it like
83:52 - postacquisition and stuff and and and
83:55 - you know what kind of opportunities and
83:57 - things do you have
83:59 - and and there was like a bit like I
84:02 - guess maybe it's becoming clear like
84:04 - every time I change jobs there's like
84:06 - there's like a pinge on like something
84:08 - I'm trying to course correct for yeah um
84:11 - but at glitch I did like yeah it's like
84:15 - we had product for like a minute and
84:16 - then we didn't have product and so then
84:18 - I became product but I was also director
84:21 - of engineering and stuff and I like
84:24 - could and when you say product again you
84:26 - like having product managers on the team
84:28 - that would actually oversee development
84:30 - of a particular product multi-
84:32 - disciplinary bring the designers and the
84:34 - developers and and the you know business
84:36 - people all those people together and
84:38 - kind of like advocate for the product
84:40 - itself yes exactly and
84:44 - and so then eventually like also
84:47 - technically I was in charge of produ and
84:50 - but like there are a lot of engineering
84:53 - challenges there too and so there was
84:55 - just never any time to think about
84:58 - product and and yeah like I said like
85:01 - I'm really interested in sort of the
85:03 - product aspects of like what actually is
85:06 - like the minimal code editor that makes
85:09 - like senior people seasoned people happy
85:13 - and also is really inviting and not
85:16 - scary for beginners and like those yeah
85:20 - like solving those problems are product
85:23 - problems and I wanted to do do that at
85:24 - glitch and there was just never time to
85:27 - do it because it was just yeah startup
85:31 - chaos and like yeah and and and me being
85:34 - in charge there was like there was not a
85:36 - there was not a scenario where then I
85:38 - become just only in charge of product
85:41 - right like yeah short of them like
85:44 - bringing on a whole lot of additional
85:45 - people to absorb all the
85:46 - responsibilities that you taken on yeah
85:48 - so it was like I had to wear a big
85:50 - engineering hat and just like a tiny
85:52 - little product hat and
85:54 - and so that's what kind of got me
85:56 - thinking again and thinking back to my
85:58 - electron time of like I do really get
86:02 - some satisfaction out of like oh no we
86:05 - need to build the developer tool like in
86:07 - the right
86:09 - way um and so yeah checking in with
86:13 - friends about like what gith help was
86:14 - like post acquisition it seemed okay um
86:18 - and they happen to have a opportunity to
86:22 - rejoin and sponsor
86:25 - to to work on sponsors at GitHub as a
86:28 - product lead and so I did and yeah and
86:33 - that's where you are today that brings
86:35 - us up to that one hour of roundabout
86:38 - we're we're back to Jessica in
86:40 - 2024 yeah I'm not working on sponsors
86:43 - anymore but I am still product atub like
86:45 - we've had I mean it is a large company
86:48 - now we've had like four
86:51 - reorgs yeah get Hub spons just to talk
86:54 - about that product real quick we use it
86:55 - free C Camp uses it we were an early
86:57 - adopter of sponsors because we're a
87:00 - charity that likes to sustain itself and
87:02 - not run out of money and of course
87:05 - GitHub uh created this tool that would
87:07 - like at the time I don't think there
87:08 - were any fees at all it was like way
87:10 - better than like patreon or or even like
87:13 - PayPal or stripe uh so people could if
87:15 - you already have a GitHub account you
87:17 - can add your credit card number or
87:19 - whatever and you can start supporting
87:20 - open- Source projects and I support lots
87:22 - of them uh I actually I don't support
87:25 - them through GitHub sponsors I I think I
87:26 - just use patreon but but uh people do
87:29 - support us a lot of Open Source
87:31 - contributors support free C Camp and uh
87:33 - so that that is a cool thing and GitHub
87:36 - makes it pretty seamless they it's a
87:39 - very clear minimal product it's it's
87:41 - unconfused and it's right there
87:43 - integrated into GitHub so um thanks for
87:47 - help helping oversee that uh cuz you
87:49 - know fre C Camp gets thousands of
87:51 - dollars a month uh maybe maybe thousands
87:53 - uh from GitHub sponsors this a big help
87:56 - um yeah so you talked about like some of
87:59 - the reorg can you describe what a reorg
88:01 - is
88:04 - reorganization yes re yeah
88:06 - reorganization the org chart
88:09 - changes and it is like so much a part of
88:13 - big companies and this is like so now
88:15 - being back at GitHub this is the biggest
88:16 - company by and large you know I've
88:18 - worked for so a lot of this is just what
88:20 - I've learned now being back almost three
88:23 - years yeah um um
88:26 - yeah reor like reorgs happen yeah what
88:30 - is a reorg like like exactly like oh so
88:35 - it's like what the people use this term
88:38 - all the time but I'm not sure exactly
88:39 - what it
88:40 - means I mean it can be triggered by
88:43 - anything right like someone very senior
88:45 - at the company decides to leave so then
88:48 - there's a hole and then like a few other
88:51 - people then get promoted which then
88:53 - leaves holes down below and then you all
88:55 - of a sudden you have to move all these
88:56 - teams around to make everything make
88:59 - sense again okay and and then company
89:02 - priorities change they change all the
89:05 - time right and so a company priority
89:09 - changes and to get enough people working
89:11 - on that uh priority like things are shut
89:14 - down okay and then all the people who
89:16 - are on that project then need to be like
89:18 - distributed to the other projects I'm
89:21 - kind of learning in real time but but
89:23 - the the Vibe I'm getting is it's even
89:26 - more chaos right like people people are
89:29 - like settled in they got their coffee
89:31 - cup they've got their their daily like
89:33 - cycle where they wake up they get
89:34 - certain things done they talk with this
89:36 - boss every week and and now suddenly
89:38 - they're reporting to completely
89:39 - different people they're working with
89:40 - different people slack groups and and
89:42 - you know uh all the other you know email
89:45 - list serves and all that stuff has to
89:46 - get completely reconfigured is that is
89:48 - that what happens well we don't have any
89:50 - email list serves but we do we do do
89:54 - basically it's all based on who what
89:55 - team you're on and like literally within
89:58 - GitHub the app you know how you can make
89:59 - teams yeah like
90:02 - it's around on the
90:04 - yo GitHub dog foods GitHub to like no
90:09 - end it's actually sometimes I'm like you
90:12 - all like I'm like I get it it's good but
90:15 - sometimes we need to use Google Docs
90:18 - because it does have its like yeah not
90:22 - in minute here like an entire culture of
90:24 - Engineers right I don't want to commit
90:26 - every time I re
90:30 - word yeah so uh just just to describe
90:33 - the term dog food real quick uh you and
90:35 - I are both familiar with it but uh
90:37 - there's this saying that like if you
90:39 - want to build like a really good product
90:40 - you need to eat your own dog food right
90:42 - you need to like be well acquainted with
90:43 - the taste and the
90:45 - idiosyncrasies uh all the different
90:47 - notes that you get from eating dog food
90:49 - I don't know that like dog food
90:50 - manufacturers actually do eat their own
90:52 - dog food they probably wouldn't be
90:53 - advisable that's really interesting does
90:56 - someone who make dog food actually eat
90:58 - their dog food yeah well they must where
91:02 - did I have to interview some uh some QA
91:05 - people from Purina or something yeah
91:07 - yeah okay yeah we we we I mean legal is
91:11 - on is a repo like HR is a repo like we
91:16 - we push it to the limits everything is
91:18 - happening on GitHub that's great um yeah
91:22 - and I mean a lot of internal tools are
91:23 - born like electron the fact that you
91:26 - wanted to build your own editor and not
91:28 - just settle for uh you know jet brains
91:30 - or something like that like that you
91:31 - wanted to so a lot of creativity is
91:34 - spurred by this kind of culture of
91:37 - eating your own dog food it sounds like
91:39 - but that comes with its headaches as
91:42 - well yes yeah and and because sometimes
91:45 - we're on things like really early before
91:47 - they release like projects you know
91:50 - exists and is a thing for everybody now
91:52 - the combon tool
91:54 - yeah yeah yeah but like we were using
91:56 - the early most broken version of it and
91:58 - I was
92:01 - like yeah you get to be the uh the
92:04 - guinea pigs the test subjects yeah yeah
92:08 - yeah um yeah well um I want to talk with
92:13 - like some practical advice obviously
92:15 - your journey into Tech is very unique
92:17 - I've never talked with somebody who came
92:19 - from architecture as a field and and
92:22 - Civic planning and things like that who
92:24 - just had somebody from GitHub like
92:26 - approach them like hey do you want to
92:27 - work I mean it's like again I use the
92:29 - term Cinderella story for you maybe
92:32 - there was a lot of like struggle and
92:33 - everything but that that sounds like a
92:35 - really amazing transition like
92:37 - congratulations on your extremely what
92:39 - sounds to be like a really uh idilic
92:42 - transition into like yeah yeah I did
92:45 - sort of later find out more details
92:48 - about how it happened
92:51 - and I I gu I don't know feel like is
92:54 - this okay to talk about but I guess
92:58 - like this is just yeah what I was told
93:01 - was Jim pacco Jim Palco was at an event
93:04 - with a founder of GitHub who is like
93:07 - who's doing interesting stuff at code
93:08 - for America this year and I guess my
93:11 - project was interesting right on getting
93:15 - a recommendation straight from the top
93:16 - Founders do talk to one another and so
93:19 - yeah so that's how I ended up getting
93:21 - pinged and I like yeah like I my code
93:24 - for America project was one that
93:26 - actually two other people decided they
93:28 - didn't want to work on and I was like
93:30 - well then I'm going to do it I I felt it
93:33 - was important and so I did it yeah
93:36 - that's awesome so I mean that would
93:38 - definitely be like a who you know type
93:40 - thing like like you make your own luck
93:42 - uh by virtue of being kind of the woman
93:46 - in the arena like being out there
93:48 - building apps uh working with code code
93:51 - for America uh which you know there were
93:54 - probably a lot of other lucrative things
93:56 - that you could have pursued instead of
93:58 - going into code code for America you you
94:00 - you took that and it you were awarded
94:02 - not just by being able to like do good
94:05 - work and make an impact I did use all of
94:07 - my savings to move myself to California
94:10 - yeah it's not a cheap place to live um
94:13 - yeah so it sounds like I'm trying to
94:17 - like take some generalizable advice from
94:21 - your story maybe you could summarize
94:23 - some of some of the things that like
94:24 - worked out really well that you're in
94:26 - retrospect you're like that was a very
94:27 - good decision oh my gosh on the Fly I
94:30 - don't know but I I feel like not I feel
94:35 - like what has been really good in
94:37 - general is talking working in the open
94:40 - like I think that also has helped me
94:43 - right like I find jobs and connections
94:46 - on Twitter from talking about what I was
94:49 - working on and I don't
94:54 - so let's let's pull in that thread a
94:56 - little bit so working in the open like
94:58 - of course contributing to open source
95:00 - famously we haven't even mentioned this
95:01 - but one of the most popular ways to
95:03 - learn how to use get is this uh node
95:05 - school module called get it that we used
95:08 - to actually recommend in our Core
95:10 - Curriculum and so probably thousands and
95:12 - thousands of people have used get it
95:13 - because we personally recommended it uh
95:16 - as like a good way to learn get and
95:18 - practice those different um you know
95:20 - commands and stuff and and get yeah and
95:22 - I have not
95:24 - Concepts yeah I've not touched it in
95:27 - many many years but people are still
95:29 - using it it's in the tens of thousands
95:31 - now that have done it um but and I so I
95:36 - do
95:38 - think so you mentioned like contributing
95:41 - to open source and I want to say that I
95:43 - also think it's like scratching your own
95:44 - itches too because I think it's really
95:47 - really hard to just go out there and
95:50 - find a project to to contribute to yeah
95:54 - um but you can create your own stuff
95:58 - right like create like nerdy Pages for
96:01 - things you're into create little
96:04 - projects for things you're into and just
96:06 - like as long as they are on GitHub like
96:08 - I don't think you necessarily have to be
96:10 - like I'm gonna become a top contributor
96:12 - to react like yeah you know that could
96:15 - be a stretch goal like yeah it could be
96:17 - a stretch goal but like
96:19 - also I think if you're doing stuff that
96:22 - you're really interesting it interested
96:24 - in you know you have a better chance at
96:27 - succeeding in it because I think
96:30 - sometimes people do come and have the
96:31 - idea of like oh I just need to find an
96:33 - open- source project to contribute to
96:36 - and then you think well then if you find
96:38 - just like any and you're not actually
96:40 - using it and you're not like interested
96:42 - in the problem it's
96:44 - solving I think that impacts like the
96:47 - time you put into it or like your
96:49 - contributions and stuff like if you and
96:53 - if you have the time and not everyone
96:55 - has the time which is another thing but
96:57 - like if you have the time like build
96:59 - your own thing and talk about it and it
97:02 - can be a small thing it could be a small
97:05 - thing that ultimately grows into a very
97:07 - large thing like electron wasn't wle
97:10 - small yeah I wle took the World by storm
97:13 - I don't know how it works I just see
97:14 - people with these like 25 you know
97:17 - squares I can't remember exactly that
97:19 - works but but like yeah like yeah as
97:22 - they say like big things have Small
97:24 - Beginnings right like um and and I'm
97:27 - sure get it when you were sitting down
97:29 - and did somebody ask you like hey can
97:30 - you build a module like how did that
97:32 - come about that's that came about
97:35 - because in the early days of GitHub so
97:37 - this was in my first like tenure we were
97:40 - doing a lot of community events and so
97:43 - there was kind of the freedom to say
97:45 - like is there a thing you care about
97:46 - that you want to have a community event
97:48 - for and I was like I care about teaching
97:51 - people get and GitHub and so so I got so
97:55 - and the event was called Patchwork um
97:57 - because it was about submitting patches
97:59 - and everyone's like building together
98:01 - this
98:02 - quilt I like that so I ended up building
98:05 - get it so that I could like Host this
98:09 - Patchwork event at the GitHub office and
98:12 - like teach people getting
98:15 - GitHub yeah well I mean it is just like
98:18 - a simple like why not it was
98:19 - permissionless Innovation right and then
98:21 - you submitted it to node school and then
98:24 - the rest is
98:26 - history pretty much like I'm taking a
98:29 - lot of inductive leaps but uh yeah how
98:32 - how how many revisions did you did like
98:34 - what was the early days of people using
98:35 - it did you get a lot of user feedback on
98:37 - it people like this part is like buggy
98:40 - or this part is kind of confusing yeah
98:41 - definitely I got a lot of feedback and
98:45 - um and so the early days it was a node
98:47 - school application so that means it ran
98:50 - in terminal on the command line was
98:52 - fully on the command line
98:54 - um but then as I started to get more
98:56 - involved with electron and I think I
98:58 - mentioned like beforehand I had never
99:00 - felt the desire to build a desktop app
99:02 - before so that's why I was totally
99:04 - clueless about desktop app building um
99:08 - but then when I started to work on
99:11 - electron I was like oh actually get it
99:13 - would be really good as an electron app
99:16 - so I did rewrite it as an electron app
99:18 - so there is like a desktop version
99:20 - that's more visual than the command line
99:23 - one
99:24 - I will link to that in case anybody
99:26 - wants to try it oh my go I'm sorry I
99:29 - haven't merged any poll request in a
99:31 - long time are there open issues when was
99:33 - the last time you even checked out the
99:36 - revo five years ago well we you might
99:40 - want to take a look maybe a lot of
99:41 - listeners the podcast will CH here's the
99:43 - thing I will I will get on my little
99:45 - soap box and be like if you just write
99:47 - like simple JavaScript in HTML it will
99:50 - keep working this is the beauty of it
99:53 - people
99:53 - is like it still works I mean sure there
99:56 - are some bugs and there are some things
99:58 - that could be improved but it still
100:01 - works
100:02 - like because it's vanilla JavaScript and
100:06 - it's HTML and CSS and like vanilla
100:08 - JavaScript in node like it uses node
100:11 - but yeah and I I think you don't have to
100:15 - make things more complicated for
100:16 - yourself and I can like Coast now
100:19 - because these things still
100:21 - work yeah this are great um yeah and
100:24 - seven open poll requests it looks like
100:26 - it's like pretty healthy in terms of
100:28 - like people aren't complaining too bad
100:30 - about like because you use the
100:33 - fundamental tools that don't generally
100:34 - change people don't want to break
100:36 - backward compatibility and stuff so yeah
100:39 - oh and I hadn't started yet I just
100:41 - started um so uh check out get it it's
100:44 - going to be a link in there um what does
100:47 - the future hold now that you're a UK
100:50 - citizen uh and an American citizen like
100:53 - hanging out there in London um what are
100:57 - your plans for the next 10 years or so
100:59 - if if I could be so bold as to ask that
101:02 - I don't have any
101:04 - plans I think I have been really lucky
101:08 - so far that I've been able to follow my
101:12 - interests and there's certainly like now
101:15 - that I've like spent this time laying it
101:17 - all out I'm kind of noticing things too
101:20 - of like when I was at City Hall
101:23 - like I didn't know open source was a
101:26 - thing right and and I was actually I'm
101:29 - sure when I was writing my little MRC
101:31 - scripts and building websites and stuff
101:35 - in middle school I'm was using open
101:39 - source but I wasn't aware of it yeah and
101:41 - then even when I was at City Hall and
101:44 - even when I was making my little like
101:47 - sewing blog about like instructions how
101:50 - to make things like these ideas were in
101:53 - my head but I didn't I didn't know there
101:55 - was a world for it and a word for it and
101:58 - then I learned about that word world and
102:00 - stuff and and so then I get more
102:03 - involved with open source but I didn't
102:04 - know product was a job right when I
102:06 - first joined GitHub there was you know
102:10 - yeah the early days and we didn't have
102:12 - product people initially and stuff so I
102:14 - didn't even learn product existed until
102:16 - years down the line um so I've sort of
102:22 - followed my curiosity I guess made
102:26 - things learned about things and then
102:30 - tried to do that
102:34 - thing know so yeah I don't I I genuinely
102:38 - don't
102:39 - know what's next like I want I want
102:42 - developer tools to be good I want
102:44 - collaboration to be better I feel like
102:46 - there's endless work to do there
102:51 - um some some sometimes I do get tired of
102:54 - being sort of in the belly of the Beast
102:57 - of tech and I imagine my
103:00 - like what's what would I do if I weren't
103:03 - like at a giant company going going back
103:06 - to City Hall maybe uh help with some
103:09 - urban planning helping helping people
103:11 - use technology to like fix you know
103:14 - walkability seems to be something that
103:16 - you've optimized for um yes I love that
103:19 - yeah maybe you could talk a little bit
103:21 - about that because I imagine you're like
103:24 - interested do you still you know read
103:26 - about urban planning and like like geek
103:28 - out about like different cities and
103:30 - their decisions and things like that I
103:31 - still follow about what different cities
103:33 - are doing and I've done like a few
103:35 - things along the way too like while I
103:37 - was at glitch I did another short
103:40 - fellowship with actually this was like a
103:42 - bucket list thing for me my favorite
103:44 - Urban designer is Yan gaale who was a
103:47 - Danish Urban designer
103:50 - um and he had a non profit from his
103:54 - private practice and I did a fellowship
103:58 - with them to open source like how to
104:00 - measure activity in public spaces and so
104:04 - I helped them out like putting it on
104:06 - GitHub
104:08 - and making it a more contributable thing
104:11 - and that was like a bucket list for me
104:12 - to be involved in any way with Yan Gale
104:15 - and to like combine like open source and
104:18 - Tech and stuff um and then for a number
104:21 - of years I was on the board of a
104:24 - nonprofit um but it's no more but well
104:29 - what were they they were also in what
104:31 - what what space what problem were they
104:32 - helping with uh Transportation data and
104:36 - like public health so it um it's called
104:41 - StreetWise um and it was around like
104:46 - this idea that also is not unrelated to
104:48 - the things that were frustrating me at
104:50 - City Hall of that cities are doing a
104:53 - bunch of different initiatives to
104:54 - improve mobility and transportation in
104:57 - cities from like walking and cycling and
105:00 - making things more TR Transit oriented
105:02 - design
105:03 - to um and they're doing things and then
105:07 - a lot of times they are measuring it and
105:09 - running studies afterwards and there's
105:11 - results but there's like no way to know
105:14 - right like that this other city did this
105:16 - thing and they have a whole like set of
105:18 - results on on what the impact of those
105:20 - things were and so this was is trying
105:24 - to be a centralized location for results
105:29 - from like mobility and Transit
105:33 - studies and to like summarize them and
105:35 - bubble them up and be a central place so
105:38 - that if you're a city and you're kind of
105:41 - like we have maybe this amount of money
105:44 - this amount of time we're a city of this
105:47 - scale like what can we learn from people
105:50 - who've also been in this situation or
105:52 - like what what are the best outcomes to
105:57 - from like different types of bike Lanes
105:59 - to add and stuff like that so if we are
106:01 - going to make like an intervention like
106:03 - what's the best one we can do and so
106:06 - yeah I've tried to stay involved and
106:09 - like I mean that seems like a really
106:10 - Noble effort because uh you know a lot
106:13 - of taxpayer money is spent in a lot of
106:16 - you know engineering Talent planning
106:19 - architectural Talent um trying to figure
106:21 - out like okay
106:23 - what should we do here and there
106:25 - probably because there are you know
106:27 - thousands of cities on Earth you might
106:29 - be able to find a city with similar you
106:31 - know uh you
106:33 - know demographic data and like similar
106:36 - you know all those different
106:38 - considerations that make a city like
106:40 - like another city where a similar
106:43 - experiment has been done but if that
106:45 - information isn't yeah publicly
106:47 - accessible or if it's just uh if it's
106:50 - just obscure and they don't know about
106:53 - it they may be completely you know
106:55 - blowing a lot of their budget
106:56 - reproducing something that's not going
106:58 - to work that has already been proven to
106:59 - not work or or to be suboptimal or
107:01 - something like that so yeah I I can
107:03 - definitely see the Merit in that like
107:05 - have you ever considered like maybe
107:06 - creating a charity of your own I don't
107:09 - want to put you on the spot uh so a
107:12 - couple of times like over the years
107:15 - someone is like why don't you start your
107:16 - own electron consultancy or like why
107:19 - don't you just like go on your own now
107:21 - that's the scariest thing can think of
107:23 - honestly like I don't think I can do it
107:26 - it sounds scary and hard why did Street
107:30 - wise fail do you know like they just was
107:33 - it adoption by the cities was it like
107:35 - they weren't able to sustain themselves
107:38 - well so it was I mean it was a small
107:40 - effort so it it's one person who was
107:41 - doing it it was a urban designer who
107:44 - then went on to do her PhD related to
107:47 - this and so she was trying to spin this
107:49 - up and I think I think its resources in
107:52 - honestly if I I I
107:55 - think if people have more skills and
108:00 - like can you make a website yourself
108:02 - have you seen someone Market a company
108:04 - before have you seen different
108:05 - subscription models before I think if
108:07 - you've been sort of in these Tech spaces
108:09 - for a long
108:11 - time you you maybe don't have as many
108:15 - hurdles
108:16 - as like a busy PhD student who probably
108:19 - is very very you know maybe not as
108:23 - t-shaped as somebody like you in terms
108:25 - of like You' got this very broad skill
108:27 - set and you've also got very specific
108:28 - skills like software engineering and
108:31 - product management uh that you can like
108:33 - she may just be a domain you know
108:35 - subject domain expert and that she knows
108:37 - a whole lot about the specific problem
108:39 - space she doesn't know a whole lot about
108:40 - administering a charity for example um
108:44 - or or just getting things done with
108:45 - software and it could be that just
108:47 - taking the raw data sets and putting
108:48 - them on kaggle you might be able to you
108:50 - know completely go around a lot of of
108:53 - the uh uh you know work that would need
108:56 - to be done and yeah uh again I'm not
108:59 - trying to like you know do uh you know a
109:02 - forensic analysis or like an autopsy
109:04 - report or whatever about her effort I
109:07 - don't I didn't even know about it
109:08 - beforehand I love the name StreetWise um
109:11 - but I think that if this is something
109:14 - you're like super passionate about like
109:17 - I would encourage you to consider uh you
109:19 - know developing some open tools about it
109:21 - that'd be amazing it's massively scary
109:24 - it's also I will say something that's
109:26 - very important to me these days is like
109:29 - being around people like the last few
109:33 - years of the pandemic and myself having
109:35 - gotten really sick like and then having
109:38 - moved to another country in my late 30s
109:41 - yeah your social life is probably
109:43 - completely up you know yeah of like it
109:46 - also sounds like a very good way to
109:49 - continue being alone so well not if you
109:54 - not if you make a lot of friends and you
109:55 - get some other people involved with you
109:57 - like free C Camp like is is even though
109:59 - we're all remote we're like very tight
110:01 - you know we we hang out in person once a
110:04 - year we flew everybody who could get a
110:05 - US Visa we flew them out to Dallas and
110:07 - we hung out and ate a bunch of like
110:09 - barbecue and stuff and like so I don't
110:12 - know that still seems more than I can
110:13 - handle like I'm in awe that you can
110:17 - coordinate these things I don't feel
110:19 - like I can I mean like from where I'm
110:21 - sitting there's probably like a dramatic
110:23 - overlap in our skills and you're
110:24 - probably way better at a lot of things
110:26 - than I am so don't don't sell yourself
110:28 - short but again I don't want to be like
110:30 - here's a whole bunch of work have fun
110:32 - you know if you're happy just but I mean
110:35 - it doesn't hurt to like plan a little
110:37 - ways out like a lot of these problems
110:39 - with cities are not going to just
110:40 - magically save themselves right like I
110:43 - mean and they're getting worse
110:46 - as things change gets cut and things
110:49 - like that
110:51 - right yeah not to go in that I don't
110:54 - want to like open a whole other can of
110:55 - wors but yeah these problems aren't
110:57 - going away um and it's very sad like
111:01 - honestly even England like trains are
111:03 - struggling here and I'm like I thought
111:07 - you guys are going to have trains yeah
111:10 - yeah well um there's so much work to be
111:13 - done uh I don't think that like some
111:16 - automation you know Genie in a Bottle is
111:18 - going to just come out and like solve
111:19 - all our problems overnight that'd be
111:21 - nice but uh I think that people will
111:23 - probably still be working like you know
111:25 - in architecture and urban planning and
111:27 - things like that for many decades to
111:28 - come obviously people are going to be
111:30 - working in software engineering for many
111:31 - decades to come so it's it's thrilling
111:33 - to have somebody like you in the space
111:36 - who can empathize with users and like
111:39 - help them you know essentially get the
111:41 - work they need to get done through uh
111:44 - GitHub and uh yeah and it's cool that
111:47 - you you do care I mean you worked with
111:49 - uh code for America um you know you you
111:53 - were on the board of the street wiv
111:54 - charity it sounds like you do care a lot
111:57 - and I think that's the number one thing
111:58 - like I get excited about is meeting
112:00 - people who care they're not just like
112:02 - enjoying their like you know middle
112:04 - class existence and like going home and
112:06 - watching Netflix and like checking out
112:08 - of other people's problems they're
112:09 - they're trying to actively help other
112:11 - people get up to where they are
112:14 - right yeah and I I like for better some
112:18 - days I wish I could check out like
112:20 - mentally I do think like there's a
112:22 - there's a flip side to caring so much
112:25 - because you get too involved and too
112:27 - invested and it takes up a lot of your
112:30 - time um but I don't know how to turn it
112:33 - off yeah so I I I just follow the things
112:37 - that interest me that are problems that
112:39 - I think need to be solved and then find
112:41 - a way to get like allowed into that
112:44 - awesome well thanks for all the
112:46 - important work you're doing um thanks
112:48 - for again for creating get it which you
112:51 - know so many people have learned how do
112:52 - you get through that thanks for creating
112:54 - electron which I use every single day
112:56 - buried several layers deep in the the
112:58 - little native apps that I launched
113:00 - throughout the day um
113:02 - yeah so amazing and I say created like
113:05 - created the initiative to really get it
113:07 - out there I just want to you were very
113:09 - clear earlier when I was talking that
113:11 - you that you're not the the you know it
113:13 - was a big team effort I didn't I didn't
113:15 - write the first commit on what was Adam
113:17 - shell that then became electron but I
113:20 - turned it into yeah a thing that cared
113:23 - about other projects yeah exactly well
113:26 - um it's been an absolute pleasure
113:28 - talking with you Jessica I hope always
113:30 - so good to talk to you I hope people
113:32 - found this interesting yeah absolutely
113:35 - and uh to everybody out there who is uh
113:39 - has learned I hope you've learned a lot
113:41 - from uh listening to Jessica's
113:43 - experience and that you can have I love
113:45 - about tech that people have different
113:48 - backgrounds and all of those different
113:50 - backgrounds feed into
113:53 - making things better in Tech so yeah I
113:57 - don't know if there's anything I would
113:59 - say is that you can always change what
114:01 - you work on yeah yeah right on well
114:05 - thank you again and everybody out there
114:08 - until next week happy coding

Cleaned transcript:

hey welcome back to the free Coke Camp podcast I'm Quincy Larson teacher and founder of freecodecamp.org each week we're bringing you Insight from developers founders and ambitious people who are getting into Tech this week we're talking with Jessica Lord Jessica worked as a software engineer for more than a decade at companies like GitHub and glitch uh she created the electron team at GitHub if you haven't heard of electron it's a library for building desktop desktop apps using browser Technologies and if you've used the desktop version of slack figma VSS code then you've used electron Jessica you're over in London how's the weather over there dim dim this is the the natural light we've got really today awesome well I hope it clears up a little bit and you get a little bit of Sun at least well we're so happy to have you on the podcast and real quick before we jump into our conversation I want to thank the 8,427 kind people who support our charity each month and who make this podcast possible you can join them and support freec Cod Camp's Mission at freecodecamp.org donate or you can click the link in the description so Jessica you are the first person I've ever talked to who is both a Lord and a lady it's true it's true I really like having this last name sometimes the male comes for me as Lord Jessica just depending on how their database spits out addresses um also fun fact emically emically is that is that right emically yeah and their shared emology is that they have to do with bread Keepers so Lord is like a loaf Ward and over many years it got smooshed into Lord and then lady was a a loaf maiden like Neer like bread Neer and then that also got smooshed and so Lord and Lady come from like the people who had to deal with the bread interesting so like you think of those people as like High Society you know and nobility essentially and yet you know they were originally just like terms for people that worked alongside you know the farmers and everybody else inet said it was a loaf Ward so like or Ward so the person who gave out guarded guarded like the bread because I guess it was maybe valuable then so yeah well I imagine it was valuable back in like medieval times and stuff get yeah everybody's working really hard to to make all the inputs to make that bread possible so you got to guard the finished product right um but like I mean you wouldn't think of like the you know the mall security like watching over the the Apple Store uh you can think of that person as being like some elevated person in society today right yeah I think it's like back when spices and sugar and maybe bread had to be locked up in kitchens yeah well I mean like wars were fought over spices right like territories were conquered over spices people people really love uh having tasty food yeah so I am very interested in like learning a little bit more about your background obviously you've worked in tech for a long time you probably have tons of amazing War Stories and tons of stories of like getting things done uh with the many projects you've worked on but I always like to like have some sort of chronology to my podcast so that people can like understand how you got you are like you grew up in the states yeah yeah I I lived in the states until three years ago I'm like I'm I'm technically British by the skin of my teeth like two technicalities including my mom being born on an Air Force Base during Birthright citizenship years so oh okay so they they had something called Birthright citizenship at one point is yeah which America has today still right if you're born in America you're American but not the case here but they did have it um back then yeah yeah well so when did you find out that you were British or had some claim to like a British passport 3 years ago I just yeah I moved quickly after getting it but I I was always unsure um because being a military child my mom moved really quickly from here she kind of she has no memory of this place she left when she was two um but she has a British birth certificate and there was another gacha which is the K didn't give women the right to pass on their citizenship until January 83 I was born in September of that year so I was the right side of that and because of those two things I qualified and so a friend actually recommended like an immigration lawyer and I spoke to them and I was like here are all the things I know does that make me British and they were like yeah am I British enough wow that's crazy so three years ago like yeah uh so 83 I was bornn in 80 so three and a half maybe yeah yeah yeah so I mean you lived like the first 30 plus years of your life like totally oblivious of your roots I guess yeah yeah yeah it's so cool that like the moment you could you picked up and like just yeah and it was it was in 2020 and so it it's the middle of the pandemic too and I still made it happen wow awesome well let's talk about like so where did you grow up uh I mean probably a lot of places if your parents were in the military right well so it was my mom's grandparents who were in the military my parents weren't and so I grew up in one place okay where was that yeah so it's like Warner Robbins Georgia shout out if like anybody listening knows about Warner Robbins Georgia it's in the region called Middle Georgia it's the geographic center of the state or the heart of Georgia and yeah it's it's where okay the heart of Georgia yeah there's it's just it's a lot of small towns we do have a big Air Force Base there which employs a lot of people and brings a lot of people to wner Robins usually though if anyone's heard of any town in Georgia that's near it they've heard of mon which is also in Middle Georgia so yeah so monish okay so it a pretty small town like it's not like some bustling Cosmopolitan place like where you live now no yeah and what was your childhood like super suburban sprawl it was I mean my childhood was good it was a very Suburban childhood lots of subdivisions and things but also subdivisions in between Farms so goat farms and like crop farms and then a subdivision called like River Wind that's like the name of a casino in Oklahoma where I grew up a River Wind so it definitely evokes that kind of like Suburban kind of uh like pining for like not being somewhat agrarian like we celebrate The Agrarian in Oklahoma and yet like it's Suburban like it's like yeah you look at it it's just a bunch of you know culde saacs and stuff so yeah um that's cool and by the way if anybody who hasn't heard the Rush song uh subdivisions amazing song from the 1980s I'm gonna link to it you got to listen to that after this it's just such a cool song and it's about growing up in the suburbs because like you know the rush that they were kind of they didn't like the fact that they grew up at the subs they wanted to grow up at the city but like yeah pretty cool song uh subdivision I'm just making a note to add that to the show notes subdivisions such a cool song it's got this iconic like 80s like huge Sy sound uh so you were over there and uh when did you decide that you wanted to get into technology and computers and you know the people aspect of Technology as well it sounds like well so my career in Tech actually started so much later but I got really into Tech myself when I was like in middle school early High School um but I genuinely and I've like tried to reflect back on this because now actually having been in tech for a decade plus now I'm like how how was it that I as this like girl in Middle Georgia was like programming on her own I didn't have any friends who did it but I was like I was spending my allowance money on like HTML books and I was building myself a personal website every two weeks like rebuilding it from scratch using like Photoshop 7 or something building new Suites of buttons every time um I was like in M IRC writing scripts there and and I I did yeah I didn't have like a community of friends that were into it and I genuinely didn't think it was a career or I couldn't imagine what a career in Tech would be like so it was a hobby it sounds like then yeah yeah yeah so you just approached it like you were just intellectually curious about yeah you know HTML CSS like a lot of the early web Technologies which ultimately became like the backbone of web Technologies because if it's if it ain't broke don't fix it right like as every engineer cringes a little bit when they hear that but yeah uh we just built all kinds of layers of abstraction on top of these these yeah HTML CSS I was ftping files I guess I was writing Pro scripts like for for MRC and and so MRC you said you didn't have any friends but if you were on IRC you were probably talking to a lot of people yeah I had like internet friends but not Middle Georgia friends so how old were you when you get got internet access it must have been like late middle school early high school so like I don't know six seventh mhm yeah yeah that's about when I got it I I remember going to nintendo.com they had chat rooms and I would just hang out and talk with people about Nintendo games and stuff and got exposed to a lot of things that a 13yearold kid probably shouldn't be exposed to but uh yeah it was it was really interesting uh and I I mean like internet friends you used to have internet friends and then you had your friends that you actually like hung out and ride bikes with and stuff right yeah totally totally and yeah all my friends at school and in the neighborhood Ood had no idea or interest I have a brother who's just a year younger than me also no interest in any of this and so it was just my like side thing and I was super I was super into it I I I'm proud I was a really good child and I didn't get in trouble a lot yeah but I genuinely like when I did get um like grounded and stuff the things I got grounded for were not taking ey breaks from the computer and because like in the very early internet computer days my mom was super stressed about me looking at a screen for too long and so there were rules about how I had to take a 15 minute eye break after every hour or something wow and I just like I wouldn't get off the computer I wouldn't take my eye breaks and that's what I would get in trouble for yeah that reminds me of like all the concern around screen time which you know there it might be well founded but I just remember during the pandemic like suddenly all those rules just kind of went out the window people let their kids use the tablet as much as they wanted so they get some sanity for themselves uh but yeah so it's interesting to hear that your parents were like very concerned about your your health and your eye Health uh at a young age My Eye Health yeah they were like it's cool you're interested in this but please protect your eyes yeah yeah so um you wanted to did you want to get out of the burps did you like Suburban life like I I mean I didn't know anything else we were just like a workingclass family in Middle Georgia you know our like vacations were just you would drive to Florida right so it's like everything was kind of the same in that respect like the biggest place I'd been to was Atlanta until I went to college in Atlanta um and so I just didn't know that much but I I had always loved architecture and if I wasn't like doing doing weird MRC script writing I was also using really random like 3D house Builder software that I would buy at Walmart and um or just drawing plans on graph paper and my dad is a builder and has done a bunch of construction work in building himself and my parents were always into houses and and because I grew up in this like sprawling suburb place there was always a new subdivision being developed and so I feel like every weekend for most of my childhood we would go check out a new subdivision and walk around the houses under construction and my parents were like you know interested in like where kitchen layouts were and where this was and I started learning about how houses were built and thinking about space and um yeah I mean when I was a kid I didn't even give two thoughts to you know why houses were the way they it's just a house I had like zero intellectual curiosity and today there are like several TV stations that are like dedicated just to like building house house construction house remodeling you know tons of reality shows around like uh like oh we surprised them by completely remodeling their house when they didn't even realize it and now it looks all art decoy or something right yeah yeah that's cool and so like I I I guess I knew that that was a job right like building house houses was a job and I didn't really know what kind of jobs were computers and and so like yeah when I went to University my mom was surprised they didn't do computer science I chose architecture well architecture does use a lot of Technology right like you're modeling things you're probably rendering a lot of stuff maybe you could talk a little bit more about that a bit there was actually at least when I was in university still a really strong because it architecture is this this like collision between technology but also art and and creativity so there was this really strong emphasis on like we had to like really like know the plans we were drawing physically and so we were not allowed to submit like final designs in CAD even though like CAD of course existed yeah then but we had to like draw them with our hands and learn to like feel them so it was it was a kind of a tactile like experience like you would actually would you actually carry those big tubes with like architectural Blueprints and stuff or around campus so yes I mean but we also had architecture studio so you would have a dedicated desk and lockers so that you didn't have to Lug so many supplies around and the architecture Studio was like the only building on Georgia Tech campus that was open 24 hours a day like Atlanta police officers sometimes came by and brought us Donuts because we were there like slicing our fingers open building models at 400 a.m. after not sleeping for two days so you would like actually use like the that foam stuff and like actually sculpt buildings yeah yeah yeah and like chipboard and and wood and stuff and we had to yeah we had to draw the plans build the models for them do the topography for you know like the Hillside and things that they were built into when I was living in tingan there was like giant kind of like diarama Museum and it was just diaramas of different parts of the city and so you would stand on this giant like kind of like thing and you look down at like this recessed kind of like platform that was just covered in like models of literally every building in the city and I was like wow like it must have taken so much work to like figure out like where everything was and like map it out and then actually build it out so you were building things like that yeah yeah I mean not at City scale we were building it for like you know the building that we were building on the piece of land that it was on but yeah yeah yeah I mean it does sound like a lot of fun it's like Lego blocks to the next level basically where yeah did you play with Legos as a kid oh for sure for sure yeah yeah my kids love Legos and like we go to the mall I don't know if you see those Lego flowers back there like every time we go I'll get them like a different Lego flower and they'll assemble it and we'll put it in that little bouquet back there but um yeah that's so cool so so one of the things I have of course I'd love to hear more about architecture school but uh for the sake of our audience who may not be that interested in architecture um I I'm really interested in how software and Technology were used at the time and how that has progressed even I don't know if you still follow the field of architecture and of uh you know like Civic planning and and these other related urban urban planning uh if you still follow these fields and read any of the journals or or watch like YouTubers that talk about this stuff but like what was the technology like back then and how has it changed so I I still have one foot in on all of that stuff I'm sure there's plenty of stuff I don't know about but what eventually was frustrating for me is so I graduated with architecture degree worked as an architect for a year then I went to Boston City Hall and I was an urban designer there and I worked in the Urban Design Technology Group and I was like this is perfect like this is the role I'll be in for the rest of my life it's like clearly made for me I love computers I love cities um and I came to learn there was not a lot of Technology actually um and that I you know was one of the youngest people there and the person who had the best idea about what current technology was but I mean at the time at City Hall we were using CAD um sometimes like Google SketchUp and I think someone else has bought SketchUp now and I forget who owns that um when I so when I first graduated and did the architecture job we were using Revit which was kind of a big deal then of like building information modeling of like it used to be when you did Cad and you had a plan and you moved a window in it you then needed to move that window in the section in the elevation and everywhere else but um Revit so you you can like cluster things together so you can move like entire like I gu collections of elements kind of like how you can like set everything as a group or a layer in like Photoshop and move it at once yes exactly you could move the window once and it's moving everything else like it's moving that window and all other related documents it can create the other documents for you it can do building material calculations it can do renderings and so it was the next level and it was such a big learning curve still at that time that a lot of architecture firms were still stuck on CAD because like the inertia to get everybody there to learn this new software but I I was lucky in that I joined a very small Architecture Firm um and so we did switch to yeah I mean and CAD is like a primordial tool like it is I mean CAD computer AED drafting right we used it in wood shop class when I was a kid and I mean I'm sure that there are like industrial versions of CAD that are way more powerful and everything but like I I think of CAD for Designing like you know like something that you're going to uh machine like a part right uh some small like widget that you're going to put into like an engine or something not for Designing something is complicated and you know deliberated upon uh and impr precise is like a house I guess like if somebody wants to have their dream home they probably don't want to be using CAD to build right no you absolutely do CAD really precise like yeah well I mean it's extremely precise it's extremely precise but what I'm thinking is like I mean with a part like the the design considerations are probably pretty baked in and maybe you wouldn't go through as much iteration as you would with like a house like okay now we're going through this rendering of the house and like I don't like where this this bathroom is or something like like okay well let me just move the 20 five polygons or whatever that make up this bathroom individually to a different part of the house and yeah I can just imagine that being like a lot of work well you also start on paper too right and sketch and work with a client and so by the time it even gets into CAD it's gone through so much iteration just because getting things into CAD is probably very expensive in terms of time and I'm sure there's like different like versions that do have like shortcuts and like component libraries and stuff that make make some of this easier too but there was still a very big leap between like Cad and the like building information the Bim building information modeling system software building information modeling B BM yeah yeah so that's a jonro software that I just learned about awesome well um I'm very curious so of course I'm curious like what you did after you got out of school but but while we're on the top a school you went to one of the Premier engineering schools in the United States uh Georgia Tech I've had I think several Georgia Tech alums on the Freo Camp podcast uh they have you know a very prestigious computer science degree program and so you're studying architecture but you're interested in computers did you ever think like maybe I should switch to computer science or honestly get this is something I've reflected on now that I'm this many years outside of having switch to Tech fulltime because yeah I went in to Georgia Tech doing architecture they definitely had a computer science program but still like I like I think I just couldn't imagine and I think that sounded really boring to me um like what kind of job would that be and so I did architecture um but Georgia Tech at the time was one of the few or only schools that required all majors to take a CS course to graduate you had to take like an intro CS course and it was my easiest a at Tech like I really like I had architecture studio is nuts it's so it's so subjective and it takes a lot of hours architecture Studio was worth like a lot of credit hours too and so it was like it weighed heavy on your GPA and yeah it was just like down to like does someone like the way you did this compared to like my friends who are in other major where it's like it's science there are like really clear answers to a lot of these like objectively right um yeah so it was like doing the computer science class was my easa at Tech all my architecture like fellow Majors they really struggled with it we did like gyon which was like Java python something and sounds fun created it it was fun we created like scripts um and and made websites and then I took like a few other like CS courses like that went wherever I could like for electives and stuff and yeah it was like fun and easy for me but I still was like but this isn't a jaw yeah so it sounds like you just kind of viewed I mean throughout your entire childood you almost kind of took technology for granted to something that was fun and interesting but it wasn't like a serious field you could go into and like yeah at what point so you're working for Boston you know massive city in the United States esteem for its very old architecture yeah all right because it's one of the oldest cities in the United States so it probably has like buildings from like pretty much every period from the past 400 years 300 years I don't know um what was what was the uh I guess the path from doing that to working as a software engineer because obviously you did transition into software engineering yeah yes so like I said I was in the Urban Design Technology Group and I was feeling a bit frustrated that there wasn't as much technology as I thought there should be there and that considering the name of the organization for sure right you think they would have a technology Focus right and I didn't want to be the person like I didn't have anybody else to ask or talk to about technology there are some things I felt like I was hid my head against a wall trying to get some things going I felt like you know at the time I didn't know about the term open source and the open source Community but one of the things I was really wanting to make happen at the city was that cities should share their ideas and their thinking I like kept trying to push for us to have a Blog where we talked about like the planning initiatives or we talked about the things that the urban designers and Architects at the city were thinking about because yes like City are different but also they're the same and they share a lot of the same problems and eventually I had been there like three years or so and this thing called code for America started and had its very first year where it was partnering with um cities to build open Source software that cities could share and so even though that was like genuinely what I was like trying to do and hoping to do when I was at the city I still I still was like this is cool but again I don't think I want to write code all day that just seems really boring and so I really I I spent almost the whole year working with some of you know the teens that they were working with and knowing about it and it wasn't until the very last minute I was like well it's free to apply why don't I apply and at the time I was considering like should I go to grad school for something and I it was like I might as well just apply and I applied and then I got it and I was like okay well I'm going to go do this I'm going to go spend a year basically geeking out and being able to actually talk about technology with other sort of Civic Tech nerds and be able to bring it back to cityall Hall spoiler alert I did not go back to see Hall let's talk real quick about code code for America So for anybody who hasn't heard of it like it's an organization I greatly admire uh Jennifer paa I think is her name the founder like she started it you know this is probably like 20 2009 2010 like is that about when you yeah so the first Fellowship year was 2011 and then I was in the 2012 Fellowship year so you were very early to this that esss developers with people right and tries to like like hey how can we fix your sewage problem with technology or something like that right yeah yeah and I I mean I think they've changed the model a bit now but during the first few years when it was primarily a fellowship fellows like me would apply to be the fellows and then cities would apply with a problem they had that they want the fellows to solve and so then the organization would pick a group of fellows and then pick a group of cities and then everyone worked together to try and solve that problem with open source software that other cities could use yeah that sounds cool and how has it changed just out of curiosity because you said they're not necessarily using that approach anymore so I don't know all of the details actually um but I think I think it sort of works more as like a consultancy now but I could be totally wrong um I think the primarily Fellowship stuff lasted for like five or so years yeah that's so they's they're still doing like human centered open source government work but I think in terms of like H Staffing that and like having a longer running project rather than projects that get spun up then shut down like every year they they iterated on that yeah well I would love to eventually get Jennifer on the podcast uh aspirational goal of mine like maybe I'll just cold reach out to her if if you know anybody I can talk to like definitely send me a link because I would like to uh learn about the history of the organization again it's an organization that I deeply admire uh and was really inspiring and I have a lot of friends who went through it it's I I kind of joke that it's like the peace score for people that just want to code and don't want to go overseas yeah yeah yeah we used to say it was peace core for geeks peace peace core for geeks okay so I'm not that far off from what people are thinking but it you know it sounds like a great bridge into working as a Dev because you're kind of working as a Dev but you don't have to go through like the grueling interview process and you don't have to explain yourself to hiring managers and stuff did having a year of working with code for America help when you went into the job search later on well so it yes it helped that it also showed me what writing software as a job actually looked like and what the other people who did that were like um and so it really sort of became real in my mind rather than like all these years I had been like no there's definitely no way I want to program all day um but I I also fell into the right place at the right time in terms of like San Francisco and 2012 and on and I and like code for America was great at really connecting you with other people and other like interesting open source developers and organizations and so I I fell into JavaScript and node at the right place at the right time and got really involved um in node then and and so I got really energized then in that year like seeing like oh this is what a career in software development looks like and I got really excited you know with the people I met who were doing software and I got excited and energized by how fast things went especially having come from the last three years being at City Hall where things don't move fast and maybe they shouldn't move fast certainly but yeah I mean there's some Merit to things not changing too quickly when it's government related yeah um but it was it was really eye open and yeah it it just painted the picture to me of like oh this is like and actually software is creative and you can have fun and um and it's like really collaborative and stuff and and it finally also put a name to open source because like I said I didn't really know about open source I didn't know about the open source Community I had always been in this little bubble of my own um writing code for fun and so once I so like really started to then understand like the open source Community the role of GitHub and open source and stuff it just it just filled in a lot of blanks for me I'm I'm definitely like sensing kind of like a theme in your I guess your history and your your career progression and all that and one of the things you've always emphasized is wanting to help people collaborate right and do you think that this childhood where you like the only person who was into technology and you had internet friends but you didn't really have like real in inperson collaboration do you think that that kind of like spurred you to like I want to increase the amount of collaboration in the world I don't know maybe like for some reason I've always really cared about the idea of like shared knowledge so I remember like when I applied for code for America I you know didn't have like that much to show I done like super random stuff I had done some websites for the city for planning projects and things but I also had like a personal blog that I did with my best friend still online called ecab EAB online ECA b o online however you spell online um where we it's like all how to make and sew things but we would draw tutorials and diagrams and I I was just really I don't know why but I've always just felt like it's important to like work in the open and share what you're working on and share knowledge and yeah I don't I don't know and I don't know where that I don't know this is so cool I mean like the it looks like a Google Blog blogger blogger BL from P yeah oh man so cool like your own pencil JY Pala saw that site and was like yeah this person cares about like sharing knowledge and so I was like yes my craft Blog has helped me yeah awesome I'm GNA link to that in the show notes for anybody who wants to check it out note that the uh https like it it it wasn't um like yeah I don't know maybe that's something you just go into blogger and configure but it's it looks safe to me I clicked through despite the scary warning from chrome uh yeah so so cool so you maybe you can explain the the process because I'm I'm really curious about okay when you finished code from was it like a preset like I'm going to commit for like one year and then I'm going to figure out what to do from there like you're winding down your time at code for America what is your next step like how how do you approach the next leg of your life yeah so I was winding down code for America I was like having to decide am I going to go back to Boston do I go back to City Hall and I like through connections at the time I got a kind of threemonth temporary gig at diy.org to help them build out like challenges so that young people could learn about how browsers and servers worked um and so I came on and was working with them and then I I actually got like a DM asking if I wanted to talk about working at GitHub and so I got lucky in that respect of like I don't think I've even would have thought of applying to gith HUB and so I met up with someone at GitHub and I started the interview process and then I got an offer and I just had that moment well actually the moment I told myself was like this is like really amazing and unbelievable but I thought I was going to go back to City Hall but also in the grand scheme of things I'm only going to be learning learning more that I can bring back to City Hall later so if I just do this for like if I just do this for three years I can go back to City Hall then you know with more knowledge yeah I always kind of entertain this this notion of going back to be a School director and being like the most competent School director ever uh in terms of like being able to take all the Automation and you know management skills I've gotten for free C Camp and just run like a you know a tiny English school or something like that uh so I can kind of relate to that notion that like everything I'm learning I could take more so why don't not learn even more and so that kept repelling you like 10 years in do you still like entertain the notion of going back to to City Hall I do well yes I do actually and I still have some contacts and actually amazingly like another code for America fellow who I think was the year after me is now like chief of staff at the city of Boston um you know and works with the old the department I used to work with there so I think in Boston has always done some really cool stuff um they've had like the office of new Urban mechanics in Boston and they've done cool stuff um so yeah it's still back there in the back of my mind that one day I'll go back did you you didn't have to give up your US citizenship are you like a dual citizen or I'm a dual citizen okay yeah that's one thing like the US does with some friendly countries but with like China and India and a lot of the other big countries they they I guess all the nuclear powerered countries I don't know does does Britain have nukes I can't remember but but yeah like um that's cool so you could still potentially go back and uh and work in in government there I'm not sure if like even if you were a British citizen you might be able to work in the US government I'm not sure what the restrictions are sorry for this tangent my thinking is like Okay cool so you're at GitHub now like or you get this like you know Cinderella story of like not even having interview basically did they still interview you so I yeah I did I did interview I just didn't apply myself like someone reached out to me and started the conversation um because yeah I don't think I would have ever attempted which which completely changes the dynamic is like oh you want me huh okay well like it it probably gave you a lot of like they probably were a lot less rough on you than they would like a peral walk on who's trying to uh try out for the team it was also 2013 so honestly it was like there were not a lot of like rules and regulations happening at San Francisco companies at that time and I benefited from that for sure yeah like you just maybe you can describe because that was like pre Microsoft acquisition that was like way back in startup land like uh I remember uh you know cuz free Co Camp started in 2014 so this was before even that um and yeah what what was it like getting a job at GitHub do you remember like do they ask you a bunch of interview questions like at the Whiteboard or was it more of like a are you a a GitHub I can't remember the term that they use for people that work at GitHub an octocat hubber yeah hubber okay yeah I'm trying to remember I think I had some small coding exercises and then I had um just some were just sitting down and talking to people and then some were because at that time GitHub had no managers we didn't have have um like we didn't have product I'm pretty sure all the engineers were also designers as well right this was like Mark Otto was there who had done bootstrap I there was very much of like Mar met him I met him at a conference and I was too intimidated to talk to him but I stood by him and like nodded while he talked to his you know click of other developers yeah and so there was very much of like you wear multiple hats and so I also I one of the interviews was just going through one of the GitHub pages and talking about how I would redesign it and code it and like sort of do a walkth through of like interventions to improve the page and why but yeah everyone had to kind of design their own stuff at the time too yeah and then that was and then the job offer I got then it set because again this was like the everything was so it said frontend super star is what literally my title was on the job off wow front end Superstar I've heard I haven't heard that one I've heard like ninja I've heard like you know Master Chef like I can't remember all the all the different like you know names I've heard for job roles but Superstar is a pretty good one you must must have felt pretty good putting that on your LinkedIn I I didn't even create a LinkedIn until like three years ago but that is privilege right there I I I probably had to send it to like landlords and stuff who were like okay this is fake yeah so um yeah what was it like the early days like again this is like and and of course I just want to stipulate that like this is your current job like your current floyer is get up so I'm not asking you to like say anything bad about them or anything like anything you can say if you can't talk about something it's totally cool just tell us you can't talk about it but like what can you talk about do see tidbits the dayto day was there like crazy you know beef jerky and and like uh confectioneries everywhere like did you have like lots of confectionaries I mean there were beverages as well there but it was it was very interesting it there were lots of things I liked about it there are lots of things now that I've been in tech for long enough that I knew could never work work in the long run of like we didn't have managers everyone it was like a a sort of land grab freefor all of you went into the repo you clicked issues and you picked something right and you planted a flag and like I'm now like questioning some of these metaphors I'm using yeah but you put your stick in the ground like the Oklahoma Land Run I got to tie it back to Oklahoma yeah you yeah you just you claim stuff and if someone else maybe was working on it would have to work up the courage to ask them like could you join them and work on this too and and yeah so it really benefited stronger personalities yeah um and and people who are friends with each other worked together on stuff and so it was like kind of chaotic at the beginning and and that was during the period when GitHub was really like proud that it had no managers and that and they would say no one will tell you what to do at GitHub yeah which is a fiction because at the end of the day there are things like that you know there are lines you can't cross they may not be visible lines but there are lines yeah yeah I I want to take a moment just to talk about um the role of bureaucracy and the importance of bureaucracy in like militaries and governments and uh even like large corporations like there are some pretty big companies out there like Walmart has like a more than a million employees you know of course the federal government in the US has like 2 million um like even a company like Microsoft might have like hundreds of thousands of employees like if you don't have any sort of like chain of command and like people you report up to it just becomes charismatic leadership you get like the uh the the Wei work guy coming in and like serving tequila shots and right after he fired half the people you know and like you just get like this weird you know kind of like uh the loudest voice in the room becomes The Voice that people have to listen to or or the most imposing threatening tall person who's like looming over you you know or or or the person who just has the most crazy kind of memorable ideas even if they're not good ideas um and I am very cognizant of that because free C Camp like our our organization our charity we don't have like a a chain of command so to speak like I consider myself kind of like an individual contributor and IC alongside everybody else but at the same time I'm very aware that this will not scale and it might work with like 35 people but it's not going to work when we have like hundreds of people you know decades from the future if that ever comes to pass like yeah uh and and so I think what you're describing if I can editorialize a little bit not having ever worked to get up and only knowing a few people that have uh but it probably was like kind of like the growing like going from small founder driven startup to like bigger company and you were there for a lot of that growth like do you remember how many people were working there when you joined I think I was like 175 okay um and when I left three and a half years later we had like over 600 and I think today we have like 3,000 interesting so you came in under the dunar number which is like like the psychological theory that like a human can keep like about 150 human relationships in their mind and so oh I know this person they're on this they're working on this and like you could conceivably know everybody that worked with the company and it's like 100 what what did you say your number was it's like 175 I think okay so you were just over the Dum the dumb Bar number is 150 so but but still like you're kind of stretching the dumb Bar number but like once you get up to like 300 plus people then that starts to break down pretty quickly especially if there's like a lot of churn which in Tech famously like I don't know about that era but like it you know the average tenure of a developer at a company might only be like two years or something um yeah like like was was there a lot of was it chaotic back then there yes I yeah I woulda I think chaotic is like a fair word I mean we still did stuff we it wasn't all like we are like chickens with our heads cut off and nothing was getting done we were still doing stuff we still had like a a singular Mission you know but it yeah it but it it experienced every growing pain like I and I but I so I think that there was like a period where it everything felt like it was the right size we all knew each other we all trusted each other and everything was like golden for a while but like you said yeah as it grows and you start to know fewer and fewer people and what and less and less about what's going on um then it then it breaks down more then you need more structure like I mean I remember when we got lawyers and stuff and you grow and you have to go through all of these things and so yes and even still at the at the time that I left originally they were still trying to figure out GitHub had finally sort of caved to having managers um but then it kept flipflopping about should managers be technical should they know should they have like technical skills in the area they're working on or should they just be people managers um there's something in developer culture sorry to interrupt you but like more than most Fields I think developers want developers as managers they want people that are quote unquote technical because it's it seen as kind of like a badge of an honor like I can yeah go in and I I can go to a whiteboard and I can explain how this this data structure works and I want my manager to be able to do that I don't want to be managed by some you know point pointy haired boss you know as as they're called like Dilbert if you've ever read that comic uh it's it's all about like the the people that like have risen to their highest level of incompetence where like they can't rise any higher so they're just there but unfortunately they're there above you and you have to report to this person who doesn't even really understand the work that you're doing right like that's every developer's kind of like nightmare is reporting to some person whose background was like selling sugary soda or something and then they transitioned in like to use the you know the Apple Steve Steve Jobs bringing in John Scully metaphor like they had this culture of like developers and innovators and then they bring in the Pepsi guy and he proceedes to like run the company to the ground and every like nobody in the company respects him and everything like that right like so I think more so in software engineering than a lot of other fields people want to look up to somebody it would be like if you were like a soldier and like some general son came in to manage you or something who didn't have as much military like you'd be upset and you probably some um what's the term for it like you wouldn't necessarily comply with the rules um and you wouldn't necessarily You' perhaps grudgingly carry out their you'd be insubordinate that's the word I'm looking for did did you sense any of that like when you when GI brought in managers who had like an HR background or had a legal background or something but they were like suddenly over developers did that happen very often um so I don't think people came with like HR illegal backgrounds to become engineering managers but they maybe had been Engineers you know 15 years ago and on a completely different Tech stack um or they had come from like a really giant corporation that didn't get the GitHub culture right um and so I think that was where some of those issues were around you know trust and respect and feeling like your your manager even understands what's going on on but I think you know the the inverse there was the problem too of well if our managers are Engineers who know the tech stock deeply they maybe have just right been promoted up into management and gotten a pay raise but actually have none of the skills it takes because they are entirely different skills like being a people manager um but they thought it would further their career and it was more money and so then an engineer like becomes a manager and so like theoretically they understand all of your technical challenges really well but they're awful at the people stuff yeah or maybe they actively kind of avoid the people stuff that people part of their job and they just kind of retreat into like codebased minutia as a way to yeah kind of like use up their time as opposed to like actually cultivating younger Talent or or they really hate not coding and then they keep coding and not doing not not unblocking their people yeah I mean like a manager who complains about meetings that's always like the the worst in my mind because it but I'm not I'm not again I just want to be clear I'm not characterizing any managers that GitHub my own knowledge of that is limited but I have had lots of managers who uh kind of like regretful managers problem either yeah I think I think lots of companies have gone through that growing pain of figuring out how to get good managers yeah so you are a manager yourself now after many years working as a software engineer you are a product manager the other PM you know there's pro project management and then there's product management and they're both simplified to pm and you hear that PM term a lot but if you're working in like construction or something a PM is completely different than if you're working in software and there are project managers in software like there's agile project Managers from like the the PMI ACP the project management institution uh agile something something uh project manager agile certified project manager right like so so just to just to be clear product management and P and project management are two different things it took me a long time to realize that and it was a source of great confusion for me but uh maybe you could describe very quickly what a product manager is and what they do yes so a product manager in the most general terms I think is making sure you're building the right thing in the right way at the right time um and and so yeah I came back to GitHub almost three years ago and this is my first time as a PM and this is a culmination of a few things to part of it I think it really suits my architecture Urban Design brain like I think about how people experience the systems they're in right and you know working in product is like I'm thinking about the end user right like ultimately I'm thinking about when you go to github.com like does it work the way you expect it to does it help you collaborate does it make you more productive or does it like piss you off yeah um and so I think that that that's part of it I think part of it is that I feel like now I seen engineers get stuck on really interesting technical problems while their really cool product idea sort of dies because they don't know how to talk about it and they aren't prioritizing building the right things in the right order and so I think for me there's also there's satisfaction in getting to be a part of the decisions about what we do so that I that I like I can feel less frustrated that we're doing the wrong things right which as an engineer you only have like so much say around um yeah and I think I also got kind of tired of not getting to write exactly the niche JavaScript that I wanted to write which is completely unrealistic if you want to like work at a big job anyways so there was like multiple factors where I was like I'm going to try and be a PM for a developer to um and actually so when I was first at GitHub and I the last thing I worked on was starting the electron team and that was like I was wearing a lot of hats at that time and one of them I was wearing but I didn't realize I was wearing at the time was product and so some of the stuff that was the most fun about working on electron getting it to its 1.0 then is like actually very product related and not to like be too boastful but I genuinely think was like really important to establish an electron early on like establish how we talk about it how we do the documentation um and how we prioritize you know what features are needed to be done when so essentially making sure that you're building the right thing in the right way at the right time and communicating what that thing is right like product management exactly yeah yeah yeah yeah so I've come back now and I'm a product manager awesome and uh we we can talk about your journey away from GitHub and your journey back to it but uh I just want to talk a little bit about electron because it's such a cool fundamental technology that we take for granted like that there's this Library where you can build desktop apps that also leverage all the power of like chromium and all these other browser tools and essentially make you know native app development put that in air quotes that make Native app development like web development so if you're a web developer which more than half of all developers on Earth are web developers uh even like mobile app developers uh they're not spending all day like you know doing mobile app development per se they're doing a lot of web app and uh development in and writing apis that the mobile app consumes right so uh I I just want to clear clarify that because so many people are like why do I have to learn you know web app development I want to do game development or something like well you don't understand like web app development is development in 2024 like everything uses the internet as a platform uh so I'll get off my soap box but um yes you you were involved you essentially uh in the Inception of this critical tool that like you know Microsoft uses heavily with VSS code that slack their entire mobile app uh I think Spotify like a lot of other if you ever downloaded kind of like the mobile or or the desktop app version of a website it's probably running electron under the under the hood yeah maybe you can describe what that that process was like like why was it created like was it to scratch your own itch no it was no no part of me actually had ever wanted to build a desktop app and I knew nothing I knew nothing about Native development I didn't know how like siloed it was was or how you would have to have three teams building the Mac version which like if I had to sit down and think about it I could get there but I just never thought about it before because it was never like I never needed to think about death stop ass um it was because I had moved on to the Adam team at GitHub and so Adam shout out to everyone who still remembers and loved Adam yeah you we used it like I think I did yeah I loved it um and Adam uh yeah go ahead Adam was gith hubs IDE it's like code editor which I mean you can go way back in the origin stories be because it was even like um Chris wanstrath who was one of the founders of GitHub defunct his handle um he it was like a sort of pipe dream of his even when he was founding GitHub and he kind of Never Let It Go eventually he hired a few people to start working on it at GitHub they're writing it and Ruby it wasn't going great for all of the like asynchronous things that needed to happen in the text editor um they also part of um dun's like original Vision too was that it should be built with web technology and so there was this kind of Goldilocks situation where the I think it was like three people originally were sort of just working on it like at GitHub before it was even like talked about at all they had tried um there was like nwjs and then there was NW like Northwest like Northwest but it I think it stands for like node webkit or something okay I can't remember now and then there was another one it had the word Chrome in it I think I can't remember it's what it's what Spotify was using years ago um but both of these libraries tried to do the same kind of thing which is allow you to build desktop apps with web technology but they did them in sort of different ways that made it like really harder to access node or was bundling too much of chrome into it so it became really big and so yeah it was this Goldilocks thing where they kept trying this and then trying that and none of them was quite right and they ended up talking to this guy Chang who had been working on nwjs and he also shared this vision for like a another like alternate version of what the library could be and so he started working on it at GitHub and it was just called Adam shell Adam shell s yeah s h l l so it was just it was literally just built to build Adam it was just a thing that existed so Adam could exist um and at this point it was just like an internal tool like it was it open source it was open it was open source one Adam itself launched and open sourced because Adam when it launched it did open source like its entire or of repos so it was open source from the beginning but you'd really only know about it or care about it if you were already also trying to solve that problem of I just want to build a desktop app with web technology right because that's what would lead you to question well how was this built um and yeah and so there had there was no plan for for it it was called Adam shell it just existed to like it its sort of road map was only to build things that Adam would need yeah um and So eventually I joined the Adam team I onboarded I started learning about all these things I learned about why like why trying to build a desktop app is hard um and I just started I just thought it was actually the Revolutionary sort of tool besides Adam which and I loved Adam right but Adam's a text editor does a lot of things that other text editors do but I thought the like real game changer was actually Adam shell and so I honestly just started being really annoying and I I benefited again from it being kind of Loosey Goosey at early GitHub yeah I mean it sounds like this is the perfect environment if there's ever been a perfect environment to like just step in and say hey I I want get this project going and like permissionless Innovation right like nobody's going to tell you stop because there's nobody to tell you stop I did get tell I did get told stop for a bit um I genuinely was told if you care about this just work on it on your weekends like it's it's I like I kept being emphasized that it was not important it was not important um and then and then eventually so this is preacquisition but Microsoft had reached out to say hey we're building a text editor too and it we're using Adam shell just giving you a heads up we're going to launch this at this conference and we had this moment where're like okay it's going to start getting confusing actually if other people are making text editors and actually they can make anything and it's all linked and named to Adam another text editor it would just get confusing so we just had like an internal brainstorm whatever we picked the name electron and so then then it got so then it got renamed electron but it was still just going to be this dependency of adom um and I I kept being annoying I wrote up road maps about what should be developed so that other people could build apps yeah and then eventually yeah eventually I someone said that I could spend my time on it and so and it and it grew from there of like putting together the road map making sure all the documentation was good and building like like the demos app and stuff and making sure we could communicate like what it was and why you should care about it yeah so at the risk of maybe edifying you too much it sounds like a lot of this stuff like like without your internal advocacy and things like that it it may have taken a lot longer for a tool like this to get off the ground and so you being the squeaky wheel you ultimately got the grease and in this case the Greece was having a whole lot of people adopting this tool and having this very you know active open source project that uh because I mean like a lot of people don't realize this but like most people who contribute to open source are getting paid to contribute to it right like like people software engineers at Microsoft right Microsoft has a lot of software Engineers on their payroll and once they're contributing along with the GitHub team and you know potentially the slack team and like all these other Engineers are coming together like hey we depend on this tool we need to add this feature we need to improve the per over here the performance we need to do XYZ right like that had to really help kind of like be a shot in the arm in terms of the project really yeah speeding up but maybe you could talk about that that's my presupposition like did having a you know a bigger table did bringing more people to it did that accelerate development I think so I think yeah I started like using my time to speak about it at GI help conferences and other conferences and um I mean Microsoft took it after the acquisition it's not like yeah you may you may have added a few uh tens of millions of dollars to the acquisition price because he like oh yeah more more Spoils of our acquisition yeah yeah so I definitely think so and yeah like slack Engineers were very active early on helping it along yeah yeah that's cool well um at what point did you decide like hey I want to go work at other companies like I don't want to just stay working here at GitHub because you know a lot of people would you know be perfectly happy working at like one of the most successful Tech startups of all time perhaps yeah definitely one of the biggest Acquisitions of all time uh and uh yeah maybe you can talk about that a little bit Yeah like I'm happy to talk about it honestly I just didn't work with enough women and I was like I think I can do better somewhere yeah and like because I've been there three and a half years um and I I had never I had not had another technical I not had another software engineer like woman on any of the teams I've been on that's not to say they weren't there I mean some of them were there and they were my best friends but we were never on the same team and so my person personal experience there was that I had never ended up on a team that had another woman like um in a technical role and so I just kind of yeah I like I felt like I wanted to see electron to its 1.0 like that was really important for me and I wanted electron to have enough traction internally that I felt like I could sort of like marry Popp out of there and so and and that's kind of how it worked out like we did our 1.0 like GitHub started to say and see like oh this is important and interesting and worth funding and so we got like a proper engineering manager who I knew and trusted and so um yeah and so once all of that seemed like it seemed like it had a solid foundation then I was like okay so it's almost kind of like uh like my my baby's all grown up and I'm going to set it Loose into the world and now I'm going to go you know enjoy life as an empty nester kind of yeah yeah and so I went and I I looked for different kinds of engineering teams yeah and uh where did you go from so um technically I was at mongodb for a minute but there's like a whole other background of like their hiring system and why that did that's like a story for another time but then I went to splice which is like sometimes they would say it's like GitHub for musicians okay um oh splice like where you buy all your stems and stuff for if you're like a DJ yeah yeah yeah if you're a music producer yeah okay I'm familiar with him yeah yeah yeah so um I knew a few people there who I I trusted and thought were great and and it honestly it was like a lifechanging experience it was the most collaborative and diverse engineering team I've been on and and so I really like at that point I I swung the pendulum because I'd been really dedicated to JavaScript and node and open source and developer tools and like Civic Tech and open gov and all of that for a while at that point and I swung the pendulum and I was like the only thing I'm caring about right now is like a good engineering team and so I started writing go um go go the go yeah go and I you know it was close source and I didn't understand the first thing about music production so like myself so you didn't have the domain expertise like really the the feel for like users and empathy for users that you needed to be able to do a good job well I mean I think I did a fine job I just it was for me it was different to not understand our users as well as I understood the users at GitHub so it was just different you know like I'd be in meetings where someone would like throw out a music term and I was like can someone what's a sample oh no and so it's like so it was like a cultural fit but it was not a cultural fit it's like you know toxic culture it's just like completely different like would you consider cultural or just were most of the de developers that you work with like interested in music like yes yeah yeah like and and I did love that so like I still love that it to me it felt like a nonevil company that was trying to do good I felt like the founders were genuine and wanting to to Like democratize Music Creation more and get artists paid um and you know when our All Hands hearing them talk I felt inspired like I loved the stories about some of the like things we are enabling for people so in terms like in that aspect of culture like it felt really aligned to me and like I wanted to not work at an evil company I wanted to do good I wanted to do stuff that enabled people to be creative and follow their dreams and then I worked with like amazing engineers um and so in that respect it was all fine right and like in theory I could have carried on there forever it just ended up for me I I missed I missed being active in the community I missed like working on solving the problems for the community I was in you know and and so that's the only reason I left like I still think there are people there that I know that are amazing and are some of my favorite humans let alone engineers in the world um but I I ended up going to glitch after that yeah and glitch I'm so excited to talk about this company this is like the part I've been like all right I can't wait to talk about because I'm a huge Anil Dash fan uh and uh I had the pleasure of interviewing him many years ago he like bri coken was very new and he agreed to come and like hang out with us on New Year's Eve we had this big New Year's bash where I interviewed a bunch of uh devs including him uh so yeah let's talk about that sorry I didn't mean to interrupt you I just had to I have to contain my enthusiasm a little bit it just it ended up like yeah I I knew people at glitch and a Neal for some time and actually when I originally left gith help I talked to them about going to glitch and I didn't because it was so small and like mostly dudes at that time yeah like and I was like that's not what I'm optimizing for right now you know and so yeah after after splice which was just like an amazing group and it was tough but I was like I'm I have to swing the pendulum back and I have to optimize for like yeah for like open web stuff again um and so I I joined when they were starting to grow a bit more and they were going to really build out um a team to work on the editor self um and so I joined and was there for two years um working on that which was yeah a whole other experience because it was a very very tiny tiny startup yeah and when did how many people were there when you joined how many uh devs and then how many nondev I don't know it was really it was really small was it it based in New York where where where was it based so yeah we had an office in New York but it was still still remote friendly so some people were remote I mean I think at most we had like 50 55 but it definitely was like 20 you know at times yeah and glitch just for anybody who's never used it like free Cod camp we used to use it as part of our Core Curriculum because it was like such good user experience you didn't have to learn get you didn't have to learn uh how to like go into like the command line and you know run all these you know make files and stuff like you just went in and uh into the cloudbased editor and you just started building your full stack app uh using node.js using react using whatever tools you want and you could just build and and to be completely Fair like a lot of this functionality may still exist I haven't used glitch in a while but uh it was just like a great kind of like intermediary step to actually developing locally on your on your own you know development environment on your own computer so you said there were about 55 people it was a very technical product like I immediately saw this I was like wow they put a lot of engineering into this U maybe you could talk about like glitch the product containers yeah um yeah so it was really interesting because it's yeah it's the in browser editor and then instant continuous deployment of JavaScript and node apps um and so it was like you know easy enough to like if you just like literally needed to show someone on how one thing worked you could just write it and you would know it always work in the right way when you sent them that glitch link and then you could also remix sites so we also wanted it to be a way for like Bas it's like I used to have this thing called like fork and go fork and go like like in GitHub or in get like for branch I briefly tried to promote the idea of forking go of like building websites that are intended to be forked and gone with so like boiler plates and things like that yeah yeah yeah that were like 90% done and only needed you to like go in and change like a name and a bio or whatever um so like WordPress templates almost almost but just like so simple yeah way way more simple than um and because also GitHub Pages you know are also deployed instantly so it's like you could Fork a giagia site and then you also then have a live site um but so glitch like this was really baked into glitch too and you could it would work for node apps and so that was like the big difference whereas um GitHub pages is static sites yeah and and that was the big differentiator is like you had GitHub Pages you had code pen you had like code sandbox I it may have come a little more recently jsbin shout out to jsbin great great website that just solo found founder if you ever want to read some War Stories for being a solo founder of a project did you ever read that series of blog posts where he talked about like JS Spin and like what a nightmare it's been for him like he wishes he never started the project basically I'll see if I can find it I can link to it but you have people listening to this you've got to read this series of blog posts it's it's pretty sad but it is just like wow this is real you know yeah no there's a very like unhappy side to open Source right especially if you're a solo person and a project exploded and become widely dependent on and it wasn't your it doesn't fit in with your life goals yeah you can yeah there's a lot of unhappy friction friction in that path for sure well so you're working a glitch you're trying to build these fork and go which sounds like a a restaurant that would be like on the bottom floor of like a big tall office building yeah but so I glit is called remix so you could remix a glitch project um and essentially also have instant deployment you know and a URL right after you remixed it yeah and it was yeah it was a small startup I like I joined to be an engineer I was going to go back to writing JavaScript and node and front end um but it also quickly seemed like there needed to be some organization and and so I was like we need a manager and so I actually sort of became a manager like three weeks after I started as an engineer yeah and so that's my first and only stint in people management and so I was a people manager for my time at um glitch and yeah like eventually was like engineering director yeah for engineering that's quite a quite a series of like I guess with a smaller organization you can rise very quickly say you can do that in a smaller organization especially with lots of like the change and stuff at at startups um but yeah we had I mean it was still pretty small teens um running the these things but I thought it was really really interesting like coming from Adam I I was really interested in like building editor interfaces and that and that still really excites me about like glitch and excites me in general because I don't love vs code I think I'm allowed to say that that's fine you dis the name of our beloved it's like a space spaceship Command Center and so I yeah it is very complicated just to make sure I'm understanding like there it's it's like Microsoft Excel when you just need like Google Sheets or something yeah and so I thought that there was really really a need and a place for a simple a simple editor that and I think that simple editors aren't just to say oh it's only beginners need simple editors I think genuinely like people and I I say I think this but I've also like talked to these people yeah you know to confirm it like even you know established senior plus Engineers when you want to do something for fun or do something for a demo like you just need the essentials and you need to know how everything works and you just want to get in and start doing stuff you know you don't want to have to toggle a bunch of things or bring a config over and so I think it's really interesting like that problem of like what are good defaults in like a bare minimum code editor convention over configuration yeah yeah yeah the pendulum always swings like oh we've got total customizability oh you don't have to customize things CU we've got same defaults right like that always happens with like the tool hype cycle right um sorry for the the tangent um but okay so it sounds like you were doing a lot of stuff a glitch and like it's a small organization very exciting oneofakind product like nothing like this had ever existed as far as I could tell I almost look at glitches like an invention more than a product well so we did have competitors for sure like code sandbox replit like they were all out yeah but I mean like repet of course and and I think code sandbox just does front end stuff right like you couldn't run like full you couldn't run full stack apps there and and rep you you might be able to do that but they didn't abstract so much away from you like glitch did yeah that's why I think of glitches in a category of its own um in terms of just simplifying the development experience like if you knew what you were doing you could get in and get something live so quickly it was amazing uh so uh what made you want to like leave and and like why didn't you just stay at that glitch did glitch get acquired what what's going on with glitch these days I saw it was very popular for whle like everybody was using it glitch for whle like I couldn't believe the amount of get acquired by Cloud flare um so that's where it's at now but it it was just the startup life of like it was really chaotic I was wearing a lot of hats um a few other people started to leave and and yeah it it was tough because I I do I do think glitch is really really cool but I I had also like I had had a conversation with friends that were still at GitHub and had been there you know since I was originally there and I was checking in with them I'm like so what's it like postacquisition and stuff and and and you know what kind of opportunities and things do you have and and there was like a bit like I guess maybe it's becoming clear like every time I change jobs there's like there's like a pinge on like something I'm trying to course correct for yeah um but at glitch I did like yeah it's like we had product for like a minute and then we didn't have product and so then I became product but I was also director of engineering and stuff and I like could and when you say product again you like having product managers on the team that would actually oversee development of a particular product multi disciplinary bring the designers and the developers and and the you know business people all those people together and kind of like advocate for the product itself yes exactly and and so then eventually like also technically I was in charge of produ and but like there are a lot of engineering challenges there too and so there was just never any time to think about product and and yeah like I said like I'm really interested in sort of the product aspects of like what actually is like the minimal code editor that makes like senior people seasoned people happy and also is really inviting and not scary for beginners and like those yeah like solving those problems are product problems and I wanted to do do that at glitch and there was just never time to do it because it was just yeah startup chaos and like yeah and and and me being in charge there was like there was not a there was not a scenario where then I become just only in charge of product right like yeah short of them like bringing on a whole lot of additional people to absorb all the responsibilities that you taken on yeah so it was like I had to wear a big engineering hat and just like a tiny little product hat and and so that's what kind of got me thinking again and thinking back to my electron time of like I do really get some satisfaction out of like oh no we need to build the developer tool like in the right way um and so yeah checking in with friends about like what gith help was like post acquisition it seemed okay um and they happen to have a opportunity to rejoin and sponsor to to work on sponsors at GitHub as a product lead and so I did and yeah and that's where you are today that brings us up to that one hour of roundabout we're we're back to Jessica in 2024 yeah I'm not working on sponsors anymore but I am still product atub like we've had I mean it is a large company now we've had like four reorgs yeah get Hub spons just to talk about that product real quick we use it free C Camp uses it we were an early adopter of sponsors because we're a charity that likes to sustain itself and not run out of money and of course GitHub uh created this tool that would like at the time I don't think there were any fees at all it was like way better than like patreon or or even like PayPal or stripe uh so people could if you already have a GitHub account you can add your credit card number or whatever and you can start supporting open Source projects and I support lots of them uh I actually I don't support them through GitHub sponsors I I think I just use patreon but but uh people do support us a lot of Open Source contributors support free C Camp and uh so that that is a cool thing and GitHub makes it pretty seamless they it's a very clear minimal product it's it's unconfused and it's right there integrated into GitHub so um thanks for help helping oversee that uh cuz you know fre C Camp gets thousands of dollars a month uh maybe maybe thousands uh from GitHub sponsors this a big help um yeah so you talked about like some of the reorg can you describe what a reorg is reorganization yes re yeah reorganization the org chart changes and it is like so much a part of big companies and this is like so now being back at GitHub this is the biggest company by and large you know I've worked for so a lot of this is just what I've learned now being back almost three years yeah um um yeah reor like reorgs happen yeah what is a reorg like like exactly like oh so it's like what the people use this term all the time but I'm not sure exactly what it means I mean it can be triggered by anything right like someone very senior at the company decides to leave so then there's a hole and then like a few other people then get promoted which then leaves holes down below and then you all of a sudden you have to move all these teams around to make everything make sense again okay and and then company priorities change they change all the time right and so a company priority changes and to get enough people working on that uh priority like things are shut down okay and then all the people who are on that project then need to be like distributed to the other projects I'm kind of learning in real time but but the the Vibe I'm getting is it's even more chaos right like people people are like settled in they got their coffee cup they've got their their daily like cycle where they wake up they get certain things done they talk with this boss every week and and now suddenly they're reporting to completely different people they're working with different people slack groups and and you know uh all the other you know email list serves and all that stuff has to get completely reconfigured is that is that what happens well we don't have any email list serves but we do we do do basically it's all based on who what team you're on and like literally within GitHub the app you know how you can make teams yeah like it's around on the yo GitHub dog foods GitHub to like no end it's actually sometimes I'm like you all like I'm like I get it it's good but sometimes we need to use Google Docs because it does have its like yeah not in minute here like an entire culture of Engineers right I don't want to commit every time I re word yeah so uh just just to describe the term dog food real quick uh you and I are both familiar with it but uh there's this saying that like if you want to build like a really good product you need to eat your own dog food right you need to like be well acquainted with the taste and the idiosyncrasies uh all the different notes that you get from eating dog food I don't know that like dog food manufacturers actually do eat their own dog food they probably wouldn't be advisable that's really interesting does someone who make dog food actually eat their dog food yeah well they must where did I have to interview some uh some QA people from Purina or something yeah yeah okay yeah we we we I mean legal is on is a repo like HR is a repo like we we push it to the limits everything is happening on GitHub that's great um yeah and I mean a lot of internal tools are born like electron the fact that you wanted to build your own editor and not just settle for uh you know jet brains or something like that like that you wanted to so a lot of creativity is spurred by this kind of culture of eating your own dog food it sounds like but that comes with its headaches as well yes yeah and and because sometimes we're on things like really early before they release like projects you know exists and is a thing for everybody now the combon tool yeah yeah yeah but like we were using the early most broken version of it and I was like yeah you get to be the uh the guinea pigs the test subjects yeah yeah yeah um yeah well um I want to talk with like some practical advice obviously your journey into Tech is very unique I've never talked with somebody who came from architecture as a field and and Civic planning and things like that who just had somebody from GitHub like approach them like hey do you want to work I mean it's like again I use the term Cinderella story for you maybe there was a lot of like struggle and everything but that that sounds like a really amazing transition like congratulations on your extremely what sounds to be like a really uh idilic transition into like yeah yeah I did sort of later find out more details about how it happened and I I gu I don't know feel like is this okay to talk about but I guess like this is just yeah what I was told was Jim pacco Jim Palco was at an event with a founder of GitHub who is like who's doing interesting stuff at code for America this year and I guess my project was interesting right on getting a recommendation straight from the top Founders do talk to one another and so yeah so that's how I ended up getting pinged and I like yeah like I my code for America project was one that actually two other people decided they didn't want to work on and I was like well then I'm going to do it I I felt it was important and so I did it yeah that's awesome so I mean that would definitely be like a who you know type thing like like you make your own luck uh by virtue of being kind of the woman in the arena like being out there building apps uh working with code code for America uh which you know there were probably a lot of other lucrative things that you could have pursued instead of going into code code for America you you you took that and it you were awarded not just by being able to like do good work and make an impact I did use all of my savings to move myself to California yeah it's not a cheap place to live um yeah so it sounds like I'm trying to like take some generalizable advice from your story maybe you could summarize some of some of the things that like worked out really well that you're in retrospect you're like that was a very good decision oh my gosh on the Fly I don't know but I I feel like not I feel like what has been really good in general is talking working in the open like I think that also has helped me right like I find jobs and connections on Twitter from talking about what I was working on and I don't so let's let's pull in that thread a little bit so working in the open like of course contributing to open source famously we haven't even mentioned this but one of the most popular ways to learn how to use get is this uh node school module called get it that we used to actually recommend in our Core Curriculum and so probably thousands and thousands of people have used get it because we personally recommended it uh as like a good way to learn get and practice those different um you know commands and stuff and and get yeah and I have not Concepts yeah I've not touched it in many many years but people are still using it it's in the tens of thousands now that have done it um but and I so I do think so you mentioned like contributing to open source and I want to say that I also think it's like scratching your own itches too because I think it's really really hard to just go out there and find a project to to contribute to yeah um but you can create your own stuff right like create like nerdy Pages for things you're into create little projects for things you're into and just like as long as they are on GitHub like I don't think you necessarily have to be like I'm gonna become a top contributor to react like yeah you know that could be a stretch goal like yeah it could be a stretch goal but like also I think if you're doing stuff that you're really interesting it interested in you know you have a better chance at succeeding in it because I think sometimes people do come and have the idea of like oh I just need to find an open source project to contribute to and then you think well then if you find just like any and you're not actually using it and you're not like interested in the problem it's solving I think that impacts like the time you put into it or like your contributions and stuff like if you and if you have the time and not everyone has the time which is another thing but like if you have the time like build your own thing and talk about it and it can be a small thing it could be a small thing that ultimately grows into a very large thing like electron wasn't wle small yeah I wle took the World by storm I don't know how it works I just see people with these like 25 you know squares I can't remember exactly that works but but like yeah like yeah as they say like big things have Small Beginnings right like um and and I'm sure get it when you were sitting down and did somebody ask you like hey can you build a module like how did that come about that's that came about because in the early days of GitHub so this was in my first like tenure we were doing a lot of community events and so there was kind of the freedom to say like is there a thing you care about that you want to have a community event for and I was like I care about teaching people get and GitHub and so so I got so and the event was called Patchwork um because it was about submitting patches and everyone's like building together this quilt I like that so I ended up building get it so that I could like Host this Patchwork event at the GitHub office and like teach people getting GitHub yeah well I mean it is just like a simple like why not it was permissionless Innovation right and then you submitted it to node school and then the rest is history pretty much like I'm taking a lot of inductive leaps but uh yeah how how how many revisions did you did like what was the early days of people using it did you get a lot of user feedback on it people like this part is like buggy or this part is kind of confusing yeah definitely I got a lot of feedback and um and so the early days it was a node school application so that means it ran in terminal on the command line was fully on the command line um but then as I started to get more involved with electron and I think I mentioned like beforehand I had never felt the desire to build a desktop app before so that's why I was totally clueless about desktop app building um but then when I started to work on electron I was like oh actually get it would be really good as an electron app so I did rewrite it as an electron app so there is like a desktop version that's more visual than the command line one I will link to that in case anybody wants to try it oh my go I'm sorry I haven't merged any poll request in a long time are there open issues when was the last time you even checked out the revo five years ago well we you might want to take a look maybe a lot of listeners the podcast will CH here's the thing I will I will get on my little soap box and be like if you just write like simple JavaScript in HTML it will keep working this is the beauty of it people is like it still works I mean sure there are some bugs and there are some things that could be improved but it still works like because it's vanilla JavaScript and it's HTML and CSS and like vanilla JavaScript in node like it uses node but yeah and I I think you don't have to make things more complicated for yourself and I can like Coast now because these things still work yeah this are great um yeah and seven open poll requests it looks like it's like pretty healthy in terms of like people aren't complaining too bad about like because you use the fundamental tools that don't generally change people don't want to break backward compatibility and stuff so yeah oh and I hadn't started yet I just started um so uh check out get it it's going to be a link in there um what does the future hold now that you're a UK citizen uh and an American citizen like hanging out there in London um what are your plans for the next 10 years or so if if I could be so bold as to ask that I don't have any plans I think I have been really lucky so far that I've been able to follow my interests and there's certainly like now that I've like spent this time laying it all out I'm kind of noticing things too of like when I was at City Hall like I didn't know open source was a thing right and and I was actually I'm sure when I was writing my little MRC scripts and building websites and stuff in middle school I'm was using open source but I wasn't aware of it yeah and then even when I was at City Hall and even when I was making my little like sewing blog about like instructions how to make things like these ideas were in my head but I didn't I didn't know there was a world for it and a word for it and then I learned about that word world and stuff and and so then I get more involved with open source but I didn't know product was a job right when I first joined GitHub there was you know yeah the early days and we didn't have product people initially and stuff so I didn't even learn product existed until years down the line um so I've sort of followed my curiosity I guess made things learned about things and then tried to do that thing know so yeah I don't I I genuinely don't know what's next like I want I want developer tools to be good I want collaboration to be better I feel like there's endless work to do there um some some sometimes I do get tired of being sort of in the belly of the Beast of tech and I imagine my like what's what would I do if I weren't like at a giant company going going back to City Hall maybe uh help with some urban planning helping helping people use technology to like fix you know walkability seems to be something that you've optimized for um yes I love that yeah maybe you could talk a little bit about that because I imagine you're like interested do you still you know read about urban planning and like like geek out about like different cities and their decisions and things like that I still follow about what different cities are doing and I've done like a few things along the way too like while I was at glitch I did another short fellowship with actually this was like a bucket list thing for me my favorite Urban designer is Yan gaale who was a Danish Urban designer um and he had a non profit from his private practice and I did a fellowship with them to open source like how to measure activity in public spaces and so I helped them out like putting it on GitHub and making it a more contributable thing and that was like a bucket list for me to be involved in any way with Yan Gale and to like combine like open source and Tech and stuff um and then for a number of years I was on the board of a nonprofit um but it's no more but well what were they they were also in what what what space what problem were they helping with uh Transportation data and like public health so it um it's called StreetWise um and it was around like this idea that also is not unrelated to the things that were frustrating me at City Hall of that cities are doing a bunch of different initiatives to improve mobility and transportation in cities from like walking and cycling and making things more TR Transit oriented design to um and they're doing things and then a lot of times they are measuring it and running studies afterwards and there's results but there's like no way to know right like that this other city did this thing and they have a whole like set of results on on what the impact of those things were and so this was is trying to be a centralized location for results from like mobility and Transit studies and to like summarize them and bubble them up and be a central place so that if you're a city and you're kind of like we have maybe this amount of money this amount of time we're a city of this scale like what can we learn from people who've also been in this situation or like what what are the best outcomes to from like different types of bike Lanes to add and stuff like that so if we are going to make like an intervention like what's the best one we can do and so yeah I've tried to stay involved and like I mean that seems like a really Noble effort because uh you know a lot of taxpayer money is spent in a lot of you know engineering Talent planning architectural Talent um trying to figure out like okay what should we do here and there probably because there are you know thousands of cities on Earth you might be able to find a city with similar you know uh you know demographic data and like similar you know all those different considerations that make a city like like another city where a similar experiment has been done but if that information isn't yeah publicly accessible or if it's just uh if it's just obscure and they don't know about it they may be completely you know blowing a lot of their budget reproducing something that's not going to work that has already been proven to not work or or to be suboptimal or something like that so yeah I I can definitely see the Merit in that like have you ever considered like maybe creating a charity of your own I don't want to put you on the spot uh so a couple of times like over the years someone is like why don't you start your own electron consultancy or like why don't you just like go on your own now that's the scariest thing can think of honestly like I don't think I can do it it sounds scary and hard why did Street wise fail do you know like they just was it adoption by the cities was it like they weren't able to sustain themselves well so it was I mean it was a small effort so it it's one person who was doing it it was a urban designer who then went on to do her PhD related to this and so she was trying to spin this up and I think I think its resources in honestly if I I I think if people have more skills and like can you make a website yourself have you seen someone Market a company before have you seen different subscription models before I think if you've been sort of in these Tech spaces for a long time you you maybe don't have as many hurdles as like a busy PhD student who probably is very very you know maybe not as tshaped as somebody like you in terms of like You' got this very broad skill set and you've also got very specific skills like software engineering and product management uh that you can like she may just be a domain you know subject domain expert and that she knows a whole lot about the specific problem space she doesn't know a whole lot about administering a charity for example um or or just getting things done with software and it could be that just taking the raw data sets and putting them on kaggle you might be able to you know completely go around a lot of of the uh uh you know work that would need to be done and yeah uh again I'm not trying to like you know do uh you know a forensic analysis or like an autopsy report or whatever about her effort I don't I didn't even know about it beforehand I love the name StreetWise um but I think that if this is something you're like super passionate about like I would encourage you to consider uh you know developing some open tools about it that'd be amazing it's massively scary it's also I will say something that's very important to me these days is like being around people like the last few years of the pandemic and myself having gotten really sick like and then having moved to another country in my late 30s yeah your social life is probably completely up you know yeah of like it also sounds like a very good way to continue being alone so well not if you not if you make a lot of friends and you get some other people involved with you like free C Camp like is is even though we're all remote we're like very tight you know we we hang out in person once a year we flew everybody who could get a US Visa we flew them out to Dallas and we hung out and ate a bunch of like barbecue and stuff and like so I don't know that still seems more than I can handle like I'm in awe that you can coordinate these things I don't feel like I can I mean like from where I'm sitting there's probably like a dramatic overlap in our skills and you're probably way better at a lot of things than I am so don't don't sell yourself short but again I don't want to be like here's a whole bunch of work have fun you know if you're happy just but I mean it doesn't hurt to like plan a little ways out like a lot of these problems with cities are not going to just magically save themselves right like I mean and they're getting worse as things change gets cut and things like that right yeah not to go in that I don't want to like open a whole other can of wors but yeah these problems aren't going away um and it's very sad like honestly even England like trains are struggling here and I'm like I thought you guys are going to have trains yeah yeah well um there's so much work to be done uh I don't think that like some automation you know Genie in a Bottle is going to just come out and like solve all our problems overnight that'd be nice but uh I think that people will probably still be working like you know in architecture and urban planning and things like that for many decades to come obviously people are going to be working in software engineering for many decades to come so it's it's thrilling to have somebody like you in the space who can empathize with users and like help them you know essentially get the work they need to get done through uh GitHub and uh yeah and it's cool that you you do care I mean you worked with uh code for America um you know you you were on the board of the street wiv charity it sounds like you do care a lot and I think that's the number one thing like I get excited about is meeting people who care they're not just like enjoying their like you know middle class existence and like going home and watching Netflix and like checking out of other people's problems they're they're trying to actively help other people get up to where they are right yeah and I I like for better some days I wish I could check out like mentally I do think like there's a there's a flip side to caring so much because you get too involved and too invested and it takes up a lot of your time um but I don't know how to turn it off yeah so I I I just follow the things that interest me that are problems that I think need to be solved and then find a way to get like allowed into that awesome well thanks for all the important work you're doing um thanks for again for creating get it which you know so many people have learned how do you get through that thanks for creating electron which I use every single day buried several layers deep in the the little native apps that I launched throughout the day um yeah so amazing and I say created like created the initiative to really get it out there I just want to you were very clear earlier when I was talking that you that you're not the the you know it was a big team effort I didn't I didn't write the first commit on what was Adam shell that then became electron but I turned it into yeah a thing that cared about other projects yeah exactly well um it's been an absolute pleasure talking with you Jessica I hope always so good to talk to you I hope people found this interesting yeah absolutely and uh to everybody out there who is uh has learned I hope you've learned a lot from uh listening to Jessica's experience and that you can have I love about tech that people have different backgrounds and all of those different backgrounds feed into making things better in Tech so yeah I don't know if there's anything I would say is that you can always change what you work on yeah yeah right on well thank you again and everybody out there until next week happy coding
