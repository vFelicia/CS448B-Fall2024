With timestamps:

00:00 - [Music]
00:05 - hi my name is Chris Gagne and I am an
00:08 - agile coach I've coached over three
00:10 - dozen teams in both huge enterprises and
00:13 - small companies prior to that I have
00:16 - close to a decade of product management
00:18 - experience that makes me a bit unique
00:21 - among agile coaches who often come from
00:24 - scrum master project manager and
00:26 - engineering manager backgrounds I've
00:29 - been in the trenches just like you and
00:31 - I've seen more than my fair share the
00:34 - good the bad and the ugly
00:37 - this video will introduce you to the
00:39 - five most common events in scrum I've
00:42 - included dozens of unique tips and
00:44 - tricks that will help your team get the
00:46 - most from these events with a lowest
00:49 - time investment the five events that
00:52 - I'll cover
00:52 - are backlog refinement sprint planning
00:56 - daily scrum sprint review it's Brett
01:00 - retrospective you can watch them all or
01:03 - click the links in the description to
01:05 - jump just in the section that you need
01:07 - enjoy and thanks for watching
01:10 - [Music]
01:15 - backlog refinement is the work of
01:17 - refining estimating the ordering items
01:20 - in the product backlog as a product
01:22 - manager I used to spend about a quarter
01:25 - of my time working on my backlog the
01:28 - scrum guide suggests that the
01:29 - development team also spent up to 10% of
01:32 - their capacity supporting backlog
01:34 - refinement this usually happens in
01:37 - regularly scheduled event such as
01:38 - backlog refinement and sprint planning
01:40 - but it also occurs ad hoc such as in a
01:44 - parking lot discussion after the daily
01:45 - scrum although backlog refinement isn't
01:49 - an official event and scrum guide I've
01:51 - never met a scrum master or coach who
01:54 - didn't advocate strongly for teams
01:55 - making it one as a general rule I
01:59 - discourage work from being introduced at
02:02 - sprint planning
02:02 - unless has been previously been through
02:05 - a backlog refinement event with the team
02:08 - the biggest reason for this is to reduce
02:10 - risk
02:11 - if your team can't clarify an items
02:13 - requirements during sprint planning it
02:15 - won't be ready to pull into the sprint
02:17 - and will likely have to wait for the
02:19 - next one if the product owner attempts
02:22 - to force it into the sprint anyway the
02:24 - team sprint forecast will not be very
02:26 - accurate however if you hold a backlog
02:29 - refinement event a few days in advance
02:31 - of the sprint planning and the team
02:34 - discovers an issue you'll have time
02:35 - before the sprint starts to do more
02:37 - research besides every hour your team
02:41 - spends in backlog refinement is at least
02:43 - an hour your team won't spend in spring
02:45 - planning before you start I suggest
02:49 - having a product owner communicate a
02:51 - proposed list of items for refinement to
02:53 - the team at least a few hours before the
02:56 - event this gives the team a chance to
02:58 - look at the stories earlier if the
03:00 - product owner or scrum master are
03:02 - willing to conclude the event when all
03:03 - of these items have been refined rather
03:06 - than move on to new topics
03:07 - it can also be highly motivating for the
03:09 - team to begin gather the whole team and
03:13 - start discussing your highest ranked
03:15 - backlog Adam remember the phrase card
03:18 - conversation confirmation the card is
03:22 - the index card sticky note or software
03:25 - entry that acts as the token for our
03:28 - discussion our discussion is the
03:31 - conversation the updates we make to the
03:33 - card especially the acceptance criteria
03:36 - lead to the confirmation what's the
03:39 - scope hata scope dependencies target
03:43 - chip date keep talking about and
03:46 - updating each backlog item until it
03:49 - meets your team's definition of ready
03:51 - then estimate if you're using planning
03:54 - poker to estimate items do so
03:56 - immediately following the discussion so
03:58 - that is still fresh in your mind if
04:01 - you're using affinity estimating you can
04:03 - place the item in its correct relative
04:05 - location immediately after discussing it
04:07 - or wait until you've discussed
04:09 - everything to sort them once the user
04:11 - story is ready and estimated market is
04:14 - ready I'd like to preface the items
04:17 - title with an asterisk to indicate that
04:19 - it's ready this works great when you've
04:21 - got several pro forma sprints lined up
04:23 - following your release
04:24 - planning session if you don't do release
04:27 - planning you can simply create a pseudo
04:29 - sprint called ready and place items in
04:31 - that sprint schedule your backlog
04:35 - refinement events as your team sees fit
04:37 - I generally suggest one shorter backlog
04:40 - refinement event per week lasting in
04:43 - about an hour for mature teams and
04:45 - products some teams like one longer
04:47 - session per sprint if your sprint
04:50 - planning event seemed to take forever
04:51 - you probably need to spend more time
04:53 - doing refinement this is especially
04:56 - common for new teams or products sprint
05:03 - planning is an event in which the entire
05:05 - scrum team collectively determines what
05:08 - work can be delivered in the next friend
05:10 - and how that work will be completed
05:12 - there are several steps in sprint
05:14 - planning first close up the last sprint
05:18 - if the team hasn't done so already
05:20 - update and close last friends board any
05:24 - remaining work should be carried over to
05:26 - the next friend unless the product owner
05:28 - feels that it is no longer valuable
05:30 - otherwise the team should assume that
05:32 - some work in process on those tasks will
05:35 - have been wasted this is because it
05:38 - takes more effort to recruit and pick up
05:40 - where the team left off when they
05:42 - stopped working on a task for a sprint
05:44 - or more second determine your story
05:49 - point budget for the next sprint based
05:51 - on your historical performance and
05:53 - capacity and next friends capacity there
05:57 - are a few techniques for calculating
05:58 - your budget the most common are rolling
06:01 - historical average in yesterday's
06:03 - weather but describing them would take
06:05 - too long what really matters is to
06:08 - stress how important the team treat this
06:10 - empirically if the data tells a team
06:13 - that they consistently complete about 20
06:16 - points of Sprint they should not attempt
06:18 - to complete 25 points the following
06:20 - sprint out of wishful thinking better to
06:24 - sign up for 20 and pick up the five
06:25 - points mid sprint when all of the work
06:28 - has been accepted
06:29 - I find it here instance evidence based
06:32 - limit to be a powerful predictor of the
06:34 - team's overall capacity for empirical
06:37 - process control and thus our overall
06:40 - success of agile third all those good
06:45 - practices start sprint planning with one
06:47 - and a half to two Sprint's of stories
06:49 - that meet the definition of ready pilot
06:52 - owners and teams often find that they
06:54 - will want to introduce a new unrefined
06:56 - story for consideration in the next
06:58 - sprint for instance many teams find that
07:02 - they almost always have an improvement
07:03 - item from the retrospective or a
07:06 - customer may have requested a small but
07:08 - important change in the sprint review
07:10 - this debt looks just like backlog
07:12 - refinement discuss refined split and
07:16 - estimate backlog items fourth load
07:21 - stories into the sprint backlog
07:22 - respecting this branch story point
07:25 - budget based on a good faith estimate
07:28 - that the complexity uncertainty and
07:30 - effort required for new and old backlog
07:33 - items the historical performance and the
07:36 - calculated budget for next sprint the
07:39 - team publicly forecasts that they will
07:41 - complete these backlog items by the end
07:43 - of the next iteration especially for new
07:46 - teams it can be helpful to use the fists
07:48 - of five voting technique to gauge the
07:51 - team's confidence in the forecast fifth
07:54 - the team should discuss and commit to a
07:57 - sprint goal this break goal guides the
08:00 - team as to the purpose of the work they
08:02 - will be doing over the next iteration
08:04 - for instance a Sprint goal might be
08:07 - launched the new analytics beta to 10%
08:11 - of her customers it should be possible
08:13 - to meet the Sprint goal without
08:15 - completing the entire sprint backlog for
08:18 - instance most of the Sprint backlog
08:20 - might be a must-have for launching the
08:22 - beta well a couple the backlog items
08:25 - might be should house the beta can be
08:27 - launched and thus the Sprint goal can be
08:29 - met without these should have items
08:32 - being completed six the team should
08:36 - discuss how it will complete the items
08:38 - in the backlog this typically takes
08:40 - about half the time allotted for Sprint
08:42 - planning
08:43 - so be sure to allow enough time for it
08:45 - starting at the top of your sprint
08:47 - backlog the development team will
08:49 - discuss each item and decide how it will
08:52 - deliver this functionality in the sprint
08:54 - as you do so create a sub task on your
08:57 - board for instance suppose the team
09:00 - wants to add a new validation error to
09:02 - the page there may be a task to write
09:05 - the test another to change the logic
09:07 - another to update the CSS and another to
09:10 - kick off automated testing and
09:11 - deployment some teams especially newer
09:14 - ones will also estimate the number of
09:17 - hours each task will take to complete so
09:19 - they can watch these burning down along
09:22 - with story points over the course of the
09:24 - sprint following sprint planning any
09:27 - member the development team should be
09:29 - able to articulate what the Sprint goal
09:31 - is what the team expects to complete in
09:34 - at least of a high level how the team
09:36 - will complete that work one of my
09:39 - favorite tricks as a product owner was
09:42 - to ask the team to spend the 24 hours
09:44 - following sprint planning validating
09:46 - their plan for the iteration especially
09:49 - if the last step of planning how the
09:50 - work will be completed is cut short
09:52 - through the time box when that grace
09:55 - period ends I would send an email to all
09:58 - of my stakeholders reporting on what we
10:00 - completed last Brent what we forecast we
10:02 - will complete this brand and the Sprint
10:04 - goal that we've committed to you this is
10:07 - a great follow-up to the Sprint review
10:08 - because it give stakeholders a preview
10:10 - of our next iteration one of the biggest
10:14 - mistakes I seen teams make is not
10:16 - allowing enough time for sprint planning
10:18 - or doing enough backlog refinement in
10:20 - advance sprint planning should take one
10:23 - to two hours per week planned so to
10:26 - experience should take two to four hours
10:28 - to plan if you're finding that it's
10:31 - difficult to complete sprint planning in
10:32 - this time box including determining how
10:35 - that he will do the work you may need to
10:37 - do more backlog refinement or evaluate
10:39 - how this event is facilitated
10:44 - [Music]
10:45 - let me start by setting with the daily
10:47 - scrum is not the daily scrum is not a
10:50 - status review or report for anyone
10:53 - including product owners scrum masters
10:56 - or steak lovers this is both destructive
10:59 - and common enough that I feel it's
11:01 - important to call this out right at the
11:03 - beginning instead the daily scrum is a
11:06 - chance for the team to transparently
11:09 - inspect and adapt how their sprint is
11:11 - going it is an opportunity for course
11:14 - correction not micromanagement even the
11:18 - physical orientation of the participants
11:21 - at a daily scrum is telling are they
11:23 - collaboratively huddling in circle or is
11:25 - there one person in power at the front
11:27 - with the rest of the development team
11:29 - meekly answering questions I say this
11:32 - because the driving ethos and daily
11:34 - outcomes of your team's daily scrum are
11:37 - more important than its exact
11:39 - manifestation that said here's a format
11:42 - that I found works reasonably well first
11:45 - start the daily scrum at the same time
11:48 - in place every single day some teams
11:51 - like to skip the daily scrum Mondays
11:53 - that they conduct sprint review and/or
11:55 - sprint planning but this is a missed
11:57 - chance to reconnect before these
11:59 - important events ideally your team
12:02 - should have a dedicated space with
12:04 - either a physical or electronic task
12:06 - board and burn down chart visible to
12:09 - everyone if you are distributed or
12:11 - remote video is better than audio start
12:16 - at the daily scrum on time even if much
12:18 - of the team is missing within a few days
12:21 - attendance should improve this being
12:23 - late to a meeting in progress is more
12:25 - uncomfortable than being late to a
12:27 - meeting that hasn't started yet
12:29 - next each development team member
12:32 - answers three questions right from the
12:35 - scrum bride as concisely as possible
12:38 - what did i do yesterday that helped the
12:40 - development team meet the Sprint goal
12:42 - what will I do today to help the
12:45 - development team meet the sprinkle and
12:46 - do I see any impediments that prevent me
12:49 - or the development team from meeting the
12:52 - Sprint goal as the member of the
12:54 - development team is speaking watch out
12:56 - for the following
12:57 - first is everyone else looking directly
13:00 - at the person speaking and paying full
13:02 - attention it can be a fun game for the
13:04 - speaker to look for anyone who isn't
13:06 - paying attention and nominate them as
13:08 - the next speaker second are they
13:11 - speaking directly to tasks that are
13:12 - visible to the whole team on the board
13:14 - or they're working on something else I
13:17 - once had a mentor who told me that we
13:19 - should consider any effort towards
13:21 - working not on the board as an act of
13:23 - sedition because it deeply impacts the
13:26 - product owners ability to support the
13:27 - team and saps a team of velocity made
13:30 - good against the Sprint goal third
13:33 - sometimes answering these questions can
13:36 - spark an intense discussion in order to
13:39 - get the dalish come to 15 minutes or
13:40 - less any team member has the authority
13:42 - to designate the current topic of
13:45 - parking-lot item to be discussed with
13:47 - any interested parties immediately
13:49 - following the daily scrum any individual
13:52 - who does not wish to be present for that
13:54 - discussion need not attend next examine
13:59 - the team's burned down chart and
14:00 - incomplete sprint backlog items does the
14:04 - team still feel confident that they can
14:05 - meet the Sprint goal and finish
14:07 - everything in the sprint backlog by the
14:09 - end of the Sprint and no meeting the
14:11 - sprinkle and finishing everything the
14:13 - Sprint backlog are not the same thing if
14:15 - not why is there a course correction
14:18 - that will enable team to succeed if not
14:22 - should one or more backlog items from
14:24 - the bottom the Sprint backlog be removed
14:26 - this inspection and adaptation will
14:29 - improve the team's chance of success and
14:32 - give the product owner a chance to
14:33 - provide really warning to their
14:35 - stakeholders if the goal will not be met
14:37 - a couple of other useful hints it's not
14:41 - the scrum masters job to always
14:43 - facilitate the daily scrum only to
14:45 - ensure that it happens smoothly and
14:48 - within the 15 minute time box also
14:51 - people who are not on the team are
14:52 - always welcome to attend so long as they
14:55 - do not interfere with the event for
14:58 - instance watch out for stakeholders
15:00 - demanding status updates or addition to
15:03 - the current Sprint's backlog these sorts
15:06 - of requests should be directed directly
15:08 - to the product owner
15:09 - that's the essence of the daily scrum
15:12 - feel free to experiment with a format be
15:15 - sure to track whether or not your
15:17 - experiment helped your team meet the
15:19 - Sprint goal or provide an early warning
15:22 - [Music]
15:26 - sprint review is held at the end of
15:29 - every sprint to celebrate the team's
15:31 - success inspect the product increment
15:33 - delivered by the development team and
15:35 - adapt the product backlog is necessary
15:38 - it's also an opportunity for the scrum
15:40 - team to demonstrate transparency about
15:42 - their output and process to their
15:44 - stakeholders so as to foster mutual
15:46 - trust the event is attended by the
15:49 - entire scrum team and the stakeholders
15:51 - and customers invited by the product
15:53 - owner some teams find it useful to
15:55 - complete their first review or to
15:57 - privately so they can get the hang of it
16:00 - before inviting stakeholders and
16:02 - customers that stakeholders to attend
16:04 - many disorganize events may not come
16:06 - back for more here's a sample agenda
16:09 - that covers the most important points of
16:11 - a sprint review first
16:14 - the product owner welcomes their
16:15 - stakeholders and exists finds what
16:18 - product backlog items have and have not
16:20 - been fully completed second the
16:23 - development team briefly talks about
16:25 - their experiences during the Sprint
16:27 - including any impediment set of rows and
16:29 - how they resolve them know that most
16:33 - teams complete their sprint
16:34 - retrospective event after the Sprint
16:36 - review so they think include what
16:38 - happened at the sprint review in the
16:40 - retrospective so be aware that you might
16:43 - not have the most refined responses yet
16:45 - also this isn't an opportunity for
16:49 - stakeholders to criticize the team's
16:50 - process if a stakeholder has this type
16:53 - of concern they should discuss it with a
16:55 - scrum master and/or product owner after
16:57 - the event
16:59 - third the development team this
17:01 - demonstrates each fully completed
17:03 - backlog item ideally from the end users
17:06 - perspective show results not code
17:10 - demonstrating backlog items in stage and
17:12 - can illustrate that the work integrated
17:14 - correctly while demonstrating from
17:16 - production is nice it's not necessarily
17:18 - required
17:20 - stakeholders should be encouraged to ask
17:22 - questions and provide feedback and
17:24 - anyone on the team can answer forth the
17:28 - product owner can share for looking
17:30 - updates what's the current state of the
17:32 - backlog have any longer term forecasts
17:35 - such as release date and scope changed
17:37 - 5th all attendees participate in an
17:40 - adaptation exercise having inspected the
17:43 - product increment and backlog presented
17:45 - transparently by the scrum team
17:47 - what adaptation should we make it can
17:50 - also be helpful to talk about the
17:52 - changes in the market or other team
17:54 - external events that could impact the
17:56 - team's future plans the primary output
17:59 - of the sprint review is an updated
18:01 - product backlog that reflects the event
18:03 - this event can take up to one hour per
18:06 - week of iteration but most teams and
18:09 - stakeholders will want to complete it in
18:10 - less time typically 30 to 60 minutes for
18:13 - a two-week sprint
18:19 - the retrospective is far away the most
18:22 - important event in scrum if not for all
18:24 - IGEL practitioners
18:26 - although empirical process control is
18:29 - omnipresent scrum no where is it better
18:31 - representative than at the retrospective
18:34 - put another way
18:35 - ISIL envision a team being highly
18:37 - successful even after they've jettisoned
18:40 - every other rol artifact an event so
18:43 - long as they're still doing
18:44 - retrospectives this is because a team
18:47 - can experiment of changes to roles
18:49 - artifacts and events not to mention
18:51 - plenty of other factors using
18:53 - retrospectives for instance suppose a
18:56 - team decides during the retrospective to
18:59 - reduce the time spent doing backlog
19:01 - refinement by 50% and there's still
19:04 - generally happier that choice a few
19:06 - Sprint's later who as I said that
19:08 - shouldn't make the change so how can we
19:12 - conduct our first retrospective
19:14 - personally I'm a huge fan of the five
19:17 - step retrospective popularized by us or
19:20 - Derby and Diana Larson authors of the
19:23 - book agile retrospectives making good
19:26 - teams great retrospectives can get stale
19:29 - really quickly so teams find it helpful
19:32 - to change how they do retrospective
19:34 - often so long as you're a retrospective
19:37 - covers the following five steps you're
19:40 - in good hands step one is to set the
19:43 - stage this is a good chance to break the
19:45 - ice with your team and remind yourselves
19:47 - why this is so important I have a few
19:50 - activities I like for this step and I
19:52 - recommend choosing two of them first I
19:55 - suggest reading norm curse retrospective
19:57 - prime directive as a team which is
20:00 - regardless of what we discover we
20:03 - understand and truly believe that
20:05 - everyone did the best job they could
20:07 - give him what they knew at the time
20:09 - their skills and abilities the resources
20:12 - available in the situation at hand this
20:15 - helps to create a collaborative
20:16 - environment for learning and continuous
20:18 - improvement instead of blaming
20:20 - individuals second I like to ask each
20:24 - team member to share just one word about
20:27 - how the Sprint went for them
20:29 - this will give everyone a good sense of
20:31 - the mood in the room third I'd like to
20:34 - invite team members to share a genuine
20:36 - word of specific appreciation for
20:39 - another member of the team step two is
20:43 - to gather data what happened in a
20:45 - misprint I like to use a positive
20:47 - Delta's and insights collection device
20:50 - ask each team member to come up with as
20:54 - many positives deltas or things they'd
20:57 - like to change and insights as possible
20:59 - have them write each positive Delta and
21:02 - insight individually on sticky notes or
21:05 - their digital equivalent when the team
21:08 - is run out of thoughts where the time
21:10 - box has elapsed place the sticky notes
21:12 - on the wall in group like items together
21:16 - step three is to generate insights I
21:19 - like to add a brief intermediary step
21:22 - which is to choose the top positive
21:24 - Delta's and/or insights that we'd like
21:27 - to focus on about one to three total
21:30 - once you have the top one three items
21:33 - dig in more on each one the book agile
21:36 - retrospectives has a good activity
21:39 - called prioritize of thoughts that can
21:41 - make this go faster if a positive reads
21:45 - the team is doing a good job of
21:47 - collaborating with one another then a
21:49 - delta reads our staging server keeps
21:51 - going down try to understand the root
21:54 - cause of these conditions some teams
21:57 - find it helpful to ask why five times
21:59 - give or take
22:01 - until you get to your root cause as all
22:05 - retrospective suggests other exercises
22:07 - as well as a hint if you're rarely
22:10 - surprised by your root causes you may
22:13 - not be digging deep enough step four is
22:17 - all about actions I like to expand those
22:20 - into decisions and actions for each item
22:23 - discuss as a team suggestions about how
22:26 - you can persistent deep and positive
22:28 - change or minimize the Delta and
22:30 - capitalize on the inside you'll find
22:34 - that your suggestions naturally fall
22:35 - into two buckets decisions which are
22:39 - changes to your team's working agreement
22:41 - and actions which was simply new backlog
22:44 - items suppose the team is tired of event
22:47 - starting late due to tardiness the team
22:50 - could vote to add a rule to their
22:51 - working agreement that imposes a penalty
22:54 - for being late or suppose a team
22:57 - discovers that their staging server
22:59 - needs several hours of maintenance the
23:02 - team could decide to add a user store to
23:04 - the backlog that reads as a developer I
23:06 - have a more reliable staging server so I
23:09 - can develop software more effectively
23:11 - trying to stay focused here it's better
23:14 - to have one or two improvement items for
23:16 - the next iteration and then have to much
23:19 - to change all at once step 5 is wrap up
23:23 - if you haven't done a round of
23:25 - appreciations yet this is a nice time
23:27 - it's been a few minutes retrospective on
23:30 - the retrospective how did it go for the
23:32 - team what would they like to try next
23:34 - time your team should run a
23:37 - retrospective at the end of every sprint
23:39 - if your team is doing Kanban or one-week
23:42 - sprints it's okay to do retrospective
23:44 - every two weeks it's also useful to hold
23:48 - a retrospective at the end of any
23:49 - significant event chose as the multi
23:52 - team release planning a large release or
23:55 - following an incident if your rest
23:57 - respecting an outage or incident don't
24:00 - call this event a post mortem this makes
24:02 - the event a little too negative in
24:05 - consumption suddenly implying that the
24:07 - team killed something or someone instead
24:10 - just used retrospective or the military
24:13 - term after-action review so that's a
24:17 - reasonable retrospective format that you
24:19 - can use for your first several sprints
24:22 - talk to your team's agile coach for more
24:25 - ideas on how to keep your retrospective
24:27 - fresh and interesting
24:33 - you

Cleaned transcript:

hi my name is Chris Gagne and I am an agile coach I've coached over three dozen teams in both huge enterprises and small companies prior to that I have close to a decade of product management experience that makes me a bit unique among agile coaches who often come from scrum master project manager and engineering manager backgrounds I've been in the trenches just like you and I've seen more than my fair share the good the bad and the ugly this video will introduce you to the five most common events in scrum I've included dozens of unique tips and tricks that will help your team get the most from these events with a lowest time investment the five events that I'll cover are backlog refinement sprint planning daily scrum sprint review it's Brett retrospective you can watch them all or click the links in the description to jump just in the section that you need enjoy and thanks for watching backlog refinement is the work of refining estimating the ordering items in the product backlog as a product manager I used to spend about a quarter of my time working on my backlog the scrum guide suggests that the development team also spent up to 10% of their capacity supporting backlog refinement this usually happens in regularly scheduled event such as backlog refinement and sprint planning but it also occurs ad hoc such as in a parking lot discussion after the daily scrum although backlog refinement isn't an official event and scrum guide I've never met a scrum master or coach who didn't advocate strongly for teams making it one as a general rule I discourage work from being introduced at sprint planning unless has been previously been through a backlog refinement event with the team the biggest reason for this is to reduce risk if your team can't clarify an items requirements during sprint planning it won't be ready to pull into the sprint and will likely have to wait for the next one if the product owner attempts to force it into the sprint anyway the team sprint forecast will not be very accurate however if you hold a backlog refinement event a few days in advance of the sprint planning and the team discovers an issue you'll have time before the sprint starts to do more research besides every hour your team spends in backlog refinement is at least an hour your team won't spend in spring planning before you start I suggest having a product owner communicate a proposed list of items for refinement to the team at least a few hours before the event this gives the team a chance to look at the stories earlier if the product owner or scrum master are willing to conclude the event when all of these items have been refined rather than move on to new topics it can also be highly motivating for the team to begin gather the whole team and start discussing your highest ranked backlog Adam remember the phrase card conversation confirmation the card is the index card sticky note or software entry that acts as the token for our discussion our discussion is the conversation the updates we make to the card especially the acceptance criteria lead to the confirmation what's the scope hata scope dependencies target chip date keep talking about and updating each backlog item until it meets your team's definition of ready then estimate if you're using planning poker to estimate items do so immediately following the discussion so that is still fresh in your mind if you're using affinity estimating you can place the item in its correct relative location immediately after discussing it or wait until you've discussed everything to sort them once the user story is ready and estimated market is ready I'd like to preface the items title with an asterisk to indicate that it's ready this works great when you've got several pro forma sprints lined up following your release planning session if you don't do release planning you can simply create a pseudo sprint called ready and place items in that sprint schedule your backlog refinement events as your team sees fit I generally suggest one shorter backlog refinement event per week lasting in about an hour for mature teams and products some teams like one longer session per sprint if your sprint planning event seemed to take forever you probably need to spend more time doing refinement this is especially common for new teams or products sprint planning is an event in which the entire scrum team collectively determines what work can be delivered in the next friend and how that work will be completed there are several steps in sprint planning first close up the last sprint if the team hasn't done so already update and close last friends board any remaining work should be carried over to the next friend unless the product owner feels that it is no longer valuable otherwise the team should assume that some work in process on those tasks will have been wasted this is because it takes more effort to recruit and pick up where the team left off when they stopped working on a task for a sprint or more second determine your story point budget for the next sprint based on your historical performance and capacity and next friends capacity there are a few techniques for calculating your budget the most common are rolling historical average in yesterday's weather but describing them would take too long what really matters is to stress how important the team treat this empirically if the data tells a team that they consistently complete about 20 points of Sprint they should not attempt to complete 25 points the following sprint out of wishful thinking better to sign up for 20 and pick up the five points mid sprint when all of the work has been accepted I find it here instance evidence based limit to be a powerful predictor of the team's overall capacity for empirical process control and thus our overall success of agile third all those good practices start sprint planning with one and a half to two Sprint's of stories that meet the definition of ready pilot owners and teams often find that they will want to introduce a new unrefined story for consideration in the next sprint for instance many teams find that they almost always have an improvement item from the retrospective or a customer may have requested a small but important change in the sprint review this debt looks just like backlog refinement discuss refined split and estimate backlog items fourth load stories into the sprint backlog respecting this branch story point budget based on a good faith estimate that the complexity uncertainty and effort required for new and old backlog items the historical performance and the calculated budget for next sprint the team publicly forecasts that they will complete these backlog items by the end of the next iteration especially for new teams it can be helpful to use the fists of five voting technique to gauge the team's confidence in the forecast fifth the team should discuss and commit to a sprint goal this break goal guides the team as to the purpose of the work they will be doing over the next iteration for instance a Sprint goal might be launched the new analytics beta to 10% of her customers it should be possible to meet the Sprint goal without completing the entire sprint backlog for instance most of the Sprint backlog might be a musthave for launching the beta well a couple the backlog items might be should house the beta can be launched and thus the Sprint goal can be met without these should have items being completed six the team should discuss how it will complete the items in the backlog this typically takes about half the time allotted for Sprint planning so be sure to allow enough time for it starting at the top of your sprint backlog the development team will discuss each item and decide how it will deliver this functionality in the sprint as you do so create a sub task on your board for instance suppose the team wants to add a new validation error to the page there may be a task to write the test another to change the logic another to update the CSS and another to kick off automated testing and deployment some teams especially newer ones will also estimate the number of hours each task will take to complete so they can watch these burning down along with story points over the course of the sprint following sprint planning any member the development team should be able to articulate what the Sprint goal is what the team expects to complete in at least of a high level how the team will complete that work one of my favorite tricks as a product owner was to ask the team to spend the 24 hours following sprint planning validating their plan for the iteration especially if the last step of planning how the work will be completed is cut short through the time box when that grace period ends I would send an email to all of my stakeholders reporting on what we completed last Brent what we forecast we will complete this brand and the Sprint goal that we've committed to you this is a great followup to the Sprint review because it give stakeholders a preview of our next iteration one of the biggest mistakes I seen teams make is not allowing enough time for sprint planning or doing enough backlog refinement in advance sprint planning should take one to two hours per week planned so to experience should take two to four hours to plan if you're finding that it's difficult to complete sprint planning in this time box including determining how that he will do the work you may need to do more backlog refinement or evaluate how this event is facilitated let me start by setting with the daily scrum is not the daily scrum is not a status review or report for anyone including product owners scrum masters or steak lovers this is both destructive and common enough that I feel it's important to call this out right at the beginning instead the daily scrum is a chance for the team to transparently inspect and adapt how their sprint is going it is an opportunity for course correction not micromanagement even the physical orientation of the participants at a daily scrum is telling are they collaboratively huddling in circle or is there one person in power at the front with the rest of the development team meekly answering questions I say this because the driving ethos and daily outcomes of your team's daily scrum are more important than its exact manifestation that said here's a format that I found works reasonably well first start the daily scrum at the same time in place every single day some teams like to skip the daily scrum Mondays that they conduct sprint review and/or sprint planning but this is a missed chance to reconnect before these important events ideally your team should have a dedicated space with either a physical or electronic task board and burn down chart visible to everyone if you are distributed or remote video is better than audio start at the daily scrum on time even if much of the team is missing within a few days attendance should improve this being late to a meeting in progress is more uncomfortable than being late to a meeting that hasn't started yet next each development team member answers three questions right from the scrum bride as concisely as possible what did i do yesterday that helped the development team meet the Sprint goal what will I do today to help the development team meet the sprinkle and do I see any impediments that prevent me or the development team from meeting the Sprint goal as the member of the development team is speaking watch out for the following first is everyone else looking directly at the person speaking and paying full attention it can be a fun game for the speaker to look for anyone who isn't paying attention and nominate them as the next speaker second are they speaking directly to tasks that are visible to the whole team on the board or they're working on something else I once had a mentor who told me that we should consider any effort towards working not on the board as an act of sedition because it deeply impacts the product owners ability to support the team and saps a team of velocity made good against the Sprint goal third sometimes answering these questions can spark an intense discussion in order to get the dalish come to 15 minutes or less any team member has the authority to designate the current topic of parkinglot item to be discussed with any interested parties immediately following the daily scrum any individual who does not wish to be present for that discussion need not attend next examine the team's burned down chart and incomplete sprint backlog items does the team still feel confident that they can meet the Sprint goal and finish everything in the sprint backlog by the end of the Sprint and no meeting the sprinkle and finishing everything the Sprint backlog are not the same thing if not why is there a course correction that will enable team to succeed if not should one or more backlog items from the bottom the Sprint backlog be removed this inspection and adaptation will improve the team's chance of success and give the product owner a chance to provide really warning to their stakeholders if the goal will not be met a couple of other useful hints it's not the scrum masters job to always facilitate the daily scrum only to ensure that it happens smoothly and within the 15 minute time box also people who are not on the team are always welcome to attend so long as they do not interfere with the event for instance watch out for stakeholders demanding status updates or addition to the current Sprint's backlog these sorts of requests should be directed directly to the product owner that's the essence of the daily scrum feel free to experiment with a format be sure to track whether or not your experiment helped your team meet the Sprint goal or provide an early warning sprint review is held at the end of every sprint to celebrate the team's success inspect the product increment delivered by the development team and adapt the product backlog is necessary it's also an opportunity for the scrum team to demonstrate transparency about their output and process to their stakeholders so as to foster mutual trust the event is attended by the entire scrum team and the stakeholders and customers invited by the product owner some teams find it useful to complete their first review or to privately so they can get the hang of it before inviting stakeholders and customers that stakeholders to attend many disorganize events may not come back for more here's a sample agenda that covers the most important points of a sprint review first the product owner welcomes their stakeholders and exists finds what product backlog items have and have not been fully completed second the development team briefly talks about their experiences during the Sprint including any impediment set of rows and how they resolve them know that most teams complete their sprint retrospective event after the Sprint review so they think include what happened at the sprint review in the retrospective so be aware that you might not have the most refined responses yet also this isn't an opportunity for stakeholders to criticize the team's process if a stakeholder has this type of concern they should discuss it with a scrum master and/or product owner after the event third the development team this demonstrates each fully completed backlog item ideally from the end users perspective show results not code demonstrating backlog items in stage and can illustrate that the work integrated correctly while demonstrating from production is nice it's not necessarily required stakeholders should be encouraged to ask questions and provide feedback and anyone on the team can answer forth the product owner can share for looking updates what's the current state of the backlog have any longer term forecasts such as release date and scope changed 5th all attendees participate in an adaptation exercise having inspected the product increment and backlog presented transparently by the scrum team what adaptation should we make it can also be helpful to talk about the changes in the market or other team external events that could impact the team's future plans the primary output of the sprint review is an updated product backlog that reflects the event this event can take up to one hour per week of iteration but most teams and stakeholders will want to complete it in less time typically 30 to 60 minutes for a twoweek sprint the retrospective is far away the most important event in scrum if not for all IGEL practitioners although empirical process control is omnipresent scrum no where is it better representative than at the retrospective put another way ISIL envision a team being highly successful even after they've jettisoned every other rol artifact an event so long as they're still doing retrospectives this is because a team can experiment of changes to roles artifacts and events not to mention plenty of other factors using retrospectives for instance suppose a team decides during the retrospective to reduce the time spent doing backlog refinement by 50% and there's still generally happier that choice a few Sprint's later who as I said that shouldn't make the change so how can we conduct our first retrospective personally I'm a huge fan of the five step retrospective popularized by us or Derby and Diana Larson authors of the book agile retrospectives making good teams great retrospectives can get stale really quickly so teams find it helpful to change how they do retrospective often so long as you're a retrospective covers the following five steps you're in good hands step one is to set the stage this is a good chance to break the ice with your team and remind yourselves why this is so important I have a few activities I like for this step and I recommend choosing two of them first I suggest reading norm curse retrospective prime directive as a team which is regardless of what we discover we understand and truly believe that everyone did the best job they could give him what they knew at the time their skills and abilities the resources available in the situation at hand this helps to create a collaborative environment for learning and continuous improvement instead of blaming individuals second I like to ask each team member to share just one word about how the Sprint went for them this will give everyone a good sense of the mood in the room third I'd like to invite team members to share a genuine word of specific appreciation for another member of the team step two is to gather data what happened in a misprint I like to use a positive Delta's and insights collection device ask each team member to come up with as many positives deltas or things they'd like to change and insights as possible have them write each positive Delta and insight individually on sticky notes or their digital equivalent when the team is run out of thoughts where the time box has elapsed place the sticky notes on the wall in group like items together step three is to generate insights I like to add a brief intermediary step which is to choose the top positive Delta's and/or insights that we'd like to focus on about one to three total once you have the top one three items dig in more on each one the book agile retrospectives has a good activity called prioritize of thoughts that can make this go faster if a positive reads the team is doing a good job of collaborating with one another then a delta reads our staging server keeps going down try to understand the root cause of these conditions some teams find it helpful to ask why five times give or take until you get to your root cause as all retrospective suggests other exercises as well as a hint if you're rarely surprised by your root causes you may not be digging deep enough step four is all about actions I like to expand those into decisions and actions for each item discuss as a team suggestions about how you can persistent deep and positive change or minimize the Delta and capitalize on the inside you'll find that your suggestions naturally fall into two buckets decisions which are changes to your team's working agreement and actions which was simply new backlog items suppose the team is tired of event starting late due to tardiness the team could vote to add a rule to their working agreement that imposes a penalty for being late or suppose a team discovers that their staging server needs several hours of maintenance the team could decide to add a user store to the backlog that reads as a developer I have a more reliable staging server so I can develop software more effectively trying to stay focused here it's better to have one or two improvement items for the next iteration and then have to much to change all at once step 5 is wrap up if you haven't done a round of appreciations yet this is a nice time it's been a few minutes retrospective on the retrospective how did it go for the team what would they like to try next time your team should run a retrospective at the end of every sprint if your team is doing Kanban or oneweek sprints it's okay to do retrospective every two weeks it's also useful to hold a retrospective at the end of any significant event chose as the multi team release planning a large release or following an incident if your rest respecting an outage or incident don't call this event a post mortem this makes the event a little too negative in consumption suddenly implying that the team killed something or someone instead just used retrospective or the military term afteraction review so that's a reasonable retrospective format that you can use for your first several sprints talk to your team's agile coach for more ideas on how to keep your retrospective fresh and interesting you
