With timestamps:

00:05 - hey everyone
00:07 - uh welcome to live coding with jesse
00:11 - and today we're going to work with state
00:14 - and react
00:17 - and um
00:19 - let me
00:20 - fix this screen for you
00:22 - if you remember yesterday uh i had some
00:25 - different monitors hooked up to this
00:26 - laptop so
00:28 - uh it shifted around the screen and um
00:31 - so last few minutes i've just been
00:32 - trying to get everything back to normal
00:35 - uh so
00:37 - happy friday
00:39 - it's crazy the week's already over uh i
00:42 - got off to a late start today i had my
00:44 - uh
00:45 - my youngest son ambrose who's three
00:48 - he's been having trouble swallowing and
00:50 - been getting things like stuck in his
00:51 - throat so we went in for some testing
00:53 - this morning at a hospital and he wanted
00:55 - me to go
00:56 - uh so
00:58 - uh i went in with him and uh he did a
01:01 - great job
01:02 - um
01:03 - all the nurses said it
01:06 - he did better than uh
01:08 - than the the uh grown men that were in
01:10 - there before him so i was proud of that
01:12 - little guy so i took him out to
01:14 - mcdonald's afterwards so
01:16 - uh anyway enough about me
01:20 - uh but anyway i just meant to say i got
01:22 - off to a really late start today because
01:23 - of that so i haven't had gotten to do
01:25 - that much with the project so it's
01:28 - pretty much in the same state that it
01:29 - was in
01:30 - yesterday uh
01:33 - so most of my work has just been in
01:35 - transferring data from the old database
01:37 - to the new database
01:39 - which you know all that is kind of
01:41 - behind the scenes and nobody really sees
01:42 - that
01:45 - um let me
01:49 - i want to move the chat window over to
01:52 - my other screen so that
01:55 - i can see it more easily and i don't
01:57 - miss your comments
02:00 - let's see and uh so
02:02 - there was a live stream about
02:04 - the free code camp youtube channel on
02:07 - another youtube channel called
02:09 - engineered truth
02:11 - i think that's what it was engineer
02:12 - truth
02:15 - i'm pretty sure that was the name of the
02:17 - channel
02:18 - but anyway it
02:20 - i should have grabbed the url for you
02:22 - all i don't have it right now
02:23 - uh but it was a pretty cool live stream
02:25 - it was quincy who if if you're not
02:27 - familiar with free code cam quincy is
02:29 - the founder and the head of free code
02:31 - camp uh but quincy uh was talking with
02:34 - another youtuber whose channel is very
02:36 - successful uh and this other youtuber
02:39 - was giving quincy a lot of advice
02:41 - on um
02:42 - how to make the free codecamp youtube
02:44 - channel better
02:46 - uh so it was pretty cool but it so if
02:48 - you have your own channel and you want
02:50 - some advice on
02:52 - on how to grow your channel
02:54 - definitely check that video out i mean
02:57 - a lot of the advice is not specific to
02:59 - free code camping could definitely be
03:01 - applied
03:02 - to a lot of different
03:04 - uh different types of of channels
03:06 - different content but especially if you
03:08 - have a channel about about tech or
03:11 - coding
03:12 - check that out
03:14 - so that was
03:15 - that was really cool
03:17 - and um
03:19 - of course it was cool to
03:21 - see my videos on the screen there uh in
03:24 - the live stream
03:26 - uh when quincy was showing like the
03:29 - youtube dashboard behind the scenes and
03:33 - so
03:34 - anyway that was cool i may be trying to
03:37 - incorporate some new things into my
03:39 - streams uh i'm going to try to maybe
03:42 - name them
03:43 - my streams like a little bit better so
03:46 - there's not going to be any major major
03:48 - changes for me
03:49 - uh but
03:51 - you know maybe just some some really
03:54 - like you know subtle things
03:56 - okay
03:57 - so it looks like
04:00 - yeah all right so we have a decent uh
04:03 - amount of viewers in here right now so i
04:05 - think we're safe to uh to get started
04:09 - so i figured today we'll do two pomodoro
04:11 - sessions
04:12 - uh so those are two 25-minute periods of
04:15 - code
04:17 - and in between those periods of code
04:20 - i'll answer some questions in the live
04:21 - chat
04:22 - so if you have any questions feel free
04:24 - to put in the live chat i won't probably
04:26 - won't get to your question immediately
04:29 - but
04:30 - i will answer it before the stream is
04:33 - over
04:35 - um so
04:39 - i uh
04:41 - i'm sorry i'm distracted by messages
04:43 - coming in so
04:46 - uh just
04:47 - for the new people in here for those of
04:49 - you who are seeing the stream a lot
04:50 - sorry i'm going to go over this again
04:51 - but uh at least once a week i think i'm
04:54 - going to try to go over what we're doing
04:56 - in the stream so the quick version for
04:57 - everyone who's new is
04:59 - this is my daily work i'm a front-end
05:01 - developer for a small university
05:03 - and
05:05 - uh i work partly from home and partly in
05:08 - the office i'm at home today and
05:10 - whatever i need to work on for for my
05:13 - job is what i stream so these streams
05:15 - aren't exactly tutorials although i do
05:17 - my best
05:19 - to explain what i'm doing and i'll
05:21 - answer any questions that you have
05:23 - but i say they're not tutorials because
05:25 - sometimes we don't go in a logical order
05:27 - in terms of starting with beginner level
05:29 - stuff and working our way up i just have
05:32 - to work on what needs to get done
05:34 - so
05:36 - having said that yeah i just want
05:38 - everybody to have the right mindset
05:40 - coming in that you know it's not a
05:41 - tutorial but it is a glimpse into my
05:44 - work as a front-end developer
05:47 - i may not be the average front-end
05:49 - developer i don't i don't really know
05:51 - but it may be helpful for you all to see
05:53 - what kind of work i do and most
05:55 - importantly how often i mess up because
05:58 - i i do mess up quite frequently if you
06:00 - don't believe me ask people in the live
06:02 - chat i'm sure
06:04 - anybody that's been watching for
06:06 - you know more than a few shows has seen
06:08 - me mess up quite a bit uh but we work
06:10 - through that together so feel free to
06:12 - put your opinions in as well uh if you
06:15 - see me in doing something that looks
06:17 - wrong call me out on it all right i i
06:20 - am very very open to constructive
06:23 - criticism
06:25 - uh so
06:27 - uh yeah so don't don't be afraid like
06:29 - i'm not here as the expert really i'm
06:32 - i'm here it's just another web developer
06:34 - and just sharing my stuff and sharing
06:36 - what i do
06:38 - all right let's get started
06:40 - and first i'm going to make this bigger
06:43 - so i'm sure that's difficult for you all
06:45 - to see
06:46 - and
06:49 - that should be big enough let me know
06:52 - uh so i have a preview open on my other
06:54 - screen so if i can read the text then
06:56 - usually it's good for you all to read it
06:59 - and uh so right now let me give you a
07:03 - recap
07:05 - if you're interested in seeing all the
07:07 - code yourself or even
07:08 - downloading the code uh for your own use
07:11 - or for you to work on it
07:14 - uh check out
07:15 - the
07:16 - link in the description for this github
07:18 - repo
07:21 - um
07:22 - all right so we we there's a really good
07:25 - question that just popped up in the live
07:26 - chat and uh it'll be good for me to
07:29 - address this before we start
07:32 - um
07:37 - state management so the question of
07:39 - state management are we doing redux mob
07:41 - x so here's what we're doing we're using
07:44 - component state
07:46 - right so usually when you hear about
07:47 - state management it's followed by
07:49 - with redux or with mob x or
07:53 - with whatever okay but we're going to
07:55 - use
07:56 - component just regular component state
08:00 - um
08:02 - why would we use that
08:03 - well i
08:05 - i don't think we need
08:08 - mob x or redux right so those are
08:10 - excellent things i've used them before i
08:14 - really i should say i've used redux
08:15 - before i haven't used modbx but i'm i'm
08:18 - aware of the differences
08:20 - uh so i like them both
08:22 - and i think they're very useful when
08:24 - needed
08:25 - but i don't think we have the complexity
08:27 - here in our use case
08:30 - that warren's bringing them on
08:32 - so
08:33 - i'm gonna go through okay well
08:36 - what if we don't really have to do that
08:37 - much but we do need to manage state uh
08:40 - we just need to pass state between a few
08:42 - parent and children components right
08:45 - how do we do that
08:47 - so that's what we're going to do today
08:49 - we're going to have the state
08:52 - live in a parent component and then it's
08:55 - gonna get passed down
08:57 - i think two levels
08:59 - uh to a child component
09:01 - right in this case a grandchild
09:03 - component i guess
09:05 - all right and then
09:06 - we're going to
09:09 - change the state that lives up here in
09:11 - the top component
09:13 - when we click
09:15 - on
09:16 - the child component
09:19 - so we're going to have to pass around
09:20 - some things so the state
09:22 - of open or closed gets passed down
09:26 - as props to our child component but then
09:30 - also we're going to need a
09:32 - a click handler that's going to live in
09:34 - the parent component that also gets
09:37 - passed down to the child component
09:39 - all right so this is not something like
09:42 - groundbreaking or really new like no
09:44 - one's ever done this before in fact
09:46 - we've done some similar things in our
09:47 - project
09:49 - before this
09:51 - but
09:52 - uh i'd like to walk through it with you
09:55 - all
09:56 - and i should here we are okay so let's
09:59 - see
10:03 - let's get rid of that i still haven't
10:05 - fixed the warnings on there so apologies
10:07 - for all that
10:10 - uh so here's what we have
10:12 - we have
10:13 - a drop down menu
10:16 - and then inside here
10:18 - we have a secondary level
10:21 - right and right now
10:24 - what happens is so i've opened these up
10:28 - and if i click out of here
10:31 - and i try to go back in
10:34 - they're closed
10:37 - that's not a really great user
10:38 - experience right because if i go to this
10:41 - section
10:42 - like let's say i go into
10:44 - one of these pages in the undergraduate
10:46 - section and i realized
10:48 - either i've read that page and i want to
10:50 - learn more or oh i'm on the wrong page
10:53 - then the user ought to be able to go
10:55 - directly back here and pick up right
10:58 - where they left off but that's not
11:00 - happening right now okay why is that not
11:03 - happening
11:05 - well that's what we're gonna figure out
11:07 - why and figure out how to fix it right
11:09 - and we can see that we've managed to get
11:11 - that to work here so i can open
11:13 - academics i can shut it
11:16 - and open it back up
11:19 - and it's still open
11:20 - right so we have the correct behavior
11:23 - that's happening here
11:25 - but not down here all right so i'd say
11:28 - the the first place that we ought to
11:31 - look then
11:32 - is
11:33 - how are we doing this here already and
11:35 - can we use that same technique
11:38 - uh for this this other part of this menu
11:42 - so for that let's go here
11:44 - and
11:45 - let's see we have drawer item
11:48 - okay yeah so drawer item
11:51 - drawer item is our component that
11:53 - and i forgot to start my clock there we
11:55 - go let's start our pomodoro timer
11:58 - so draw item
11:59 - is
12:02 - you know this this component
12:05 - so these are the drawer items
12:08 - so we can see in drawer item
12:17 - let's see we do have uh this click
12:20 - handler
12:21 - and that is what is expanding those
12:23 - those sub menus all right the the lowest
12:26 - level
12:27 - uh of the menu
12:29 - but we don't have any other click
12:31 - handlers
12:32 - right so
12:35 - at that top level
12:37 - which is here this top list item when we
12:39 - have an on click and expands the item it
12:41 - it calls this expand item and it passes
12:45 - in this case the item id
12:48 - but where is this coming from
12:50 - right so that's the click handler and
12:52 - then number two
12:54 - how do how does it know that that's
12:56 - supposed to be expanded well it's from
12:58 - this is open props so we need to track
13:02 - is open
13:04 - and we need to track expand item
13:07 - up the component tree and see what we're
13:09 - doing
13:11 - so
13:12 - drawer item
13:14 - the parent component for drawer item is
13:17 - drawer
13:18 - so let's see what's going on in drawer
13:30 - uh so let's find out where we have a
13:32 - drawer item and see what we're passing
13:34 - there
13:35 - okay so here's our is open and our
13:38 - expand item
13:40 - so it looks like this props drawer menu
13:42 - is about so it's actually props we're
13:45 - getting it from props here
13:47 - and then we're also getting this from
13:48 - props as well
13:50 - so our state doesn't live in this
13:52 - component either
13:53 - we need to go up another component
13:57 - so let's
13:58 - let's check it out now
14:00 - the parent component of drawer
14:03 - is a component called layout which i
14:05 - don't think i have up right now
14:08 - all right so let's
14:10 - open this up
14:14 - and find layout
14:17 - layout.js
14:20 - we'll close this
14:23 - all right
14:24 - so in layout
14:28 - let's see
14:31 - what we have
14:33 - let's go let's go down here to where we
14:35 - have drawer and you can see we're
14:37 - passing down
14:40 - the toggle drawer
14:43 - or i'm sorry the expand items and then
14:46 - draw items
14:49 - is this
14:50 - yeah so this is what were
14:53 - we were past passing down so you could
14:56 - see
14:57 - we're passing down from layout to drawer
15:02 - so you could see
15:04 - drawer items in this case it's dot about
15:07 - because this particular item is about
15:09 - we're not going to be hard coding the
15:11 - item name so we're definitely gonna have
15:13 - to come up with a different way to do
15:14 - that
15:15 - uh and then the expand item so and then
15:19 - we see that's what finally gets passed
15:21 - down to our draw item component so let's
15:22 - go back up to layout and see where these
15:24 - are coming from so let's find expand
15:28 - item
15:30 - which is a function
15:32 - uh that lives in this component and then
15:35 - let's check out state to look at drawer
15:37 - items in state
15:41 - so
15:42 - expand item accepts
15:45 - item id
15:49 - and then based on that id
15:52 - it changes the state
15:54 - of that particular item
15:58 - from
15:59 - either open or closed or i i believe
16:01 - it's true or false yeah so it's true or
16:03 - false meaning if it's true it's open if
16:06 - it's false it's closed so the menus you
16:09 - know true or open or closed
16:11 - okay so
16:13 - that's where
16:16 - essentially this
16:19 - needs to be
16:21 - either replicated
16:23 - or changed so that it can work in both
16:25 - situations
16:26 - what i'm going to do first is we're
16:28 - going to replicate this
16:30 - we're going to move
16:33 - basically we're going to move this
16:34 - function
16:37 - this sub item
16:38 - expander function right
16:41 - we're going to move that
16:42 - out of this component and into layout
16:46 - and try to make the same thing work uh
16:50 - here
16:54 - now if
16:56 - we find that maybe we could refactor and
16:59 - only use one function for both maybe
17:01 - we'll do that the first thing first
17:03 - things first let's just get it working
17:05 - okay now at this point i do want to ask
17:10 - do you think that it's necessary to have
17:12 - it live all the way at that top
17:14 - component
17:16 - for it to work
17:21 - like we wanted to
17:23 - could we just
17:24 - change things
17:28 - so that it would work
17:31 - um without moving it up
17:39 - so
17:40 - i'm going to start working on this but i
17:41 - do want to know if anybody if anybody
17:44 - really thinks hey there's a better way
17:45 - to do this
17:46 - so i'd rather
17:48 - consider a different way now
17:53 - than um
17:54 - then do all the work
17:56 - and figure out that it's not going to
17:58 - work
18:00 - or we could have done it a better way
18:03 - all right so
18:05 - as if anybody's gonna uh i know there's
18:08 - a delay so if anybody is gonna
18:10 - uh throw in their opinion i'll keep
18:12 - checking the live chat but while i'm
18:13 - doing that let's see
18:16 - first thing we're going to take is this
18:18 - we're actually let's remove this console
18:20 - log
18:22 - i don't think we need the console log
18:23 - anymore
18:29 - okay
18:32 - we're going to move this first
18:34 - and then we're going to move the state
18:37 - okay now if you'll remember
18:41 - we already have drawer items in the
18:44 - state here so we may have to change
18:47 - the name
18:50 - which is not really a big deal
18:57 - so first
18:59 - let's take this
19:02 - take it out of here
19:05 - and let's add it in now we've already
19:08 - renamed it from this other component
19:10 - which it was based on or this other
19:12 - function that was based on
19:14 - so we should be okay
19:20 - so now that is there
19:23 - but what we need to do
19:26 - is pass this down as a prop
19:29 - so in the same way that we've done this
19:32 - with expand item
19:35 - we're going to pass it down as well
19:39 - to
19:40 - draw
19:41 - as expand sub item
19:50 - alright so now expand subitem will be
19:53 - available to the drawer component
19:55 - all right so this function will be able
19:58 - to call this function
20:00 - from the drawer component
20:02 - all right so that's one step we got to
20:03 - take another step after that but
20:06 - first things first let's get this state
20:09 - set up as well
20:11 - so
20:13 - i don't want to mess up what's going on
20:15 - here with drawer items
20:17 - like i said we can always refactor later
20:19 - if we find that you know hey maybe we
20:21 - don't need separate things so i'm gonna
20:23 - say
20:25 - drawer sub items
20:31 - okay now that i think about it that
20:33 - naming doesn't make the most sense but
20:36 - i think it's um
20:40 - um
20:42 - i think it'll work
20:44 - so for drawer sub items
20:51 - yeah we're not going to put anything
20:52 - there yet right because we're not hard
20:55 - coding the values
20:58 - so we're just going to leave that as an
20:59 - empty object
21:02 - and now let's modify
21:04 - what we have here
21:06 - because we're no longer going to be
21:08 - setting the state for drawer items we
21:11 - want to set it for drawer sub items
21:14 - and we have to change what's here as
21:16 - well
21:21 - draw sub items okay so
21:25 - that's
21:27 - now uh when this is called
21:31 - it will take drawer sub items
21:35 - and it will combine whatever was there
21:40 - with the new value
21:43 - for this particular item
21:45 - okay so
21:47 - so far so good i mean logic wise it
21:50 - seems like it makes sense
21:56 - okay
22:04 - okay
22:06 - great
22:08 - oh i know we need to pass down the
22:10 - drawer sub items thought i was
22:12 - forgetting something
22:14 - so let's pass down
22:17 - we'll just copy this
22:20 - so we can change it
22:22 - um
22:26 - for
22:32 - sub items
22:35 - okay
22:36 - so these drawer sub items
22:39 - save that
22:41 - and now let's go down to drawer so
22:43 - remember
22:44 - we now have drawer sub items and expand
22:48 - sub item
22:49 - that we're
22:51 - we're gonna have access to in the in
22:53 - drawer.js
22:56 - all right so it's going to be a little
22:58 - bit different here
23:03 - so
23:05 - let's take this is open
23:12 - uh how am i gonna do this
23:17 - i was hoping to find a way to do this
23:20 - oh yeah here we go
23:28 - so we have four uh drawer items in here
23:32 - which it's it's a little silly we should
23:34 - really just map over these but we never
23:36 - got around to refactoring that
23:39 - so
23:43 - did i not get all of them
23:45 - no
23:47 - all right so i'm sure
23:48 - chinese multiple cursors to do all this
23:50 - in one go
23:52 - instead of uh copy and pasting
23:55 - there we go
23:57 - okay so
23:58 - i'm gonna have a new line here and we're
24:01 - gonna
24:02 - call this
24:05 - expand sub item
24:10 - and
24:14 - we're going to
24:22 - this
24:23 - props
24:28 - so
24:29 - item okay so essentially we're just
24:32 - passing that function
24:34 - down another level we're not doing
24:36 - anything with it we're just passing it
24:38 - on
24:39 - okay and then we need to change one more
24:41 - thing
24:44 - and let's see
24:50 - where it is
24:55 - open
24:56 - this is open
24:59 - and
25:00 - actually how did i pass this on
25:05 - juror sub items okay
25:10 - uh so i'm going to
25:16 - 2 3
25:18 - [Music]
25:26 - let's see let's take this is open and
25:33 - so
25:34 - is
25:35 - sub open
25:38 - okay once again the naming could
25:40 - probably use a little work here but
25:43 - uh what we're going to pass down is
25:46 - this props
25:52 - sub
25:54 - items
25:57 - let's make sure got everything
26:02 - all right looks like it
26:04 - okay so once again
26:07 - all we're doing here
26:08 - is just passing down everything from
26:10 - layout through drawer to drawer item
26:13 - we've done nothing to change it
26:19 - okay now
26:23 - here's where we need to to do a little
26:24 - bit of more work so we don't need state
26:28 - now in this component
26:30 - because our state
26:32 - now lives in layout
26:37 - but what we do have
26:40 - are a few more props so let's add them
26:42 - here
26:44 - so that we don't have to write this
26:46 - props
26:47 - within our component
26:49 - so we have
26:51 - is sub open
26:54 - and we also have
26:57 - expand sub item
27:04 - let me check my timer all right great 10
27:07 - minutes
27:10 - i feel i think we're going good on time
27:12 - because i haven't messed anything up yet
27:14 - it
27:15 - feels like i'm doing a good job today
27:17 - okay
27:18 - uh
27:20 - so now
27:22 - we we need to use these in the proper
27:24 - place
27:26 - so
27:28 - what we're going to do let's just grab
27:30 - this so that we can just kind of copy
27:33 - exactly what's going on here so let's go
27:36 - into our sub menu items
27:39 - and within there we're mapping over the
27:42 - items
27:43 - and if a particular item has another
27:46 - menu within it another sub menu
27:49 - all right then we're rendering this
27:51 - particular version of it
27:54 - and we need this on click
27:57 - oops not that one
27:59 - wrong one
28:04 - trying to find the right on click
28:13 - expand sub item
28:18 - there we are
28:21 - okay so we're gonna expand the sub item
28:32 - we don't need this all right so before
28:35 - we were calling this directly
28:37 - now we don't need it
28:39 - we have exp should work yeah so expand
28:42 - sub item and then we're passing it the
28:44 - item text
28:48 - so that
28:50 - uh
28:51 - that's going to be like the item id that
28:53 - we saw in in the function when we moved
28:55 - it into layout
28:58 - and then
29:00 - we need to make sure we're grabbing
29:06 - the right items
29:13 - yeah so we we no longer can get drawer
29:16 - items we need to get drawer
29:18 - sub items
29:32 - is that what we're getting
29:38 - so we caught it i'm pretty sure we did
29:40 - define it
29:52 - well let's get rid of this as well
29:55 - so that doesn't live in states
29:59 - what did we call him again
30:01 - oh you know what we just said is sub
30:04 - open
30:13 - all right i think
30:15 - all right this is the first mess up i
30:16 - think i forgot
30:19 - i forgot something
30:26 - yeah so what we were doing
30:34 - uh let me climb back up here to the top
30:37 - uh so we were getting
30:43 - some data
30:44 - where are we getting the data from
30:48 - the data was coming in before wasn't it
31:10 - oh there we are okay so here's our data
31:14 - so
31:15 - let me make sure we're gonna we have the
31:17 - data
31:18 - that we need
31:23 - okay
31:25 - i think we're fine
31:28 - i think i just um
31:44 - okay yes so let's go is
31:46 - sub open
31:54 - yeah is sub open
31:56 - item touch
31:59 - all right that's what we need
32:01 - sorry i was freaking out for a second
32:03 - because i was like wait a second like
32:05 - how are we getting our data in here and
32:08 - that was fine we didn't
32:10 - everything's all right
32:16 - so
32:17 - instead of drawer items again we need is
32:20 - sub open
32:26 - here we are
32:30 - and
32:33 - just double checking here
32:39 - making sure we have everything and now
32:40 - this should not affect anything down
32:42 - here because this is only
32:47 - uh for items that don't have
32:50 - a submenu
32:52 - okay
32:54 - all right let's save it
32:57 - and
32:59 - best way to figure out if we mess it up
33:01 - is just to check it out
33:02 - so
33:03 - if the page renders that's a good sign
33:07 - and it looks like it does i'm going to
33:08 - give it a hard refresh just
33:10 - to be sure
33:19 - interesting okay so we we got a flash of
33:22 - an error i don't know what that was for
33:24 - also let me check my time all right
33:26 - three minutes in about three minutes i'm
33:28 - gonna go to the live chat and answer
33:29 - some questions
33:30 - okay so that was a good sign i don't
33:32 - know what i mean other than that weird
33:34 - air that flashed up if it does it again
33:36 - then we'll look at it uh otherwise uh
33:39 - i think we'll be all right so let's
33:41 - check out this menu
33:43 - all right so that part still works
33:45 - wonderful we didn't mess with it so
33:47 - that's to be expected let's see if this
33:49 - click works
33:51 - oh that works
33:53 - let's see if it works for two different
33:54 - ones wonderful
33:57 - all right now let's shut the drawer
33:59 - and open it again
34:03 - nice it works see and it works for two
34:07 - of them
34:14 - nice i do want to test this out if i
34:16 - close academics
34:18 - and then open it
34:20 - nice it's still open i want to close
34:23 - this
34:24 - shut it
34:26 - open it
34:29 - nice all right our state is like super
34:32 - persistent now this is the behavior that
34:35 - we wanted
34:39 - excellent
34:41 - excellent okay so
34:43 - uh does anyone know
34:46 - i want to ask a question before i
34:48 - explain why i think this happened
34:50 - why like seeing
34:52 - you all saw when we took the code we
34:54 - didn't really change it other than some
34:56 - names
34:58 - all we did was take the same function in
35:00 - the same state and then move it up to
35:03 - components
35:05 - and now the behavior is different
35:08 - why is the behavior different why before
35:12 - did those sub menus automatically gets
35:15 - shut
35:16 - when we close the side drawer and open
35:18 - it back up and why now
35:20 - are they staying open why is the state
35:23 - persisting now when it didn't before
35:28 - so let me let me know what you all think
35:36 - and my timer's gotta be up by now
35:39 - just about
35:41 - okay i'm just gonna go to the uh short
35:44 - break right now since i'm not really
35:45 - gonna get anything done in a minute i'm
35:47 - scroll up to the top of the chat and i'm
35:49 - gonna go down through and get to as many
35:50 - questions as i can uh and i'll give you
35:53 - all time to answer why you think
35:56 - the state uh
35:58 - didn't persist and now it does persist
36:05 - all right so you see a lot of what are
36:07 - you saying hi uh
36:09 - grandpa fat boy says good evening
36:11 - everyone
36:12 - uh i don't know that i've seen that name
36:14 - in here so welcome
36:16 - welcome it's a special welcome to all
36:18 - the newcomers in here
36:20 - uh let's see
36:26 - let's see
36:28 - uh nikki says sorry i missed yesterday's
36:31 - stream about the infinite scrolling seen
36:32 - how we did it in
36:34 - jsaf intersection of servers awesome oh
36:37 - you know what nikki i didn't
36:39 - i totally forgot about it in jsaf i'm
36:42 - gonna check that out because we um
36:46 - we didn't fully implement it
36:50 - so um
36:52 - yeah i will check that out
36:54 - because that's
36:56 - probably a better way than what i was
36:58 - thinking
37:05 - michael says you should add backup
37:07 - singers to your stream backup singers
37:09 - make everything better
37:10 - alright cool babe you know what my
37:12 - wife's always singing all the time so
37:14 - maybe she'll want to be a backup singer
37:27 - it's
37:36 - uh king king darrow said heresy just
37:39 - messing around i assume that was in
37:41 - response when i said we're just gonna
37:43 - use component state
37:44 - so
37:46 - and uh for those of you who aren't
37:47 - familiar with react that much
37:50 - there
37:51 - you you do see like i mean i've seen it
37:54 - shift back and forth but
37:56 - uh you would
37:58 - you know at one point people were saying
38:01 - like never use component state you
38:03 - always want to use redux right and that
38:05 - was i think like overboard like there's
38:08 - too much to the one way uh i think it's
38:10 - more balanced now i do see people saying
38:13 - uh and have been for a little while
38:15 - saying
38:16 - like no component state is the right way
38:19 - to do it if it's not
38:21 - too complex so
38:24 - anyway
38:26 - uh
38:27 - yeah it's it's perfectly acceptable to
38:29 - use
38:32 - uh supra 28 says what are you using here
38:35 - for theming
38:36 - um
38:38 - material ui
38:42 - let's see
38:45 - hey phoenix is here how's it going
38:50 - oh king darrow says
38:52 - uh there's also a library called
38:54 - unstated
38:56 - which looks good uh says but i like to
38:58 - use mob x personally cool yeah i i've
39:01 - i've been interested in mob x i just
39:02 - haven't really had
39:05 - a project to use it on and to learn it
39:08 - i haven't heard of unstated then i'll
39:10 - have to check that out
39:17 - all right so i see some of the answers
39:19 - about um
39:21 - when i was asking like how should we do
39:23 - this where should the state live uh so
39:26 - it looks like most of you
39:33 - most of you agreed that the state should
39:35 - probably live in in layout
39:40 - noble and savage says hubba hubba liking
39:43 - your new office
39:46 - yeah like literally
39:48 - uh
39:50 - i am just in my basement in a corner of
39:53 - the laundry room
39:54 - i have a recliner and then i just have
39:57 - um a table
39:59 - with some monitors on it i have a laptop
40:02 - on my lap
40:03 - and i hung up like um
40:06 - it's not even a curtain it's a um a
40:10 - tablecloth
40:11 - i hung a tablecloth from the like the
40:14 - rafters and
40:16 - uh
40:17 - just to give me some sort of background
40:19 - so so y'all can't don't see like
40:23 - my family walking around back there
40:27 - so
40:28 - that's my office for now it works the
40:30 - recliner is
40:36 - comfy uh phoenix says i'm about to start
40:39 - with react in a few days i'm overwhelmed
40:41 - by the examples that are available i
40:43 - don't know where to start twitter clone
40:44 - medium clone shopping app website what
40:48 - um
40:52 - you know what i would say
40:56 - if you're looking for projects to start
40:58 - with
41:00 - check out the free code camp
41:02 - projects and just do it in react so look
41:06 - at the very first most basic one you do
41:09 - and try to implement that and react even
41:11 - if react's probably overkill for it
41:14 - but the point is just to learn react and
41:17 - start out slow
41:19 - so i think what's the first one is it
41:24 - the first project is
41:26 - i think the uh
41:28 - tribute page
41:32 - so i mean that's i i've heard of people
41:34 - doing that
41:36 - uh going through free code camp projects
41:38 - and doing them with react so
41:41 - uh i would try that
41:53 - okay so i did not get all the way
41:56 - through
41:58 - all the questions right now
42:00 - oh but actually you know what let me
42:02 - just go through the questions because
42:04 - i mean really
42:08 - we actually got it to work
42:10 - it's just insane let me go through some
42:12 - more of these questions and then i want
42:14 - to see if anybody answered that last
42:15 - question i asked uh and and we're gonna
42:19 - go over that so
42:23 - uh
42:24 - i did get through most of them so
42:25 - there's not that much left
42:34 - okay so john kane recommends um
42:38 - react 16 the complete guide
42:41 - which
42:42 - was ten dollars on udemy
42:46 - so
42:47 - uh check that out
42:49 - i've never checked it out so that's not
42:51 - really an endorsement i'm just
42:53 - uh
42:54 - you know but john john kane thinks it's
42:56 - good
42:58 - uh john john hanson says uh jesse kindly
43:02 - suggested that i give react a try i had
43:04 - barely gone from a simple understanding
43:06 - of jquery to javascript at the time now
43:09 - i have a fairly good grasp go for it
43:12 - awesome john i'm i'm glad to hear that
43:15 - that you're getting a good grasp and uh
43:17 - that's really cool that
43:19 - that you you consider me to be the one
43:21 - that
43:22 - uh
43:23 - was
43:24 - kind of uh got you into that so
43:27 - really cool
43:33 - nikki says following along with the
43:34 - tutorial helped me uh andrew meades and
43:37 - max schwartz mueller's are both great
43:41 - okay cool a lot of good resources thank
43:43 - you
43:48 - carlos says max's course is awesome
43:58 - let's see
44:00 - uh andrew asks what mic i'm using
44:03 - uh actually so when i'm working from
44:05 - home i just use the built-in mic uh for
44:08 - a macbook pro
44:10 - when i'm in my office uh like at
44:14 - at my place of work
44:16 - i
44:16 - have like a usb mic i don't even
44:19 - remember the brand it was inexpensive
44:21 - from amazon
44:23 - i'm probably going to end up getting a
44:25 - mic for home
44:26 - and
44:28 - maybe even a camera like an external
44:30 - camera
44:33 - because i when i have the laptop on my
44:35 - lap it tends to shift around a bit and
44:38 - uh i don't want
44:40 - i don't want to give anybody motion
44:41 - sickness by the
44:43 - the shifting of the camera so i think
44:45 - it'd be better if i had just a small
44:47 - tripod and
44:49 - and a camera that was stationary
44:53 - i bought the tripod already it came in
44:56 - i got a notification from amazon so
44:59 - i think it's sitting outside my door
45:01 - right now
45:02 - um
45:03 - but i i haven't decided what
45:05 - camera to buy and the webcams are a bit
45:08 - more expensive so
45:09 - i want to put some thought into which
45:11 - one i should get
45:17 - okay so carlos says the state persists
45:20 - because they went to the parent
45:22 - it is yeah so going to the parent was
45:25 - why it persists
45:30 - but let's see so
45:32 - i want to see
45:34 - i'll explain why i think it
45:36 - what i think the like exact issue was
45:43 - but i want to see what you all say first
45:48 - uh solely says uh just man says hi just
45:52 - managed to join in now just came back
45:54 - from work uh jesse i missed your past
45:57 - two live vids because you started early
45:59 - oh okay yeah sorry about that
46:02 - um i've been starting at different times
46:05 - if i start early then uh my viewers in
46:09 - india and anywhere in that time zone
46:12 - are those couple time zones you know
46:14 - together
46:15 - uh
46:16 - they are better able to watch otherwise
46:19 - it's too late for them
46:21 - uh so
46:22 - i don't know so for right now i'm kind
46:24 - of switching back and forth uh so do
46:26 - some a little later some earlier
46:29 - um so sorry about that i know it's
46:32 - there's no time i can stream that works
46:34 - for everybody so
46:36 - right now i'm just streaming at like
46:38 - different times
46:40 - and so sometimes you know different
46:42 - people be able to catch it live other
46:44 - times you know you may just have to
46:46 - catch the recording
46:48 - uh so
46:50 - i just i don't really know any other way
46:51 - to to do it to try to be fair about it
46:54 - so that everybody gets a chance to watch
46:56 - the watch it live you know other than
46:58 - varying the time
47:01 - javascript is here says jesse what's up
47:04 - uh
47:05 - nothing much just working
47:07 - how you doing
47:10 - and it's actually it's a really nice day
47:12 - here
47:13 - finally
47:14 - you know it's it's uh it's been pretty
47:17 - cold lately so today is like 70 degrees
47:20 - sunny
47:21 - a little breeze it's really nice
47:25 - i mean i'm in a basement
47:27 - with
47:29 - coding but
47:30 - it's still cool that it's nice
47:44 - frankie says the recliner looks
47:45 - comfortable it's actually it's
47:47 - comfortable but it is it's really old i
47:50 - got this recliner from my grandfather
47:53 - who had used it for a while
47:56 - and
47:57 - decided he was ready to get a new one so
47:59 - then i got this recliner when i was in
48:02 - was i still in high school
48:04 - i think i may have still been in high
48:06 - school i'm 32 years old now so i was a
48:08 - teenager i think when i got this
48:10 - recliner
48:11 - and i had the same setup at my parents
48:14 - house in my bedroom where i had a
48:16 - recliner
48:17 - and multiple monitors
48:21 - i used them back in the day to play
48:23 - video games not coding
48:26 - and i just after i
48:29 - got married i took the recliner with me
48:32 - and just have replicated this setup
48:34 - everywhere that i've lived every time i
48:36 - moved i just take it so
48:38 - uh
48:39 - it's actually like
48:42 - it's pretty ripped up it's still
48:44 - comfortable but i mean it's i'm sure
48:46 - it's not nearly as comfortable it was
48:48 - when it was new
48:49 - um but
48:51 - it's not suitable to be in my living
48:53 - room but it's okay to be in my basement
49:09 - uh javascript says don't mix jquery and
49:12 - react bad idea yeah for sure it makes
49:14 - things difficult if you for some reason
49:16 - have to mix jquery and react check out
49:19 - project one
49:21 - on the playlist for live coding with
49:23 - jesse because we did that and we made it
49:26 - work i'd love to change it so that we
49:29 - don't need jquery um
49:32 - but i go
49:33 - at some point in that series that
49:35 - project one i go through and explain
49:38 - like why you shouldn't do it like this
49:41 - and then i explain if you have to do it
49:43 - anyway here's how we do it and we we
49:45 - make it work and that that site's
49:48 - actually still live and and doing well
49:51 - uh so it can be done
49:53 - it's not the best way to do it
49:57 - uh so
49:58 - so don't don't do it if you can avoid it
50:01 - but sometimes it's
50:02 - you can't really avoid
50:10 - it uh javascript says where do you work
50:14 - i work at franciscan university of
50:16 - steubenville
50:17 - uh it's a small catholic college
50:21 - um in
50:23 - uh
50:24 - like eastern ohio so i don't know how
50:28 - how familiar you all are with uh
50:30 - united states geography but there's a
50:33 - point where the state west virginia so
50:36 - the northernmost part of west virginia
50:38 - meets
50:39 - with
50:40 - eastern ohio and western pennsylvania
50:44 - and right where those meet together
50:47 - oh uh steubenville is like pretty much
50:50 - right there
50:51 - so
50:52 - steubenville is
50:54 - very close to pittsburgh pennsylvania
50:58 - so if you know where pittsburgh is on a
51:00 - map
51:01 - uh just move a little bit west of there
51:04 - and as soon as you cross the border
51:06 - into from west virginia from
51:09 - pennsylvania into west virginia and then
51:10 - into ohio that's where studentvo is
51:15 - but anyway it's a small school i think
51:17 - we only have 2 000 students and
51:20 - i'm a front-end developer there
51:24 - but it's it's nice i i'm it's only about
51:26 - 10 minutes from where i live
51:28 - uh it's it's right next to where i grew
51:30 - up i grew up in west virginia uh right
51:32 - across the ohio river from where i live
51:34 - now and uh so my kids get to be around
51:37 - their cousins and their grandparents all
51:39 - the time my wife's family is actually
51:41 - from steubenville my wife grew up in
51:42 - stephenville so
51:44 - um
51:46 - so i really wanted my kids to grow up
51:47 - around all their family so that's why we
51:50 - end up here so it works well works out
51:52 - well that i can i can work here
51:55 - um
51:57 - be able to provide for my family i know
51:59 - a lot of
52:00 - a lot of people that grew up in this
52:02 - area had to move away
52:04 - because it's not really
52:06 - economically doing well but
52:09 - uh
52:11 - thankful that i was able to stay here
52:14 - let's see
52:15 - i lost my place i'm trying to scroll up
52:17 - and find my
52:19 - um nikki says on the state not
52:21 - persisting before you put state higher
52:24 - did the component get unmounted that
52:25 - would explain it
52:28 - yes i i believe we have a winner there
52:30 - so
52:31 - my
52:32 - thought was
52:34 - so after we implemented this
52:37 - i don't know it was a couple days ago or
52:38 - something um
52:41 - i noticed that behavior
52:43 - and i thought oh that's no good like we
52:45 - can't have that behavior and and i
52:47 - started thinking about it and that's
52:48 - what i thought is
52:50 - oh like
52:52 - what's happening is
52:54 - right like when state lived at this
52:57 - level right at this level
53:02 - like it would save the state here
53:06 - but then
53:07 - once this drawer was hidden like that
53:09 - was it component on mounts
53:12 - state is reset
53:16 - and then when we open it again
53:20 - it starts from all over again
53:22 - so the reason why that didn't happen
53:25 - with these
53:27 - was because the state for these things
53:30 - live way up at layout and layout
53:33 - encompasses all of this the whole page
53:35 - so in layout
53:37 - we have this app bar
53:39 - the footer and the side drawer
53:42 - and layout doesn't unmount
53:46 - layout stays as is
53:49 - and then
53:50 - this content here changes
53:54 - so
53:54 - if we want any state to persist
53:58 - it needs to be in layout
54:00 - right so
54:02 - that's what i thought oh okay if we just
54:04 - move it up to layout if we move the
54:06 - state up to layout then it will persist
54:09 - because it'll never unmount
54:13 - so you can see now like the benefit one
54:16 - of the benefits of using something like
54:18 - redux where the state would actually be
54:20 - stored somewhere else that is completely
54:23 - unaffected by components mounting and
54:25 - unmounting
54:26 - right if if you didn't easily have
54:29 - access to a top level component
54:32 - where you could store that state let's
54:34 - say your component was like eight levels
54:36 - deep you don't want to pass that state
54:39 - all the way down
54:41 - right that's that would be ridiculous
54:44 - then something like redux would be super
54:46 - helpful
54:48 - because the component the child
54:50 - component would immediately have access
54:52 - then to your redux store where your
54:54 - state would would live
54:56 - in this case since we're only talking
54:58 - about two levels
55:00 - it was fine
55:02 - right it makes sense
55:04 - would we have a little bit you know less
55:06 - code in our components if we went with
55:09 - redux a little bit less
55:12 - but then having all that extra redux
55:14 - stuff there doesn't really make sense so
55:16 - if we were doing this kind of thing
55:18 - everywhere all over the place passing it
55:21 - down you know even further yeah then it
55:23 - would make sense and actually um
55:27 - with the latest versions of apollo which
55:28 - is what we're using uh to get our
55:30 - graphql data
55:32 - you can also do similar things like that
55:34 - like to save your state in a store so we
55:37 - probably wouldn't even use redux we
55:39 - would use
55:40 - the apollo version of that
55:46 - all right so does that make sense to
55:47 - everyone
55:48 - so good job nikki and um
55:52 - uh who else someone else said so carlos
55:55 - was on on the right track as well uh and
55:57 - so good job uh for catching on to that i
56:00 - feel like i'm teaching the class when i
56:01 - was
56:03 - when i was asking questions but i just i
56:05 - don't know i wanted to give you all a
56:06 - chance to
56:08 - like say it first instead of me just
56:11 - talking about it
56:12 - uh
56:14 - anyway so that's the reason if anybody
56:15 - needs an ex like a better explanation of
56:17 - that let me know i'll try to do a better
56:19 - job
56:23 - john kane says i recommend the razer keo
56:26 - webcam 100 bucks on amazon
56:30 - okay cool let me you know let me open
56:32 - that up right now so i don't forget what
56:34 - it is on and on another screen
56:42 - all right
56:44 - so
56:47 - i will check that out after the stream
56:50 - i'm glad you mentioned that because i
56:51 - hadn't heard of that before at amazon
56:53 - like all the webcams that come up are
56:56 - like logitech webcams
57:28 - all right i'm skipping through a bit
57:30 - just trying to find some questions
57:46 - all right so several uh several of you
57:48 - are
57:48 - saying where you're from so we have uh
57:51 - india
57:52 - switzerland
57:54 - um
57:55 - awesome virginia so blacksburg virginia
58:00 - very cool so you're only one
58:03 - well i guess two states over for me
58:04 - since i'm not in west virginia anymore
58:19 - oh javascript says you're like half a
58:21 - state away from me
58:23 - awesome
58:24 - um frankie says can you view the
58:26 - mountains from your region in west
58:28 - virginia um
58:31 - where i'm at
58:33 - well i mean
58:35 - where i grew up which is
58:37 - just across the river from where i'm at
58:38 - right now
58:39 - uh it's
58:43 - it's like hills there are big hills
58:45 - right they're not really like
58:47 - mountainous
58:48 - so um
58:49 - i would have to drive a little bit
58:51 - further uh into west virginia to really
58:54 - get into uh with the the appalachian
58:57 - mountains
58:59 - um
59:01 - yeah so it's not it's not that far but
59:04 - uh it's a little bit of a drive so i'm
59:06 - kind of in the foothills of uh of the
59:09 - mountains so there's definitely
59:11 - definitely some steep windy roads around
59:13 - here
59:14 - uh but not exactly mountains but the
59:17 - state west virginia um as a state is
59:21 - really beautiful
59:23 - um and actually like virginia is too
59:25 - like that whole region
59:27 - uh like driving through there is just
59:30 - i mean there's some really cool if
59:32 - you're into like outdoor stuff like
59:34 - um i don't know like white water rafting
59:37 - camping hiking stuff like that i mean
59:39 - you can't be
59:40 - west virginia because like so much of
59:42 - the the state doesn't have a high
59:44 - population so so much of the state is
59:46 - just forests and mountains and and lakes
59:49 - and rivers and stuff it's just like
59:51 - untouched wilderness basically
59:53 - uh so
59:55 - it's really
59:57 - it's kind of cool and it's still pretty
59:59 - close to a lot of major cities and
60:01 - airports and things so
60:03 - you know you get kind of like the best
60:04 - of both worlds that you have the
60:06 - wilderness generally like really low
60:08 - property values low taxes uh but if you
60:12 - really wanted to enjoy like city life
60:14 - it's not that far away
60:19 - anyway i'm not getting paid by the
60:22 - tourism department of any state to say
60:24 - that that's my honest opinion
60:33 - uh gabriel's uh saying hi from sao paulo
60:36 - brazil awesome
60:38 - uh
60:42 - so thanks for watching
60:48 - uh sonny asks what language this is uh
60:50 - javascript oh
60:52 - nikki already answered i should have
60:54 - known somebody would have answered
61:04 - let's see
61:05 - uh renato asks what my opinion is on
61:08 - mobx i from what i've seen of mobx i
61:12 - really like it it honestly seems like a
61:15 - uh
61:16 - slightly less complex
61:18 - version of redux so i'm not saying
61:20 - they're the same thing right so they
61:22 - both solve like the same problem but in
61:25 - in slightly different ways
61:27 - so
61:29 - uh i would say
61:32 - i ended up learning redux first because
61:34 - it was a part of the udacity nanodegree
61:37 - uh if i had just decided to learn on my
61:39 - own i probably would have learned mob x
61:41 - first because it seems like mob x is is
61:44 - a little bit easier to to deal with
61:47 - um so
61:48 - unfortunately i haven't worked with it
61:50 - directly myself so i i don't really want
61:52 - to say too much more about it
61:55 - you know
61:56 - because it
61:58 - i don't know that i could give a really
62:00 - good good explanation or information but
62:02 - if you're interested in in using mobx
62:05 - and you're trying to decide between
62:07 - redux and mobx
62:09 - i would
62:11 - if it were me i'd probably
62:13 - go with mob x i'd try to learn that
62:15 - first
62:18 - although for i mean me right now since i
62:20 - already know redux i might go with redux
62:22 - but if i hadn't learned redux first i'd
62:24 - probably go to mobx
62:26 - hopefully that made sense i felt like i
62:28 - was talking in circles for a second
62:31 - uh nikki says react 16.3 also has the
62:34 - new context api you can use for that oh
62:36 - that's right that's right
62:38 - uh thank you for bringing that up nikki
62:39 - i can't believe i forgot yeah so uh the
62:42 - latest versions of react
62:44 - have another way to handle state which i
62:48 - need to learn more about that
62:51 - and maybe start using that
62:59 - carlos says teach us jesse we want to
63:01 - learn and love your videos that's
63:03 - awesome thanks for saying that
63:10 - frankie says thanks
63:13 - uh
63:14 - zutek
63:16 - sorry if i'm mispronouncing that name i
63:18 - think it's utech says uh hi and
63:21 - greetings from poland
63:22 - all right awesome i have um
63:26 - my my wife
63:27 - my wife's family and my family both have
63:30 - ancestors uh from poland
63:33 - so
63:33 - i've never been there
63:35 - uh but
63:36 - part of my family tree originated uh in
63:39 - poland so that that's cool
63:48 - frankie says i'm the girl who wants to
63:50 - go off grid so i agree totally cool that
63:53 - was what i was talking about like the
63:54 - you know the mountains and stuff
63:56 - yeah it's um
64:02 - it's cool at one time i was really into
64:04 - like the whole like homesteading thing
64:06 - like raise your own you know animals and
64:08 - have a garden and all kind of stuff like
64:10 - that um so
64:13 - right now i actually live outside of
64:15 - like city limits so
64:18 - it's uh
64:20 - like at one time i did raise animals and
64:23 - and do the whole like
64:24 - i wasn't completely off the grid but
64:26 - that was i was like
64:28 - working my way up to it
64:30 - um and then it
64:32 - i don't know it got it got difficult
64:37 - with um trying to work full-time
64:40 - and raise kids have four kids and things
64:43 - so it was just
64:45 - i kind of just let it go
64:47 - and we i still have a uh a garden and
64:51 - every you know stuff like that
64:54 - but i don't raise any animals anymore
65:01 - all right let's see
65:07 - trying to scroll down i
65:10 - my live chat window is messed up
65:20 - no ah i can't my live chat window got
65:24 - messed up and so i can't read anything
65:26 - let me
65:28 - restore it
65:30 - over here
65:33 - please work music
65:43 - yes alright i got it back
65:52 - all right sorry about that
66:08 - let's see
66:09 - uh renato says thanks for the answer
66:11 - says yeah malbec seems much simpler to
66:14 - understand at first
66:15 - yeah that was i mean that was my
66:17 - impression
66:22 - uh yusuf says greetings from indonesia
66:26 - awesome
66:32 - uh frankie says right i completely
66:34 - comprehend uh off grid
66:37 - all right cool
66:38 - um
66:39 - well that's the end of that's i've got
66:42 - to the bottom of the the chat uh the
66:44 - live chat
66:46 - and i know i said at the beginning i was
66:48 - gonna do two pomodoro sessions but
66:51 - amazingly i somehow managed to do what i
66:55 - wanted to do
66:56 - without messing up too badly and
66:58 - finished it in one pomodoro session
67:02 - which that is very very rare uh i i
67:06 - believe i've done
67:07 - for sure over 100 live streams
67:10 - and
67:11 - it
67:12 - i would imagine there are maybe less
67:14 - than 10 live streams where we accomplish
67:16 - everything we wanted to like in a
67:19 - shorter amount of time
67:20 - so
67:21 - today was a great day great way to end
67:23 - the week
67:24 - and uh thank you all so much for
67:27 - watching
67:28 - and uh for all your your advice uh in
67:31 - the live chat and and your help it was
67:34 - it was fun it was really fun stream
67:36 - today
67:37 - so
67:38 - uh i think i'll be back
67:42 - monday
67:43 - yeah what's going on monday
67:45 - i should be able to stream on monday
67:46 - i'll be in the office then not sure what
67:48 - we'll be doing then but uh
67:51 - probably most likely working on this
67:52 - same project i'm just not sure exactly
67:54 - what we'll do
67:56 - uh so and there were a lot of of new
67:58 - people in the stream today so i want to
67:59 - say again welcome thank you so much for
68:02 - watching hopefully you can all come back
68:04 - again for for another stream
68:07 - and uh yeah so i hope everyone has a
68:09 - really really awesome weekend and um so
68:12 - until
68:13 - until monday
68:15 - uh i guess have
68:18 - have a great weekend
68:21 - i'll see y'all later

Cleaned transcript:

hey everyone uh welcome to live coding with jesse and today we're going to work with state and react and um let me fix this screen for you if you remember yesterday uh i had some different monitors hooked up to this laptop so uh it shifted around the screen and um so last few minutes i've just been trying to get everything back to normal uh so happy friday it's crazy the week's already over uh i got off to a late start today i had my uh my youngest son ambrose who's three he's been having trouble swallowing and been getting things like stuck in his throat so we went in for some testing this morning at a hospital and he wanted me to go uh so uh i went in with him and uh he did a great job um all the nurses said it he did better than uh than the the uh grown men that were in there before him so i was proud of that little guy so i took him out to mcdonald's afterwards so uh anyway enough about me uh but anyway i just meant to say i got off to a really late start today because of that so i haven't had gotten to do that much with the project so it's pretty much in the same state that it was in yesterday uh so most of my work has just been in transferring data from the old database to the new database which you know all that is kind of behind the scenes and nobody really sees that um let me i want to move the chat window over to my other screen so that i can see it more easily and i don't miss your comments let's see and uh so there was a live stream about the free code camp youtube channel on another youtube channel called engineered truth i think that's what it was engineer truth i'm pretty sure that was the name of the channel but anyway it i should have grabbed the url for you all i don't have it right now uh but it was a pretty cool live stream it was quincy who if if you're not familiar with free code cam quincy is the founder and the head of free code camp uh but quincy uh was talking with another youtuber whose channel is very successful uh and this other youtuber was giving quincy a lot of advice on um how to make the free codecamp youtube channel better uh so it was pretty cool but it so if you have your own channel and you want some advice on on how to grow your channel definitely check that video out i mean a lot of the advice is not specific to free code camping could definitely be applied to a lot of different uh different types of of channels different content but especially if you have a channel about about tech or coding check that out so that was that was really cool and um of course it was cool to see my videos on the screen there uh in the live stream uh when quincy was showing like the youtube dashboard behind the scenes and so anyway that was cool i may be trying to incorporate some new things into my streams uh i'm going to try to maybe name them my streams like a little bit better so there's not going to be any major major changes for me uh but you know maybe just some some really like you know subtle things okay so it looks like yeah all right so we have a decent uh amount of viewers in here right now so i think we're safe to uh to get started so i figured today we'll do two pomodoro sessions uh so those are two 25minute periods of code and in between those periods of code i'll answer some questions in the live chat so if you have any questions feel free to put in the live chat i won't probably won't get to your question immediately but i will answer it before the stream is over um so i uh i'm sorry i'm distracted by messages coming in so uh just for the new people in here for those of you who are seeing the stream a lot sorry i'm going to go over this again but uh at least once a week i think i'm going to try to go over what we're doing in the stream so the quick version for everyone who's new is this is my daily work i'm a frontend developer for a small university and uh i work partly from home and partly in the office i'm at home today and whatever i need to work on for for my job is what i stream so these streams aren't exactly tutorials although i do my best to explain what i'm doing and i'll answer any questions that you have but i say they're not tutorials because sometimes we don't go in a logical order in terms of starting with beginner level stuff and working our way up i just have to work on what needs to get done so having said that yeah i just want everybody to have the right mindset coming in that you know it's not a tutorial but it is a glimpse into my work as a frontend developer i may not be the average frontend developer i don't i don't really know but it may be helpful for you all to see what kind of work i do and most importantly how often i mess up because i i do mess up quite frequently if you don't believe me ask people in the live chat i'm sure anybody that's been watching for you know more than a few shows has seen me mess up quite a bit uh but we work through that together so feel free to put your opinions in as well uh if you see me in doing something that looks wrong call me out on it all right i i am very very open to constructive criticism uh so uh yeah so don't don't be afraid like i'm not here as the expert really i'm i'm here it's just another web developer and just sharing my stuff and sharing what i do all right let's get started and first i'm going to make this bigger so i'm sure that's difficult for you all to see and that should be big enough let me know uh so i have a preview open on my other screen so if i can read the text then usually it's good for you all to read it and uh so right now let me give you a recap if you're interested in seeing all the code yourself or even downloading the code uh for your own use or for you to work on it uh check out the link in the description for this github repo um all right so we we there's a really good question that just popped up in the live chat and uh it'll be good for me to address this before we start um state management so the question of state management are we doing redux mob x so here's what we're doing we're using component state right so usually when you hear about state management it's followed by with redux or with mob x or with whatever okay but we're going to use component just regular component state um why would we use that well i i don't think we need mob x or redux right so those are excellent things i've used them before i really i should say i've used redux before i haven't used modbx but i'm i'm aware of the differences uh so i like them both and i think they're very useful when needed but i don't think we have the complexity here in our use case that warren's bringing them on so i'm gonna go through okay well what if we don't really have to do that much but we do need to manage state uh we just need to pass state between a few parent and children components right how do we do that so that's what we're going to do today we're going to have the state live in a parent component and then it's gonna get passed down i think two levels uh to a child component right in this case a grandchild component i guess all right and then we're going to change the state that lives up here in the top component when we click on the child component so we're going to have to pass around some things so the state of open or closed gets passed down as props to our child component but then also we're going to need a a click handler that's going to live in the parent component that also gets passed down to the child component all right so this is not something like groundbreaking or really new like no one's ever done this before in fact we've done some similar things in our project before this but uh i'd like to walk through it with you all and i should here we are okay so let's see let's get rid of that i still haven't fixed the warnings on there so apologies for all that uh so here's what we have we have a drop down menu and then inside here we have a secondary level right and right now what happens is so i've opened these up and if i click out of here and i try to go back in they're closed that's not a really great user experience right because if i go to this section like let's say i go into one of these pages in the undergraduate section and i realized either i've read that page and i want to learn more or oh i'm on the wrong page then the user ought to be able to go directly back here and pick up right where they left off but that's not happening right now okay why is that not happening well that's what we're gonna figure out why and figure out how to fix it right and we can see that we've managed to get that to work here so i can open academics i can shut it and open it back up and it's still open right so we have the correct behavior that's happening here but not down here all right so i'd say the the first place that we ought to look then is how are we doing this here already and can we use that same technique uh for this this other part of this menu so for that let's go here and let's see we have drawer item okay yeah so drawer item drawer item is our component that and i forgot to start my clock there we go let's start our pomodoro timer so draw item is you know this this component so these are the drawer items so we can see in drawer item let's see we do have uh this click handler and that is what is expanding those those sub menus all right the the lowest level uh of the menu but we don't have any other click handlers right so at that top level which is here this top list item when we have an on click and expands the item it it calls this expand item and it passes in this case the item id but where is this coming from right so that's the click handler and then number two how do how does it know that that's supposed to be expanded well it's from this is open props so we need to track is open and we need to track expand item up the component tree and see what we're doing so drawer item the parent component for drawer item is drawer so let's see what's going on in drawer uh so let's find out where we have a drawer item and see what we're passing there okay so here's our is open and our expand item so it looks like this props drawer menu is about so it's actually props we're getting it from props here and then we're also getting this from props as well so our state doesn't live in this component either we need to go up another component so let's let's check it out now the parent component of drawer is a component called layout which i don't think i have up right now all right so let's open this up and find layout layout.js we'll close this all right so in layout let's see what we have let's go let's go down here to where we have drawer and you can see we're passing down the toggle drawer or i'm sorry the expand items and then draw items is this yeah so this is what were we were past passing down so you could see we're passing down from layout to drawer so you could see drawer items in this case it's dot about because this particular item is about we're not going to be hard coding the item name so we're definitely gonna have to come up with a different way to do that uh and then the expand item so and then we see that's what finally gets passed down to our draw item component so let's go back up to layout and see where these are coming from so let's find expand item which is a function uh that lives in this component and then let's check out state to look at drawer items in state so expand item accepts item id and then based on that id it changes the state of that particular item from either open or closed or i i believe it's true or false yeah so it's true or false meaning if it's true it's open if it's false it's closed so the menus you know true or open or closed okay so that's where essentially this needs to be either replicated or changed so that it can work in both situations what i'm going to do first is we're going to replicate this we're going to move basically we're going to move this function this sub item expander function right we're going to move that out of this component and into layout and try to make the same thing work uh here now if we find that maybe we could refactor and only use one function for both maybe we'll do that the first thing first things first let's just get it working okay now at this point i do want to ask do you think that it's necessary to have it live all the way at that top component for it to work like we wanted to could we just change things so that it would work um without moving it up so i'm going to start working on this but i do want to know if anybody if anybody really thinks hey there's a better way to do this so i'd rather consider a different way now than um then do all the work and figure out that it's not going to work or we could have done it a better way all right so as if anybody's gonna uh i know there's a delay so if anybody is gonna uh throw in their opinion i'll keep checking the live chat but while i'm doing that let's see first thing we're going to take is this we're actually let's remove this console log i don't think we need the console log anymore okay we're going to move this first and then we're going to move the state okay now if you'll remember we already have drawer items in the state here so we may have to change the name which is not really a big deal so first let's take this take it out of here and let's add it in now we've already renamed it from this other component which it was based on or this other function that was based on so we should be okay so now that is there but what we need to do is pass this down as a prop so in the same way that we've done this with expand item we're going to pass it down as well to draw as expand sub item alright so now expand subitem will be available to the drawer component all right so this function will be able to call this function from the drawer component all right so that's one step we got to take another step after that but first things first let's get this state set up as well so i don't want to mess up what's going on here with drawer items like i said we can always refactor later if we find that you know hey maybe we don't need separate things so i'm gonna say drawer sub items okay now that i think about it that naming doesn't make the most sense but i think it's um um i think it'll work so for drawer sub items yeah we're not going to put anything there yet right because we're not hard coding the values so we're just going to leave that as an empty object and now let's modify what we have here because we're no longer going to be setting the state for drawer items we want to set it for drawer sub items and we have to change what's here as well draw sub items okay so that's now uh when this is called it will take drawer sub items and it will combine whatever was there with the new value for this particular item okay so so far so good i mean logic wise it seems like it makes sense okay okay great oh i know we need to pass down the drawer sub items thought i was forgetting something so let's pass down we'll just copy this so we can change it um for sub items okay so these drawer sub items save that and now let's go down to drawer so remember we now have drawer sub items and expand sub item that we're we're gonna have access to in the in drawer.js all right so it's going to be a little bit different here so let's take this is open uh how am i gonna do this i was hoping to find a way to do this oh yeah here we go so we have four uh drawer items in here which it's it's a little silly we should really just map over these but we never got around to refactoring that so did i not get all of them no all right so i'm sure chinese multiple cursors to do all this in one go instead of uh copy and pasting there we go okay so i'm gonna have a new line here and we're gonna call this expand sub item and we're going to this props so item okay so essentially we're just passing that function down another level we're not doing anything with it we're just passing it on okay and then we need to change one more thing and let's see where it is open this is open and actually how did i pass this on juror sub items okay uh so i'm going to 2 3 let's see let's take this is open and so is sub open okay once again the naming could probably use a little work here but uh what we're going to pass down is this props sub items let's make sure got everything all right looks like it okay so once again all we're doing here is just passing down everything from layout through drawer to drawer item we've done nothing to change it okay now here's where we need to to do a little bit of more work so we don't need state now in this component because our state now lives in layout but what we do have are a few more props so let's add them here so that we don't have to write this props within our component so we have is sub open and we also have expand sub item let me check my timer all right great 10 minutes i feel i think we're going good on time because i haven't messed anything up yet it feels like i'm doing a good job today okay uh so now we we need to use these in the proper place so what we're going to do let's just grab this so that we can just kind of copy exactly what's going on here so let's go into our sub menu items and within there we're mapping over the items and if a particular item has another menu within it another sub menu all right then we're rendering this particular version of it and we need this on click oops not that one wrong one trying to find the right on click expand sub item there we are okay so we're gonna expand the sub item we don't need this all right so before we were calling this directly now we don't need it we have exp should work yeah so expand sub item and then we're passing it the item text so that uh that's going to be like the item id that we saw in in the function when we moved it into layout and then we need to make sure we're grabbing the right items yeah so we we no longer can get drawer items we need to get drawer sub items is that what we're getting so we caught it i'm pretty sure we did define it well let's get rid of this as well so that doesn't live in states what did we call him again oh you know what we just said is sub open all right i think all right this is the first mess up i think i forgot i forgot something yeah so what we were doing uh let me climb back up here to the top uh so we were getting some data where are we getting the data from the data was coming in before wasn't it oh there we are okay so here's our data so let me make sure we're gonna we have the data that we need okay i think we're fine i think i just um okay yes so let's go is sub open yeah is sub open item touch all right that's what we need sorry i was freaking out for a second because i was like wait a second like how are we getting our data in here and that was fine we didn't everything's all right so instead of drawer items again we need is sub open here we are and just double checking here making sure we have everything and now this should not affect anything down here because this is only uh for items that don't have a submenu okay all right let's save it and best way to figure out if we mess it up is just to check it out so if the page renders that's a good sign and it looks like it does i'm going to give it a hard refresh just to be sure interesting okay so we we got a flash of an error i don't know what that was for also let me check my time all right three minutes in about three minutes i'm gonna go to the live chat and answer some questions okay so that was a good sign i don't know what i mean other than that weird air that flashed up if it does it again then we'll look at it uh otherwise uh i think we'll be all right so let's check out this menu all right so that part still works wonderful we didn't mess with it so that's to be expected let's see if this click works oh that works let's see if it works for two different ones wonderful all right now let's shut the drawer and open it again nice it works see and it works for two of them nice i do want to test this out if i close academics and then open it nice it's still open i want to close this shut it open it nice all right our state is like super persistent now this is the behavior that we wanted excellent excellent okay so uh does anyone know i want to ask a question before i explain why i think this happened why like seeing you all saw when we took the code we didn't really change it other than some names all we did was take the same function in the same state and then move it up to components and now the behavior is different why is the behavior different why before did those sub menus automatically gets shut when we close the side drawer and open it back up and why now are they staying open why is the state persisting now when it didn't before so let me let me know what you all think and my timer's gotta be up by now just about okay i'm just gonna go to the uh short break right now since i'm not really gonna get anything done in a minute i'm scroll up to the top of the chat and i'm gonna go down through and get to as many questions as i can uh and i'll give you all time to answer why you think the state uh didn't persist and now it does persist all right so you see a lot of what are you saying hi uh grandpa fat boy says good evening everyone uh i don't know that i've seen that name in here so welcome welcome it's a special welcome to all the newcomers in here uh let's see let's see uh nikki says sorry i missed yesterday's stream about the infinite scrolling seen how we did it in jsaf intersection of servers awesome oh you know what nikki i didn't i totally forgot about it in jsaf i'm gonna check that out because we um we didn't fully implement it so um yeah i will check that out because that's probably a better way than what i was thinking michael says you should add backup singers to your stream backup singers make everything better alright cool babe you know what my wife's always singing all the time so maybe she'll want to be a backup singer it's uh king king darrow said heresy just messing around i assume that was in response when i said we're just gonna use component state so and uh for those of you who aren't familiar with react that much there you you do see like i mean i've seen it shift back and forth but uh you would you know at one point people were saying like never use component state you always want to use redux right and that was i think like overboard like there's too much to the one way uh i think it's more balanced now i do see people saying uh and have been for a little while saying like no component state is the right way to do it if it's not too complex so anyway uh yeah it's it's perfectly acceptable to use uh supra 28 says what are you using here for theming um material ui let's see hey phoenix is here how's it going oh king darrow says uh there's also a library called unstated which looks good uh says but i like to use mob x personally cool yeah i i've i've been interested in mob x i just haven't really had a project to use it on and to learn it i haven't heard of unstated then i'll have to check that out all right so i see some of the answers about um when i was asking like how should we do this where should the state live uh so it looks like most of you most of you agreed that the state should probably live in in layout noble and savage says hubba hubba liking your new office yeah like literally uh i am just in my basement in a corner of the laundry room i have a recliner and then i just have um a table with some monitors on it i have a laptop on my lap and i hung up like um it's not even a curtain it's a um a tablecloth i hung a tablecloth from the like the rafters and uh just to give me some sort of background so so y'all can't don't see like my family walking around back there so that's my office for now it works the recliner is comfy uh phoenix says i'm about to start with react in a few days i'm overwhelmed by the examples that are available i don't know where to start twitter clone medium clone shopping app website what um you know what i would say if you're looking for projects to start with check out the free code camp projects and just do it in react so look at the very first most basic one you do and try to implement that and react even if react's probably overkill for it but the point is just to learn react and start out slow so i think what's the first one is it the first project is i think the uh tribute page so i mean that's i i've heard of people doing that uh going through free code camp projects and doing them with react so uh i would try that okay so i did not get all the way through all the questions right now oh but actually you know what let me just go through the questions because i mean really we actually got it to work it's just insane let me go through some more of these questions and then i want to see if anybody answered that last question i asked uh and and we're gonna go over that so uh i did get through most of them so there's not that much left okay so john kane recommends um react 16 the complete guide which was ten dollars on udemy so uh check that out i've never checked it out so that's not really an endorsement i'm just uh you know but john john kane thinks it's good uh john john hanson says uh jesse kindly suggested that i give react a try i had barely gone from a simple understanding of jquery to javascript at the time now i have a fairly good grasp go for it awesome john i'm i'm glad to hear that that you're getting a good grasp and uh that's really cool that that you you consider me to be the one that uh was kind of uh got you into that so really cool nikki says following along with the tutorial helped me uh andrew meades and max schwartz mueller's are both great okay cool a lot of good resources thank you carlos says max's course is awesome let's see uh andrew asks what mic i'm using uh actually so when i'm working from home i just use the builtin mic uh for a macbook pro when i'm in my office uh like at at my place of work i have like a usb mic i don't even remember the brand it was inexpensive from amazon i'm probably going to end up getting a mic for home and maybe even a camera like an external camera because i when i have the laptop on my lap it tends to shift around a bit and uh i don't want i don't want to give anybody motion sickness by the the shifting of the camera so i think it'd be better if i had just a small tripod and and a camera that was stationary i bought the tripod already it came in i got a notification from amazon so i think it's sitting outside my door right now um but i i haven't decided what camera to buy and the webcams are a bit more expensive so i want to put some thought into which one i should get okay so carlos says the state persists because they went to the parent it is yeah so going to the parent was why it persists but let's see so i want to see i'll explain why i think it what i think the like exact issue was but i want to see what you all say first uh solely says uh just man says hi just managed to join in now just came back from work uh jesse i missed your past two live vids because you started early oh okay yeah sorry about that um i've been starting at different times if i start early then uh my viewers in india and anywhere in that time zone are those couple time zones you know together uh they are better able to watch otherwise it's too late for them uh so i don't know so for right now i'm kind of switching back and forth uh so do some a little later some earlier um so sorry about that i know it's there's no time i can stream that works for everybody so right now i'm just streaming at like different times and so sometimes you know different people be able to catch it live other times you know you may just have to catch the recording uh so i just i don't really know any other way to to do it to try to be fair about it so that everybody gets a chance to watch the watch it live you know other than varying the time javascript is here says jesse what's up uh nothing much just working how you doing and it's actually it's a really nice day here finally you know it's it's uh it's been pretty cold lately so today is like 70 degrees sunny a little breeze it's really nice i mean i'm in a basement with coding but it's still cool that it's nice frankie says the recliner looks comfortable it's actually it's comfortable but it is it's really old i got this recliner from my grandfather who had used it for a while and decided he was ready to get a new one so then i got this recliner when i was in was i still in high school i think i may have still been in high school i'm 32 years old now so i was a teenager i think when i got this recliner and i had the same setup at my parents house in my bedroom where i had a recliner and multiple monitors i used them back in the day to play video games not coding and i just after i got married i took the recliner with me and just have replicated this setup everywhere that i've lived every time i moved i just take it so uh it's actually like it's pretty ripped up it's still comfortable but i mean it's i'm sure it's not nearly as comfortable it was when it was new um but it's not suitable to be in my living room but it's okay to be in my basement uh javascript says don't mix jquery and react bad idea yeah for sure it makes things difficult if you for some reason have to mix jquery and react check out project one on the playlist for live coding with jesse because we did that and we made it work i'd love to change it so that we don't need jquery um but i go at some point in that series that project one i go through and explain like why you shouldn't do it like this and then i explain if you have to do it anyway here's how we do it and we we make it work and that that site's actually still live and and doing well uh so it can be done it's not the best way to do it uh so so don't don't do it if you can avoid it but sometimes it's you can't really avoid it uh javascript says where do you work i work at franciscan university of steubenville uh it's a small catholic college um in uh like eastern ohio so i don't know how how familiar you all are with uh united states geography but there's a point where the state west virginia so the northernmost part of west virginia meets with eastern ohio and western pennsylvania and right where those meet together oh uh steubenville is like pretty much right there so steubenville is very close to pittsburgh pennsylvania so if you know where pittsburgh is on a map uh just move a little bit west of there and as soon as you cross the border into from west virginia from pennsylvania into west virginia and then into ohio that's where studentvo is but anyway it's a small school i think we only have 2 000 students and i'm a frontend developer there but it's it's nice i i'm it's only about 10 minutes from where i live uh it's it's right next to where i grew up i grew up in west virginia uh right across the ohio river from where i live now and uh so my kids get to be around their cousins and their grandparents all the time my wife's family is actually from steubenville my wife grew up in stephenville so um so i really wanted my kids to grow up around all their family so that's why we end up here so it works well works out well that i can i can work here um be able to provide for my family i know a lot of a lot of people that grew up in this area had to move away because it's not really economically doing well but uh thankful that i was able to stay here let's see i lost my place i'm trying to scroll up and find my um nikki says on the state not persisting before you put state higher did the component get unmounted that would explain it yes i i believe we have a winner there so my thought was so after we implemented this i don't know it was a couple days ago or something um i noticed that behavior and i thought oh that's no good like we can't have that behavior and and i started thinking about it and that's what i thought is oh like what's happening is right like when state lived at this level right at this level like it would save the state here but then once this drawer was hidden like that was it component on mounts state is reset and then when we open it again it starts from all over again so the reason why that didn't happen with these was because the state for these things live way up at layout and layout encompasses all of this the whole page so in layout we have this app bar the footer and the side drawer and layout doesn't unmount layout stays as is and then this content here changes so if we want any state to persist it needs to be in layout right so that's what i thought oh okay if we just move it up to layout if we move the state up to layout then it will persist because it'll never unmount so you can see now like the benefit one of the benefits of using something like redux where the state would actually be stored somewhere else that is completely unaffected by components mounting and unmounting right if if you didn't easily have access to a top level component where you could store that state let's say your component was like eight levels deep you don't want to pass that state all the way down right that's that would be ridiculous then something like redux would be super helpful because the component the child component would immediately have access then to your redux store where your state would would live in this case since we're only talking about two levels it was fine right it makes sense would we have a little bit you know less code in our components if we went with redux a little bit less but then having all that extra redux stuff there doesn't really make sense so if we were doing this kind of thing everywhere all over the place passing it down you know even further yeah then it would make sense and actually um with the latest versions of apollo which is what we're using uh to get our graphql data you can also do similar things like that like to save your state in a store so we probably wouldn't even use redux we would use the apollo version of that all right so does that make sense to everyone so good job nikki and um uh who else someone else said so carlos was on on the right track as well uh and so good job uh for catching on to that i feel like i'm teaching the class when i was when i was asking questions but i just i don't know i wanted to give you all a chance to like say it first instead of me just talking about it uh anyway so that's the reason if anybody needs an ex like a better explanation of that let me know i'll try to do a better job john kane says i recommend the razer keo webcam 100 bucks on amazon okay cool let me you know let me open that up right now so i don't forget what it is on and on another screen all right so i will check that out after the stream i'm glad you mentioned that because i hadn't heard of that before at amazon like all the webcams that come up are like logitech webcams all right i'm skipping through a bit just trying to find some questions all right so several uh several of you are saying where you're from so we have uh india switzerland um awesome virginia so blacksburg virginia very cool so you're only one well i guess two states over for me since i'm not in west virginia anymore oh javascript says you're like half a state away from me awesome um frankie says can you view the mountains from your region in west virginia um where i'm at well i mean where i grew up which is just across the river from where i'm at right now uh it's it's like hills there are big hills right they're not really like mountainous so um i would have to drive a little bit further uh into west virginia to really get into uh with the the appalachian mountains um yeah so it's not it's not that far but uh it's a little bit of a drive so i'm kind of in the foothills of uh of the mountains so there's definitely definitely some steep windy roads around here uh but not exactly mountains but the state west virginia um as a state is really beautiful um and actually like virginia is too like that whole region uh like driving through there is just i mean there's some really cool if you're into like outdoor stuff like um i don't know like white water rafting camping hiking stuff like that i mean you can't be west virginia because like so much of the the state doesn't have a high population so so much of the state is just forests and mountains and and lakes and rivers and stuff it's just like untouched wilderness basically uh so it's really it's kind of cool and it's still pretty close to a lot of major cities and airports and things so you know you get kind of like the best of both worlds that you have the wilderness generally like really low property values low taxes uh but if you really wanted to enjoy like city life it's not that far away anyway i'm not getting paid by the tourism department of any state to say that that's my honest opinion uh gabriel's uh saying hi from sao paulo brazil awesome uh so thanks for watching uh sonny asks what language this is uh javascript oh nikki already answered i should have known somebody would have answered let's see uh renato asks what my opinion is on mobx i from what i've seen of mobx i really like it it honestly seems like a uh slightly less complex version of redux so i'm not saying they're the same thing right so they both solve like the same problem but in in slightly different ways so uh i would say i ended up learning redux first because it was a part of the udacity nanodegree uh if i had just decided to learn on my own i probably would have learned mob x first because it seems like mob x is is a little bit easier to to deal with um so unfortunately i haven't worked with it directly myself so i i don't really want to say too much more about it you know because it i don't know that i could give a really good good explanation or information but if you're interested in in using mobx and you're trying to decide between redux and mobx i would if it were me i'd probably go with mob x i'd try to learn that first although for i mean me right now since i already know redux i might go with redux but if i hadn't learned redux first i'd probably go to mobx hopefully that made sense i felt like i was talking in circles for a second uh nikki says react 16.3 also has the new context api you can use for that oh that's right that's right uh thank you for bringing that up nikki i can't believe i forgot yeah so uh the latest versions of react have another way to handle state which i need to learn more about that and maybe start using that carlos says teach us jesse we want to learn and love your videos that's awesome thanks for saying that frankie says thanks uh zutek sorry if i'm mispronouncing that name i think it's utech says uh hi and greetings from poland all right awesome i have um my my wife my wife's family and my family both have ancestors uh from poland so i've never been there uh but part of my family tree originated uh in poland so that that's cool frankie says i'm the girl who wants to go off grid so i agree totally cool that was what i was talking about like the you know the mountains and stuff yeah it's um it's cool at one time i was really into like the whole like homesteading thing like raise your own you know animals and have a garden and all kind of stuff like that um so right now i actually live outside of like city limits so it's uh like at one time i did raise animals and and do the whole like i wasn't completely off the grid but that was i was like working my way up to it um and then it i don't know it got it got difficult with um trying to work fulltime and raise kids have four kids and things so it was just i kind of just let it go and we i still have a uh a garden and every you know stuff like that but i don't raise any animals anymore all right let's see trying to scroll down i my live chat window is messed up no ah i can't my live chat window got messed up and so i can't read anything let me restore it over here please work music yes alright i got it back all right sorry about that let's see uh renato says thanks for the answer says yeah malbec seems much simpler to understand at first yeah that was i mean that was my impression uh yusuf says greetings from indonesia awesome uh frankie says right i completely comprehend uh off grid all right cool um well that's the end of that's i've got to the bottom of the the chat uh the live chat and i know i said at the beginning i was gonna do two pomodoro sessions but amazingly i somehow managed to do what i wanted to do without messing up too badly and finished it in one pomodoro session which that is very very rare uh i i believe i've done for sure over 100 live streams and it i would imagine there are maybe less than 10 live streams where we accomplish everything we wanted to like in a shorter amount of time so today was a great day great way to end the week and uh thank you all so much for watching and uh for all your your advice uh in the live chat and and your help it was it was fun it was really fun stream today so uh i think i'll be back monday yeah what's going on monday i should be able to stream on monday i'll be in the office then not sure what we'll be doing then but uh probably most likely working on this same project i'm just not sure exactly what we'll do uh so and there were a lot of of new people in the stream today so i want to say again welcome thank you so much for watching hopefully you can all come back again for for another stream and uh yeah so i hope everyone has a really really awesome weekend and um so until until monday uh i guess have have a great weekend i'll see y'all later
