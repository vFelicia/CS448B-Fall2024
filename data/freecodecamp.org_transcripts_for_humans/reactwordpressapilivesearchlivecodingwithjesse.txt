With timestamps:

00:05 - hey everybody its Jessie
00:08 - sorry I couldn't stream yesterday I
00:11 - wasn't feeling good actually not really
00:13 - feeling that great today but I had to
00:16 - come in add an important meeting this
00:19 - morning that I didn't want to skip and I
00:22 - had some login info for a server that I
00:24 - needed to do some work on and I didn't
00:27 - have the login info at home I I just had
00:30 - it on my computer here so I had to come
00:31 - in so if I sound a little bit off today
00:35 - it's because I'm not feeling well I
00:37 - apologize in advance today we're going
00:45 - to do a live search feature so I've done
00:50 - this before but not with react or I
00:56 - should say I have done this on a react
00:58 - site before but I kind of just adapted
01:01 - what I had done from other sites which
01:03 - was in jQuery and I didn't really make
01:06 - it you know proper react code so today I
01:11 - want to try to do it would be in a more
01:14 - correct way within react and and not
01:18 - used to jQuery before basically I was
01:21 - adding and removing elements from the
01:24 - Dom with jQuery which is not really
01:27 - great to do and react so I don't want to
01:30 - do that
01:31 - so I'm not sure how long this will take
01:34 - or if it'll work since I haven't done it
01:36 - this way before but the basic concept is
01:39 - you have an input a text input the user
01:43 - types on what as soon as they type in a
01:47 - few letters then you send a request to
01:51 - the WordPress API searching for any any
01:56 - post of that post type that you're
01:58 - looking for which in our case would be
02:00 - the resources search for any posts that
02:02 - contains that string and then you get a
02:05 - response back and you can see the cards
02:08 - pop up as you're typing so usually I
02:12 - like to do maybe like
02:13 - once you get three characters in then it
02:16 - will refresh with maybe a timeout so
02:18 - we're not sending like a million API
02:22 - calls when someone's typing but like I
02:26 - said I've got that working on a few
02:28 - sites before but not exactly in this way
02:31 - so that's the goal and then the last
02:39 - show we were trying to get the what was
02:44 - it all the masonry layout to work so let
02:47 - me let me just show you that actually
02:52 - right I was working on this this page
02:55 - right before I started and I changed
02:57 - something in it broke the page and I'm
02:59 - just trying to look at what I changed I
03:03 - don't really know what I would have done
03:06 - it little broken the page but let me
03:13 - take out I know I added something down
03:16 - here I'll just take this whole section
03:18 - out for now I don't really think it
03:22 - would have caused any problems but I
03:25 - just want to get it working so I can
03:27 - show you
03:35 - all right so let me bring this over on
03:38 - the screen let me find a
03:49 - there we go
03:52 - all right so I can't take credit for
03:57 - this Fabian who was watching must have
04:05 - been watching on gosh what day was it
04:08 - today's Wednesday so Monday sorry
04:10 - must've been watching on Monday notice
04:13 - that I was having trouble getting this
04:14 - to work with the tabs actually submitted
04:18 - a pull request which was awesome and you
04:24 - could see some of the code for that and
04:26 - I'll show to you again what he did so
04:29 - thank you very much that saved me a lot
04:32 - of time and frustration from trying to
04:35 - figure out why I can get it to work and
04:39 - let me just show you really quick
04:41 - basically what what he had done and I
04:45 - don't know that I can even explain it
04:47 - properly since since he did he did it if
04:54 - you're watching Fabian and you want to
04:56 - explain it more in the live chat please
04:58 - feel free
05:01 - so he took let me see where we're at
05:06 - actually let me just let me show you the
05:09 - get diff because that'll make it so much
05:12 - easier for you all to see see I'm at
05:31 - I was on a different was it on a
05:35 - different branch yeah us that shouldn't
05:42 - matter so I
05:51 - alright let me make this a lot bigger so
05:54 - you can see ok so some of this stuff I
05:58 - had just taken this out so he's bringing
05:59 - this component back in if you remember
06:01 - we were using that react masonry
06:03 - component so - he's setting the state
06:13 - here basically for which tab is is
06:15 - active so the alt tab is active right
06:19 - off the bat and then you can see down
06:21 - below that'll change based on what tab
06:24 - is clicked but the and he's gotten rid
06:28 - of a lot of this stuff because I was
06:32 - failing to use masonry properly so this
06:37 - is the bulk of what was added so you can
06:46 - see the component the components are now
06:49 - here okay well it's the the template
06:52 - kind of for this component exists up
06:55 - here as a constant its variable and we
07:00 - have all the tabs here key value pairs
07:06 - and here we go okay so here's where we
07:13 - used to have this template I could show
07:17 - you here so we used to have this
07:18 - template all right here and it was just
07:20 - looping through everything once the once
07:24 - the API code was made not only that but
07:26 - we had had it four times here for each
07:29 - of our four options now we just have it
07:32 - once okay and it loops through so this
07:37 - is the the tabs so it goes through the
07:43 - tabs and
07:49 - it renders the components for that tab
07:55 - inside here without having to render all
07:59 - of them in infor here so pretty awesome
08:06 - solution actually shortened up things
08:08 - quite a bit if you could see took out
08:12 - big chunks of code so cleaned everything
08:15 - up a lot and in addition to making
08:19 - masonry work so I really appreciate that
08:21 - and this is on github if you want to
08:24 - take a look at it kind of go in more
08:25 - depth I don't want to take too much more
08:27 - time on it just because you know if if
08:30 - you read the what this stream was
08:32 - supposed to be about and you're waiting
08:34 - for me to do that you know I don't want
08:36 - to disappoint
08:37 - so really awesome thanks again Fabian
08:39 - and let's get back to to get back here
08:48 - uh one other thing Fabian did that was
08:50 - also awesome was he he pointed out if
08:54 - you remember on Monday I had some like
08:56 - static on my a month with my mic I got a
09:01 - new mic and I thought so it was wrong my
09:02 - mic and he had pointed out in the
09:04 - comments that maybe I had my phone next
09:06 - to the mic and that was causing the
09:08 - static and in fact I did have my phone
09:10 - right next to the mic and when I had
09:13 - used it earlier from home I did not have
09:15 - my phone next to it so I think that was
09:17 - the problem let me know if you hear the
09:18 - static again just in case it wasn't that
09:20 - but I'm almost positive that that was
09:23 - the issue so anyway Fabian is probably
09:25 - one of my favorite people right now it's
09:28 - since he's helped me out so much in the
09:31 - last few days I just checked the lab
09:35 - chat for the first time sorry I kind of
09:37 - forgotten about it a lot of people
09:39 - saying hi so hey everybody thanks for
09:42 - watching see a lot a lot of new people
09:45 - so really cool ok Fabian's washingto
09:48 - awesome
09:51 - let's see
09:54 - all right awesome Patrick linked the
09:58 - github page that shows what I was just
10:03 - showing you there what Fabian had done
10:04 - in case you want to check it out all
10:07 - right so let me let me go in here and
10:10 - just show you what what I was trying to
10:17 - do and I haven't really gotten that much
10:20 - done you can see like I typed the name
10:22 - for a function of where things are going
10:25 - to happen and then I had also tried to
10:28 - put in a an input and I just copy and
10:34 - pasted this from the documentation for
10:37 - materialise you can see it's even says
10:39 - first name which is not not what I want
10:41 - I want it to be searched and I was just
10:46 - trying to change it so that it would be
10:47 - valid in react so I did you use like
10:51 - class name and HTML for instead of just
10:54 - four and I don't I don't remember if I
10:58 - have to change
11:00 - oops there we go I knew there was there
11:02 - had to be something else that I was
11:03 - missing and actually that I don't even
11:09 - need this class so I'm going to get rid
11:11 - of that
11:17 - all right for some reason when I had
11:20 - pasted this in at first it caused the
11:24 - page to break so that's why I just
11:26 - pulled it out so I can show you what was
11:27 - going on but now actually let me give my
11:35 - page up here alright so that is not
11:42 - broken now not the best looking thing
11:46 - but I'm not worried about style right
11:47 - now all I'm worried about is we have
11:50 - somewhere where I can put input into
11:52 - okay awesome first step completed I
11:56 - think I'm going to make this make this
12:00 - bigger first of all so you can see and
12:04 - it might be easier as we whoops as we go
12:10 - they're going to make that maybe half
12:13 - the page and that way you can see the
12:20 - changes as we're making them on the site
12:32 - okay that'll work let me know if I need
12:38 - to increase the font size even more
12:54 - all right sorry I just got I just got a
12:57 - message from a co-worker I just want to
12:59 - make sure it wasn't some emergency
13:14 - okay it's a it's a minor problem I can
13:16 - check it out after the stream all right
13:22 - so let's now that we have that working I
13:25 - want to add I've never actually tried to
13:30 - do this particular thing in react so if
13:35 - anyone watching has done this and I'm
13:37 - messing this up let me know but I was I
13:39 - was checking out briefly beforehand how
13:43 - to handle like key press events and
13:46 - react so I think I can just use like on
14:01 - on key up I was trying to figure out
14:08 - what how exactly it supposed to be typed
14:11 - in terms of case so I'm guessing it's
14:15 - something like that
14:22 - okay Rob had a question a live chat is
14:24 - is there a link to the first stream for
14:28 - this so that the entire like so the
14:31 - first one where I actually started to
14:32 - work on this site is on my channel and
14:35 - it's called I think it's called building
14:38 - a website as fast as I can because that
14:41 - way that was the original goal and then
14:46 - we got some extra time and now since the
14:48 - site's launched we have even more time
14:49 - to add extra features ok so I'm just
14:57 - going to try to call what did we call
15:00 - this is it this these console I know
15:09 - there are better ways to test but the
15:11 - console log is just it's just so nice
15:17 - and familiar and it it shows up in the
15:20 - console well on the video so ok so what
15:29 - I want to see happen is
15:42 - great that should be it
15:46 - broke wouldn't Anki up is not oh yeah
15:49 - shoot that's not what I called it I
15:51 - called it search get search results
15:56 - there we go
16:00 - alright not I don't know what that was
16:06 - about maybe I did something and it broke
16:09 - so what we want to do I want to inspect
16:13 - this so I can see what's going on here
16:16 - that's that's Texas definitely big
16:18 - enough mmm that's not really what we
16:27 - wanted it did say it did say key up
16:31 - quite a few times but that's not not
16:34 - what I wanted here
16:40 - hmm I'm gonna let me clear this just to
16:46 - make sure okay yeah it's definitely not
16:52 - working the way I wanted it to refresh
16:57 - and see what we're getting it once maybe
17:02 - I'm using the wrong the wrong syntax I'm
17:06 - gonna go I'm just gonna check it out
17:11 - maybe I have to case it wrong maybe it
17:14 - needs to be I'm just going to try this
17:17 - quick because if this is this the
17:19 - problem and that should solve it very
17:21 - quickly now all right okay so it is
17:35 - supposed to be that case let me refresh
17:38 - again is to see now definitely not not
17:47 - working all right let's see what's going
17:54 - on in
18:02 - okay this is the input I don't want this
18:06 - placeholder to either let me get rid of
18:09 - that while I'm in here okay so that's
18:16 - what I'm what I'm saying so Sebastian a
18:18 - live chats and it is on key up
18:24 - I'm calling am I missing
18:29 - I mean I'm not crazy here right this is
18:31 - normally how we call how we call a
18:34 - function and make sure get search
18:39 - results console doc right yeah that's
18:43 - that should work
18:47 - yep for some reason all I'm getting here
18:51 - is a key up it's constantly key up once
18:58 - when i refresh the page and then it's
19:02 - not working after that all right so let
19:07 - me go to the documentation or Stack
19:13 - Overflow oh okay
19:32 - thank you for that and sorry it took so
19:35 - long there's like a delay probably like
19:37 - a minute or so so Anton thank you
19:40 - Anton said don't invoke the function so
19:42 - I figured it was something with that it
19:46 - just didn't look right to me but I I
19:48 - just couldn't figure out exactly what it
19:51 - was and that was it
19:54 - alright so let's check this out now oops
19:57 - smooth this over Kia yes okay so nice
20:06 - that's exactly what we wanted
20:08 - okay so I mean that was kind of the easy
20:10 - part
20:11 - I knew that that was possible I just
20:13 - hadn't actually done a non-key up in
20:16 - react before so just needed to get well
20:22 - I just needed to know the capitalization
20:23 - here and this invoking the function was
20:26 - just a dull mistake on my part okay so
20:30 - now we need to do is within here we need
20:38 - to fetch the data from the wordpress API
20:42 - and not just any data it has to be it
20:47 - has to take the value of this input or
20:51 - this input is it takes to take the value
20:52 - of this input and then search for that
20:57 - then it has to base what I wanted to do
21:01 - is render cards based on that search
21:09 - into here and then also the same cards
21:16 - would be rendered you know when you
21:18 - click on these it wouldn't it wouldn't
21:21 - be all the audio anymore it would simply
21:24 - be veal category or the the resources in
21:30 - the audio category that matched that
21:33 - search so maybe I should
21:41 - let me put this in whoops I'm gonna put
21:50 - this in here sometimes it's helpful at
21:56 - least for me to kind of just put in
21:59 - plain you know English what I want to
22:03 - accomplish so I don't forget because I
22:05 - have it in my head right now but once I
22:07 - get into it I might skip a step so step
22:11 - one would be get input get input value
22:18 - and nope and step two is make API call
22:35 - based on value and then we want to
22:45 - render cards from okay so that's it
22:55 - basically we can break that down into
22:57 - three steps that's what we need to do
23:09 - all right I just checked the the
23:12 - analytics for this we had like almost a
23:15 - hundred viewers right off the bat and
23:17 - then it dropped down an hour at like
23:18 - just below 60 so guess I guess I lost a
23:24 - lot of people this is about where is
23:30 - kind of back up to normal we were a
23:32 - little bit low on Monday but I didn't
23:36 - realize that Apple's all that stuff was
23:39 - going on so that might explain it all
23:44 - right so first we need to get that value
23:46 - on key up so where is it at I keep
23:53 - losing the the input you make this a bit
23:59 - bigger well there we go
24:01 - okay so usually input give an idea of
24:03 - search okay so I'm just going to do this
24:13 - I don't know if there's a better way to
24:16 - do this in react but I'm just going to
24:18 - go get Boop's documents the good
24:23 - elements addy and we want the search
24:32 - element and I think it's just value
24:39 - we'll see um
24:44 - let's see what that does and let's say
24:48 - this let's search time equal ennui we
24:59 - may as well bring back our console log
25:05 - oops okay so basically I'm going to
25:12 - narrate a little bit I know some of you
25:14 - in here are way past you missed and our
25:18 - answers Patrick just said I'm sorry
25:28 - Patrick I'm not sure what you are
25:29 - referring to oh I missed an R and search
25:35 - haha alright awesome that's one of the
25:41 - really great things about live streaming
25:43 - is you know normally when when you code
25:45 - you make little mistakes like that you
25:47 - don't realize it and then you try to run
25:49 - the code and you know depending on what
25:51 - you're trying to do sometimes it takes a
25:53 - while to figure out what the mistake was
25:54 - but in this case you know right now I
25:57 - have you know 64 people watching me do
25:59 - this so somebody is going to catch my
26:02 - mistakes early enough so that it doesn't
26:05 - really mess things up so thanks Patrick
26:07 - I appreciate that um you know my ID did
26:14 - I also mess up get element by ID oh you
26:22 - were just telling me that was where it
26:23 - was in okay awesome uh sorry if you're
26:28 - watching this recording later I'll try
26:29 - to do my best to let you know what is
26:31 - being said in the live chat but
26:32 - occasionally I do just respond and I
26:34 - forget about that so try to try to watch
26:39 - it live if you can next time but I I
26:42 - know not everybody can because of the
26:44 - time zone difference
26:46 - I was I was about to say something and I
26:49 - got distracted oh I wanted to say I'm
26:52 - going to narrate this and kind of
26:53 - explain what I'm doing in a little bit
26:55 - more depth because I know that
26:56 - there are some people that are beyond me
26:58 - that watch this and they help me a lot
27:00 - but there are some people who are just
27:01 - beginning and I want to make sure that
27:04 - they understand as much as possible
27:05 - what's going on so for instance like
27:09 - Taylor and the live chat said just
27:12 - learning to code so not it doesn't
27:14 - really know a lot of the stuff that's
27:16 - going on so I'm going to do that so
27:20 - sorry if this is really basic for you
27:22 - but anyway uh this let is just it's just
27:28 - like a variable but this is kind of a
27:30 - new or a JavaScript way to do this so
27:33 - there are some advantages to using let
27:35 - instead of just ver which you would
27:37 - normally use not really going to go into
27:40 - that right now
27:42 - but in general most of the times we use
27:45 - very you could use let and it'll work
27:47 - just fine it does not work in older
27:51 - browsers though so you have to be
27:52 - careful about that and you have to
27:54 - transpile the code so anyway this is
27:57 - just the vanilla JavaScript way to get
28:00 - an element on the page by ID so that
28:03 - that input tag that we had down here I'm
28:05 - not going to scroll down to right now we
28:07 - gave it an ID of search so now we're
28:10 - just getting that and what I want to get
28:13 - is the value from that so I want to get
28:14 - whatever the user typed in and I'm just
28:17 - going to console.log this just to see to
28:20 - make sure that we're getting what the
28:23 - correct value and that I've set this up
28:27 - right at this point is pretty basic so
28:29 - it should work so I'm going to save that
28:31 - in case I haven't already and let's get
28:36 - our console ready and whoa you know I
28:43 - use a function did I spell that Oh
28:48 - should it not be should not be D or
28:52 - should it be no it is right it is Eddie
28:55 - what am i doing
28:59 - two equal documented I'm sure somebody's
29:05 - going to tell me in that in the live
29:07 - chat what's wrong because it's probably
29:09 - some silly mistake
29:22 - man if I have to look up get element by
29:24 - ID I'm going to be going to be
29:27 - embarrassed by that is it a lowercase T
29:33 - okay get up I don't know what's up with
29:35 - my it probably just autocorrected
29:39 - because I had spelled it wrong to begin
29:41 - with so that's what kind of threw me
29:46 - whenever the when I went to go change it
29:50 - in it autocorrected right back alright
29:57 - thanks for that was in the process of my
29:59 - other screen I'm just looking it up I
30:01 - mean that's how it goes you know you
30:02 - can't have all the syntax memorized
30:05 - although that one I use pretty often so
30:07 - that that surprised me that could
30:09 - remember that but you can see this is
30:11 - working just like we want it to work so
30:15 - every time we change it we get that
30:18 - that's actually cool effect I like that
30:22 - it looks cool alright so step one is
30:27 - completed let's see make now we need to
30:37 - make an API call okay so here's what I
30:40 - know how to do an API call with fetch on
30:44 - the client-side but here's what I'm
30:46 - wondering about I am importing fetch
30:50 - here somewhere here where am i important
30:54 - is do not need to import it
31:03 - I thought I had to import isomorphic
31:05 - fetch it's imperative I just couldn't
31:08 - find it okay so I'm importing this
31:10 - Eiffel isomorphic fetch and then I'm
31:14 - using it here and get initial props but
31:16 - this runs server-side ok so that's why
31:19 - I'm using that's the term isomorphic
31:21 - means it runs on the server or on the
31:24 - client
31:24 - this runs server-side but it also runs
31:26 - client-side like when we do our
31:28 - client-side routing and we go between
31:30 - pages this this will also run that's why
31:34 - you know we still have the data on the
31:36 - pages I mean I know there's caching and
31:38 - serviceworker and things but even if we
31:39 - didn't have all that this was still
31:41 - running we'd still get data I would just
31:43 - run in the client side but I'm I don't
31:46 - want to use this outside of this get
31:51 - initial props function because next j/s
31:53 - which is what we're using you know we're
31:56 - running react with that I think they do
31:58 - some things behind the scenes to know
32:01 - whenever to use this you know how to use
32:03 - this on the server and the client I'm
32:05 - afraid if I put this down here and try
32:08 - to run on the client I'm not going to
32:10 - get the right results so what I'm going
32:16 - to do is I'm just going to try to use
32:18 - fetch normally how I would use it on the
32:21 - on the client side even if I wasn't
32:24 - using react and I'm going to see how
32:26 - that works if anybody has has any input
32:32 - on that idea let me know but that's
32:34 - that's the next step that's what I'm
32:35 - going to try to do here uh let me
32:42 - actually let me copy and paste
32:44 - cuz that's always faster so I have I
32:49 - thought I had it up already let me show
32:51 - you funny maybe I had it up why did I
32:55 - have this up this is a previous here we
32:58 - go this is a project I had done earlier
33:04 - a few months ago and so anyway so I had
33:09 - this that I already made so I figured
33:10 - why not reuse that so let's see
33:16 - I don't need this
33:36 - okay alright so basically what it's
33:40 - going to do is I'm going to call I can
33:43 - copy like some of this stuff
33:52 - I am going to change this we're going to
33:55 - leave resources but we're basically
33:58 - going to leave this but I need to add in
34:00 - that search parameter I don't really
34:03 - need to add it right now because I need
34:05 - to test just to make sure that I can
34:06 - call so I'm not going to complicate it
34:09 - by adding in a search which I could mess
34:12 - that up
34:14 - bet it better to just do one change at a
34:16 - time and then at least in testan at
34:18 - least you know it least easier to find
34:22 - out what went wrong
34:22 - so basically when I call get JSON said
34:30 - how it goes yeah so when I call get JSON
34:37 - all right I'm going to pass it a URL
34:39 - which is going to be the combination of
34:41 - these two so let's just do that now in
34:47 - JSON and tough to write this I don't
34:55 - know if I've to write this when I'm when
34:56 - I'm up here but I'm gonna do it anyway
34:58 - if you didn't already know you're
35:01 - joining for the first time I don't claim
35:04 - to be an expert on any of this
35:05 - especially react because I've only done
35:06 - a few projects with react so if it seems
35:10 - like at times I'm just kind of winging
35:11 - it it's because I am I'm learning on the
35:13 - go but that's how the show is about just
35:17 - watching me and my normal job and I
35:20 - think normally with developers a lot of
35:23 - what you do is just learning on the go
35:24 - at least that's been my experience so I
35:27 - hope that you all learn something from
35:30 - this but I actually learned a lot from
35:32 - you as well as a kind of struggle
35:34 - through this so if you're expecting like
35:38 - a very detailed and thought-out tutorial
35:41 - or something that's not what you're
35:42 - going to get in these videos which those
35:45 - videos are awesome but I'm not really
35:47 - knowledgeable enough about this to be
35:49 - the person to do a video like that at
35:53 - least not yet maybe one day I'll be
35:54 - knowledgeable enough
36:03 - okay and I am I'm like I'm tempted to
36:14 - just console love this whole thing this
36:19 - whole day so they why not I kind of want
36:21 - to see what that will look like actually
36:23 - I need to probably save this but I could
36:40 - actually probably use constant here
36:41 - right I'm not going to change it right
36:43 - now but just just for I mentioned before
36:47 - what let was you can also use this
36:49 - instead of air and it's constant this is
36:51 - like if you have something you want to
36:53 - be immutable like you don't want it to
36:54 - change a variable that won't change you
36:57 - don't want it to be allowed to change
36:58 - later on within that same scope you use
37:02 - Const and I had used let it let is like
37:05 - my default go-to because it usually
37:07 - works for everything but now that I'm
37:08 - looking at this this isn't going to be
37:11 - changed within you know it's gonna every
37:14 - time this is called this will be changed
37:18 - but you know it's not like going to be
37:21 - changed down here within the same
37:22 - function call so I probably could just
37:25 - use Const for this and I'm just going to
37:31 - do it for consistency since I'm already
37:33 - using it and now I'm going to make this
37:41 - do I want to call this data in here
37:43 - we're calling this data on state a for
37:52 - now maybe I shouldn't we just call it WP
37:58 - data for WordPress data and also if
38:03 - you're joining in you're wondering about
38:05 - the WordPress API part I'll show you
38:08 - what gets returned from the API and
38:10 - I think in the last video I did I did go
38:14 - into a little bit how I set up the API
38:17 - some of the custom things I was doing so
38:20 - if you're a little lost on that you can
38:22 - check out the last video I may do like a
38:26 - full video on on the WordPress API at
38:28 - some point if there's enough interest in
38:30 - it all right so this set up I think we
38:36 - have this note missing one thing
38:41 - all right let's see okay in the live
38:48 - chat I mean I haven't checked a lot yet
38:50 - in a while so I'm going to just check it
38:52 - here just just for a minute see if
38:53 - there's any questions all Sebastian try
39:01 - to react on a project with with next to
39:05 - jQuery scaling you okay uh KEB KEB Ian I
39:17 - think I'm not sure how to pronounce that
39:18 - but cabbie in 6020 says I think you can
39:21 - use a weight just fine even the client
39:24 - side since the next auto compiles es 7
39:28 - es 5 that's good to know if this doesn't
39:30 - work off a problem with this I will
39:33 - definitely go back and switch to that
39:34 - also
39:36 - I might just switch to it at some point
39:40 - if I have time just I think it would
39:43 - look better if I was using it in the
39:45 - same way you know on the same you know
39:48 - the same component
40:00 - and cabbie and says I use constant Ida
40:04 - fault
40:04 - and use let only to denote I'm going to
40:07 - change it okay that's actually
40:08 - interesting I never thought about it
40:11 - that way so I had just mentioned that my
40:13 - default is usually let and then I only
40:16 - use cost when I think I need it but he's
40:21 - still in the opposite that's honestly
40:23 - probably a safer way to code it is to
40:25 - use Const by default and then that way
40:27 - there's less chance of you accidentally
40:30 - changing changing cost Oh Kevin also
40:39 - says you can change the properties of a
40:41 - constant object and even at new ones you
40:42 - just can't replace the whole object with
40:44 - another thing an mentions that WP date
40:51 - is a promise you have to either a weight
40:54 - or a thin on it good good call I thank
40:59 - you for pointing that out
41:00 - and you know what I actually did do that
41:04 - was it here I am doing that here what is
41:10 - this one searches at some point and I'm
41:17 - just going to look at this this is how I
41:19 - implemented the same search thing with
41:22 - some extra features and things with
41:24 - jQuery stuff so if you want to look at
41:28 - it I just want to check one thing out
41:31 - here
41:46 - um okay yeah I did do that here um I
41:51 - just want to double check how I handled
41:53 - that here and what I did inside you okay
41:57 - [Music]
41:59 - this is like I don't know there's so
42:04 - much here that like obviously I have
42:07 - these two dudes left in here and
42:08 - different things but it definitely works
42:10 - and I did exactly what I wanted it to do
42:13 - I wish I would have had time to refactor
42:16 - this though I look back on it now and
42:17 - I'm like yeah it works but it's kind of
42:19 - a mess just don't always have the time
42:23 - before I have to launch to get all those
42:27 - things in order
42:32 - all right then okay where we at
42:43 - all right so let's take this out for now
42:48 - so I'm do get you some more if you from
42:52 - and then I can just chain it with a then
43:00 - right let me see how I did this here
43:08 - well guys name the date of this I guess
43:10 - I can and now I can
43:28 - okay now I'm going to console.log the
43:32 - data there just for now I mean obviously
43:36 - we're going to do other stuff with it
43:38 - later on thanks thanks for catching that
43:44 - so you normally I test a bunch of times
43:47 - and then troubleshoot but now I like I
43:49 - can't even can't even hit save fast
43:51 - enough before you all catch my mistake
43:53 - so thanks for that I'm sure it is
43:56 - speeding speeding things up for me all
43:59 - right let's see what's going on where's
44:02 - my console there we go all right so
44:06 - let's see I'm a little bit not really
44:09 - sure about how I did fetch here yeah and
44:13 - it looks like Oh something was happening
44:19 - cannot really probably get JSON of no
44:27 - hmm
44:47 - well that's interesting
44:58 - okay Patrick says console dir console
45:03 - about table will be better
45:04 - actually that's new for me I've never
45:06 - heard of console table I've never used
45:09 - it
45:10 - I'm going to use that as I've never seen
45:15 - that that's cool and what did I do
45:17 - maybe is it because I use this and I
45:21 - need to was that with that I'm trying to
45:26 - read this error message cannot get
45:28 - property get JSON of null okay let's see
45:48 - okay then why oh I wonder if this got
45:55 - messed up since I'm in here and I have
45:57 - to I do this before
46:09 - okay relaunches get JSON you Oh
46:22 - maybe this get inside geez
46:26 - oh good call cabin you are just like on
46:35 - point today with catching these things
46:37 - so I I had copied and pasted these two
46:40 - functions and and didn't modify them at
46:43 - all but it makes sense like if I have to
46:45 - call normally you have to call this
46:48 - interact component if you're going to
46:50 - call these functions so I didn't do that
46:54 - because I'm calling this gate function
46:56 - inside this get JSON so that may be the
47:01 - issue okay so it should be this yes all
47:06 - right that might fix it let's try it out
47:09 - and Fabian also said this was the other
47:13 - thing that I was worried about it's it's
47:15 - not mine this isn't binded to the class
47:19 - so so this in this case is not referring
47:23 - to like like when I called this down
47:26 - here it's not referring to the same this
47:31 - so I used to buying how should I bind
47:37 - this I know there's something that you
47:39 - can use an arrow function and it binds
47:42 - it does something with binding I don't
47:46 - use arrow functions often enough to
47:47 - remember what exactly happens with the
47:50 - binding is anybody know Romo Maddie
47:55 - right when I was saying this he puts a
47:57 - an arrow function and he said change get
48:02 - search results to an arrow function for
48:04 - Autobahn so awesome okay and with syntax
48:09 - that's it
48:14 - I'm no good at remembering syntax and
48:18 - this is something I use constantly so
48:20 - I'm like always always having to look it
48:23 - up I don't know if is it like that for
48:25 - any of you
48:26 - you just frequently have to look up
48:29 - syntax stuff and for that there we go
48:38 - and it happens like at least for me it's
48:42 - so easy to lose to lose it like let's
48:46 - say if I like one on vacation I didn't
48:48 - do any coding for a week it feels a
48:50 - little bit weird getting back into it
48:52 - like things that you used to type
48:53 - constantly now you have to think about
48:55 - again I don't know I thought that
49:00 - happened happen to me
49:02 - certainly and since I'm using this here
49:05 - I should probably bind that as well
49:07 - right let's try it on huh oops no I did
49:14 - it wrong didn't construct that's ugly
49:19 - guess what what did I do that was wrong
49:22 - here
49:22 - Oh obviously right
49:31 - you
49:34 - all right
49:40 - I should probably explain arrow
49:42 - functions for the people that are kind
49:44 - of new let me test this first just to
49:46 - see if I did it right yes
49:48 - okay awesome and actually uh thanks
49:53 - Patrick for letting me know about this
49:55 - wow this is a lot for letting me know
49:57 - about the console table instead of
50:02 - console.log look at that that looks
50:04 - really nice that's so much easier to
50:06 - read than what you would normally get
50:08 - I mean you normally get like this thing
50:10 - with you'd have to keep opening it up it
50:12 - would be nested so very nice I don't
50:18 - alright so normally it would look like
50:20 - this actually you wouldn't get in a
50:22 - table format great and in fact we are
50:28 - getting the data that we want awesome so
50:34 - step two is almost finished okay because
50:38 - we are getting the data that we want
50:40 - this is all working properly but we
50:43 - actually want to do a search based on
50:46 - what was typed in that's why like I was
50:49 - getting a bunch of data for everything
50:51 - even though I just typed in a string of
50:53 - nonsense I shouldn't have gotten results
50:54 - for that right so I'm going to I'm going
50:59 - to go back to here to get because this
51:05 - will probably the easiest way for me to
51:06 - find how I did the search
51:16 - wait a sec now that wasn't it it was in
51:20 - this one okay so here's the search URL
51:28 - okay so basically all I have to do is in
51:33 - this case I was actually using multiple
51:37 - post type so I'm going to do I'm going
51:40 - to need to do this pretty soon so maybe
51:43 - tomorrow or something I'll do a video
51:44 - and highlight this this is really cool
51:47 - what lets you get multiple post types
51:48 - obviously just like it says within
51:53 - within this one call so in this case I
51:57 - wanted to search basically nearly
51:59 - everything on the site I don't want to
52:01 - do that here so I'm not going to do all
52:03 - that but so it'd be cool to point that
52:06 - out so I'm going to take this and put
52:15 - that in right here okay so we want to
52:25 - put the search term here
52:35 - and I'm going to use template literal
52:41 - syntax and accidie so let me let me do a
52:43 - little little e^x six lesson here not
52:47 - that I know what I'm talking about too
52:49 - much with this but I do use these so
52:51 - arrow functions this is like shorthand
52:54 - way to do functions sometimes you can
52:57 - see like you know I did have the the
53:01 - parentheses over here like in a normal
53:03 - function and I add URL in there but now
53:06 - I moved it out here and you have this
53:12 - little this what's called arrow function
53:13 - you have this little thing here okay um
53:18 - this works differently inside arrow
53:20 - functions I'm not going to get too deep
53:22 - into it because I'm not confident that I
53:23 - could explain this without messing
53:25 - something up but I don't want to mislead
53:26 - you so you know check out arrow
53:30 - functions but basically within react I
53:33 - usually use arrow functions like in this
53:36 - case to make sure that this means what I
53:39 - want it to mean I see arrow function
53:43 - used in a lot of other ways
53:45 - so there's definitely you know other
53:47 - reason to use them even possibly just to
53:50 - make the code a bit more concise and
53:54 - then down here I use template literal
53:56 - syntax and I know I've talked about this
53:58 - before in my live streams but if you've
54:01 - never seen me seen this dream or heard
54:03 - me talk about it
54:05 - these were just like a single or double
54:09 - quotes so anything in here is a string
54:12 - but if you want to use JavaScript inside
54:15 - here either a variable or any other part
54:18 - of JavaScript that you want to use you
54:21 - put a dollar sign and a curly bracket
54:23 - whatever your JavaScript is in here and
54:26 - then you end it with another curly
54:28 - bracket and now you're back into string
54:30 - mode so where's normally you would have
54:32 - to do something like this where you
54:35 - would put your your JavaScript and then
54:38 - you would do this and you'd finish out
54:41 - your string right this is not that bad
54:45 - but imagine if I was going to put in a
54:47 - lot of different variables
54:48 - here it could get super long really fast
54:50 - so this is nice the other nice thing you
54:53 - can do is I can do this and put that in
54:58 - there and that that's okay
55:01 - right that that'll work I can actually
55:04 - put I've used these template literals to
55:07 - actually do like HTML templates before
55:09 - and I've had a huge chunk of HTML here
55:11 - with variables in there and used it
55:15 - basically insights that I've kind of
55:17 - done try to do like single page app
55:20 - style sites but using jQuery so I don't
55:24 - try to do that anymore because it kind
55:25 - of gets a mess after a while and if it
55:27 - gets complex but if you have something
55:28 - simple it's definitely doable and
55:31 - template literals makes it way more
55:33 - doable than normal at least that was my
55:36 - experience with it all right let me I'm
55:44 - gonna check the live stream really quick
55:47 - Umberto's says what is this vacation I
55:51 - immensely what on vacation
55:53 - I actually am going to go on vacation
55:55 - the week after next so I don't know if
55:57 - I'll be able to do streams from vacation
55:58 - my wife probably will not want me to to
56:02 - do any streams but I don't know if the
56:05 - Internet is fast enough maybe I doubt it
56:08 - fast enough though and let me see I have
56:13 - a few other comments here
56:24 - okay Burma Maddox says wait how is this
56:27 - geturl working when it isn't bound to
56:30 - the class like the other methods had to
56:32 - be I don't know I'm not easy uh it it
56:42 - works obviously it works so I'm not
56:45 - going to question it right now let's get
56:48 - it all working and we'll say maybe if
56:52 - anybody else you know wants to take a
56:55 - crack at answering that question go
56:57 - ahead
56:58 - [Music]
57:00 - Shane asked how far should you be
57:03 - through the front end cert program
57:04 - through free code camps run insert
57:07 - program before you try learning react
57:10 - and Patrick says learn plenty of
57:12 - JavaScript first yes I would agree
57:16 - JavaScript um react is I mean it's
57:20 - JavaScript heavy like you know
57:22 - everything is within JavaScript right
57:24 - this is all so yeah so definitely
57:27 - JavaScript uh it's a big help
57:33 - I'm I'm not really a good example I
57:36 - never got through the front end program
57:39 - in pre code camp before I started doing
57:43 - react stuff and now I mean that was
57:46 - basically like I just got really busy
57:48 - with work and had to I mean I had to do
57:52 - things for clients you know I needed
57:53 - things to work so I kind of just didn't
57:56 - have that much time anymore
57:57 - and I wasn't at one point I was really
58:00 - disciplined and I spent an hour at least
58:02 - an hour every day doing some type of
58:05 - training and then I got busy and I
58:08 - wouldn't wasn't disciplined about it so
58:10 - I just kind of moved on I I really do
58:13 - want to finish everything in the free
58:15 - code camp curriculum at some point I
58:17 - just need to I just need to put my foot
58:21 - down and say like all right first thing
58:23 - in the morning you know I'm going to do
58:24 - this I'm going to take an hour and I'm
58:26 - not going to check my email or anything
58:27 - like that and get distracted so it'll
58:29 - happen one day I guess but so it's
58:31 - possible to do this stuff without
58:33 - getting through the front end
58:34 - certification it will definitely be easy
58:37 - year for you if you get through I know
58:40 - my react there are parts of react that
58:43 - are still a struggle for me but when I
58:45 - first started working with it it was it
58:47 - was super hard for me to understand what
58:50 - was going on okay so now that we're
58:57 - going to have this search term going
58:59 - here let's just test it up so I'm going
59:02 - to save that and what we should get now
59:05 - is we should get our results back and
59:08 - we'll see them we'll see our results but
59:11 - they will only be the results that we
59:14 - get for searching so we'll try let's see
59:20 - the we'll just type in some nonsense
59:22 - again let me clear this because that's a
59:24 - lot so actually that's weird how did I
59:31 - get that from that nonsense hmm
59:40 - that should not have happened like that
59:42 - I should have gotten should have gotten
59:46 - some nonsense okay so this might
59:50 - actually be useful to people who haven't
59:52 - seen this yet to actually see what the
59:54 - result is in the browser and this will
59:58 - also be useful to me to make sure that
59:59 - what I'm doing is actually the right way
60:04 - to do it so search and I don't know okay
60:18 - that that returned nothing which is what
60:21 - it should have returned but let me check
60:22 - let me just do something like the okay
60:26 - awesome
60:27 - so that is actually working the way we
60:30 - want it to if you can see like this is
60:33 - what we get back from the wordpress api
60:35 - it's a JSON format and i'm specifying
60:39 - what i want so i said i only want the
60:41 - title and I only want advanced custom
60:44 - fields normally you'd get a lot more
60:46 - data than this but I don't need that
60:49 - data so I don't I don't want to I don't
60:52 - want to send back okay so we get the
60:53 - title and then these are custom fields
60:55 - that I've created and I've used the
60:57 - plug-in advanced custom fields to do
60:59 - that and another plug-in to actually
61:00 - expose the fields to the API or through
61:06 - the API so that's working so we know
61:10 - that this is working I'm not exactly
61:12 - sure why it wasn't working search what
61:21 - wasn't working before let's try it again
61:23 - let me do a hard refresh and try this
61:28 - again occasionally when I'm the next
61:32 - comes with hot module reloading so you
61:34 - don't like it just refreshes and you
61:36 - don't have to like you hit save and
61:39 - stuff changes on the page right you
61:40 - don't have to refresh but occasionally I
61:42 - find that sometimes I change something
61:44 - here and it doesn't exactly work right
61:49 - away I have to do
61:50 - reload so I'm not sure why that happens
61:53 - but sometimes you will have to do that
61:55 - alright I want to try let's see okay
62:04 - cool so I'm not getting anything there
62:06 - which is what we want there we go
62:09 - but now we have that so nothing put a
62:13 - foot type in word okay so that's really
62:17 - cool so if you see if it's if it's
62:19 - nonsense you know obviously we're not
62:21 - getting anything back and we are getting
62:23 - something back if it's a real word so
62:29 - great so that part is working just like
62:32 - we wanted to the only other thing that
62:36 - I'd like to do with this is I I'd like
62:41 - to do two things to slow this down one I
62:43 - don't want it to work with just one or
62:46 - two one or two characters I mean there's
62:53 - not really any meaningful words that are
62:55 - only two characters long so you wouldn't
62:58 - need to search for it like you wouldn't
62:59 - need to search for of or is or you know
63:01 - there's not going to be character like
63:03 - that so I want to make it so that it
63:04 - only works if you have at least three I
63:07 - also want to make it so that I think
63:12 - there ought to be maybe some delay so
63:16 - that you know people didn't wouldn't
63:18 - just let's say I just hold it in this
63:19 - key actually I can't hold it in that's
63:23 - interesting I don't know what's doing
63:25 - that but let's say I just want to
63:26 - impress this really fast like this just
63:28 - made a bunch of calls I don't want that
63:31 - to happen I don't want to make all these
63:33 - calls to the API over and over again
63:37 - so I do want there to be some sort of
63:41 - timeout I don't want it to be too long
63:43 - because then it'll seem like it's not
63:45 - responsive to the user and somebody
63:48 - typing fast you know maybe it will take
63:51 - a second before it before it happens so
63:54 - I might have to play with the timing of
63:56 - that to see what's what's reasonable in
64:00 - terms of you know like how many
64:01 - milliseconds
64:02 - I wait before I let it happen again but
64:07 - basically step two is is complete aside
64:12 - from that little bit of fine-tuning that
64:13 - I can always do later they're not that's
64:17 - not really essential to this working
64:18 - those are just things that will help
64:20 - prevent you know too many calls being
64:23 - made the site actually is not getting
64:26 - very much traffic now so I'm not worried
64:27 - about like anything crashing or slowing
64:30 - down a lot
64:32 - I checked the analytics yesterday and it
64:37 - looked weird so it basically looked like
64:39 - a spike in traffic a spike a spike a
64:42 - spike a spike right and I was like why
64:47 - is there spikes in traffic and then I
64:49 - looked at the time of each spike guess
64:52 - what time of day each spike was for this
64:57 - for this site for the live version of
64:59 - this site let's see I'm going to give
65:03 - you a few minutes to to guess what what
65:07 - time what would be happening at some
65:08 - point in the day where I would get huge
65:10 - spikes in traffic on that site
65:15 - well while you think about that for a
65:17 - second I'm going to catch up on the live
65:18 - chat bromo Matic says I finished the
65:24 - entire front insert before touching
65:25 - react it was a good experience getting
65:28 - used to doing everything in the Dom with
65:30 - jQuery slash JavaScript before relying
65:32 - on frameworks I agree with that
65:36 - like I like I said before I didn't do it
65:39 - that way and I think it was harder for
65:41 - me because I didn't do it that way and I
65:44 - I still want to go back and finish it
65:46 - and I think it'll help even now having
65:48 - worked with react I think it still will
65:50 - help me grow mimetic also says maybe
65:58 - it's changed but I don't think it's
66:01 - changed yet but the data visualization
66:04 - course was when you started doing
66:05 - projects and react for the free code
66:07 - camp I think you're right I know there's
66:10 - the beta version of free code camp
66:12 - that's not it's not out yet so the order
66:15 - might be
66:16 - different there I haven't looked at the
66:17 - beta stuff for a long time so I don't
66:21 - know where it's at now I can't remember
66:24 - where it was that last time I looked at
66:26 - it John asks how come use fetch instead
66:34 - of AK cos or jQuery for Ajax calls and
66:37 - Patrick answers fetch is the newer
66:40 - replacement that is 100% correct
66:42 - yeah fetch is newer the only reason you
66:45 - wouldn't use fetching in my opinion
66:47 - fetches the easiest out of any other way
66:49 - I've ever used to make to make calls
66:52 - like that it's it's just so much shorter
66:56 - to do and you know it returns promises
67:02 - that are easy to work with so I
67:07 - recommend using FETs the only reason you
67:08 - wouldn't use fetch is if for some reason
67:10 - you had to support an older browser and
67:12 - you you couldn't use the polyfill so
67:15 - normally like you would you would have a
67:16 - polyfill that you would use to make
67:19 - fetch work on older browsers and
67:20 - actually I need to double check because
67:24 - since I use this version of fetch
67:27 - instead of this I may have to include a
67:30 - polyfill somewhere since this is all
67:33 - just on the client off to see I don't
67:35 - know what this will actually get turned
67:37 - into by next so maybe I won't maybe I
67:40 - will have to check that maybe it would
67:42 - be better just to use this yeah so I
67:49 - didn't think about that before I'll have
67:50 - to keep that in mind and make sure I
67:51 - test this on a browser where I know
67:53 - fetch doesn't work and make sure that it
67:54 - works
68:07 - all right so Sebastian says 2:00 p.m.
68:10 - stream time right that is the answer to
68:13 - the question so in Rowan says it was us
68:15 - yeah so it turns out that most of the
68:20 - traffic to this site at this point I
68:22 - mean it's it just launched Desmond been
68:24 - live and it hasn't been advertised quite
68:26 - as much as it could have but the
68:28 - majority of the traffic to the site at
68:30 - this point is from you all when I'm
68:33 - live-streaming you go to the site and
68:35 - you check it out and that's the traffic
68:37 - so that the site's really been getting
68:39 - low traffic so my original point was
68:41 - simply I'm not that worried about too
68:43 - many calls messing up the site because
68:45 - there's not a lot of traffic right now
68:47 - okay but at some point if it gets a lot
68:51 - more traffic that will be an issue so
68:53 - I'd rather just kind of deal with it now
68:55 - or at least at some point you know
68:58 - within maybe this week or next week deal
69:00 - with it and not have to worry about it
69:02 - later if you remember last week we added
69:05 - load balancing but that was only for the
69:08 - react part of the site remember the site
69:10 - has two parts there's the react part
69:12 - which exists on one server and then the
69:15 - WordPress part exists on another server
69:17 - there's only one WordPress server so
69:22 - even though there's to react sites on
69:26 - two different servers that we're
69:27 - balancing the load between all the calls
69:30 - the API calls still go back to one
69:32 - WordPress so that's a point where it
69:34 - could slow things down so I do want to
69:37 - make sure that we're doing everything we
69:39 - can to speed that up and there's some
69:42 - caching and things that are that are
69:44 - going to happen there's already some
69:46 - caching in place with the react site and
69:49 - there's some caching that I'm going to
69:51 - put in place on WordPress once we get
69:53 - the content filled out a bit and that
69:56 - should take the load down but when it
69:59 - comes to the searches these are usually
70:01 - unique you know they're probably going
70:03 - to be some terms that are frequently
70:04 - searched but you know as I'm typing in
70:07 - and I type in like a partial word it's
70:09 - like you know nobody's going to search
70:11 - for that normal
70:12 - right so that's not going to be cash
70:15 - odds are no one search for that before
70:18 - it's not going to be cash so it's not
70:19 - really going to help with caching so if
70:21 - there's anything that's going to slow
70:22 - this down at the level of WordPress it's
70:25 - going to be the search at least that's
70:30 - what I think if anyone else has any
70:32 - insight into that let me know but that's
70:36 - that's kind of the only place that I
70:39 - know of at this point that could really
70:41 - really slow it down all right
70:53 - okay roll and says fetch is just better
70:55 - than xhr anything this or late last year
70:58 - has fetched yet I I agree definitely
71:01 - with her on fetches fetches way easier
71:04 - to use
71:06 - Campion says isomorphic fest requires
71:09 - note fetch in the server and a fetch
71:11 - polyfill on the client so I'm wondering
71:17 - if next takes care of that polyfill
71:22 - already because we're using isomorphic
71:25 - fetch will that then take care of it I
71:28 - shouldn't really worry about it because
71:30 - I can I can test it very easily when I
71:33 - need to by looking at batted an older
71:36 - browser so I'm not going to worry about
71:37 - it right now
71:37 - I'm not going to put this live before I
71:39 - test it and I'm definitely going to test
71:41 - it in some older browsers just to
71:44 - double-check that so not going to worry
71:46 - about it right now just know that that
71:48 - is an issue if you are using fetch
71:51 - depending on what you're using it may or
71:55 - may not work in every browser so in this
71:59 - case it could be that next automatically
72:01 - puts that polyfill in and it does work
72:03 - but if you are building this site with
72:06 - something else or just kind of a static
72:09 - site you would need to include the
72:12 - polyfill on your own I have included on
72:15 - some of my other projects so if you
72:16 - check out my github page let me think if
72:21 - there's a project actually I don't know
72:23 - I think they might be private repos so I
72:26 - don't know if I can think of a project
72:28 - that I've done recently where I use the
72:30 - polyfill for fetch and it's not private
72:32 - I will let you know or maybe put the
72:35 - link in the description or something but
72:37 - it's not that hard to do just I'm you
72:41 - know you can look up fetch polyfill or
72:42 - something like that it's pretty easy to
72:44 - add to your project I don't want to
72:50 - dismiss it and say it's easy I know
72:51 - people say that a lot and I don't want
72:54 - anybody to feel bad if it's not easy for
72:55 - you it's easy if you're used to doing
72:57 - things like that if you've never done
72:59 - anything like that before then of course
73:01 - it's it's not easy
73:02 - you know it wouldn't be easy for me the
73:04 - first time I did it so I don't want to I
73:07 - don't want to make it seem like it's
73:09 - it's really like anybody should be able
73:13 - to do it right away because that's
73:16 - certainly not the case all right
73:20 - [Music]
73:22 - Burton asks is this sublime it is Adam
73:27 - and Hertz on Sebastian answered says
73:31 - Adam art son says looks cool but takes
73:34 - ages to start yeah you're correct but
73:37 - you know how I get around that problem
73:39 - I never close it or shut off my computer
73:43 - so here's here's a tip here's the number
73:47 - one lesson for today if you want Adam to
73:51 - perform better never close it because
73:53 - once it's open it's not bad
73:56 - um I am joking a little bit with that
73:59 - one but it is true that I rarely ever
74:02 - close it so I don't notice the slowness
74:05 - of it because I'm never really starting
74:07 - it okay let's go on right now we need to
74:12 - render the cards okay so that's the last
74:14 - thing and okay not bad the streams been
74:21 - how long is the stream with one all
74:24 - right an hour in 15 minutes you see the
74:26 - assignment is okay we still have alright
74:31 - we still 44 viewers I say we should go
74:34 - for it I was thinking about just ending
74:37 - it and doing this tomorrow but I say we
74:39 - go for we still have a decent amount of
74:41 - viewers so if you hear me just randomly
74:49 - laughs it's probably something in the
74:51 - live chat so I'm not insane especially
74:55 - if you're watching this later on it's
74:56 - just it they were in the live chat
75:01 - some people were commenting on my my
75:03 - solution to make Adam faster or to at
75:06 - least make it seem faster to me alright
75:10 - so this step I'm not gonna lie this step
75:13 - was what worried me the most
75:15 - I was pretty sure that I'd be able to
75:17 - figure these out easily and these went
75:20 - really really well really fast not too
75:25 - many issues the only issues and get
75:27 - needs to work will really like either
75:28 - misspellings or syntax errors on my part
75:32 - so rendering it to the cards I'm going
75:39 - to think out loud for a minute here to
75:40 - see if we can you know let you know what
75:43 - I'm thinking so you could give me some
75:45 - some of your ideas and also just to make
75:48 - it clear in my head so alright so we
75:51 - have the data here
75:53 - okay so within this this then okay we
75:59 - need to do something with the data to
76:02 - get it to hear right to render to to
76:08 - fill out all of this stuff right now
76:12 - this is getting in by this props data
76:15 - you know filter now what I'm thinking
76:21 - right off the bat and this certainly
76:23 - wouldn't be it's never good encoding to
76:26 - repeat yourself if you don't have to
76:28 - right um right they said what is it they
76:33 - call it dry dry coding do not repeat
76:36 - right so anyway what I'm thinking right
76:40 - off the bat is hey I could just like
76:42 - copy this and instead of using this
76:46 - props data I could use like whatever
76:50 - variable I save this to right and then
76:57 - somehow somehow we render okay so you
77:03 - see maybe if you're good with react
77:06 - you're probably wondering what the heck
77:07 - I'm I'm thinking maybe it's obvious to
77:10 - you but for me somehow the jump from the
77:13 - jump from this data to filling this out
77:17 - and so like completely removing
77:19 - everything is here and then filling it
77:23 - out again with other stuff that's the
77:24 - jump that I'm having trouble thinking
77:26 - about right now so normally a
77:28 - this point I would just start trying
77:30 - things and seeing what works and what
77:32 - breaks and I would get there but since I
77:35 - have all of you here watching as well
77:37 - I'm going to check I'm just going to
77:42 - give it just a few seconds here just
77:46 - because the delay to see if anybody has
77:48 - any better ideas about this before I
77:51 - start just messing with things Oh in the
77:59 - live chat mark recommends checking out
78:01 - Visual Studio code I actually use that
78:03 - as well so nice alright Fabien comes
78:09 - through I was I was hoping that you were
78:11 - still watching Fabien since since you
78:14 - essentially wrote you know a lot of this
78:17 - page with deal with that pull request
78:21 - request that I emerged in yesterday I
78:25 - was hoping that you would have some
78:27 - insight into that so save the date of
78:32 - the state it will trigger new run oh yes
78:35 - now that you say that it makes so much
78:38 - sense and this is this a good example of
78:42 - like I wanted to really do this the
78:43 - react way I certainly could have used
78:46 - something like jQuery or even just
78:48 - vanilla JavaScript to totally clear this
78:50 - out and then add it but that's not
78:52 - really what I want to do with react
78:54 - because then react will lose track of
78:56 - the Dom it react keeps a like a virtual
79:01 - Dom where it has like a copy with a cut
79:06 - do they call it the shadow Dom am i
79:08 - confusing terms here anyway I can't
79:09 - remember but anyway there's basically a
79:10 - copy of the Dom that react keeps and it
79:16 - needs to be able to keep track and keep
79:18 - that in sync and if you start changing
79:20 - things outside of react like in a
79:24 - separate JavaScript file with jQuery or
79:26 - something then they get out of sync okay
79:29 - so then you won't really be taking
79:31 - advantage of all the the goodness that
79:32 - react has so anyway thank you Fabian
79:39 - once again
79:43 - okay John says it is virtual Dom okay so
79:46 - I knew I've heard the term virtual DOM
79:47 - and shadow Dom and for a minute I just
79:49 - got it got it mixed up so what's what's
79:52 - shadow Dom go with what am I thinking of
79:56 - now I can't remember where I've heard
79:58 - that before
80:00 - all right I guess it doesn't really
80:02 - matter for what we're doing right now so
80:04 - um so we need to save
80:20 - let me see we're saving this this stay
80:40 - actually to tell you the truth I'm
80:42 - looking at this and I'm still not sure
80:51 - I'm still not 100% sure what I need to
80:55 - do here because I'm pulling this data
80:57 - and now is prop so it's going to props
80:59 - when this anything in here when I return
81:02 - data goes to props but if I want to save
81:04 - the state when I need to pull it from
81:06 - like this state data or am I just
81:09 - missing something here let me know
81:25 - all right we have some some references
81:28 - to the movie Mad Max in the live chat
81:32 - [Music]
81:36 - that's funny in Orleans the shadow Dom
81:43 - is for custom elements custom elements
81:46 - mostly
82:15 - okay bye so Fabian uh is saying in a
82:21 - live chat yeah you state data instead of
82:24 - perhaps data
82:43 - well Jonathan and the lab chat also says
82:46 - sublime
82:47 - so it's referring to the editor sublime
82:50 - we actually had I don't know how many
82:52 - live streams that we've had a similar
82:54 - conversation and it always does come up
82:57 - the consensus is Adam load slowly
83:01 - sublime is good and try visual studio
83:03 - code occasionally we get some other ones
83:06 - thrown in there but that seems to always
83:07 - be the be consensus here if florian says
83:16 - you could use a higher-order component -
83:20 - Florian I like that suggestion I don't
83:25 - know enough about higher-order
83:26 - components to be confident doing that
83:28 - though so if if anybody's wondering
83:32 - about what a good way to do this would
83:34 - be you could try out higher-order
83:35 - component if you know more about that
83:38 - but I want to learn more about it I just
83:40 - don't know it now so that will be a
83:44 - little bit beyond me at the point the
83:50 - state
83:53 - all right so let's see all right so
83:57 - Florian saying or I'm sorry Fabian is
84:00 - saying and knit the state with props
84:03 - data on component did mount Oh awesome
84:07 - great okay so basically here's what
84:09 - here's we're going to do I'm going to
84:10 - explain this out loud for everybody
84:12 - watching but also so that I can verify
84:15 - that I understand what Fabian saying you
84:17 - can let me know so basically right now
84:19 - the get initial props you know just by
84:23 - default anything that you return from
84:25 - this is going to be set to props
84:29 - obviously right that's what it is
84:32 - getting actual props right so that's why
84:33 - down here I'm going this props data
84:36 - right I'm getting this data but what
84:39 - we're going to do is on component did
84:42 - mount we're going to set this this data
84:48 - so this props right and this props data
84:52 - and we're going to set that to the state
84:55 - so then when we come down here instead
84:58 - of saying this props data we say this
84:59 - state data and it will be the same thing
85:02 - but that gives us then the ability to
85:05 - change the state in here and then once
85:08 - there's a change in state there it'll
85:11 - automatically rerender all of this okay
85:15 - so if that's not Fabian if that's not
85:18 - what you had in mind let me know but I
85:21 - think that's think that's what you're
85:23 - trying to describe to me here and that
85:26 - makes sense to me
85:30 - Florian also says a higher-order
85:32 - component is just a function which takes
85:34 - a component as an argument and returns
85:36 - another component and rhoann says google
85:41 - dev resources has some good web
85:42 - components and custom element stuff and
85:44 - angular works well okay so Berlin still
85:46 - talking about shadow DOM
85:48 - okay so Fabian says the way I just
85:50 - described it it seems right
85:53 - Florian actually that's it that's a
85:55 - really like nice simple explanation of a
85:57 - higher-order component I think I am
86:00 - going to check into those as soon as I
86:01 - get a chance I'm not going to check into
86:03 - it now
86:04 - the stream because we're just so close
86:06 - to getting this to work but thank you
86:10 - for explaining that and I'm definitely
86:14 - going to check it out also if you have
86:18 - time and you would like to you're
86:20 - certainly welcome to submit a pull
86:23 - request to this repo with which you had
86:27 - in mind with that too and in anybody
86:30 - watching certainly you can if you'd like
86:32 - to contribute that would be awesome but
86:36 - otherwise I definitely do want to learn
86:38 - more about higher order components on
86:40 - how to use them because I've seen other
86:42 - people do some useful things with them
86:44 - so all right so now where my component
86:49 - did mounts okay so this actually now
87:02 - when I'm inside component did mount is
87:04 - this going to mean what it should mean
87:06 - or do any day use an arrow function here
87:09 - too
87:42 - [Music]
87:48 - this doesn't exactly look right to me uh
87:51 - I'm gonna try but let me let me know I
87:54 - don't think I did this right
87:56 - so oh I need to change it down here too
87:59 - and let's see actually this is an
88:06 - awesome way to do it I'll tell you one a
88:08 - second okay so I'm going state here
88:12 - right and down here though this
88:18 - corresponds to this section here I don't
88:20 - ever want this section to change even on
88:22 - search right so this section will be
88:26 - populated by props which is great and
88:29 - then props will never change but the
88:34 - state will change and when the state
88:36 - changes it'll change all this stuff down
88:38 - here but it will leave these alone so I
88:41 - did think earlier when I was thinking
88:44 - about this I thought I gotta have some
88:46 - way to make sure that these don't change
88:48 - and whoops didn't mean it like that
88:52 - so that that will work that that'll
88:57 - ensure that those stay the same but then
89:01 - everything else changes
89:09 - yeah thanks baby and I knew I was doing
89:11 - that wrong so Fabian gave me the the
89:19 - correct syntax for that so thank I knew
89:24 - enough to know it wasn't right but I
89:25 - didn't know enough to know the right way
89:28 - to do it actually this kind of thing is
89:34 - one of the reasons I was afraid to do
89:35 - live streams at first because I don't
89:38 - know how it seems to you but to me it
89:40 - seems like it's really obvious what I
89:43 - don't know and I was always nervous that
89:46 - like everybody's going to see what a
89:48 - newb I am but it's actually not that bad
89:51 - I mean you are very helpful and nobody
89:55 - is harassing me about being a noob and
89:57 - I'm learning a lot of stuff and you know
90:01 - these are things that I probably could
90:03 - have spent time looking up and that
90:05 - would have been fine that's a legit way
90:06 - to do it but it would have taken me a
90:09 - lot of time and I may have tried a lot
90:11 - of other things and given up or tried
90:14 - you know so I really it is really
90:19 - beneficial even though I'm fully aware
90:22 - that I probably look like a noob right
90:23 - now alright so we've set it on component
90:27 - amount next step is we need to update
90:29 - the state that's it this set state all
90:32 - right I totally remember using this at
90:34 - some point in the past now that I see it
90:36 - okay now we need to update the state
90:40 - here with this data so I think Fabian
90:44 - told me how to do it as well okay to
90:48 - update the state you have to call set
90:50 - state so let's just say this props it
90:58 - okay so now I need to do let's get rid
91:02 - of console.log so you need to do this
91:08 - State and I'm assuming it's the same I
91:16 - should just copy this while I'm not
91:18 - trying to type this I'm assuming it's
91:20 - the same syntax officer oh I'll find out
91:23 - a second when I save this or if I'm
91:27 - corrected in the live chat and data this
91:31 - props dead now I don't want to diss
91:32 - props data I want it to be data I'm
91:38 - assuming this is not shoot I should
91:40 - change this right well will this mess it
91:46 - up but I'm using the same thing it
91:48 - doesn't matter I was originally gonna
91:49 - call this WP data anyway no to the beat
91:56 - so I'll just go with that and then avoid
92:00 - any potential for combat that actually
92:06 - just makes it easier to read anyway so I
92:10 - just double checking and
92:19 - Oh actually oh nice
92:24 - so Fabian and Florian both just let me
92:27 - know I can just remove the I can remove
92:34 - this this set state and actually since
92:43 - I'm going to do that I might as well
92:44 - just switch it back because now it'll no
92:46 - longer be confusing at least to me it
92:51 - was a little bit confusing this later on
92:55 - or somebody else reading this I would
92:57 - think that would be slightly confusing
92:58 - if they weren't familiar with what I'd
93:02 - already done alright so and they did
93:05 - mention this is a es6 feature that this
93:09 - just works to set this so like normally
93:13 - like this is actually what we're doing
93:14 - we're setting you know within this
93:16 - object we're setting data to this props
93:18 - data so that's what's happening it's as
93:20 - if I just wrote data data right but I
93:23 - don't have to and I assume that's
93:26 - basically similar to what just happened
93:28 - here as well that this goes to props you
93:34 - know data data okay let me save it and
93:46 - what I do this is T Oh
93:51 - shoot I never did I said I said I was
93:54 - going to probably have to do it and then
93:56 - I never did it I'm assuming that that
93:58 - error is because of this so I need to
94:01 - use the arrow function if you didn't run
94:03 - around when we talked about this before
94:04 - this arrow function make sure that when
94:09 - I use this here it means what I want it
94:12 - to mean okay so basically it means the
94:15 - same thing is when I call this within
94:17 - the render function it's referring to
94:20 - this as in like this this whole
94:23 - component correct me if I'm wrong with
94:26 - that but that's why we use the arrow
94:28 - function in that case maybe it didn't
94:32 - work maybe that wasn't the issue I
94:39 - should think
94:45 - unless you restart the server I think I
94:48 - froze my local server not still give me
94:57 - the error okay what do I done oh okay
95:08 - Ally says bind it within then that makes
95:22 - sense all right so I'm trying to use
95:24 - this within then so I should use that
95:32 - there as well all in Florida Florian I
95:40 - said the same thing and giving me the
95:43 - syntax
95:44 - I like that syntax that's going to look
95:47 - a lot cleaner too so let's see
95:56 - let me get rid of all this stuff and
96:01 - instead put this in here great okay so
96:04 - we see we have then data right so we
96:08 - have that whereas before I should have
96:12 - left the other one up so I could compare
96:13 - between the two but basically what would
96:16 - normally go in the the function like in
96:20 - the brackets where we have the function
96:22 - just goes here we have this arrow the
96:25 - arrow function here and now we're just
96:27 - doing this set state data and now this
96:30 - will mean what we want it to mean
96:33 - hopefully hopefully it'll work I just do
96:39 - okay I'm still getting this up here
96:42 - though let me just let me take a better
96:46 - look at this and see component in mom do
96:54 - I need to hmm
97:12 - okay let me I'm looking at this you all
97:16 - can see this - sure so basically I know
97:19 - that this was probably too small let me
97:21 - blow up this error so you can see what
97:22 - I'm saying wow that's too big no okay
97:24 - so unexpected character here why am I
97:30 - getting an unexpected character
97:48 - you
97:55 - this is 37 yeah 37 for
98:09 - okay this is going to seem weird but I'm
98:13 - just going to do this uh the only reason
98:16 - I'm doing this just to see like maybe
98:18 - something here is messing this up I I
98:21 - don't think it would be but that's why
98:23 - I'm just flipping this to the top just
98:24 - to see if I get the same error okay so
98:32 - I'm still getting an unexpected
98:34 - character but now it's this time it's
98:36 - online
98:50 - okay so now I'm getting a not read
98:56 - property filter undefined 155 all right
99:03 - let's check this up
99:13 - hmm
99:22 - way too soon
99:36 - oh okay alright so basically this is
99:42 - what's happening
99:44 - well not fabian has pointed out in the
99:47 - live chat that this is what's happening
99:48 - so i don't want to take credit for
99:49 - figuring this out basically like it
99:53 - showed this line here that it was
99:55 - showing was like right where we're
99:57 - trying to have the tabs i'm not going to
100:01 - go back down but basically like the tabs
100:03 - that we're going across the page that we
100:04 - we could click so i'm going to do with
100:06 - that so fabian saying now you also need
100:12 - to in its state like that state equals
100:16 - active tab all data because the first
100:18 - render might bug if state data is not
100:21 - defined
100:21 - okay so let's find where we add these
100:26 - [Music]
100:32 - so if active state
100:43 - equals active to all data
101:00 - all right yes at the top okay
101:04 - let's just double checking before I put
101:06 - it in there so uh here then let's see
101:11 - state equals I'm just gonna copy so I'm
101:19 - assuming here shoot
101:29 - let me know if I put this in the right
101:30 - spot this doesn't look right again I'm
101:39 - pretty sure I didn't put that baby in
101:42 - says lol no alright so I so I knew that
101:47 - wasn't right um my pudding at this point
101:56 - Fabian is like um I feel like he's my
102:00 - coach here okay so I'm scrolling baby's
102:05 - selling me scroll up so when I when he
102:08 - said at the top I thought he meant like
102:09 - at the top of this render function and
102:11 - then I pasted there and obviously that
102:13 - wasn't the right spot so now I'm going
102:16 - scrolling up more let's see
102:29 - yes statisticians
102:52 - before okay that's what I was waiting
102:54 - Sebastian says before get initial props
102:56 - oh I see it now I see it thanks
103:02 - Sebastian
103:14 - okay so now I'm pretty sure what I have
103:19 - to do is add it in here oops not like
103:24 - that
103:25 - [Music]
103:33 - need to add it here so basically the
103:37 - only thing that's that's added so we
103:38 - already had this and then we're adding
103:41 - data all right okay that makes that
103:47 - makes so much sense now um sorry sorry
103:51 - about that taking so long that process
103:54 - so yeah obviously this makes sense okay
103:57 - so our state's an object we were you
104:02 - know we need this data so we already had
104:04 - active tab set right down here we were
104:07 - setting data to actually have the value
104:10 - okay but Fabian saying we might get a
104:14 - bug if we don't have a state data
104:19 - defined beforehand that makes a lot of
104:25 - sense let's save it
104:35 - okay and there's some discussion going
104:37 - on a live chat about constructors and
104:40 - es7 and initializing state and I'm not
104:52 - I'm gonna I'm gonna wait and see what
104:54 - the conclusion is to that discussion if
104:56 - it happens before I before I read out
104:59 - what's going on um all right let me
105:03 - check what happened here whoa that's
105:11 - crazy what the heck just somehow anyway
105:18 - I don't I accidentally just assumed that
105:21 - into 200 I don't oh I know a zoomed in
105:25 - and whenever we had the error and then I
105:27 - didn't dream it back out so anyway so
105:31 - that page loaded and we're not getting
105:37 - these are like the normal errors that I
105:40 - always get when I'm on the dev server so
105:42 - I'm not worried about that and now let's
105:44 - check great okay so that should give us
105:48 - nothing that was kind of an abrupt
105:51 - change there I mean just from like a
105:54 - style design standpoint like I I don't
105:56 - like that that changed and then I went
105:59 - like that so I don't know maybe I'll
106:00 - have to think of something else to put
106:03 - there but let's let's see like I'm gonna
106:08 - I'm just going to type in this woman's
106:10 - last name because that will probably be
106:11 - unique and we'll see like that this is
106:13 - just going to give us this there we go
106:18 - so it actually gave us that before I
106:20 - didn't have to take the whole name in
106:21 - but you can see that's really fast that
106:26 - search happens so fast and that's I mean
106:29 - that request has to go to WordPress and
106:34 - be processed
106:37 - you know WordPress is based on PHP you
106:40 - know it has a database so I mean that
106:42 - all has to to be processed and come back
106:45 - and it just happens very fast
106:48 - I mean this is not I'm not getting this
106:50 - data from something on my local machine
106:52 - this is actually going right to the
106:55 - WordPress install that's on digital
106:57 - ocean and back so I don't I don't know
107:00 - about you but I'm just impressed with
107:01 - the speed of this search and when I've
107:03 - done this before like I've never done in
107:05 - react but I've done it with jQuery
107:07 - before and I have had you know clients
107:10 - and other people I worked with have been
107:11 - really impressed with that speed so if
107:14 - you're using the WordPress API I
107:17 - definitely recommend doing something
107:19 - like this because like I set up clients
107:23 - have always been impressed with first of
107:26 - all the fact that it Auto searches when
107:28 - you're typing in right I mean yeah
107:30 - Google search does that but people
107:33 - expect Google to have impressive things
107:35 - because they're huge company with lots
107:36 - of money and employees and a lot of
107:38 - talented people but you know when a
107:42 - small business or something when you do
107:44 - a site for them and now they see that
107:46 - they have a similar kind of thing happen
107:48 - they're very impressed with that they
107:49 - like that at least that's been my
107:51 - experience so they're impressed that it
107:53 - Auto searches and they're impressed with
107:55 - how fast the search comes up one of my
107:57 - to do's I don't know if you caught it
107:59 - but when I showed you my original code
108:01 - that I done with jQuery you know a long
108:03 - time ago I had a bunch of to do is one
108:05 - of the two do's was to add some sort of
108:07 - loader so that when people are waiting
108:10 - it just it shows this little loader the
108:13 - reason I never put it in is because no
108:15 - one ever had to wait for longer than you
108:18 - know basically it always loaded in such
108:22 - a short amount of time the loader would
108:24 - only appear for a split second and it
108:26 - wouldn't it wouldn't even matter so
108:29 - before I kind of stopped this I do want
108:32 - to give credit here so I know we
108:34 - basically completely redid this and
108:37 - react but since I showed you this
108:39 - initial code that I had done this is
108:42 - where I got it from so if I do get some
108:47 - code from somewhere I always want to
108:48 - make sure that I I give credit even if I
108:52 - don't really have to based on the
108:53 - license I still like to but this is
108:57 - where I got it so github calm so it's
108:59 - bearded Avenger
109:00 - on github so I've never talked to this
109:04 - person or contacted them or anything and
109:06 - this was this code originally was was
109:09 - for the WordPress API version 1 which I
109:12 - never used version 1 because I didn't
109:14 - start using the API until version 2 had
109:16 - it had just come out when I started
109:19 - using it so I did have to change this to
109:22 - work with version 2 but the basic idea
109:25 - of this live search came from here so if
109:31 - you did want to do something like this
109:34 - on a site that was you know let's say
109:36 - based on jQuery and wasn't react you
109:38 - know then check out that code but it
109:41 - will need to be adapted from version 1
109:43 - I don't know last time I checked I think
109:48 - there were some pull requests for people
109:49 - trying to adapt it as well but I don't
109:51 - know that this is maintained so I don't
109:53 - think any of those pull requests ever
109:54 - got accepted so I was thinking about
109:57 - doing a pull request as well but I don't
109:59 - think they're updating it so it probably
110:01 - wouldn't be they probably would never
110:04 - get merged in so so basically that works
110:10 - with like I said there were some
110:13 - optimizations I wanted to do I wanted to
110:15 - slow it down a little so it didn't make
110:18 - API requests for every single key up
110:23 - event like if they are coming really
110:25 - really quickly so with the exception of
110:28 - that which would simply you know I would
110:32 - just need like a set timeout on the like
110:37 - here where we have yet search results
110:39 - you know we would just need a set
110:41 - timeout and that's I mean that said it
110:45 - wouldn't be much more than that and I
110:47 - would also need something in here too
110:49 - like let's say check every time the key
110:52 - up went up it would check the value and
110:54 - if the length of the value was greater
110:57 - than 2 it would search otherwise it
111:01 - would do nothing so basically the whole
111:05 - thing would be in an if statement that
111:07 - would check for that and then it would
111:10 - also have a set timeout that would be
111:13 - I don't know some some amount of
111:15 - milliseconds that I would have to mess
111:17 - with so other than that it's pretty much
111:19 - done I did mention I saw like the change
111:23 - was pretty abrupt when you have nothing
111:24 - so it has like this job I just don't
111:28 - like that jump so maybe I'll just have
111:31 - it might be something as simple as just
111:33 - setting a minimum height for this
111:35 - section so that I don't have such a
111:37 - drastic drop here that'll probably fix
111:41 - it that'll be a really simple fix I
111:43 - don't think I need anything fancy for
111:45 - this actually let me just try that out
111:50 - right now in the inspector so for for
111:52 - everybody who's more front-end like kind
111:55 - of basics oriented maybe this will be
111:58 - something simple for you all and as soon
112:02 - as I do this I'm going to go back to the
112:04 - live chat I'm going to check and see if
112:05 - there's any questions and I'm going to
112:07 - answer the questions and also share
112:10 - anything that's maybe some really
112:13 - valuable advice on the live chat that I
112:14 - haven't shared already so if you're just
112:17 - here for the live the live search
112:22 - portion of this I mean that's pretty
112:25 - much done we've done everything we
112:26 - needed to so if you got to go thanks for
112:29 - watching I'm on you know Monday through
112:33 - Friday 2:00 p.m. Eastern Time
112:34 - almost always occasionally I have a
112:37 - meeting or something happens and I can't
112:39 - stream but you know joint join me again
112:43 - I'll be doing all kinds of different
112:45 - stuff for the site and for other sites
112:47 - in the future if you have a little bit
112:49 - of time to stick around for some
112:51 - questions or anything go ahead and throw
112:52 - your questions in the live chat now and
112:54 - then I'll get to as soon as I'm done
112:55 - with this if you can't stick around you
112:58 - have a question put it in the comments
113:00 - below or you can direct message me on
113:02 - Twitter the link to my Twitter is in the
113:05 - description for this video all right so
113:09 - this is yeah this is the section let's
113:13 - go with a min height of 500 pixels mmm
113:21 - actually it's got more let me do like
113:25 - 700 pixels oops what did I do here and
113:37 - now it's not even ice it's not letting
113:44 - me edit that which is weird what are you
113:50 - doing to me dev tools I'm going to
113:52 - refresh because I can't edit that ok
113:59 - alright so min height and the skill is
114:04 - 700 pixels ok because I'm okay with that
114:09 - because the section is always going to
114:10 - be like normally really big it's only
114:13 - going to get smaller if I type in
114:14 - nonsense hmm I don't know that I like
114:19 - I'm I don't think I like that still let
114:22 - me try that again
114:25 - that's better
114:27 - ok that that's definitely better than it
114:28 - was I'm not sure that I want this to go
114:31 - down though so what I have here is this
114:34 - is now this is via line so I'm going to
114:41 - take out that class and this I'm using
114:43 - materializes the framework and they have
114:47 - this vertical line class is going to set
114:49 - up already
114:50 - and maybe I'll have to you have to take
114:57 - this out as well see if that does it
115:03 - there we go ok so that did it so
115:06 - assuming this doesn't change anything
115:09 - else that's better that's what I wanted
115:13 - okay so you see the transition I don't
115:15 - know if you saw it or if it bugged you
115:16 - all as much as above me but before the
115:21 - transition was much more abrupt the
115:22 - footer actually came all the way up here
115:24 - ok and now it still looks the same
115:27 - normally as it did but then we change it
115:31 - the footer actually you know you see it
115:33 - a little bit but it's not a huge jump
115:35 - you can see we have
115:38 - this still stays at the top I might
115:40 - actually remove this in the background
115:43 - I'm not sure if I like it for a big
115:45 - section like that I didn't notice it
115:47 - before behind all these cards it was
115:49 - kind of down here I don't know I'll
115:52 - think about it
115:53 - I think about it for that section
115:56 - it doesn't look terrible when you have a
115:58 - lot of cards but you don't have any
116:00 - cards is more noticeable and yeah I
116:05 - don't know about it also not sure about
116:08 - this having a white background I might
116:11 - like it better if it didn't say I mean
116:13 - those are some really like little CSS
116:16 - changes like some design changes so I'm
116:18 - not going to bother with those right now
116:21 - make you wait around for that but I am
116:26 - I'm definitely going to put this keep
116:29 - this min height in for the section and
116:32 - take out those two things there's two
116:34 - classes that I did all right so now let
116:37 - me go to the live chat I'm going to
116:39 - scroll through I don't think I'm going
116:40 - to go all the way to the top because I
116:42 - did do a good job of checking back in
116:43 - I'm going to go about to the middle of
116:45 - where the live chat is now and just see
116:48 - if I've missed anything who also I will
116:54 - I do have to double check that this
116:57 - fetch works in older browsers and so
117:02 - there might be some adjustments made as
117:04 - soon as that this goes I haven't pushed
117:07 - this to github yet but as soon as it's
117:10 - on github you'll be able to see the code
117:12 - and then you'll be able to check back in
117:14 - you know maybe tomorrow next week and
117:16 - see if I did have to edit it if I do
117:18 - have to edit it and change it in any way
117:20 - like if I test it and it doesn't work on
117:22 - some others I'll let you know and one of
117:24 - the streams but I'm thinking this should
117:28 - work basically without any changes
117:41 - okay Taylor Miller says I really
117:44 - appreciate your stream everyone has
117:46 - things they don't know or others may be
117:49 - no better ways of doing things thanks
117:51 - for streaming and sharing your thoughts
117:52 - / process with us oh you're welcome and
117:57 - thanks for that comment I really
117:59 - appreciate that comments like that they
118:03 - let me know that what I'm doing as value
118:06 - and I should keep doing it so I know I
118:08 - said this before but I'll keep doing
118:11 - these videos as long as as my boss keeps
118:15 - letting me do them which he's he's happy
118:19 - with with me doing them now so that's
118:21 - probably not going to change and as long
118:23 - as I think people find value in them so
118:27 - if you do find value in this you know
118:30 - let me know and I'll keep doing
118:49 - okay so scrolling down through making
118:51 - sure I didn't miss anyone's questions
119:10 - okay Florian says do you use debounce or
119:13 - do you send every time you enter
119:15 - character requests yeah so right now
119:19 - okay so you already answered him but
119:23 - yeah right now it's on every key but I
119:26 - definitely don't want it to stay like
119:27 - that okay
119:37 - Sebastian asks if you delete the value
119:39 - from the input what will be displayed
119:40 - and Rohan answered everything I guess
119:42 - yeah and it is everything so you'll see
119:44 - right now I have a value in there but if
119:46 - I delete it it actually displays
119:48 - everything I will have to so I had
119:54 - mentioned before I want it to not work
119:56 - uh if there's only like one or two
120:00 - characters there I want there to have to
120:02 - be three or more characters for this to
120:03 - work so when I do implement that then
120:07 - taking everything out won't work because
120:10 - it won't do anything if there's fewer
120:11 - than three characters so I didn't think
120:14 - about that but I like the fact that it
120:16 - reloads when there's nothing
120:17 - so what I'll probably have to do is in
120:20 - that that if statement it'll be like if
120:23 - the length of the input value is greater
120:30 - than 2 or 0 then it will do it will do
120:39 - the search it'll get the the data
120:44 - otherwise it won't do anything although
120:48 - I am I am a little bit in I'm interested
120:56 - in how how I'm getting
121:03 - okay that's how I just was thinking like
121:08 - if I'm searching for nothing then why is
121:10 - it returning everything so that must be
121:11 - the default so if you see it's probably
121:13 - hard to see because it's small up here
121:15 - but I said I just manually did this put
121:20 - in a search term and I I put in nothing
121:22 - so basically the same thing that would
121:24 - be put in right now and then I made the
121:29 - call on nothing and the default is that
121:31 - for WordPress the default is if you
121:33 - search for nothing it returns everything
121:36 - right so that means if if your search
121:39 - string is literally you know nothing has
121:42 - no characters in it you'll get that so
121:45 - good to know and thanks for bringing
121:48 - that up Sebastian because I totally
121:50 - didn't think about that issue and I'll
121:52 - have to make sure that I add that in
121:57 - florian says you could use a debounce
121:59 - function would be much easier okay
122:03 - I've +1 for devout Patrick okay I've
122:06 - never even heard of you do balance
122:07 - function so I'm gonna look that up and
122:09 - it seems like seems like you all think
122:14 - that's the way to go
122:22 - fabien ass how do you do the bounce
122:24 - function with rxjs or something else and
122:28 - florian responded no just plain J s you
122:32 - could find one easily on Google if
122:33 - you're interested in how it works but if
122:35 - you want to use it just import it from
122:37 - lodash and Patrick gave me a link to the
122:43 - bounce function from David Walsh's blog
122:48 - awesome Fabian thanks I'm going to check
122:50 - out that link all Sebastian says got the
122:54 - answer for my question so you you saw
122:56 - that when it happened then Roland says
123:01 - you can animate the height to min height
123:04 - so it's even less abrupt oh that's a
123:07 - good idea maybe I'll try that I'll have
123:11 - to let you know I'm actually I'm getting
123:13 - to the point in this project where I
123:14 - think I think it's time for me to move
123:18 - on to other projects soon so and by that
123:22 - I mean like people higher up than they I
123:24 - think are expecting that me to move on
123:27 - to other projects soon so I mean I
123:30 - showed you you all seen the Trello board
123:33 - there's still quite a lot of stuff on
123:35 - here I've started moving things over to
123:37 - this column and it's like stuff that I
123:39 - kind of thought I might want to do but
123:40 - now that I think about it it doesn't
123:42 - really need to happen because so
123:46 - basically like I need to get a move on
123:48 - with this and either get some stuff done
123:49 - or figure out what doesn't really need
123:52 - done
123:53 - so the reason I say that is just simply
123:56 - like row on I I really I think the
124:01 - animate height is a good idea animate
124:04 - height to min height but little details
124:07 - like that I love little details like
124:09 - that and I want to put it in but at this
124:11 - point I may have to decide like what
124:14 - should I spend my time on now something
124:16 - like that probably only take like a few
124:18 - minutes to implement so maybe that'll
124:21 - actually end up in there as well but I
124:24 - do need to start thinking like okay I
124:26 - know what I want to do to make this site
124:27 - like really good how I really want it
124:29 - but realistically like is it worth
124:32 - my time to do that when there are a lot
124:36 - of other projects that are very
124:38 - important as well that need done so also
124:42 - the fact that there's not really a lot
124:43 - of traffic on the site is causing me to
124:45 - rethink some of the priorities for the
124:47 - site like this site was very important
124:55 - because of the the people who had been
124:58 - told about this site we're really you
125:00 - know important people for this
125:02 - university so it needed to be done but
125:04 - now like I'm kind of thinking you know
125:07 - there are some other sites you know like
125:10 - right now this site gets I don't know
125:12 - hundreds a few hundred views and most of
125:15 - that are from you all I mean there are
125:18 - sites I could be working on they get in
125:19 - the millions of views and that would
125:24 - probably have a bigger impact so so if
125:28 - you see me in one of my upcoming streams
125:31 - switch to a different project and you
125:32 - wonder why I've left some of these
125:33 - things undone that's probably that's why
125:37 - so I'm not exactly code related but
125:41 - these are things that I guess you have
125:43 - to think about depending on you know
125:46 - what type of work you're doing and you
125:48 - know at some point you do just kind of
125:50 - have to say like you know I I want to
125:55 - make this project as good as it can be
125:57 - but you have to stop you know you could
126:00 - like continually enhance a site forever
126:03 - there has to be some some pointers stuff
126:05 - and so for this site I'm getting close
126:07 - to the point where I think I could stop
126:10 - and for the from the users point of view
126:13 - the site would be a complete experience
126:16 - I know they're probably they're always
126:19 - things you could do better you know from
126:21 - a developer point of view but really
126:24 - like from a user's perspective this site
126:29 - does look complete already it functions
126:32 - well there's not very many things more
126:34 - than someone I think would expect
126:36 - reasonably from this site so I just need
126:40 - to add in those few extra things maybe
126:42 - and then kind of assess where I'm at
126:45 - the next project is alright I think
126:50 - we're almost to the end of the live chat
126:57 - all of our asks I'm new here should I
127:01 - learn angular angular 2/4 or react he
127:10 - says or are they all are they basically
127:13 - the same Oliver I am angular and react
127:27 - aren't the same I've heard to explain
127:31 - like this basically angular is angular
127:34 - is like a fool MVC framework writes
127:37 - model-view-controller a framework write
127:40 - react would just be the V part of the
127:43 - MVC so the view part so so I don't think
127:49 - react and angular are directly
127:51 - comparable in that way
127:53 - I have minimal minimal work with angular
127:56 - so I'm not a really good judge between
127:59 - them I've seen really good projects
128:02 - built with both of them and I I know
128:05 - they're really good developers that use
128:07 - one or the other or even both so I know
128:11 - this is not much of an answer but it
128:13 - will kind of depend on what you're
128:16 - working on and what you like you know
128:22 - certainly if you try them I'd say try
128:24 - and both try to do just basic projects
128:26 - in both and see what you like more
128:28 - because regardless of which one's better
128:32 - if they're both similar you know so one
128:37 - maybe is just a little better than the
128:38 - other for what you're doing but you
128:40 - really like working with one a lot more
128:42 - you should go with that one because if
128:44 - you're going to be spending hours and
128:46 - hours and hours you know every day you
128:48 - want to be doing something that you like
128:51 - or else it's you know it's going to be
128:53 - miserable for you so anyway that's my
128:55 - answer maybe you all have
128:58 - answer to that question but like I said
129:01 - I don't know I haven't built a lot of
129:04 - things with angular actually I don't
129:06 - think I've ever built anything that
129:08 - actually worked with angular I worked
129:10 - with angular when it like years ago when
129:13 - it was somewhat newer and I worked on a
129:17 - project for a while and it was just it
129:20 - broke and I couldn't get it to work and
129:22 - I eventually just abandoned it so so I'm
129:26 - not a good judge of angular and it
129:27 - wasn't angular's fault it was my
129:29 - inexperience
129:30 - so I Rowland says I like your series I
129:34 - don't know react and I really had no
129:37 - intention to learn it but I guess I will
129:41 - now oh that's cool
129:42 - yeah I mean I'm not like I'm not an
129:45 - advocate of any you know framework or
129:48 - anything I just I started using react I
129:51 - like react I like the results I get with
129:54 - it and I think it's fun to work with so
129:56 - yes and try it out okay keV Ian says it
130:07 - sounds like a proverb or something like
130:09 - that and then he's quoting me from
130:11 - earlier if you search for nothing you
130:15 - will get everything yeah when you say it
130:21 - like that it does sound like a proverb
130:23 - if you search nothing good ever
130:24 - I have to think about that and see if it
130:26 - makes any sense at all aside from the
130:30 - context of the wordpress API I'm not
130:37 - sure right now if that if that could be
130:39 - applied to any other thing it actually
130:41 - makes sense
130:42 - Roland says you do need a hard
130:45 - breakpoint on a project otherwise as
130:48 - designers or developers you try to keep
130:50 - on adding new stuff to it stuff that you
130:53 - the user otherwise wouldn't even expect
130:56 - that's a really good point that that
130:59 - last part of stuff that the user
131:01 - otherwise wouldn't even expect I'm yeah
131:07 - let me talk about that for a second
131:08 - because I think that's a great point
131:10 - as developers were like we know more of
131:15 - what's out there on websites and was
131:17 - possible I think that is really good
131:20 - advice to to keep in mind the average
131:24 - user doesn't have that same level of
131:27 - understanding the possibilities of what
131:32 - what you can do with websites right I
131:34 - mean as developers like we we watch
131:36 - videos of the latest stuff from like you
131:39 - know conferences and things and you know
131:42 - we know what's out there so I think at
131:46 - least I know from my perspective I'm I'm
131:48 - hard on myself sometimes because I know
131:50 - a lot of this really awesome stuff that
131:52 - people are doing and when my sites don't
131:57 - do that I a part of me feels like the
132:01 - site's not good because it's not doing
132:04 - the awesome stuff that I've seen other
132:06 - people do but when I show it to other
132:10 - people like other people that I work
132:11 - with or family or friends I often get a
132:14 - really positive response not always I
132:17 - mean I'm not going to say everybody
132:18 - always loves everything I do but some I
132:21 - usually get a positive response and
132:23 - people like wow this is great and I
132:27 - don't always understand it and I'm not
132:29 - I'm not usually like always as satisfied
132:33 - with my work as other people are so I
132:37 - think it's good to keep in mind that the
132:39 - average user has I want to say like much
132:42 - lower expectations than developers I
132:44 - don't want it to sound bad like but I
132:46 - think it's simply because that's not
132:49 - their field you know everybody in their
132:52 - own particular field of what they work
132:54 - on they're going to know more about it
132:56 - you know they're gonna I don't know I
132:59 - guess I could look at a painting and
133:02 - think it's awesome and then an artist
133:03 - could look at a painting and realize all
133:05 - the stuff that's wrong with it and what
133:07 - should have happened you know
133:09 - same way like you know a chef would look
133:13 - at a meal in a different way than
133:16 - someone who's not a chef right and be
133:18 - able to critique it so anyway thanks for
133:21 - that Rohan that was really
133:23 - be insightful of you I'm gonna have to
133:27 - keep that in mind for me as well um our
133:32 - patch says which language should I move
133:35 - on Java or Python I'm struggling to find
133:39 - which one to opt for and Rohan responded
133:42 - our PES if you are talking about college
133:46 - take Java and learn Python by yourself
133:49 - ok I don't have a lot of experience with
133:56 - Python or Java my my advice on which
134:02 - language to learn is usually based on
134:04 - what do you want to do with it so some
134:08 - things like as far as I know Android
134:11 - apps are built with Java so if let's say
134:17 - you really really want to build Android
134:19 - apps maybe Java is the way to go or if
134:21 - there's a company that you really like
134:23 - it's your dream to work for that company
134:24 - and you know that they primarily use one
134:27 - language over another do that otherwise
134:30 - if you don't have any you know any goals
134:33 - like that then maybe you should go with
134:37 - you know maybe look at which language
134:40 - has more jobs you know that's that's a
134:45 - legitimate reason to go with it is you
134:47 - know just check it out and then finally
134:49 - what do you enjoy using more so you know
134:55 - trying both out a little bit and then
134:56 - see which one you like and that that's
135:01 - my advice for that I have worked
135:03 - slightly with Java and Python Java was
135:08 - so long ago I really don't even remember
135:09 - much about it but Python the thing I
135:13 - really loved about Python I think I
135:15 - might have mentioned this last week at
135:17 - some point thing I loved about Python is
135:20 - the syntax is like mostly based off of
135:22 - indentation so it was really easy for me
135:27 - to code with Python on my phone normally
135:31 - the way the keyboards are on phones it's
135:33 - really hard to put in a lot of the
135:35 - special
135:35 - characters you know : semicolons and
135:38 - quotation marks like they're not really
135:39 - like right there available but with
135:41 - Python I didn't need a lot of those
135:43 - things so I was able to do like a lot of
135:46 - I don't know like small like algorithm
135:49 - challenges with Python and complete them
135:52 - like when I was like laying in bed at
135:54 - night before I went to sleep I would do
135:56 - a couple of algorithm challenges in
135:57 - Python right from my phone I really
136:00 - liked that I thought that was cool once
136:01 - I started to get like into more complex
136:03 - algorithms it wasn't as doable on my
136:06 - phone but basic stuff the the intro to
136:09 - computer science course from Udacity
136:12 - uses Python and that's the course I was
136:14 - taking at the time and that's what I was
136:17 - using my phone for so I know that's
136:19 - that's pretty silly reason to like a
136:21 - language but I thought it was cool
136:25 - Oliver Oliver says in response to our
136:29 - pestis question about Java and Python
136:32 - Java is harder but faster Python and it
136:35 - was productivity personally I really
136:38 - like Python hey Rohan says personally I
136:41 - use Python regularly and love it Java is
136:43 - important and good but I don't really
136:45 - like the verbosity of it I like the Java
136:50 - VM but the language not very much says
136:55 - yup Java is faster than Python leaps and
136:58 - bounds faster and then Jesse nice name
137:03 - by the way
137:04 - Jesse oak okiya I'm not sure I pronounce
137:08 - the last name I'm sorry about that says
137:10 - I've been playing around with react for
137:12 - a while but I'm having difficulties with
137:14 - react router Dom it returns a 404 when I
137:18 - go directly to the link do you know any
137:21 - good documentation or boilerplate to get
137:22 - me started with I wish I knew more I
137:26 - haven't worked with react router enough
137:28 - and I don't know I would say if you
137:33 - aren't already using this try to go with
137:37 - um one of the reactive other plates that
137:40 - are popular like create react app is
137:43 - actually from Facebook and you could try
137:46 - that one
137:48 - and maybe that would be easier I haven't
137:51 - used in a long time I know there's been
137:53 - a lot of updates I tried it like when it
137:54 - first came out and I haven't tried it
137:57 - since so I don't know for sure how good
138:00 - that is or you can try next which is
138:02 - what I'm using for this project and then
138:04 - that handles a lot of the routing for
138:05 - you I guess it just depends on what you
138:08 - need it for so so sorry I don't have a
138:13 - better answer for you in terms of
138:16 - documentation but I I do like next it is
138:22 - somewhat opinionated in in terms of like
138:25 - the default router you know you have to
138:27 - have a different JavaScript file in the
138:29 - pages folder but if you see I don't know
138:32 - if you saw the video or we did some
138:36 - custom routes in our server JS file and
138:41 - so that we could have parameterize
138:43 - routes for like our blog style news page
138:47 - so maybe check that out I don't remember
138:53 - what I called the video but it was
138:54 - something to do a custom routing and
138:55 - parameterize routing I think I called it
138:57 - so maybe check that out just to see how
139:01 - you do routing with next with like the
139:03 - custom routing and see if that would
139:05 - solve your issue and if it would then
139:07 - maybe go with next otherwise I haven't
139:09 - had a lot of experience with with the
139:11 - react router to be able to to give you a
139:15 - lot of help with it okay kevin has some
139:23 - good advice as well so says you need to
139:26 - configure your server to serve index on
139:27 - every request web pack dev server has it
139:30 - config for it if you are using that okay
139:34 - awesome
139:35 - actually let me since we're talking
139:37 - about it I'll just bring up my server is
139:43 - just so that you all can see this I'm
139:44 - not really going to comment on it too
139:46 - much but just in case anyone's
139:50 - interested how how I set up moves to
139:54 - diso 'pn
139:59 - where did this open it
140:00 - oops I get open on this side yeah it did
140:05 - okay so um yeah this is how I have liked
140:09 - some of the routes set up so like I said
140:18 - I'm not I've done a video where we kind
140:20 - of went over some of this so this is how
140:26 - I've set up so this is if you wanted to
140:28 - do some custom routing and use next at
140:31 - the same time this I do it so next
140:33 - routing with these pages still works but
140:37 - then we also have some other stuff going
140:39 - on where we pass you know some you know
140:43 - the the end of the URL there you know we
140:47 - pass that and we make API calls based on
140:49 - that so mmm our page says okay thanks a
140:57 - lot for Java in college and learn Python
140:59 - on the side awesome and if you if you
141:04 - watch our pêche if you're watching any
141:07 - other live streams in the future let us
141:09 - know how things are going with the Java
141:11 - and the Python and I mean I'm I don't
141:14 - really do Java Python on this live
141:16 - stream I don't have to do it at work but
141:17 - still it would be cool to be cool to
141:19 - hear how things are going with you know
141:22 - trying to learn some other languages and
141:26 - Kevin says in response to Jesse's
141:29 - question webpack dev server okay so it's
141:33 - giving a like a command so I'm not going
141:36 - to read out the command and probably not
141:38 - useful to read that out but but thanks I
141:45 - love I love that everybody is really
141:47 - kind of helping each other out in the
141:49 - live chat I think it's awesome
141:51 - also actually some some people from you
141:55 - live chat earlier started in an IRC
141:57 - channel for this so let me let me grab
142:03 - this link and put it in here
142:07 - so I'm like super new with IRC so I'm
142:12 - not exactly sure how to do everything
142:13 - but if you're you know better with it
142:16 - you know feel free to join um this is
142:20 - the the channel just to kind of talk I
142:24 - am NOT on here all the time but I kind
142:26 - of try to leave it open when I can and
142:28 - so if anybody wants to chat and help
142:31 - each other out you know you can go ahead
142:34 - and check out that channel as well
142:40 - Rowland does say if you really want to
142:42 - go tough on yourself and your college
142:45 - has it go for C++ you'll probably hate
142:47 - it in the beginning but you'll find
142:48 - everything easier afterwards hi that's
142:50 - 20 the only programming course that I
142:52 - ever actually finished in college was a
142:54 - C++ course and the only thing I remember
142:56 - doing from that course is a calculator
142:59 - so I did really well in the class I just
143:02 - I don't remember very much about C++ but
143:04 - the basic concepts of like loops and
143:07 - things like that
143:07 - boolean's I remember those and those
143:10 - helped when I later on was getting into
143:12 - JavaScript more Tony Raines says I'm
143:18 - currently in in uni so for everybody in
143:22 - the United States University it's uni so
143:26 - in the United States they don't say uni
143:29 - but so just in case you don't know that
143:31 - is and I know Java Python and learning
143:34 - j/s JavaScript what do you think I
143:38 - should be prioritizing right now should
143:40 - I go to like SQL c-sharp or what hmm
143:52 - my thing is it kind of depends on what
143:53 - you want to do if you want to go like
143:55 - full-stack and you're learning like some
143:57 - of the JavaScript stuff you know learn
144:00 - some database stuff and and then you can
144:04 - pick up some HTML and CSS and then you
144:06 - know you basically you know have a nice
144:10 - like full stack skill set if you really
144:12 - want to keep going for it I think that
144:14 - would be that would be cool
144:16 - Tony said he's sorry Canadian don't
144:18 - apologize for it I just I mean I I knew
144:21 - what it meant mostly just because of
144:24 - watching people from other countries on
144:26 - YouTube
144:26 - i watch a lot of cooking shows on
144:28 - YouTube and they're usually always
144:30 - people from other countries so anyway I
144:32 - just wanted to help out people who may
144:34 - not know what that have meant so no need
144:36 - to apologize
144:40 - oh cool our pest says I'll keep you
144:43 - updated about my small adventure thank
144:45 - you awesome I appreciate that Patrick
144:47 - says when I did my CS degree I wrote
144:49 - plenty of Java but opted for C whenever
144:51 - I had the choice because it was harder
144:52 - ya see so I started taking the cs50
144:57 - computer science course from Harvard
144:59 - it's like their their online course that
145:01 - a ton of people take they you see like
145:04 - at the begin of different languages but
145:06 - one of the languages they use a C and
145:08 - that's the first I've ever been exposed
145:09 - to like you're just basic old-school C
145:12 - and it definitely made me appreciate
145:16 - JavaScript and other like kind of more
145:18 - modern languages because it's definitely
145:21 - is harder it's harder to even do like
145:22 - basic things
145:23 - so yeah you appreciate things patrick
145:31 - said and it gives you more experience of
145:33 - that computer actually works totally
145:34 - agree
145:36 - tony says yeah I'm trying to learn
145:39 - JavaScript HTML CSS all at once right
145:41 - now also trying to throw in some SQL and
145:45 - and yeah I guess all right awesome glad
145:49 - glad I could help a little bit actually
145:52 - I want to ask you guys this because I've
145:53 - heard it different ways do you say SQL
145:57 - or do you say sequel let me know
146:02 - and I'd like to say it the right way and
146:06 - not sound like a noob but as I've said
146:10 - before I don't know if you know there's
146:11 - not really it's pretty much me and like
146:14 - one other person that does all the stuff
146:15 - here and we're both very much like you
146:19 - know learning as we go so I don't have a
146:22 - lot of people to talk to about this so I
146:24 - don't ever act I don't ever hear these
146:26 - terms spoken out loud okay Patrick says
146:30 - sequel alright I like to say sequel but
146:32 - occasionally I'll say sequel to somebody
146:34 - and they look at me really funny like
146:36 - what are you talking about okay Rohan
146:40 - says SQL that's cute
146:43 - okay all right so I guess there's a
146:46 - mixer I get it's I I guess it's
146:48 - acceptable to say it either way SQL or
146:50 - sequel thanks for the feedback Jessie
146:57 - says thanks a lot guys that was really
146:58 - helpful awesome I'm glad we could help
147:01 - Rohan says lower level language isn't
147:03 - usually practical practical but you get
147:05 - a lot more insight as to stuff how it
147:07 - works on how stuff works underneath oh
147:12 - yeah totally agree Rohan Morel into the
147:18 - basic sequel isn't that hard usually
147:23 - yeah I haven't had to work with sequel
147:26 - directly very often I've done like in
147:28 - the context of WordPress I've like
147:30 - manually copied some databases and
147:32 - things like that I've done that from the
147:36 - command line before and also through
147:38 - like like the PHP my admin panel so I've
147:42 - done that either way yeah it wasn't that
147:45 - difficult to do it's just a little a
147:48 - little different but nothing the Google
147:52 - search couldn't solve so it didn't take
147:53 - me that long to do it and actually the
147:56 - hardest part was I had something weird
147:58 - with like the table names were like
148:00 - we're off so that was like my problem
148:03 - that took me a long time if I had just
148:04 - double-checked the table names were
148:06 - corrective it would have taken me like
148:08 - no time at all
148:20 - okay Patrick's although Patrick says
148:22 - sequel he also says Postgres SQL so
148:29 - either way so anyway yeah the consensus
148:32 - seems to be that there is no consensus
148:34 - on how to say sequel or SQL Jessie asked
148:39 - MongoDB or sequel which do you think is
148:42 - more productive I'm not going to be able
148:44 - to answer this one myself because I
148:46 - don't have enough experience with
148:47 - databases so maybe someone else in the
148:49 - live chat can answer or I'm probably
148:52 - going to end this stream pretty soon
148:54 - because this has been a super long
148:55 - stream very productive but long and I
148:58 - need to yeah I wanted to solve the store
149:02 - before I got home and I'm feeling super
149:04 - tired right now so I'm going to wrap it
149:06 - up soon so if anybody has some good
149:10 - advice on between MongoDB and sequel 4
149:12 - for Jesse
149:14 - you know put it down in the and I'm not
149:17 - speaking in and like what it called in
149:20 - the third person here first four so
149:22 - Jesse okay it's a different Jesse in the
149:25 - live chat in case you're watching this
149:26 - later and don't can't see the name but
149:31 - anyway if you have any advice or
149:33 - responses to any of the questions we've
149:34 - been going over and you're watching this
149:36 - later when it's recorded you know put
149:38 - some put some answers in the comments I
149:41 - read the comments for sure and I imagine
149:43 - some of the other people in the live
149:44 - stream a live chat read the comments so
149:47 - that would be awesome and then you know
149:49 - you could join in even though you can't
149:50 - make it when it's live row on says not
149:58 - much experience but either but no sequel
150:02 - can be hard in many cases to implement
150:05 - [Music]
150:07 - let's see I'm sorry I'm not sure to
150:10 - pronounce this name I apologize if I
150:13 - mess it up
150:14 - Mamadou sorry says MongoDB is a s GBD
150:21 - and sequel is a request language I'm not
150:28 - exist and source so
150:31 - I'm not really sure what maybe you could
150:34 - put the okay so sorry I can't speak
150:40 - English very well oh that was fine I
150:41 - could I mean I could understand it I
150:43 - just don't know what that acronym means
150:45 - Umberto says one of the main reasons one
150:48 - of the main questions to ask is whether
150:49 - you know the structure of your data to
150:50 - begin with krong krong is says have you
150:59 - tried firebase I haven't tried firebase
151:05 - I'm not sure if that was directed at
151:10 - Jessie for his question about databases
151:15 - then I don't really know but okay I am
151:20 - since a minute ago I checked the time
151:22 - and realized how late it was
151:25 - I'm going to wrap this up so I got to go
151:29 - to the store I one of my co-workers
151:31 - really had my back and turned in my
151:34 - credit card statements for me when I was
151:36 - sick last week and so I promised her
151:39 - that I would pay her back and she
151:43 - requested that I cook something so in
151:48 - case you didn't know I happen to be a
151:50 - good cook but so anyway so she saw I
151:53 - made some stuff on my Instagram and she
151:55 - requested so I have to go to the store
151:57 - and pick that up before I go home and
151:59 - anyway this was this was awesome this
152:03 - was something setting up the live
152:08 - there's too many things live one on it
152:11 - uh I'm going to say setting up the live
152:12 - search was something that I Cana was
152:16 - like I thought it might take a long time
152:19 - to really do it the right way and react
152:21 - and this didn't take very much time at
152:24 - all thanks to your help I really
152:27 - appreciate that you hope I would not
152:29 - have been able to accomplish what I did
152:31 - today if it weren't for you all that was
152:33 - awesome so
152:38 - I'm going to Wow Rohan sorry Rowan said
152:42 - it's 2:00 a.m. here we've been up for 22
152:44 - hours Wow okay I'm definitely ending
152:46 - this dream so Rohan can go to sleep so
152:49 - Wow
152:51 - that's dedication thanks for staying up
152:54 - late and and watching this yes all right
152:57 - so thank you for watching I should be
153:00 - back tomorrow like I said I'm still not
153:02 - feeling very well but hopefully I'll
153:05 - feel well enough to come into work
153:06 - tomorrow and I'll do the stream and I
153:09 - said any any questions or anything you
153:12 - didn't get asked throw it in the
153:13 - description or throw it in the comments
153:15 - below or direct message me on Twitter
153:18 - thanks for watching and have a great day

Cleaned transcript:

hey everybody its Jessie sorry I couldn't stream yesterday I wasn't feeling good actually not really feeling that great today but I had to come in add an important meeting this morning that I didn't want to skip and I had some login info for a server that I needed to do some work on and I didn't have the login info at home I I just had it on my computer here so I had to come in so if I sound a little bit off today it's because I'm not feeling well I apologize in advance today we're going to do a live search feature so I've done this before but not with react or I should say I have done this on a react site before but I kind of just adapted what I had done from other sites which was in jQuery and I didn't really make it you know proper react code so today I want to try to do it would be in a more correct way within react and and not used to jQuery before basically I was adding and removing elements from the Dom with jQuery which is not really great to do and react so I don't want to do that so I'm not sure how long this will take or if it'll work since I haven't done it this way before but the basic concept is you have an input a text input the user types on what as soon as they type in a few letters then you send a request to the WordPress API searching for any any post of that post type that you're looking for which in our case would be the resources search for any posts that contains that string and then you get a response back and you can see the cards pop up as you're typing so usually I like to do maybe like once you get three characters in then it will refresh with maybe a timeout so we're not sending like a million API calls when someone's typing but like I said I've got that working on a few sites before but not exactly in this way so that's the goal and then the last show we were trying to get the what was it all the masonry layout to work so let me let me just show you that actually right I was working on this this page right before I started and I changed something in it broke the page and I'm just trying to look at what I changed I don't really know what I would have done it little broken the page but let me take out I know I added something down here I'll just take this whole section out for now I don't really think it would have caused any problems but I just want to get it working so I can show you all right so let me bring this over on the screen let me find a there we go all right so I can't take credit for this Fabian who was watching must have been watching on gosh what day was it today's Wednesday so Monday sorry must've been watching on Monday notice that I was having trouble getting this to work with the tabs actually submitted a pull request which was awesome and you could see some of the code for that and I'll show to you again what he did so thank you very much that saved me a lot of time and frustration from trying to figure out why I can get it to work and let me just show you really quick basically what what he had done and I don't know that I can even explain it properly since since he did he did it if you're watching Fabian and you want to explain it more in the live chat please feel free so he took let me see where we're at actually let me just let me show you the get diff because that'll make it so much easier for you all to see see I'm at I was on a different was it on a different branch yeah us that shouldn't matter so I alright let me make this a lot bigger so you can see ok so some of this stuff I had just taken this out so he's bringing this component back in if you remember we were using that react masonry component so he's setting the state here basically for which tab is is active so the alt tab is active right off the bat and then you can see down below that'll change based on what tab is clicked but the and he's gotten rid of a lot of this stuff because I was failing to use masonry properly so this is the bulk of what was added so you can see the component the components are now here okay well it's the the template kind of for this component exists up here as a constant its variable and we have all the tabs here key value pairs and here we go okay so here's where we used to have this template I could show you here so we used to have this template all right here and it was just looping through everything once the once the API code was made not only that but we had had it four times here for each of our four options now we just have it once okay and it loops through so this is the the tabs so it goes through the tabs and it renders the components for that tab inside here without having to render all of them in infor here so pretty awesome solution actually shortened up things quite a bit if you could see took out big chunks of code so cleaned everything up a lot and in addition to making masonry work so I really appreciate that and this is on github if you want to take a look at it kind of go in more depth I don't want to take too much more time on it just because you know if if you read the what this stream was supposed to be about and you're waiting for me to do that you know I don't want to disappoint so really awesome thanks again Fabian and let's get back to to get back here uh one other thing Fabian did that was also awesome was he he pointed out if you remember on Monday I had some like static on my a month with my mic I got a new mic and I thought so it was wrong my mic and he had pointed out in the comments that maybe I had my phone next to the mic and that was causing the static and in fact I did have my phone right next to the mic and when I had used it earlier from home I did not have my phone next to it so I think that was the problem let me know if you hear the static again just in case it wasn't that but I'm almost positive that that was the issue so anyway Fabian is probably one of my favorite people right now it's since he's helped me out so much in the last few days I just checked the lab chat for the first time sorry I kind of forgotten about it a lot of people saying hi so hey everybody thanks for watching see a lot a lot of new people so really cool ok Fabian's washingto awesome let's see all right awesome Patrick linked the github page that shows what I was just showing you there what Fabian had done in case you want to check it out all right so let me let me go in here and just show you what what I was trying to do and I haven't really gotten that much done you can see like I typed the name for a function of where things are going to happen and then I had also tried to put in a an input and I just copy and pasted this from the documentation for materialise you can see it's even says first name which is not not what I want I want it to be searched and I was just trying to change it so that it would be valid in react so I did you use like class name and HTML for instead of just four and I don't I don't remember if I have to change oops there we go I knew there was there had to be something else that I was missing and actually that I don't even need this class so I'm going to get rid of that all right for some reason when I had pasted this in at first it caused the page to break so that's why I just pulled it out so I can show you what was going on but now actually let me give my page up here alright so that is not broken now not the best looking thing but I'm not worried about style right now all I'm worried about is we have somewhere where I can put input into okay awesome first step completed I think I'm going to make this make this bigger first of all so you can see and it might be easier as we whoops as we go they're going to make that maybe half the page and that way you can see the changes as we're making them on the site okay that'll work let me know if I need to increase the font size even more all right sorry I just got I just got a message from a coworker I just want to make sure it wasn't some emergency okay it's a it's a minor problem I can check it out after the stream all right so let's now that we have that working I want to add I've never actually tried to do this particular thing in react so if anyone watching has done this and I'm messing this up let me know but I was I was checking out briefly beforehand how to handle like key press events and react so I think I can just use like on on key up I was trying to figure out what how exactly it supposed to be typed in terms of case so I'm guessing it's something like that okay Rob had a question a live chat is is there a link to the first stream for this so that the entire like so the first one where I actually started to work on this site is on my channel and it's called I think it's called building a website as fast as I can because that way that was the original goal and then we got some extra time and now since the site's launched we have even more time to add extra features ok so I'm just going to try to call what did we call this is it this these console I know there are better ways to test but the console log is just it's just so nice and familiar and it it shows up in the console well on the video so ok so what I want to see happen is great that should be it broke wouldn't Anki up is not oh yeah shoot that's not what I called it I called it search get search results there we go alright not I don't know what that was about maybe I did something and it broke so what we want to do I want to inspect this so I can see what's going on here that's that's Texas definitely big enough mmm that's not really what we wanted it did say it did say key up quite a few times but that's not not what I wanted here hmm I'm gonna let me clear this just to make sure okay yeah it's definitely not working the way I wanted it to refresh and see what we're getting it once maybe I'm using the wrong the wrong syntax I'm gonna go I'm just gonna check it out maybe I have to case it wrong maybe it needs to be I'm just going to try this quick because if this is this the problem and that should solve it very quickly now all right okay so it is supposed to be that case let me refresh again is to see now definitely not not working all right let's see what's going on in okay this is the input I don't want this placeholder to either let me get rid of that while I'm in here okay so that's what I'm what I'm saying so Sebastian a live chats and it is on key up I'm calling am I missing I mean I'm not crazy here right this is normally how we call how we call a function and make sure get search results console doc right yeah that's that should work yep for some reason all I'm getting here is a key up it's constantly key up once when i refresh the page and then it's not working after that all right so let me go to the documentation or Stack Overflow oh okay thank you for that and sorry it took so long there's like a delay probably like a minute or so so Anton thank you Anton said don't invoke the function so I figured it was something with that it just didn't look right to me but I I just couldn't figure out exactly what it was and that was it alright so let's check this out now oops smooth this over Kia yes okay so nice that's exactly what we wanted okay so I mean that was kind of the easy part I knew that that was possible I just hadn't actually done a nonkey up in react before so just needed to get well I just needed to know the capitalization here and this invoking the function was just a dull mistake on my part okay so now we need to do is within here we need to fetch the data from the wordpress API and not just any data it has to be it has to take the value of this input or this input is it takes to take the value of this input and then search for that then it has to base what I wanted to do is render cards based on that search into here and then also the same cards would be rendered you know when you click on these it wouldn't it wouldn't be all the audio anymore it would simply be veal category or the the resources in the audio category that matched that search so maybe I should let me put this in whoops I'm gonna put this in here sometimes it's helpful at least for me to kind of just put in plain you know English what I want to accomplish so I don't forget because I have it in my head right now but once I get into it I might skip a step so step one would be get input get input value and nope and step two is make API call based on value and then we want to render cards from okay so that's it basically we can break that down into three steps that's what we need to do all right I just checked the the analytics for this we had like almost a hundred viewers right off the bat and then it dropped down an hour at like just below 60 so guess I guess I lost a lot of people this is about where is kind of back up to normal we were a little bit low on Monday but I didn't realize that Apple's all that stuff was going on so that might explain it all right so first we need to get that value on key up so where is it at I keep losing the the input you make this a bit bigger well there we go okay so usually input give an idea of search okay so I'm just going to do this I don't know if there's a better way to do this in react but I'm just going to go get Boop's documents the good elements addy and we want the search element and I think it's just value we'll see um let's see what that does and let's say this let's search time equal ennui we may as well bring back our console log oops okay so basically I'm going to narrate a little bit I know some of you in here are way past you missed and our answers Patrick just said I'm sorry Patrick I'm not sure what you are referring to oh I missed an R and search haha alright awesome that's one of the really great things about live streaming is you know normally when when you code you make little mistakes like that you don't realize it and then you try to run the code and you know depending on what you're trying to do sometimes it takes a while to figure out what the mistake was but in this case you know right now I have you know 64 people watching me do this so somebody is going to catch my mistakes early enough so that it doesn't really mess things up so thanks Patrick I appreciate that um you know my ID did I also mess up get element by ID oh you were just telling me that was where it was in okay awesome uh sorry if you're watching this recording later I'll try to do my best to let you know what is being said in the live chat but occasionally I do just respond and I forget about that so try to try to watch it live if you can next time but I I know not everybody can because of the time zone difference I was I was about to say something and I got distracted oh I wanted to say I'm going to narrate this and kind of explain what I'm doing in a little bit more depth because I know that there are some people that are beyond me that watch this and they help me a lot but there are some people who are just beginning and I want to make sure that they understand as much as possible what's going on so for instance like Taylor and the live chat said just learning to code so not it doesn't really know a lot of the stuff that's going on so I'm going to do that so sorry if this is really basic for you but anyway uh this let is just it's just like a variable but this is kind of a new or a JavaScript way to do this so there are some advantages to using let instead of just ver which you would normally use not really going to go into that right now but in general most of the times we use very you could use let and it'll work just fine it does not work in older browsers though so you have to be careful about that and you have to transpile the code so anyway this is just the vanilla JavaScript way to get an element on the page by ID so that that input tag that we had down here I'm not going to scroll down to right now we gave it an ID of search so now we're just getting that and what I want to get is the value from that so I want to get whatever the user typed in and I'm just going to console.log this just to see to make sure that we're getting what the correct value and that I've set this up right at this point is pretty basic so it should work so I'm going to save that in case I haven't already and let's get our console ready and whoa you know I use a function did I spell that Oh should it not be should not be D or should it be no it is right it is Eddie what am i doing two equal documented I'm sure somebody's going to tell me in that in the live chat what's wrong because it's probably some silly mistake man if I have to look up get element by ID I'm going to be going to be embarrassed by that is it a lowercase T okay get up I don't know what's up with my it probably just autocorrected because I had spelled it wrong to begin with so that's what kind of threw me whenever the when I went to go change it in it autocorrected right back alright thanks for that was in the process of my other screen I'm just looking it up I mean that's how it goes you know you can't have all the syntax memorized although that one I use pretty often so that that surprised me that could remember that but you can see this is working just like we want it to work so every time we change it we get that that's actually cool effect I like that it looks cool alright so step one is completed let's see make now we need to make an API call okay so here's what I know how to do an API call with fetch on the clientside but here's what I'm wondering about I am importing fetch here somewhere here where am i important is do not need to import it I thought I had to import isomorphic fetch it's imperative I just couldn't find it okay so I'm importing this Eiffel isomorphic fetch and then I'm using it here and get initial props but this runs serverside ok so that's why I'm using that's the term isomorphic means it runs on the server or on the client this runs serverside but it also runs clientside like when we do our clientside routing and we go between pages this this will also run that's why you know we still have the data on the pages I mean I know there's caching and serviceworker and things but even if we didn't have all that this was still running we'd still get data I would just run in the client side but I'm I don't want to use this outside of this get initial props function because next j/s which is what we're using you know we're running react with that I think they do some things behind the scenes to know whenever to use this you know how to use this on the server and the client I'm afraid if I put this down here and try to run on the client I'm not going to get the right results so what I'm going to do is I'm just going to try to use fetch normally how I would use it on the on the client side even if I wasn't using react and I'm going to see how that works if anybody has has any input on that idea let me know but that's that's the next step that's what I'm going to try to do here uh let me actually let me copy and paste cuz that's always faster so I have I thought I had it up already let me show you funny maybe I had it up why did I have this up this is a previous here we go this is a project I had done earlier a few months ago and so anyway so I had this that I already made so I figured why not reuse that so let's see I don't need this okay alright so basically what it's going to do is I'm going to call I can copy like some of this stuff I am going to change this we're going to leave resources but we're basically going to leave this but I need to add in that search parameter I don't really need to add it right now because I need to test just to make sure that I can call so I'm not going to complicate it by adding in a search which I could mess that up bet it better to just do one change at a time and then at least in testan at least you know it least easier to find out what went wrong so basically when I call get JSON said how it goes yeah so when I call get JSON all right I'm going to pass it a URL which is going to be the combination of these two so let's just do that now in JSON and tough to write this I don't know if I've to write this when I'm when I'm up here but I'm gonna do it anyway if you didn't already know you're joining for the first time I don't claim to be an expert on any of this especially react because I've only done a few projects with react so if it seems like at times I'm just kind of winging it it's because I am I'm learning on the go but that's how the show is about just watching me and my normal job and I think normally with developers a lot of what you do is just learning on the go at least that's been my experience so I hope that you all learn something from this but I actually learned a lot from you as well as a kind of struggle through this so if you're expecting like a very detailed and thoughtout tutorial or something that's not what you're going to get in these videos which those videos are awesome but I'm not really knowledgeable enough about this to be the person to do a video like that at least not yet maybe one day I'll be knowledgeable enough okay and I am I'm like I'm tempted to just console love this whole thing this whole day so they why not I kind of want to see what that will look like actually I need to probably save this but I could actually probably use constant here right I'm not going to change it right now but just just for I mentioned before what let was you can also use this instead of air and it's constant this is like if you have something you want to be immutable like you don't want it to change a variable that won't change you don't want it to be allowed to change later on within that same scope you use Const and I had used let it let is like my default goto because it usually works for everything but now that I'm looking at this this isn't going to be changed within you know it's gonna every time this is called this will be changed but you know it's not like going to be changed down here within the same function call so I probably could just use Const for this and I'm just going to do it for consistency since I'm already using it and now I'm going to make this do I want to call this data in here we're calling this data on state a for now maybe I shouldn't we just call it WP data for WordPress data and also if you're joining in you're wondering about the WordPress API part I'll show you what gets returned from the API and I think in the last video I did I did go into a little bit how I set up the API some of the custom things I was doing so if you're a little lost on that you can check out the last video I may do like a full video on on the WordPress API at some point if there's enough interest in it all right so this set up I think we have this note missing one thing all right let's see okay in the live chat I mean I haven't checked a lot yet in a while so I'm going to just check it here just just for a minute see if there's any questions all Sebastian try to react on a project with with next to jQuery scaling you okay uh KEB KEB Ian I think I'm not sure how to pronounce that but cabbie in 6020 says I think you can use a weight just fine even the client side since the next auto compiles es 7 es 5 that's good to know if this doesn't work off a problem with this I will definitely go back and switch to that also I might just switch to it at some point if I have time just I think it would look better if I was using it in the same way you know on the same you know the same component and cabbie and says I use constant Ida fault and use let only to denote I'm going to change it okay that's actually interesting I never thought about it that way so I had just mentioned that my default is usually let and then I only use cost when I think I need it but he's still in the opposite that's honestly probably a safer way to code it is to use Const by default and then that way there's less chance of you accidentally changing changing cost Oh Kevin also says you can change the properties of a constant object and even at new ones you just can't replace the whole object with another thing an mentions that WP date is a promise you have to either a weight or a thin on it good good call I thank you for pointing that out and you know what I actually did do that was it here I am doing that here what is this one searches at some point and I'm just going to look at this this is how I implemented the same search thing with some extra features and things with jQuery stuff so if you want to look at it I just want to check one thing out here um okay yeah I did do that here um I just want to double check how I handled that here and what I did inside you okay this is like I don't know there's so much here that like obviously I have these two dudes left in here and different things but it definitely works and I did exactly what I wanted it to do I wish I would have had time to refactor this though I look back on it now and I'm like yeah it works but it's kind of a mess just don't always have the time before I have to launch to get all those things in order all right then okay where we at all right so let's take this out for now so I'm do get you some more if you from and then I can just chain it with a then right let me see how I did this here well guys name the date of this I guess I can and now I can okay now I'm going to console.log the data there just for now I mean obviously we're going to do other stuff with it later on thanks thanks for catching that so you normally I test a bunch of times and then troubleshoot but now I like I can't even can't even hit save fast enough before you all catch my mistake so thanks for that I'm sure it is speeding speeding things up for me all right let's see what's going on where's my console there we go all right so let's see I'm a little bit not really sure about how I did fetch here yeah and it looks like Oh something was happening cannot really probably get JSON of no hmm well that's interesting okay Patrick says console dir console about table will be better actually that's new for me I've never heard of console table I've never used it I'm going to use that as I've never seen that that's cool and what did I do maybe is it because I use this and I need to was that with that I'm trying to read this error message cannot get property get JSON of null okay let's see okay then why oh I wonder if this got messed up since I'm in here and I have to I do this before okay relaunches get JSON you Oh maybe this get inside geez oh good call cabin you are just like on point today with catching these things so I I had copied and pasted these two functions and and didn't modify them at all but it makes sense like if I have to call normally you have to call this interact component if you're going to call these functions so I didn't do that because I'm calling this gate function inside this get JSON so that may be the issue okay so it should be this yes all right that might fix it let's try it out and Fabian also said this was the other thing that I was worried about it's it's not mine this isn't binded to the class so so this in this case is not referring to like like when I called this down here it's not referring to the same this so I used to buying how should I bind this I know there's something that you can use an arrow function and it binds it does something with binding I don't use arrow functions often enough to remember what exactly happens with the binding is anybody know Romo Maddie right when I was saying this he puts a an arrow function and he said change get search results to an arrow function for Autobahn so awesome okay and with syntax that's it I'm no good at remembering syntax and this is something I use constantly so I'm like always always having to look it up I don't know if is it like that for any of you you just frequently have to look up syntax stuff and for that there we go and it happens like at least for me it's so easy to lose to lose it like let's say if I like one on vacation I didn't do any coding for a week it feels a little bit weird getting back into it like things that you used to type constantly now you have to think about again I don't know I thought that happened happen to me certainly and since I'm using this here I should probably bind that as well right let's try it on huh oops no I did it wrong didn't construct that's ugly guess what what did I do that was wrong here Oh obviously right you all right I should probably explain arrow functions for the people that are kind of new let me test this first just to see if I did it right yes okay awesome and actually uh thanks Patrick for letting me know about this wow this is a lot for letting me know about the console table instead of console.log look at that that looks really nice that's so much easier to read than what you would normally get I mean you normally get like this thing with you'd have to keep opening it up it would be nested so very nice I don't alright so normally it would look like this actually you wouldn't get in a table format great and in fact we are getting the data that we want awesome so step two is almost finished okay because we are getting the data that we want this is all working properly but we actually want to do a search based on what was typed in that's why like I was getting a bunch of data for everything even though I just typed in a string of nonsense I shouldn't have gotten results for that right so I'm going to I'm going to go back to here to get because this will probably the easiest way for me to find how I did the search wait a sec now that wasn't it it was in this one okay so here's the search URL okay so basically all I have to do is in this case I was actually using multiple post type so I'm going to do I'm going to need to do this pretty soon so maybe tomorrow or something I'll do a video and highlight this this is really cool what lets you get multiple post types obviously just like it says within within this one call so in this case I wanted to search basically nearly everything on the site I don't want to do that here so I'm not going to do all that but so it'd be cool to point that out so I'm going to take this and put that in right here okay so we want to put the search term here and I'm going to use template literal syntax and accidie so let me let me do a little little e^x six lesson here not that I know what I'm talking about too much with this but I do use these so arrow functions this is like shorthand way to do functions sometimes you can see like you know I did have the the parentheses over here like in a normal function and I add URL in there but now I moved it out here and you have this little this what's called arrow function you have this little thing here okay um this works differently inside arrow functions I'm not going to get too deep into it because I'm not confident that I could explain this without messing something up but I don't want to mislead you so you know check out arrow functions but basically within react I usually use arrow functions like in this case to make sure that this means what I want it to mean I see arrow function used in a lot of other ways so there's definitely you know other reason to use them even possibly just to make the code a bit more concise and then down here I use template literal syntax and I know I've talked about this before in my live streams but if you've never seen me seen this dream or heard me talk about it these were just like a single or double quotes so anything in here is a string but if you want to use JavaScript inside here either a variable or any other part of JavaScript that you want to use you put a dollar sign and a curly bracket whatever your JavaScript is in here and then you end it with another curly bracket and now you're back into string mode so where's normally you would have to do something like this where you would put your your JavaScript and then you would do this and you'd finish out your string right this is not that bad but imagine if I was going to put in a lot of different variables here it could get super long really fast so this is nice the other nice thing you can do is I can do this and put that in there and that that's okay right that that'll work I can actually put I've used these template literals to actually do like HTML templates before and I've had a huge chunk of HTML here with variables in there and used it basically insights that I've kind of done try to do like single page app style sites but using jQuery so I don't try to do that anymore because it kind of gets a mess after a while and if it gets complex but if you have something simple it's definitely doable and template literals makes it way more doable than normal at least that was my experience with it all right let me I'm gonna check the live stream really quick Umberto's says what is this vacation I immensely what on vacation I actually am going to go on vacation the week after next so I don't know if I'll be able to do streams from vacation my wife probably will not want me to to do any streams but I don't know if the Internet is fast enough maybe I doubt it fast enough though and let me see I have a few other comments here okay Burma Maddox says wait how is this geturl working when it isn't bound to the class like the other methods had to be I don't know I'm not easy uh it it works obviously it works so I'm not going to question it right now let's get it all working and we'll say maybe if anybody else you know wants to take a crack at answering that question go ahead Shane asked how far should you be through the front end cert program through free code camps run insert program before you try learning react and Patrick says learn plenty of JavaScript first yes I would agree JavaScript um react is I mean it's JavaScript heavy like you know everything is within JavaScript right this is all so yeah so definitely JavaScript uh it's a big help I'm I'm not really a good example I never got through the front end program in pre code camp before I started doing react stuff and now I mean that was basically like I just got really busy with work and had to I mean I had to do things for clients you know I needed things to work so I kind of just didn't have that much time anymore and I wasn't at one point I was really disciplined and I spent an hour at least an hour every day doing some type of training and then I got busy and I wouldn't wasn't disciplined about it so I just kind of moved on I I really do want to finish everything in the free code camp curriculum at some point I just need to I just need to put my foot down and say like all right first thing in the morning you know I'm going to do this I'm going to take an hour and I'm not going to check my email or anything like that and get distracted so it'll happen one day I guess but so it's possible to do this stuff without getting through the front end certification it will definitely be easy year for you if you get through I know my react there are parts of react that are still a struggle for me but when I first started working with it it was it was super hard for me to understand what was going on okay so now that we're going to have this search term going here let's just test it up so I'm going to save that and what we should get now is we should get our results back and we'll see them we'll see our results but they will only be the results that we get for searching so we'll try let's see the we'll just type in some nonsense again let me clear this because that's a lot so actually that's weird how did I get that from that nonsense hmm that should not have happened like that I should have gotten should have gotten some nonsense okay so this might actually be useful to people who haven't seen this yet to actually see what the result is in the browser and this will also be useful to me to make sure that what I'm doing is actually the right way to do it so search and I don't know okay that that returned nothing which is what it should have returned but let me check let me just do something like the okay awesome so that is actually working the way we want it to if you can see like this is what we get back from the wordpress api it's a JSON format and i'm specifying what i want so i said i only want the title and I only want advanced custom fields normally you'd get a lot more data than this but I don't need that data so I don't I don't want to I don't want to send back okay so we get the title and then these are custom fields that I've created and I've used the plugin advanced custom fields to do that and another plugin to actually expose the fields to the API or through the API so that's working so we know that this is working I'm not exactly sure why it wasn't working search what wasn't working before let's try it again let me do a hard refresh and try this again occasionally when I'm the next comes with hot module reloading so you don't like it just refreshes and you don't have to like you hit save and stuff changes on the page right you don't have to refresh but occasionally I find that sometimes I change something here and it doesn't exactly work right away I have to do reload so I'm not sure why that happens but sometimes you will have to do that alright I want to try let's see okay cool so I'm not getting anything there which is what we want there we go but now we have that so nothing put a foot type in word okay so that's really cool so if you see if it's if it's nonsense you know obviously we're not getting anything back and we are getting something back if it's a real word so great so that part is working just like we wanted to the only other thing that I'd like to do with this is I I'd like to do two things to slow this down one I don't want it to work with just one or two one or two characters I mean there's not really any meaningful words that are only two characters long so you wouldn't need to search for it like you wouldn't need to search for of or is or you know there's not going to be character like that so I want to make it so that it only works if you have at least three I also want to make it so that I think there ought to be maybe some delay so that you know people didn't wouldn't just let's say I just hold it in this key actually I can't hold it in that's interesting I don't know what's doing that but let's say I just want to impress this really fast like this just made a bunch of calls I don't want that to happen I don't want to make all these calls to the API over and over again so I do want there to be some sort of timeout I don't want it to be too long because then it'll seem like it's not responsive to the user and somebody typing fast you know maybe it will take a second before it before it happens so I might have to play with the timing of that to see what's what's reasonable in terms of you know like how many milliseconds I wait before I let it happen again but basically step two is is complete aside from that little bit of finetuning that I can always do later they're not that's not really essential to this working those are just things that will help prevent you know too many calls being made the site actually is not getting very much traffic now so I'm not worried about like anything crashing or slowing down a lot I checked the analytics yesterday and it looked weird so it basically looked like a spike in traffic a spike a spike a spike a spike right and I was like why is there spikes in traffic and then I looked at the time of each spike guess what time of day each spike was for this for this site for the live version of this site let's see I'm going to give you a few minutes to to guess what what time what would be happening at some point in the day where I would get huge spikes in traffic on that site well while you think about that for a second I'm going to catch up on the live chat bromo Matic says I finished the entire front insert before touching react it was a good experience getting used to doing everything in the Dom with jQuery slash JavaScript before relying on frameworks I agree with that like I like I said before I didn't do it that way and I think it was harder for me because I didn't do it that way and I I still want to go back and finish it and I think it'll help even now having worked with react I think it still will help me grow mimetic also says maybe it's changed but I don't think it's changed yet but the data visualization course was when you started doing projects and react for the free code camp I think you're right I know there's the beta version of free code camp that's not it's not out yet so the order might be different there I haven't looked at the beta stuff for a long time so I don't know where it's at now I can't remember where it was that last time I looked at it John asks how come use fetch instead of AK cos or jQuery for Ajax calls and Patrick answers fetch is the newer replacement that is 100% correct yeah fetch is newer the only reason you wouldn't use fetching in my opinion fetches the easiest out of any other way I've ever used to make to make calls like that it's it's just so much shorter to do and you know it returns promises that are easy to work with so I recommend using FETs the only reason you wouldn't use fetch is if for some reason you had to support an older browser and you you couldn't use the polyfill so normally like you would you would have a polyfill that you would use to make fetch work on older browsers and actually I need to double check because since I use this version of fetch instead of this I may have to include a polyfill somewhere since this is all just on the client off to see I don't know what this will actually get turned into by next so maybe I won't maybe I will have to check that maybe it would be better just to use this yeah so I didn't think about that before I'll have to keep that in mind and make sure I test this on a browser where I know fetch doesn't work and make sure that it works all right so Sebastian says 200 p.m. stream time right that is the answer to the question so in Rowan says it was us yeah so it turns out that most of the traffic to this site at this point I mean it's it just launched Desmond been live and it hasn't been advertised quite as much as it could have but the majority of the traffic to the site at this point is from you all when I'm livestreaming you go to the site and you check it out and that's the traffic so that the site's really been getting low traffic so my original point was simply I'm not that worried about too many calls messing up the site because there's not a lot of traffic right now okay but at some point if it gets a lot more traffic that will be an issue so I'd rather just kind of deal with it now or at least at some point you know within maybe this week or next week deal with it and not have to worry about it later if you remember last week we added load balancing but that was only for the react part of the site remember the site has two parts there's the react part which exists on one server and then the WordPress part exists on another server there's only one WordPress server so even though there's to react sites on two different servers that we're balancing the load between all the calls the API calls still go back to one WordPress so that's a point where it could slow things down so I do want to make sure that we're doing everything we can to speed that up and there's some caching and things that are that are going to happen there's already some caching in place with the react site and there's some caching that I'm going to put in place on WordPress once we get the content filled out a bit and that should take the load down but when it comes to the searches these are usually unique you know they're probably going to be some terms that are frequently searched but you know as I'm typing in and I type in like a partial word it's like you know nobody's going to search for that normal right so that's not going to be cash odds are no one search for that before it's not going to be cash so it's not really going to help with caching so if there's anything that's going to slow this down at the level of WordPress it's going to be the search at least that's what I think if anyone else has any insight into that let me know but that's that's kind of the only place that I know of at this point that could really really slow it down all right okay roll and says fetch is just better than xhr anything this or late last year has fetched yet I I agree definitely with her on fetches fetches way easier to use Campion says isomorphic fest requires note fetch in the server and a fetch polyfill on the client so I'm wondering if next takes care of that polyfill already because we're using isomorphic fetch will that then take care of it I shouldn't really worry about it because I can I can test it very easily when I need to by looking at batted an older browser so I'm not going to worry about it right now I'm not going to put this live before I test it and I'm definitely going to test it in some older browsers just to doublecheck that so not going to worry about it right now just know that that is an issue if you are using fetch depending on what you're using it may or may not work in every browser so in this case it could be that next automatically puts that polyfill in and it does work but if you are building this site with something else or just kind of a static site you would need to include the polyfill on your own I have included on some of my other projects so if you check out my github page let me think if there's a project actually I don't know I think they might be private repos so I don't know if I can think of a project that I've done recently where I use the polyfill for fetch and it's not private I will let you know or maybe put the link in the description or something but it's not that hard to do just I'm you know you can look up fetch polyfill or something like that it's pretty easy to add to your project I don't want to dismiss it and say it's easy I know people say that a lot and I don't want anybody to feel bad if it's not easy for you it's easy if you're used to doing things like that if you've never done anything like that before then of course it's it's not easy you know it wouldn't be easy for me the first time I did it so I don't want to I don't want to make it seem like it's it's really like anybody should be able to do it right away because that's certainly not the case all right Burton asks is this sublime it is Adam and Hertz on Sebastian answered says Adam art son says looks cool but takes ages to start yeah you're correct but you know how I get around that problem I never close it or shut off my computer so here's here's a tip here's the number one lesson for today if you want Adam to perform better never close it because once it's open it's not bad um I am joking a little bit with that one but it is true that I rarely ever close it so I don't notice the slowness of it because I'm never really starting it okay let's go on right now we need to render the cards okay so that's the last thing and okay not bad the streams been how long is the stream with one all right an hour in 15 minutes you see the assignment is okay we still have alright we still 44 viewers I say we should go for it I was thinking about just ending it and doing this tomorrow but I say we go for we still have a decent amount of viewers so if you hear me just randomly laughs it's probably something in the live chat so I'm not insane especially if you're watching this later on it's just it they were in the live chat some people were commenting on my my solution to make Adam faster or to at least make it seem faster to me alright so this step I'm not gonna lie this step was what worried me the most I was pretty sure that I'd be able to figure these out easily and these went really really well really fast not too many issues the only issues and get needs to work will really like either misspellings or syntax errors on my part so rendering it to the cards I'm going to think out loud for a minute here to see if we can you know let you know what I'm thinking so you could give me some some of your ideas and also just to make it clear in my head so alright so we have the data here okay so within this this then okay we need to do something with the data to get it to hear right to render to to fill out all of this stuff right now this is getting in by this props data you know filter now what I'm thinking right off the bat and this certainly wouldn't be it's never good encoding to repeat yourself if you don't have to right um right they said what is it they call it dry dry coding do not repeat right so anyway what I'm thinking right off the bat is hey I could just like copy this and instead of using this props data I could use like whatever variable I save this to right and then somehow somehow we render okay so you see maybe if you're good with react you're probably wondering what the heck I'm I'm thinking maybe it's obvious to you but for me somehow the jump from the jump from this data to filling this out and so like completely removing everything is here and then filling it out again with other stuff that's the jump that I'm having trouble thinking about right now so normally a this point I would just start trying things and seeing what works and what breaks and I would get there but since I have all of you here watching as well I'm going to check I'm just going to give it just a few seconds here just because the delay to see if anybody has any better ideas about this before I start just messing with things Oh in the live chat mark recommends checking out Visual Studio code I actually use that as well so nice alright Fabien comes through I was I was hoping that you were still watching Fabien since since you essentially wrote you know a lot of this page with deal with that pull request request that I emerged in yesterday I was hoping that you would have some insight into that so save the date of the state it will trigger new run oh yes now that you say that it makes so much sense and this is this a good example of like I wanted to really do this the react way I certainly could have used something like jQuery or even just vanilla JavaScript to totally clear this out and then add it but that's not really what I want to do with react because then react will lose track of the Dom it react keeps a like a virtual Dom where it has like a copy with a cut do they call it the shadow Dom am i confusing terms here anyway I can't remember but anyway there's basically a copy of the Dom that react keeps and it needs to be able to keep track and keep that in sync and if you start changing things outside of react like in a separate JavaScript file with jQuery or something then they get out of sync okay so then you won't really be taking advantage of all the the goodness that react has so anyway thank you Fabian once again okay John says it is virtual Dom okay so I knew I've heard the term virtual DOM and shadow Dom and for a minute I just got it got it mixed up so what's what's shadow Dom go with what am I thinking of now I can't remember where I've heard that before all right I guess it doesn't really matter for what we're doing right now so um so we need to save let me see we're saving this this stay actually to tell you the truth I'm looking at this and I'm still not sure I'm still not 100% sure what I need to do here because I'm pulling this data and now is prop so it's going to props when this anything in here when I return data goes to props but if I want to save the state when I need to pull it from like this state data or am I just missing something here let me know all right we have some some references to the movie Mad Max in the live chat that's funny in Orleans the shadow Dom is for custom elements custom elements mostly okay bye so Fabian uh is saying in a live chat yeah you state data instead of perhaps data well Jonathan and the lab chat also says sublime so it's referring to the editor sublime we actually had I don't know how many live streams that we've had a similar conversation and it always does come up the consensus is Adam load slowly sublime is good and try visual studio code occasionally we get some other ones thrown in there but that seems to always be the be consensus here if florian says you could use a higherorder component Florian I like that suggestion I don't know enough about higherorder components to be confident doing that though so if if anybody's wondering about what a good way to do this would be you could try out higherorder component if you know more about that but I want to learn more about it I just don't know it now so that will be a little bit beyond me at the point the state all right so let's see all right so Florian saying or I'm sorry Fabian is saying and knit the state with props data on component did mount Oh awesome great okay so basically here's what here's we're going to do I'm going to explain this out loud for everybody watching but also so that I can verify that I understand what Fabian saying you can let me know so basically right now the get initial props you know just by default anything that you return from this is going to be set to props obviously right that's what it is getting actual props right so that's why down here I'm going this props data right I'm getting this data but what we're going to do is on component did mount we're going to set this this data so this props right and this props data and we're going to set that to the state so then when we come down here instead of saying this props data we say this state data and it will be the same thing but that gives us then the ability to change the state in here and then once there's a change in state there it'll automatically rerender all of this okay so if that's not Fabian if that's not what you had in mind let me know but I think that's think that's what you're trying to describe to me here and that makes sense to me Florian also says a higherorder component is just a function which takes a component as an argument and returns another component and rhoann says google dev resources has some good web components and custom element stuff and angular works well okay so Berlin still talking about shadow DOM okay so Fabian says the way I just described it it seems right Florian actually that's it that's a really like nice simple explanation of a higherorder component I think I am going to check into those as soon as I get a chance I'm not going to check into it now the stream because we're just so close to getting this to work but thank you for explaining that and I'm definitely going to check it out also if you have time and you would like to you're certainly welcome to submit a pull request to this repo with which you had in mind with that too and in anybody watching certainly you can if you'd like to contribute that would be awesome but otherwise I definitely do want to learn more about higher order components on how to use them because I've seen other people do some useful things with them so all right so now where my component did mounts okay so this actually now when I'm inside component did mount is this going to mean what it should mean or do any day use an arrow function here too this doesn't exactly look right to me uh I'm gonna try but let me let me know I don't think I did this right so oh I need to change it down here too and let's see actually this is an awesome way to do it I'll tell you one a second okay so I'm going state here right and down here though this corresponds to this section here I don't ever want this section to change even on search right so this section will be populated by props which is great and then props will never change but the state will change and when the state changes it'll change all this stuff down here but it will leave these alone so I did think earlier when I was thinking about this I thought I gotta have some way to make sure that these don't change and whoops didn't mean it like that so that that will work that that'll ensure that those stay the same but then everything else changes yeah thanks baby and I knew I was doing that wrong so Fabian gave me the the correct syntax for that so thank I knew enough to know it wasn't right but I didn't know enough to know the right way to do it actually this kind of thing is one of the reasons I was afraid to do live streams at first because I don't know how it seems to you but to me it seems like it's really obvious what I don't know and I was always nervous that like everybody's going to see what a newb I am but it's actually not that bad I mean you are very helpful and nobody is harassing me about being a noob and I'm learning a lot of stuff and you know these are things that I probably could have spent time looking up and that would have been fine that's a legit way to do it but it would have taken me a lot of time and I may have tried a lot of other things and given up or tried you know so I really it is really beneficial even though I'm fully aware that I probably look like a noob right now alright so we've set it on component amount next step is we need to update the state that's it this set state all right I totally remember using this at some point in the past now that I see it okay now we need to update the state here with this data so I think Fabian told me how to do it as well okay to update the state you have to call set state so let's just say this props it okay so now I need to do let's get rid of console.log so you need to do this State and I'm assuming it's the same I should just copy this while I'm not trying to type this I'm assuming it's the same syntax officer oh I'll find out a second when I save this or if I'm corrected in the live chat and data this props dead now I don't want to diss props data I want it to be data I'm assuming this is not shoot I should change this right well will this mess it up but I'm using the same thing it doesn't matter I was originally gonna call this WP data anyway no to the beat so I'll just go with that and then avoid any potential for combat that actually just makes it easier to read anyway so I just double checking and Oh actually oh nice so Fabian and Florian both just let me know I can just remove the I can remove this this set state and actually since I'm going to do that I might as well just switch it back because now it'll no longer be confusing at least to me it was a little bit confusing this later on or somebody else reading this I would think that would be slightly confusing if they weren't familiar with what I'd already done alright so and they did mention this is a es6 feature that this just works to set this so like normally like this is actually what we're doing we're setting you know within this object we're setting data to this props data so that's what's happening it's as if I just wrote data data right but I don't have to and I assume that's basically similar to what just happened here as well that this goes to props you know data data okay let me save it and what I do this is T Oh shoot I never did I said I said I was going to probably have to do it and then I never did it I'm assuming that that error is because of this so I need to use the arrow function if you didn't run around when we talked about this before this arrow function make sure that when I use this here it means what I want it to mean okay so basically it means the same thing is when I call this within the render function it's referring to this as in like this this whole component correct me if I'm wrong with that but that's why we use the arrow function in that case maybe it didn't work maybe that wasn't the issue I should think unless you restart the server I think I froze my local server not still give me the error okay what do I done oh okay Ally says bind it within then that makes sense all right so I'm trying to use this within then so I should use that there as well all in Florida Florian I said the same thing and giving me the syntax I like that syntax that's going to look a lot cleaner too so let's see let me get rid of all this stuff and instead put this in here great okay so we see we have then data right so we have that whereas before I should have left the other one up so I could compare between the two but basically what would normally go in the the function like in the brackets where we have the function just goes here we have this arrow the arrow function here and now we're just doing this set state data and now this will mean what we want it to mean hopefully hopefully it'll work I just do okay I'm still getting this up here though let me just let me take a better look at this and see component in mom do I need to hmm okay let me I'm looking at this you all can see this sure so basically I know that this was probably too small let me blow up this error so you can see what I'm saying wow that's too big no okay so unexpected character here why am I getting an unexpected character you this is 37 yeah 37 for okay this is going to seem weird but I'm just going to do this uh the only reason I'm doing this just to see like maybe something here is messing this up I I don't think it would be but that's why I'm just flipping this to the top just to see if I get the same error okay so I'm still getting an unexpected character but now it's this time it's online okay so now I'm getting a not read property filter undefined 155 all right let's check this up hmm way too soon oh okay alright so basically this is what's happening well not fabian has pointed out in the live chat that this is what's happening so i don't want to take credit for figuring this out basically like it showed this line here that it was showing was like right where we're trying to have the tabs i'm not going to go back down but basically like the tabs that we're going across the page that we we could click so i'm going to do with that so fabian saying now you also need to in its state like that state equals active tab all data because the first render might bug if state data is not defined okay so let's find where we add these so if active state equals active to all data all right yes at the top okay let's just double checking before I put it in there so uh here then let's see state equals I'm just gonna copy so I'm assuming here shoot let me know if I put this in the right spot this doesn't look right again I'm pretty sure I didn't put that baby in says lol no alright so I so I knew that wasn't right um my pudding at this point Fabian is like um I feel like he's my coach here okay so I'm scrolling baby's selling me scroll up so when I when he said at the top I thought he meant like at the top of this render function and then I pasted there and obviously that wasn't the right spot so now I'm going scrolling up more let's see yes statisticians before okay that's what I was waiting Sebastian says before get initial props oh I see it now I see it thanks Sebastian okay so now I'm pretty sure what I have to do is add it in here oops not like that need to add it here so basically the only thing that's that's added so we already had this and then we're adding data all right okay that makes that makes so much sense now um sorry sorry about that taking so long that process so yeah obviously this makes sense okay so our state's an object we were you know we need this data so we already had active tab set right down here we were setting data to actually have the value okay but Fabian saying we might get a bug if we don't have a state data defined beforehand that makes a lot of sense let's save it okay and there's some discussion going on a live chat about constructors and es7 and initializing state and I'm not I'm gonna I'm gonna wait and see what the conclusion is to that discussion if it happens before I before I read out what's going on um all right let me check what happened here whoa that's crazy what the heck just somehow anyway I don't I accidentally just assumed that into 200 I don't oh I know a zoomed in and whenever we had the error and then I didn't dream it back out so anyway so that page loaded and we're not getting these are like the normal errors that I always get when I'm on the dev server so I'm not worried about that and now let's check great okay so that should give us nothing that was kind of an abrupt change there I mean just from like a style design standpoint like I I don't like that that changed and then I went like that so I don't know maybe I'll have to think of something else to put there but let's let's see like I'm gonna I'm just going to type in this woman's last name because that will probably be unique and we'll see like that this is just going to give us this there we go so it actually gave us that before I didn't have to take the whole name in but you can see that's really fast that search happens so fast and that's I mean that request has to go to WordPress and be processed you know WordPress is based on PHP you know it has a database so I mean that all has to to be processed and come back and it just happens very fast I mean this is not I'm not getting this data from something on my local machine this is actually going right to the WordPress install that's on digital ocean and back so I don't I don't know about you but I'm just impressed with the speed of this search and when I've done this before like I've never done in react but I've done it with jQuery before and I have had you know clients and other people I worked with have been really impressed with that speed so if you're using the WordPress API I definitely recommend doing something like this because like I set up clients have always been impressed with first of all the fact that it Auto searches when you're typing in right I mean yeah Google search does that but people expect Google to have impressive things because they're huge company with lots of money and employees and a lot of talented people but you know when a small business or something when you do a site for them and now they see that they have a similar kind of thing happen they're very impressed with that they like that at least that's been my experience so they're impressed that it Auto searches and they're impressed with how fast the search comes up one of my to do's I don't know if you caught it but when I showed you my original code that I done with jQuery you know a long time ago I had a bunch of to do is one of the two do's was to add some sort of loader so that when people are waiting it just it shows this little loader the reason I never put it in is because no one ever had to wait for longer than you know basically it always loaded in such a short amount of time the loader would only appear for a split second and it wouldn't it wouldn't even matter so before I kind of stopped this I do want to give credit here so I know we basically completely redid this and react but since I showed you this initial code that I had done this is where I got it from so if I do get some code from somewhere I always want to make sure that I I give credit even if I don't really have to based on the license I still like to but this is where I got it so github calm so it's bearded Avenger on github so I've never talked to this person or contacted them or anything and this was this code originally was was for the WordPress API version 1 which I never used version 1 because I didn't start using the API until version 2 had it had just come out when I started using it so I did have to change this to work with version 2 but the basic idea of this live search came from here so if you did want to do something like this on a site that was you know let's say based on jQuery and wasn't react you know then check out that code but it will need to be adapted from version 1 I don't know last time I checked I think there were some pull requests for people trying to adapt it as well but I don't know that this is maintained so I don't think any of those pull requests ever got accepted so I was thinking about doing a pull request as well but I don't think they're updating it so it probably wouldn't be they probably would never get merged in so so basically that works with like I said there were some optimizations I wanted to do I wanted to slow it down a little so it didn't make API requests for every single key up event like if they are coming really really quickly so with the exception of that which would simply you know I would just need like a set timeout on the like here where we have yet search results you know we would just need a set timeout and that's I mean that said it wouldn't be much more than that and I would also need something in here too like let's say check every time the key up went up it would check the value and if the length of the value was greater than 2 it would search otherwise it would do nothing so basically the whole thing would be in an if statement that would check for that and then it would also have a set timeout that would be I don't know some some amount of milliseconds that I would have to mess with so other than that it's pretty much done I did mention I saw like the change was pretty abrupt when you have nothing so it has like this job I just don't like that jump so maybe I'll just have it might be something as simple as just setting a minimum height for this section so that I don't have such a drastic drop here that'll probably fix it that'll be a really simple fix I don't think I need anything fancy for this actually let me just try that out right now in the inspector so for for everybody who's more frontend like kind of basics oriented maybe this will be something simple for you all and as soon as I do this I'm going to go back to the live chat I'm going to check and see if there's any questions and I'm going to answer the questions and also share anything that's maybe some really valuable advice on the live chat that I haven't shared already so if you're just here for the live the live search portion of this I mean that's pretty much done we've done everything we needed to so if you got to go thanks for watching I'm on you know Monday through Friday 200 p.m. Eastern Time almost always occasionally I have a meeting or something happens and I can't stream but you know joint join me again I'll be doing all kinds of different stuff for the site and for other sites in the future if you have a little bit of time to stick around for some questions or anything go ahead and throw your questions in the live chat now and then I'll get to as soon as I'm done with this if you can't stick around you have a question put it in the comments below or you can direct message me on Twitter the link to my Twitter is in the description for this video all right so this is yeah this is the section let's go with a min height of 500 pixels mmm actually it's got more let me do like 700 pixels oops what did I do here and now it's not even ice it's not letting me edit that which is weird what are you doing to me dev tools I'm going to refresh because I can't edit that ok alright so min height and the skill is 700 pixels ok because I'm okay with that because the section is always going to be like normally really big it's only going to get smaller if I type in nonsense hmm I don't know that I like I'm I don't think I like that still let me try that again that's better ok that that's definitely better than it was I'm not sure that I want this to go down though so what I have here is this is now this is via line so I'm going to take out that class and this I'm using materializes the framework and they have this vertical line class is going to set up already and maybe I'll have to you have to take this out as well see if that does it there we go ok so that did it so assuming this doesn't change anything else that's better that's what I wanted okay so you see the transition I don't know if you saw it or if it bugged you all as much as above me but before the transition was much more abrupt the footer actually came all the way up here ok and now it still looks the same normally as it did but then we change it the footer actually you know you see it a little bit but it's not a huge jump you can see we have this still stays at the top I might actually remove this in the background I'm not sure if I like it for a big section like that I didn't notice it before behind all these cards it was kind of down here I don't know I'll think about it I think about it for that section it doesn't look terrible when you have a lot of cards but you don't have any cards is more noticeable and yeah I don't know about it also not sure about this having a white background I might like it better if it didn't say I mean those are some really like little CSS changes like some design changes so I'm not going to bother with those right now make you wait around for that but I am I'm definitely going to put this keep this min height in for the section and take out those two things there's two classes that I did all right so now let me go to the live chat I'm going to scroll through I don't think I'm going to go all the way to the top because I did do a good job of checking back in I'm going to go about to the middle of where the live chat is now and just see if I've missed anything who also I will I do have to double check that this fetch works in older browsers and so there might be some adjustments made as soon as that this goes I haven't pushed this to github yet but as soon as it's on github you'll be able to see the code and then you'll be able to check back in you know maybe tomorrow next week and see if I did have to edit it if I do have to edit it and change it in any way like if I test it and it doesn't work on some others I'll let you know and one of the streams but I'm thinking this should work basically without any changes okay Taylor Miller says I really appreciate your stream everyone has things they don't know or others may be no better ways of doing things thanks for streaming and sharing your thoughts / process with us oh you're welcome and thanks for that comment I really appreciate that comments like that they let me know that what I'm doing as value and I should keep doing it so I know I said this before but I'll keep doing these videos as long as as my boss keeps letting me do them which he's he's happy with with me doing them now so that's probably not going to change and as long as I think people find value in them so if you do find value in this you know let me know and I'll keep doing okay so scrolling down through making sure I didn't miss anyone's questions okay Florian says do you use debounce or do you send every time you enter character requests yeah so right now okay so you already answered him but yeah right now it's on every key but I definitely don't want it to stay like that okay Sebastian asks if you delete the value from the input what will be displayed and Rohan answered everything I guess yeah and it is everything so you'll see right now I have a value in there but if I delete it it actually displays everything I will have to so I had mentioned before I want it to not work uh if there's only like one or two characters there I want there to have to be three or more characters for this to work so when I do implement that then taking everything out won't work because it won't do anything if there's fewer than three characters so I didn't think about that but I like the fact that it reloads when there's nothing so what I'll probably have to do is in that that if statement it'll be like if the length of the input value is greater than 2 or 0 then it will do it will do the search it'll get the the data otherwise it won't do anything although I am I am a little bit in I'm interested in how how I'm getting okay that's how I just was thinking like if I'm searching for nothing then why is it returning everything so that must be the default so if you see it's probably hard to see because it's small up here but I said I just manually did this put in a search term and I I put in nothing so basically the same thing that would be put in right now and then I made the call on nothing and the default is that for WordPress the default is if you search for nothing it returns everything right so that means if if your search string is literally you know nothing has no characters in it you'll get that so good to know and thanks for bringing that up Sebastian because I totally didn't think about that issue and I'll have to make sure that I add that in florian says you could use a debounce function would be much easier okay I've +1 for devout Patrick okay I've never even heard of you do balance function so I'm gonna look that up and it seems like seems like you all think that's the way to go fabien ass how do you do the bounce function with rxjs or something else and florian responded no just plain J s you could find one easily on Google if you're interested in how it works but if you want to use it just import it from lodash and Patrick gave me a link to the bounce function from David Walsh's blog awesome Fabian thanks I'm going to check out that link all Sebastian says got the answer for my question so you you saw that when it happened then Roland says you can animate the height to min height so it's even less abrupt oh that's a good idea maybe I'll try that I'll have to let you know I'm actually I'm getting to the point in this project where I think I think it's time for me to move on to other projects soon so and by that I mean like people higher up than they I think are expecting that me to move on to other projects soon so I mean I showed you you all seen the Trello board there's still quite a lot of stuff on here I've started moving things over to this column and it's like stuff that I kind of thought I might want to do but now that I think about it it doesn't really need to happen because so basically like I need to get a move on with this and either get some stuff done or figure out what doesn't really need done so the reason I say that is just simply like row on I I really I think the animate height is a good idea animate height to min height but little details like that I love little details like that and I want to put it in but at this point I may have to decide like what should I spend my time on now something like that probably only take like a few minutes to implement so maybe that'll actually end up in there as well but I do need to start thinking like okay I know what I want to do to make this site like really good how I really want it but realistically like is it worth my time to do that when there are a lot of other projects that are very important as well that need done so also the fact that there's not really a lot of traffic on the site is causing me to rethink some of the priorities for the site like this site was very important because of the the people who had been told about this site we're really you know important people for this university so it needed to be done but now like I'm kind of thinking you know there are some other sites you know like right now this site gets I don't know hundreds a few hundred views and most of that are from you all I mean there are sites I could be working on they get in the millions of views and that would probably have a bigger impact so so if you see me in one of my upcoming streams switch to a different project and you wonder why I've left some of these things undone that's probably that's why so I'm not exactly code related but these are things that I guess you have to think about depending on you know what type of work you're doing and you know at some point you do just kind of have to say like you know I I want to make this project as good as it can be but you have to stop you know you could like continually enhance a site forever there has to be some some pointers stuff and so for this site I'm getting close to the point where I think I could stop and for the from the users point of view the site would be a complete experience I know they're probably they're always things you could do better you know from a developer point of view but really like from a user's perspective this site does look complete already it functions well there's not very many things more than someone I think would expect reasonably from this site so I just need to add in those few extra things maybe and then kind of assess where I'm at the next project is alright I think we're almost to the end of the live chat all of our asks I'm new here should I learn angular angular 2/4 or react he says or are they all are they basically the same Oliver I am angular and react aren't the same I've heard to explain like this basically angular is angular is like a fool MVC framework writes modelviewcontroller a framework write react would just be the V part of the MVC so the view part so so I don't think react and angular are directly comparable in that way I have minimal minimal work with angular so I'm not a really good judge between them I've seen really good projects built with both of them and I I know they're really good developers that use one or the other or even both so I know this is not much of an answer but it will kind of depend on what you're working on and what you like you know certainly if you try them I'd say try and both try to do just basic projects in both and see what you like more because regardless of which one's better if they're both similar you know so one maybe is just a little better than the other for what you're doing but you really like working with one a lot more you should go with that one because if you're going to be spending hours and hours and hours you know every day you want to be doing something that you like or else it's you know it's going to be miserable for you so anyway that's my answer maybe you all have answer to that question but like I said I don't know I haven't built a lot of things with angular actually I don't think I've ever built anything that actually worked with angular I worked with angular when it like years ago when it was somewhat newer and I worked on a project for a while and it was just it broke and I couldn't get it to work and I eventually just abandoned it so so I'm not a good judge of angular and it wasn't angular's fault it was my inexperience so I Rowland says I like your series I don't know react and I really had no intention to learn it but I guess I will now oh that's cool yeah I mean I'm not like I'm not an advocate of any you know framework or anything I just I started using react I like react I like the results I get with it and I think it's fun to work with so yes and try it out okay keV Ian says it sounds like a proverb or something like that and then he's quoting me from earlier if you search for nothing you will get everything yeah when you say it like that it does sound like a proverb if you search nothing good ever I have to think about that and see if it makes any sense at all aside from the context of the wordpress API I'm not sure right now if that if that could be applied to any other thing it actually makes sense Roland says you do need a hard breakpoint on a project otherwise as designers or developers you try to keep on adding new stuff to it stuff that you the user otherwise wouldn't even expect that's a really good point that that last part of stuff that the user otherwise wouldn't even expect I'm yeah let me talk about that for a second because I think that's a great point as developers were like we know more of what's out there on websites and was possible I think that is really good advice to to keep in mind the average user doesn't have that same level of understanding the possibilities of what what you can do with websites right I mean as developers like we we watch videos of the latest stuff from like you know conferences and things and you know we know what's out there so I think at least I know from my perspective I'm I'm hard on myself sometimes because I know a lot of this really awesome stuff that people are doing and when my sites don't do that I a part of me feels like the site's not good because it's not doing the awesome stuff that I've seen other people do but when I show it to other people like other people that I work with or family or friends I often get a really positive response not always I mean I'm not going to say everybody always loves everything I do but some I usually get a positive response and people like wow this is great and I don't always understand it and I'm not I'm not usually like always as satisfied with my work as other people are so I think it's good to keep in mind that the average user has I want to say like much lower expectations than developers I don't want it to sound bad like but I think it's simply because that's not their field you know everybody in their own particular field of what they work on they're going to know more about it you know they're gonna I don't know I guess I could look at a painting and think it's awesome and then an artist could look at a painting and realize all the stuff that's wrong with it and what should have happened you know same way like you know a chef would look at a meal in a different way than someone who's not a chef right and be able to critique it so anyway thanks for that Rohan that was really be insightful of you I'm gonna have to keep that in mind for me as well um our patch says which language should I move on Java or Python I'm struggling to find which one to opt for and Rohan responded our PES if you are talking about college take Java and learn Python by yourself ok I don't have a lot of experience with Python or Java my my advice on which language to learn is usually based on what do you want to do with it so some things like as far as I know Android apps are built with Java so if let's say you really really want to build Android apps maybe Java is the way to go or if there's a company that you really like it's your dream to work for that company and you know that they primarily use one language over another do that otherwise if you don't have any you know any goals like that then maybe you should go with you know maybe look at which language has more jobs you know that's that's a legitimate reason to go with it is you know just check it out and then finally what do you enjoy using more so you know trying both out a little bit and then see which one you like and that that's my advice for that I have worked slightly with Java and Python Java was so long ago I really don't even remember much about it but Python the thing I really loved about Python I think I might have mentioned this last week at some point thing I loved about Python is the syntax is like mostly based off of indentation so it was really easy for me to code with Python on my phone normally the way the keyboards are on phones it's really hard to put in a lot of the special characters you know semicolons and quotation marks like they're not really like right there available but with Python I didn't need a lot of those things so I was able to do like a lot of I don't know like small like algorithm challenges with Python and complete them like when I was like laying in bed at night before I went to sleep I would do a couple of algorithm challenges in Python right from my phone I really liked that I thought that was cool once I started to get like into more complex algorithms it wasn't as doable on my phone but basic stuff the the intro to computer science course from Udacity uses Python and that's the course I was taking at the time and that's what I was using my phone for so I know that's that's pretty silly reason to like a language but I thought it was cool Oliver Oliver says in response to our pestis question about Java and Python Java is harder but faster Python and it was productivity personally I really like Python hey Rohan says personally I use Python regularly and love it Java is important and good but I don't really like the verbosity of it I like the Java VM but the language not very much says yup Java is faster than Python leaps and bounds faster and then Jesse nice name by the way Jesse oak okiya I'm not sure I pronounce the last name I'm sorry about that says I've been playing around with react for a while but I'm having difficulties with react router Dom it returns a 404 when I go directly to the link do you know any good documentation or boilerplate to get me started with I wish I knew more I haven't worked with react router enough and I don't know I would say if you aren't already using this try to go with um one of the reactive other plates that are popular like create react app is actually from Facebook and you could try that one and maybe that would be easier I haven't used in a long time I know there's been a lot of updates I tried it like when it first came out and I haven't tried it since so I don't know for sure how good that is or you can try next which is what I'm using for this project and then that handles a lot of the routing for you I guess it just depends on what you need it for so so sorry I don't have a better answer for you in terms of documentation but I I do like next it is somewhat opinionated in in terms of like the default router you know you have to have a different JavaScript file in the pages folder but if you see I don't know if you saw the video or we did some custom routes in our server JS file and so that we could have parameterize routes for like our blog style news page so maybe check that out I don't remember what I called the video but it was something to do a custom routing and parameterize routing I think I called it so maybe check that out just to see how you do routing with next with like the custom routing and see if that would solve your issue and if it would then maybe go with next otherwise I haven't had a lot of experience with with the react router to be able to to give you a lot of help with it okay kevin has some good advice as well so says you need to configure your server to serve index on every request web pack dev server has it config for it if you are using that okay awesome actually let me since we're talking about it I'll just bring up my server is just so that you all can see this I'm not really going to comment on it too much but just in case anyone's interested how how I set up moves to diso 'pn where did this open it oops I get open on this side yeah it did okay so um yeah this is how I have liked some of the routes set up so like I said I'm not I've done a video where we kind of went over some of this so this is how I've set up so this is if you wanted to do some custom routing and use next at the same time this I do it so next routing with these pages still works but then we also have some other stuff going on where we pass you know some you know the the end of the URL there you know we pass that and we make API calls based on that so mmm our page says okay thanks a lot for Java in college and learn Python on the side awesome and if you if you watch our pêche if you're watching any other live streams in the future let us know how things are going with the Java and the Python and I mean I'm I don't really do Java Python on this live stream I don't have to do it at work but still it would be cool to be cool to hear how things are going with you know trying to learn some other languages and Kevin says in response to Jesse's question webpack dev server okay so it's giving a like a command so I'm not going to read out the command and probably not useful to read that out but but thanks I love I love that everybody is really kind of helping each other out in the live chat I think it's awesome also actually some some people from you live chat earlier started in an IRC channel for this so let me let me grab this link and put it in here so I'm like super new with IRC so I'm not exactly sure how to do everything but if you're you know better with it you know feel free to join um this is the the channel just to kind of talk I am NOT on here all the time but I kind of try to leave it open when I can and so if anybody wants to chat and help each other out you know you can go ahead and check out that channel as well Rowland does say if you really want to go tough on yourself and your college has it go for C++ you'll probably hate it in the beginning but you'll find everything easier afterwards hi that's 20 the only programming course that I ever actually finished in college was a C++ course and the only thing I remember doing from that course is a calculator so I did really well in the class I just I don't remember very much about C++ but the basic concepts of like loops and things like that boolean's I remember those and those helped when I later on was getting into JavaScript more Tony Raines says I'm currently in in uni so for everybody in the United States University it's uni so in the United States they don't say uni but so just in case you don't know that is and I know Java Python and learning j/s JavaScript what do you think I should be prioritizing right now should I go to like SQL csharp or what hmm my thing is it kind of depends on what you want to do if you want to go like fullstack and you're learning like some of the JavaScript stuff you know learn some database stuff and and then you can pick up some HTML and CSS and then you know you basically you know have a nice like full stack skill set if you really want to keep going for it I think that would be that would be cool Tony said he's sorry Canadian don't apologize for it I just I mean I I knew what it meant mostly just because of watching people from other countries on YouTube i watch a lot of cooking shows on YouTube and they're usually always people from other countries so anyway I just wanted to help out people who may not know what that have meant so no need to apologize oh cool our pest says I'll keep you updated about my small adventure thank you awesome I appreciate that Patrick says when I did my CS degree I wrote plenty of Java but opted for C whenever I had the choice because it was harder ya see so I started taking the cs50 computer science course from Harvard it's like their their online course that a ton of people take they you see like at the begin of different languages but one of the languages they use a C and that's the first I've ever been exposed to like you're just basic oldschool C and it definitely made me appreciate JavaScript and other like kind of more modern languages because it's definitely is harder it's harder to even do like basic things so yeah you appreciate things patrick said and it gives you more experience of that computer actually works totally agree tony says yeah I'm trying to learn JavaScript HTML CSS all at once right now also trying to throw in some SQL and and yeah I guess all right awesome glad glad I could help a little bit actually I want to ask you guys this because I've heard it different ways do you say SQL or do you say sequel let me know and I'd like to say it the right way and not sound like a noob but as I've said before I don't know if you know there's not really it's pretty much me and like one other person that does all the stuff here and we're both very much like you know learning as we go so I don't have a lot of people to talk to about this so I don't ever act I don't ever hear these terms spoken out loud okay Patrick says sequel alright I like to say sequel but occasionally I'll say sequel to somebody and they look at me really funny like what are you talking about okay Rohan says SQL that's cute okay all right so I guess there's a mixer I get it's I I guess it's acceptable to say it either way SQL or sequel thanks for the feedback Jessie says thanks a lot guys that was really helpful awesome I'm glad we could help Rohan says lower level language isn't usually practical practical but you get a lot more insight as to stuff how it works on how stuff works underneath oh yeah totally agree Rohan Morel into the basic sequel isn't that hard usually yeah I haven't had to work with sequel directly very often I've done like in the context of WordPress I've like manually copied some databases and things like that I've done that from the command line before and also through like like the PHP my admin panel so I've done that either way yeah it wasn't that difficult to do it's just a little a little different but nothing the Google search couldn't solve so it didn't take me that long to do it and actually the hardest part was I had something weird with like the table names were like we're off so that was like my problem that took me a long time if I had just doublechecked the table names were corrective it would have taken me like no time at all okay Patrick's although Patrick says sequel he also says Postgres SQL so either way so anyway yeah the consensus seems to be that there is no consensus on how to say sequel or SQL Jessie asked MongoDB or sequel which do you think is more productive I'm not going to be able to answer this one myself because I don't have enough experience with databases so maybe someone else in the live chat can answer or I'm probably going to end this stream pretty soon because this has been a super long stream very productive but long and I need to yeah I wanted to solve the store before I got home and I'm feeling super tired right now so I'm going to wrap it up soon so if anybody has some good advice on between MongoDB and sequel 4 for Jesse you know put it down in the and I'm not speaking in and like what it called in the third person here first four so Jesse okay it's a different Jesse in the live chat in case you're watching this later and don't can't see the name but anyway if you have any advice or responses to any of the questions we've been going over and you're watching this later when it's recorded you know put some put some answers in the comments I read the comments for sure and I imagine some of the other people in the live stream a live chat read the comments so that would be awesome and then you know you could join in even though you can't make it when it's live row on says not much experience but either but no sequel can be hard in many cases to implement let's see I'm sorry I'm not sure to pronounce this name I apologize if I mess it up Mamadou sorry says MongoDB is a s GBD and sequel is a request language I'm not exist and source so I'm not really sure what maybe you could put the okay so sorry I can't speak English very well oh that was fine I could I mean I could understand it I just don't know what that acronym means Umberto says one of the main reasons one of the main questions to ask is whether you know the structure of your data to begin with krong krong is says have you tried firebase I haven't tried firebase I'm not sure if that was directed at Jessie for his question about databases then I don't really know but okay I am since a minute ago I checked the time and realized how late it was I'm going to wrap this up so I got to go to the store I one of my coworkers really had my back and turned in my credit card statements for me when I was sick last week and so I promised her that I would pay her back and she requested that I cook something so in case you didn't know I happen to be a good cook but so anyway so she saw I made some stuff on my Instagram and she requested so I have to go to the store and pick that up before I go home and anyway this was this was awesome this was something setting up the live there's too many things live one on it uh I'm going to say setting up the live search was something that I Cana was like I thought it might take a long time to really do it the right way and react and this didn't take very much time at all thanks to your help I really appreciate that you hope I would not have been able to accomplish what I did today if it weren't for you all that was awesome so I'm going to Wow Rohan sorry Rowan said it's 200 a.m. here we've been up for 22 hours Wow okay I'm definitely ending this dream so Rohan can go to sleep so Wow that's dedication thanks for staying up late and and watching this yes all right so thank you for watching I should be back tomorrow like I said I'm still not feeling very well but hopefully I'll feel well enough to come into work tomorrow and I'll do the stream and I said any any questions or anything you didn't get asked throw it in the description or throw it in the comments below or direct message me on Twitter thanks for watching and have a great day
