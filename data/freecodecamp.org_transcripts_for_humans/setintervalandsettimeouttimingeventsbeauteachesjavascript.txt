With timestamps:

00:00 - there are two timing events that are
00:02 - part of the window object that both
00:04 - allow execution of code at specific time
00:07 - time intervals
00:08 - the two timing events are set timeout
00:11 - and set interval
00:12 - for set timeout you pass in a function
00:15 - in milliseconds and the program will
00:17 - wait the specified number of
00:18 - milliseconds and execute the function
00:20 - let's see some code
00:22 - okay here's the set timeout function it
00:24 - could be
00:25 - window.settimeout but the window is
00:27 - implied you pass in the name of the
00:29 - function which is by
00:31 - and then here's the function down here
00:33 - you also pass in the milliseconds here
00:36 - so
00:37 - after
00:38 - 3 000 milliseconds which is three
00:40 - seconds it's going to run the function
00:44 - by which this is just going to
00:45 - console.log goodbye but before that it's
00:48 - going to console.log hello
00:50 - so let's run that
00:53 - one
00:54 - two
00:55 - three
00:56 - so you saw it said hello and then
00:58 - goodbye it is possible to stop the
01:01 - function from running after the set
01:03 - timeout is called
01:05 - you must assign the set timeout to a
01:08 - variable so luvvar
01:13 - so we've set that to var timeout id
01:16 - and then we're going to call
01:18 - cleartimeout and pass in the variable
01:26 - so let's try that
01:28 - it's going to say hello but it will
01:30 - never say goodbye because we've cleared
01:32 - the timeout the set interval function
01:35 - is similar you pass in a function in
01:37 - milliseconds but the program will
01:40 - execute the function continuously
01:42 - waiting the specified number of
01:44 - milliseconds between each function here
01:47 - we're creating a timer we're going to
01:49 - set the count to zero
01:51 - and we're going to call set interval
01:53 - pass in the counter function and 1000
01:56 - milliseconds that's one second so every
01:59 - one second it's going to call this
02:01 - counter function where it's going to log
02:04 - count it's also going to increment count
02:07 - one
02:09 - and we're going to set it to an int id
02:12 - up here i already have a button
02:15 - so
02:16 - in the button we have an on click event
02:19 - that says clear interval with an int id
02:23 - the end id is down there we can stop the
02:25 - timer by clicking the stop timer button
02:28 - and it won't go on forever so let's run
02:30 - that and see how that works
02:33 - well you can see it's counting every
02:35 - second but if i click the stop time
02:38 - button
02:39 - it stops so clear interval just stops
02:42 - the function in the set interval from
02:44 - running well that's all for now thanks
02:45 - for watching my name is beau carnes
02:48 - don't forget to subscribe and remember
02:50 - use your code for good

Cleaned transcript:

there are two timing events that are part of the window object that both allow execution of code at specific time time intervals the two timing events are set timeout and set interval for set timeout you pass in a function in milliseconds and the program will wait the specified number of milliseconds and execute the function let's see some code okay here's the set timeout function it could be window.settimeout but the window is implied you pass in the name of the function which is by and then here's the function down here you also pass in the milliseconds here so after 3 000 milliseconds which is three seconds it's going to run the function by which this is just going to console.log goodbye but before that it's going to console.log hello so let's run that one two three so you saw it said hello and then goodbye it is possible to stop the function from running after the set timeout is called you must assign the set timeout to a variable so luvvar so we've set that to var timeout id and then we're going to call cleartimeout and pass in the variable so let's try that it's going to say hello but it will never say goodbye because we've cleared the timeout the set interval function is similar you pass in a function in milliseconds but the program will execute the function continuously waiting the specified number of milliseconds between each function here we're creating a timer we're going to set the count to zero and we're going to call set interval pass in the counter function and 1000 milliseconds that's one second so every one second it's going to call this counter function where it's going to log count it's also going to increment count one and we're going to set it to an int id up here i already have a button so in the button we have an on click event that says clear interval with an int id the end id is down there we can stop the timer by clicking the stop timer button and it won't go on forever so let's run that and see how that works well you can see it's counting every second but if i click the stop time button it stops so clear interval just stops the function in the set interval from running well that's all for now thanks for watching my name is beau carnes don't forget to subscribe and remember use your code for good
