With timestamps:

00:00 - hello everyone here at free code cap i
00:03 - hope you are ready for this video it's
00:05 - going to be a super exciting one that
00:07 - personally i have been looking forward
00:10 - to sharing with you for a long
00:12 - time
00:13 - it's exciting for two reasons one i'm
00:16 - gonna be introducing to you a new
00:19 - technology that makes creating games
00:21 - super easy allowing us to spin up games
00:24 - like this in minutes
00:27 - two i'm going to be using this
00:29 - technology to show you how to create
00:32 - some classic games such as mario zelda
00:36 - and space invaders step by step so that
00:39 - you can have your own game to take
00:41 - improve on share with your friends
00:43 - barista yoga instructor whoever you wish
00:47 - so before we get to that let's start
00:49 - with the reason number one the new
00:51 - technology for those of you who haven't
00:53 - heard of me my name is anyakubo and i'm
00:55 - a software developer and course creator
00:57 - on youtube who love to teach through
00:59 - building games and this specific
01:01 - technology is built exactly for that we
01:04 - are going to be learning how to use
01:06 - kaboom js
01:08 - kaboom.js is a javascript library that
01:10 - helps you make games fast we are going
01:13 - to be using this library to simplify
01:15 - creating scenes
01:17 - adding layers creating sprites directly
01:20 - in the project or importing them based
01:22 - on your preference dealing with actions
01:25 - and collisions adding key events
01:27 - debugging and so much more this
01:30 - simplicity allows us to enter the world
01:32 - of game development at a low barrier of
01:35 - entry and gets us coding without being
01:37 - disheartened due to pages and pages of
01:40 - documentation which is common in the
01:42 - game development process we see today
01:45 - the ability to spin up games so quickly
01:47 - is something that the folks at replit
01:49 - the collaborative browser-based ide have
01:52 - been passionate about developing for
01:54 - quite some time
01:55 - they wanted the end product to empower
01:57 - everyone from kids to beginner devs as
02:00 - well as intermediate programmers to
02:02 - start creating games with as small a
02:04 - learning curve as possible
02:07 - great now that we have learnt a little
02:09 - bit about kaboom js let's get to using
02:12 - it
02:12 - in the next section i'm going to go over
02:14 - the basic concepts of kaboom js i'm
02:17 - going to show you how to import kaboom
02:19 - js and get it up and running initialize
02:22 - the project start the game add a scene
02:25 - create some sprites as well as show you
02:27 - all the other things we can do with it
02:29 - once we have the basics we will be using
02:32 - this knowledge to create our three games
02:34 - as well as learn more things along the
02:36 - way
02:37 - if you do need to refer to a section of
02:40 - the video after we have learnt a concept
02:42 - please refer to the time stamps in the
02:45 - description of this video
02:47 - each time stamp will take you directly
02:49 - to the section annotated next to it
02:52 - now i do advise that you not skip ahead
02:55 - of some sections of this course as the
02:57 - chapters are done in such a way that
02:59 - will build on the knowledge you gain
03:01 - throughout the only prerequisite i ask
03:04 - of you is to have a basic understanding
03:06 - of the fundamentals of javascript before
03:08 - starting this course but if you're
03:10 - feeling adventurous please do have a go
03:12 - of following along anyway like i said
03:15 - this library is intended to make
03:17 - javascript coding a whole bunch easier
03:20 - by providing a layer of shortcuts if you
03:22 - will to create games i for one i'm super
03:26 - excited about what you all end up
03:28 - building with this javascript library so
03:30 - please do share your final games with me
03:34 - and with us on twitter youtube instagram
03:37 - wherever you wish okay so what are we
03:39 - waiting for let's do this
03:44 - okay
03:44 - so first things first
03:46 - in this section i'm going to show you
03:48 - some of the basics into getting started
03:50 - with kaboom.js here are all the
03:52 - functions and methods to your disposal
03:54 - in the kaboom.js library i will be
03:57 - covering the core concepts so all the
03:59 - ones in red
04:01 - in this section
04:02 - the others we will learn along the way
04:04 - while coding our games
04:06 - by the end you should have a firm
04:08 - understanding of kabum and what you can
04:10 - create with it
04:15 - okay
04:16 - so to start things off i'm actually
04:17 - going to start off on the kaboom js
04:20 - website i'm starting off here because it
04:22 - has all the documentation that you're
04:24 - going to need to refer to after this
04:26 - course so if you do get stuck or perhaps
04:29 - you just want to do some extra reading
04:32 - this is the place to go to
04:34 - now to get started i'm going to actually
04:37 - utilize the kaboom environment on replit
04:40 - which has been pre-made for us and
04:42 - configured in order to get going a lot
04:45 - faster
04:46 - so i'm just going to gravitate toward
04:47 - there now i'm going to click here on
04:50 - kaboom environment on replit and i'm
04:52 - just going to sign up
04:55 - now please take your time signing up
04:58 - here i'm just going to click on the
05:00 - gmail sign and it's going to take me
05:02 - straight to my dashboard
05:05 - fantastic
05:06 - so here you will see some rebels i've
05:09 - already made however i'm going to show
05:10 - you how to make one from scratch all you
05:13 - need to do and you can use all different
05:15 - languages as well but however so i'm
05:17 - just going to click here as this is a
05:20 - kaboom js tutorial we are of course
05:23 - going to choose kabum
05:25 - so i'm just going to click now and you
05:27 - will see a lovely random name has been
05:30 - generated for my project now feel free
05:32 - to change this if you wish i quite like
05:35 - it so i'm just going to keep it and
05:37 - click create repel
05:40 - and there we are
05:41 - our kaboom environment is now loaded
05:45 - so as i said this has been already
05:48 - configured for us the only thing i'm
05:50 - going to ask you to do is click here and
05:53 - check there you are on version 5.
05:55 - if you are not and there is a newer
05:57 - version out there then don't worry feel
06:00 - free to code along however if you do
06:02 - find that something is not working quite
06:04 - as you would expect then make sure to
06:06 - change it to version 5 and refer to the
06:09 - documentation to see what has changed
06:11 - since this tutorial
06:13 - great
06:14 - now
06:15 - i just want to cover the basics these
06:18 - basics are going to be things that we're
06:19 - going to use throughout all three
06:21 - tutorials which is why i think it's
06:22 - great to cover them now together
06:25 - the first i'm going to show you how to
06:26 - do is add a sprite
06:28 - so let's do it
06:31 - to add a sprite in replit we have this
06:34 - really cool feature that will allow us
06:36 - to actually create a
06:38 - sprite in the platform itself
06:40 - this is great as we don't have to rely
06:42 - on a third-party service such as a pixel
06:45 - maker or
06:47 - just sort of an editing software for
06:49 - images we can make everything right here
06:52 - so to do this i'm just going to click
06:54 - here and what shall we call our sprite
06:58 - i'm just going to call him
07:00 - her player
07:03 - and put width
07:04 - and height
07:06 - of 40.
07:07 - so now i'm just gonna create my player
07:09 - um so i'm just going to go ahead and do
07:11 - that now let's make them purple
07:14 - and then i'm just going to make a little
07:16 - alien
07:18 - because i think that's quite fun so
07:19 - here's my little
07:21 - alien
07:23 - um
07:24 - there we go
07:26 - he looks a little bit like
07:28 - monster munch if you know that was
07:30 - crisps so there we go there's my alien
07:34 - i'm getting some little eyes
07:38 - there they are
07:40 - great so now if i click main and i am
07:43 - simply going to use the kaboom method of
07:45 - add
07:46 - open up some parenthesis open up an
07:48 - array and i am simply going to use
07:50 - another kabum method
07:52 - called sprite and i'm going to pass the
07:55 - string of whatever i called my sprite
07:58 - so i'm just gonna go like that and click
08:01 - run
08:02 - and there we go we have added a sprite
08:06 - to our game board that was pretty easy
08:08 - and pretty painless we can do a lot of
08:10 - other things too
08:12 - so if i think my sprite is too big i can
08:14 - scale them by 0.5
08:17 - and click run
08:21 - so there we go they are now half the
08:23 - size i can also use position so i can
08:26 - position my sprite and the first value
08:28 - is going to be the x-axis and the second
08:30 - is going to be the y-axis all stemming
08:33 - from this point right here so if i put
08:35 - 20 20
08:36 - well
08:37 - our sprite is going to appear right
08:40 - there because i've applied 20 pixels to
08:42 - the left and 20 pixels from the top
08:46 - so pretty painless let's carry on
08:50 - the next i'm going to show you how to do
08:51 - is add a level
08:52 - so to do this i'm going to use another
08:54 - kaboom method called add level making
08:57 - sure that it's camel case i'm going to
08:59 - open up a parenthesis and open up our
09:02 - braces sorry square brackets so the
09:05 - first argument is going to be our map
09:07 - and the second argument is going to be
09:08 - an object which is going to be our
09:10 - config for our game
09:12 - so
09:13 - let's start off with the map first i'm
09:15 - simply going to draw out what i want my
09:17 - map to look like using uh quote marks
09:21 - so there we go i'm just going to use the
09:24 - quote marks
09:25 - like so
09:28 - i don't know how many we want but
09:31 - let's
09:31 - okay let's just have this many and then
09:34 - i'm going to make x's for the ground
09:37 - so make sure that it's in the quote
09:38 - marks
09:40 - now we need our config let's also put
09:42 - something here okay so this there we go
09:45 - now we need our config so the width and
09:48 - the height are going to be the width and
09:50 - the height of every one of these little
09:51 - objects here
09:53 - so i'm going to put 40 and height 40 as
09:56 - well just to be um
09:58 - the same as these sprites
10:00 - and now i need to define what all these
10:02 - objects are so i'm going to grab the x
10:06 - and this is the syntax i'm going to open
10:08 - up my square brackets and this x
10:11 - is going to be the sprite
10:14 - of
10:15 - and then let's make a ground sprite
10:18 - so once again width and height 40 i'm
10:21 - going to create
10:22 - and then let's make our ground so my
10:25 - ground is going to be i can even add
10:27 - more colors if i wish but i'm pretty
10:29 - happy with these
10:32 - there we go
10:33 - so we made our ground
10:35 - so now i'm going to use ground so once
10:36 - again i'm just going to use the string
10:38 - of ground
10:39 - and click run
10:42 - and there we go
10:43 - we have added
10:44 - our ground
10:46 - this is looking great
10:49 - the next thing i want to do
10:52 - now
10:53 - i think we should apply gravity to the
10:55 - sprite so i could do so easily by using
10:58 - body
10:59 - like so
11:00 - and clicking run
11:02 - and there he goes he falls with gravity
11:05 - we have just applied gravity to the
11:08 - sprite
11:10 - but obviously we don't want him to fall
11:11 - through we want him to fall on the
11:13 - ground right that makes sense so i can
11:15 - now assign the component solid
11:19 - to
11:20 - the ground
11:22 - just like so
11:23 - and he stops
11:26 - now
11:26 - let's add an enemy
11:28 - so i've decided that i want anything
11:30 - with the at sign to be an enemy so let's
11:33 - grab the enemy
11:36 - and then i'm gonna use
11:38 - so we're gonna have to make another
11:39 - sprite that's gonna be the enemy um i'm
11:42 - not quite sure what enemy we're going to
11:44 - have so i'm just going to
11:47 - create
11:49 - a little enemy
11:51 - i'm not sure what an enemy looks like so
11:54 - i'm just going to create something um
11:59 - of course feel free to
12:01 - take your time with this i'm just going
12:04 - to create a little bumblebee thing
12:06 - because you know
12:09 - for some reason i think bumblebees are
12:11 - now
12:12 - enemies don't be deceived by their cute
12:15 - little looks
12:17 - and let's give it a little face
12:22 - so there we go there's my little enemy
12:25 - now
12:26 - so i'm going to use enemy
12:29 - like so
12:30 - and click
12:31 - run
12:32 - so we've added our enemy i can have as
12:35 - many enemies as i wish on the board so
12:38 - i'm just going to click run again
12:40 - and there you go
12:41 - so i don't actually want that many let's
12:43 - just keep one for this tutorial and
12:45 - perhaps let's scale them down so i can
12:47 - apply scale here too to scale 0.5
12:52 - brilliant
12:54 - okay so we've added our sprite we've
12:56 - created our game board the next thing i
12:59 - want to show you is how to move a little
13:01 - sprite across the boot
13:04 - so to do this i'm going to have to
13:05 - assign this to something so i can keep
13:07 - reusing it in our code
13:10 - so let's perhaps assign this to const
13:13 - layer
13:15 - now
13:16 - using key down
13:19 - i'm going to pass through right and then
13:21 - pass through what i want to happen if i
13:23 - press the right arrow on our keyboard so
13:26 - what i want to happen i'm just going to
13:28 - function
13:31 - so when we press right
13:32 - this is going to happen this function is
13:34 - going to be called
13:36 - so what i want to happen is i want to
13:38 - grab the player
13:41 - i want to use the kaboom method of move
13:44 - and once again just like with position
13:46 - i'm going to pass through an x and y
13:48 - axis
13:49 - um let's save this as move speed
13:55 - let's make it 200. so we can reuse this
13:57 - in our code
13:58 - so i want to i want this to be the
14:01 - x-axis and i don't want a sprite to move
14:05 - up or down i only want them to move left
14:08 - or right so that is what i've done here
14:10 - by passing a value to the x-axis of 200
14:13 - and 0 to the y-axis
14:15 - so now if we run this
14:17 - and i'm just going to press the right
14:19 - button
14:20 - there it goes
14:22 - and there it goes
14:24 - so now i can actually copy this
14:28 - and do the left
14:30 - and for left i simply need to put a
14:32 - minus so that it goes the other way
14:35 - on the x axis
14:37 - so now
14:39 - there we go
14:40 - our sprite is moving left and right
14:44 - i can also use key press the choice is
14:47 - totally up
14:49 - to you
14:51 - now
14:52 - we've covered how to make a sprite we've
14:54 - covered how to add the level we've
14:56 - covered how to move our sprite i'm going
14:58 - to show you one last thing before we
14:59 - move on and that is what happens when
15:01 - two things collide
15:03 - so i'm going to do that down here
15:06 - i'm going to grab our player and if he
15:08 - collides so this is another coupon
15:10 - method with anything with the tag of
15:13 - dangerous
15:15 - so i'm just gonna add the dangerous tag
15:17 - let's make this perhaps a little bit
15:20 - dangerous
15:25 - tag to our enemy so we can reuse this
15:28 - tag we can put this to a lot of
15:30 - different
15:31 - sprites but i'm just going to give it to
15:33 - the enemy for now so if our player
15:35 - collides with anything with the tag
15:38 - dangerous
15:39 - well what do i want to happen let's pass
15:41 - through a function
15:44 - i want a player to be destroyed
15:47 - so
15:48 - let's do that now let's also perhaps add
15:50 - gravity to the enemy
15:56 - and if our player collides with anything
15:59 - with the tag of dangerous well i want to
16:02 - destroy it so i'm going to use the
16:04 - method of destroy and just pass through
16:06 - our player so let's run that now
16:09 - both of them fall i crash into the ferry
16:12 - and i disappear
16:14 - my little sprite gets destroyed
16:17 - great so we have definitely covered all
16:19 - the basics that need we need to get
16:22 - started on our tutorials please feel
16:24 - free to have a pause here uh and have a
16:27 - play around in your replica boom
16:29 - environment before we get going just to
16:31 - feel a little bit more comfortable about
16:33 - doing stuff for yourself
16:35 - okay
16:36 - so once you are ready i think it is fine
16:39 - for us to carry on let's do it let's
16:42 - start off with space invaders best
16:50 - okay so let's do it let's build space
16:53 - invaders once again using the kaboom gs
16:56 - environment in replit
16:58 - so i'm going to start off with making
17:00 - another rebel so once again i'm just
17:02 - going to click here
17:04 - and i'm just going to click ok
17:06 - and once again a random name is
17:09 - generated for me feel free to change it
17:11 - if you wish or keep it the choice is up
17:14 - to you
17:15 - and i'm just going to click create reply
17:19 - great
17:20 - so now we are here let's get going the
17:23 - first thing i'm going to do is actually
17:26 - start by perhaps creating our map
17:30 - so
17:31 - just like we did in the intro i'm going
17:32 - to use the kabum method of add level and
17:35 - i'm just going to open up an array for
17:38 - our map
17:39 - and an object for our config
17:42 - so now
17:43 - in here let's start creating our map
17:47 - so
17:48 - i'm just going to put a few of these so
17:51 - i think let's have a left wall
17:54 - and then let's have some space invaders
17:56 - so i'm just going to decide that i want
18:00 - the little hat to be a space invader
18:03 - so i'm just going to put a few of these
18:05 - let's have 10 1 2 3 4 5 6 7 8 9 10
18:10 - or perhaps more what do you think let's
18:12 - put a few um the choice is totally up to
18:14 - us and then some spaces and then i'm
18:17 - going to have an and sign our ampersand
18:20 - for the uh
18:21 - right wall because we need to tell
18:24 - our code
18:26 - what is going to be the left wall and
18:27 - the right wall for collisions
18:31 - i'm just gonna have three rows of these
18:33 - space invaders
18:34 - and the rest
18:36 - is just going to be
18:38 - a left wall
18:40 - and
18:42 - the right wall
18:44 - so just like so
18:46 - i'm gonna have a few of these because
18:48 - it's gonna be quite a big board for us
18:51 - so we have a lot of space
18:53 - to
18:55 - play around with
18:59 - okay
19:04 - now let's do our config
19:06 - so i'm going to decide that i want each
19:08 - of the elements on my board to let's say
19:12 - have a width
19:14 - of
19:15 - let's say 30 and i'm going to make the
19:17 - height 20
19:21 - or so or 22
19:23 - and then
19:24 - i'm going to define what everything is
19:26 - on my board so perhaps let's create the
19:28 - sprites first because we need a space
19:32 - invader like so
19:35 - and let's make it width 30 height to 22
19:39 - and click create
19:40 - so now i'm just going to create my
19:42 - little space invader guy once again like
19:44 - please feel free to make your spins
19:47 - vader look however you wish
19:50 - this is how i've chosen to make
19:53 - mine
19:55 - of course the choice
19:56 - is completely
19:58 - up
20:00 - to you so similar to like we did before
20:02 - but here's my little space invader it's
20:05 - going to give him some
20:07 - little eyes
20:13 - and great
20:14 - so i'm happy with that now i'm also
20:16 - going to create
20:18 - a left
20:21 - wall
20:22 - so perhaps let's just use wall for this
20:25 - because we can reuse it and width 30
20:28 - height 22 and click create
20:30 - and for this i'm just going to color it
20:32 - black
20:35 - fantastic
20:36 - so now let's go to adding
20:39 - our sprites so i've decided that i want
20:41 - these little hats to be our space
20:44 - invader so this is the syntax i open up
20:47 - an array and i'm going to use the kaboom
20:49 - method of sprite
20:51 - to then find the space invader so i need
20:53 - to get the space invader by using the
20:55 - string of whatever it's called
20:58 - and then
20:59 - so that is the first one and then let's
21:02 - also make a
21:04 - so we decided this we want to be a left
21:06 - wall well i can reuse the sprite for
21:08 - wall
21:12 - so i'm just going to open up an array
21:14 - and use sprite and then pass through
21:16 - wall like so even though i don't know
21:18 - why wall
21:22 - so we have our wall i'm actually going
21:25 - to give this the tag of left wall
21:30 - so we can use it in our project so left
21:34 - wall and i'm going to copy this
21:37 - and then this time i'm going to use the
21:39 - ampersand and this is going to be the
21:42 - right
21:43 - wall so just like so now if i run this
21:48 - there we go
21:50 - so there are little space invaders
21:54 - there are walls i can maybe let's scale
21:57 - this
21:59 - down a little bit or perhaps maybe let's
22:01 - just get rid of that because we don't
22:02 - really need it and click run
22:07 - so yeah perhaps let's scale everything
22:09 - down um i'm gonna scale everything down
22:13 - just up here
22:15 - now i can actually change the scale of
22:17 - this whole game board by going to kaboom
22:20 - and scaling it down to just one because
22:22 - at the moment we are double the size and
22:24 - clicking run okay so there we go i think
22:27 - that looking that is looking a lot
22:29 - better
22:30 - and we can see our whole board
22:33 - fantastic
22:34 - the next thing we're going to do is add
22:36 - our player so const player
22:41 - and then using the add method again so
22:43 - just like we did in the intro i am going
22:46 - to add the player so this is going to be
22:48 - a sprite that is going to be a space
22:52 - ship
22:53 - now let's go ahead and create our little
22:55 - spaceship so once again i'm just going
22:57 - to click space ship and create it with a
23:00 - width of 30 and a height of 22 and click
23:03 - create
23:04 - now what how should we make our
23:06 - spaceship let's make it orange
23:16 - and i'm just going to make it
23:20 - look a little bit like so please feel
23:22 - free to of course
23:24 - make this however
23:26 - you
23:27 - wish but i'm happy with that
23:30 - so now
23:37 - i've got my spaceship
23:40 - i'm just going to get rid of this again
23:46 - i'm actually going to give it a position
23:48 - so i want to position it in the middle
23:50 - of my screen so i'm going to use width
23:56 - divide by two
23:59 - and height
24:02 - also divided by two
24:05 - just like that
24:07 - and then
24:08 - oreo
24:10 - gin
24:11 - the string center
24:13 - and click
24:16 - one okay so now my little player is in
24:20 - the center
24:21 - um i also might want to scale it up if i
24:24 - wish i don't think i do at the moment i
24:27 - do however want to scale my invaders
24:29 - because i don't want them to take up the
24:31 - whole square so i'm just going to do
24:33 - scale 0.7
24:35 - like so and click run
24:39 - great so now they are appearing a little
24:41 - bit smaller
24:43 - the next thing i want to do is actually
24:45 - assign keystrokes to my player so i'm
24:48 - going to do key down
24:51 - so this is to make our player move
24:54 - left and if i click left well what do i
24:56 - want to happen let's put a function and
24:58 - find out
25:00 - if i press left i want to grab the
25:02 - player i want to move it and then let's
25:04 - have the move speed so const
25:08 - move
25:10 - speed and let's say that is 200 so now i
25:13 - can use the move speed
25:16 - and put zero and because we're moving
25:17 - left this needs to be a negative
25:19 - and let's do the same for moving right
25:21 - so i'm just going to replace this with
25:23 - right
25:24 - and then not make this negative
25:27 - so let's check that out
25:34 - if i move
25:35 - or press my little keys
25:37 - there we go our player is moving left
25:40 - and right this is pretty cool
25:45 - now the next thing i want to do is add a
25:48 - score
25:49 - so i'm going to do this the first thing
25:51 - i'm going to do actually perhaps let's
25:52 - move on constant to the top of the file
25:55 - i'm just going to paste it in here
25:58 - and i'm going to get layers so in my
26:02 - layers let's open up some
26:04 - our array i'm going to have the object
26:06 - layer for where all my objects are a ui
26:09 - layer where i can score store delay swa
26:12 - store the score without affecting
26:14 - everything on my board
26:16 - and then i'm just gonna make the default
26:20 - the object player so if it's not sure
26:22 - that is the default layer
26:25 - great
26:27 - now that we have that let's add our
26:28 - score
26:30 - down here i'm going to say quant score
26:32 - i'm going to use the add
26:34 - method so the
26:36 - kabum method to add this time i'm going
26:39 - to add the text so i'm going to start
26:41 - off with zero
26:45 - and then position and i'm going to just
26:47 - put in 50 50
26:50 - to position the score and then
26:53 - if we want we can scale it up but let's
26:55 - just see how it looks i'm going to put
26:56 - it on the ui layer so that is how we
26:59 - will put it on the ui layer and finally
27:02 - i'm just going to have an object of
27:03 - where the score value is going to be i'm
27:06 - going to start off with 0.
27:09 - so just like that
27:10 - so now if i run this
27:13 - we get our score you can sort of see it
27:16 - it's a bit small i might actually scale
27:18 - this up so scale by three just to show
27:21 - you where it is
27:24 - okay so now it's a lot bigger you don't
27:27 - have to keep it the size you can also
27:29 - move it if you wish
27:31 - so we've got our score the next thing i
27:34 - want to do is
27:35 - perhaps let's start um
27:37 - moving the
27:38 - [Music]
27:40 - uh invaders before we start doing
27:42 - anything else so like adding a timer or
27:44 - let's add the let's add the timer
27:46 - okay so const timer
27:49 - equals and once again i'm going to add
27:51 - open up an array
27:53 - uh i'm also going to start with text
27:55 - thing zero
27:57 - and then let's position it so i'm just
27:59 - going to position it
28:04 - below
28:06 - the
28:07 - text
28:08 - the score text
28:11 - let's make it scale just by two this
28:14 - time
28:15 - and again i need to add this to the ui
28:17 - layer
28:18 - and i'm going to put the
28:22 - oops
28:26 - and let's have an object that has the
28:29 - time which is the
28:32 - time
28:33 - left
28:34 - so const time left let's say we want
28:39 - i don't know 14 seconds for now so i'm
28:42 - just going to put it 14. we can of
28:44 - course always change it
28:46 - so there we have that
28:49 - let's click
28:50 - run
28:53 - so that is our score and that is our
28:55 - time left let's actually make our timer
28:58 - move down in time now so i'm going to
29:00 - grab the timer i'm going to use action
29:03 - so that is another kabum method and
29:06 - action essentially runs every um i'm
29:08 - just going to show you the documentation
29:14 - action actually gets called every frame
29:17 - so okay just keep that in mind i want
29:20 - the timer to
29:22 - so let's get up our curly braces
29:24 - um
29:26 - it's gravity time is time so this right
29:29 - here
29:30 - and i'm just going to make it
29:33 - decrement
29:35 - by delta time
29:36 - this is delta time since last frame so
29:40 - just remember that
29:42 - and now i want the timer text
29:44 - to be the timer's
29:47 - time
29:49 - this is going to be delta time
29:55 - click run
29:56 - so now it's counting down from 14 as we
29:59 - said we want it to be from 14 seconds
30:01 - let's perhaps shorten it because that's
30:03 - too many
30:04 - points after um that i need so i'm just
30:07 - going to fix that to a fixed
30:11 - uh length so two fixed
30:15 - two
30:18 - there we go
30:20 - so that is looking pretty cool that is
30:21 - our timer and of course we need to write
30:23 - what happens when we run out of time so
30:25 - if
30:26 - uh the timer time
30:29 - is suddenly smaller than or equal to
30:32 - zero well
30:34 - what do we want to happen we want to
30:36 - lose so we're going to write a loose
30:38 - scene in a bit um
30:40 - or we can write it now sure why not go
30:43 - to the this is how you go to another
30:45 - scene go to a lose scene and take the
30:48 - score
30:49 - with you to score
30:51 - value
30:53 - so let's go ahead and write our loose
30:54 - scene
30:55 - so in here we are in the main scene i'm
30:58 - going to add a loose scene just like so
31:01 - and my loose scene is simply going to be
31:03 - so i'm just going to use
31:05 - add
31:08 - and i'm going to add the text
31:11 - of
31:12 - the args so augs is anything that we
31:14 - pass through into this scene args school
31:19 - so we're gonna add these score
31:22 - uh as text and we're gonna let's also
31:24 - position this urge origin
31:26 - center
31:28 - um
31:29 - let's make it really big let's make it
31:31 - scale ten
31:32 - and then let's put the position let's
31:35 - also grab the width of the screen
31:37 - divided by two and grab the height of
31:40 - the screen and divide it by two
31:45 - cool
31:46 - so that is
31:48 - oops really
31:50 - it
31:51 - so now i'm just going to make the time a
31:53 - lot shorter because i don't really want
31:55 - to wait
31:56 - around for that long so
32:04 - great so um we do need to fix this
32:06 - however i am going to just carry on
32:08 - because we're not actually adding
32:09 - anything to the score quite yet
32:11 - nothing's happening with the score so
32:12 - we'll go back to this uh in
32:15 - a
32:15 - bit
32:16 - so i'm just going to leave this as 100
32:19 - for now while we continue coding okay so
32:21 - it's just going to keep uh running from
32:24 - 100 just ignore it for now
32:27 - so we have that
32:29 - um perhaps actually let's that's quite
32:31 - distracting i'm just going to comment
32:32 - that out so there we go don't forget to
32:35 - uncomment that out later but for now i'm
32:38 - just going to keep it like so and then
32:40 - comment this out uh too
32:43 - okay
32:45 - great
32:46 - now let's get our space invaders moving
32:49 - left and right i think um
32:51 - yeah i think that'll be fun let's do it
32:54 - so
32:55 - i am going to use uh for this i'm going
32:59 - to use action so that's another kabum
33:01 - method and i'm going to grab anything
33:03 - with the tag space
33:06 - invaders so just make sure that the
33:08 - space invader has that tag which it
33:10 - doesn't let's go ahead and add that tag
33:13 - here so i'm just going to put the tag of
33:15 - space
33:16 - invader space invader
33:20 - so anything with the tag space invader
33:23 - well i'm going to pass through s for the
33:25 - space invader into my function because i
33:28 - want the space invader to move
33:30 - at a uh speed
33:33 - okay so what should we make the speed
33:36 - um const
33:40 - space
33:41 - well let's just go invader speed that's
33:44 - fine
33:46 - and let's just make it 200 for now
33:49 - so i wanted to move on the x-axis with
33:52 - invader's speed
33:53 - so
33:54 - let's do it
33:56 - let's see our space invaders move
34:04 - okay
34:04 - so they're moving they're moving really
34:06 - fast maybe let's make it a hundred but
34:08 - they're moving off the board
34:10 - so this is why i wanted to have a left
34:12 - and right wall because i need to write a
34:14 - collides function
34:16 - so i'm gonna do so like this i'm gonna
34:18 - get collides and if anything with the
34:21 - tag space invader collides with anything
34:25 - with the
34:28 - left wall
34:30 - or let's start with the right wall first
34:31 - maybe
34:35 - the tag right ball well
34:38 - what do i want to happen well let's get
34:40 - a function and find out
34:42 - i want to change the speed
34:45 - of the invader speed so i'm gonna get
34:47 - const
34:48 - current speed
34:52 - and for now
34:57 - let's have current speed as
35:02 - the invader speed so i can just use
35:04 - current speed here
35:07 - and if there is a collision well what do
35:10 - i want to happen i want to get the
35:12 - current speed and i want to change it to
35:15 - negative
35:16 - invader speed okay so i'm going to
35:18 - change the speed and i'm going to use
35:20 - every and for every space
35:22 - invader so i'm going to grab all the
35:24 - space invaders
35:27 - and i'm going to
35:29 - so not only change the direction i want
35:31 - them to move down
35:33 - so i'm just going to pass through object
35:37 - we can call this as the space invader
35:39 - again if you feel more comfortable so we
35:41 - could do that for every space invader
35:44 - well i want this space invader to move
35:46 - down so this time i need to affect the
35:48 - y-axis
35:49 - and i'm just going to do level down
35:54 - so let's define level down const
35:57 - level
35:59 - down
36:00 - and let's say 50.
36:03 - so let's check it out
36:09 - ah yes of course this will change so we
36:11 - need to make this a let thank you for
36:14 - letting us know
36:16 - okay great
36:18 - so now we just need to do the other side
36:20 - perhaps let's make the move down more by
36:22 - a hundred and i'm just going to copy
36:24 - this
36:25 - and i'm just going to paste it and
36:27 - change it that if they collide with the
36:28 - left wall well i just want the space
36:31 - invader speed to be not negative anymore
36:33 - but i still want each of them to move
36:35 - down
36:36 - so let's try that
36:38 - okay great
36:40 - fantastic
36:42 - i still think this should perhaps be
36:43 - bigger so let's try that again
36:46 - but it's totally up to
36:48 - you
36:48 - okay you can make this as hard or as
36:50 - easy as you wish
36:52 - i'm just going to increase the board
36:54 - size here because i think it needs to be
36:56 - a bit longer to
36:57 - make sure that our
37:00 - um spaceship fits
37:03 - in it
37:04 - so
37:05 - there we go that's better fantastic
37:09 - so we've got our little invaders moving
37:11 - down the next thing i want to do is
37:14 - start spawning bullets
37:16 - so
37:17 - let's do that now actually perhaps
37:19 - that's right what happens when the
37:20 - player collides with the space invader
37:22 - yeah let's do that so i'm just going to
37:24 - refresh
37:26 - if the player
37:28 - overlaps with a space
37:32 - invader well once again what do i want
37:35 - to happen well
37:37 - i want to
37:38 - go
37:40 - to the lose scene so once again i'm
37:42 - going to go to the lose scene just like
37:45 - so
37:47 - i'm going to pass through whatever the
37:48 - score is score
37:52 - value
37:58 - value
38:00 - okay
38:01 - so that should work and also if the
38:06 - so action if the space invaders suddenly
38:09 - go too low so just in case they miss my
38:12 - um
38:14 - spaceship space invader
38:18 - what do i want to happen well
38:20 - i'm going to grab this space invader
38:23 - so if they suddenly get like below a
38:25 - certain so obviously they've just gone
38:27 - off because there's no wall if they get
38:29 - around here i want them to um
38:34 - i want us to go to the lucien as well so
38:36 - if
38:37 - uh the space invaders position y
38:41 - is suddenly
38:43 - smaller than sorry larger than
38:46 - the
38:47 - or equal to than the height itself so
38:50 - you could do it so it's the whole way or
38:52 - you could do height divided by two it's
38:55 - totally up to you that looks like
38:57 - halfway to me just about
39:02 - then we want to again just go to the
39:05 - loose
39:06 - scene
39:10 - fantastic so let's run that
39:12 - and let's see how we do
39:16 - so while that is happening i'm just
39:18 - going to carry on because i want to
39:20 - spawn some bullets
39:22 - so perhaps
39:24 - let's just move this to the top of the
39:26 - file as well just to keep everything
39:28 - neat
39:30 - okay
39:31 - so you've done all this time to spawn
39:33 - some bullets
39:44 - okay great so we are getting a massive
39:46 - score show up we've got zero score um
39:48 - that is looking good as soon as we
39:50 - collide with the uh spaceship we go to
39:53 - the losing scene so let's see
39:56 - because i was passing this through
39:57 - incorrectly so that should be it
40:01 - now let's spawn some bullets
40:04 - so
40:05 - once again where we have this here
40:09 - i'm going to do key press because if we
40:12 - press a key so i'm going to do if we
40:15 - press the space
40:16 - bar
40:19 - i want to spawn a bullet so i'm going to
40:21 - write a function called spawn bullet for
40:24 - this just going to do it up here
40:26 - function spawn
40:29 - bullet like so i'm going to pass through
40:33 - [Music]
40:37 - the position of the player
40:39 - to p for player i'm just going to add a
40:42 - rectangle so i could do so by using rect
40:45 - so that is another kabum method and i'm
40:47 - going to make the rectangle
40:49 - that big and then i'm going to position
40:51 - it to wherever the player is
40:55 - and then origin
40:59 - center
41:02 - let's give it a color so color
41:06 - 2.5 0.5 one
41:11 - just gonna space this out so it's more
41:13 - beautiful for everyone
41:21 - and i'm also going to give it the tag of
41:23 - bullet for later because we we need to
41:25 - know if we collide with the bullet
41:28 - so there we go that's the function spawn
41:30 - bullet and if i press key space i'm
41:33 - going to use that and i'm going to pass
41:35 - through whatever the player's position
41:37 - is at the time
41:38 - so player
41:40 - position
41:44 - and i'm just going to well let's do this
41:46 - for now we need to do add actually we
41:49 - need to add some position
41:51 - okay
41:52 - so let's try that
41:57 - okay
41:58 - so there we go we are spawning a bullet
42:01 - now if i want to make that a little bit
42:02 - higher i could do something like this
42:09 - see and now the bullet is being spawned
42:11 - a little bit higher than me
42:14 - cool
42:17 - now let's get the bullets to move right
42:19 - so i'm going to do that now i'm going to
42:21 - use action so just like that to pass
42:24 - through anything with the tag of bullet
42:26 - to anything with the tag of bullet
42:28 - that's why we give the bullet a tag and
42:30 - b for bullet is what i'm going to pass
42:32 - through into the function
42:33 - now i'm going to move the bullet to grab
42:37 - b and then use the kaboom method of move
42:39 - i'm going to move it
42:42 - minus
42:43 - and then we need a bullet speed so this
42:45 - is the y-axis
42:47 - bullet
42:49 - speed
42:51 - let's make it 400.
42:53 - okay so i'm going to grab the bullet
42:55 - speed i'm going to put minus so it goes
42:57 - up
42:58 - on our board because remember x-axis
43:01 - y-axis
43:02 - now
43:05 - if
43:07 - i'm just going to destroy the bullet
43:08 - once it's out of the scene okay just for
43:11 - performance
43:12 - issues in case it has any performance
43:14 - issues so i'm gonna grab if the uh
43:17 - bullet's position
43:19 - y position is suddenly smaller than zero
43:22 - well then i want to destroy the bullet
43:25 - okay
43:27 - great
43:28 - so
43:29 - let's try that
43:32 - oh amazing
43:36 - and now let's actually write something
43:38 - for the collision so collides
43:40 - and i'm going to grab the
43:42 - bullet i'm also going to grab these
43:45 - anything with the tag of space
43:47 - invader
43:49 - and then let's pass through a b and an s
43:51 - one for bullet and one for space invader
43:54 - and what do i want to happen well i want
43:56 - to destroy the bullet i also want to
43:59 - destroy the space invader and i also
44:02 - want to add one to the score so score
44:04 - value
44:05 - plus plus just use the increment
44:07 - operator and let's actually show
44:09 - the uh score value and the text because
44:11 - we hard coded it as a zero string zero
44:14 - before
44:15 - i can also add a cam shape so i'm just
44:17 - going to do that now let's shake the
44:19 - camera can shake and let's run it
44:23 - so now poor
44:25 - cow shake
44:27 - come shake
44:30 - how fun is that
44:32 - amazing
44:34 - um what's up
44:38 - these score text is not updating though
44:41 - why is that score value right sorry the
44:44 - score value needs to be the score text
44:48 - we okay how fun is
44:52 - that we can of course make the game
44:54 - harder or easier um just do it however
44:57 - you wish you can add more space invaders
44:59 - too it is completely up to you
45:03 - so now let's uncomment the timer as well
45:07 - i'm just going to move the constants to
45:09 - the top just because
45:11 - i think that is best practice
45:16 - and then did we have another one bullet
45:18 - speed
45:21 - and then
45:22 - of course please feel free to tidy this
45:24 - up too i think that is looking okay
45:26 - though
45:28 - and click run
45:30 - great uh let's make the time left
45:34 - maybe 30.
45:35 - so like i said you can do this by time
45:38 - you can do it however you wish you can
45:40 - add more space invaders you can uh slow
45:43 - down the bullet speed you can do so so
45:46 - much um it really is up to you let's
45:49 - actually move that timer out a little
45:51 - bit because i think
45:58 - so yeah the x-axis i think i said y
46:00 - before the x-axis let's make it a
46:02 - hundred
46:05 - okay great
46:07 - [Music]
46:08 - now i'm gonna do one last thing before
46:10 - we go and i'm just gonna change the
46:11 - background to be black so i don't want
46:14 - to clear color i want a black
46:16 - background
46:24 - to run
46:35 - okay and there we have it
46:37 - we have now finished our game it looks
46:39 - really fun
46:40 - like i say this is just the basics to
46:43 - get you going we've covered all the
46:44 - functionality that you need but it is up
46:47 - to you to really make this game your own
46:49 - take it to the next level you know add
46:51 - another level if you want and more space
46:53 - invaders um of course add more scenes if
46:57 - you wish there really is so so much you
46:59 - can do with this game
47:02 - uh let's just check that the lose works
47:04 - and it does we get the score showing up
47:07 - if our space invader collides with our
47:10 - spaceship
47:11 - so that is it um one thing that i would
47:13 - suggest is perhaps add a winning scene
47:16 - so if you shoot all the invaders that's
47:17 - something you can do uh i've already
47:19 - mentioned adding new
47:21 - levels that is something we're going to
47:22 - cover in the next tutorial so if you
47:24 - want to learn how to add more levels
47:27 - please stick around mario up next
47:38 - okay
47:39 - so well done creating space invaders now
47:42 - it's time to move on to creating mario
47:44 - again in the kaboom replit environment
47:47 - as you can see i'm already in my replica
47:50 - kaboom environment if you have skipped
47:53 - ahead to this section i would recommend
47:55 - watching the basics section in order to
47:58 - understand how to get to this point
48:01 - once again i'm just gonna check that i
48:03 - am on kaboom version five
48:05 - if you are on a later version of kaboom
48:07 - currently then please do refer to the
48:10 - documentation if you feel something
48:13 - isn't working quite right to see what
48:15 - has been updated since
48:17 - okay
48:18 - so great i'm actually just going to
48:20 - start off with our scale being one and
48:24 - let's
48:25 - do it
48:26 - the first thing that i'm going to do is
48:28 - actually load up my sprites
48:30 - so in space invaders we drew the sprites
48:34 - this time i'm going to upload the
48:35 - sprites
48:36 - so i can do so in the kaboom replit
48:39 - environment quite easily just by this
48:41 - button right here
48:43 - so as you can see i've already created
48:45 - all my sprites
48:47 - the next thing i'm just going to do is
48:48 - click them to
48:50 - upload them like so
48:58 - so there we have our block you can see
49:00 - the name of the file is exactly what our
49:03 - environment calls our sprite
49:06 - i can then do a blue brick
49:08 - so just like so
49:10 - a blue evil shroom
49:14 - some blue steel
49:17 - and then a blue surprise
49:22 - a brick
49:25 - a coin
49:29 - an evil shroom one
49:33 - i'm not gonna have evil shroom two let's
49:35 - have mario standing
49:38 - a mushroom
49:42 - a pipe left
49:46 - a pipe
49:48 - right
49:50 - a pipe top left
49:57 - and a pipe
50:02 - top right
50:04 - side so we don't need all of them
50:07 - and then a question box
50:11 - and then an unboxed box so hopefully
50:14 - that should be it
50:16 - this is looking good
50:19 - the first thing i'm going to do is add
50:21 - my map so let's do it
50:23 - i'm simply going to write const map
50:26 - like so open up an array
50:29 - so just like we did in space invaders
50:32 - and i'm just going to draw my map how i
50:34 - envision it for mario so i think that
50:37 - should be okay
50:39 - please make sure to keep everything in
50:41 - the quotation marks for this to work
50:45 - so i'm just gonna keep pasting
50:50 - just like so
50:57 - okay and then i'm going to create a
50:59 - ground
51:00 - i'm not sure which ones i want to use
51:02 - for the ground but i'm just going to put
51:04 - the equal signs as a ground for me for
51:07 - now on
51:08 - and then perhaps some
51:11 - spaces too
51:12 - so there we go
51:15 - that is looking good
51:17 - the next thing i want to do is decide
51:20 - where everything else goes on my little
51:23 - map
51:24 - so i'm going to have some pipes here
51:26 - once again i am using symbols which i'm
51:28 - going to assign values to in a bit
51:31 - so there is my pipes
51:34 - i'm also going to have some mushrooms so
51:38 - what should i use for
51:40 - the
51:42 - evil shroom sorry let's use these little
51:44 - things
51:46 - and then i'm going to have let's say one
51:50 - two
51:51 - three four one two three
51:54 - four up here
51:57 - let's have
51:58 - a
51:59 - coin surprise
52:02 - and
52:02 - then
52:04 - perhaps some more bricks
52:07 - so let's
52:09 - do a brick
52:11 - and then another surprise this time
52:13 - let's say it's a mushroom surprise
52:16 - another brick and then a coin surprise
52:19 - and another brick
52:22 - so that is looking good i do think we
52:24 - perhaps need to make this a little bit
52:25 - wider so i'm just going to add some
52:31 - length to our
52:33 - grid
52:35 - okay
52:36 - so just like that you can feel free to
52:39 - make this as big or as small as you wish
52:42 - that is all the button
52:45 - okay so we have our map
52:48 - let's carry on
52:50 - now to add this map i'm going to use a
52:53 - kaboom method called add level which
52:55 - takes two things the first is an array
52:57 - which is our map and the second is an
53:00 - object that is our level config
53:02 - so we already have our map so i could
53:04 - just pass through that array like so and
53:06 - then let's do our level config
53:09 - so
53:10 - i'm actually going to
53:13 - define
53:14 - our level config up here let's call it
53:17 - const level
53:19 - config
53:20 - you can call it whatever we wish in
53:23 - camel case i have chosen to do this and
53:25 - we know that it's an object so now i can
53:28 - just replace this with that just like we
53:31 - did with the map
53:33 - now that we have our level config we
53:35 - need to do a few things i need to define
53:37 - how big and how small so sorry how wide
53:40 - and how high i want each of these
53:42 - elements on my board
53:44 - i'm going to say i want each of them to
53:46 - be 20
53:47 - by 20
53:48 - pixels
53:49 - now let's start defining things so i'm
53:52 - going to use this because i already know
53:54 - that this is a block so i'm gonna this
53:56 - is the syntax for defining what the
53:58 - elements are i'm gonna open up my square
53:59 - brackets i'm gonna use sprite just like
54:02 - that and i'm gonna pass through
54:05 - the block as that's what i want here
54:09 - so that is going to be my block
54:12 - let's carry on defining some more things
54:15 - while we are at it so we've got our
54:17 - block i'm going to say that the
54:22 - anything with a dollar sign is going to
54:24 - be a coin
54:27 - anything let's carry on so we've got
54:30 - that
54:34 - we also want to have a surprise
54:38 - so this is going to i'm going to use the
54:41 - sprite
54:43 - of surprise
54:46 - so here we have the surprise
54:50 - oh
54:53 - do we have the surprise
54:55 - the question is the surprise
54:57 - so that is what we have i can actually
55:00 - should probably even call this
55:01 - question and not surprise so quests
55:06 - just like so
55:07 - and i'm going to actually say that
55:09 - anything with this sign specifically is
55:11 - going to be a coin
55:13 - so
55:14 - price
55:17 - okay
55:18 - so we've got that and anything i'm just
55:20 - going to copy this because i still want
55:22 - to use the same sprite however anything
55:24 - with
55:25 - this sign now
55:27 - i want to be a
55:29 - mushroom surprise
55:32 - um so perhaps let's make this a little
55:33 - bit smaller for now because we don't
55:35 - really need it
55:38 - okay
55:39 - so we've done that the next thing that i
55:42 - want to do
55:45 - well i'm just going to probably add all
55:46 - of these for now that's probably the
55:48 - easiest thing to do
55:49 - so anything with this it's not on the
55:51 - board i want to be the unbox so i'm
55:54 - simply grabbing the string of unboxed
55:57 - and i don't think this needs anything at
55:59 - the moment
56:01 - so i'm just going to get rid of that
56:03 - so we've got unboxed the next thing i
56:05 - want to do is the pipes so this is going
56:08 - to be
56:09 - pipe bottom left
56:13 - or just pipe left actually so we've got
56:16 - a pipe left
56:21 - let's also have a pipe
56:24 - right
56:27 - i'm just going to move this up
56:33 - now we need the top pipe parts of the
56:36 - pipe
56:37 - pipe
56:38 - top
56:41 - left side
56:46 - making sure that it's exactly spelt
56:48 - exactly the same
56:50 - and then
56:52 - pipe top
56:54 - right
56:56 - side and that is going to be a plus
56:59 - okay so we've got that we also want to
57:02 - have an evil shroom
57:05 - so once again i'm just going to copy
57:07 - that
57:08 - and then we have the little hats as the
57:10 - shrooms so i'm just gonna say this is an
57:14 - evil shrimp
57:16 - i have the number one in there um we
57:18 - don't have another one for now so i just
57:19 - have to make sure that i've spelt it
57:21 - exactly the same
57:23 - so we've got our evil shroom the next
57:25 - thing i want to add is stuff that we
57:27 - don't actually have yet
57:29 - so
57:30 - i'm just going to say
57:35 - that this is going to be a mushroom
57:38 - we have a bunch of blue things for the
57:40 - next level but i think i'm going to
57:42 - leave them just for now
57:44 - so if i run this now
57:48 - here we go
57:50 - let's get rid of this
57:51 - because we want to be able to see our
57:53 - board
57:56 - fantastic
57:58 - i do need to scale some things in order
58:00 - for everything to
58:02 - fit for
58:03 - the purpose of the tutorial so i'm just
58:06 - going to get rid of some of these now
58:10 - um of course like i said you can make
58:12 - this as big or as little
58:15 - as you wish in your free time but as
58:18 - this is a tutorial i want to be able to
58:20 - show you everything comfortably
58:23 - um
58:24 - so yeah feel free to make this your own
58:27 - when you can and when you finished
58:30 - coding along
58:32 - with me
58:36 - okay
58:38 - so i think that is much more manageable
58:42 - let's
58:44 - carry on um i'm gonna actually get rid
58:46 - of maybe one more just just because i do
58:49 - want everything to fit comfortably
58:51 - if i'm being honest
58:54 - okay
58:59 - okay
59:06 - okay
59:10 - so that's looking a lot better now i
59:12 - don't want these to be these bricks and
59:14 - i want to scale these so i've done this
59:16 - on purpose so that i can show you how to
59:18 - scale sprites directly from the config
59:23 - so i can now use scale
59:25 - 0.5
59:27 - on all pipe related things because all
59:29 - the pipes seem to be too big
59:33 - so i'm going to scale each of those and
59:34 - just click run
59:37 - and perfect
59:38 - now the pipe is exactly the size we wish
59:41 - without having to change the pixel
59:45 - the png or the jpeg itself
59:48 - so that is done one thing i also want to
59:51 - do is perhaps change the bottom to be
59:54 - this brick right here
59:56 - so let's go ahead and do that i'm going
59:59 - to copy this
60:01 - and then let's maybe make the brick
60:03 - an x
60:05 - and call this brick and i'm just going
60:07 - to replace so i'm going to use command d
60:11 - to replace all the bottom
60:13 - once
60:14 - like
60:15 - so
60:16 - with an x and hit run
60:19 - awesome
60:23 - so now i can change the background as
60:26 - well
60:27 - this is something i can do now or later
60:29 - the choice is up to you i would simply
60:30 - have to go here and i'm just going to
60:32 - select the color
60:34 - and then click
60:36 - run
60:37 - oops
60:41 - and there we go
60:44 - great
60:47 - so we have our board the next thing i
60:50 - want to do is add
60:52 - mario
60:53 - so
60:54 - i'm going to do so right down here
60:59 - i'm going to say
61:01 - i'm going to use the add kabum method to
61:04 - add a sprite
61:07 - and i'm going to add the sprite mario
61:10 - standing because i think that's what we
61:12 - called our mario mario standing that's
61:15 - correct so i'm going to add that to our
61:18 - board and i'm also going to position him
61:21 - so at the moment i'm going to position
61:23 - him just sort of at the top here
61:26 - so
61:27 - let's go ahead and click run
61:31 - and there he is
61:32 - now i want to make him fall
61:35 - so let's i'm just going to format this a
61:37 - little bit neater so it's more readable
61:39 - for everyone
61:41 - so i can make mario 4 if i want i can
61:44 - apply gravity tomorrow
61:46 - i simply have to do so by adding the
61:49 - body component to the array
61:53 - just like that
61:55 - and there he goes
61:57 - but we don't really want him to fall
61:58 - through the
62:00 - ground right so we can actually prevent
62:03 - this by making the
62:05 - ground so the brick
62:07 - solid
62:08 - so now if i click run
62:11 - it stops
62:12 - so while i'm here i'm just going to
62:14 - decide what else i want to be solid i
62:16 - definitely want the brick to be solid
62:19 - and i want all the pipes to be solid too
62:24 - so i'm just definitely going to make all
62:26 - of these
62:27 - solid like so i'm going to make the evil
62:30 - shroom solid too
62:32 - as well as the blocks themselves
62:35 - and anything with the
62:38 - sprite question
62:40 - so a whole bunch of solids
62:42 - there
62:45 - okay
62:46 - great
62:47 - so we have done that now um i'm just
62:50 - going to move this out so you can
62:52 - perhaps read it a little
62:54 - better that's that's a lot more readable
62:57 - okay
62:58 - so we've added our player the next thing
63:01 - i'm going to do is add a score and a
63:04 - level
63:06 - so i'm going to do so up here
63:08 - i'm going to add so once again using add
63:12 - it's got parenthesis and an array i'm
63:14 - going to just space it out a bit so it's
63:16 - more readable i'm going to put text and
63:19 - i am going to
63:22 - just put in a 0 for now
63:24 - which we will solve at the end but i'm
63:26 - just going to hard code it just for now
63:28 - and let's position it on our board so
63:30 - sort of at the top so this is the x-axis
63:33 - if you remember from our previous
63:34 - lessons and this is going to be the
63:36 - y-axis just from this point right here
63:40 - so now that i've added that i want to
63:42 - make sure that this won't interfere with
63:44 - our pacman and won't interview with our
63:45 - game so i need to add this to the ui
63:48 - layer which we have not yet added but
63:50 - i'm going to do that now
63:53 - so
63:54 - just up here i think which is the first
63:57 - thing that we should do
63:59 - i'm going to define our layers
64:01 - so that is a kaboom method i'm going to
64:04 - open up my parentheses and pass through
64:06 - an array and in it i'm going to pass
64:08 - through all the layers that we want
64:10 - so i only really want an object layer
64:12 - and a ui layer for this game and i want
64:15 - to make the object layer the default so
64:17 - if something doesn't have a layer
64:18 - assigned it goes to the object layer
64:21 - so
64:22 - that should be it
64:25 - the next thing i want to do is actually
64:28 - pass through a value for the score
64:30 - so i'm going to put value
64:32 - square
64:33 - value if i can only spell it
64:37 - and once again we don't really have a
64:39 - score just yet so i'm just going to
64:41 - hardcord it as zero just so we can see
64:43 - it now
64:45 - um let's actually save this so we can
64:47 - reuse it so i'm going to save it as the
64:49 - score label
64:52 - just like so great
64:55 - so we've added the score label the next
64:57 - thing i'm going to do is actually add
64:59 - something for the levels itself
65:01 - so once again i'm just going to use the
65:04 - array and pass through the kaboom method
65:07 - of text and it's a string that is going
65:10 - to tell us what level it is so
65:12 - level
65:16 - great
65:17 - and i'm just going to pass
65:20 - through
65:21 - again i'm gonna hard code a zero for now
65:23 - we won't uh leave it like this don't
65:25 - worry but we don't have any levels to
65:27 - pass through at the moment and then
65:28 - let's position it so x-axis
65:31 - y-axis
65:33 - from the top
65:35 - and then we just need to make sure that
65:37 - that is in its
65:39 - in parenthesis and that is in
65:40 - parenthesis
65:42 - okay wonderful so we have our score and
65:44 - we have our level zero showing up
65:47 - let's move on
65:49 - now let's actually assign
65:52 - so i'm going to save this as cons player
65:55 - so we can reuse it in our code
65:57 - the next thing you want to do is make
65:58 - sure that our player can move
66:01 - so i'm going to use key down to do this
66:04 - just like we did in the previous lesson
66:07 - so key down i need to pass you two
66:09 - things a string
66:11 - of which key is pressed on our keyboard
66:14 - and a function as to what happens if we
66:16 - press that key
66:17 - so if i press the key left well i want
66:21 - to grab the player i want to use the
66:23 - kaboom method of move and i want to pass
66:26 - through an x axis and a y axis
66:28 - and because i want them to move left
66:30 - well it's going to be this one right
66:33 - here so i could say 120 or i could
66:36 - assign a move
66:38 - speed to mario so let's make that 120.
66:43 - so now to move left i need to make sure
66:45 - this is -120
66:47 - and we don't want anything to happen in
66:49 - the y-axis so i'm just going to pass
66:51 - through a zero
66:53 - okay
66:54 - so let's check it out
67:04 - so now if i press the left key what is
67:06 - going left
67:08 - so now let's do it for the right side so
67:09 - i'm just going to copy this
67:11 - and i'm going to make this right
67:14 - and i'm just going to make this not
67:16 - negative so he's moving 120 on the
67:19 - x-axis
67:21 - so now let's check it out
67:24 - and great
67:25 - the next thing i want to do is for um
67:28 - married to jump
67:29 - so this time i'm going to show you how
67:31 - to use key press it's exactly the same i
67:34 - if i pass through a space fast with a
67:37 - string of space or what do i want to
67:39 - happen
67:40 - let's write a function
67:43 - now i can make our player jump so i can
67:47 - grab player and use jump so that is a
67:50 - method
67:51 - and i can pass through a
67:55 - jump force
67:57 - so let's make this 300 from now
68:02 - i'm just going to put it in there
68:04 - so now if i run this
68:05 - and i press space
68:07 - there he goes
68:08 - he's jumping a bit too high for my
68:10 - liking without a mushroom so i'm just
68:13 - going to change this to
68:14 - 150 instead and see how that looks
68:21 - that is much too small let's try 200
68:32 - let's try it 300
68:40 - and finally let's just try it 360. i
68:42 - think that should be okay
68:45 - okay great so your jumps just high
68:47 - enough to hit these but not high enough
68:49 - to um
68:52 - i guess
68:54 - we don't want that double jump either
68:55 - but not high enough to get onto the next
68:57 - level so that is fine let's get rid of
68:59 - the uh double
69:01 - double jump
69:03 - so we only want him to jump if the
69:05 - player is grounded so that is another
69:08 - kaboom method we can use
69:10 - so only jump so that will get rid of the
69:13 - double jumps
69:14 - great
69:16 - now i want um essentially stuff to spawn
69:19 - if i hit the question
69:22 - mark so these surprise boxes
69:24 - so where should we do that let's just do
69:26 - that below here i'm going to move these
69:28 - to be at the top of the file just purely
69:31 - because i think it's much neater so i'm
69:34 - going to grab that and i'm also going to
69:36 - grab the
69:38 - move speed
69:40 - great
69:42 - so now i'm going to grab the player and
69:45 - on
69:46 - if there is a head bump
69:48 - so again this is a kaboom
69:51 - method
69:53 - well i want so this is a function which
69:55 - i've actually passed through an object
69:57 - through and this will make sense in a
69:59 - bit
70:01 - whatever object we collide with
70:04 - is
70:06 - and then let's use the tag of coin
70:08 - surprise that we made so we've already
70:11 - made this as you can see it's here so
70:14 - anything with this it has the tag of
70:16 - coin surprise
70:18 - if the object that we collide with is a
70:21 - coin surprise
70:22 - well
70:24 - i want to essentially spawn a coin
70:28 - so i need to do i need to assign the
70:31 - level so i'm going to assign the game
70:33 - level in order for this to work so i've
70:36 - assigned the level to game level
70:42 - now we need to grab the game level and
70:45 - i'm going to use the method of spawn to
70:48 - spawn
70:50 - a coin
70:51 - so do we have a coin here we do have a
70:53 - coin it's the dollar sign so i'm going
70:55 - to spawn a coin
70:57 - and where do i want to spawn a coin well
71:00 - i want to spawn it whatever the object
71:03 - that we collide with
71:05 - and then i'm going to use grid position
71:07 - of that object
71:09 - sub and if we just pass through a zero
71:12 - i'm going to show you what happens
71:15 - so i think this is a coin surprise so
71:17 - the coin appears um directly on the
71:21 - object i don't want that i want it to be
71:23 - above the object so i'm gonna pass
71:24 - through a one
71:31 - let's try again
71:34 - boom okay so it appears above the object
71:37 - so this is looking great the next thing
71:39 - i'm going to do is actually destroy
71:41 - the object
71:42 - so i can do so like that that is the
71:44 - kabum method i'm passing through the
71:46 - object i've just collided with to
71:48 - destroy it
71:49 - so i want to destroy it but i also want
71:52 - to replace it so this is how you'd
71:54 - replace you'd use the game level spawn
71:56 - and i want to replace it with
72:00 - unboxed
72:01 - so i'm going to grab that
72:03 - and i'm going to pass through the string
72:04 - of unboxed and then i'm going to
72:06 - position it well we've already done this
72:09 - exactly where
72:10 - the other object is so i would just do
72:13 - position sub zero zero
72:16 - let's give it a go
72:19 - boom
72:20 - how good is that nothing will happen
72:23 - here because that's a mushroom surprise
72:24 - but that is the coin surprise too
72:27 - so now that we have that i'm actually
72:28 - going to
72:30 - copy all of this
72:32 - and just reuse it
72:34 - if object is mushroom
72:38 - surprise
72:39 - i want to spawn a mushroom which is this
72:42 - right here
72:43 - so i'm going to spawn that
72:46 - and let's run it
72:48 - so now
72:51 - ah
72:51 - no i want to spawn the mushroom here
72:55 - sorry and replace it with
72:59 - good that we checked that otherwise we
73:00 - get both
73:03 - there we go
73:04 - great now we also want the mushroom to
73:06 - move right otherwise how we ever gonna
73:08 - get mario to grow
73:10 - so i'm going to move the mushroom to do
73:13 - this i'm going to use action
73:15 - and this runs every frame second and i'm
73:18 - gonna grab anything with the tag of mush
73:22 - room so let's just check that has a tag
73:24 - of mushroom
73:27 - so let's just give this a tag of
73:30 - mushroom as it doesn't have one so i'm
73:32 - just going to give it the string of
73:33 - mushroom like so
73:38 - now anything with the tag of mushroom
73:41 - well what do i want to happen to it
73:42 - let's write a function and find out just
73:46 - get rid of that
73:47 - so anything with the tag on mushroom
73:49 - we're going to pass through m for
73:50 - mushroom and i want to move it so as
73:53 - soon as we see the mushroom i want to
73:55 - grab the mushroom and i want to move it
73:58 - on the x-axis so
74:00 - let's move it at 20 and then we don't
74:02 - want anything on the y-axis
74:04 - so let's give that a go
74:08 - and if i hit this
74:20 - there we go our mushroom is moving but
74:23 - it's not falling
74:24 - we need to change that
74:26 - so i'm also going to apply
74:30 - gravity to it just like we did with
74:33 - mario
74:35 - so now
74:41 - here we go our mushroom is
74:44 - falling
74:45 - this is looking great
74:48 - okay so now it's time to make mario big
74:51 - if he eats a mushroom so
74:53 - let's
74:54 - do it
74:55 - now
74:56 - i'm gonna do so right here
74:58 - so i'm gonna write my own function i'm
75:00 - gonna say call it function big and in it
75:04 - i'm gonna start a timer let timer start
75:07 - off with zero and then i'm going to
75:08 - return
75:13 - up
75:14 - date
75:17 - if
75:19 - is
75:20 - big
75:21 - so we also need to make sure that he's
75:23 - big here let is big
75:25 - equal true
75:27 - actually false to start so it's forced
75:29 - to start if he is big however well then
75:33 - i want to get the timer and just
75:37 - keep minusing delta time from it delta
75:40 - time is i'm just going to show you now
75:42 - on kaboom js
75:47 - delta time is the delta time since last
75:50 - frame said i was a good one to know i'm
75:53 - going to minus that and then if the
75:56 - timer is suddenly smaller than or equal
75:58 - to zero
76:00 - well then i want to make
76:03 - mario small again so this smaller fight
76:05 - which is something where we're gonna
76:07 - write soon
76:08 - so if he's big i essentially want the
76:10 - timer to start counting down and if the
76:12 - timer reaches zero or less than zero we
76:14 - turn him back to being small
76:18 - great
76:19 - now
76:21 - is big
76:23 - i'm just going to return
76:27 - is
76:28 - big
76:30 - so if we use
76:31 - that later well you'll see what i mean
76:33 - when we use it later and this is where
76:35 - we write smallify as well that we used
76:37 - above here and to make mario small what
76:41 - do we need to do well we need to make
76:42 - sure that his scale is
76:44 - uh one as opposed to anything else so
76:47 - i'm just going to pass through a one
76:50 - and then i'm going to start off the
76:52 - timer i'm going to make sure the timer
76:54 - is at zero again and make sure that is
76:56 - big equals false
76:59 - okay so we've written smaller phi now
77:01 - let's write biggify
77:05 - figure five
77:07 - and essentially i just need to get all
77:10 - of this right here
77:13 - and then
77:14 - this scale let's make him times two and
77:18 - is big is true and then we just need to
77:21 - define a time
77:23 - so whatever we pass through in to
77:26 - biggify is going to be exactly how long
77:29 - mario stays big for okay so that time
77:31 - gets passed down to the timer it
77:34 - probably doesn't make much sense now but
77:35 - promise me when we use it it will
77:39 - so now i can add big
77:41 - to the player
77:42 - itself next i am going to write what
77:46 - happens when the player actually
77:47 - collides with the mushroom so i'm going
77:49 - to write player collides
77:52 - and then i'm going to pass through the
77:55 - tag of
77:57 - mushroom so anything with the tag of
77:59 - mushroom if our player collides with it
78:01 - well what do you want to happen let's
78:03 - write a function
78:05 - so into the function i'm going to pass
78:07 - through m for mushroom itself
78:10 - and if our player collides with the
78:12 - mushroom i want to get the player and i
78:15 - want to use biggify so the exact thing
78:18 - that we wrote whoops big
78:21 - gif phi
78:23 - and i'm gonna pass through
78:25 - so if i pass through a six
78:28 - well our player is going to be big
78:30 - time big for six seconds and then he's
78:32 - going to be turned back to small so a
78:34 - normal scale of scale one
78:36 - i also want to destroy the mushroom so
78:39 - i'm going to use the kaboom method of
78:40 - destroy and pass through the m for
78:43 - mushroom
78:44 - so let's check it out
78:49 - so now i'm just going to hit that
78:53 - see i can't do anything with them yet
78:55 - and there we go i am now big
78:59 - and then i should turn small and there
79:01 - we go
79:03 - so now i am big this is looking good
79:07 - um i also want to write what happens if
79:10 - the player collides with so player
79:14 - collides with a coin so anything with a
79:16 - tag of coin
79:18 - just need to make sure that the coin has
79:19 - a tag it does not so let's just give it
79:21 - a tag
79:23 - so if the player collides with anything
79:25 - with the coin i just want to add
79:29 - to this score
79:31 - so i'm going to grab this score label
79:34 - value
79:35 - and use the increment operator to add
79:38 - one to it and i'm also going to grab the
79:41 - score label
79:43 - text
79:45 - and just assign it whatever the score
79:47 - labels
79:48 - value is
79:50 - so let's check it out
79:55 - that should be solid um i obviously
79:58 - can't jump high enough now but let's try
80:00 - get a mushroom and get a coin
80:06 - so that is i am my score is increasing
80:08 - as you can see however i also need to
80:11 - destroy the coin now
80:15 - so c for coin so we can't keep getting
80:17 - more and more points right there's only
80:18 - one coin we need one score
80:21 - so now let's try that out again
80:24 - we get one point
80:26 - um this should be solid so let's also
80:29 - make the
80:32 - unboxed solid by passing through solid
80:35 - like so
80:37 - great so that is looking
80:40 - better
80:42 - the next thing i want to do is make our
80:43 - little evil mushrooms move so i'm gonna
80:46 - do that down here
80:49 - here i'm going to grab anything with a
80:52 - tag of dangerous
80:55 - so we need to assign dangerous to the
80:58 - evil shroom so i'm just going to give it
81:00 - the tag of dangerous like so
81:02 - so anything with the tag of dangerous
81:06 - it's going to write a function to say
81:08 - what happens i'm going to pass through d
81:10 - for dangerous and i'm going to just move
81:12 - whatever d is for dangerous
81:15 - um let's give it so this is x and y axis
81:18 - let's give it an x-axis uh
81:21 - it's y-axis y-axis we know zero so let's
81:24 - make it remove
81:26 - 120. so once again i can save this as
81:29 - something so i can reuse it i'm going to
81:31 - save it as enemy speed
81:33 - and make that 120. so now i can simply
81:37 - use enemy speed like so
81:39 - i'm actually going to make it a negative
81:41 - so they're moving left as well and i'm
81:43 - going to move this to the top of my file
81:46 - just to keep things neat
81:49 - so now oh they're moving really fast
81:51 - whoa
81:53 - that is way too fast i think let's maybe
81:56 - make them move up 30.
82:04 - okay so that is better i still think
82:06 - maybe that's too fast but you know it's
82:08 - up to you how fast you want them to move
82:11 - now
82:12 - so the next thing i want to happen is
82:14 - when they collide i don't want them to
82:16 - push
82:17 - okay i want them to
82:21 - so i just essentially wanted to go to a
82:23 - game over so i'm going to use player
82:26 - collides again and if our player
82:28 - collides with anything with a tag of
82:31 - dangerous
82:32 - what do i want to happen
82:34 - let's write a function and find out
82:36 - so if our player collides with anything
82:38 - with the tag of
82:41 - dangerous
82:44 - okay
82:44 - so this is where we want to figure out
82:46 - if he is jumping right
82:49 - because at the moment if we do we just
82:51 - want to go to a
82:53 - lose scene
82:55 - so we want to go to a loose scene and
82:57 - take our score with us and the score is
82:59 - going to be whatever the score label
83:05 - value is
83:07 - so we could easily
83:08 - do this i'm just going to
83:11 - create a new scene so i'm going to click
83:14 - here and add a loose scene just like
83:16 - that
83:18 - and in here i'm going to use add i'm
83:20 - going to open an array and put the text
83:23 - the argument that i'm going to pass
83:25 - through is score
83:27 - args
83:33 - so we just go to a loose scene where
83:35 - that is really small i can of course
83:37 - make that
83:40 - bigger if i want and i can center it so
83:43 - oreo gin
83:46 - center
83:48 - position it grab whatever the width is
83:51 - of my screen divided by
83:53 - 2
83:54 - the x and grab the height and divide
83:57 - over 2 to get the y axis
84:01 - and i can also scale it so scale it by
84:04 - 10 if i really want
84:08 - so now
84:13 - if i collide there we go the score is
84:16 - huge
84:17 - this is looking good
84:19 - let's go back to our main scene
84:22 - so we have nearly everything we have
84:28 - oops
84:32 - um we have our little mario we need to
84:35 - write what happens so we can destroy
84:38 - these little guys too so we don't have
84:40 - to keep uh dying so perhaps
84:44 - yeah let's do that now
84:46 - okay
84:47 - so
84:50 - i'm just gonna jump over them for now to
84:52 - get them out the way
84:54 - oh okay let's just leave it zero
84:56 - so
84:57 - i'm going to get rid of this again and
84:59 - make this bigger
85:03 - so
85:04 - at the moment our player collides with
85:06 - dangerous and we go to the loose scene
85:08 - however we want something we want to
85:10 - write something to let our javascript
85:12 - know that we are jumping because if
85:14 - we're jumping
85:15 - then we don't want to lose we want to
85:17 - kill the
85:18 - um
85:19 - anything that is dangerous so if is
85:22 - jumping
85:23 - this is the equivalent of writing equals
85:25 - true i could just simply pass through
85:27 - the boolean if it's true then it will
85:29 - execute
85:31 - this
85:32 - else
85:34 - it will execute this and go to the loose
85:37 - scene
85:41 - so i'm just going to get that
85:44 - so if is jumping is true i want to
85:47 - destroy
85:49 - anything with the tag of dangerous
85:51 - okay
85:53 - great
85:55 - if it's oh yes we have not defined as
85:57 - jumping sorry that is my fault i'm going
85:59 - to grab that here and i'm just going to
86:01 - put let is jumping and make it equal
86:03 - true to start with so at the moment it's
86:06 - always going to be true so
86:08 - there we go
86:11 - we just need to pass through a d
86:16 - and i'm just going to jump
86:17 - and great so we are destroying the
86:20 - little mushrooms we are also oh where
86:23 - did he go he seemed to disappeared
86:26 - um we can fix that so just in case you
86:29 - are having that happen to you
86:31 - find the player
86:36 - so that's where we add the player
86:38 - this should fix that happen so happening
86:41 - so just pass through origin
86:44 - bot
86:46 - let's try again
86:48 - so boom boom
86:51 - and then let's grow bigger
86:53 - great
86:55 - cool
86:56 - now i need to increase my jump size
86:59 - right because you know he's meant to
87:01 - jump higher if he gets bigger
87:04 - so i'm going to do that
87:06 - as well as fixing the is jumping too
87:10 - so
87:13 - let's do that first so currently he is
87:16 - jumping at the jump force of 360. so we
87:19 - need to increase that to
87:24 - uh another jump force
87:26 - so
87:27 - we could have big
87:29 - jump force if we want i'm going to make
87:32 - this
87:33 - 550. now i'm also going to have a
87:37 - current
87:39 - jump force which is going to change but
87:41 - it's going to start off with the
87:44 - normal jump force okay
87:46 - so there we go
87:48 - now in here
87:50 - if we are smallifying and as big as
87:52 - false i want the current
87:54 - jump force
87:56 - just to be the jump force however is if
87:59 - he's becoming big or if he is big i want
88:02 - the current
88:03 - jump force
88:04 - to be
88:05 - big
88:07 - jump force
88:08 - okay
88:09 - so let's
88:10 - see if that has worked
88:14 - so once again i'm just going to kill
88:15 - these guys
88:17 - and i'm going to get my mushroom
88:22 - going to be big
88:25 - ah oops we okay so we are using current
88:27 - drone force however when we press the
88:30 - space bar
88:31 - so let's find the space
88:33 - bar and you choose the current jump
88:35 - force okay because that is now changing
88:37 - it's now changing from big jump force to
88:40 - just jump force so let's try it again
88:43 - it's gonna kill these guys
88:46 - gonna be big and that's much better
88:48 - check out how high we are jumping and i
88:51 - just wanna make sure that we are
88:54 - back to our normal jump force now
88:56 - fantastic
88:58 - so one more thing before we move on and
89:00 - that is to make sure that um
89:03 - he's not always that his jumping is not
89:05 - always true
89:07 - so
89:08 - back where we use the spacebar just
89:10 - above it actually i'm going to use
89:12 - player and i'm going to use action which
89:14 - runs every frame second and just check
89:19 - so if
89:20 - once again i'm going to use player
89:24 - and i'm going to use grounded if the
89:26 - player is grounded
89:29 - so check that he is
89:31 - and if he is i want is jumping
89:35 - to be false
89:37 - and if
89:40 - player is
89:41 - grounded and we press the space bar i
89:44 - want this jumping
89:46 - to be true okay so if we press the
89:47 - spacebar and he's grounded then we want
89:49 - him to jump however if he's just
89:51 - grounded then his jumping is false
89:55 - hopefully that makes sense
89:57 - let's move on
89:59 - now i'm just going to
90:03 - move this
90:05 - all the way to the top
90:08 - but after i define the player
90:11 - so right here and click run
90:16 - okay so that is all working now i want
90:19 - the camera to follow me if i go to the
90:22 - right
90:23 - so let's let's go ahead and do that now
90:33 - so
90:34 - right under here i'm going to grab the
90:36 - player and i'm going to use action again
90:39 - so to check every frame second and i
90:42 - want to actually um
90:45 - use camera position so another kaboom
90:49 - method in order to just follow the
90:52 - player position so we just pass through
90:53 - the player position into the account
90:55 - position
90:56 - i also want to do one more thing while
90:58 - you're here and i'm going to say that if
91:01 - the player position
91:03 - y-axis
91:04 - is suddenly larger or equal to the full
91:09 - death
91:10 - so anywhere like below here is going to
91:12 - be the full death
91:14 - then i want to go
91:16 - to the
91:18 - lose scene as well
91:20 - and i'm just going to pass through this
91:21 - score just like we did before so the
91:23 - score labels
91:25 - value as the score
91:27 - so now let's define our for
91:30 - death const for
91:33 - death and i'm just gonna say
91:35 - 600 okay
91:37 - um
91:39 - i think that's i think that should be
91:41 - fine
91:42 - let's check it out
91:45 - so now
91:48 - just going to fall
91:50 - and
91:51 - it works
91:52 - and the camera is following us too this
91:54 - is looking this is looking good now
91:56 - let's go to our next level so i want to
91:58 - go to the next level if we um actually
92:02 - land on
92:04 - the pipe right here
92:06 - so let's do that i'm going to actually
92:10 - do that towards the bottom where shall
92:13 - we
92:14 - do it i guess it doesn't really matter
92:16 - let's just do it here so i'm going to
92:18 - grab the player again and if player
92:20 - collides with anything with the tag of
92:23 - pipe
92:24 - then what do we want to happen we want
92:26 - to go to the next level
92:29 - so let's just check that these things
92:31 - have the the pipes sorry have a tag of
92:35 - pipe themselves they do not so i really
92:38 - just need to add it to the top one so
92:40 - i'm going to add it to
92:42 - here
92:44 - and i'm going to add it
92:46 - to here making sure that it's in the
92:48 - array
92:49 - so now when i collide with those i want
92:51 - to go to the next game see
92:55 - so let's think about this i'm just going
92:58 - to go to this for now if i collide with
93:00 - the pipe but also if i key press down as
93:03 - that is what happens i need to keep
93:05 - press down
93:06 - so if these two things are true if i'm
93:08 - on the pipe and then i press key down
93:11 - then i want to go to
93:13 - my game again but i want to go to the
93:16 - next level so i'm going to pass through
93:18 - level like so
93:20 - um and i'm just gonna pass to level
93:23 - plus one for now
93:25 - okay
93:26 - so we're going to the next level and
93:28 - then i'm also going to take this score
93:30 - with me so scroll label
93:35 - value
93:36 - great
93:38 - at the moment i'm just going to comment
93:39 - this out for now
93:41 - and let's
93:44 - let's do our second scene so let's do
93:46 - that now
93:48 - so before we get finishing onto moving
93:50 - on to the next scene i'm actually gonna
93:52 - make the next scene as that makes the
93:54 - most sense
93:56 - so we already have one map
93:58 - i'm gonna actually
94:01 - now make an array
94:03 - of two maps so array of maps is gonna
94:06 - store one map and a second map and our
94:09 - first map so this here is just gonna be
94:12 - all of this right here so i'm gonna cut
94:14 - this
94:15 - and then
94:17 - maybe just space it out a little bit so
94:19 - it's
94:20 - a bit easier to read
94:22 - that is now going to be our first item
94:25 - in our maps array
94:29 - so there we go maybe format that a
94:32 - little bit better
94:33 - and then we just have to make our second
94:35 - map too
94:37 - so now instead of passing map
94:39 - along with the level config i'm going to
94:42 - get my array
94:43 - and whatever the first item is in my
94:45 - array well that's going to return this
94:48 - so that's if i pass through a zero i'm
94:50 - getting the first item from my array if
94:52 - i pass through a one i'm getting the
94:54 - second item for my row
94:56 - so let's make the second map now i'm
95:00 - simply just gonna copy most of this
95:02 - really and just paste it in here but
95:05 - change things around so we use the blue
95:08 - uh theme this time so let's do it
95:12 - so
95:13 - what do i want this time i don't think
95:15 - it should be as tall
95:18 - and i'm actually going to use
95:20 - a lot of the blue things that we have so
95:24 - i do know that i want
95:27 - walls at these sides so i'm just gonna
95:29 - add those
95:33 - to the
95:34 - other side too
95:39 - so just like
95:43 - that
95:44 - and then we don't want the bricks
95:46 - anymore
95:47 - so perhaps let's make these z's i don't
95:50 - think we've used z so i'm going to use
95:52 - z's in this level
95:58 - and then we do want a pipe however let's
96:01 - have the pipe
96:02 - at the end this time so it's quite nice
96:05 - as we actually get to reuse everything
96:06 - that we done before and we can also
96:08 - reuse the logic
96:10 - so again i'm not going to have these
96:12 - mushrooms i'm going to have some
96:13 - different mushrooms this time and my
96:15 - mushroom's going to be
96:17 - this guy
96:18 - and then i'm just going to delete
96:20 - these
96:21 - two
96:25 - and just use a bunch of
96:28 - this time
96:30 - and then we obviously have
96:33 - our pipe i also want some
96:39 - just things we can scale
96:41 - so
96:45 - so things we can climb scale whatever
96:47 - you wish to call it
96:49 - so i'm just going to make those
96:52 - now
96:56 - um once again please have
96:59 - all the fun creating this all by
97:02 - yourself it really is hours of fun
97:04 - creating these
97:06 - uh levels
97:10 - okay
97:11 - so we've now defined some new things in
97:13 - here
97:14 - let's
97:16 - get to it
97:17 - so now we have some z's
97:22 - well we actually also have some of these
97:24 - signs as what the
97:26 - pound sign
97:28 - so i'm just going to leave these blank
97:30 - for now so we can fill them out i've got
97:32 - pound sign
97:36 - we've got a zed
97:39 - what else do we have we've got an at
97:41 - sign
97:45 - and we've got
97:46 - a dollar sign and sorry an exclamation
97:49 - and an s
97:57 - so now let's have a look here
97:59 - well i
98:00 - know that i want some blue bricks to be
98:04 - this so i'm going to say blue
98:09 - brick
98:10 - and i also know that i want this to be
98:12 - solid so i'm just going to pass through
98:14 - solid
98:15 - do we want a blue surprise i think we do
98:20 - i don't think we have one though so i'm
98:22 - just gonna make a seven a blue surprise
98:25 - um i'm gonna also add that in here so
98:28 - let's make a
98:30 - seven
98:33 - for a blue
98:36 - surprise if you wish
98:38 - in fact i'm not going to bother but if
98:40 - you want to add then please add um you
98:42 - know how to do that now with the coin
98:44 - surprises and so on
98:47 - and so on so yeah if you want to add
98:49 - that please do
98:51 - let's add an
98:52 - evil mushroom so this is the blue evil
98:55 - mushroom i'm going to call it blue
98:57 - evil
98:58 - mushroom
99:01 - um and i'm going to give her the tiger
99:03 - dangerous so that you comply all the
99:05 - other logic that we've already done to
99:07 - it so that is pretty handy
99:09 - s what do we want s s is gonna be our
99:12 - blue steel
99:15 - and i'm also gonna make this
99:17 - solid
99:19 - and then we also need these sides
99:23 - so what can we make these sides what a
99:26 - disease
99:28 - disease is the floor
99:35 - so we might have to add something else
99:37 - for the floor
99:38 - so i'm just going to do that now
99:41 - we're going to add this blue block to be
99:43 - the floor so blue
99:46 - block
99:47 - and then let's have
99:49 - blue
99:50 - brick
99:51 - great
99:52 - let's hit run
99:55 - sprite not far found blue evil
99:58 - mushroom is not
100:01 - found
100:05 - blue evil shroom
100:09 - click run
100:12 - oh
100:14 - and there we go okay we need to scale
100:17 - everything to be half because as you can
100:19 - see it's
100:20 - very
100:20 - big so
100:22 - let's do it again i'm going to use scale
100:26 - 0.5
100:32 - not here but here on anything that is
100:34 - new
100:40 - and then we need to make these solid too
100:42 - so make sure that everything with a
100:46 - uh
100:48 - brick is solid
100:55 - okay
100:56 - we've actually reused this blue brick so
100:58 - if i really wanted to
101:02 - um
101:03 - i could definitely change it so let's
101:05 - maybe do that
101:10 - or let's
101:13 - add some
101:25 - we could make these blue surprises so
101:27 - i'm just gonna make a blue surprise
101:28 - sorry i'm being really
101:30 - uh indecisive
101:32 - so blue sir
101:36 - price
101:38 - and then we can also give this a tag of
101:41 - coin surprise so exactly what we expect
101:43 - to happen
101:45 - for a coin surprise will happen for
101:46 - these just because we gave it the tag so
101:48 - how handy is that save just having to
101:51 - rewrite so much logic
101:54 - okay
101:55 - amazing
101:56 - so how cool is that
101:59 - once again
102:01 - we've pretty much
102:02 - it's pretty much done everything for us
102:04 - and if we look here all the levels will
102:07 - act pretty much
102:09 - the same
102:12 - way
102:13 - um
102:16 - cool so that is looking
102:20 - good
102:29 - we definitely die if we hit one of these
102:31 - so that is good
102:32 - why are these not sprouting coins though
102:36 - let's have a look so blue surprise
102:41 - coin surprise
102:47 - ah it's because i misspelt it so let's
102:49 - run that
102:52 - okay
102:53 - fantastic so much work saved for us it's
102:57 - incredible right
103:00 - um okay great we have one more thing to
103:03 - do and that is make sure that our mario
103:06 - goes to the next level so let's do it
103:10 - okay so what i would do is this
103:13 - just like so
103:15 - i would just have to define a level
103:19 - okay
103:21 - so there we go
103:26 - amazing
103:27 - now we can actually get our scores uh
103:30 - sorry our levels to loop all i'd have to
103:33 - do is find the level
103:37 - and then i would use modulus
103:40 - the
103:42 - level
103:43 - length
103:44 - to make sure that they loop
103:46 - okay so let's check that out one more
103:48 - time
103:55 - okay
103:57 - and then
103:58 - of course make sure that these scores
104:00 - are passing two
104:43 - and great so we have now finished the
104:46 - mario game this was super fun thank you
104:48 - so much for coding with me of course
104:50 - please take this game i'm sure there's
104:52 - many improvements that could be made and
104:54 - many improvements that you can
104:56 - contribute to it too so just head over
104:59 - to mine if you want and fork it or just
105:01 - use what you've coded so far
105:04 - um thanks so much again and one more
105:07 - game to
105:08 - go
105:10 - let's do it this time we'll be doing
105:11 - zelda completely from scratch
105:20 - okay so now it's time to start coding
105:24 - zelda but completely from scratch so
105:26 - before we were using the
105:28 - pre-configured kombum
105:30 - replica environment this time i'm going
105:32 - to show you how to use kaboom js
105:36 - so the javascript library in a index
105:39 - html and javascript file okay so
105:43 - completely from scratch let's do it
105:46 - the first thing i'm gonna do is actually
105:49 - go back to the kaboom js page
105:53 - and i'm simply going to take all of this
105:56 - script
105:58 - just right here
106:01 - i'm then going to in my index.html file
106:05 - so all of that script there's two
106:07 - scripts there's the first script and the
106:10 - second script
106:12 - i'm simply going to take all of it
106:14 - and just at the bottom of my two body
106:18 - tags just paste
106:20 - everything
106:21 - like
106:22 - so
106:23 - okay
106:24 - so if i run that now
106:26 - you will see oh hi mark in the browser
106:30 - now this is great but i don't really
106:32 - want to keep all my javascript in here
106:34 - because at the moment that is what is
106:36 - happening so i'm just going to cut this
106:38 - out
106:40 - so that is all you should see in
106:43 - the index html file for now and in here
106:46 - i'm just going to paste the javascript
106:48 - like so
106:50 - now back in here instead of having this
106:52 - script tag with the type module
106:55 - i'm going to have a script tag
106:58 - and a closing script tag
107:00 - with the source
107:02 - of whatever
107:04 - my
107:05 - javascript file is called so obviously
107:07 - at the moment it is game js
107:11 - just like that and it's in the root of
107:14 - our project so i don't have to do
107:15 - anything i just put the file name like
107:19 - so
107:20 - um do make sure that it's under the
107:23 - kaboom js uh script okay along with the
107:28 - version
107:30 - okay so just like that body tag
107:33 - first script
107:36 - second script if i get rid of this that
107:38 - might be a lot easier to
107:40 - read i'm just going to format it a
107:43 - little bit
107:44 - too
107:45 - great
107:46 - so if i run this
107:48 - nothing should change
107:50 - let's carry on
107:52 - so this is our index html file
107:56 - now let's move on to our javascript file
107:59 - so once again i'm just going to get rid
108:01 - of that
108:03 - okay
108:04 - so
108:05 - this is great however it's not really
108:07 - our zelda game so let's start i'm just
108:10 - gonna start from scratch
108:13 - once again i need to initiate the kaboom
108:15 - js environment so i'm gonna do this get
108:18 - some curly braces and i'm gonna put
108:20 - global
108:21 - true
108:23 - um let's make the game full screen
108:27 - true
108:31 - scale let's sort of a scale one
108:35 - let's put debug as true as well so we
108:38 - get the debug messages and i'm just
108:40 - going to make a
108:42 - clear
108:43 - background so i'm going to make it let's
108:46 - make it
108:47 - black
108:48 - okay
108:49 - perfect
108:51 - so now that we have kabum initialized
108:53 - let's add some sprites
108:56 - so this is a completely different way to
108:58 - do it obviously before we were using the
109:01 - replica environment where you can draw
109:03 - the sprites directly in here however if
109:05 - you are using your own ide or just doing
109:08 - it on replit from scratch we can do this
109:12 - so
109:13 - there is a kaboom method called load
109:16 - sprite
109:18 - and we simply write it like so
109:20 - now
109:21 - i have actually stored all my images
109:24 - online so you can use them as well
109:26 - when i do projects like this i usually
109:29 - store all my images on this third-party
109:31 - service called imager so if you go to my
109:34 - imager and look at my posts you can see
109:37 - i've already made a bunch of sprites for
109:40 - us for this zelda game
109:43 - so i'm just going to go ahead and lift
109:45 - some now let's get link going left
109:49 - i'm simply going to get shareable links
109:52 - i'm going to copy this bbc code one
109:54 - right here and i'm simply going to paste
109:57 - the path
109:59 - to
110:00 - my
110:02 - sprite
110:03 - i'm also going to name it while i'm here
110:05 - so i'm also going to pass through a
110:06 - string let's say link going left just so
110:10 - it's easier for me to work with
110:12 - now
110:13 - i could so there's my first sprite
110:17 - let's get also link going
110:20 - right so let's go back here
110:22 - and let's find link going right so i'm
110:24 - just going to once again get shareable
110:27 - link and click this right here
110:30 - and just go back to here
110:32 - and paste
110:35 - the path to my link going
110:39 - right this time so i could keep doing
110:42 - this but of course this is very wordy
110:45 - and there is a lot of repetition
110:47 - there is another
110:49 - kaboom method called load route which
110:52 - will allow me to essentially load this
110:56 - route
110:56 - so i don't have to write it each time
111:00 - so that is a lot neater
111:03 - let's carry on
111:04 - so you've got link going left link going
111:06 - right
111:07 - let's also have
111:11 - link going
111:13 - down
111:19 - link going
111:21 - up
111:25 - left wall
111:31 - right wall
111:34 - let's have
111:36 - the
111:37 - top wall
111:43 - bottom wall
111:45 - and then all the also the corner walls
111:47 - so essentially i'm getting everything
111:48 - that i need to make up my link game in
111:51 - order for us to create our board so now
111:53 - let's go bottom
111:58 - left wall
112:02 - bottom
112:04 - right wall
112:08 - top left wall
112:12 - top
112:14 - right wall and let's just do these for
112:16 - now and then we'll carry on in a bit so
112:18 - link going down
112:20 - i'm just going to go in here and grab
112:24 - this little guy
112:25 - copy the link and once again just paste
112:28 - it in here simply using
112:31 - this
112:32 - at the end
112:33 - and then link going up
112:39 - so again i am just going to
112:43 - get share links
112:45 - copy that one
112:47 - paste it in here
112:49 - but get rid of this as we already have
112:51 - the root
112:53 - now let's get the left wall
112:58 - so
112:59 - this looks like a left wall
113:01 - to me
113:07 - once again i'm going to get the share
113:08 - link
113:09 - copy that
113:12 - just paste it in
113:14 - here
113:15 - [Music]
113:18 - now let's get the right wall
113:23 - so this to me looks like a right wall
113:32 - get share links copy
113:36 - paste that in here
113:42 - let's find our top wall now
113:49 - so this to me actually looks like a
113:51 - bottom wall
113:52 - it's fine we'll just do the bottom wall
113:54 - now get share links copy
113:59 - bottom wall
114:01 - just like so
114:20 - and just paste into top
114:26 - wall
114:27 - okay now let's get the bottom left
114:29 - wall
114:30 - so
114:32 - this to me looks like a bottom left wall
114:37 - let's get the bbc code
114:40 - so charlene copy
114:45 - bottom left wall and just get rid of the
114:48 - which
114:50 - bottom
114:52 - right wall
114:53 - to me it looks like a bottom right wall
114:56 - get shell link copy
115:03 - and just paste it
115:05 - in here
115:07 - like so
115:08 - now let's get the top left
115:10 - wall
115:15 - once again get share links
115:24 - and now the top
115:26 - right wall
115:27 - so this should be the last of the walls
115:30 - we just have some doors and some enemies
115:32 - to put in
115:34 - so gets again get share links copy
115:40 - and just whack that in
115:42 - there
115:43 - perfect
115:44 - so now we've got all the walls let's i'm
115:47 - just going to move that up here for us
115:48 - we've got a few more things to do
115:51 - um
115:52 - let's get the
115:55 - top
115:57 - door
116:01 - so we're gonna have a top door
116:03 - a
116:05 - left door
116:16 - we're also gonna have a fire pot
116:19 - so that's just gonna be some decorations
116:21 - really
116:22 - i'm also going to have some
116:25 - lanterns
116:29 - and then let's put in
116:32 - a
116:34 - slicer so this is the first of our
116:37 - baddies i guess
116:39 - skeletor it's not actually skeletal but
116:42 - looks quite similar so that's how i've
116:44 - named this little character some stairs
116:47 - and then let's also have a
116:50 - background
116:51 - so i'm just gonna go bg for background
116:53 - so let's carry on let's get our top door
117:01 - so this is my top door get share links
117:04 - copy
117:07 - once again
117:09 - it's making sure
117:11 - just to get the end
117:14 - let's find our left door
117:21 - share links
117:23 - copy
117:24 - it's gonna put it in as a string
117:28 - along with the
117:30 - name that i gave this sprite
117:33 - so
117:34 - there we go
117:36 - fire pots let's find some fire pots
117:41 - so this is what i called a fire pot
117:44 - get shell ink copy
117:49 - once again
117:51 - get rid of that
117:53 - lanterns is up next let's get the
117:57 - lanterns so these are my lanterns
118:02 - you can see i've got a lot of images in
118:03 - here all from like various projects that
118:06 - i have on youtube either on free code
118:09 - camp or on my own channel
118:12 - so there we go let's get these slices
118:15 - so oh actually let's get skeletor just
118:18 - because you know he's here
118:22 - let's copy that
118:24 - let's put that in here
118:26 - just like so
118:34 - this is what i
118:35 - called a slicer so get sherlink copy
118:52 - a shelling
119:00 - copy and now for the background which is
119:03 - going to be a lot bigger than all these
119:05 - sprites but that is not a problem so
119:07 - once again get share link copy
119:11 - and just put that in
119:15 - yeah
119:16 - fantastic so we've got all our sprites
119:20 - let's move on
119:21 - the next thing i'm going to show you how
119:23 - to do is add a scene
119:25 - so this way is different than we did
119:28 - before i'm going to show you of course
119:29 - how to do it from scratch and from
119:31 - scratch we would use the kabum method
119:34 - scene
119:36 - just like so i'm going to open up a
119:39 - parenthesis and the first thing i'm
119:41 - going to pass through is the name of the
119:44 - scene and the second thing is going to
119:46 - be a function
119:47 - so this is where all the magic is going
119:50 - to happen
119:51 - so let's call this scene game
119:53 - and i will be passing through a
119:56 - level
119:57 - and a score into here so that with each
120:00 - level we actually get these score and
120:03 - move on to the next um level and so on
120:06 - as well as as well as the level
120:09 - but we don't really have anything at the
120:11 - moment
120:12 - quite yet
120:14 - because we need to also start the game
120:18 - so this is another kabum method to start
120:21 - the game i would simply pass through the
120:23 - string of what scene i want to start
120:26 - as well as anything else so as i already
120:29 - said i want to pass through the level
120:31 - and the score into
120:34 - the uh game scene
120:36 - so to start with i'm simply going to say
120:38 - that the level is zero
120:40 - and the score is also
120:42 - zero
120:43 - okay
120:44 - so if we run that we won't really see
120:46 - anything because um we haven't actually
120:50 - written any logic but that is sort of
120:52 - what you need to do to get started so
120:54 - for now i'm just going to
120:59 - define our
121:01 - maps
121:02 - so let's do that first so once again
121:05 - i've showed you how to do this now
121:06 - however i am gonna just comment it out
121:09 - until we need it and until we you know
121:12 - start working with the level unscore so
121:14 - i'm just gonna comment this out like so
121:18 - great so at the moment we are not
121:19 - passing through anything into the game
121:22 - now as i said the first thing i want to
121:24 - do is define our maps so let's start off
121:27 - with the first one first const map
121:32 - now
121:33 - i need to draw my actual map so to do
121:36 - this i'm just going to make everything
121:38 - in these quotation marks and i'm just
121:42 - going to decide
121:44 - what i want as all my sprites
121:47 - so let's just for now
121:50 - i'm just gonna show you what i mean so
121:52 - one two three four five six seven eight
121:54 - nine ten and then
121:57 - let's make it ten by ten
122:04 - three
122:12 - four five
122:18 - six seven
122:20 - eight nine
122:22 - and one more to make it ten
122:26 - okay
122:27 - so one two three four five six seven
122:31 - eight nine ten
122:33 - amazing and i just need to put a comma
122:36 - after all of
122:37 - these
122:43 - two
122:44 - great so for now i'm just going to put
122:47 - c's in here um just to show you
122:50 - how this
122:52 - would
122:53 - look
122:59 - okay
123:00 - so we've got our map
123:02 - now we need to use a another kabum
123:05 - method called add level and into add
123:08 - level making sure to spell it camel case
123:11 - we need to pass through two things
123:13 - the first is our map as an array and
123:16 - then the second is our level config as
123:19 - an object
123:20 - so
123:21 - we already have a map defined so i'm
123:24 - just going to pass through a map and
123:25 - then our level config now i can actually
123:28 - define the level config here it might
123:31 - make things neater as it is going to be
123:33 - quite chunky
123:35 - so our level config is going to look
123:38 - like this so we did say it's an object
123:41 - so now i could just remove this
123:44 - and just pass through level config
123:46 - and our object is going to look a little
123:48 - bit like this so in here we're going to
123:50 - define how big each of these symbols are
123:53 - going to be on our board so i'm going to
123:56 - say that each one is going to have a
123:57 - width of
123:59 - let's say 48 and a height of
124:03 - 48
124:04 - pixels just purely that's because that's
124:07 - how big i actually made my pixels on
124:10 - imager
124:12 - okay and then i'm going to say that
124:14 - anything with c
124:17 - is going to be and this is the syntax so
124:19 - i open up an array i use the kaboom
124:22 - method of sprite
124:28 - and then in here i'm just going to pass
124:31 - through
124:32 - the string of top wall okay so this
124:35 - string of top wall is equivalent to the
124:38 - sprite which i
124:40 - uploaded above
124:42 - so now i'm saying that anything with the
124:44 - c is going to be a top wall on my
124:47 - map
124:48 - so now if i actually
124:51 - run this
124:54 - well there we go
124:55 - we can already see
124:57 - our map
124:58 - now i can make this a bit smaller just
125:01 - so it's easier to work with
125:04 - and there we go okay maybe just make us
125:07 - a tiny bit bigger
125:09 - so now you will see that all my walls
125:11 - are the top wall so i don't want this
125:14 - let's actually go to actually drawing
125:16 - our um
125:17 - our zelda map correctly so back in here
125:23 - so we've already defined uh the top wall
125:25 - as c
125:26 - let's do a
125:35 - sprite
125:42 - left
125:44 - wall
125:47 - b
125:53 - sprite
125:56 - right wall making sure to spell all
125:58 - these strings correctly of the sprites
126:01 - that you imported
126:02 - so we've got our left wall right wall
126:05 - top wall
126:07 - i'm just going to copy this out to make
126:08 - it a little easier let's make d the
126:12 - bottom wall
126:15 - and then maybe let's use something else
126:16 - for the
126:18 - corner ones so
126:20 - let's make uh
126:26 - w the top
126:29 - right
126:30 - one
126:37 - x the
126:40 - bottom
126:43 - left
126:45 - wall
126:54 - why the top left wall
127:04 - and let's make z the bottom right wall
127:12 - okay
127:16 - let's copy that
127:18 - now
127:19 - so let's actually use that first perhaps
127:22 - or let's just do all of them
127:24 - first what should we do
127:26 - let's just import all of them to use and
127:28 - then we can use them to uh draw our map
127:31 - so
127:32 - let's use these symbols now because you
127:33 - don't have to just use uh the alphabet
127:37 - let's also do the left door just like
127:41 - that
127:43 - let's also have
127:48 - um
127:49 - this little hat could be the top door
127:57 - let's have some stairs
128:08 - let's also have this slicer which we
128:10 - make our slicer let's make him this
128:12 - little guy slicer
128:15 - and then
128:18 - skeletal can be
128:24 - this
128:27 - so sprite scaler
128:33 - and then let's have our
128:38 - let's have some lanterns in too and then
128:40 - just the fire pot
128:42 - lanterns
128:47 - and our fire pot let's make the fire pot
128:49 - the other way
128:52 - fire
128:55 - pot
128:56 - fantastic
128:57 - so we've done all of that
129:00 - let's also add our um
129:03 - let's add our background while we're
129:05 - here so i'm just going to do that down
129:06 - here i'm going to use add
129:09 - and then i'm going to open up my array
129:12 - so just like we did with the sprite
129:14 - above
129:15 - i'm going to find the background so i
129:18 - saved it as bg
129:22 - and then i'm going to say the layer it
129:24 - belongs in
129:26 - is on the background because i don't
129:28 - want it interfering with any of my
129:30 - objects and i don't want interfering
129:32 - with any sort of words i put on so let's
129:34 - actually define the layers first so we
129:37 - already know we've got a background
129:39 - layer let's do that up here
129:45 - so just under where i uh use the scene
129:49 - method i'm going to say layers i'm going
129:51 - to define the layers so i'm going to
129:53 - have three layers in this game i'm going
129:55 - to have a background layer as we've
129:56 - already discussed and then also going to
129:59 - have an object layer for where all my
130:01 - objects and all my enemies and my
130:02 - players are going to be with and then
130:04 - i'm also going to have a ui layer so
130:06 - that these layers can't interfere with
130:08 - each other okay we can't collide with
130:10 - them um they're very separate
130:13 - and then my default so if something
130:14 - doesn't have a layer
130:16 - it's going to be the object layer
130:18 - great
130:19 - so now if i run this
130:21 - well there you go the background is
130:24 - added
130:25 - let's now get to
130:27 - using all of these on my map
130:30 - so we already know that this is going to
130:33 - be the left wall so i'm just going to
130:35 - use command d to change all these to an
130:38 - a
130:39 - and then let's change all these
130:41 - to
130:43 - the
130:44 - right wall
130:47 - so i might as well just make them
130:49 - all bees
130:51 - for now
130:56 - and then the bottom well actually i i
130:59 - know this is the bottom left
131:01 - and then what's the top left is a y and
131:04 - then we've got the bottom right that's a
131:07 - z
131:07 - and then
131:09 - top right is a w
131:11 - and what is the bottom wall well that's
131:14 - all d so i'm just going to go d d d d d
131:17 - d
131:17 - like so
131:19 - and then let's also perhaps put our
131:21 - lanterns in here so i'm just going to
131:22 - put that in here
131:25 - and i'm going to have a door
131:28 - um
131:30 - just like so
131:31 - and there
131:33 - great
131:34 - let's also have a left door here so i'm
131:36 - just going to perhaps put that in here i
131:39 - think i've got one too many levels
131:42 - i only want this to be nine high so
131:44 - let's go ahead and
131:46 - delete that that should be fine
131:48 - one two three one two three
131:50 - okay and let's put in some more lanterns
131:54 - at the bottom
131:56 - so i'm going to put in
131:58 - a
132:01 - lantern here
132:03 - lantern here and we're missing the
132:05 - corner one bottom right is a z
132:09 - great
132:10 - and then i'm also going to put a slicer
132:12 - so this was my slicer here
132:15 - and this slicer
132:19 - here as well as some fire pots because
132:21 - you know fire pots are always fun so
132:23 - let's put this in the center
132:26 - of our game
132:29 - i'm just going to put one here
132:32 - and one
132:34 - here
132:36 - and let's
132:37 - let's have a look at what that looks
132:38 - like i'm not sure that is the center but
132:41 - we will soon
132:42 - find
132:43 - out so i'm just going to run this
132:46 - and there we go how good
132:49 - does that
132:51 - look
132:52 - okay we did pretty well this one's
132:54 - incorrect though bottom left wall this
132:57 - should just be an x my bad
133:01 - amazing okay this is looking awesome i'm
133:04 - super pleased with it
133:06 - let's carry on
133:08 - so we've defined our layers we've added
133:11 - a map the next thing i want to do is add
133:14 - my little zelda so let's
133:17 - do that here
133:19 - okay
133:20 - so i'm going to use the kaboom method of
133:23 - add i'm going to open up my parentheses
133:25 - and once again get my
133:28 - square brackets and in here i'm actually
133:31 - gonna
133:32 - get sprite once again and i'm going to
133:35 - just start off with link going left so
133:37 - i'm going to grab
133:39 - the um string of link going
133:43 - left so that is the sprite that we
133:45 - imported above
133:48 - and the next thing i want to do is just
133:50 - assign a position to it so i can use pos
133:53 - for position like so and then i'm just
133:56 - going to make him go left so this is
133:58 - where we start positions from
134:00 - left 5 and down 190. so you should be
134:05 - somewhere around here
134:07 - great
134:08 - so now if i run this
134:11 - well there he is
134:12 - maybe let's have him going right
134:14 - actually so i could just switch this out
134:17 - and there we go so he's sort of on the
134:20 - door at the moment
134:22 - the next thing i need to do is
134:26 - actually
134:27 - make our little sprite move so perhaps
134:30 - let's do that first to make things
134:32 - easier i'm going to assign all of this
134:34 - code to const player so we can keep
134:36 - reusing it throughout the game
134:40 - so now i'm going to use key down so this
134:44 - is one that we've used in the previous
134:47 - lessons and if we press key down and we
134:50 - press the left key on our keyboard where
134:53 - we want something to happen right so i'm
134:55 - just going to put in a function
134:58 - here
134:59 - so the string of what key followed by a
135:03 - function of what's going to happen
135:04 - that's what the key down or key press um
135:08 - kaboom method takes
135:10 - so if we press key left well i want the
135:14 - player to move
135:16 - and then we need to define a speed
135:19 - so i'm going to perhaps define that here
135:22 - we could just pass through a number but
135:23 - to make it all reusable i'm going to
135:25 - define a speed for us here and i'm just
135:28 - going to call it
135:30 - move
135:32 - speed
135:33 - and then let's make it 120 for now let's
135:36 - see how that goes
135:37 - so i'm gonna say when he's moving left
135:40 - well we have to grab the move speed
135:43 - and make it negative with the move
135:45 - kaboom method the first thing we pass
135:48 - through is the x-axis and the second is
135:51 - the y-axis so in this case i want the y
135:53 - x to be zero i don't want anything to
135:55 - change on the y-axis but i do want
135:57 - something change on the x-axis i want
135:59 - them to go
136:00 - left so that is how we would do that
136:05 - so there we have it we have key down
136:08 - left
136:09 - let's also have if we move
136:13 - right well then we want to
136:15 - just simply move at the move speed
136:21 - and then let's also have up
136:24 - and this time you guessed it this has to
136:27 - be
136:27 - zero and this is going to be the
136:30 - move speed but this one's also going to
136:33 - be a negative
136:35 - and then finally
136:37 - we have the key down
136:40 - move down
136:41 - in which with this is not a negative
136:43 - it just looks like this
136:46 - so now if we run the game
136:49 - there we go
136:50 - a little sprite
136:52 - is moving
136:53 - now we can also do a change sprite which
136:56 - is something that we didn't cover in the
136:58 - previous
136:59 - games but i think is quite fun so i'm
137:03 - gonna do that now
137:06 - when we go left
137:09 - i want to grab the player and i want to
137:12 - use
137:13 - a method called change sprite to change
137:16 - the sprite to whatever other sprite we
137:19 - imported so in this case i want to
137:21 - change it to link going
137:23 - left
137:25 - okay
137:26 - and let's do the same for the others
137:28 - this one's going to have link going
137:30 - right
137:31 - and then let's have link going up
137:35 - and link going
137:38 - down
137:39 - so just a reminder i'm simply using
137:42 - all of these here to change the sprite
137:45 - to these if we press on the keys
137:48 - so now
137:50 - here we go
137:52 - that is looking
137:54 - so good i think we are ready to move
137:58 - on
137:59 - okay
138:01 - now the next thing i think we should do
138:04 - is move our little slices so let's do it
138:08 - for this i'm just gonna gravitate down
138:10 - here to do our slicer game logic
138:14 - so
138:16 - this
138:16 - time well i need to
138:21 - i'm going to use the kaboom method of
138:23 - action because i'm going to grab
138:25 - anything with the tag of slicer
138:28 - and then let's get our function up so
138:31 - there is obviously a pattern here we
138:33 - usually pass through a string and then a
138:35 - function into most of these kabum
138:37 - methods
138:38 - and what do i want to happen to these
138:40 - slicer well to every slicer so s for
138:43 - slicer or everything with the tag of
138:45 - slicer i should say so perhaps let's um
138:52 - go up here and i'm just going to give
138:54 - slicer the tag of slicer
138:57 - like so
138:59 - so now everything with the tag of slicer
139:02 - well i'm going to grab the slicer i'm
139:05 - going to move it
139:06 - now i can move the slicer once again x
139:10 - and y axis but i actually want to um
139:14 - change the direction of the slicer i
139:15 - want him to bash into the wall and then
139:18 - change direction when he
139:20 - bashes into war because at the moment
139:22 - let's
139:23 - define a const slicer
139:26 - speed let's make it 120.
139:29 - if i put through the slicer speed here
139:32 - and just keep this zero and run it
139:35 - our slices are moving but they're just
139:37 - carrying on this is not what i want
139:41 - so
139:42 - let's fix this
139:43 - to do this i'm going to go back up here
139:46 - because i need to give all my walls
139:49 - and everything that i want to
139:51 - essentially be solid on the board the
139:55 - component of solid so
139:57 - in here i'm essentially going to
140:02 - on all the walls i'm going to give them
140:05 - the component of solid i'm also going to
140:07 - give them the tag of wall which you will
140:10 - see why later but we essentially want to
140:12 - treat all of these as walls
140:15 - just like
140:17 - so
140:18 - so we've got a few more to treat as
140:20 - walls and to treat as solid
140:23 - so
140:24 - there we go
140:25 - that is looking good
140:26 - while i'm here i'm also going to make
140:28 - the lanterns solid because at the moment
140:31 - we can move through them
140:34 - i don't want this
140:35 - so let's make the lanterns
140:38 - solid 2
140:41 - oh and the fire pots so that was
140:44 - actually
140:46 - solid so that was actually a fire pot
140:49 - these are the lanterns but we need both
140:51 - to be solid really so there we go
140:55 - that is looking good we can also assign
140:58 - the lantern
141:00 - the tag of wall just in case because we
141:03 - want it to be treated
141:04 - like a wall essentially
141:07 - great
141:09 - so we've done that now while i'm here
141:10 - i'm also going to give our slicer a
141:14 - direction
141:15 - so i'm going to start off with the
141:17 - direction of the slicer being minus one
141:20 - okay we can add any sort of object we
141:22 - want in here it's sort of like a storing
141:24 - value so i've just chosen to store dir
141:28 - minus 1 which i know is for direction
141:32 - so now that we have that
141:34 - let's carry on
141:36 - so we have our slices
141:39 - moving off let's just check we can't go
141:41 - through the last lantern
141:43 - uh we can go through the lantern okay so
141:45 - to fix this i can actually fix this i
141:48 - just need to resolve the player so what
141:51 - i would do so just after i've added the
141:53 - player just here
141:55 - i would use player action
142:01 - and then grab the player and resolve so
142:03 - that should
142:05 - fix the issue of the player going
142:07 - through things that are solid
142:09 - so let's try that
142:11 - perfect
142:12 - so now we can't go through anything
142:15 - that is solid
142:17 - great
142:20 - okay
142:23 - so now that the slices have a direction
142:24 - and they're moving off i actually want
142:27 - them to change speed change direction
142:29 - sorry when they hit anything
142:32 - with the tag
142:34 - of
142:35 - war
142:36 - so let's do it so just here i am going
142:40 - to use the kaboom method of collides
142:44 - just like so
142:46 - and anytime anything with the tag of
142:48 - slicer collides with anything with the
142:51 - tag of wall
142:52 - once again let's write our function
142:57 - and
142:58 - the slicer so if that happens and if
143:00 - both collide i want this slicer dur
143:03 - to change
143:05 - to minus there so if this is currently a
143:07 - positive it will change your negative
143:09 - and if it's a negative it will change to
143:12 - a positive
143:14 - maths
143:15 - so that is happening and that should
143:18 - change the direction however
143:21 - now that we have that
143:23 - i need to make sure that that is being
143:25 - applied here so i can use s direction
143:28 - and multiply it so whatever s direction
143:30 - is at the moment if it's a minus one i
143:32 - will multiply it to 120 which will make
143:35 - that which will make that
143:37 - minus 120. so
143:39 - r
143:40 - slider or slicer will move left and
143:43 - alternatively it's a one where we'll
143:45 - multiply one by 120 and our slider will
143:47 - move 120 to the right
143:50 - so that is cool let's check that out
143:53 - and we've done it
143:55 - our sliders are moving and they are
143:57 - literally bouncing off the walls and
144:00 - changing direction
144:02 - so this is looking good
144:04 - let's carry on
144:06 - now i need to write some code for what
144:08 - happens if we
144:10 - you know collide with our slider because
144:12 - that's a bad thing i want our player to
144:14 - essentially lose
144:15 - so that is a game over in my eyes
144:18 - i could do so by grabbing the player and
144:20 - using overlaps this time
144:22 - and if our player overlaps with the
144:25 - slicer or i could put dangerous
144:29 - so that means that anything with the tag
144:31 - of dangerous which means i can reuse
144:33 - this tag will result in
144:36 - a player
144:37 - losing
144:38 - and going to a losing scene
144:41 - so at the moment i'm just going to
144:43 - perhaps make a
144:46 - let's maybe leave this for now because i
144:49 - need to write this score so i'm going to
144:51 - apply the tag of dangerous
144:54 - to the slicer
144:56 - and i'm also going to apply it to
144:58 - skeleton
145:00 - great
145:01 - now that we've done that i think we need
145:03 - to start looking at the score because if
145:06 - there is a loose scene i want to go to
145:07 - the loose scene with our final score so
145:10 - let's do it
145:13 - just under here i'm going to add
145:17 - so once again open up a parenthesis and
145:20 - an array and i'm just going to start
145:23 - with the text
145:24 - being a hard-coded 0 just to start off
145:27 - with
145:28 - and let's position it on our game board
145:31 - so i'm going to make it go at the bottom
145:34 - so x and y axis
145:38 - and then i'm going to add it to the ui
145:40 - layer so it doesn't interfere with our
145:42 - game
145:43 - and i'm just going to assign the value
145:48 - um the score
145:49 - so whatever the score currently is that
145:52 - is the value
145:53 - okay
145:54 - so because we don't have a score at the
145:56 - moment i now need to pass through the
145:59 - score
146:00 - to add start the game so we're going to
146:02 - start off at zero and then up here once
146:06 - again i'm going to uncomment that out
146:11 - that is being passed into my game scene
146:14 - and if i run
146:24 - don't forget to add that comma
146:33 - now if i run the game you will see a
146:35 - tiny zero but it's very small let's
146:38 - scale it up so i'm gonna scale it up by
146:41 - four just so we can see
146:44 - okay
146:45 - so now we've got a score it's obviously
146:47 - zero um because we don't have anything
146:49 - yet let's write our lose scene
146:52 - and then that should show the score so
146:55 - what i would do is simply use the kabum
146:57 - method of go
146:59 - and then i'm going to pass through lose
147:01 - to make a lose scene
147:03 - and then i am simply going to
147:07 - get these score
147:09 - and
147:13 - i'm going to save this as const score
147:16 - label
147:23 - so i'm going to get the score and
147:25 - whatever the score labels value is
147:29 - that's what i'm going to pass through
147:31 - so now let's just collide with one of
147:33 - these
147:35 - check that's working
147:41 - we haven't actually written our
147:43 - seen so let's go ahead and do that so we
147:45 - should go to a loose scene with the
147:47 - outside of our game scene i'm going to
147:49 - create the loose scene now so our loose
147:52 - scene is going to look like this so once
147:54 - again a string
147:56 - and then a function
147:59 - of what's gonna happen and for this i'm
148:01 - just gonna pass through the score or
148:03 - whatever this is so i'm passing that
148:05 - through d structured
148:08 - and then i am going to add so once again
148:13 - parenthesis
148:15 - square brackets i'm going to use the
148:17 - kaboom method of text to pass through
148:21 - the score and the position of where i
148:22 - want to position it
148:24 - let's make the origin be
148:27 - center so i'm going to pass through the
148:29 - string of center and then let's position
148:32 - it
148:33 - i can actually grab the whole width
148:36 - of the browser window
148:38 - and divided by two
148:41 - and then
148:45 - grab the height
148:47 - as well
148:48 - and divide by two as well so now if i
148:50 - run the game
148:54 - go ahead and lose
148:56 - so
148:57 - amazing we get zero showing up in the
149:00 - middle of our screen because that is our
149:02 - current score because we have no score
149:05 - great
149:06 - so i think we've done everything we can
149:09 - on this level
149:10 - let's now try to add a new level
149:13 - so let's do it
149:16 - great so we have our map here
149:20 - now i need to add two maps so for the
149:23 - first level i want to go to this map but
149:25 - if it's the second level i need to go to
149:28 - you know the second map
149:30 - so const map i'm going to rename to maps
149:34 - and then this is going to be an array
149:37 - of arrays so i'm going to have two
149:39 - levels at the moment and i'm simply
149:41 - going to grab all of this
149:43 - and work that in here
149:50 - so there we go
149:51 - and just get rid of that
149:54 - so now
149:56 - if i want to go into the first
149:59 - map where i'm going to grab the maps
150:00 - array and whatever level we are on this
150:03 - is why we started the level on zero i'm
150:05 - gonna go into the maps array and if the
150:07 - level is zero i'm gonna grab the first
150:12 - map so i can just simply pass through
150:14 - level like so and that will do the same
150:17 - thing
150:18 - okay
150:19 - so that way i'm literally getting the
150:21 - first item of my maps array which is
150:24 - that
150:25 - and now let's make our second
150:27 - level
150:28 - so i'm just going to paste this here and
150:31 - let's do it
150:32 - so for my second level i'm pretty much
150:34 - going to keep it the same let's perhaps
150:37 - get rid of some of these things and i'm
150:39 - going to have lanterns on
150:41 - this side now just to make things a
150:43 - little bit different
150:47 - let's get rid of these slices
150:49 - let's get rid of the
150:51 - lanterns
150:53 - i'm just going to make these
150:55 - a straight wall
150:57 - now in here i'm going to have some
150:59 - stairs
151:00 - and then i'm also gonna have a skeletor
151:04 - great
151:06 - so now let's just change our level to be
151:09 - one for now
151:12 - that is our second
151:14 - map
151:15 - amazing
151:16 - so i actually want to get rid of this
151:18 - door too so let's just connect with that
151:19 - door like so
151:22 - great
151:23 - now how do we get from level one to
151:26 - level two well i'm going to show you
151:28 - that now
151:31 - so down here
151:33 - i'm actually going to give my top door
151:36 - the tag of
151:37 - next
151:38 - level
151:40 - just like
151:43 - so
151:44 - and in
151:45 - here so perhaps let's do it down here
151:49 - i'm gonna say if player
151:52 - overlaps with anything with the tag of
151:55 - next
151:56 - level
151:57 - what do we want to happen let's write
151:59 - our function and find out
152:02 - so if that happens i want to go to the
152:05 - game scene again so we are currently in
152:07 - the game scene but i want to go to the
152:09 - scene again
152:11 - and pass through
152:14 - level
152:15 - i'm just gonna pass through level plus
152:18 - one to get to the next level
152:20 - and then the score so whatever the score
152:23 - labels current value is
152:26 - i want to pass
152:28 - through
152:29 - okay
152:30 - so let's check that out let's go back to
152:35 - level zero
152:37 - now let's try collide or sorry overlap
152:40 - with the door
152:41 - making sure the slider is out the way
152:43 - first
152:44 - and great
152:46 - if i try however go here nothing will
152:48 - happen
152:49 - i need to add next level to the stairs
152:52 - too
152:55 - this will however be problematic
152:57 - so i'm gonna show you why
153:00 - so just let that collide again
153:04 - now if i go to the stairs
153:06 - everything breaks that is because there
153:08 - is no level three
153:11 - so i can easily account for this by um
153:14 - it's finding a
153:16 - level and then i could say modulus
153:23 - maps
153:25 - length to make the levels loop over each
153:28 - other okay so this way it will loop um
153:31 - and it will just be continuous for us
153:34 - so now if i
153:36 - go here
153:39 - go up the stairs
153:41 - you will see it's looping so that is
153:42 - just a quick fun fix for you
153:45 - let's carry on
153:47 - i should really be moving this to the
153:49 - top
153:51 - of my game so just to keep everything
153:54 - consistent
153:55 - let's put this slice of speed up there
153:57 - too
153:59 - i'm also going to define my skeletal
154:01 - speed while i am here so i'm going to do
154:04 - that now
154:06 - let's say skeletor so scala
154:10 - for speed i'm going to make a move quite
154:12 - slowly so i'm going to say 60.
154:15 - now
154:16 - let's i'm going to actually put this
154:18 - back to level
154:19 - one just so we can start off on the
154:21 - second level
154:22 - each time
154:24 - great
154:25 - so just where i move the slicer i'm
154:29 - going to move my skeleton so i'm going
154:32 - to use action again and i'm going to
154:34 - pass through the string of skeletal this
154:36 - time and well what do i want to happen
154:39 - let's write a function and find out
154:42 - so this time i'm going to pass through s
154:43 - for skeletal
154:45 - i'm going to grab skeletal i'm going to
154:47 - move him
154:48 - and skeletal again let's make him move
154:52 - up and down this time
154:53 - so i could just pass through a zero and
154:56 - the skeletal speed because obviously
154:58 - x-axis y-axis but i also want my
155:00 - skeletal to change direction however
155:02 - this time i wanted to change direction
155:04 - randomly and if he hits a wall so i'm
155:07 - going to show you how to do that
155:09 - once again i'm just going to up here
155:14 - give skeletor
155:17 - a direction
155:19 - so now
155:22 - when we move skeletal
155:25 - we also need to
155:29 - multiply them
155:30 - by skeletal's current direction
155:33 - okay
155:34 - so we are doing that
155:40 - let's carry on
155:42 - so now i'm going to actually give
155:43 - skeletor a
155:45 - timer
155:47 - i'm going to use the delta time
155:50 - so delta time if we look here
155:54 - once again i think i have gone through
155:57 - before but just one more time it's the
155:59 - delta time since the last frame
156:01 - so that's what i'm going to be using
156:04 - um and if
156:06 - the
156:07 - timer
156:11 - so i of course need to
156:13 - give
156:14 - skeletal a timer up here so i can do
156:16 - that in the same object timer let's
156:19 - start off with the timer being zero
156:26 - if the uh timer is suddenly
156:30 - smaller than or equal to zero
156:34 - i want to grab the
156:37 - direction
156:38 - and i just want to change it so just
156:40 - like we did with the
156:42 - slicer i'm literally changing it from a
156:44 - positive to a negative value and if it's
156:46 - negative to a positive value and then i
156:49 - want to get these
156:52 - skeletal timer and randomly
156:55 - so this is in the method to get a num a
156:58 - number randomly
157:00 - between uh 0 and 5. so now or less than
157:04 - five should i say now using rand this
157:07 - will attack assign a new value to the
157:10 - timer so essentially this is saying that
157:13 - our skeletal will change direction
157:16 - randomly so it will start off at zero if
157:19 - it's zero then the skeletal will change
157:21 - direction and then the time is going to
157:23 - get another random
157:25 - number from zero to five and this whole
157:27 - thing will start again
157:29 - i'm also going to have
157:31 - i'm also going to have to give skeletor
157:36 - the tag of skeletor just like slicer and
157:39 - let's click run
157:42 - okay great
157:43 - you can see he's changing direction
157:45 - however he is not changing direction if
157:47 - he hits a wall
157:49 - let's do that now
157:51 - so i can actually reuse this right here
157:55 - so i can reuse this and just say that if
157:58 - anything with a tag
158:00 - dangerous
158:02 - collides with
158:04 - a wall so dangerous instead of slicer
158:10 - here we go
158:11 - they should change
158:12 - direction this is pretty neat
158:15 - we have a few more things that i would
158:18 - like to do
158:20 - so let's
158:22 - carry
158:23 - on
158:24 - the next thing i want to do is of course
158:27 - make sure that our
158:30 - hero
158:31 - can defeat
158:33 - the enemies so i'm going to do so with a
158:35 - kaboom instead of a sword i'm going to
158:37 - use a big kabum to do this
158:40 - so first off i'm actually going to have
158:43 - to
158:44 - import that sprite
158:46 - so i'm going to use load sprite again
158:50 - and let's just call it kaboom
158:52 - as we are using the kaboom js
158:54 - environment i thought that was quite
158:56 - fitting
158:57 - and i'm just going to use this kaboom
158:58 - that i made here
159:00 - so i am going to let's refresh this
159:07 - i'm going to get the share links copy
159:09 - this here
159:10 - i'm just going to paste it as a string
159:13 - like
159:15 - so
159:16 - so we've got the kaboom now now we let's
159:18 - actually spawn a kaboom
159:20 - so i'm going to do this just under
159:26 - here
159:27 - now
159:28 - i'm going to write a function called
159:31 - spawn
159:33 - carbon
159:34 - just like so
159:36 - and
159:37 - it's going to be a simple function like
159:39 - this
159:40 - and into it
159:42 - i am going to
159:46 - well actually let's start off with
159:48 - adding what we want to add first if we
159:49 - spawn a kaboom because i want to add
159:51 - these sprites of
159:53 - you guessed it
159:56 - so at the moment nothing will happen
159:58 - that's because we need to assign a
159:59 - position and the position that i want to
160:02 - assign it is going to be the position of
160:04 - whatever i pass through into my spawn
160:07 - carbon function
160:09 - okay
160:10 - so that is what i'm gonna do
160:12 - and then i'm just gonna give it the tag
160:14 - of kaboom as we are gonna need that
160:16 - later and i'm actually gonna save this
160:18 - as object for now because we are going
160:20 - to have to destroy that in a bit
160:23 - so there we go um
160:26 - let's perhaps write that now in kaboom
160:29 - we can use the method of weight
160:31 - and we simply have to pass through a
160:33 - number which is how many seconds we want
160:35 - to wait before something happens so
160:39 - let's write our function to write find
160:41 - out what that something is
160:43 - so after one second i want to destroy so
160:48 - another kabum method the object which is
160:51 - microboom object
160:53 - great so we've got everything we just
160:56 - need to use this function and pass
160:58 - through a position
161:00 - so
161:01 - where can we do this well i'm going to
161:05 - actually so i'm going to say on key
161:07 - press
161:08 - uh spacebar so this is how we would
161:11 - write spacebar what do i want to happen
161:13 - let's write a function
161:16 - so our function on the key press i want
161:19 - to use this function that i have just
161:21 - written
161:22 - like so and of course we need to pass
161:24 - something through we need to pass
161:25 - through position
161:26 - so the position i am going to pass
161:29 - through
161:30 - is my players position
161:33 - so wherever my current
161:35 - player is
161:36 - okay
161:38 - so i think that should work
161:41 - let's try it out i'm gonna press space
161:45 - and there we go
161:50 - this is looking pretty cool
161:53 - however let's actually position it um a
161:57 - little bit farther than our player
162:00 - so where is our player
162:02 - where we add our player
162:07 - so here we add our player i'm just gonna
162:09 - space this out so it's a bit more
162:11 - readable
162:12 - so we're passing through a sprite we'll
162:14 - possibly position i also want to pass
162:17 - through an object that is the direction
162:19 - and i'm just going to put
162:23 - him going right at the moment and i can
162:27 - now use this in order to make our kaboom
162:32 - uh object go out a certain way based on
162:35 - his direction so based on my
162:37 - player's
162:38 - direction
162:40 - and i would simply
162:47 - use the position that we are currently
162:49 - in plus add
162:51 - so we're going to add a little bit extra
162:53 - so whatever the player's
162:57 - direction is and scale it by
163:01 - let's say 48 okay so 48 pixels if it's
163:04 - negative 1 it's going to be negative 48
163:06 - if it's positive one it's going to be
163:08 - 48. so that should work the only thing
163:10 - we need to do is actually assign a
163:12 - direction to our player each time he
163:14 - changes direction so i'm going to go
163:16 - player
163:17 - and then this is going to be vector 2.
163:23 - um zero one
163:25 - this is going to be player
163:28 - direction zero
163:30 - minus one
163:34 - and you probably guessed it by now this
163:35 - is gonna be player direction
163:39 - one
163:40 - zero
163:41 - and this is going to be
163:44 - player direction
163:47 - minus one zero
163:49 - so let's check it out
163:52 - boom
163:52 - so you will see the kabum is now not on
163:55 - the link link the player himself but in
163:58 - front of him
164:00 - depending on which direction he is so
164:04 - great
164:05 - one last thing i promise and that is
164:07 - adding a score if we destroy
164:10 - a
164:11 - skeletal
164:12 - so i'm going to
164:14 - do that here
164:17 - so i'm going to use collides again and
164:20 - i'm going to pass through anything with
164:21 - the tag of kabum and anything with the
164:24 - tag of skeletal
164:26 - and i'm going to actually pass through k
164:28 - for goodbye and the skeletal this time
164:30 - so we can use both if both collide well
164:34 - i want to wait perhaps one second and
164:37 - then what do i want to happen so a
164:40 - function well i want to destroy
164:47 - the kaboom
164:49 - so destroy the kabum after one second
164:52 - but i want to destroy
164:55 - the skeletal immediately so that is how
164:57 - i will do that i can also grab the score
165:00 - label
165:01 - value and increment it using the
165:03 - increment operator by one
165:06 - and then also we can update the score
165:08 - label
165:10 - text
165:11 - to be
165:12 - the
165:13 - score
165:14 - label value just so we can see it in our
165:17 - browsers as well
165:19 - okay
165:20 - so that is good and i can also add
165:22 - something fun like a clam shake so let's
165:24 - add a cam shake of scale four
165:28 - so now let's try it out
165:31 - boom
165:32 - great so we're getting the cam shake we
165:34 - are destroying skeletor and we are
165:36 - adding one to the score and if we move
165:38 - on to the next level so let's just see
165:49 - this is all
165:52 - let's just try again
165:53 - so
165:54 - let's just go boom whoa that was a bit
165:57 - fast let's just try again boom
166:00 - amazing
166:01 - everything is looking great
166:04 - so i hope you've enjoyed making this
166:06 - game of zelda completely
166:08 - from scratch please do share your
166:11 - replies with us on free code camp i
166:13 - would absolutely love to see how you
166:15 - have made this game your own how you
166:17 - have taken it to the next level um have
166:20 - you added more levels perhaps have you
166:22 - added more enemies have you done any
166:24 - other really cool stuff i'd really like
166:26 - to know
166:27 - so thanks so much again for coding with
166:29 - me i hope you've enjoyed this lesson and
166:33 - i'm sure i'll see you soon on free code
166:35 - count
166:36 - bye
166:43 - now we've been creating our games in
166:45 - replit and it is now time for me to show
166:48 - you how to publish your games in the
166:50 - replit app store too
166:53 - so this is really simple it's going to
166:54 - be a really short section if you're
166:56 - really proud of your game and you want
166:57 - to share it and publish it please head
166:59 - over to replit forward slash apps and
167:03 - simply click publish right here
167:07 - once you have clicked this just click
167:09 - continue
167:10 - and then search for your repl of choice
167:14 - i'm going to choose zelda and i'm simply
167:16 - going to write a quick description so a
167:20 - wonderful game of
167:23 - zelda making sure to spell that
167:25 - correctly
167:26 - and then if i want to
167:28 - have a cover image i of course can i do
167:31 - think that is the best practice
167:33 - i'm not going to show you how to do that
167:34 - because i think it is pretty
167:36 - self-explanatory you can also add tags
167:39 - so i've always got html in here i can
167:42 - also put
167:43 - kaboom if i wish
167:45 - um and then i can allow for comments if
167:48 - i feel comfortable to do that
167:50 - and there we go it was really that
167:52 - simple um thanks so much again for
167:55 - coding with me i hope you can share your
167:57 - games with us too
167:59 - can't wait to see them
168:07 - now before you go i just want to make a
168:08 - very quick section about how to perhaps
168:12 - use kabum in your own code editor of
168:15 - choice so i'm going to do this envious
168:18 - code i hope you can code along with me
168:20 - let's do it
168:22 - so this section is really simple it's
168:24 - going to take a few seconds i'm simply
168:26 - going to head over kaboom js
168:28 - and i'm going to copy all of the code
168:31 - that you see right here
168:35 - so it's simply this it's just the code
168:37 - that i'm going to use for the quick
168:38 - start i'm going to copy that and then
168:40 - just post it in the index html
168:45 - now if i open this up in my code editor
168:48 - of choice so open up around the browser
168:50 - you will see the ohiomark text that we
168:53 - expected to see
168:55 - done it was really that simple and from
168:58 - then on you are more than welcome to use
169:00 - all the other kaboom js
169:03 - methods to your disposal
169:05 - don't forget to check what version you
169:07 - are on so you can see the version here
169:09 - as most stuff does change quite
169:11 - frequently
169:12 - so make sure to refer to the
169:13 - documentation if you are currently on a
169:16 - newer version
169:18 - you can also move out all of this into a
169:21 - separate javascript file so i would do
169:24 - so like this
169:25 - i would simply create a javascript file
169:27 - like so
169:28 - and just paste everything in there
169:39 - so now if i look at the browser
169:41 - everything works the same
169:43 - so it was really that simple thanks so
169:45 - much for this short section and i'll
169:47 - hope to see you soon
169:50 - okay and that's it thank you so much for
169:52 - coding with me i hope you really enjoyed
169:54 - this wonderful course on kaboom js and i
169:57 - hope you can see how powerful of a tool
169:59 - it really is when it comes to game
170:01 - development thanks so much again and
170:04 - i'll see you on free code camp soon

Cleaned transcript:

hello everyone here at free code cap i hope you are ready for this video it's going to be a super exciting one that personally i have been looking forward to sharing with you for a long time it's exciting for two reasons one i'm gonna be introducing to you a new technology that makes creating games super easy allowing us to spin up games like this in minutes two i'm going to be using this technology to show you how to create some classic games such as mario zelda and space invaders step by step so that you can have your own game to take improve on share with your friends barista yoga instructor whoever you wish so before we get to that let's start with the reason number one the new technology for those of you who haven't heard of me my name is anyakubo and i'm a software developer and course creator on youtube who love to teach through building games and this specific technology is built exactly for that we are going to be learning how to use kaboom js kaboom.js is a javascript library that helps you make games fast we are going to be using this library to simplify creating scenes adding layers creating sprites directly in the project or importing them based on your preference dealing with actions and collisions adding key events debugging and so much more this simplicity allows us to enter the world of game development at a low barrier of entry and gets us coding without being disheartened due to pages and pages of documentation which is common in the game development process we see today the ability to spin up games so quickly is something that the folks at replit the collaborative browserbased ide have been passionate about developing for quite some time they wanted the end product to empower everyone from kids to beginner devs as well as intermediate programmers to start creating games with as small a learning curve as possible great now that we have learnt a little bit about kaboom js let's get to using it in the next section i'm going to go over the basic concepts of kaboom js i'm going to show you how to import kaboom js and get it up and running initialize the project start the game add a scene create some sprites as well as show you all the other things we can do with it once we have the basics we will be using this knowledge to create our three games as well as learn more things along the way if you do need to refer to a section of the video after we have learnt a concept please refer to the time stamps in the description of this video each time stamp will take you directly to the section annotated next to it now i do advise that you not skip ahead of some sections of this course as the chapters are done in such a way that will build on the knowledge you gain throughout the only prerequisite i ask of you is to have a basic understanding of the fundamentals of javascript before starting this course but if you're feeling adventurous please do have a go of following along anyway like i said this library is intended to make javascript coding a whole bunch easier by providing a layer of shortcuts if you will to create games i for one i'm super excited about what you all end up building with this javascript library so please do share your final games with me and with us on twitter youtube instagram wherever you wish okay so what are we waiting for let's do this okay so first things first in this section i'm going to show you some of the basics into getting started with kaboom.js here are all the functions and methods to your disposal in the kaboom.js library i will be covering the core concepts so all the ones in red in this section the others we will learn along the way while coding our games by the end you should have a firm understanding of kabum and what you can create with it okay so to start things off i'm actually going to start off on the kaboom js website i'm starting off here because it has all the documentation that you're going to need to refer to after this course so if you do get stuck or perhaps you just want to do some extra reading this is the place to go to now to get started i'm going to actually utilize the kaboom environment on replit which has been premade for us and configured in order to get going a lot faster so i'm just going to gravitate toward there now i'm going to click here on kaboom environment on replit and i'm just going to sign up now please take your time signing up here i'm just going to click on the gmail sign and it's going to take me straight to my dashboard fantastic so here you will see some rebels i've already made however i'm going to show you how to make one from scratch all you need to do and you can use all different languages as well but however so i'm just going to click here as this is a kaboom js tutorial we are of course going to choose kabum so i'm just going to click now and you will see a lovely random name has been generated for my project now feel free to change this if you wish i quite like it so i'm just going to keep it and click create repel and there we are our kaboom environment is now loaded so as i said this has been already configured for us the only thing i'm going to ask you to do is click here and check there you are on version 5. if you are not and there is a newer version out there then don't worry feel free to code along however if you do find that something is not working quite as you would expect then make sure to change it to version 5 and refer to the documentation to see what has changed since this tutorial great now i just want to cover the basics these basics are going to be things that we're going to use throughout all three tutorials which is why i think it's great to cover them now together the first i'm going to show you how to do is add a sprite so let's do it to add a sprite in replit we have this really cool feature that will allow us to actually create a sprite in the platform itself this is great as we don't have to rely on a thirdparty service such as a pixel maker or just sort of an editing software for images we can make everything right here so to do this i'm just going to click here and what shall we call our sprite i'm just going to call him her player and put width and height of 40. so now i'm just gonna create my player um so i'm just going to go ahead and do that now let's make them purple and then i'm just going to make a little alien because i think that's quite fun so here's my little alien um there we go he looks a little bit like monster munch if you know that was crisps so there we go there's my alien i'm getting some little eyes there they are great so now if i click main and i am simply going to use the kaboom method of add open up some parenthesis open up an array and i am simply going to use another kabum method called sprite and i'm going to pass the string of whatever i called my sprite so i'm just gonna go like that and click run and there we go we have added a sprite to our game board that was pretty easy and pretty painless we can do a lot of other things too so if i think my sprite is too big i can scale them by 0.5 and click run so there we go they are now half the size i can also use position so i can position my sprite and the first value is going to be the xaxis and the second is going to be the yaxis all stemming from this point right here so if i put 20 20 well our sprite is going to appear right there because i've applied 20 pixels to the left and 20 pixels from the top so pretty painless let's carry on the next i'm going to show you how to do is add a level so to do this i'm going to use another kaboom method called add level making sure that it's camel case i'm going to open up a parenthesis and open up our braces sorry square brackets so the first argument is going to be our map and the second argument is going to be an object which is going to be our config for our game so let's start off with the map first i'm simply going to draw out what i want my map to look like using uh quote marks so there we go i'm just going to use the quote marks like so i don't know how many we want but let's okay let's just have this many and then i'm going to make x's for the ground so make sure that it's in the quote marks now we need our config let's also put something here okay so this there we go now we need our config so the width and the height are going to be the width and the height of every one of these little objects here so i'm going to put 40 and height 40 as well just to be um the same as these sprites and now i need to define what all these objects are so i'm going to grab the x and this is the syntax i'm going to open up my square brackets and this x is going to be the sprite of and then let's make a ground sprite so once again width and height 40 i'm going to create and then let's make our ground so my ground is going to be i can even add more colors if i wish but i'm pretty happy with these there we go so we made our ground so now i'm going to use ground so once again i'm just going to use the string of ground and click run and there we go we have added our ground this is looking great the next thing i want to do now i think we should apply gravity to the sprite so i could do so easily by using body like so and clicking run and there he goes he falls with gravity we have just applied gravity to the sprite but obviously we don't want him to fall through we want him to fall on the ground right that makes sense so i can now assign the component solid to the ground just like so and he stops now let's add an enemy so i've decided that i want anything with the at sign to be an enemy so let's grab the enemy and then i'm gonna use so we're gonna have to make another sprite that's gonna be the enemy um i'm not quite sure what enemy we're going to have so i'm just going to create a little enemy i'm not sure what an enemy looks like so i'm just going to create something um of course feel free to take your time with this i'm just going to create a little bumblebee thing because you know for some reason i think bumblebees are now enemies don't be deceived by their cute little looks and let's give it a little face so there we go there's my little enemy now so i'm going to use enemy like so and click run so we've added our enemy i can have as many enemies as i wish on the board so i'm just going to click run again and there you go so i don't actually want that many let's just keep one for this tutorial and perhaps let's scale them down so i can apply scale here too to scale 0.5 brilliant okay so we've added our sprite we've created our game board the next thing i want to show you is how to move a little sprite across the boot so to do this i'm going to have to assign this to something so i can keep reusing it in our code so let's perhaps assign this to const layer now using key down i'm going to pass through right and then pass through what i want to happen if i press the right arrow on our keyboard so what i want to happen i'm just going to function so when we press right this is going to happen this function is going to be called so what i want to happen is i want to grab the player i want to use the kaboom method of move and once again just like with position i'm going to pass through an x and y axis um let's save this as move speed let's make it 200. so we can reuse this in our code so i want to i want this to be the xaxis and i don't want a sprite to move up or down i only want them to move left or right so that is what i've done here by passing a value to the xaxis of 200 and 0 to the yaxis so now if we run this and i'm just going to press the right button there it goes and there it goes so now i can actually copy this and do the left and for left i simply need to put a minus so that it goes the other way on the x axis so now there we go our sprite is moving left and right i can also use key press the choice is totally up to you now we've covered how to make a sprite we've covered how to add the level we've covered how to move our sprite i'm going to show you one last thing before we move on and that is what happens when two things collide so i'm going to do that down here i'm going to grab our player and if he collides so this is another coupon method with anything with the tag of dangerous so i'm just gonna add the dangerous tag let's make this perhaps a little bit dangerous tag to our enemy so we can reuse this tag we can put this to a lot of different sprites but i'm just going to give it to the enemy for now so if our player collides with anything with the tag dangerous well what do i want to happen let's pass through a function i want a player to be destroyed so let's do that now let's also perhaps add gravity to the enemy and if our player collides with anything with the tag of dangerous well i want to destroy it so i'm going to use the method of destroy and just pass through our player so let's run that now both of them fall i crash into the ferry and i disappear my little sprite gets destroyed great so we have definitely covered all the basics that need we need to get started on our tutorials please feel free to have a pause here uh and have a play around in your replica boom environment before we get going just to feel a little bit more comfortable about doing stuff for yourself okay so once you are ready i think it is fine for us to carry on let's do it let's start off with space invaders best okay so let's do it let's build space invaders once again using the kaboom gs environment in replit so i'm going to start off with making another rebel so once again i'm just going to click here and i'm just going to click ok and once again a random name is generated for me feel free to change it if you wish or keep it the choice is up to you and i'm just going to click create reply great so now we are here let's get going the first thing i'm going to do is actually start by perhaps creating our map so just like we did in the intro i'm going to use the kabum method of add level and i'm just going to open up an array for our map and an object for our config so now in here let's start creating our map so i'm just going to put a few of these so i think let's have a left wall and then let's have some space invaders so i'm just going to decide that i want the little hat to be a space invader so i'm just going to put a few of these let's have 10 1 2 3 4 5 6 7 8 9 10 or perhaps more what do you think let's put a few um the choice is totally up to us and then some spaces and then i'm going to have an and sign our ampersand for the uh right wall because we need to tell our code what is going to be the left wall and the right wall for collisions i'm just gonna have three rows of these space invaders and the rest is just going to be a left wall and the right wall so just like so i'm gonna have a few of these because it's gonna be quite a big board for us so we have a lot of space to play around with okay now let's do our config so i'm going to decide that i want each of the elements on my board to let's say have a width of let's say 30 and i'm going to make the height 20 or so or 22 and then i'm going to define what everything is on my board so perhaps let's create the sprites first because we need a space invader like so and let's make it width 30 height to 22 and click create so now i'm just going to create my little space invader guy once again like please feel free to make your spins vader look however you wish this is how i've chosen to make mine of course the choice is completely up to you so similar to like we did before but here's my little space invader it's going to give him some little eyes and great so i'm happy with that now i'm also going to create a left wall so perhaps let's just use wall for this because we can reuse it and width 30 height 22 and click create and for this i'm just going to color it black fantastic so now let's go to adding our sprites so i've decided that i want these little hats to be our space invader so this is the syntax i open up an array and i'm going to use the kaboom method of sprite to then find the space invader so i need to get the space invader by using the string of whatever it's called and then so that is the first one and then let's also make a so we decided this we want to be a left wall well i can reuse the sprite for wall so i'm just going to open up an array and use sprite and then pass through wall like so even though i don't know why wall so we have our wall i'm actually going to give this the tag of left wall so we can use it in our project so left wall and i'm going to copy this and then this time i'm going to use the ampersand and this is going to be the right wall so just like so now if i run this there we go so there are little space invaders there are walls i can maybe let's scale this down a little bit or perhaps maybe let's just get rid of that because we don't really need it and click run so yeah perhaps let's scale everything down um i'm gonna scale everything down just up here now i can actually change the scale of this whole game board by going to kaboom and scaling it down to just one because at the moment we are double the size and clicking run okay so there we go i think that looking that is looking a lot better and we can see our whole board fantastic the next thing we're going to do is add our player so const player and then using the add method again so just like we did in the intro i am going to add the player so this is going to be a sprite that is going to be a space ship now let's go ahead and create our little spaceship so once again i'm just going to click space ship and create it with a width of 30 and a height of 22 and click create now what how should we make our spaceship let's make it orange and i'm just going to make it look a little bit like so please feel free to of course make this however you wish but i'm happy with that so now i've got my spaceship i'm just going to get rid of this again i'm actually going to give it a position so i want to position it in the middle of my screen so i'm going to use width divide by two and height also divided by two just like that and then oreo gin the string center and click one okay so now my little player is in the center um i also might want to scale it up if i wish i don't think i do at the moment i do however want to scale my invaders because i don't want them to take up the whole square so i'm just going to do scale 0.7 like so and click run great so now they are appearing a little bit smaller the next thing i want to do is actually assign keystrokes to my player so i'm going to do key down so this is to make our player move left and if i click left well what do i want to happen let's put a function and find out if i press left i want to grab the player i want to move it and then let's have the move speed so const move speed and let's say that is 200 so now i can use the move speed and put zero and because we're moving left this needs to be a negative and let's do the same for moving right so i'm just going to replace this with right and then not make this negative so let's check that out if i move or press my little keys there we go our player is moving left and right this is pretty cool now the next thing i want to do is add a score so i'm going to do this the first thing i'm going to do actually perhaps let's move on constant to the top of the file i'm just going to paste it in here and i'm going to get layers so in my layers let's open up some our array i'm going to have the object layer for where all my objects are a ui layer where i can score store delay swa store the score without affecting everything on my board and then i'm just gonna make the default the object player so if it's not sure that is the default layer great now that we have that let's add our score down here i'm going to say quant score i'm going to use the add method so the kabum method to add this time i'm going to add the text so i'm going to start off with zero and then position and i'm going to just put in 50 50 to position the score and then if we want we can scale it up but let's just see how it looks i'm going to put it on the ui layer so that is how we will put it on the ui layer and finally i'm just going to have an object of where the score value is going to be i'm going to start off with 0. so just like that so now if i run this we get our score you can sort of see it it's a bit small i might actually scale this up so scale by three just to show you where it is okay so now it's a lot bigger you don't have to keep it the size you can also move it if you wish so we've got our score the next thing i want to do is perhaps let's start um moving the uh invaders before we start doing anything else so like adding a timer or let's add the let's add the timer okay so const timer equals and once again i'm going to add open up an array uh i'm also going to start with text thing zero and then let's position it so i'm just going to position it below the text the score text let's make it scale just by two this time and again i need to add this to the ui layer and i'm going to put the oops and let's have an object that has the time which is the time left so const time left let's say we want i don't know 14 seconds for now so i'm just going to put it 14. we can of course always change it so there we have that let's click run so that is our score and that is our time left let's actually make our timer move down in time now so i'm going to grab the timer i'm going to use action so that is another kabum method and action essentially runs every um i'm just going to show you the documentation action actually gets called every frame so okay just keep that in mind i want the timer to so let's get up our curly braces um it's gravity time is time so this right here and i'm just going to make it decrement by delta time this is delta time since last frame so just remember that and now i want the timer text to be the timer's time this is going to be delta time click run so now it's counting down from 14 as we said we want it to be from 14 seconds let's perhaps shorten it because that's too many points after um that i need so i'm just going to fix that to a fixed uh length so two fixed two there we go so that is looking pretty cool that is our timer and of course we need to write what happens when we run out of time so if uh the timer time is suddenly smaller than or equal to zero well what do we want to happen we want to lose so we're going to write a loose scene in a bit um or we can write it now sure why not go to the this is how you go to another scene go to a lose scene and take the score with you to score value so let's go ahead and write our loose scene so in here we are in the main scene i'm going to add a loose scene just like so and my loose scene is simply going to be so i'm just going to use add and i'm going to add the text of the args so augs is anything that we pass through into this scene args school so we're gonna add these score uh as text and we're gonna let's also position this urge origin center um let's make it really big let's make it scale ten and then let's put the position let's also grab the width of the screen divided by two and grab the height of the screen and divide it by two cool so that is oops really it so now i'm just going to make the time a lot shorter because i don't really want to wait around for that long so great so um we do need to fix this however i am going to just carry on because we're not actually adding anything to the score quite yet nothing's happening with the score so we'll go back to this uh in a bit so i'm just going to leave this as 100 for now while we continue coding okay so it's just going to keep uh running from 100 just ignore it for now so we have that um perhaps actually let's that's quite distracting i'm just going to comment that out so there we go don't forget to uncomment that out later but for now i'm just going to keep it like so and then comment this out uh too okay great now let's get our space invaders moving left and right i think um yeah i think that'll be fun let's do it so i am going to use uh for this i'm going to use action so that's another kabum method and i'm going to grab anything with the tag space invaders so just make sure that the space invader has that tag which it doesn't let's go ahead and add that tag here so i'm just going to put the tag of space invader space invader so anything with the tag space invader well i'm going to pass through s for the space invader into my function because i want the space invader to move at a uh speed okay so what should we make the speed um const space well let's just go invader speed that's fine and let's just make it 200 for now so i wanted to move on the xaxis with invader's speed so let's do it let's see our space invaders move okay so they're moving they're moving really fast maybe let's make it a hundred but they're moving off the board so this is why i wanted to have a left and right wall because i need to write a collides function so i'm gonna do so like this i'm gonna get collides and if anything with the tag space invader collides with anything with the left wall or let's start with the right wall first maybe the tag right ball well what do i want to happen well let's get a function and find out i want to change the speed of the invader speed so i'm gonna get const current speed and for now let's have current speed as the invader speed so i can just use current speed here and if there is a collision well what do i want to happen i want to get the current speed and i want to change it to negative invader speed okay so i'm going to change the speed and i'm going to use every and for every space invader so i'm going to grab all the space invaders and i'm going to so not only change the direction i want them to move down so i'm just going to pass through object we can call this as the space invader again if you feel more comfortable so we could do that for every space invader well i want this space invader to move down so this time i need to affect the yaxis and i'm just going to do level down so let's define level down const level down and let's say 50. so let's check it out ah yes of course this will change so we need to make this a let thank you for letting us know okay great so now we just need to do the other side perhaps let's make the move down more by a hundred and i'm just going to copy this and i'm just going to paste it and change it that if they collide with the left wall well i just want the space invader speed to be not negative anymore but i still want each of them to move down so let's try that okay great fantastic i still think this should perhaps be bigger so let's try that again but it's totally up to you okay you can make this as hard or as easy as you wish i'm just going to increase the board size here because i think it needs to be a bit longer to make sure that our um spaceship fits in it so there we go that's better fantastic so we've got our little invaders moving down the next thing i want to do is start spawning bullets so let's do that now actually perhaps that's right what happens when the player collides with the space invader yeah let's do that so i'm just going to refresh if the player overlaps with a space invader well once again what do i want to happen well i want to go to the lose scene so once again i'm going to go to the lose scene just like so i'm going to pass through whatever the score is score value value okay so that should work and also if the so action if the space invaders suddenly go too low so just in case they miss my um spaceship space invader what do i want to happen well i'm going to grab this space invader so if they suddenly get like below a certain so obviously they've just gone off because there's no wall if they get around here i want them to um i want us to go to the lucien as well so if uh the space invaders position y is suddenly smaller than sorry larger than the or equal to than the height itself so you could do it so it's the whole way or you could do height divided by two it's totally up to you that looks like halfway to me just about then we want to again just go to the loose scene fantastic so let's run that and let's see how we do so while that is happening i'm just going to carry on because i want to spawn some bullets so perhaps let's just move this to the top of the file as well just to keep everything neat okay so you've done all this time to spawn some bullets okay great so we are getting a massive score show up we've got zero score um that is looking good as soon as we collide with the uh spaceship we go to the losing scene so let's see because i was passing this through incorrectly so that should be it now let's spawn some bullets so once again where we have this here i'm going to do key press because if we press a key so i'm going to do if we press the space bar i want to spawn a bullet so i'm going to write a function called spawn bullet for this just going to do it up here function spawn bullet like so i'm going to pass through the position of the player to p for player i'm just going to add a rectangle so i could do so by using rect so that is another kabum method and i'm going to make the rectangle that big and then i'm going to position it to wherever the player is and then origin center let's give it a color so color 2.5 0.5 one just gonna space this out so it's more beautiful for everyone and i'm also going to give it the tag of bullet for later because we we need to know if we collide with the bullet so there we go that's the function spawn bullet and if i press key space i'm going to use that and i'm going to pass through whatever the player's position is at the time so player position and i'm just going to well let's do this for now we need to do add actually we need to add some position okay so let's try that okay so there we go we are spawning a bullet now if i want to make that a little bit higher i could do something like this see and now the bullet is being spawned a little bit higher than me cool now let's get the bullets to move right so i'm going to do that now i'm going to use action so just like that to pass through anything with the tag of bullet to anything with the tag of bullet that's why we give the bullet a tag and b for bullet is what i'm going to pass through into the function now i'm going to move the bullet to grab b and then use the kaboom method of move i'm going to move it minus and then we need a bullet speed so this is the yaxis bullet speed let's make it 400. okay so i'm going to grab the bullet speed i'm going to put minus so it goes up on our board because remember xaxis yaxis now if i'm just going to destroy the bullet once it's out of the scene okay just for performance issues in case it has any performance issues so i'm gonna grab if the uh bullet's position y position is suddenly smaller than zero well then i want to destroy the bullet okay great so let's try that oh amazing and now let's actually write something for the collision so collides and i'm going to grab the bullet i'm also going to grab these anything with the tag of space invader and then let's pass through a b and an s one for bullet and one for space invader and what do i want to happen well i want to destroy the bullet i also want to destroy the space invader and i also want to add one to the score so score value plus plus just use the increment operator and let's actually show the uh score value and the text because we hard coded it as a zero string zero before i can also add a cam shape so i'm just going to do that now let's shake the camera can shake and let's run it so now poor cow shake come shake how fun is that amazing um what's up these score text is not updating though why is that score value right sorry the score value needs to be the score text we okay how fun is that we can of course make the game harder or easier um just do it however you wish you can add more space invaders too it is completely up to you so now let's uncomment the timer as well i'm just going to move the constants to the top just because i think that is best practice and then did we have another one bullet speed and then of course please feel free to tidy this up too i think that is looking okay though and click run great uh let's make the time left maybe 30. so like i said you can do this by time you can do it however you wish you can add more space invaders you can uh slow down the bullet speed you can do so so much um it really is up to you let's actually move that timer out a little bit because i think so yeah the xaxis i think i said y before the xaxis let's make it a hundred okay great now i'm gonna do one last thing before we go and i'm just gonna change the background to be black so i don't want to clear color i want a black background to run okay and there we have it we have now finished our game it looks really fun like i say this is just the basics to get you going we've covered all the functionality that you need but it is up to you to really make this game your own take it to the next level you know add another level if you want and more space invaders um of course add more scenes if you wish there really is so so much you can do with this game uh let's just check that the lose works and it does we get the score showing up if our space invader collides with our spaceship so that is it um one thing that i would suggest is perhaps add a winning scene so if you shoot all the invaders that's something you can do uh i've already mentioned adding new levels that is something we're going to cover in the next tutorial so if you want to learn how to add more levels please stick around mario up next okay so well done creating space invaders now it's time to move on to creating mario again in the kaboom replit environment as you can see i'm already in my replica kaboom environment if you have skipped ahead to this section i would recommend watching the basics section in order to understand how to get to this point once again i'm just gonna check that i am on kaboom version five if you are on a later version of kaboom currently then please do refer to the documentation if you feel something isn't working quite right to see what has been updated since okay so great i'm actually just going to start off with our scale being one and let's do it the first thing that i'm going to do is actually load up my sprites so in space invaders we drew the sprites this time i'm going to upload the sprites so i can do so in the kaboom replit environment quite easily just by this button right here so as you can see i've already created all my sprites the next thing i'm just going to do is click them to upload them like so so there we have our block you can see the name of the file is exactly what our environment calls our sprite i can then do a blue brick so just like so a blue evil shroom some blue steel and then a blue surprise a brick a coin an evil shroom one i'm not gonna have evil shroom two let's have mario standing a mushroom a pipe left a pipe right a pipe top left and a pipe top right side so we don't need all of them and then a question box and then an unboxed box so hopefully that should be it this is looking good the first thing i'm going to do is add my map so let's do it i'm simply going to write const map like so open up an array so just like we did in space invaders and i'm just going to draw my map how i envision it for mario so i think that should be okay please make sure to keep everything in the quotation marks for this to work so i'm just gonna keep pasting just like so okay and then i'm going to create a ground i'm not sure which ones i want to use for the ground but i'm just going to put the equal signs as a ground for me for now on and then perhaps some spaces too so there we go that is looking good the next thing i want to do is decide where everything else goes on my little map so i'm going to have some pipes here once again i am using symbols which i'm going to assign values to in a bit so there is my pipes i'm also going to have some mushrooms so what should i use for the evil shroom sorry let's use these little things and then i'm going to have let's say one two three four one two three four up here let's have a coin surprise and then perhaps some more bricks so let's do a brick and then another surprise this time let's say it's a mushroom surprise another brick and then a coin surprise and another brick so that is looking good i do think we perhaps need to make this a little bit wider so i'm just going to add some length to our grid okay so just like that you can feel free to make this as big or as small as you wish that is all the button okay so we have our map let's carry on now to add this map i'm going to use a kaboom method called add level which takes two things the first is an array which is our map and the second is an object that is our level config so we already have our map so i could just pass through that array like so and then let's do our level config so i'm actually going to define our level config up here let's call it const level config you can call it whatever we wish in camel case i have chosen to do this and we know that it's an object so now i can just replace this with that just like we did with the map now that we have our level config we need to do a few things i need to define how big and how small so sorry how wide and how high i want each of these elements on my board i'm going to say i want each of them to be 20 by 20 pixels now let's start defining things so i'm going to use this because i already know that this is a block so i'm gonna this is the syntax for defining what the elements are i'm gonna open up my square brackets i'm gonna use sprite just like that and i'm gonna pass through the block as that's what i want here so that is going to be my block let's carry on defining some more things while we are at it so we've got our block i'm going to say that the anything with a dollar sign is going to be a coin anything let's carry on so we've got that we also want to have a surprise so this is going to i'm going to use the sprite of surprise so here we have the surprise oh do we have the surprise the question is the surprise so that is what we have i can actually should probably even call this question and not surprise so quests just like so and i'm going to actually say that anything with this sign specifically is going to be a coin so price okay so we've got that and anything i'm just going to copy this because i still want to use the same sprite however anything with this sign now i want to be a mushroom surprise um so perhaps let's make this a little bit smaller for now because we don't really need it okay so we've done that the next thing that i want to do well i'm just going to probably add all of these for now that's probably the easiest thing to do so anything with this it's not on the board i want to be the unbox so i'm simply grabbing the string of unboxed and i don't think this needs anything at the moment so i'm just going to get rid of that so we've got unboxed the next thing i want to do is the pipes so this is going to be pipe bottom left or just pipe left actually so we've got a pipe left let's also have a pipe right i'm just going to move this up now we need the top pipe parts of the pipe pipe top left side making sure that it's exactly spelt exactly the same and then pipe top right side and that is going to be a plus okay so we've got that we also want to have an evil shroom so once again i'm just going to copy that and then we have the little hats as the shrooms so i'm just gonna say this is an evil shrimp i have the number one in there um we don't have another one for now so i just have to make sure that i've spelt it exactly the same so we've got our evil shroom the next thing i want to add is stuff that we don't actually have yet so i'm just going to say that this is going to be a mushroom we have a bunch of blue things for the next level but i think i'm going to leave them just for now so if i run this now here we go let's get rid of this because we want to be able to see our board fantastic i do need to scale some things in order for everything to fit for the purpose of the tutorial so i'm just going to get rid of some of these now um of course like i said you can make this as big or as little as you wish in your free time but as this is a tutorial i want to be able to show you everything comfortably um so yeah feel free to make this your own when you can and when you finished coding along with me okay so i think that is much more manageable let's carry on um i'm gonna actually get rid of maybe one more just just because i do want everything to fit comfortably if i'm being honest okay okay okay so that's looking a lot better now i don't want these to be these bricks and i want to scale these so i've done this on purpose so that i can show you how to scale sprites directly from the config so i can now use scale 0.5 on all pipe related things because all the pipes seem to be too big so i'm going to scale each of those and just click run and perfect now the pipe is exactly the size we wish without having to change the pixel the png or the jpeg itself so that is done one thing i also want to do is perhaps change the bottom to be this brick right here so let's go ahead and do that i'm going to copy this and then let's maybe make the brick an x and call this brick and i'm just going to replace so i'm going to use command d to replace all the bottom once like so with an x and hit run awesome so now i can change the background as well this is something i can do now or later the choice is up to you i would simply have to go here and i'm just going to select the color and then click run oops and there we go great so we have our board the next thing i want to do is add mario so i'm going to do so right down here i'm going to say i'm going to use the add kabum method to add a sprite and i'm going to add the sprite mario standing because i think that's what we called our mario mario standing that's correct so i'm going to add that to our board and i'm also going to position him so at the moment i'm going to position him just sort of at the top here so let's go ahead and click run and there he is now i want to make him fall so let's i'm just going to format this a little bit neater so it's more readable for everyone so i can make mario 4 if i want i can apply gravity tomorrow i simply have to do so by adding the body component to the array just like that and there he goes but we don't really want him to fall through the ground right so we can actually prevent this by making the ground so the brick solid so now if i click run it stops so while i'm here i'm just going to decide what else i want to be solid i definitely want the brick to be solid and i want all the pipes to be solid too so i'm just definitely going to make all of these solid like so i'm going to make the evil shroom solid too as well as the blocks themselves and anything with the sprite question so a whole bunch of solids there okay great so we have done that now um i'm just going to move this out so you can perhaps read it a little better that's that's a lot more readable okay so we've added our player the next thing i'm going to do is add a score and a level so i'm going to do so up here i'm going to add so once again using add it's got parenthesis and an array i'm going to just space it out a bit so it's more readable i'm going to put text and i am going to just put in a 0 for now which we will solve at the end but i'm just going to hard code it just for now and let's position it on our board so sort of at the top so this is the xaxis if you remember from our previous lessons and this is going to be the yaxis just from this point right here so now that i've added that i want to make sure that this won't interfere with our pacman and won't interview with our game so i need to add this to the ui layer which we have not yet added but i'm going to do that now so just up here i think which is the first thing that we should do i'm going to define our layers so that is a kaboom method i'm going to open up my parentheses and pass through an array and in it i'm going to pass through all the layers that we want so i only really want an object layer and a ui layer for this game and i want to make the object layer the default so if something doesn't have a layer assigned it goes to the object layer so that should be it the next thing i want to do is actually pass through a value for the score so i'm going to put value square value if i can only spell it and once again we don't really have a score just yet so i'm just going to hardcord it as zero just so we can see it now um let's actually save this so we can reuse it so i'm going to save it as the score label just like so great so we've added the score label the next thing i'm going to do is actually add something for the levels itself so once again i'm just going to use the array and pass through the kaboom method of text and it's a string that is going to tell us what level it is so level great and i'm just going to pass through again i'm gonna hard code a zero for now we won't uh leave it like this don't worry but we don't have any levels to pass through at the moment and then let's position it so xaxis yaxis from the top and then we just need to make sure that that is in its in parenthesis and that is in parenthesis okay wonderful so we have our score and we have our level zero showing up let's move on now let's actually assign so i'm going to save this as cons player so we can reuse it in our code the next thing you want to do is make sure that our player can move so i'm going to use key down to do this just like we did in the previous lesson so key down i need to pass you two things a string of which key is pressed on our keyboard and a function as to what happens if we press that key so if i press the key left well i want to grab the player i want to use the kaboom method of move and i want to pass through an x axis and a y axis and because i want them to move left well it's going to be this one right here so i could say 120 or i could assign a move speed to mario so let's make that 120. so now to move left i need to make sure this is 120 and we don't want anything to happen in the yaxis so i'm just going to pass through a zero okay so let's check it out so now if i press the left key what is going left so now let's do it for the right side so i'm just going to copy this and i'm going to make this right and i'm just going to make this not negative so he's moving 120 on the xaxis so now let's check it out and great the next thing i want to do is for um married to jump so this time i'm going to show you how to use key press it's exactly the same i if i pass through a space fast with a string of space or what do i want to happen let's write a function now i can make our player jump so i can grab player and use jump so that is a method and i can pass through a jump force so let's make this 300 from now i'm just going to put it in there so now if i run this and i press space there he goes he's jumping a bit too high for my liking without a mushroom so i'm just going to change this to 150 instead and see how that looks that is much too small let's try 200 let's try it 300 and finally let's just try it 360. i think that should be okay okay great so your jumps just high enough to hit these but not high enough to um i guess we don't want that double jump either but not high enough to get onto the next level so that is fine let's get rid of the uh double double jump so we only want him to jump if the player is grounded so that is another kaboom method we can use so only jump so that will get rid of the double jumps great now i want um essentially stuff to spawn if i hit the question mark so these surprise boxes so where should we do that let's just do that below here i'm going to move these to be at the top of the file just purely because i think it's much neater so i'm going to grab that and i'm also going to grab the move speed great so now i'm going to grab the player and on if there is a head bump so again this is a kaboom method well i want so this is a function which i've actually passed through an object through and this will make sense in a bit whatever object we collide with is and then let's use the tag of coin surprise that we made so we've already made this as you can see it's here so anything with this it has the tag of coin surprise if the object that we collide with is a coin surprise well i want to essentially spawn a coin so i need to do i need to assign the level so i'm going to assign the game level in order for this to work so i've assigned the level to game level now we need to grab the game level and i'm going to use the method of spawn to spawn a coin so do we have a coin here we do have a coin it's the dollar sign so i'm going to spawn a coin and where do i want to spawn a coin well i want to spawn it whatever the object that we collide with and then i'm going to use grid position of that object sub and if we just pass through a zero i'm going to show you what happens so i think this is a coin surprise so the coin appears um directly on the object i don't want that i want it to be above the object so i'm gonna pass through a one let's try again boom okay so it appears above the object so this is looking great the next thing i'm going to do is actually destroy the object so i can do so like that that is the kabum method i'm passing through the object i've just collided with to destroy it so i want to destroy it but i also want to replace it so this is how you'd replace you'd use the game level spawn and i want to replace it with unboxed so i'm going to grab that and i'm going to pass through the string of unboxed and then i'm going to position it well we've already done this exactly where the other object is so i would just do position sub zero zero let's give it a go boom how good is that nothing will happen here because that's a mushroom surprise but that is the coin surprise too so now that we have that i'm actually going to copy all of this and just reuse it if object is mushroom surprise i want to spawn a mushroom which is this right here so i'm going to spawn that and let's run it so now ah no i want to spawn the mushroom here sorry and replace it with good that we checked that otherwise we get both there we go great now we also want the mushroom to move right otherwise how we ever gonna get mario to grow so i'm going to move the mushroom to do this i'm going to use action and this runs every frame second and i'm gonna grab anything with the tag of mush room so let's just check that has a tag of mushroom so let's just give this a tag of mushroom as it doesn't have one so i'm just going to give it the string of mushroom like so now anything with the tag of mushroom well what do i want to happen to it let's write a function and find out just get rid of that so anything with the tag on mushroom we're going to pass through m for mushroom and i want to move it so as soon as we see the mushroom i want to grab the mushroom and i want to move it on the xaxis so let's move it at 20 and then we don't want anything on the yaxis so let's give that a go and if i hit this there we go our mushroom is moving but it's not falling we need to change that so i'm also going to apply gravity to it just like we did with mario so now here we go our mushroom is falling this is looking great okay so now it's time to make mario big if he eats a mushroom so let's do it now i'm gonna do so right here so i'm gonna write my own function i'm gonna say call it function big and in it i'm gonna start a timer let timer start off with zero and then i'm going to return up date if is big so we also need to make sure that he's big here let is big equal true actually false to start so it's forced to start if he is big however well then i want to get the timer and just keep minusing delta time from it delta time is i'm just going to show you now on kaboom js delta time is the delta time since last frame said i was a good one to know i'm going to minus that and then if the timer is suddenly smaller than or equal to zero well then i want to make mario small again so this smaller fight which is something where we're gonna write soon so if he's big i essentially want the timer to start counting down and if the timer reaches zero or less than zero we turn him back to being small great now is big i'm just going to return is big so if we use that later well you'll see what i mean when we use it later and this is where we write smallify as well that we used above here and to make mario small what do we need to do well we need to make sure that his scale is uh one as opposed to anything else so i'm just going to pass through a one and then i'm going to start off the timer i'm going to make sure the timer is at zero again and make sure that is big equals false okay so we've written smaller phi now let's write biggify figure five and essentially i just need to get all of this right here and then this scale let's make him times two and is big is true and then we just need to define a time so whatever we pass through in to biggify is going to be exactly how long mario stays big for okay so that time gets passed down to the timer it probably doesn't make much sense now but promise me when we use it it will so now i can add big to the player itself next i am going to write what happens when the player actually collides with the mushroom so i'm going to write player collides and then i'm going to pass through the tag of mushroom so anything with the tag of mushroom if our player collides with it well what do you want to happen let's write a function so into the function i'm going to pass through m for mushroom itself and if our player collides with the mushroom i want to get the player and i want to use biggify so the exact thing that we wrote whoops big gif phi and i'm gonna pass through so if i pass through a six well our player is going to be big time big for six seconds and then he's going to be turned back to small so a normal scale of scale one i also want to destroy the mushroom so i'm going to use the kaboom method of destroy and pass through the m for mushroom so let's check it out so now i'm just going to hit that see i can't do anything with them yet and there we go i am now big and then i should turn small and there we go so now i am big this is looking good um i also want to write what happens if the player collides with so player collides with a coin so anything with a tag of coin just need to make sure that the coin has a tag it does not so let's just give it a tag so if the player collides with anything with the coin i just want to add to this score so i'm going to grab this score label value and use the increment operator to add one to it and i'm also going to grab the score label text and just assign it whatever the score labels value is so let's check it out that should be solid um i obviously can't jump high enough now but let's try get a mushroom and get a coin so that is i am my score is increasing as you can see however i also need to destroy the coin now so c for coin so we can't keep getting more and more points right there's only one coin we need one score so now let's try that out again we get one point um this should be solid so let's also make the unboxed solid by passing through solid like so great so that is looking better the next thing i want to do is make our little evil mushrooms move so i'm gonna do that down here here i'm going to grab anything with a tag of dangerous so we need to assign dangerous to the evil shroom so i'm just going to give it the tag of dangerous like so so anything with the tag of dangerous it's going to write a function to say what happens i'm going to pass through d for dangerous and i'm going to just move whatever d is for dangerous um let's give it so this is x and y axis let's give it an xaxis uh it's yaxis yaxis we know zero so let's make it remove 120. so once again i can save this as something so i can reuse it i'm going to save it as enemy speed and make that 120. so now i can simply use enemy speed like so i'm actually going to make it a negative so they're moving left as well and i'm going to move this to the top of my file just to keep things neat so now oh they're moving really fast whoa that is way too fast i think let's maybe make them move up 30. okay so that is better i still think maybe that's too fast but you know it's up to you how fast you want them to move now so the next thing i want to happen is when they collide i don't want them to push okay i want them to so i just essentially wanted to go to a game over so i'm going to use player collides again and if our player collides with anything with a tag of dangerous what do i want to happen let's write a function and find out so if our player collides with anything with the tag of dangerous okay so this is where we want to figure out if he is jumping right because at the moment if we do we just want to go to a lose scene so we want to go to a loose scene and take our score with us and the score is going to be whatever the score label value is so we could easily do this i'm just going to create a new scene so i'm going to click here and add a loose scene just like that and in here i'm going to use add i'm going to open an array and put the text the argument that i'm going to pass through is score args so we just go to a loose scene where that is really small i can of course make that bigger if i want and i can center it so oreo gin center position it grab whatever the width is of my screen divided by 2 the x and grab the height and divide over 2 to get the y axis and i can also scale it so scale it by 10 if i really want so now if i collide there we go the score is huge this is looking good let's go back to our main scene so we have nearly everything we have oops um we have our little mario we need to write what happens so we can destroy these little guys too so we don't have to keep uh dying so perhaps yeah let's do that now okay so i'm just gonna jump over them for now to get them out the way oh okay let's just leave it zero so i'm going to get rid of this again and make this bigger so at the moment our player collides with dangerous and we go to the loose scene however we want something we want to write something to let our javascript know that we are jumping because if we're jumping then we don't want to lose we want to kill the um anything that is dangerous so if is jumping this is the equivalent of writing equals true i could just simply pass through the boolean if it's true then it will execute this else it will execute this and go to the loose scene so i'm just going to get that so if is jumping is true i want to destroy anything with the tag of dangerous okay great if it's oh yes we have not defined as jumping sorry that is my fault i'm going to grab that here and i'm just going to put let is jumping and make it equal true to start with so at the moment it's always going to be true so there we go we just need to pass through a d and i'm just going to jump and great so we are destroying the little mushrooms we are also oh where did he go he seemed to disappeared um we can fix that so just in case you are having that happen to you find the player so that's where we add the player this should fix that happen so happening so just pass through origin bot let's try again so boom boom and then let's grow bigger great cool now i need to increase my jump size right because you know he's meant to jump higher if he gets bigger so i'm going to do that as well as fixing the is jumping too so let's do that first so currently he is jumping at the jump force of 360. so we need to increase that to uh another jump force so we could have big jump force if we want i'm going to make this 550. now i'm also going to have a current jump force which is going to change but it's going to start off with the normal jump force okay so there we go now in here if we are smallifying and as big as false i want the current jump force just to be the jump force however is if he's becoming big or if he is big i want the current jump force to be big jump force okay so let's see if that has worked so once again i'm just going to kill these guys and i'm going to get my mushroom going to be big ah oops we okay so we are using current drone force however when we press the space bar so let's find the space bar and you choose the current jump force okay because that is now changing it's now changing from big jump force to just jump force so let's try it again it's gonna kill these guys gonna be big and that's much better check out how high we are jumping and i just wanna make sure that we are back to our normal jump force now fantastic so one more thing before we move on and that is to make sure that um he's not always that his jumping is not always true so back where we use the spacebar just above it actually i'm going to use player and i'm going to use action which runs every frame second and just check so if once again i'm going to use player and i'm going to use grounded if the player is grounded so check that he is and if he is i want is jumping to be false and if player is grounded and we press the space bar i want this jumping to be true okay so if we press the spacebar and he's grounded then we want him to jump however if he's just grounded then his jumping is false hopefully that makes sense let's move on now i'm just going to move this all the way to the top but after i define the player so right here and click run okay so that is all working now i want the camera to follow me if i go to the right so let's let's go ahead and do that now so right under here i'm going to grab the player and i'm going to use action again so to check every frame second and i want to actually um use camera position so another kaboom method in order to just follow the player position so we just pass through the player position into the account position i also want to do one more thing while you're here and i'm going to say that if the player position yaxis is suddenly larger or equal to the full death so anywhere like below here is going to be the full death then i want to go to the lose scene as well and i'm just going to pass through this score just like we did before so the score labels value as the score so now let's define our for death const for death and i'm just gonna say 600 okay um i think that's i think that should be fine let's check it out so now just going to fall and it works and the camera is following us too this is looking this is looking good now let's go to our next level so i want to go to the next level if we um actually land on the pipe right here so let's do that i'm going to actually do that towards the bottom where shall we do it i guess it doesn't really matter let's just do it here so i'm going to grab the player again and if player collides with anything with the tag of pipe then what do we want to happen we want to go to the next level so let's just check that these things have the the pipes sorry have a tag of pipe themselves they do not so i really just need to add it to the top one so i'm going to add it to here and i'm going to add it to here making sure that it's in the array so now when i collide with those i want to go to the next game see so let's think about this i'm just going to go to this for now if i collide with the pipe but also if i key press down as that is what happens i need to keep press down so if these two things are true if i'm on the pipe and then i press key down then i want to go to my game again but i want to go to the next level so i'm going to pass through level like so um and i'm just gonna pass to level plus one for now okay so we're going to the next level and then i'm also going to take this score with me so scroll label value great at the moment i'm just going to comment this out for now and let's let's do our second scene so let's do that now so before we get finishing onto moving on to the next scene i'm actually gonna make the next scene as that makes the most sense so we already have one map i'm gonna actually now make an array of two maps so array of maps is gonna store one map and a second map and our first map so this here is just gonna be all of this right here so i'm gonna cut this and then maybe just space it out a little bit so it's a bit easier to read that is now going to be our first item in our maps array so there we go maybe format that a little bit better and then we just have to make our second map too so now instead of passing map along with the level config i'm going to get my array and whatever the first item is in my array well that's going to return this so that's if i pass through a zero i'm getting the first item from my array if i pass through a one i'm getting the second item for my row so let's make the second map now i'm simply just gonna copy most of this really and just paste it in here but change things around so we use the blue uh theme this time so let's do it so what do i want this time i don't think it should be as tall and i'm actually going to use a lot of the blue things that we have so i do know that i want walls at these sides so i'm just gonna add those to the other side too so just like that and then we don't want the bricks anymore so perhaps let's make these z's i don't think we've used z so i'm going to use z's in this level and then we do want a pipe however let's have the pipe at the end this time so it's quite nice as we actually get to reuse everything that we done before and we can also reuse the logic so again i'm not going to have these mushrooms i'm going to have some different mushrooms this time and my mushroom's going to be this guy and then i'm just going to delete these two and just use a bunch of this time and then we obviously have our pipe i also want some just things we can scale so so things we can climb scale whatever you wish to call it so i'm just going to make those now um once again please have all the fun creating this all by yourself it really is hours of fun creating these uh levels okay so we've now defined some new things in here let's get to it so now we have some z's well we actually also have some of these signs as what the pound sign so i'm just going to leave these blank for now so we can fill them out i've got pound sign we've got a zed what else do we have we've got an at sign and we've got a dollar sign and sorry an exclamation and an s so now let's have a look here well i know that i want some blue bricks to be this so i'm going to say blue brick and i also know that i want this to be solid so i'm just going to pass through solid do we want a blue surprise i think we do i don't think we have one though so i'm just gonna make a seven a blue surprise um i'm gonna also add that in here so let's make a seven for a blue surprise if you wish in fact i'm not going to bother but if you want to add then please add um you know how to do that now with the coin surprises and so on and so on so yeah if you want to add that please do let's add an evil mushroom so this is the blue evil mushroom i'm going to call it blue evil mushroom um and i'm going to give her the tiger dangerous so that you comply all the other logic that we've already done to it so that is pretty handy s what do we want s s is gonna be our blue steel and i'm also gonna make this solid and then we also need these sides so what can we make these sides what a disease disease is the floor so we might have to add something else for the floor so i'm just going to do that now we're going to add this blue block to be the floor so blue block and then let's have blue brick great let's hit run sprite not far found blue evil mushroom is not found blue evil shroom click run oh and there we go okay we need to scale everything to be half because as you can see it's very big so let's do it again i'm going to use scale 0.5 not here but here on anything that is new and then we need to make these solid too so make sure that everything with a uh brick is solid okay we've actually reused this blue brick so if i really wanted to um i could definitely change it so let's maybe do that or let's add some we could make these blue surprises so i'm just gonna make a blue surprise sorry i'm being really uh indecisive so blue sir price and then we can also give this a tag of coin surprise so exactly what we expect to happen for a coin surprise will happen for these just because we gave it the tag so how handy is that save just having to rewrite so much logic okay amazing so how cool is that once again we've pretty much it's pretty much done everything for us and if we look here all the levels will act pretty much the same way um cool so that is looking good we definitely die if we hit one of these so that is good why are these not sprouting coins though let's have a look so blue surprise coin surprise ah it's because i misspelt it so let's run that okay fantastic so much work saved for us it's incredible right um okay great we have one more thing to do and that is make sure that our mario goes to the next level so let's do it okay so what i would do is this just like so i would just have to define a level okay so there we go amazing now we can actually get our scores uh sorry our levels to loop all i'd have to do is find the level and then i would use modulus the level length to make sure that they loop okay so let's check that out one more time okay and then of course make sure that these scores are passing two and great so we have now finished the mario game this was super fun thank you so much for coding with me of course please take this game i'm sure there's many improvements that could be made and many improvements that you can contribute to it too so just head over to mine if you want and fork it or just use what you've coded so far um thanks so much again and one more game to go let's do it this time we'll be doing zelda completely from scratch okay so now it's time to start coding zelda but completely from scratch so before we were using the preconfigured kombum replica environment this time i'm going to show you how to use kaboom js so the javascript library in a index html and javascript file okay so completely from scratch let's do it the first thing i'm gonna do is actually go back to the kaboom js page and i'm simply going to take all of this script just right here i'm then going to in my index.html file so all of that script there's two scripts there's the first script and the second script i'm simply going to take all of it and just at the bottom of my two body tags just paste everything like so okay so if i run that now you will see oh hi mark in the browser now this is great but i don't really want to keep all my javascript in here because at the moment that is what is happening so i'm just going to cut this out so that is all you should see in the index html file for now and in here i'm just going to paste the javascript like so now back in here instead of having this script tag with the type module i'm going to have a script tag and a closing script tag with the source of whatever my javascript file is called so obviously at the moment it is game js just like that and it's in the root of our project so i don't have to do anything i just put the file name like so um do make sure that it's under the kaboom js uh script okay along with the version okay so just like that body tag first script second script if i get rid of this that might be a lot easier to read i'm just going to format it a little bit too great so if i run this nothing should change let's carry on so this is our index html file now let's move on to our javascript file so once again i'm just going to get rid of that okay so this is great however it's not really our zelda game so let's start i'm just gonna start from scratch once again i need to initiate the kaboom js environment so i'm gonna do this get some curly braces and i'm gonna put global true um let's make the game full screen true scale let's sort of a scale one let's put debug as true as well so we get the debug messages and i'm just going to make a clear background so i'm going to make it let's make it black okay perfect so now that we have kabum initialized let's add some sprites so this is a completely different way to do it obviously before we were using the replica environment where you can draw the sprites directly in here however if you are using your own ide or just doing it on replit from scratch we can do this so there is a kaboom method called load sprite and we simply write it like so now i have actually stored all my images online so you can use them as well when i do projects like this i usually store all my images on this thirdparty service called imager so if you go to my imager and look at my posts you can see i've already made a bunch of sprites for us for this zelda game so i'm just going to go ahead and lift some now let's get link going left i'm simply going to get shareable links i'm going to copy this bbc code one right here and i'm simply going to paste the path to my sprite i'm also going to name it while i'm here so i'm also going to pass through a string let's say link going left just so it's easier for me to work with now i could so there's my first sprite let's get also link going right so let's go back here and let's find link going right so i'm just going to once again get shareable link and click this right here and just go back to here and paste the path to my link going right this time so i could keep doing this but of course this is very wordy and there is a lot of repetition there is another kaboom method called load route which will allow me to essentially load this route so i don't have to write it each time so that is a lot neater let's carry on so you've got link going left link going right let's also have link going down link going up left wall right wall let's have the top wall bottom wall and then all the also the corner walls so essentially i'm getting everything that i need to make up my link game in order for us to create our board so now let's go bottom left wall bottom right wall top left wall top right wall and let's just do these for now and then we'll carry on in a bit so link going down i'm just going to go in here and grab this little guy copy the link and once again just paste it in here simply using this at the end and then link going up so again i am just going to get share links copy that one paste it in here but get rid of this as we already have the root now let's get the left wall so this looks like a left wall to me once again i'm going to get the share link copy that just paste it in here now let's get the right wall so this to me looks like a right wall get share links copy paste that in here let's find our top wall now so this to me actually looks like a bottom wall it's fine we'll just do the bottom wall now get share links copy bottom wall just like so and just paste into top wall okay now let's get the bottom left wall so this to me looks like a bottom left wall let's get the bbc code so charlene copy bottom left wall and just get rid of the which bottom right wall to me it looks like a bottom right wall get shell link copy and just paste it in here like so now let's get the top left wall once again get share links and now the top right wall so this should be the last of the walls we just have some doors and some enemies to put in so gets again get share links copy and just whack that in there perfect so now we've got all the walls let's i'm just going to move that up here for us we've got a few more things to do um let's get the top door so we're gonna have a top door a left door we're also gonna have a fire pot so that's just gonna be some decorations really i'm also going to have some lanterns and then let's put in a slicer so this is the first of our baddies i guess skeletor it's not actually skeletal but looks quite similar so that's how i've named this little character some stairs and then let's also have a background so i'm just gonna go bg for background so let's carry on let's get our top door so this is my top door get share links copy once again it's making sure just to get the end let's find our left door share links copy it's gonna put it in as a string along with the name that i gave this sprite so there we go fire pots let's find some fire pots so this is what i called a fire pot get shell ink copy once again get rid of that lanterns is up next let's get the lanterns so these are my lanterns you can see i've got a lot of images in here all from like various projects that i have on youtube either on free code camp or on my own channel so there we go let's get these slices so oh actually let's get skeletor just because you know he's here let's copy that let's put that in here just like so this is what i called a slicer so get sherlink copy a shelling copy and now for the background which is going to be a lot bigger than all these sprites but that is not a problem so once again get share link copy and just put that in yeah fantastic so we've got all our sprites let's move on the next thing i'm going to show you how to do is add a scene so this way is different than we did before i'm going to show you of course how to do it from scratch and from scratch we would use the kabum method scene just like so i'm going to open up a parenthesis and the first thing i'm going to pass through is the name of the scene and the second thing is going to be a function so this is where all the magic is going to happen so let's call this scene game and i will be passing through a level and a score into here so that with each level we actually get these score and move on to the next um level and so on as well as as well as the level but we don't really have anything at the moment quite yet because we need to also start the game so this is another kabum method to start the game i would simply pass through the string of what scene i want to start as well as anything else so as i already said i want to pass through the level and the score into the uh game scene so to start with i'm simply going to say that the level is zero and the score is also zero okay so if we run that we won't really see anything because um we haven't actually written any logic but that is sort of what you need to do to get started so for now i'm just going to define our maps so let's do that first so once again i've showed you how to do this now however i am gonna just comment it out until we need it and until we you know start working with the level unscore so i'm just gonna comment this out like so great so at the moment we are not passing through anything into the game now as i said the first thing i want to do is define our maps so let's start off with the first one first const map now i need to draw my actual map so to do this i'm just going to make everything in these quotation marks and i'm just going to decide what i want as all my sprites so let's just for now i'm just gonna show you what i mean so one two three four five six seven eight nine ten and then let's make it ten by ten three four five six seven eight nine and one more to make it ten okay so one two three four five six seven eight nine ten amazing and i just need to put a comma after all of these two great so for now i'm just going to put c's in here um just to show you how this would look okay so we've got our map now we need to use a another kabum method called add level and into add level making sure to spell it camel case we need to pass through two things the first is our map as an array and then the second is our level config as an object so we already have a map defined so i'm just going to pass through a map and then our level config now i can actually define the level config here it might make things neater as it is going to be quite chunky so our level config is going to look like this so we did say it's an object so now i could just remove this and just pass through level config and our object is going to look a little bit like this so in here we're going to define how big each of these symbols are going to be on our board so i'm going to say that each one is going to have a width of let's say 48 and a height of 48 pixels just purely that's because that's how big i actually made my pixels on imager okay and then i'm going to say that anything with c is going to be and this is the syntax so i open up an array i use the kaboom method of sprite and then in here i'm just going to pass through the string of top wall okay so this string of top wall is equivalent to the sprite which i uploaded above so now i'm saying that anything with the c is going to be a top wall on my map so now if i actually run this well there we go we can already see our map now i can make this a bit smaller just so it's easier to work with and there we go okay maybe just make us a tiny bit bigger so now you will see that all my walls are the top wall so i don't want this let's actually go to actually drawing our um our zelda map correctly so back in here so we've already defined uh the top wall as c let's do a sprite left wall b sprite right wall making sure to spell all these strings correctly of the sprites that you imported so we've got our left wall right wall top wall i'm just going to copy this out to make it a little easier let's make d the bottom wall and then maybe let's use something else for the corner ones so let's make uh w the top right one x the bottom left wall why the top left wall and let's make z the bottom right wall okay let's copy that now so let's actually use that first perhaps or let's just do all of them first what should we do let's just import all of them to use and then we can use them to uh draw our map so let's use these symbols now because you don't have to just use uh the alphabet let's also do the left door just like that let's also have um this little hat could be the top door let's have some stairs let's also have this slicer which we make our slicer let's make him this little guy slicer and then skeletal can be this so sprite scaler and then let's have our let's have some lanterns in too and then just the fire pot lanterns and our fire pot let's make the fire pot the other way fire pot fantastic so we've done all of that let's also add our um let's add our background while we're here so i'm just going to do that down here i'm going to use add and then i'm going to open up my array so just like we did with the sprite above i'm going to find the background so i saved it as bg and then i'm going to say the layer it belongs in is on the background because i don't want it interfering with any of my objects and i don't want interfering with any sort of words i put on so let's actually define the layers first so we already know we've got a background layer let's do that up here so just under where i uh use the scene method i'm going to say layers i'm going to define the layers so i'm going to have three layers in this game i'm going to have a background layer as we've already discussed and then also going to have an object layer for where all my objects and all my enemies and my players are going to be with and then i'm also going to have a ui layer so that these layers can't interfere with each other okay we can't collide with them um they're very separate and then my default so if something doesn't have a layer it's going to be the object layer great so now if i run this well there you go the background is added let's now get to using all of these on my map so we already know that this is going to be the left wall so i'm just going to use command d to change all these to an a and then let's change all these to the right wall so i might as well just make them all bees for now and then the bottom well actually i i know this is the bottom left and then what's the top left is a y and then we've got the bottom right that's a z and then top right is a w and what is the bottom wall well that's all d so i'm just going to go d d d d d d like so and then let's also perhaps put our lanterns in here so i'm just going to put that in here and i'm going to have a door um just like so and there great let's also have a left door here so i'm just going to perhaps put that in here i think i've got one too many levels i only want this to be nine high so let's go ahead and delete that that should be fine one two three one two three okay and let's put in some more lanterns at the bottom so i'm going to put in a lantern here lantern here and we're missing the corner one bottom right is a z great and then i'm also going to put a slicer so this was my slicer here and this slicer here as well as some fire pots because you know fire pots are always fun so let's put this in the center of our game i'm just going to put one here and one here and let's let's have a look at what that looks like i'm not sure that is the center but we will soon find out so i'm just going to run this and there we go how good does that look okay we did pretty well this one's incorrect though bottom left wall this should just be an x my bad amazing okay this is looking awesome i'm super pleased with it let's carry on so we've defined our layers we've added a map the next thing i want to do is add my little zelda so let's do that here okay so i'm going to use the kaboom method of add i'm going to open up my parentheses and once again get my square brackets and in here i'm actually gonna get sprite once again and i'm going to just start off with link going left so i'm going to grab the um string of link going left so that is the sprite that we imported above and the next thing i want to do is just assign a position to it so i can use pos for position like so and then i'm just going to make him go left so this is where we start positions from left 5 and down 190. so you should be somewhere around here great so now if i run this well there he is maybe let's have him going right actually so i could just switch this out and there we go so he's sort of on the door at the moment the next thing i need to do is actually make our little sprite move so perhaps let's do that first to make things easier i'm going to assign all of this code to const player so we can keep reusing it throughout the game so now i'm going to use key down so this is one that we've used in the previous lessons and if we press key down and we press the left key on our keyboard where we want something to happen right so i'm just going to put in a function here so the string of what key followed by a function of what's going to happen that's what the key down or key press um kaboom method takes so if we press key left well i want the player to move and then we need to define a speed so i'm going to perhaps define that here we could just pass through a number but to make it all reusable i'm going to define a speed for us here and i'm just going to call it move speed and then let's make it 120 for now let's see how that goes so i'm gonna say when he's moving left well we have to grab the move speed and make it negative with the move kaboom method the first thing we pass through is the xaxis and the second is the yaxis so in this case i want the y x to be zero i don't want anything to change on the yaxis but i do want something change on the xaxis i want them to go left so that is how we would do that so there we have it we have key down left let's also have if we move right well then we want to just simply move at the move speed and then let's also have up and this time you guessed it this has to be zero and this is going to be the move speed but this one's also going to be a negative and then finally we have the key down move down in which with this is not a negative it just looks like this so now if we run the game there we go a little sprite is moving now we can also do a change sprite which is something that we didn't cover in the previous games but i think is quite fun so i'm gonna do that now when we go left i want to grab the player and i want to use a method called change sprite to change the sprite to whatever other sprite we imported so in this case i want to change it to link going left okay and let's do the same for the others this one's going to have link going right and then let's have link going up and link going down so just a reminder i'm simply using all of these here to change the sprite to these if we press on the keys so now here we go that is looking so good i think we are ready to move on okay now the next thing i think we should do is move our little slices so let's do it for this i'm just gonna gravitate down here to do our slicer game logic so this time well i need to i'm going to use the kaboom method of action because i'm going to grab anything with the tag of slicer and then let's get our function up so there is obviously a pattern here we usually pass through a string and then a function into most of these kabum methods and what do i want to happen to these slicer well to every slicer so s for slicer or everything with the tag of slicer i should say so perhaps let's um go up here and i'm just going to give slicer the tag of slicer like so so now everything with the tag of slicer well i'm going to grab the slicer i'm going to move it now i can move the slicer once again x and y axis but i actually want to um change the direction of the slicer i want him to bash into the wall and then change direction when he bashes into war because at the moment let's define a const slicer speed let's make it 120. if i put through the slicer speed here and just keep this zero and run it our slices are moving but they're just carrying on this is not what i want so let's fix this to do this i'm going to go back up here because i need to give all my walls and everything that i want to essentially be solid on the board the component of solid so in here i'm essentially going to on all the walls i'm going to give them the component of solid i'm also going to give them the tag of wall which you will see why later but we essentially want to treat all of these as walls just like so so we've got a few more to treat as walls and to treat as solid so there we go that is looking good while i'm here i'm also going to make the lanterns solid because at the moment we can move through them i don't want this so let's make the lanterns solid 2 oh and the fire pots so that was actually solid so that was actually a fire pot these are the lanterns but we need both to be solid really so there we go that is looking good we can also assign the lantern the tag of wall just in case because we want it to be treated like a wall essentially great so we've done that now while i'm here i'm also going to give our slicer a direction so i'm going to start off with the direction of the slicer being minus one okay we can add any sort of object we want in here it's sort of like a storing value so i've just chosen to store dir minus 1 which i know is for direction so now that we have that let's carry on so we have our slices moving off let's just check we can't go through the last lantern uh we can go through the lantern okay so to fix this i can actually fix this i just need to resolve the player so what i would do so just after i've added the player just here i would use player action and then grab the player and resolve so that should fix the issue of the player going through things that are solid so let's try that perfect so now we can't go through anything that is solid great okay so now that the slices have a direction and they're moving off i actually want them to change speed change direction sorry when they hit anything with the tag of war so let's do it so just here i am going to use the kaboom method of collides just like so and anytime anything with the tag of slicer collides with anything with the tag of wall once again let's write our function and the slicer so if that happens and if both collide i want this slicer dur to change to minus there so if this is currently a positive it will change your negative and if it's a negative it will change to a positive maths so that is happening and that should change the direction however now that we have that i need to make sure that that is being applied here so i can use s direction and multiply it so whatever s direction is at the moment if it's a minus one i will multiply it to 120 which will make that which will make that minus 120. so r slider or slicer will move left and alternatively it's a one where we'll multiply one by 120 and our slider will move 120 to the right so that is cool let's check that out and we've done it our sliders are moving and they are literally bouncing off the walls and changing direction so this is looking good let's carry on now i need to write some code for what happens if we you know collide with our slider because that's a bad thing i want our player to essentially lose so that is a game over in my eyes i could do so by grabbing the player and using overlaps this time and if our player overlaps with the slicer or i could put dangerous so that means that anything with the tag of dangerous which means i can reuse this tag will result in a player losing and going to a losing scene so at the moment i'm just going to perhaps make a let's maybe leave this for now because i need to write this score so i'm going to apply the tag of dangerous to the slicer and i'm also going to apply it to skeleton great now that we've done that i think we need to start looking at the score because if there is a loose scene i want to go to the loose scene with our final score so let's do it just under here i'm going to add so once again open up a parenthesis and an array and i'm just going to start with the text being a hardcoded 0 just to start off with and let's position it on our game board so i'm going to make it go at the bottom so x and y axis and then i'm going to add it to the ui layer so it doesn't interfere with our game and i'm just going to assign the value um the score so whatever the score currently is that is the value okay so because we don't have a score at the moment i now need to pass through the score to add start the game so we're going to start off at zero and then up here once again i'm going to uncomment that out that is being passed into my game scene and if i run don't forget to add that comma now if i run the game you will see a tiny zero but it's very small let's scale it up so i'm gonna scale it up by four just so we can see okay so now we've got a score it's obviously zero um because we don't have anything yet let's write our lose scene and then that should show the score so what i would do is simply use the kabum method of go and then i'm going to pass through lose to make a lose scene and then i am simply going to get these score and i'm going to save this as const score label so i'm going to get the score and whatever the score labels value is that's what i'm going to pass through so now let's just collide with one of these check that's working we haven't actually written our seen so let's go ahead and do that so we should go to a loose scene with the outside of our game scene i'm going to create the loose scene now so our loose scene is going to look like this so once again a string and then a function of what's gonna happen and for this i'm just gonna pass through the score or whatever this is so i'm passing that through d structured and then i am going to add so once again parenthesis square brackets i'm going to use the kaboom method of text to pass through the score and the position of where i want to position it let's make the origin be center so i'm going to pass through the string of center and then let's position it i can actually grab the whole width of the browser window and divided by two and then grab the height as well and divide by two as well so now if i run the game go ahead and lose so amazing we get zero showing up in the middle of our screen because that is our current score because we have no score great so i think we've done everything we can on this level let's now try to add a new level so let's do it great so we have our map here now i need to add two maps so for the first level i want to go to this map but if it's the second level i need to go to you know the second map so const map i'm going to rename to maps and then this is going to be an array of arrays so i'm going to have two levels at the moment and i'm simply going to grab all of this and work that in here so there we go and just get rid of that so now if i want to go into the first map where i'm going to grab the maps array and whatever level we are on this is why we started the level on zero i'm gonna go into the maps array and if the level is zero i'm gonna grab the first map so i can just simply pass through level like so and that will do the same thing okay so that way i'm literally getting the first item of my maps array which is that and now let's make our second level so i'm just going to paste this here and let's do it so for my second level i'm pretty much going to keep it the same let's perhaps get rid of some of these things and i'm going to have lanterns on this side now just to make things a little bit different let's get rid of these slices let's get rid of the lanterns i'm just going to make these a straight wall now in here i'm going to have some stairs and then i'm also gonna have a skeletor great so now let's just change our level to be one for now that is our second map amazing so i actually want to get rid of this door too so let's just connect with that door like so great now how do we get from level one to level two well i'm going to show you that now so down here i'm actually going to give my top door the tag of next level just like so and in here so perhaps let's do it down here i'm gonna say if player overlaps with anything with the tag of next level what do we want to happen let's write our function and find out so if that happens i want to go to the game scene again so we are currently in the game scene but i want to go to the scene again and pass through level i'm just gonna pass through level plus one to get to the next level and then the score so whatever the score labels current value is i want to pass through okay so let's check that out let's go back to level zero now let's try collide or sorry overlap with the door making sure the slider is out the way first and great if i try however go here nothing will happen i need to add next level to the stairs too this will however be problematic so i'm gonna show you why so just let that collide again now if i go to the stairs everything breaks that is because there is no level three so i can easily account for this by um it's finding a level and then i could say modulus maps length to make the levels loop over each other okay so this way it will loop um and it will just be continuous for us so now if i go here go up the stairs you will see it's looping so that is just a quick fun fix for you let's carry on i should really be moving this to the top of my game so just to keep everything consistent let's put this slice of speed up there too i'm also going to define my skeletal speed while i am here so i'm going to do that now let's say skeletor so scala for speed i'm going to make a move quite slowly so i'm going to say 60. now let's i'm going to actually put this back to level one just so we can start off on the second level each time great so just where i move the slicer i'm going to move my skeleton so i'm going to use action again and i'm going to pass through the string of skeletal this time and well what do i want to happen let's write a function and find out so this time i'm going to pass through s for skeletal i'm going to grab skeletal i'm going to move him and skeletal again let's make him move up and down this time so i could just pass through a zero and the skeletal speed because obviously xaxis yaxis but i also want my skeletal to change direction however this time i wanted to change direction randomly and if he hits a wall so i'm going to show you how to do that once again i'm just going to up here give skeletor a direction so now when we move skeletal we also need to multiply them by skeletal's current direction okay so we are doing that let's carry on so now i'm going to actually give skeletor a timer i'm going to use the delta time so delta time if we look here once again i think i have gone through before but just one more time it's the delta time since the last frame so that's what i'm going to be using um and if the timer so i of course need to give skeletal a timer up here so i can do that in the same object timer let's start off with the timer being zero if the uh timer is suddenly smaller than or equal to zero i want to grab the direction and i just want to change it so just like we did with the slicer i'm literally changing it from a positive to a negative value and if it's negative to a positive value and then i want to get these skeletal timer and randomly so this is in the method to get a num a number randomly between uh 0 and 5. so now or less than five should i say now using rand this will attack assign a new value to the timer so essentially this is saying that our skeletal will change direction randomly so it will start off at zero if it's zero then the skeletal will change direction and then the time is going to get another random number from zero to five and this whole thing will start again i'm also going to have i'm also going to have to give skeletor the tag of skeletor just like slicer and let's click run okay great you can see he's changing direction however he is not changing direction if he hits a wall let's do that now so i can actually reuse this right here so i can reuse this and just say that if anything with a tag dangerous collides with a wall so dangerous instead of slicer here we go they should change direction this is pretty neat we have a few more things that i would like to do so let's carry on the next thing i want to do is of course make sure that our hero can defeat the enemies so i'm going to do so with a kaboom instead of a sword i'm going to use a big kabum to do this so first off i'm actually going to have to import that sprite so i'm going to use load sprite again and let's just call it kaboom as we are using the kaboom js environment i thought that was quite fitting and i'm just going to use this kaboom that i made here so i am going to let's refresh this i'm going to get the share links copy this here i'm just going to paste it as a string like so so we've got the kaboom now now we let's actually spawn a kaboom so i'm going to do this just under here now i'm going to write a function called spawn carbon just like so and it's going to be a simple function like this and into it i am going to well actually let's start off with adding what we want to add first if we spawn a kaboom because i want to add these sprites of you guessed it so at the moment nothing will happen that's because we need to assign a position and the position that i want to assign it is going to be the position of whatever i pass through into my spawn carbon function okay so that is what i'm gonna do and then i'm just gonna give it the tag of kaboom as we are gonna need that later and i'm actually gonna save this as object for now because we are going to have to destroy that in a bit so there we go um let's perhaps write that now in kaboom we can use the method of weight and we simply have to pass through a number which is how many seconds we want to wait before something happens so let's write our function to write find out what that something is so after one second i want to destroy so another kabum method the object which is microboom object great so we've got everything we just need to use this function and pass through a position so where can we do this well i'm going to actually so i'm going to say on key press uh spacebar so this is how we would write spacebar what do i want to happen let's write a function so our function on the key press i want to use this function that i have just written like so and of course we need to pass something through we need to pass through position so the position i am going to pass through is my players position so wherever my current player is okay so i think that should work let's try it out i'm gonna press space and there we go this is looking pretty cool however let's actually position it um a little bit farther than our player so where is our player where we add our player so here we add our player i'm just gonna space this out so it's a bit more readable so we're passing through a sprite we'll possibly position i also want to pass through an object that is the direction and i'm just going to put him going right at the moment and i can now use this in order to make our kaboom uh object go out a certain way based on his direction so based on my player's direction and i would simply use the position that we are currently in plus add so we're going to add a little bit extra so whatever the player's direction is and scale it by let's say 48 okay so 48 pixels if it's negative 1 it's going to be negative 48 if it's positive one it's going to be 48. so that should work the only thing we need to do is actually assign a direction to our player each time he changes direction so i'm going to go player and then this is going to be vector 2. um zero one this is going to be player direction zero minus one and you probably guessed it by now this is gonna be player direction one zero and this is going to be player direction minus one zero so let's check it out boom so you will see the kabum is now not on the link link the player himself but in front of him depending on which direction he is so great one last thing i promise and that is adding a score if we destroy a skeletal so i'm going to do that here so i'm going to use collides again and i'm going to pass through anything with the tag of kabum and anything with the tag of skeletal and i'm going to actually pass through k for goodbye and the skeletal this time so we can use both if both collide well i want to wait perhaps one second and then what do i want to happen so a function well i want to destroy the kaboom so destroy the kabum after one second but i want to destroy the skeletal immediately so that is how i will do that i can also grab the score label value and increment it using the increment operator by one and then also we can update the score label text to be the score label value just so we can see it in our browsers as well okay so that is good and i can also add something fun like a clam shake so let's add a cam shake of scale four so now let's try it out boom great so we're getting the cam shake we are destroying skeletor and we are adding one to the score and if we move on to the next level so let's just see this is all let's just try again so let's just go boom whoa that was a bit fast let's just try again boom amazing everything is looking great so i hope you've enjoyed making this game of zelda completely from scratch please do share your replies with us on free code camp i would absolutely love to see how you have made this game your own how you have taken it to the next level um have you added more levels perhaps have you added more enemies have you done any other really cool stuff i'd really like to know so thanks so much again for coding with me i hope you've enjoyed this lesson and i'm sure i'll see you soon on free code count bye now we've been creating our games in replit and it is now time for me to show you how to publish your games in the replit app store too so this is really simple it's going to be a really short section if you're really proud of your game and you want to share it and publish it please head over to replit forward slash apps and simply click publish right here once you have clicked this just click continue and then search for your repl of choice i'm going to choose zelda and i'm simply going to write a quick description so a wonderful game of zelda making sure to spell that correctly and then if i want to have a cover image i of course can i do think that is the best practice i'm not going to show you how to do that because i think it is pretty selfexplanatory you can also add tags so i've always got html in here i can also put kaboom if i wish um and then i can allow for comments if i feel comfortable to do that and there we go it was really that simple um thanks so much again for coding with me i hope you can share your games with us too can't wait to see them now before you go i just want to make a very quick section about how to perhaps use kabum in your own code editor of choice so i'm going to do this envious code i hope you can code along with me let's do it so this section is really simple it's going to take a few seconds i'm simply going to head over kaboom js and i'm going to copy all of the code that you see right here so it's simply this it's just the code that i'm going to use for the quick start i'm going to copy that and then just post it in the index html now if i open this up in my code editor of choice so open up around the browser you will see the ohiomark text that we expected to see done it was really that simple and from then on you are more than welcome to use all the other kaboom js methods to your disposal don't forget to check what version you are on so you can see the version here as most stuff does change quite frequently so make sure to refer to the documentation if you are currently on a newer version you can also move out all of this into a separate javascript file so i would do so like this i would simply create a javascript file like so and just paste everything in there so now if i look at the browser everything works the same so it was really that simple thanks so much for this short section and i'll hope to see you soon okay and that's it thank you so much for coding with me i hope you really enjoyed this wonderful course on kaboom js and i hope you can see how powerful of a tool it really is when it comes to game development thanks so much again and i'll see you on free code camp soon
