With timestamps:

00:06 - hey everybody welcome to live coding
00:07 - with jesse
00:09 - and today we're going to work with git
00:12 - and github
00:13 - and we will merge some pull requests in
00:16 - particular we have two pull requests
00:19 - that i'd like to merge in our bulletin
00:23 - project that we're doing with react
00:26 - and if we get through that and we have a
00:28 - little bit more time
00:31 - then i have a pull request for a bug
00:33 - that i had found
00:35 - in the
00:38 - in the resource center project
00:42 - so let's get started
00:47 - all right
00:48 - let's see
00:49 - so let me get my
00:53 - my screens in order
00:58 - okay
00:59 - and i want to apologize um i had
01:01 - mentioned on monday that i would be
01:03 - streaming wednesday
01:06 - obviously i did not stream on wednesday
01:08 - so i had completely forgotten
01:11 - that i had the day off wednesday so
01:13 - everybody at
01:15 - the university that i worked at had the
01:18 - day off uh so it was um all saints day
01:22 - which is a catholic uh holiday and this
01:25 - is a catholic university so we have the
01:27 - day off
01:29 - um so
01:30 - uh for anyone who celebrates all saints
01:32 - day
01:33 - or today which is all souls day
01:39 - then
01:40 - i hope you were able to make it to mass
01:43 - yesterday and uh
01:47 - today i am listening to some traditional
01:50 - music for all souls day so
01:53 - if anybody happens to like classical
01:55 - music based on
01:58 - early medieval uh poetry then let me
02:02 - know i can send you some nice spotify
02:04 - playlists
02:06 - um
02:08 - okay
02:10 - so hey everybody i see some of you are
02:13 - saying hi there in the live chat okay
02:15 - great
02:16 - i uh i just got the
02:19 - the analytics was showing zero viewers
02:21 - for a while there and now it finally
02:23 - kicked in so
02:25 - um
02:26 - i think we're good to start so we're
02:29 - going to go through both these pull
02:31 - requests and first thing we'll do is
02:32 - we'll we'll pull them in on a separate
02:34 - branch test them
02:36 - make sure everything's okay we'll and
02:39 - then we'll merge them in if we happen to
02:40 - have any merge conflicts we'll work out
02:42 - those merge conflicts um
02:45 - you know live
02:46 - and hopefully if you're not that
02:48 - familiar with git then
02:51 - this will this will help you out
02:53 - for me at least when i started working
02:55 - with git just the basic commits
02:58 - were not that hard
03:00 - but
03:01 - it made me a little bit nervous when i i
03:03 - first started getting into
03:06 - merging pull requests
03:07 - dealing with merge conflicts
03:10 - that was
03:11 - that was kind of like
03:12 - another level for me so
03:15 - hopefully this will let you you know get
03:17 - an idea of what it's what it's like for
03:20 - a real project you know to bring in code
03:22 - from other people and and how to handle
03:25 - that uh without you actually having to
03:27 - go through this on your own projects you
03:30 - know and
03:31 - uh
03:32 - try to learn it and and make mistakes on
03:34 - your own
03:35 - uh hopefully i make the mistakes and you
03:38 - can you can see it and then you don't
03:39 - have to
03:41 - uh i don't think we'll make any mistakes
03:43 - though uh these seem pretty
03:44 - straightforward in terms of a
03:47 - pool uh pull requests go
03:50 - so let me start my pomodoro timer if you
03:52 - haven't watched the stream before first
03:55 - of all welcome thanks for watching and
03:57 - then secondly uh i like to break things
04:00 - up between
04:01 - 25 minute periods of coding or in this
04:04 - case
04:04 - reviewing code and then five minutes of
04:07 - question answer and then we just go back
04:09 - and forth between the 25 minute five
04:11 - minute periods
04:12 - and then at the end if there are any
04:14 - other questions left in the live chat i
04:16 - will answer them all so
04:18 - if you have a question go ahead and put
04:20 - it in the live chat now and then please
04:22 - be patient and i will get to it
04:24 - uh
04:25 - at one during one of those break times
04:27 - or at the end of the stream
04:29 - uh probably gonna only do two
04:32 - sessions of coding
04:34 - today
04:35 - i got the stream started a little bit
04:37 - later than normal just had my my whole
04:39 - day almost was filled up with meetings
04:41 - so
04:43 - it just took me a while to get
04:44 - everything
04:45 - get everything ready and get the stream
04:47 - scheduled
04:49 - uh let's see
04:53 - we're gonna check out if you'd like to
04:55 - check out the repository so that you can
04:57 - see the code too in github it's the
04:59 - bulletin react repository the link is in
05:02 - the description for the video
05:05 - if it's not in the description let me
05:07 - know it should be
05:10 - and i think we'll start with
05:13 - the pull request
05:15 - let's go should we do 57.58 let's start
05:18 - with pull request 57
05:21 - and this is from
05:22 - sebastian
05:25 - so
05:27 - we're going to do a get fetch
05:30 - origin
05:32 - pool and we're going to pull request 57
05:34 - since we'll put our 57
05:37 - get the head and we'll call this since
05:39 - sebastian submitting the pull request
05:41 - i'm just gonna put an s there and then
05:47 - let's see
05:48 - uh
05:54 - uh there's there's several different
05:56 - things here i like to name my um my
05:59 - branches for testing based on what's
06:01 - happening in the pull request but this
06:03 - there's several things here
06:11 - all right let's just say styling
06:14 - just in general because a few of the
06:16 - commits are about styling
06:19 - there we go so now we can do a get
06:22 - checkout
06:24 - and onto that branch that we just made
06:28 - okay when i switch it when i pull in a
06:30 - branch to test and i switch to it i
06:32 - always do a yarn or we could do an npm
06:35 - install for not doing yarn
06:37 - in this case we had nothing to update
06:39 - but just in case the pull request
06:42 - added another npm package we want to
06:45 - make sure we get that right away or else
06:47 - we may end up getting some errors
06:50 - and uh we might waste time trying to
06:52 - troubleshoot that when all we needed to
06:53 - do was just
06:55 - update
06:56 - all right so i'm gonna go to our
06:57 - bulletin
07:00 - and
07:01 - we'll check it out specifically let's
07:04 - check out our print view because this
07:05 - pull request happens to uh deal a bit
07:08 - with print view
07:10 - okay not that so one of the things that
07:12 - i had wanted
07:14 - um was a close button
07:18 - so
07:20 - i like that probably um what i'll do or
07:23 - if any of you would like to do it
07:25 - is uh maybe move that close button over
07:28 - to this side
07:30 - upper right side it's entirely possible
07:33 - that when i open an issue about this i
07:36 - said left side accidentally
07:39 - instead of right side
07:41 - so if i did i apologize but i
07:44 - think
07:45 - i would like it better on this side and
07:47 - then that way we could move uh
07:49 - our content up a little bit higher
07:52 - otherwise uh this is good
07:57 - and let's
07:59 - fix the attachment code print view
08:02 - button bug
08:04 - let's see
08:11 - great
08:13 - white space and print document
08:16 - okay
08:17 - uh wonderful i think
08:20 - i think that's all we'll really need to
08:22 - test out if you notice i do have the
08:25 - console open
08:26 - so that i see any errors
08:29 - the only error we're getting is
08:32 - uh from an an image
08:35 - that we're trying to pull in so i'm not
08:37 - worried about that that may just be
08:40 - uh
08:41 - something
08:42 - having to do with either us being a
08:44 - local host or maybe some problem uh in
08:48 - our wordpress installation where that
08:50 - image
08:51 - perhaps it doesn't exist so in any case
08:54 - this is okay i'm not worried about this
08:57 - error it doesn't look like we're getting
08:58 - any more errors
09:00 - i could click around just to be sure
09:05 - um
09:06 - great all right so now
09:08 - the next step is let's merge this so the
09:12 - first merge i'm going to make
09:15 - i'm going to merge the master branch
09:17 - into this test branch
09:20 - i know i've mentioned this before but
09:22 - for any of you who maybe haven't heard
09:24 - it before i like to merge the master
09:26 - into the test branch first that way if
09:28 - it really messes things up we haven't
09:30 - messed up our master branch we've just
09:32 - messed up the test branch but if
09:34 - everything's all right there we can do a
09:36 - checkout to our master branch that means
09:38 - we're just moving uh to the master
09:40 - branch
09:43 - and if you're not familiar at all with
09:45 - git when i say we move to the master
09:47 - branch that means
09:49 - the version of the code that we have
09:51 - saved as our master branch now all our
09:54 - code will switch
09:55 - to be that version
09:58 - so if we if we had our code let's say
10:01 - open in the background here we could
10:03 - potentially actually see the change
10:05 - happen
10:07 - uh whoops i meant to say get check out
10:10 - master
10:12 - now we can do a git merge
10:14 - and we'll merge that test branch in
10:19 - into master and now we get a little
10:22 - summary of what's happened we've changed
10:24 - the these following files
10:26 - and it gives us
10:28 - the the pluses are additions to those
10:30 - files the red minuses are
10:34 - deletions from those files
10:36 - so
10:37 - there we go so now we've officially
10:39 - updated it the final step
10:41 - is to push that code back up
10:44 - to
10:45 - github which is where we're storing our
10:47 - repository you don't have to use github
10:50 - if you're using get
10:52 - it's it's helpful but it's not um it's
10:55 - not necessary
10:58 - so we're gonna do a get push
11:01 - origin master
11:06 - there we go so now
11:08 - the code that we've just merged in
11:11 - is available in our master branch on
11:14 - github
11:15 - and if you're following along with the
11:17 - repo pull request 57 should now say
11:20 - merged
11:22 - it may auto update for you or you may
11:24 - have to refresh
11:30 - but when you do it like this on the
11:32 - command line you push it up you don't
11:33 - have to hit the merge button on github
11:37 - in your browser it will automatically
11:39 - say that it's merged
11:45 - all right
11:47 - so
11:48 - the next pull request that i'd like to
11:50 - work on
11:52 - is
11:54 - pull request 58
11:57 - okay so harshit has uh submitted this
12:00 - pull request and it's it's titled uh
12:02 - miscellaneous changes but it also closes
12:06 - issue
12:07 - 59. so issue 59 was opened up by
12:12 - let me double check this but
12:14 - um since i've read it
12:17 - i think i read it yesterday
12:19 - um it was upgrade material ui
12:22 - um and this was submitted by i believe
12:26 - christian
12:27 - yes so christian submitted this and uh
12:30 - letting us know that material ui has
12:32 - come out with a new version
12:34 - uh and so we should upgrade to that so
12:36 - harsha's has upgraded to that and also
12:39 - removed the read more buttons
12:42 - because now on our posts if
12:45 - there is more to read we have a continue
12:48 - reading this will be nice because on
12:50 - posts like this which are really small
12:52 - there's not really anything else to see
12:55 - so it would be
12:56 - there there wouldn't necessarily be any
12:58 - advantage
12:59 - to clicking read more uh if you really
13:02 - wanted to see the single page with just
13:05 - this post you could always click on the
13:06 - title instead
13:08 - okay
13:10 - but
13:14 - this will save some space overall
13:18 - let's see
13:22 - wonderful i just wanted to test that out
13:24 - and make sure that we uh because i
13:25 - hadn't tested this out for the print
13:27 - view so we can in fact do print view
13:30 - with um
13:32 - a single post great
13:34 - uh all right so we're going to go
13:37 - through the same process as we did
13:38 - before
13:40 - it doesn't look like we'll have merge
13:42 - conflicts
13:43 - but let me check yeah so
13:46 - get let me pull this over just so you
13:48 - can see what git does so
13:50 - i'm on
13:52 - i'm viewing that pull request and here
13:57 - it'll let us know it'll scan the
13:59 - branches and let us know if there will
14:01 - be merge conflicts so
14:04 - we should be okay i'm still going to go
14:06 - through the same process as i did it's
14:08 - just a good practice
14:11 - to test things out
14:14 - first uh so just because there's not
14:17 - going to be any conflicts merge
14:18 - conflicts doesn't mean that we should
14:20 - automatically pull it in right because
14:22 - it may have no conflicts but
14:25 - um
14:27 - we
14:28 - we may not like what what has happened
14:31 - uh so
14:32 - there could be no conflicts in the code
14:34 - but there might be errors when you try
14:35 - to run it
14:38 - um
14:40 - let's see
14:50 - okay i happen to look over to live chat
14:52 - and arvin says get push origin is always
14:55 - the same as get push origin master
14:57 - that's good to know i can save save some
15:00 - time now and and typing that so let's if
15:02 - i remember hopefully i'll remember in
15:04 - about a few minutes when we go to push
15:06 - this up we'll try to type it in uh the
15:09 - shortened way
15:13 - okay and looks like sebastian found
15:16 - maybe a little bug
15:18 - when switching back to normal view it
15:20 - will always be on grid view
15:26 - um
15:30 - let's see so if we go to print and then
15:33 - click here oh yeah it always goes to
15:35 - grid okay
15:37 - um sebastian if you'd like to open an
15:40 - issue about that then please feel free
15:43 - otherwise maybe i'll open an issue a
15:45 - little bit later on if you didn't catch
15:46 - that here's what happens
15:48 - we can choose list view
15:51 - and then we choose print view and when
15:52 - we go back out what we what should
15:54 - happen is that we should still be in
15:56 - list view but what really happens is
15:57 - that we've gone back to grid view
16:00 - so
16:02 - we'll want to
16:05 - we'll want to change that
16:08 - and
16:13 - so that was that was a good catch on
16:14 - that sebastian i had not noticed that
16:18 - let's see
16:22 - here we go
16:23 - all right so let's go with uh get fetch
16:28 - origin pool this is pull request
16:32 - 58
16:34 - head and
16:36 - this is from harshit and
16:40 - let's say
16:44 - material ui
16:46 - uh since this this pull request among
16:49 - other things did upgrade to the new
16:51 - version of material ui
16:54 - great now we're going to check out oops
16:56 - git checkout
16:59 - this
17:03 - and we're going to run yarn
17:05 - and this time
17:07 - we do actually have an update for our
17:09 - package
17:13 - so we should have updated um
17:18 - material ui
17:20 - and material ui icons to the latest
17:23 - versions
17:24 - okay
17:26 - um
17:29 - let's see
17:35 - now let's merge
17:38 - merge the master
17:41 - oh
17:43 - and
17:44 - do we have a conflict now
17:47 - no it's just prompting us for a merge
17:49 - message
17:51 - okay
17:53 - um
17:55 - all right so let's just
17:58 - merge it
18:03 - there we go
18:08 - and that's just brought in basically
18:09 - it's just brought in all those changes
18:13 - that we had just merged into master it's
18:15 - brought those in
18:17 - to uh to update this branch so there
18:19 - were no conflicts but
18:22 - we needed to update this so if this
18:24 - looks familiar it's because we just saw
18:26 - the same thing up here
18:31 - right here
18:34 - okay now
18:35 - let's give it a little test so
18:38 - we we really shouldn't see anything let
18:40 - me refresh this and let's see if we're
18:41 - getting the same error we are so let's
18:43 - check out this it's not
18:46 - it's saying it's a warning so obviously
18:48 - things are still working here um line
18:51 - items prop on a dom element if you
18:53 - intentionally want it to appear in the
18:54 - dom with a custom attribute spelled
18:56 - lowercase line items instead
19:00 - okay so it looks like
19:02 - uh we have some some props so
19:05 - since we weren't getting this before and
19:07 - we are getting it now
19:09 - potentially
19:11 - maybe something changed in
19:14 - material ui since we updated it and and
19:18 - this is no longer a valid prop
19:21 - so
19:23 - since this is only a warning
19:26 - i'm okay with merging this in now at
19:29 - some point we'll want to fix that
19:31 - but it looks like uh
19:34 - they've created by grid component so it
19:36 - looks like this is having to deal with a
19:37 - grid
19:38 - and the grid seems to be working
19:41 - so we can double check that
19:44 - and
19:46 - potentially if we even are we we may
19:49 - have stopped using the grid for this i
19:50 - think we did switch to
19:53 - using masonry
19:55 - so
19:58 - we should be okay everything looks fine
20:00 - and then we should also
20:03 - there we go so you can see we no longer
20:05 - have that read more
20:08 - okay
20:09 - uh so now that we don't have the read
20:10 - more i may end up
20:13 - cutting out some of the padding here it
20:15 - just seems like more padding that we
20:17 - need
20:18 - but otherwise
20:20 - not bad
20:23 - and then eventually what we will do is
20:26 - uh once we're actually pulling in data
20:28 - about with attachments
20:30 - uh
20:31 - these posts that don't have attachments
20:33 - this entire bottom portion will be gone
20:37 - so
20:38 - it'll save even more space and then only
20:41 - some of the posts will actually have
20:43 - attachments
20:46 - okay
20:47 - looks good though looks good
20:50 - let me just click around just a bit more
20:53 - make sure we're not getting any other
20:54 - errors
20:56 - and
21:00 - let's try this search
21:05 - great
21:06 - okay
21:08 - awesome
21:09 - okay everything seems to be working
21:12 - although that's
21:13 - that's odd
21:15 - to have a space there
21:17 - interesting oh there we go
21:20 - that's really odd huh that was
21:23 - interesting
21:24 - um we'll have to keep an eye out for
21:25 - that
21:26 - uh
21:28 - some empty spaces not a huge issue but
21:32 - just a little kind of visual glitch i
21:34 - guess
21:35 - okay
21:36 - that looks good whoops
21:40 - so let's check how much time okay great
21:42 - seven minutes uh let's go ahead and
21:45 - switch back to the master branch and
21:47 - then merge this in
21:54 - um
21:55 - i just checked in the live chat proxy
21:57 - says how much longer will this go on i
21:59 - just tuned in
22:00 - um
22:01 - i'm thinking another half hour at least
22:04 - um
22:06 - we seem to be going through things
22:07 - pretty quickly so
22:09 - uh more quickly than i anticipated um
22:13 - but i think we have at least another
22:14 - half an hour depending on how many
22:16 - questions uh are in the live chat
22:19 - okay
22:20 - so let's do get checkout
22:23 - master
22:24 - and now
22:25 - let's merge that branch into master
22:27 - which should work
22:29 - with no problems
22:33 - git merge h
22:36 - great
22:41 - all right and now we can do a get
22:44 - push
22:45 - origin
22:49 - okay which i've just learned is a
22:52 - shortened form of saying get push origin
22:54 - master
22:56 - if we wanted to push a different branch
23:00 - we could specify that
23:03 - but if we just want to push master i
23:06 - guess that's the default
23:09 - um
23:12 - great
23:14 - and actually let me ask so arvind is the
23:16 - one that that
23:18 - let us know about get push origin
23:21 - is it relative to the branch you're on
23:23 - so for instance if i was on let's say
23:26 - the dev branch and i did get push origin
23:29 - would it automatically just push
23:31 - um
23:34 - whatever that branch is so would it push
23:36 - to dev or is it automatically master
23:40 - um
23:42 - i'm not sure i guess i can try it out at
23:44 - some point uh if you don't know
23:48 - um okay but
23:52 - at this point
23:55 - all the code now is on github it's all
23:58 - up to date on the master branch and now
24:01 - github says that branch 58 is in fact
24:04 - merged
24:11 - and
24:14 - great so we have
24:15 - all the outstanding pull requests should
24:18 - be merged in for this bulletin react
24:21 - repository not only that but we have our
24:25 - our issues here that have been closed so
24:29 - um let's check this out
24:36 - uh let's check out
24:40 - add a close icon to print view
24:43 - and i do want to see if i
24:46 - in the upper right corner of the preview
24:48 - okay i okay so i didn't mess that up i
24:50 - did i thought i may have messed it up
24:52 - and said left corner
24:54 - okay
24:55 - um
24:56 - let's see this
25:03 - maybe
25:05 - maybe i'll leave this open uh and then
25:09 - i'll close it whenever i put that in the
25:11 - right corner or if any of you want to
25:13 - put that icon in the right corner
25:15 - but it looks like
25:17 - 51.52 let's check out pull requests
25:20 - or i'm sorry issue 52.
25:28 - there we go so this vertically align
25:31 - that attachment icon so
25:33 - before this icon and the text were kind
25:36 - of off in the alignment
25:40 - so let's close that
25:44 - close that issue
25:45 - awesome
25:48 - and
25:50 - let's also see this upgrade
25:52 - uh this was closed
25:55 - so
25:56 - christian
25:57 - uh actually it was already closed
26:00 - this was closed i suppose automatically
26:03 - then
26:04 - um
26:04 - so we've gotten rid of those issues and
26:06 - let's double check
26:10 - okay
26:11 - we can go into our projects now so we're
26:13 - using this uh kind of kanban style
26:17 - uh to track some things and now we can
26:21 - move this over to completed okay
26:25 - and it looks like i'll need to add some
26:26 - more in here we're getting kind of low
26:28 - on to do so
26:31 - i'll have to go through and check that
26:33 - out see what else needs done
26:35 - okay great
26:38 - so about two minutes let me
26:42 - i want to take a look at the live chat
26:43 - now before we start on um on the next
26:47 - pull request we do have a pull request
26:48 - for a previous project and we're gonna
26:51 - we're gonna bring that in
26:52 - um
26:53 - and that one's a little bit more uh
26:56 - technical i guess and because it deals
26:59 - with um
27:01 - with forms and bugs with older browsers
27:03 - and things so
27:05 - uh i don't want to try to explain that
27:07 - with two minutes left so let me go ahead
27:08 - and take the break now
27:10 - and i'll go to the live chat
27:12 - and after this five minutes is up uh
27:15 - we'll do some more
27:16 - um
27:17 - some more merging of pull requests
27:23 - uh let's see
27:25 - jessem says how long have you been with
27:27 - git
27:28 - um
27:30 - i guess so i guess that was how long
27:33 - have i been using it
27:38 - for
27:41 - three or four years
27:44 - yeah somewhere around there
27:48 - uh
28:08 - music says how to get started with
28:09 - github
28:11 - um
28:12 - well check out
28:14 - there there are a couple of courses that
28:16 - are free online that can help you learn
28:19 - about using git and github
28:21 - i recommend
28:23 - if you want more of a structured course
28:25 - i definitely recommend udacity's intro
28:27 - to git and github
28:29 - really
28:30 - i i think the course is very well done
28:34 - so
28:35 - check that out it's a mix of
28:38 - text video
28:40 - hands-on
28:41 - assignments
28:43 - i i really benefited a lot when i took
28:45 - that course early on when i was just
28:47 - learning
28:49 - also if you like videos uh this channel
28:52 - free code cams youtube channel has a
28:54 - series of videos on on git and
28:59 - i believe that
29:02 - code academy has something on git now
29:05 - i'm not positive and then there are also
29:07 - youtube channels that have
29:10 - some get tutorials i think learn code
29:14 - academy
29:15 - does have some get videos
29:17 - uh so you can check that out as well so
29:19 - that would be
29:20 - this would be my suggestions github
29:22 - itself has um tutorials documentation
29:25 - and things like that you could read
29:27 - through if you prefer you know just read
29:29 - through and try things out on your own
29:40 - see uh see
29:42 - s what time is it over there
29:44 - in my time zone um it is
29:48 - 3 30 p.m
29:53 - proxy asks have you ever done merging
29:56 - resolving merge conflicts using github
29:58 - desktop instead of a command line
30:01 - i've actually never used github desktop
30:04 - so
30:07 - i really can't i i can't say anything
30:10 - about it so the answer is no i've never
30:11 - done it um
30:13 - for me the uh the command line seems to
30:16 - be
30:18 - pretty quick
30:19 - uh i can get things done quickly i never
30:21 - have to leave the command line
30:24 - although when dealing with complex merge
30:26 - conflicts
30:27 - i could see how maybe it might be
30:29 - helpful to use something like github
30:30 - desktop i i've never tried it though
30:34 - has anybody used github desktop
30:36 - um at all or and particularly when it
30:39 - comes to merge conflicts
30:42 - uh if you have let me know i'd love to
30:44 - um
30:45 - i'd love to hear about it
30:49 - sebastian says uh missed the right
30:50 - corner part yeah no worries sebastian
30:53 - it's cool
30:54 - um
30:56 - yeah that's not really a big deal that's
30:58 - easy
30:59 - easy fix
31:03 - oh man arvin said i left my job by the
31:05 - way
31:06 - oh arvin what's um
31:10 - uh
31:12 - so how did that go are you are you um
31:15 - i don't know if i should be sorry to
31:16 - hear that you left your job or excited i
31:18 - guess it depends on
31:20 - whether or not you like that job and and
31:22 - what you're uh what you're doing now so
31:25 - um
31:27 - was are you happy about uh about leaving
31:29 - was it a bad situation uh and do you
31:32 - have anything lined up now um in terms
31:35 - of uh in terms of a job
31:39 - anyway let me know and actually for
31:41 - anybody who's looking for work
31:44 - uh occasionally i do have or i hear
31:47 - about some projects that are open for
31:49 - freelancers
31:50 - so let me know if you're interested and
31:53 - then if i find something that fits your
31:55 - skill set i could always you know let
31:57 - you know about it
31:58 - i can't guarantee anything i just i'm
32:01 - not actively looking for work but
32:02 - occasionally people get in touch with me
32:05 - about you know some job so
32:07 - let me know
32:09 - uh also if you tweet and um you tagged
32:14 - me in the tweet saying that hey here's
32:17 - here's what i do you know let's say i
32:19 - i'm a rack developer or i do php or
32:22 - whatever
32:24 - and i'm looking for work
32:25 - i can retweet that for you i don't have
32:28 - a ton of followers i think i have maybe
32:30 - like
32:31 - 600 or something 700 i don't know
32:34 - somewhere around there
32:35 - um but potentially i could retweet you
32:37 - and you know some other people retweet
32:39 - you could reach a large audience so
32:41 - pretty much everybody that follows me is
32:44 - a developer of some sort
32:46 - so
32:47 - i'd be happy to help you out in that way
32:50 - because i know some of you are are
32:52 - looking for work so
32:54 - just let me know all right my five
32:56 - minute timer is up but i'm nearly to the
32:58 - bottom of the live chat so i think i'll
32:59 - do one more question
33:01 - oh arvin says the net ninja has a great
33:04 - tutorial for git and github so i haven't
33:06 - i haven't used that tutorial yet but
33:08 - arvin says it's good so check that out
33:10 - as well that's the net ninja
33:13 - um
33:16 - oh igor did ask about my github black
33:18 - theme yeah it's actually uh it's a
33:20 - script so i use this tamper monkey
33:23 - plug-in
33:24 - um and that's that's a chrome plug-in uh
33:27 - so you load tamper monkey and then
33:29 - search for github dark which uh rook has
33:33 - has pasted in a link to that it is
33:35 - github dark so that that is the correct
33:36 - link rook thank you for that
33:38 - um
33:39 - and then just follow the instructions on
33:41 - that repository and you'll be able to
33:43 - get the um the github dark theme and it
33:46 - also comes with some cool options so
33:49 - um
33:52 - see we have settings here you can change
33:54 - it up
33:55 - uh i actually recently changed up my
33:57 - github theme to this
33:59 - monica space gray 80 so
34:02 - uh
34:03 - you know you could do oh you can change
34:06 - tab size
34:07 - nice
34:08 - i'm definitely setting it to two because
34:10 - that's that's what i like
34:12 - um anyway
34:15 - uh great
34:18 - that's cool all right so
34:22 - um
34:24 - cfas if i stream after work
34:27 - i usually don't stream after work
34:29 - because then i'm i'm home and my uh my
34:32 - network is not good enough at home uh my
34:35 - internet is not good enough to stream in
34:38 - 1080p
34:39 - i don't like to stream at a lower
34:41 - quality because
34:42 - it makes it hard to read the code
34:45 - so
34:47 - usually i i can't even get 720 uh most
34:50 - of the time too so until
34:52 - better internet becomes available where
34:54 - i live
34:55 - i probably won't be streaming from home
34:58 - i'd love to be able to but
35:00 - just doesn't it's not working out right
35:03 - now
35:07 - let's see okay now i'm gonna go back uh
35:10 - and we're gonna merge in another pull
35:11 - request after that i'll go back to the
35:13 - live chat and uh and answer some more
35:16 - questions
35:19 - let's see oops and i just realized that
35:22 - i have my phone plugged in and when i
35:24 - have my phone plugged in uh there's some
35:26 - feedback often on the mic so so
35:30 - sorry if anybody heard some weird
35:32 - feedback going on there
35:35 - but it should be fine now
35:38 - all right so let's go
35:42 - first of all let's bring up
35:44 - this other project
35:47 - which i think i'm running on localhost
35:49 - 3001
35:52 - let's see it's one of these there we go
35:55 - so i already have it up here and here's
35:57 - the problem
36:00 - so the problem that we had which i think
36:02 - i mentioned last week is
36:05 - when you went to submit a form so let's
36:07 - just bring up one of these forms this is
36:09 - we have two forms one is a little bit
36:10 - more complicated this one is the the
36:13 - simpler of the two
36:14 - so you go to fill out the form and you
36:17 - hit submit and nothing happens
36:19 - this bug was found on safari 9.1
36:23 - on a mac
36:25 - so
36:26 - unfortunately
36:28 - the bug was found by the head of my
36:30 - department which is no good right i
36:32 - don't want she was very um
36:36 - very nice about it she wasn't mad at all
36:38 - in fact she had thought that she was
36:39 - doing something wrong so but it's
36:41 - entirely not her fault uh it just it
36:44 - doesn't work so i had mentioned that i
36:47 - thought
36:48 - that it had something to do with our use
36:50 - of async await
36:53 - and it seems like that's the case that
36:55 - that was the problem so
36:57 - um
36:59 - let's uh
37:03 - let's pull in
37:05 - the fix so let's go to
37:09 - let's see let's get our notifications
37:12 - and
37:13 - yeah this was the issue
37:15 - and let's find the pull request
37:21 - all right so
37:22 - what's this holder let me let me give
37:24 - credit here so let me open up
37:26 - um
37:27 - so uh helder
37:30 - has submitted this pull request so thank
37:32 - you very much for this and
37:35 - you'll see in the files that have
37:36 - changed i know it's really small so let
37:38 - me zoom in a bit
37:39 - some of these basically most of these
37:41 - changes are because of formatting which
37:44 - is weird
37:45 - uh because we should have auto
37:47 - formatting happening but anyway so let
37:49 - me scroll to
37:51 - the actual um file that that did change
37:55 - so
37:56 - if you see here we went from using async
38:00 - right so we're using async
38:05 - to using
38:06 - just a normal um promise with our
38:11 - with our fetch
38:13 - okay so that's what i suspected needed
38:15 - to happen
38:17 - and let's download this
38:19 - test it out
38:20 - and uh hopefully it'll work we're going
38:22 - to use browser stack to do some testing
38:24 - because we need that
38:26 - safari 9.1
38:29 - i see igor just asked uh what's the
38:32 - lowest safari version you're supporting
38:34 - with this project
38:35 - to be honest with you i wasn't worried
38:37 - about supporting older browsers because
38:39 - this is an internal project and everyone
38:41 - working at the university should be
38:43 - getting updates on their browsers so i
38:46 - generally don't worry about supporting
38:48 - older browsers because i think it's bad
38:49 - practice in general
38:51 - uh for internal websites because it just
38:53 - enables
38:54 - users to not update their browsers
38:57 - uh which potentially could have you know
38:59 - security issues
39:01 - but in this case since it's the head of
39:03 - my department that was having issues i
39:05 - need to fix this
39:08 - and i haven't had any uh complaints from
39:11 - anyone else so i don't know if other
39:13 - users happen to be using that same
39:15 - version of safari but it's entirely
39:16 - possible that they are
39:18 - so i'm just going to fix this
39:23 - okay
39:25 - and by me i mean helder is going to fix
39:28 - this so i did do some uh some testing
39:31 - and research on the issue uh before i
39:34 - made before i made the issue on the
39:36 - repository but
39:38 - as you can see helder actually did the
39:40 - the work coding so let's see what what
39:43 - is this 65
39:45 - okay so let me let me bring over
39:50 - the
39:51 - terminal window for this
39:54 - so we do have
39:57 - you know what i have some changes that i
39:59 - had already made
40:01 - where am i at
40:02 - um
40:04 - here right
40:09 - resource in it let's go to our bulletin
40:11 - and
40:13 - no no no resource center that's where
40:15 - we're at so the project is resource
40:16 - center let me undo all my tests
40:21 - because i messed this
40:22 - up pretty thoroughly
40:26 - uh
40:28 - all right
40:29 - and
40:32 - let's do
40:34 - let's do status view story.js
40:36 - no i have not updated this
40:39 - um
40:41 - if you're not sure what i'm doing i'm
40:44 - trying to get rid of my my tests my
40:46 - changes
40:48 - because i don't want those to be
40:52 - to be committed
40:53 - are included at all
40:55 - let's see what it says i've changed
40:59 - project description
41:02 - name email that's interesting
41:07 - so what does it think it was
41:11 - i'm gonna do a git diff to see what
41:13 - changed
41:15 - okay that's interesting it says that
41:18 - i've actually added this line in
41:23 - interesting
41:29 - hmm
41:40 - and i don't really want that added in
41:42 - right
41:43 - i do not so let's see
41:46 - what i want is that to say
41:49 - story
41:50 - and not project description so let me go
41:57 - let me change that
41:59 - actually could it be
42:04 - it's already up to date
42:06 - that's odd that's really odd i thought i
42:08 - had fixed that at some point
42:11 - anyway
42:12 - uh let's just go ahead and change that
42:13 - back then
42:19 - there we go now what we should have when
42:22 - we do a git status is that nothing is
42:24 - here so
42:25 - uh we don't see that little asterisk
42:28 - anymore so that means nothing's there
42:30 - okay great
42:32 - let's do it get
42:35 - fetch
42:37 - origin pool
42:39 - and this was 65 i believe
42:42 - we can always double check
42:44 - 65 yep
42:47 - and and we'll do uh let's see
42:51 - this is from helder
42:54 - um
42:58 - so
42:59 - there
43:00 - and
43:01 - let's go
43:04 - safari bug
43:12 - so now we're moving to that branch
43:15 - and
43:16 - we're going to type in yarn just to be
43:18 - sure although uh it shouldn't do
43:20 - anything okay great
43:22 - now let's merge
43:27 - master
43:28 - which is up to date so awesome so
43:30 - everything's up to date now here's what
43:32 - we're going to do
43:33 - i'm going to run
43:36 - ngrok
43:38 - which where's my ngrok server at
43:42 - maybe i have it on here instead
43:45 - uh so i have n grog running somewhere
43:48 - or i had it running i stopped it
43:51 - from the last time there we go okay so
43:53 - what ngrok is going to do
43:55 - is this is going to allow me
43:57 - to test this
43:59 - from anywhere
44:00 - so
44:02 - um i'll paste i'll go ahead and paste
44:04 - this in the description in case you want
44:05 - to test it or i'm sorry in the live chat
44:08 - so ngrok is now giving me a link
44:13 - to this even though it's running locally
44:16 - now you all uh can
44:19 - can test it out
44:21 - i'm going to run browser stack so if
44:23 - you're not familiar with browser stack
44:30 - it lets you run
44:33 - your your sites test out sites on
44:37 - different operating systems different
44:39 - browsers
44:40 - so oops
44:42 - oops i forgot i was on chrome canary
44:46 - let's try
44:47 - browser stack this would be a lot easier
44:49 - to log in like this okay so i'm already
44:52 - logged in so here's browser stack let me
44:55 - zoom in a bit so you can see so i have a
44:57 - choice to run this on
45:00 - you could see a lot of different mobile
45:01 - devices
45:03 - but i'm going to go down here to mac and
45:05 - let's try
45:07 - el capitan so
45:10 - we're going to go 9.1 on el capitan
45:15 - and it's actually going to start up
45:20 - that browser device combo
45:24 - once that starts up
45:26 - we're going to visit that ngrok link
45:29 - that i just pasted in
45:31 - and we're gonna try to submit
45:36 - that form
45:38 - so
45:39 - for me it i had a previous ngrok link in
45:42 - that obviously is not working now
45:44 - because i shut down that
45:46 - that link great so now we're in
45:49 - as you can see we're in here
45:51 - i can
45:52 - from in here i can inspect
45:56 - so you can see i can bring up
45:59 - the dev tools the safari dev tools
46:02 - and inspect things and
46:05 - the console will be most helpful to us i
46:07 - suppose
46:08 - so i'm going to go into that suggest a
46:10 - story form since it's a lot easier to
46:12 - fill out than the other form and
46:17 - there we go there's a slight lag but i'm
46:21 - when i'm doing this but it's not
46:23 - unreasonable
46:28 - and
46:33 - do the test
46:34 - and
46:36 - submit
46:39 - oh
46:42 - interesting
46:44 - type there object entries is not
46:47 - function
46:49 - okay so we are getting an error here
46:54 - i can uh i have my email open on another
46:57 - screen so i can tell whether or not an
47:00 - email was sent or whether the error
47:02 - completely stopped it it looks like it's
47:03 - completely stopped
47:07 - all right so
47:08 - i know this is really small
47:12 - i can't the the zoom is not working for
47:15 - me so
47:16 - um
47:18 - let me bring this
47:20 - whoops
47:27 - again let me just read off this error
47:29 - then so we have a type error object dot
47:32 - entries is not a function
47:36 - so it says
47:37 - in object dot entries uh this state form
47:41 - object dot entries is undefined
47:44 - so
47:46 - let's check that out in the code
47:49 - so we have our
47:51 - dot story.js and
47:53 - down here where we're doing our
47:57 - handle form data
48:00 - this is where we have object dot entries
48:02 - this state form
48:06 - so
48:11 - interesting
48:16 - i'm just going to choose this undefined
48:24 - i wonder uh
48:36 - hmm
48:59 - nothing huh
49:02 - that's interesting
49:12 - is
49:13 - all right so here's what i'm thinking
49:15 - maybe
49:16 - object
49:18 - dot entries
49:21 - is not supported
49:38 - well let's just
49:45 - all right let's check it out in uh mdn
49:49 - and it should tell us here at the bottom
49:51 - where we could use it
49:53 - oh okay
49:54 - so the compatibility uh here says it's
49:57 - available in safari 10.1 we are testing
50:00 - it at 9.1 so that would make sense
50:03 - um
50:05 - okay
50:07 - so it seems like
50:14 - seems like we need a polyfill right
50:39 - let me deploy polyfill listed below
50:54 - let's see if we can just copy this
50:56 - polyfill
50:57 - and uh and get it to work
51:00 - um
51:03 - just i mean this will just kind of
51:05 - really tell us
51:07 - where the problem is i suppose
51:10 - let's get rid of that
51:14 - let's see
51:22 - okay
51:24 - so we should be able to go
51:26 - back to our
51:29 - uh browser stack this should have auto
51:32 - refreshed okay blake has a question here
51:34 - i just noticed
51:37 - asking what does a polyfill do okay so
51:39 - let's let's go over this nice this is a
51:41 - really great question so a polyfill is a
51:44 - way for you to use some newer syntax
51:48 - with older browsers so let's just check
51:50 - out what this particular polyfill is
51:52 - doing so it's checking to see
51:54 - um if object entries doesn't exist so
51:57 - you know we see that um
52:00 - exclamation point there which is
52:01 - basically just the opposite so if object
52:05 - dot entries doesn't exist meaning it's
52:07 - not supported by that browser then we're
52:10 - going to create object dot entries so
52:13 - essentially it's just making it anyway
52:15 - and then it's making a function that
52:17 - takes in an object
52:19 - okay so it's going to do object keys on
52:22 - that object all right and it's basically
52:24 - going to do pretty much the same thing
52:27 - as object dot entries would do but it's
52:30 - using syntax
52:33 - that is acceptable
52:36 - for older browsers or it's using
52:40 - you know other other methods so the
52:42 - objects.keys that's acceptable for older
52:44 - browsers so when we add this in what
52:46 - should happen and we're going to test in
52:48 - a second
52:49 - is that
52:51 - on newer browsers this will completely
52:53 - get skipped over and everything will
52:55 - work as normal but on browsers that
52:57 - don't support
52:58 - object.entries instead
53:01 - this function will run and it should
53:03 - return something that will allow our our
53:06 - forms to work properly
53:08 - uh even if it's in an older browser so i
53:10 - believe
53:12 - from what this was saying that this will
53:14 - not work in older versions of internet
53:16 - explorer i have no intention of
53:17 - supporting older versions of internet
53:19 - explorer so i'm not worried about that
53:21 - but it looks like there are some
53:22 - alternatives if you do need to support
53:25 - older versions of ie
53:29 - so
53:30 - hopefully that made sense uh if anybody
53:32 - else has some more insight on what
53:34 - polyfills are what they do
53:36 - please put it in the live chat now
53:39 - always appreciate expertise from from
53:42 - you all
53:43 - so let's let's try this out again
53:56 - it's a test all right submit
54:01 - error no the page integral is not
54:04 - allowed to display insecure content
54:08 - from n rock
54:22 - all right let me try this
54:25 - so let me try another link and then test
54:28 - it again so it looks like there was some
54:29 - issue because i was using https
54:34 - uh so let's go with
54:37 - the non
54:39 - https or just the regular http link
54:42 - and give it another shot
54:45 - see if that makes a difference but we
54:47 - weren't getting the uh object.entries
54:50 - error so i'm assuming that that was
54:52 - corrected
54:53 - but we'll try to verify and get an
54:55 - actual submission to go through
55:07 - okay
55:08 - now let's submit
55:17 - so
55:18 - nothing happened
55:22 - and we get no
55:23 - errors in the console
55:27 - all right i don't like this
55:30 - this is no good
55:35 - uh let's check our network see what's
55:37 - happening
55:38 - share a story
55:44 - and we should be sending
55:48 - where's our fetch
55:58 - upload where's our upload url
56:01 - and we defined it up here
56:04 - story form so are we actually submitting
56:07 - sorry for this being so small
56:10 - um
56:12 - error occurred okay now we finally got
56:15 - an error let's see what it was
56:22 - okay so it looks like it's a um access
56:25 - control origin thing
56:28 - where are we sending these
56:42 - i saw
56:45 - all right let's double check
56:49 - our
56:50 - server
57:11 - you know what this is the one where
57:13 - we're sending with sendgrid correct
57:15 - uh probably what's happening is
57:20 - i have um a white list of domains when
57:23 - my sendgrid api and i don't have this
57:27 - domain included so
57:29 - here's what i'm going to do
57:31 - i'm going to
57:32 - copy this
57:34 - let me copy this
57:38 - add it to the api and then we should um
57:42 - we should be okay so
57:44 - uh i'm going to do this on my other
57:46 - screen for sendgrid uh just so that i
57:48 - don't accidentally show something on
57:50 - youtube that i should not in terms of
57:52 - user data
57:56 - but basically
57:57 - what i'm doing here is just
58:00 - adding a url to the whitelist
58:03 - for
58:05 - for this particular
58:07 - api key that i'm using
58:11 - so if you if you want to know how i'm
58:13 - doing this in sendgrid you just log into
58:15 - your sendgrid account and then on your
58:17 - side menu you go to settings and then
58:19 - api keys and then you just select the
58:21 - api key
58:23 - that you would like to edit
58:26 - edit your key
58:28 - [Music]
58:30 - interesting
58:38 - maybe i don't
58:44 - domains
58:50 - that's interesting
58:52 - it looks like i don't have
58:58 - the api key
59:01 - set up with any type of white list
59:10 - interesting
59:13 - okay
59:15 - then
59:19 - that's crazy
59:21 - alright so what is the problem
59:35 - hmm
59:36 - uh it might be
59:39 - it might be the way we're running this
59:40 - server actually
59:50 - you know what let's it i it probably is
59:54 - that let's shut this down
59:56 - and let's go
60:00 - thousand
60:13 - okay so
60:14 - uh it's been a while since i worked on
60:16 - this project so i had forgotten that the
60:18 - way we're running this is um there's a
60:22 - server running on
60:23 - there's a version of the site running on
60:25 - localhost 3000 and in this case 2001
60:28 - and that one works except the forms
60:31 - don't work but then we had another one
60:32 - running on port 9000 and that one worked
60:35 - with the form so that is probably our
60:38 - error so my 25 minute timer is just
60:42 - ended but i want to do one more test
60:44 - since we're so close
60:54 - let's see let's submit this
60:58 - and see
61:00 - what happens
61:05 - okay so so far nothing
61:10 - um
61:13 - there's a network
61:22 - let's get xhr
61:35 - all right well
61:40 - we're not getting anything
61:56 - hmm
62:00 - we're not getting any errors in the
62:01 - console
62:14 - that's odd
62:23 - oops
62:26 - let's try one more thing
62:30 - one more thing before we stop
62:48 - so let me see this
62:56 - let's let me check out our
62:59 - package json file and see
63:09 - okay so we should be starting those
63:10 - servers right
63:23 - foreign
63:39 - hmm
63:50 - let's build
64:04 - okay so i'm gonna run this i'm gonna try
64:07 - one more time
64:09 - no matter what happens this next time
64:10 - i'm gonna go to finish up with some
64:12 - question and answer stuff
64:14 - uh i'm not i'm not gonna go through the
64:16 - process it let's say this works i'm not
64:18 - gonna go through the process of actually
64:19 - merging this in we've already done it
64:21 - twice
64:22 - i don't really think
64:23 - there's there's much value in doing it
64:25 - again
64:27 - um
64:29 - the only difference would be
64:32 - after i did all this i would then
64:35 - actually go onto the server and update
64:37 - the the live server
64:42 - okay
64:43 - so let's
64:47 - let's go with
64:49 - start
64:51 - start that server
64:53 - and
64:55 - for sure
65:00 - okay
65:03 - let's double check
65:09 - okay great that is working
65:12 - and
65:14 - where's our
65:19 - where's our browser stack there it is
65:23 - okay
65:25 - i'm going to go ahead and do a refresh
65:27 - just to make sure it should auto refresh
65:29 - on us but
65:32 - i just want to make sure everything is
65:34 - is working properly
65:53 - let's submit
65:56 - all right okay it says your story
65:58 - suggestion was sent successfully okay
66:02 - and i will verify by checking my email
66:06 - that i am i should be getting an email
66:08 - update
66:10 - uh somewhere
66:21 - let's see
66:30 - so i've gotten nothing so far
66:34 - but
66:39 - oh you know what
66:40 - uh since we're in testing mode it's
66:42 - probably turned off
66:45 - uh so
66:47 - that's why i'm not actually getting the
66:48 - email but
66:50 - uh we did get
66:52 - we did get a success
66:55 - message so
66:58 - i'm happy with that
67:01 - awesome so uh with just you know we had
67:04 - to add that polyfill in there uh which
67:06 - is okay
67:08 - uh what i'll have to do then uh it's not
67:10 - exactly ready to merge in yet because
67:12 - i'll have to add the same polyfill into
67:14 - for the other form
67:16 - uh there's probably a better way to do
67:18 - that so i don't have to repeat the same
67:20 - code so
67:23 - maybe i'll
67:27 - i don't know i don't mind repeating
67:29 - something twice if i had to repeat it
67:30 - more than twice it might be worth it to
67:32 - maybe make it a separate component put
67:34 - it in the utils folder
67:37 - uh
67:38 - we'll see
67:40 - um but i'd have to do that
67:42 - then merge it uh put it on github i'll
67:45 - pull it into the server so if anybody's
67:47 - interested in that whole process um
67:50 - maybe i could i could show that on a
67:53 - stream in the future
67:54 - um
67:55 - just let me know
67:57 - but otherwise i think the the problem
67:59 - seems to be solved so
68:02 - thank you again uh helder for that pull
68:05 - request
68:06 - and um
68:08 - so if anybody feels like browsing this
68:11 - site on
68:12 - internet or on safari 9.1
68:15 - it'll work now so
68:18 - all right
68:22 - so let me scroll up a bit to where i
68:24 - left off in the live chat
68:26 - and uh answer uh
68:28 - as many questions as i can
68:34 - let's see
68:47 - okay cool so um i if you remember
68:49 - earlier in the stream i was asking
68:51 - arvind about his work situation since he
68:54 - uh
68:55 - said he just left
68:56 - uh left his job uh arvin says i've
68:59 - decided to learn from you and do some
69:01 - freelancing it'll give me more time to
69:03 - learn all right that's awesome that's
69:05 - awesome i mean hopefully hopefully i can
69:07 - help out with that and and you'll learn
69:09 - some things uh feel free to
69:11 - you know ask me what you know whatever
69:13 - you want to uh you can message me on
69:14 - twitter or you know or whatever
69:17 - we're just asking the live chat happy to
69:19 - help
69:20 - and uh freelancing is it's nice um
69:24 - if you get some steady clients it can be
69:26 - it can be really nice
69:29 - let's see
69:34 - right c says i'm doing the same as you
69:36 - and my life hasn't been better pure
69:38 - happiness for now awesome
69:40 - that's awesome i'm glad to hear that
70:01 - okay oh uh musa says i must leave now
70:04 - thanks for the stream man good afternoon
70:06 - so i'm sure moose already left but uh in
70:08 - case uh that you watch this recording uh
70:11 - i'll see you later and uh thanks for
70:13 - watching the stream and and joining in
70:15 - the live chat i appreciate it
70:21 - world says browser support like internet
70:24 - explorer or safari makes me want to
70:26 - leave web dev
70:28 - i feel like i'm fixing fixing vhs for a
70:31 - living
70:33 - yeah i'm not really uh
70:35 - i don't really like supporting older
70:37 - browsers either
70:40 - but um
70:41 - luckily i don't really have to that much
70:46 - so i think i have it better than than
70:48 - other people
70:50 - in that regard so
70:52 - it could be a lot worse
70:56 - but yeah
70:57 - i really
70:58 - i don't really honestly internet
71:00 - explorer does
71:02 - upset me sometimes with just the weird
71:04 - errors but to be honest with you safari
71:07 - is pretty bad too especially on mobile
71:11 - mobile safari is like
71:14 - i think
71:15 - right there in the running for worst
71:17 - browser uh to have to deal with as a
71:19 - developer
71:20 - so
71:22 - if anybody on the safari team
71:25 - is watching i apologize i don't mean
71:28 - that in any way um to belittle your work
71:31 - or anything
71:32 - um but
71:34 - i just happen to have had
71:36 - a lot of bugs on mobile safari with some
71:39 - of the stuff that i built
71:51 - this is interesting arvin says i learned
71:54 - vue.js as i found it easier than
71:56 - angularjs and guess what i don't find i
72:00 - can't find any jobs for view developers
72:02 - in india
72:04 - that's actually i mean that's
72:06 - interesting
72:07 - i've always wondered about vue i know a
72:09 - lot of people like view but i don't
72:12 - frequently see view mentioned
72:14 - in job descriptions now i'm
72:17 - i'm not really looking at that many job
72:19 - descriptions but
72:21 - i i don't recall it being mentioned
72:23 - often
72:25 - so i kind of wondered what
72:28 - you know what the job outlook was like
72:30 - for view developers
72:35 - excuse me
72:36 - try to have the yawn
72:39 - uh
72:41 - i'm i'm highly caffeinated at this point
72:43 - so i was i'm surprised by the yawn
72:48 - okay i guess that's good to keep in mind
72:50 - i mean of course this is anecdotal it's
72:52 - it's in no way
72:54 - uh a study of you jobs but
72:57 - i i have kind of wondered about that
73:10 - all right rook says uh the can i use
73:12 - site is pretty nice for browser support
73:14 - information
73:15 - uh let's end this session um
73:19 - yeah if you didn't if you've never used
73:21 - can i use before it's it's simply can i
73:24 - use dot com
73:25 - you type in what you want to do
73:29 - and uh
73:30 - normally i almost always find what i'm
73:33 - looking for for some reason i couldn't
73:35 - find object dot entries
73:38 - but it works for javascript stuff like
73:40 - this or even css like
73:44 - let's go like flexbox right so
73:48 - you don't have to specify you just type
73:49 - something in you'll get the javascript
73:51 - and css and you know it it'll show you
73:54 - what it's supported with so if you want
73:56 - to use flex
73:58 - and css
73:59 - it'll say you know okay internet
74:01 - explorer 11 has partial support even
74:03 - explains what that means
74:05 - um and looks like all the other browsers
74:08 - have full support
74:10 - so
74:11 - really useful
74:14 - super fast to search through i use this
74:16 - often
74:24 - okay igor says it should be a lot of
74:25 - freelance tasks or outsource projects on
74:28 - vue.js
74:29 - okay
74:30 - um
74:31 - yeah that's that's a good suggestion you
74:33 - know maybe there's not full-time view
74:35 - developers uh
74:37 - it's possible there's not a lot of those
74:38 - jobs but you know freelancing
74:41 - uh you know temporary projects i guess
74:43 - are a way to go
74:52 - oh okay sebastian noticed on that
74:55 - bulletin project that
74:58 - when you click on continue reading that
75:01 - is also only in
75:05 - grid view let's see
75:11 - actually now i'm clicking this sebastian
75:13 - and it looks like oh i'm sorry
75:16 - um
75:18 - i clicked the wrong thing let me
75:20 - let's go continue reading where are we
75:23 - at
75:25 - need to find something that says
75:26 - continue reading
75:28 - oh you know what
75:30 - continue reading is only a great video
75:33 - oh i see what you're saying now actually
75:35 - that's how i want it so
75:37 - i'm currently on the site i have it so
75:39 - that
75:40 - in this list view
75:42 - there is no continue reading the entire
75:45 - text
75:47 - appears so that's actually how i want it
75:50 - because i had complaints initially i had
75:53 - complaints from users
75:55 - because they wanted to be able to just
75:56 - scroll through and see everything and
75:58 - not have to click to read more
76:01 - so what i did as kind of a compromise
76:03 - was in the grid
76:04 - view because these cards were more
76:08 - narrow and you could potentially have a
76:09 - very long scroll
76:11 - if there were a lot of there's a lot of
76:12 - content i left that
76:16 - with the continue reading but in the
76:18 - list view
76:20 - we
76:21 - show everything
76:24 - the full content
76:29 - so
76:30 - it that actually is how it how it's
76:32 - supposed to work
76:35 - but sebastian you have uh
76:38 - great like attention for detail
76:41 - um
76:44 - yeah that was that was pretty good about
76:46 - noticing that
76:55 - arvin says what freelancing website
76:57 - would you suggest apart from freelancer
77:02 - um
77:03 - igor says have you tried upwork
77:06 - uh
77:10 - let's see
77:12 - i
77:13 - i
77:14 - i have not tried upwork i know you're
77:16 - asking um
77:18 - uh you're having a conversation with
77:20 - igor on there but uh in case
77:23 - you know anybody else wants to to join
77:25 - in here
77:26 - um
77:28 - i'm just kind of reading it out a bit
77:33 - i've not tried upwork so i can't vouch
77:36 - for that
77:37 - i have tried freelancer
77:40 - i didn't have a great experience with it
77:41 - it seemed to me like
77:44 - the uh the pay was just way too low for
77:47 - a lot of the projects um
77:49 - there's a lot of competition a lot of
77:51 - people trying to you know undercut
77:54 - and bid lower than other people
77:57 - i i didn't find it to be really worth my
77:59 - time unless
78:00 - i really didn't have anything else going
78:02 - on
78:04 - uh so
78:06 - i didn't like it i i um
78:11 - i think it's more promising some of the
78:13 - sites like uh top towel
78:16 - basically any site where um they
78:20 - you you have to test to be accepted as a
78:23 - developer so
78:25 - they only take quality developers who
78:27 - can pass the tests and then they match
78:29 - you up with companies
78:31 - who are actually willing to pay
78:34 - you know a fair amount of money
78:37 - to get a good developer
78:40 - so if you can find something like that
78:44 - either top towel or something that that
78:47 - operates like that
78:49 - i think that's that's the best bet if i
78:51 - ever go back to freelancing i will
78:53 - probably do that
78:55 - um
78:58 - yeah that's so that's kind of my advice
79:01 - about freelancing if you
79:03 - the thing about freelancing i i talked a
79:06 - lot about freelancing last week so i'm
79:08 - not going to talk a lot about it now
79:10 - but i'll just say
79:12 - freelancing is
79:15 - about selling yourself
79:18 - to a certain extent
79:20 - so you're not going to be able to spend
79:21 - all your time coding and learning if you
79:23 - want to actually make money you have to
79:24 - sell yourself if you're not comfortable
79:26 - with that
79:29 - you almost have to be a marketer uh in a
79:31 - sense but if you're not comfortable with
79:33 - that freelancing may not be for you
79:34 - unless you can find someone a company
79:37 - like top towel or maybe a small business
79:39 - or something that will be the middle man
79:42 - you know kind of the go between between
79:44 - clients
79:45 - and and you
79:47 - they can handle contracts they can
79:49 - handle payment
79:50 - uh things like that that will allow you
79:53 - to spend your time doing what you want
79:55 - which i assume is coding
79:58 - and not worrying about the you know
80:00 - these other things
80:02 - so
80:03 - for me
80:05 - that's more of the ideal freelancer
80:07 - situation uh because
80:09 - you know while i do have experience with
80:11 - marketing and things
80:13 - i
80:14 - i'd rather not i enjoy the coding more
80:17 - so
80:18 - anyway just something to keep in mind
80:34 - world said i like how you say
80:37 - interesting instead of cursing like i do
80:40 - [Music]
80:41 - yeah so i i assume that you'd said that
80:44 - whenever i got the error in the console
80:46 - there yeah so um
80:50 - i um i purposely
80:52 - never curse on this stream i know i have
80:57 - some younger viewers
81:00 - so i i wouldn't want to
81:03 - expose them to any words that their
81:05 - parents may not want them to hear and
81:07 - potentially i may have older viewers
81:08 - that just would prefer not to hear that
81:10 - language so i like to keep it pg rated
81:13 - or g or whatever
81:15 - so
81:17 - anyway yeah so you will not hear me
81:20 - curse
81:21 - on this stream
81:22 - and um
81:25 - i have four little kids so i get a lot
81:28 - of practice at
81:29 - controlling my language even when i get
81:32 - upset about something
81:35 - um
81:37 - let's see
81:38 - so when i'm not streaming though
81:42 - uh
81:44 - i i
81:45 - i have
81:47 - i have said some uh some curse words at
81:50 - the computer
81:52 - uh luckily i have an office with my door
81:55 - shut and everything so
81:57 - there's no danger of being overheard
82:10 - uh my uh my spotify playlist has ended
82:14 - so
82:16 - uh
82:17 - gotta put another playlist on it's
82:19 - really weird to try to do the stream
82:21 - with nothing in the background
82:24 - let's see
82:33 - michael crow says take your break now if
82:35 - you don't you'll be banging your head
82:36 - against the wall for the next hour
82:38 - trying one more thing
82:42 - you're right if that if that last thing
82:44 - hadn't worked i
82:46 - i was definitely in danger of doing just
82:48 - that
82:49 - uh you're a smart man
82:53 - igor says that thing always happens one
82:55 - more thing
82:57 - one another thing and oops you have been
82:59 - working for a couple hours without a
83:00 - break yeah that's true i don't know how
83:02 - many times my wife has called and said
83:04 - when are you gonna come home from work
83:06 - it's getting late and i'll say okay i'm
83:08 - working on this i'm just gonna try one
83:09 - more thing and
83:11 - yeah and then i end up
83:13 - being here for
83:15 - much longer
83:20 - okay world says you demand safari nine
83:22 - users should be grateful cool i hope so
83:25 - i'm gonna have to uh next time i see the
83:28 - the my department head i'll tell her
83:30 - that it now works she'll be should be
83:33 - happy
83:39 - okay blake says by the way i messed
83:40 - around with figma the wireframing tool
83:43 - it's not bad okay cool
83:45 - so at some point maybe last week
83:47 - sometime we were talking about uh free
83:49 - wireframing tools i believe we were uh
83:53 - specifically wanted ones that worked for
83:55 - windows and figma came up so
83:58 - for for any of you that were in on that
84:00 - conversation or interested in
84:01 - wireframing tools uh for windows
84:05 - that are free check out figma
84:08 - figma
84:13 - rook says what's your opinion on
84:14 - stricter linting rules like the airbnb
84:18 - preset for eslint
84:20 - um
84:22 - i i don't know i
84:24 - to me
84:26 - the linting rules
84:30 - i like the idea of linting rules right
84:32 - so you know like on our on a lot of our
84:34 - projects we've set up um
84:36 - some linting uh rules we even have the
84:39 - auto formatting uh that enforces things
84:41 - like that and i like that it brings a
84:44 - lot of consistency
84:47 - in particular the airbnb rules i don't
84:50 - really have a comment on that because
84:51 - it's been a very long time since i've
84:53 - even looked at them i don't really
84:54 - remember too much of what it is so
84:57 - but in general
84:59 - uh you know stricter linting rules i
85:01 - don't have a problem with as long as
85:04 - they don't slow down development
85:06 - significantly so
85:08 - um
85:11 - i don't mind like when we're doing the
85:13 - auto uh
85:16 - you know the auto formatting with
85:18 - standard js and prettier
85:22 - uh i'm okay with that
85:24 - people you know can
85:26 - do whatever they want in terms of how
85:28 - they code and then it just gets
85:31 - when they go to commit it just gets
85:33 - converted to how i want it
85:35 - that's okay
85:36 - um
85:40 - yeah i i would say it would almost
85:42 - depend like on a case by case it depends
85:44 - on like what are those rules in
85:46 - particular and really it's it'd be more
85:48 - of a personal thing if the rules were a
85:51 - lot of things that bother me
85:53 - then i wouldn't like it uh but if the
85:55 - rules are really specific and happen to
85:57 - be like just how i like things i'd
85:59 - probably be okay with it so
86:02 - um
86:03 - i haven't actually given that much
86:05 - thought to it so this is kind of just
86:06 - off the top of my head but i'm not
86:09 - i'm not opposed to strict linting rules
86:12 - but it just really would depend
86:14 - on
86:16 - you know what what are those rules uh in
86:19 - general i
86:22 - uh
86:23 - i like spaces and not tabs so two spaces
86:27 - uh i don't like to use semicolons
86:30 - um
86:32 - i like having properties like if we're
86:35 - talking about react uh you know
86:37 - properties on diff separate lines
86:40 - i think that makes it a lot easier uh to
86:43 - read
86:44 - it does make the code longer
86:47 - but is you should be keeping your
86:48 - components as short as possible
86:51 - so assuming you're doing that it helps
86:53 - with readability and the length isn't
86:55 - too bad so
86:58 - that's my preference
87:02 - uh
87:03 - what do you all think
87:04 - um
87:07 - i mean i like and what do you all think
87:08 - about what we have set up now i mean i
87:10 - i've really been liking the uh kind of
87:12 - the auto formatting rules that we have
87:15 - set up
87:16 - um
87:17 - but you know what do you uh what is your
87:19 - opinion on it i definitely like to know
87:25 - oh igor says we just switched to that
87:28 - those rules they are awful all right so
87:30 - we got one vote for awful in terms of
87:32 - the airbnb
87:34 - rules
87:41 - oh okay so sebastian says i'm looking on
87:44 - when you click on a category or other
87:46 - button in the drawer it shows a red or
87:48 - blue color
87:50 - oh okay
87:52 - yeah it does
87:53 - uh so we'll definitely want to change
87:55 - that you know what i i have noticed that
87:57 - before
87:59 - okay
88:00 - yeah so we definitely want to change
88:02 - that
88:03 - um
88:04 - i'm actually okay with this gray color
88:06 - that you can see right now it's showing
88:08 - uh as opposed to the red
88:10 - uh the gray is fine with me or one of
88:13 - the colors that we're already using in
88:15 - the color palette
88:17 - would also be
88:19 - be okay with me
88:24 - uh
88:26 - let's see so thanks sebastian um
88:32 - okay so sebastian notice it's just for
88:34 - the ones that are a link component okay
88:37 - um
88:38 - yeah i'll have to check that out
88:41 - person says hi i'm new hey how's it
88:44 - going thanks for joining us uh in the in
88:46 - the live chat and uh welcome
88:51 - uh robert says i created a getter if
88:54 - anyone wants to join if we have
88:56 - questions or can help each other outside
88:58 - of the live chat uh jesse let me know if
89:00 - i can share the link yeah go ahead and
89:02 - share the link that's awesome yeah we we
89:05 - actually have a um we have a slack
89:07 - channel too
89:09 - and i um
89:11 - i have not gone through the process to
89:12 - be able to efficiently accept people
89:15 - into that slack channel i know there's a
89:16 - way you can set it up so that'll just
89:18 - automatically
89:20 - let you
89:22 - get an invite and i just haven't really
89:25 - taken the time to do that uh yet
89:29 - uh so if you'd like to be a part of that
89:31 - your best bet maybe is to just send me a
89:34 - um
89:34 - a message
89:37 - let me know what email you want to use
89:38 - to sign up
89:42 - until i can get that and uh but getter
89:44 - sounds cool though to use because then
89:46 - we wouldn't have the issues um in terms
89:49 - of invites that we have with slack
90:14 - blake says my mom would appreciate that
90:17 - i'm not sure what that was in response
90:19 - to uh was that is it something in the
90:22 - chat or something i said so i don't
90:25 - let me know
90:29 - uh sebastian says submitted pull request
90:31 - to fix what you said about the close
90:33 - icon and fixed up the bug of the grid
90:36 - all right awesome sebastian thank you so
90:38 - much that was so quick
90:39 - i really appreciate that
90:41 - oh okay blake says the language all
90:44 - right
90:44 - okay cool so that was i mentioned
90:47 - earlier that i i
90:49 - don't uh use any bad language or cursing
90:52 - on the stream
90:54 - uh one reason being
90:56 - for our younger
91:00 - younger viewers i don't know that their
91:02 - parents would appreciate that uh so
91:05 - yeah
91:06 - um
91:08 - yeah i personally don't have an issue
91:10 - with uh with cursing but i would have an
91:14 - issue with someone cursing around my
91:15 - children
91:16 - so i'm definitely sensitive to that
91:20 - so
91:24 - i'm always um
91:27 - i don't know about you all but i'm
91:29 - always amazed at uh what i hear um some
91:32 - people saying around their children like
91:35 - in public
91:36 - um i don't know i mean i guess it's just
91:38 - what you were used to growing up but
91:41 - um
91:43 - i don't know my mom never said a curse
91:45 - word i only heard my mom say curse word
91:47 - one time her entire life is we we almost
91:49 - got into a wreck
91:50 - and um so she said it uh my dad was
91:55 - he he cares a little bit more but never
91:57 - um
91:59 - almost never anything like really vulgar
92:02 - you know
92:03 - um
92:04 - but anyway
92:09 - yeah i just i think it's a good um
92:12 - it's a good skill to be able to have to
92:14 - control your language based on who your
92:17 - audience is or what situation you're in
92:20 - um i it just kind of shows like um
92:24 - an element of self-control and and being
92:27 - able to control
92:28 - uh your thoughts
92:30 - so i like that i like to see that in a
92:32 - person like that that ability
92:46 - let's see
92:49 - all right uh seems like
92:53 - i've i've gone through everything in the
92:56 - live chat
92:57 - so yep
92:58 - uh if i happen to miss your comment or
93:00 - question i'm sorry about that i do try
93:02 - to get to everything
93:04 - um
93:06 - but uh occasionally i missed something
93:09 - so if i did feel free to reach out to me
93:11 - on on twitter or any other social media
93:14 - that uh you can find me on um
93:16 - or just you know come back for another
93:18 - stream and ask me
93:20 - uh okay blake did ask can you do a live
93:22 - stream on deploying a react website yeah
93:25 - i definitely can oh actually i'm so glad
93:27 - that you um
93:29 - that you said that uh so i have more
93:32 - information for you all uh in regard to
93:34 - this bulletin website we've been working
93:36 - on so for the last um
93:40 - for the last
93:42 - maybe two weeks or more i've been
93:44 - talking about
93:45 - the the login system so currently we
93:47 - have set up a heart should set it up a
93:50 - passwordless login system that uses a
93:52 - link that you get via email
93:56 - what i'd like to do is to tie it in with
93:58 - the university single sign-on system
94:02 - that they're using for other things
94:05 - um i i talked with
94:08 - one of the meetings that i had today was
94:09 - kind of an unexpected meeting but i ran
94:12 - into some of the people in the i.t
94:14 - department who are in charge of the
94:15 - single sign-on and i asked them what
94:17 - they thought and uh what's gonna happen
94:19 - is over the christmas break for the
94:21 - university uh so the end of december
94:25 - they're going to
94:26 - switch everyone over to using office 365
94:29 - for the email and calendars and
94:31 - everything like that at that point
94:32 - everybody at the university is going to
94:34 - have their own microsoft account their
94:36 - on office 365 account
94:39 - and they're going to have to change some
94:40 - of the way they do single sign-on so
94:42 - what makes the most sense for this
94:44 - project is to wait until that happens
94:47 - uh and then
94:50 - what we probably would end up doing is
94:52 - having something come up that says like
94:54 - sign in with your office 365 account
94:59 - and then we'll have a check server side
95:02 - to say
95:03 - are they using a franciscan.edu address
95:07 - if so
95:09 - then go ahead go ahead with the office
95:11 - 365
95:12 - sign in if not then you'll give them a
95:16 - message saying hey you need a franciscan
95:18 - address
95:19 - uh i think that that
95:22 - that may end up being the best way to go
95:24 - about it and possibly the simplest way
95:27 - because i'm sure there is already
95:30 - some code out there
95:31 - for using sign in with with office 365
95:35 - or with your microsoft account
95:37 - and react
95:40 - it seems to me like that would be
95:41 - something
95:43 - that people are doing somewhere so
95:46 - so that's what's gonna happen it doesn't
95:47 - need to happen until you know december
95:50 - probably january probably sometime in
95:52 - january it'll happen so
95:54 - we got a lot of time to think about it
95:56 - and to look for a solution and get that
95:57 - ready
96:00 - but what that does mean is
96:02 - we potentially could wait and not
96:04 - release this newer version that we've
96:06 - been working on
96:08 - until then
96:09 - or we can release it now with our our
96:12 - email link so we're gonna have to make a
96:14 - decision with that either way
96:17 - we have a lot of time now to really work
96:20 - on this and get it to a point where
96:23 - where it's how we like so
96:25 - we may slow down on this switch up to
96:27 - some other projects uh there's
96:29 - definitely time if we want to think
96:30 - about extra features that might be cool
96:33 - um
96:34 - we we have a lot of time so we
96:36 - essentially have
96:38 - like two two months potentially two and
96:41 - a half months now
96:43 - uh to work on this
96:45 - so
96:46 - um
96:49 - i mean in potential this is really
96:52 - it's functional now i mean i i i don't
96:56 - i wouldn't release it right now there's
96:58 - still some things like the filter by
97:00 - date doesn't work um
97:03 - and uh there's there's some things that
97:07 - i would change like design wise just
97:09 - really minor adjustments
97:12 - but potentially like you know this is
97:14 - you know 95
97:16 - operational at this point
97:19 - anyway basically what i'm trying to say
97:21 - is we got a lot of time to work on this
97:23 - now so if anyone has any ideas for
97:26 - features that could make it better i'm
97:28 - i'm open to considering them
97:31 - i can't guarantee they'll make it in
97:34 - although if you have a feature you think
97:35 - would be really cool and then you also
97:37 - submit a pull request for it then i'm
97:39 - much more likely to bring it in because
97:42 - it's it's already done
97:45 - anyway so i think it'll be cool i'm not
97:47 - excited about this because i think we
97:49 - can really uh make this
97:52 - you know better than the the current
97:55 - version that's live
97:56 - um
97:57 - and uh it'll be exciting so not only
98:00 - will we be able to give users a easier
98:03 - way to sign in that's tied in with all
98:05 - their other university accounts but also
98:08 - we may be able to give them some new
98:09 - features
98:10 - updated design
98:14 - it'll be nice and yeah i think it'll be
98:16 - really nice
98:19 - okay
98:20 - um
98:21 - okay robert also has uh has pasted in
98:24 - this getter channel
98:26 - um
98:27 - live coding with jesse
98:29 - free code camp lobby i'm gonna take this
98:32 - and
98:33 - paste it
98:35 - let's go over here
98:38 - okay cool this is some stuff i had from
98:40 - a previous stream so let me let me go
98:42 - down a bit
98:44 - and uh
98:45 - here
98:47 - this uh this link
98:50 - is for the getter let me uh copy this
98:52 - link over just to make sure that it
98:54 - works before i give it out to everyone
99:04 - it's not working for me what did i do
99:05 - wrong
99:16 - all right is that link working for
99:18 - anyone else uh getter dot i am slash
99:22 - live coding with jesse free code camp
99:24 - slash lobby
99:29 - because i'm getting a 404
99:31 - whenever i try to use that
99:34 - let me see
99:53 - okay
100:05 - okay i'm gonna wait a minute just to see
100:07 - if that getter link is working for
100:08 - anyone else because i want um
100:11 - not only people in the live chat but the
100:13 - people that are watching this later on i
100:15 - want to be able to give them the right
100:16 - link
100:17 - so
100:18 - also so robert says
100:21 - can you limit the single sign-on to ip
100:23 - address or can they also use a link on
100:27 - home computer i need to create the exact
100:29 - same thing but limit it
100:32 - to a word computer
100:34 - hmm
100:43 - you know what i'm not i've never really
100:45 - thought about that
100:47 - um
100:51 - yeah i don't know so
100:58 - i don't know does anyone have any
100:59 - thoughts on that how could we limit it
101:01 - to an ip
101:05 - i mean i suppose it's possible
101:08 - uh
101:11 - yeah
101:12 - yeah i would i would suppose it's
101:13 - possible
101:15 - right i mean we're limiting it to email
101:17 - address
101:19 - so if you could grab the ip
101:21 - and just limit it to the ip
101:26 - i suppose that would work
101:28 - but
101:30 - what's the potential for um faking an ip
101:33 - address how hard is that to do i don't
101:35 - know like how uh secure you need it to
101:38 - be
101:39 - here let me um put in the link that's
101:41 - actually working for me right now so
101:44 - this link is working so
101:47 - getter dot im
101:49 - slash live coding with jesse free code
101:52 - camp
101:53 - okay and then
101:55 - once you get there you'll see
101:58 - let me show you uh on the screen here so
102:00 - everybody knows how to how to get in
102:01 - here you'll see this
102:04 - lobby and when you click lobby
102:07 - then you'll be able to get in and and
102:09 - chat
102:10 - um so
102:12 - off to sign in i know i do have a getter
102:16 - login sign in yeah i think i've signed
102:18 - it with github so
102:20 - um you can sign in with twitter or
102:22 - github
102:37 - is it not working
102:40 - there we go
102:41 - okay
102:42 - so
102:43 - here we go yeah um
102:46 - please uh join
102:50 - join up with the getter uh we do still
102:53 - have our slack channel too so
102:56 - um that's available so you know if you
102:59 - want to join that just let me know i'll
103:01 - need your email to invite you but
103:03 - otherwise the getter channel is open
103:06 - and um
103:07 - that'll be cool so feel free you know if
103:10 - i'm not streaming to ask questions in
103:12 - here and um the more people we get in
103:14 - here the better we can help each other
103:16 - out so
103:18 - um
103:20 - okay
103:21 - uh
103:22 - i think that's it let me check the chat
103:24 - one more time
103:25 - and all right
103:27 - so now i have officially gotten through
103:29 - everything and it's it's
103:31 - just in time because i'll have a little
103:33 - bit of time to wrap things up before
103:35 - it's time for me to go home
103:37 - and
103:39 - yeah so this is a pretty good stream we
103:41 - got some things worked out worked out
103:43 - some bugs merged some pool requests
103:45 - hopefully you all have learned a little
103:46 - bit more about
103:48 - git
103:48 - and
103:50 - it's really helpful if you're not using
103:52 - git
103:54 - i highly recommend it it's uh
103:57 - i highly recommend some form of version
104:00 - control and among the forms of version
104:02 - control that i've had exposure to
104:05 - i definitely prefer git so
104:08 - uh try it out if you haven't already
104:10 - tried it out uh you'll
104:13 - well if you force yourself to use it and
104:15 - get used to it you know you'll never
104:17 - want to work without
104:19 - okay
104:21 - all right so i should be back tomorrow
104:23 - sometime around 2
104:25 - p.m eastern time
104:29 - so until tomorrow
104:31 - have a great day

Cleaned transcript:

hey everybody welcome to live coding with jesse and today we're going to work with git and github and we will merge some pull requests in particular we have two pull requests that i'd like to merge in our bulletin project that we're doing with react and if we get through that and we have a little bit more time then i have a pull request for a bug that i had found in the in the resource center project so let's get started all right let's see so let me get my my screens in order okay and i want to apologize um i had mentioned on monday that i would be streaming wednesday obviously i did not stream on wednesday so i had completely forgotten that i had the day off wednesday so everybody at the university that i worked at had the day off uh so it was um all saints day which is a catholic uh holiday and this is a catholic university so we have the day off um so uh for anyone who celebrates all saints day or today which is all souls day then i hope you were able to make it to mass yesterday and uh today i am listening to some traditional music for all souls day so if anybody happens to like classical music based on early medieval uh poetry then let me know i can send you some nice spotify playlists um okay so hey everybody i see some of you are saying hi there in the live chat okay great i uh i just got the the analytics was showing zero viewers for a while there and now it finally kicked in so um i think we're good to start so we're going to go through both these pull requests and first thing we'll do is we'll we'll pull them in on a separate branch test them make sure everything's okay we'll and then we'll merge them in if we happen to have any merge conflicts we'll work out those merge conflicts um you know live and hopefully if you're not that familiar with git then this will this will help you out for me at least when i started working with git just the basic commits were not that hard but it made me a little bit nervous when i i first started getting into merging pull requests dealing with merge conflicts that was that was kind of like another level for me so hopefully this will let you you know get an idea of what it's what it's like for a real project you know to bring in code from other people and and how to handle that uh without you actually having to go through this on your own projects you know and uh try to learn it and and make mistakes on your own uh hopefully i make the mistakes and you can you can see it and then you don't have to uh i don't think we'll make any mistakes though uh these seem pretty straightforward in terms of a pool uh pull requests go so let me start my pomodoro timer if you haven't watched the stream before first of all welcome thanks for watching and then secondly uh i like to break things up between 25 minute periods of coding or in this case reviewing code and then five minutes of question answer and then we just go back and forth between the 25 minute five minute periods and then at the end if there are any other questions left in the live chat i will answer them all so if you have a question go ahead and put it in the live chat now and then please be patient and i will get to it uh at one during one of those break times or at the end of the stream uh probably gonna only do two sessions of coding today i got the stream started a little bit later than normal just had my my whole day almost was filled up with meetings so it just took me a while to get everything get everything ready and get the stream scheduled uh let's see we're gonna check out if you'd like to check out the repository so that you can see the code too in github it's the bulletin react repository the link is in the description for the video if it's not in the description let me know it should be and i think we'll start with the pull request let's go should we do 57.58 let's start with pull request 57 and this is from sebastian so we're going to do a get fetch origin pool and we're going to pull request 57 since we'll put our 57 get the head and we'll call this since sebastian submitting the pull request i'm just gonna put an s there and then let's see uh uh there's there's several different things here i like to name my um my branches for testing based on what's happening in the pull request but this there's several things here all right let's just say styling just in general because a few of the commits are about styling there we go so now we can do a get checkout and onto that branch that we just made okay when i switch it when i pull in a branch to test and i switch to it i always do a yarn or we could do an npm install for not doing yarn in this case we had nothing to update but just in case the pull request added another npm package we want to make sure we get that right away or else we may end up getting some errors and uh we might waste time trying to troubleshoot that when all we needed to do was just update all right so i'm gonna go to our bulletin and we'll check it out specifically let's check out our print view because this pull request happens to uh deal a bit with print view okay not that so one of the things that i had wanted um was a close button so i like that probably um what i'll do or if any of you would like to do it is uh maybe move that close button over to this side upper right side it's entirely possible that when i open an issue about this i said left side accidentally instead of right side so if i did i apologize but i think i would like it better on this side and then that way we could move uh our content up a little bit higher otherwise uh this is good and let's fix the attachment code print view button bug let's see great white space and print document okay uh wonderful i think i think that's all we'll really need to test out if you notice i do have the console open so that i see any errors the only error we're getting is uh from an an image that we're trying to pull in so i'm not worried about that that may just be uh something having to do with either us being a local host or maybe some problem uh in our wordpress installation where that image perhaps it doesn't exist so in any case this is okay i'm not worried about this error it doesn't look like we're getting any more errors i could click around just to be sure um great all right so now the next step is let's merge this so the first merge i'm going to make i'm going to merge the master branch into this test branch i know i've mentioned this before but for any of you who maybe haven't heard it before i like to merge the master into the test branch first that way if it really messes things up we haven't messed up our master branch we've just messed up the test branch but if everything's all right there we can do a checkout to our master branch that means we're just moving uh to the master branch and if you're not familiar at all with git when i say we move to the master branch that means the version of the code that we have saved as our master branch now all our code will switch to be that version so if we if we had our code let's say open in the background here we could potentially actually see the change happen uh whoops i meant to say get check out master now we can do a git merge and we'll merge that test branch in into master and now we get a little summary of what's happened we've changed the these following files and it gives us the the pluses are additions to those files the red minuses are deletions from those files so there we go so now we've officially updated it the final step is to push that code back up to github which is where we're storing our repository you don't have to use github if you're using get it's it's helpful but it's not um it's not necessary so we're gonna do a get push origin master there we go so now the code that we've just merged in is available in our master branch on github and if you're following along with the repo pull request 57 should now say merged it may auto update for you or you may have to refresh but when you do it like this on the command line you push it up you don't have to hit the merge button on github in your browser it will automatically say that it's merged all right so the next pull request that i'd like to work on is pull request 58 okay so harshit has uh submitted this pull request and it's it's titled uh miscellaneous changes but it also closes issue 59. so issue 59 was opened up by let me double check this but um since i've read it i think i read it yesterday um it was upgrade material ui um and this was submitted by i believe christian yes so christian submitted this and uh letting us know that material ui has come out with a new version uh and so we should upgrade to that so harsha's has upgraded to that and also removed the read more buttons because now on our posts if there is more to read we have a continue reading this will be nice because on posts like this which are really small there's not really anything else to see so it would be there there wouldn't necessarily be any advantage to clicking read more uh if you really wanted to see the single page with just this post you could always click on the title instead okay but this will save some space overall let's see wonderful i just wanted to test that out and make sure that we uh because i hadn't tested this out for the print view so we can in fact do print view with um a single post great uh all right so we're going to go through the same process as we did before it doesn't look like we'll have merge conflicts but let me check yeah so get let me pull this over just so you can see what git does so i'm on i'm viewing that pull request and here it'll let us know it'll scan the branches and let us know if there will be merge conflicts so we should be okay i'm still going to go through the same process as i did it's just a good practice to test things out first uh so just because there's not going to be any conflicts merge conflicts doesn't mean that we should automatically pull it in right because it may have no conflicts but um we we may not like what what has happened uh so there could be no conflicts in the code but there might be errors when you try to run it um let's see okay i happen to look over to live chat and arvin says get push origin is always the same as get push origin master that's good to know i can save save some time now and and typing that so let's if i remember hopefully i'll remember in about a few minutes when we go to push this up we'll try to type it in uh the shortened way okay and looks like sebastian found maybe a little bug when switching back to normal view it will always be on grid view um let's see so if we go to print and then click here oh yeah it always goes to grid okay um sebastian if you'd like to open an issue about that then please feel free otherwise maybe i'll open an issue a little bit later on if you didn't catch that here's what happens we can choose list view and then we choose print view and when we go back out what we what should happen is that we should still be in list view but what really happens is that we've gone back to grid view so we'll want to we'll want to change that and so that was that was a good catch on that sebastian i had not noticed that let's see here we go all right so let's go with uh get fetch origin pool this is pull request 58 head and this is from harshit and let's say material ui uh since this this pull request among other things did upgrade to the new version of material ui great now we're going to check out oops git checkout this and we're going to run yarn and this time we do actually have an update for our package so we should have updated um material ui and material ui icons to the latest versions okay um let's see now let's merge merge the master oh and do we have a conflict now no it's just prompting us for a merge message okay um all right so let's just merge it there we go and that's just brought in basically it's just brought in all those changes that we had just merged into master it's brought those in to uh to update this branch so there were no conflicts but we needed to update this so if this looks familiar it's because we just saw the same thing up here right here okay now let's give it a little test so we we really shouldn't see anything let me refresh this and let's see if we're getting the same error we are so let's check out this it's not it's saying it's a warning so obviously things are still working here um line items prop on a dom element if you intentionally want it to appear in the dom with a custom attribute spelled lowercase line items instead okay so it looks like uh we have some some props so since we weren't getting this before and we are getting it now potentially maybe something changed in material ui since we updated it and and this is no longer a valid prop so since this is only a warning i'm okay with merging this in now at some point we'll want to fix that but it looks like uh they've created by grid component so it looks like this is having to deal with a grid and the grid seems to be working so we can double check that and potentially if we even are we we may have stopped using the grid for this i think we did switch to using masonry so we should be okay everything looks fine and then we should also there we go so you can see we no longer have that read more okay uh so now that we don't have the read more i may end up cutting out some of the padding here it just seems like more padding that we need but otherwise not bad and then eventually what we will do is uh once we're actually pulling in data about with attachments uh these posts that don't have attachments this entire bottom portion will be gone so it'll save even more space and then only some of the posts will actually have attachments okay looks good though looks good let me just click around just a bit more make sure we're not getting any other errors and let's try this search great okay awesome okay everything seems to be working although that's that's odd to have a space there interesting oh there we go that's really odd huh that was interesting um we'll have to keep an eye out for that uh some empty spaces not a huge issue but just a little kind of visual glitch i guess okay that looks good whoops so let's check how much time okay great seven minutes uh let's go ahead and switch back to the master branch and then merge this in um i just checked in the live chat proxy says how much longer will this go on i just tuned in um i'm thinking another half hour at least um we seem to be going through things pretty quickly so uh more quickly than i anticipated um but i think we have at least another half an hour depending on how many questions uh are in the live chat okay so let's do get checkout master and now let's merge that branch into master which should work with no problems git merge h great all right and now we can do a get push origin okay which i've just learned is a shortened form of saying get push origin master if we wanted to push a different branch we could specify that but if we just want to push master i guess that's the default um great and actually let me ask so arvind is the one that that let us know about get push origin is it relative to the branch you're on so for instance if i was on let's say the dev branch and i did get push origin would it automatically just push um whatever that branch is so would it push to dev or is it automatically master um i'm not sure i guess i can try it out at some point uh if you don't know um okay but at this point all the code now is on github it's all up to date on the master branch and now github says that branch 58 is in fact merged and great so we have all the outstanding pull requests should be merged in for this bulletin react repository not only that but we have our our issues here that have been closed so um let's check this out uh let's check out add a close icon to print view and i do want to see if i in the upper right corner of the preview okay i okay so i didn't mess that up i did i thought i may have messed it up and said left corner okay um let's see this maybe maybe i'll leave this open uh and then i'll close it whenever i put that in the right corner or if any of you want to put that icon in the right corner but it looks like 51.52 let's check out pull requests or i'm sorry issue 52. there we go so this vertically align that attachment icon so before this icon and the text were kind of off in the alignment so let's close that close that issue awesome and let's also see this upgrade uh this was closed so christian uh actually it was already closed this was closed i suppose automatically then um so we've gotten rid of those issues and let's double check okay we can go into our projects now so we're using this uh kind of kanban style uh to track some things and now we can move this over to completed okay and it looks like i'll need to add some more in here we're getting kind of low on to do so i'll have to go through and check that out see what else needs done okay great so about two minutes let me i want to take a look at the live chat now before we start on um on the next pull request we do have a pull request for a previous project and we're gonna we're gonna bring that in um and that one's a little bit more uh technical i guess and because it deals with um with forms and bugs with older browsers and things so uh i don't want to try to explain that with two minutes left so let me go ahead and take the break now and i'll go to the live chat and after this five minutes is up uh we'll do some more um some more merging of pull requests uh let's see jessem says how long have you been with git um i guess so i guess that was how long have i been using it for three or four years yeah somewhere around there uh music says how to get started with github um well check out there there are a couple of courses that are free online that can help you learn about using git and github i recommend if you want more of a structured course i definitely recommend udacity's intro to git and github really i i think the course is very well done so check that out it's a mix of text video handson assignments i i really benefited a lot when i took that course early on when i was just learning also if you like videos uh this channel free code cams youtube channel has a series of videos on on git and i believe that code academy has something on git now i'm not positive and then there are also youtube channels that have some get tutorials i think learn code academy does have some get videos uh so you can check that out as well so that would be this would be my suggestions github itself has um tutorials documentation and things like that you could read through if you prefer you know just read through and try things out on your own see uh see s what time is it over there in my time zone um it is 3 30 p.m proxy asks have you ever done merging resolving merge conflicts using github desktop instead of a command line i've actually never used github desktop so i really can't i i can't say anything about it so the answer is no i've never done it um for me the uh the command line seems to be pretty quick uh i can get things done quickly i never have to leave the command line although when dealing with complex merge conflicts i could see how maybe it might be helpful to use something like github desktop i i've never tried it though has anybody used github desktop um at all or and particularly when it comes to merge conflicts uh if you have let me know i'd love to um i'd love to hear about it sebastian says uh missed the right corner part yeah no worries sebastian it's cool um yeah that's not really a big deal that's easy easy fix oh man arvin said i left my job by the way oh arvin what's um uh so how did that go are you are you um i don't know if i should be sorry to hear that you left your job or excited i guess it depends on whether or not you like that job and and what you're uh what you're doing now so um was are you happy about uh about leaving was it a bad situation uh and do you have anything lined up now um in terms of uh in terms of a job anyway let me know and actually for anybody who's looking for work uh occasionally i do have or i hear about some projects that are open for freelancers so let me know if you're interested and then if i find something that fits your skill set i could always you know let you know about it i can't guarantee anything i just i'm not actively looking for work but occasionally people get in touch with me about you know some job so let me know uh also if you tweet and um you tagged me in the tweet saying that hey here's here's what i do you know let's say i i'm a rack developer or i do php or whatever and i'm looking for work i can retweet that for you i don't have a ton of followers i think i have maybe like 600 or something 700 i don't know somewhere around there um but potentially i could retweet you and you know some other people retweet you could reach a large audience so pretty much everybody that follows me is a developer of some sort so i'd be happy to help you out in that way because i know some of you are are looking for work so just let me know all right my five minute timer is up but i'm nearly to the bottom of the live chat so i think i'll do one more question oh arvin says the net ninja has a great tutorial for git and github so i haven't i haven't used that tutorial yet but arvin says it's good so check that out as well that's the net ninja um oh igor did ask about my github black theme yeah it's actually uh it's a script so i use this tamper monkey plugin um and that's that's a chrome plugin uh so you load tamper monkey and then search for github dark which uh rook has has pasted in a link to that it is github dark so that that is the correct link rook thank you for that um and then just follow the instructions on that repository and you'll be able to get the um the github dark theme and it also comes with some cool options so um see we have settings here you can change it up uh i actually recently changed up my github theme to this monica space gray 80 so uh you know you could do oh you can change tab size nice i'm definitely setting it to two because that's that's what i like um anyway uh great that's cool all right so um cfas if i stream after work i usually don't stream after work because then i'm i'm home and my uh my network is not good enough at home uh my internet is not good enough to stream in 1080p i don't like to stream at a lower quality because it makes it hard to read the code so usually i i can't even get 720 uh most of the time too so until better internet becomes available where i live i probably won't be streaming from home i'd love to be able to but just doesn't it's not working out right now let's see okay now i'm gonna go back uh and we're gonna merge in another pull request after that i'll go back to the live chat and uh and answer some more questions let's see oops and i just realized that i have my phone plugged in and when i have my phone plugged in uh there's some feedback often on the mic so so sorry if anybody heard some weird feedback going on there but it should be fine now all right so let's go first of all let's bring up this other project which i think i'm running on localhost 3001 let's see it's one of these there we go so i already have it up here and here's the problem so the problem that we had which i think i mentioned last week is when you went to submit a form so let's just bring up one of these forms this is we have two forms one is a little bit more complicated this one is the the simpler of the two so you go to fill out the form and you hit submit and nothing happens this bug was found on safari 9.1 on a mac so unfortunately the bug was found by the head of my department which is no good right i don't want she was very um very nice about it she wasn't mad at all in fact she had thought that she was doing something wrong so but it's entirely not her fault uh it just it doesn't work so i had mentioned that i thought that it had something to do with our use of async await and it seems like that's the case that that was the problem so um let's uh let's pull in the fix so let's go to let's see let's get our notifications and yeah this was the issue and let's find the pull request all right so what's this holder let me let me give credit here so let me open up um so uh helder has submitted this pull request so thank you very much for this and you'll see in the files that have changed i know it's really small so let me zoom in a bit some of these basically most of these changes are because of formatting which is weird uh because we should have auto formatting happening but anyway so let me scroll to the actual um file that that did change so if you see here we went from using async right so we're using async to using just a normal um promise with our with our fetch okay so that's what i suspected needed to happen and let's download this test it out and uh hopefully it'll work we're going to use browser stack to do some testing because we need that safari 9.1 i see igor just asked uh what's the lowest safari version you're supporting with this project to be honest with you i wasn't worried about supporting older browsers because this is an internal project and everyone working at the university should be getting updates on their browsers so i generally don't worry about supporting older browsers because i think it's bad practice in general uh for internal websites because it just enables users to not update their browsers uh which potentially could have you know security issues but in this case since it's the head of my department that was having issues i need to fix this and i haven't had any uh complaints from anyone else so i don't know if other users happen to be using that same version of safari but it's entirely possible that they are so i'm just going to fix this okay and by me i mean helder is going to fix this so i did do some uh some testing and research on the issue uh before i made before i made the issue on the repository but as you can see helder actually did the the work coding so let's see what what is this 65 okay so let me let me bring over the terminal window for this so we do have you know what i have some changes that i had already made where am i at um here right resource in it let's go to our bulletin and no no no resource center that's where we're at so the project is resource center let me undo all my tests because i messed this up pretty thoroughly uh all right and let's do let's do status view story.js no i have not updated this um if you're not sure what i'm doing i'm trying to get rid of my my tests my changes because i don't want those to be to be committed are included at all let's see what it says i've changed project description name email that's interesting so what does it think it was i'm gonna do a git diff to see what changed okay that's interesting it says that i've actually added this line in interesting hmm and i don't really want that added in right i do not so let's see what i want is that to say story and not project description so let me go let me change that actually could it be it's already up to date that's odd that's really odd i thought i had fixed that at some point anyway uh let's just go ahead and change that back then there we go now what we should have when we do a git status is that nothing is here so uh we don't see that little asterisk anymore so that means nothing's there okay great let's do it get fetch origin pool and this was 65 i believe we can always double check 65 yep and and we'll do uh let's see this is from helder um so there and let's go safari bug so now we're moving to that branch and we're going to type in yarn just to be sure although uh it shouldn't do anything okay great now let's merge master which is up to date so awesome so everything's up to date now here's what we're going to do i'm going to run ngrok which where's my ngrok server at maybe i have it on here instead uh so i have n grog running somewhere or i had it running i stopped it from the last time there we go okay so what ngrok is going to do is this is going to allow me to test this from anywhere so um i'll paste i'll go ahead and paste this in the description in case you want to test it or i'm sorry in the live chat so ngrok is now giving me a link to this even though it's running locally now you all uh can can test it out i'm going to run browser stack so if you're not familiar with browser stack it lets you run your your sites test out sites on different operating systems different browsers so oops oops i forgot i was on chrome canary let's try browser stack this would be a lot easier to log in like this okay so i'm already logged in so here's browser stack let me zoom in a bit so you can see so i have a choice to run this on you could see a lot of different mobile devices but i'm going to go down here to mac and let's try el capitan so we're going to go 9.1 on el capitan and it's actually going to start up that browser device combo once that starts up we're going to visit that ngrok link that i just pasted in and we're gonna try to submit that form so for me it i had a previous ngrok link in that obviously is not working now because i shut down that that link great so now we're in as you can see we're in here i can from in here i can inspect so you can see i can bring up the dev tools the safari dev tools and inspect things and the console will be most helpful to us i suppose so i'm going to go into that suggest a story form since it's a lot easier to fill out than the other form and there we go there's a slight lag but i'm when i'm doing this but it's not unreasonable and do the test and submit oh interesting type there object entries is not function okay so we are getting an error here i can uh i have my email open on another screen so i can tell whether or not an email was sent or whether the error completely stopped it it looks like it's completely stopped all right so i know this is really small i can't the the zoom is not working for me so um let me bring this whoops again let me just read off this error then so we have a type error object dot entries is not a function so it says in object dot entries uh this state form object dot entries is undefined so let's check that out in the code so we have our dot story.js and down here where we're doing our handle form data this is where we have object dot entries this state form so interesting i'm just going to choose this undefined i wonder uh hmm nothing huh that's interesting is all right so here's what i'm thinking maybe object dot entries is not supported well let's just all right let's check it out in uh mdn and it should tell us here at the bottom where we could use it oh okay so the compatibility uh here says it's available in safari 10.1 we are testing it at 9.1 so that would make sense um okay so it seems like seems like we need a polyfill right let me deploy polyfill listed below let's see if we can just copy this polyfill and uh and get it to work um just i mean this will just kind of really tell us where the problem is i suppose let's get rid of that let's see okay so we should be able to go back to our uh browser stack this should have auto refreshed okay blake has a question here i just noticed asking what does a polyfill do okay so let's let's go over this nice this is a really great question so a polyfill is a way for you to use some newer syntax with older browsers so let's just check out what this particular polyfill is doing so it's checking to see um if object entries doesn't exist so you know we see that um exclamation point there which is basically just the opposite so if object dot entries doesn't exist meaning it's not supported by that browser then we're going to create object dot entries so essentially it's just making it anyway and then it's making a function that takes in an object okay so it's going to do object keys on that object all right and it's basically going to do pretty much the same thing as object dot entries would do but it's using syntax that is acceptable for older browsers or it's using you know other other methods so the objects.keys that's acceptable for older browsers so when we add this in what should happen and we're going to test in a second is that on newer browsers this will completely get skipped over and everything will work as normal but on browsers that don't support object.entries instead this function will run and it should return something that will allow our our forms to work properly uh even if it's in an older browser so i believe from what this was saying that this will not work in older versions of internet explorer i have no intention of supporting older versions of internet explorer so i'm not worried about that but it looks like there are some alternatives if you do need to support older versions of ie so hopefully that made sense uh if anybody else has some more insight on what polyfills are what they do please put it in the live chat now always appreciate expertise from from you all so let's let's try this out again it's a test all right submit error no the page integral is not allowed to display insecure content from n rock all right let me try this so let me try another link and then test it again so it looks like there was some issue because i was using https uh so let's go with the non https or just the regular http link and give it another shot see if that makes a difference but we weren't getting the uh object.entries error so i'm assuming that that was corrected but we'll try to verify and get an actual submission to go through okay now let's submit so nothing happened and we get no errors in the console all right i don't like this this is no good uh let's check our network see what's happening share a story and we should be sending where's our fetch upload where's our upload url and we defined it up here story form so are we actually submitting sorry for this being so small um error occurred okay now we finally got an error let's see what it was okay so it looks like it's a um access control origin thing where are we sending these i saw all right let's double check our server you know what this is the one where we're sending with sendgrid correct uh probably what's happening is i have um a white list of domains when my sendgrid api and i don't have this domain included so here's what i'm going to do i'm going to copy this let me copy this add it to the api and then we should um we should be okay so uh i'm going to do this on my other screen for sendgrid uh just so that i don't accidentally show something on youtube that i should not in terms of user data but basically what i'm doing here is just adding a url to the whitelist for for this particular api key that i'm using so if you if you want to know how i'm doing this in sendgrid you just log into your sendgrid account and then on your side menu you go to settings and then api keys and then you just select the api key that you would like to edit edit your key interesting maybe i don't domains that's interesting it looks like i don't have the api key set up with any type of white list interesting okay then that's crazy alright so what is the problem hmm uh it might be it might be the way we're running this server actually you know what let's it i it probably is that let's shut this down and let's go thousand okay so uh it's been a while since i worked on this project so i had forgotten that the way we're running this is um there's a server running on there's a version of the site running on localhost 3000 and in this case 2001 and that one works except the forms don't work but then we had another one running on port 9000 and that one worked with the form so that is probably our error so my 25 minute timer is just ended but i want to do one more test since we're so close let's see let's submit this and see what happens okay so so far nothing um there's a network let's get xhr all right well we're not getting anything hmm we're not getting any errors in the console that's odd oops let's try one more thing one more thing before we stop so let me see this let's let me check out our package json file and see okay so we should be starting those servers right foreign hmm let's build okay so i'm gonna run this i'm gonna try one more time no matter what happens this next time i'm gonna go to finish up with some question and answer stuff uh i'm not i'm not gonna go through the process it let's say this works i'm not gonna go through the process of actually merging this in we've already done it twice i don't really think there's there's much value in doing it again um the only difference would be after i did all this i would then actually go onto the server and update the the live server okay so let's let's go with start start that server and for sure okay let's double check okay great that is working and where's our where's our browser stack there it is okay i'm going to go ahead and do a refresh just to make sure it should auto refresh on us but i just want to make sure everything is is working properly let's submit all right okay it says your story suggestion was sent successfully okay and i will verify by checking my email that i am i should be getting an email update uh somewhere let's see so i've gotten nothing so far but oh you know what uh since we're in testing mode it's probably turned off uh so that's why i'm not actually getting the email but uh we did get we did get a success message so i'm happy with that awesome so uh with just you know we had to add that polyfill in there uh which is okay uh what i'll have to do then uh it's not exactly ready to merge in yet because i'll have to add the same polyfill into for the other form uh there's probably a better way to do that so i don't have to repeat the same code so maybe i'll i don't know i don't mind repeating something twice if i had to repeat it more than twice it might be worth it to maybe make it a separate component put it in the utils folder uh we'll see um but i'd have to do that then merge it uh put it on github i'll pull it into the server so if anybody's interested in that whole process um maybe i could i could show that on a stream in the future um just let me know but otherwise i think the the problem seems to be solved so thank you again uh helder for that pull request and um so if anybody feels like browsing this site on internet or on safari 9.1 it'll work now so all right so let me scroll up a bit to where i left off in the live chat and uh answer uh as many questions as i can let's see okay cool so um i if you remember earlier in the stream i was asking arvind about his work situation since he uh said he just left uh left his job uh arvin says i've decided to learn from you and do some freelancing it'll give me more time to learn all right that's awesome that's awesome i mean hopefully hopefully i can help out with that and and you'll learn some things uh feel free to you know ask me what you know whatever you want to uh you can message me on twitter or you know or whatever we're just asking the live chat happy to help and uh freelancing is it's nice um if you get some steady clients it can be it can be really nice let's see right c says i'm doing the same as you and my life hasn't been better pure happiness for now awesome that's awesome i'm glad to hear that okay oh uh musa says i must leave now thanks for the stream man good afternoon so i'm sure moose already left but uh in case uh that you watch this recording uh i'll see you later and uh thanks for watching the stream and and joining in the live chat i appreciate it world says browser support like internet explorer or safari makes me want to leave web dev i feel like i'm fixing fixing vhs for a living yeah i'm not really uh i don't really like supporting older browsers either but um luckily i don't really have to that much so i think i have it better than than other people in that regard so it could be a lot worse but yeah i really i don't really honestly internet explorer does upset me sometimes with just the weird errors but to be honest with you safari is pretty bad too especially on mobile mobile safari is like i think right there in the running for worst browser uh to have to deal with as a developer so if anybody on the safari team is watching i apologize i don't mean that in any way um to belittle your work or anything um but i just happen to have had a lot of bugs on mobile safari with some of the stuff that i built this is interesting arvin says i learned vue.js as i found it easier than angularjs and guess what i don't find i can't find any jobs for view developers in india that's actually i mean that's interesting i've always wondered about vue i know a lot of people like view but i don't frequently see view mentioned in job descriptions now i'm i'm not really looking at that many job descriptions but i i don't recall it being mentioned often so i kind of wondered what you know what the job outlook was like for view developers excuse me try to have the yawn uh i'm i'm highly caffeinated at this point so i was i'm surprised by the yawn okay i guess that's good to keep in mind i mean of course this is anecdotal it's it's in no way uh a study of you jobs but i i have kind of wondered about that all right rook says uh the can i use site is pretty nice for browser support information uh let's end this session um yeah if you didn't if you've never used can i use before it's it's simply can i use dot com you type in what you want to do and uh normally i almost always find what i'm looking for for some reason i couldn't find object dot entries but it works for javascript stuff like this or even css like let's go like flexbox right so you don't have to specify you just type something in you'll get the javascript and css and you know it it'll show you what it's supported with so if you want to use flex and css it'll say you know okay internet explorer 11 has partial support even explains what that means um and looks like all the other browsers have full support so really useful super fast to search through i use this often okay igor says it should be a lot of freelance tasks or outsource projects on vue.js okay um yeah that's that's a good suggestion you know maybe there's not fulltime view developers uh it's possible there's not a lot of those jobs but you know freelancing uh you know temporary projects i guess are a way to go oh okay sebastian noticed on that bulletin project that when you click on continue reading that is also only in grid view let's see actually now i'm clicking this sebastian and it looks like oh i'm sorry um i clicked the wrong thing let me let's go continue reading where are we at need to find something that says continue reading oh you know what continue reading is only a great video oh i see what you're saying now actually that's how i want it so i'm currently on the site i have it so that in this list view there is no continue reading the entire text appears so that's actually how i want it because i had complaints initially i had complaints from users because they wanted to be able to just scroll through and see everything and not have to click to read more so what i did as kind of a compromise was in the grid view because these cards were more narrow and you could potentially have a very long scroll if there were a lot of there's a lot of content i left that with the continue reading but in the list view we show everything the full content so it that actually is how it how it's supposed to work but sebastian you have uh great like attention for detail um yeah that was that was pretty good about noticing that arvin says what freelancing website would you suggest apart from freelancer um igor says have you tried upwork uh let's see i i i have not tried upwork i know you're asking um uh you're having a conversation with igor on there but uh in case you know anybody else wants to to join in here um i'm just kind of reading it out a bit i've not tried upwork so i can't vouch for that i have tried freelancer i didn't have a great experience with it it seemed to me like the uh the pay was just way too low for a lot of the projects um there's a lot of competition a lot of people trying to you know undercut and bid lower than other people i i didn't find it to be really worth my time unless i really didn't have anything else going on uh so i didn't like it i i um i think it's more promising some of the sites like uh top towel basically any site where um they you you have to test to be accepted as a developer so they only take quality developers who can pass the tests and then they match you up with companies who are actually willing to pay you know a fair amount of money to get a good developer so if you can find something like that either top towel or something that that operates like that i think that's that's the best bet if i ever go back to freelancing i will probably do that um yeah that's so that's kind of my advice about freelancing if you the thing about freelancing i i talked a lot about freelancing last week so i'm not going to talk a lot about it now but i'll just say freelancing is about selling yourself to a certain extent so you're not going to be able to spend all your time coding and learning if you want to actually make money you have to sell yourself if you're not comfortable with that you almost have to be a marketer uh in a sense but if you're not comfortable with that freelancing may not be for you unless you can find someone a company like top towel or maybe a small business or something that will be the middle man you know kind of the go between between clients and and you they can handle contracts they can handle payment uh things like that that will allow you to spend your time doing what you want which i assume is coding and not worrying about the you know these other things so for me that's more of the ideal freelancer situation uh because you know while i do have experience with marketing and things i i'd rather not i enjoy the coding more so anyway just something to keep in mind world said i like how you say interesting instead of cursing like i do yeah so i i assume that you'd said that whenever i got the error in the console there yeah so um i um i purposely never curse on this stream i know i have some younger viewers so i i wouldn't want to expose them to any words that their parents may not want them to hear and potentially i may have older viewers that just would prefer not to hear that language so i like to keep it pg rated or g or whatever so anyway yeah so you will not hear me curse on this stream and um i have four little kids so i get a lot of practice at controlling my language even when i get upset about something um let's see so when i'm not streaming though uh i i i have i have said some uh some curse words at the computer uh luckily i have an office with my door shut and everything so there's no danger of being overheard uh my uh my spotify playlist has ended so uh gotta put another playlist on it's really weird to try to do the stream with nothing in the background let's see michael crow says take your break now if you don't you'll be banging your head against the wall for the next hour trying one more thing you're right if that if that last thing hadn't worked i i was definitely in danger of doing just that uh you're a smart man igor says that thing always happens one more thing one another thing and oops you have been working for a couple hours without a break yeah that's true i don't know how many times my wife has called and said when are you gonna come home from work it's getting late and i'll say okay i'm working on this i'm just gonna try one more thing and yeah and then i end up being here for much longer okay world says you demand safari nine users should be grateful cool i hope so i'm gonna have to uh next time i see the the my department head i'll tell her that it now works she'll be should be happy okay blake says by the way i messed around with figma the wireframing tool it's not bad okay cool so at some point maybe last week sometime we were talking about uh free wireframing tools i believe we were uh specifically wanted ones that worked for windows and figma came up so for for any of you that were in on that conversation or interested in wireframing tools uh for windows that are free check out figma figma rook says what's your opinion on stricter linting rules like the airbnb preset for eslint um i i don't know i to me the linting rules i like the idea of linting rules right so you know like on our on a lot of our projects we've set up um some linting uh rules we even have the auto formatting uh that enforces things like that and i like that it brings a lot of consistency in particular the airbnb rules i don't really have a comment on that because it's been a very long time since i've even looked at them i don't really remember too much of what it is so but in general uh you know stricter linting rules i don't have a problem with as long as they don't slow down development significantly so um i don't mind like when we're doing the auto uh you know the auto formatting with standard js and prettier uh i'm okay with that people you know can do whatever they want in terms of how they code and then it just gets when they go to commit it just gets converted to how i want it that's okay um yeah i i would say it would almost depend like on a case by case it depends on like what are those rules in particular and really it's it'd be more of a personal thing if the rules were a lot of things that bother me then i wouldn't like it uh but if the rules are really specific and happen to be like just how i like things i'd probably be okay with it so um i haven't actually given that much thought to it so this is kind of just off the top of my head but i'm not i'm not opposed to strict linting rules but it just really would depend on you know what what are those rules uh in general i uh i like spaces and not tabs so two spaces uh i don't like to use semicolons um i like having properties like if we're talking about react uh you know properties on diff separate lines i think that makes it a lot easier uh to read it does make the code longer but is you should be keeping your components as short as possible so assuming you're doing that it helps with readability and the length isn't too bad so that's my preference uh what do you all think um i mean i like and what do you all think about what we have set up now i mean i i've really been liking the uh kind of the auto formatting rules that we have set up um but you know what do you uh what is your opinion on it i definitely like to know oh igor says we just switched to that those rules they are awful all right so we got one vote for awful in terms of the airbnb rules oh okay so sebastian says i'm looking on when you click on a category or other button in the drawer it shows a red or blue color oh okay yeah it does uh so we'll definitely want to change that you know what i i have noticed that before okay yeah so we definitely want to change that um i'm actually okay with this gray color that you can see right now it's showing uh as opposed to the red uh the gray is fine with me or one of the colors that we're already using in the color palette would also be be okay with me uh let's see so thanks sebastian um okay so sebastian notice it's just for the ones that are a link component okay um yeah i'll have to check that out person says hi i'm new hey how's it going thanks for joining us uh in the in the live chat and uh welcome uh robert says i created a getter if anyone wants to join if we have questions or can help each other outside of the live chat uh jesse let me know if i can share the link yeah go ahead and share the link that's awesome yeah we we actually have a um we have a slack channel too and i um i have not gone through the process to be able to efficiently accept people into that slack channel i know there's a way you can set it up so that'll just automatically let you get an invite and i just haven't really taken the time to do that uh yet uh so if you'd like to be a part of that your best bet maybe is to just send me a um a message let me know what email you want to use to sign up until i can get that and uh but getter sounds cool though to use because then we wouldn't have the issues um in terms of invites that we have with slack blake says my mom would appreciate that i'm not sure what that was in response to uh was that is it something in the chat or something i said so i don't let me know uh sebastian says submitted pull request to fix what you said about the close icon and fixed up the bug of the grid all right awesome sebastian thank you so much that was so quick i really appreciate that oh okay blake says the language all right okay cool so that was i mentioned earlier that i i don't uh use any bad language or cursing on the stream uh one reason being for our younger younger viewers i don't know that their parents would appreciate that uh so yeah um yeah i personally don't have an issue with uh with cursing but i would have an issue with someone cursing around my children so i'm definitely sensitive to that so i'm always um i don't know about you all but i'm always amazed at uh what i hear um some people saying around their children like in public um i don't know i mean i guess it's just what you were used to growing up but um i don't know my mom never said a curse word i only heard my mom say curse word one time her entire life is we we almost got into a wreck and um so she said it uh my dad was he he cares a little bit more but never um almost never anything like really vulgar you know um but anyway yeah i just i think it's a good um it's a good skill to be able to have to control your language based on who your audience is or what situation you're in um i it just kind of shows like um an element of selfcontrol and and being able to control uh your thoughts so i like that i like to see that in a person like that that ability let's see all right uh seems like i've i've gone through everything in the live chat so yep uh if i happen to miss your comment or question i'm sorry about that i do try to get to everything um but uh occasionally i missed something so if i did feel free to reach out to me on on twitter or any other social media that uh you can find me on um or just you know come back for another stream and ask me uh okay blake did ask can you do a live stream on deploying a react website yeah i definitely can oh actually i'm so glad that you um that you said that uh so i have more information for you all uh in regard to this bulletin website we've been working on so for the last um for the last maybe two weeks or more i've been talking about the the login system so currently we have set up a heart should set it up a passwordless login system that uses a link that you get via email what i'd like to do is to tie it in with the university single signon system that they're using for other things um i i talked with one of the meetings that i had today was kind of an unexpected meeting but i ran into some of the people in the i.t department who are in charge of the single signon and i asked them what they thought and uh what's gonna happen is over the christmas break for the university uh so the end of december they're going to switch everyone over to using office 365 for the email and calendars and everything like that at that point everybody at the university is going to have their own microsoft account their on office 365 account and they're going to have to change some of the way they do single signon so what makes the most sense for this project is to wait until that happens uh and then what we probably would end up doing is having something come up that says like sign in with your office 365 account and then we'll have a check server side to say are they using a franciscan.edu address if so then go ahead go ahead with the office 365 sign in if not then you'll give them a message saying hey you need a franciscan address uh i think that that that may end up being the best way to go about it and possibly the simplest way because i'm sure there is already some code out there for using sign in with with office 365 or with your microsoft account and react it seems to me like that would be something that people are doing somewhere so so that's what's gonna happen it doesn't need to happen until you know december probably january probably sometime in january it'll happen so we got a lot of time to think about it and to look for a solution and get that ready but what that does mean is we potentially could wait and not release this newer version that we've been working on until then or we can release it now with our our email link so we're gonna have to make a decision with that either way we have a lot of time now to really work on this and get it to a point where where it's how we like so we may slow down on this switch up to some other projects uh there's definitely time if we want to think about extra features that might be cool um we we have a lot of time so we essentially have like two two months potentially two and a half months now uh to work on this so um i mean in potential this is really it's functional now i mean i i i don't i wouldn't release it right now there's still some things like the filter by date doesn't work um and uh there's there's some things that i would change like design wise just really minor adjustments but potentially like you know this is you know 95 operational at this point anyway basically what i'm trying to say is we got a lot of time to work on this now so if anyone has any ideas for features that could make it better i'm i'm open to considering them i can't guarantee they'll make it in although if you have a feature you think would be really cool and then you also submit a pull request for it then i'm much more likely to bring it in because it's it's already done anyway so i think it'll be cool i'm not excited about this because i think we can really uh make this you know better than the the current version that's live um and uh it'll be exciting so not only will we be able to give users a easier way to sign in that's tied in with all their other university accounts but also we may be able to give them some new features updated design it'll be nice and yeah i think it'll be really nice okay um okay robert also has uh has pasted in this getter channel um live coding with jesse free code camp lobby i'm gonna take this and paste it let's go over here okay cool this is some stuff i had from a previous stream so let me let me go down a bit and uh here this uh this link is for the getter let me uh copy this link over just to make sure that it works before i give it out to everyone it's not working for me what did i do wrong all right is that link working for anyone else uh getter dot i am slash live coding with jesse free code camp slash lobby because i'm getting a 404 whenever i try to use that let me see okay okay i'm gonna wait a minute just to see if that getter link is working for anyone else because i want um not only people in the live chat but the people that are watching this later on i want to be able to give them the right link so also so robert says can you limit the single signon to ip address or can they also use a link on home computer i need to create the exact same thing but limit it to a word computer hmm you know what i'm not i've never really thought about that um yeah i don't know so i don't know does anyone have any thoughts on that how could we limit it to an ip i mean i suppose it's possible uh yeah yeah i would i would suppose it's possible right i mean we're limiting it to email address so if you could grab the ip and just limit it to the ip i suppose that would work but what's the potential for um faking an ip address how hard is that to do i don't know like how uh secure you need it to be here let me um put in the link that's actually working for me right now so this link is working so getter dot im slash live coding with jesse free code camp okay and then once you get there you'll see let me show you uh on the screen here so everybody knows how to how to get in here you'll see this lobby and when you click lobby then you'll be able to get in and and chat um so off to sign in i know i do have a getter login sign in yeah i think i've signed it with github so um you can sign in with twitter or github is it not working there we go okay so here we go yeah um please uh join join up with the getter uh we do still have our slack channel too so um that's available so you know if you want to join that just let me know i'll need your email to invite you but otherwise the getter channel is open and um that'll be cool so feel free you know if i'm not streaming to ask questions in here and um the more people we get in here the better we can help each other out so um okay uh i think that's it let me check the chat one more time and all right so now i have officially gotten through everything and it's it's just in time because i'll have a little bit of time to wrap things up before it's time for me to go home and yeah so this is a pretty good stream we got some things worked out worked out some bugs merged some pool requests hopefully you all have learned a little bit more about git and it's really helpful if you're not using git i highly recommend it it's uh i highly recommend some form of version control and among the forms of version control that i've had exposure to i definitely prefer git so uh try it out if you haven't already tried it out uh you'll well if you force yourself to use it and get used to it you know you'll never want to work without okay all right so i should be back tomorrow sometime around 2 p.m eastern time so until tomorrow have a great day
