With timestamps:

00:00 - localization is the process of adapting
00:02 - content to suit the language culture and
00:04 - preferences of a specific target market
00:07 - we've been using crow in to localize the
00:10 - freeo camp curriculum and articles in
00:12 - this course you'll discover how to use
00:14 - crow in to streamline your translation
00:16 - processes enabling you to effectively
00:19 - reach a diverse International Audience
00:21 - by embracing localization you can
00:23 - significantly enhance user experience
00:26 - broaden your Market reach and ensure
00:28 - your content resonates with people
00:30 - across different cultures and languages
00:32 - as Stephania teaches this course she is
00:35 - an amazing instructor who also runs the
00:37 - free camp.org Spanish Channel if you
00:40 - speak Spanish I encourage you to check
00:42 - out that channel if you're new to the
00:44 - world of localization this course is for
00:47 - you hi I'm stepania software developer
00:50 - and course creator for free code camp we
00:53 - will dive into the world of
00:55 - localization you will learn how to
00:57 - translate resources and software on
01:00 - crowding a localization management
01:02 - platform with all the features and a
01:04 - free plan that you need to get started
01:07 - but why is localization so important
01:09 - translating and adapting your content
01:11 - and your platform is essential for
01:13 - reaching a global community of users
01:16 - right but there are many details faces
01:18 - and tools that you need to know to get
01:21 - started and to reach that final
01:22 - translated platform where do you start
01:26 - this course is here to help you
01:28 - understand all of this step by step it's
01:29 - it's for everyone who wants to learn
01:31 - localization whether you have a
01:33 - technical background or not or whether
01:36 - you're an individual a team or an
01:38 - organization this course will be helpful
01:40 - for you you can apply these principles
01:43 - to any project that you need to
01:45 - translate that's why we will start from
01:47 - the basics my goal is to take you from
01:50 - zero knowledge of localization to
01:52 - working knowledge and actually being
01:54 - able to translate a website and manage a
01:57 - localization project or team on crowding
01:59 - this is our road map ahead we will start
02:01 - by looking at Freo Camp as an example of
02:04 - an organization that is currently
02:06 - managing a localization project
02:08 - worldwide and how we are approaching
02:10 - this task from there with this context
02:14 - we will dive into the fundamentals of
02:16 - localization including important
02:18 - terminology faces and roles this first
02:22 - part is based on Theory but that theory
02:25 - I promise you will be super important
02:27 - when we reach the Practical aspects of
02:29 - of actually localizing and crowding our
02:32 - localization management platform we will
02:34 - create a crowding account and we will go
02:37 - through the most important features of
02:39 - this platform to get started as an
02:41 - individual team or organization this
02:43 - will be an in-depth overview and by the
02:46 - end of the course you will know crowding
02:48 - in detail we will also cover how to
02:50 - integrate crowding with external
02:52 - services and platforms like GitHub and
02:54 - Google drive and how open-source and
02:56 - educational projects can get a free
02:59 - license for crowning Enterprise the last
03:01 - part of the course will be focused on
03:03 - actual development you do need to have
03:05 - some basic react knowledge to follow
03:07 - along step by step but only the
03:10 - fundamentals should be enough to
03:12 - understand what we're doing we will
03:13 - create a basic react app using the react
03:17 - IAT next framework then we will be able
03:20 - to switch the language of our react
03:22 - application and localize the text on
03:24 - crowding plus we will see four
03:26 - techniques and tools for translating a
03:29 - website including crowding Visual Studio
03:31 - code extension GitHub integration JS
03:34 - translation proxy and crowding in
03:37 - context for organizations when you
03:39 - complete the course you will know the
03:41 - theoretical and practical aspects of
03:44 - localization are you ready let's begin
03:47 - localization is waiting for
03:52 - us fre cam.org is an example of an
03:55 - organization an open-source project that
03:58 - has embraced the con conceptt of
04:00 - localization for reaching a global
04:02 - Community our coding curriculum is
04:04 - available in many world languages
04:07 - including English Spanish Chinese
04:10 - Japanese Portuguese Ukrainian and
04:13 - Italian actually if you go to our
04:16 - website right now and you click on this
04:18 - little icon at the top you will see a
04:20 - drop- down menu with these languages and
04:23 - you will be able to localize the
04:25 - platform automatically in just a few
04:28 - milliseconds and you will be able to
04:30 - learn to code in your native language
04:33 - that is the power of localization
04:35 - opening the doors to everyone around the
04:37 - world without any language barriers our
04:40 - community is also actively working on
04:42 - translating free codam into many world
04:45 - languages including Bengali Dutch French
04:49 - German Hindi Korean sahili and many more
04:55 - we have many world languages available
04:57 - for localization because our goal is to
05:00 - reach a global community so we have
05:02 - these languages enabled and available in
05:05 - our localization platform we also run
05:08 - localized Publications YouTube channels
05:10 - forums and other resources but this is a
05:14 - group effort this is an an amazing
05:17 - effort made possible by the amazing free
05:19 - code cam community and the members of
05:22 - the free code cam staff because our
05:24 - localization process has one main goal
05:27 - to remove any barriers that could
05:30 - prevent someone from accessing the
05:31 - education they need and deserve that is
05:34 - our goal and that should be your goal if
05:36 - you're planning to localize your product
05:38 - or resource remove any barriers and let
05:41 - people or users or your community come
05:43 - to you and learn or enjoy your product
05:46 - without any barriers one of the key
05:48 - features of our localization effort is
05:50 - that it is performed by humans for
05:54 - humans our processes focus on what
05:56 - matters the most our amazing community
05:58 - of Learners who waake wake up every day
06:00 - around the world excited about learning
06:02 - new skills we believe that language and
06:05 - cultures should not be barriers for
06:07 - learning knowledge should be accessible
06:09 - worldwide that is why we started this
06:11 - process and why we will continue our
06:13 - localization effort one of the key
06:15 - aspects of our process is that it is
06:17 - managed and run by humans for humans
06:20 - translations are written and approved
06:23 - and checked by our amazing community and
06:25 - staff because let's be honest usually
06:29 - anyone can tell when a translation has
06:31 - been generated automatically we can
06:34 - detect it we can see it it's much more
06:36 - literal it lacks the clarity and
06:39 - sometimes it feels disconnected from the
06:41 - context and the original tone of the
06:43 - text which can take away from the
06:46 - meaning of the text or the original
06:48 - message of the content human translators
06:51 - are much better at adapting languages
06:53 - and translating sentences in a way that
06:55 - sounds more natural in different
06:57 - languages and cultures at come we have
07:00 - an amazing community of contributors who
07:02 - dedicate their time to translate and
07:04 - check our translations and an amazing
07:07 - team of Staff members Who oversee the
07:09 - process with the goal of publishing
07:11 - highquality translations for Learners
07:13 - since we launched our localization
07:15 - effort more than 2,000 translators and
07:17 - 60 proof readers have helped us to
07:19 - accomplish our mission if this sounds
07:21 - interesting to you and you would like to
07:22 - join free Cam's translation effort
07:24 - please find our contribution guidelines
07:26 - in the description during this course we
07:28 - will also talk more more about our
07:30 - localization effort and how we are
07:32 - specifically using our translation or
07:34 - localization platform to achieve our
07:36 - mission but managing such a large
07:38 - project with a worldwide community of
07:40 - contributors might seem complicated
07:43 - right how can we accomplish all of this
07:45 - as a nonprofit organization you will get
07:48 - answers to these questions during the
07:50 - course we will cover this from the
07:54 - perspective of a nonprofit organization
07:56 - but the principles can be applied to any
07:59 - localization process that you need we
08:01 - will cover all the fundamentals of
08:03 - localization specifically we will talk
08:06 - about localization on a platform called
08:09 - crowding the course will start with
08:12 - General localization Concepts the
08:14 - process and the different steps and
08:17 - roles that you can have in a
08:18 - localization team after that we will
08:21 - talk about crowding for beginners all
08:23 - the fundamentals of how you can localize
08:26 - a resource or platform in crowding and
08:28 - then we will talk talk about crowding
08:30 - for teams and organizations because if
08:32 - you are representing an organization you
08:35 - will very likely have to work with
08:36 - multiple team members how can you
08:38 - organize your tasks how can you assign
08:41 - tasks to different members that is
08:42 - possible in crowding and in localization
08:45 - Tools in general so we will talk about
08:47 - them in more detail and we will also
08:50 - talk about crowding for developers this
08:52 - part will be a bit more Technical and we
08:55 - will talk about different features of
08:57 - crowding that developers can use to
08:59 - autom made and improve the efficiency of
09:01 - the localization process are you ready
09:03 - we will also talk about how to localize
09:06 - a website because that is usually one of
09:09 - our main goals when we create a website
09:11 - right if you're trying to reach a global
09:13 - Community your website should be
09:15 - localized and you will learn how to do
09:17 - that in crowding and you will be able to
09:20 - apply all these general principles to
09:22 - any localization process that you need
09:24 - to complete awesome so let's start the
09:27 - localization fundamentals section we
09:30 - will talk about the key Concepts and the
09:32 - key phases and roles of the localization
09:35 - process so let's
09:39 - begin great so now let's start with an
09:42 - overview of the fundamentals of
09:45 - localization and the steps you will need
09:47 - to take to make sure that your platform
09:50 - can be used without any language or
09:52 - cultural barriers specifically we will
09:54 - cover the concept of localization and
09:57 - everything that localization involves
10:00 - we will also talk about translation and
10:02 - how translation can be a bit different
10:04 - from
10:05 - localization and we will talk about
10:07 - prove reading which is another phase in
10:10 - this process it's very important and we
10:12 - will talk about it in just a moment we
10:15 - will also talk about the most common
10:17 - file formats that you will find in a
10:20 - localization process so you're familiar
10:22 - with them and you know what they do and
10:24 - what type of data they contain and we
10:26 - will talk about the faces and roles of
10:29 - the this process to make sure that your
10:31 - project runs smoothly you can have
10:33 - managers you can have translators proof
10:35 - readers and more so that is basically
10:37 - what we will cover in this part of the
10:40 - course the
10:42 - fundamentals what is localization
10:44 - localization is defined by the Cambridge
10:47 - Dictionary as the process of organizing
10:50 - a business or industry so that its main
10:52 - activities happen in local areas rather
10:56 - than nationally or internationally in
10:59 - the context of products and services and
11:01 - platforms localizing something really
11:04 - means adapting that to the language and
11:08 - culture of a specific population this
11:11 - also applies to software products and
11:13 - our course will be focused on localizing
11:16 - software products because they need to
11:17 - be adapted to different cultures as well
11:20 - and we will see how during the course
11:22 - software also needs to be localized and
11:24 - the platform that we will be working
11:26 - with crowding is a software localization
11:33 - platform why is localization important
11:37 - let's say that you are an organization
11:39 - with a global community and you keep
11:41 - your resources in English what will
11:44 - happen with these communities that let's
11:46 - say do not speak English well then you
11:49 - will be closing access to those
11:51 - communities to your platform or service
11:53 - and if you're an education platform or
11:55 - an organization whose goal is to reach
11:57 - as many people as possible people around
11:59 - the world then you will need to create
12:01 - that Global community of Learners who
12:04 - are interested in your platform who can
12:06 - find it helpful and who can spread the
12:08 - word about your
12:12 - resources now localization is a bit
12:16 - different from translation you might be
12:18 - surprised to know that this concept is
12:20 - actually broader the Cambridge
12:22 - Dictionary defines
12:24 - translation as the activity or process
12:28 - of changing the words of one language
12:32 - into the words in another language that
12:34 - have the same meaning so notice the key
12:38 - part of this definition translating is
12:41 - just changing the words while keeping
12:44 - the same meaning it's very helpful but a
12:47 - bit limited because when we translate
12:50 - something we want to say exactly the
12:52 - same thing in a different language
12:54 - however localization can go beyond that
12:57 - let's say that you have a file in
12:59 - English and you want to translate it
13:01 - into Spanish what do you do in that case
13:04 - well you translate it and you say the
13:06 - same thing in Spanish localization can
13:09 - go beyond just translating the words it
13:12 - can adapt the content better to another
13:15 - culture or country when you work with
13:18 - resources in English you will usually
13:20 - find like feet inches and those types of
13:24 - units for measurement for length but in
13:27 - Spanish we typically use meters and
13:30 - centimeters so converting that will be
13:33 - helpful for your users readers and
13:36 - viewers another example would be
13:38 - adapting the colors here let's say that
13:40 - we have a website for a particular
13:42 - population and we have this pinkish
13:44 - color but let's say that you've done
13:46 - some research and you decided to adapt
13:49 - the website into a different color that
13:52 - is also an example of localization
13:54 - because you are translating your content
13:56 - but you're also adapting it to fit the
13:58 - local culture
14:02 - better what are the types of resources
14:04 - that you can translate because we're
14:06 - talking about translating resources
14:08 - right when we talk about translation we
14:11 - usually think of a text document right
14:14 - like a Word document or something that
14:16 - has text on it and that is a very common
14:19 - application of localization but the term
14:22 - is even broader because you can localize
14:24 - or translate many different types of
14:26 - resources spreadsheets websites games
14:30 - even scripts and movies podcasts or
14:33 - videos with voiceovers or by translating
14:36 - their subtitles and or even localize in
14:38 - the subtitles if you would like to use
14:40 - local terminology when we create
14:43 - resources we will work with many
14:45 - different types of files and text
14:47 - combined with video is also very common
14:50 - in localization projects localization is
14:53 - not limited to text format we will focus
14:56 - on software localization during the
14:58 - course but I just want you to know that
15:00 - there are many different types of
15:02 - resources that you can translate and
15:07 - localize let's talk about common file
15:10 - formats that you can work with in a
15:13 - localization project this will be a very
15:16 - quick overview I promise you okay there
15:17 - are many different types of files but I
15:19 - carefully chose those that are most
15:21 - common for you okay first of all we have
15:24 - text files plain text files with the txt
15:28 - extension they do not store any images
15:30 - or non-text characters then we find
15:33 - comma separated values or CSV files here
15:37 - we are going to store text but the
15:41 - values are going to be separated by
15:43 - commas each line will represent a record
15:46 - in your data and this type of file is
15:49 - commonly used for data exchange the file
15:52 - extension is. CSV then we find HTML
15:56 - files they are mostly used for web devel
15:58 - velopment they have a file extension of
16:02 - HTML hypertext markup language and these
16:06 - types of files represent the structure
16:08 - and content of a web page they can be
16:11 - opened in a web browser Json files are
16:14 - also very common to store data Json
16:17 - stands for JavaScript object notation
16:20 - but it's actually independent from any
16:22 - programming language this type of file
16:24 - stores key value Pairs and it is
16:27 - commonly used for data exchange
16:29 - especially across the web after that we
16:32 - find markdown files to create formatted
16:35 - text it's a lightweight format with a
16:39 - specific syntax that is commonly used to
16:41 - write software documentation and blog
16:44 - post but its applications go even beyond
16:47 - that we also find portable object files
16:50 - portable object files are more specific
16:52 - for the localization process commonly
16:55 - used for writing multilingual systems
16:58 - get text is used by development engines
17:01 - like the Unreal Engine and XML is also
17:05 - very common extensible markup language
17:08 - these files are used to store share and
17:11 - reconstruct arbitrary data you can
17:14 - represent the data in an arbitrary way
17:16 - that fits your needs it's commonly used
17:18 - to exchange data over the internet and
17:20 - it's very important for localization in
17:23 - particular because many localization
17:25 - Frameworks use XML for example Android
17:29 - and we also find these types of files x
17:32 - l i FF files the file extension is
17:36 - exactly that xli i f f it this stands
17:39 - for XML localization interchange file
17:42 - format specific for localization it's an
17:46 - XML based format it's used to
17:48 - standardize the way localizable data can
17:51 - be passed between localization tools and
17:53 - we can also see this
17:56 - xlsx files and they are usually used
17:58 - used to store data in spreadsheets we
18:01 - also find Rex files well we can
18:04 - pronounce it like this or re SX files
18:07 - this is the file extension it's an XML
18:10 - resource file that is used bynet
18:13 - applications for storying resources that
18:16 - can be localized and this is something
18:18 - that you might be familiar with it's
18:20 - more standardized and it's not specific
18:22 - to localization it's PDF files it's a
18:25 - portable document format has a
18:28 - consistent format across software
18:30 - hardware and operating system so it's
18:32 - very helpful you will always see the
18:34 - same format when you open an PDF file
18:37 - independently of where you open
18:39 - it awesome and now you know more about
18:42 - the localization process and the files
18:44 - that you can work with let's talk a bit
18:47 - about continuous localization continuous
18:50 - localization involves localizing a
18:53 - product continuously as it is updated or
18:56 - expanded in an agile product development
18:59 - cycle it's often used to localize
19:02 - software products with the traditional
19:05 - localization process we would for
19:07 - example write a book then we would
19:09 - translate it and we would have the
19:12 - translated version right and that could
19:15 - happen once every few years when we make
19:18 - some updates or changes or we have a new
19:21 - addition but now with the software
19:24 - industry everything has to be faster
19:26 - because we're constantly updating the
19:29 - software and changing things in our user
19:32 - interface and in our content that will
19:34 - be a continuous process that is what
19:37 - continuous localization is all about
19:39 - continuously localizing the product as
19:42 - it is updated and in this case the
19:44 - product would be our
19:48 - platform great so now that you know
19:51 - exactly what localization is and how it
19:54 - is applied in the software industry we
19:56 - can start talking about some key local
19:58 - localization Concepts that you should
20:00 - know localization terminology you will
20:02 - come across these terms very often in
20:05 - the context of translation and
20:07 - localization here we have
20:09 - internationalization
20:11 - internationalization is defined by the
20:13 - Cambridge Dictionary as the action of
20:16 - becoming or making something become
20:19 - International in the context of
20:21 - localizing a software product it also
20:24 - involves adapting the user interface for
20:27 - working correctly with other languages
20:29 - and making sure that it is ready to be
20:31 - translated after that we find the term
20:35 - culturalized culturalized is defined by
20:38 - the maram Webster dictionary as deriving
20:40 - from or imposed or conditioned by
20:44 - culture so culture here plays a key role
20:47 - because every culture has different
20:50 - traditions and vocabulary culture can
20:53 - play a key role in how communities
20:55 - Embrace different products campaigns and
20:58 - platforms so understanding how to adapt
21:00 - them is very important to succeed and
21:03 - you will usually want to get the advice
21:06 - of someone who is very familiar with the
21:08 - culture that you're trying to
21:10 - Target pseudo localization is another
21:14 - very important term but let's start with
21:16 - the prefix pseudo the pseudo prefix is
21:20 - defined by the cambrid dictionary as
21:22 - pretended and not real pretended and
21:26 - that is exactly what pseudo localization
21:28 - is all about we have the prefix over
21:31 - here pseudo localization it's like a
21:34 - fake localization process the process of
21:38 - creating fake translations that act as
21:41 - placeholders for the real translations
21:44 - of a product or platform but right now
21:47 - you may be asking why would we ever need
21:50 - to use fake translations the answer is
21:53 - very curious we use these fake
21:55 - translations to check if our software is
21:58 - ready to handle multiple languages even
22:01 - before the translation process begins
22:03 - because remember that usually you will
22:05 - have a budget before you even start to
22:07 - work with that budget for the
22:08 - localization itself you can check if
22:10 - your software is ready to be localized
22:13 - with this process that is very curious I
22:16 - know and it's a very important step in
22:18 - this process that you may have not
22:20 - considered before this moment one
22:24 - specific example of this would be
22:26 - checking if a language that tends to
22:28 - have shorter or longer words works well
22:31 - with our current user interface because
22:33 - some words may be longer and some words
22:36 - may be shorter how does the UI adapt to
22:39 - those changes and will that work
22:42 - correctly if you check on Free Cams
22:44 - website and you try to change the
22:47 - language in this little icon at the top
22:50 - you will see all the options in the
22:52 - drop- down menu and after you click on
22:54 - them you can see that the user interface
22:56 - still works with different language even
22:59 - if they have different symbols if
23:00 - they're longer if they're shorter and
23:03 - that is also part of the pseudo
23:05 - localization process after that you
23:07 - translate the terms and you actually
23:09 - translate the platform but it's very
23:11 - important to make sure that the UI works
23:14 - correctly another example is making sure
23:18 - that the user interface is ready to
23:20 - handle right to left
23:22 - languages like this one some languages
23:25 - are written from left to right like Eng
23:28 - English or Spanish but other languages
23:30 - are written from right to left how is
23:34 - your user interface handling this is it
23:36 - prepared to handle that will you
23:39 - localize your product into this type of
23:41 - language those are common questions that
23:44 - you should ask yourself even before you
23:45 - start translating your software and
23:49 - pseudo localization can also be helpful
23:51 - to find any strings that may still be
23:54 - hardcoded in the project source files
23:57 - because when you start start translating
23:59 - your project you may need to move your
24:01 - strings to a specific resources file
24:04 - where you keep all the translatable
24:06 - strings but if you keep some strings
24:08 - that are still hardcoded they will not
24:10 - be translated and you will have that
24:13 - small issue in your user interface so
24:16 - pseudo localization can also be helpful
24:18 - to spot those cases that is the ultimate
24:21 - goal of pseudo localization checking if
24:23 - everything is ready to start
24:26 - translating awesome let's talk about
24:28 - machine translation machine translation
24:30 - is defined by Amazon web services as the
24:34 - process of using artificial intelligence
24:36 - to automatically translate text from one
24:39 - language to another without human
24:42 - involvement we will talk about this term
24:44 - in more detail during the course because
24:46 - the localization management platform
24:48 - that we will use to translate our
24:50 - resources has this feature which can
24:52 - save us a lot of time however these are
24:55 - usually not perfect and they will have
24:57 - to be checked before they are approved
24:59 - the process of generating machine
25:01 - translations is like this you upload
25:04 - your file to the platform of your choice
25:07 - and then the platform in their servers
25:09 - or in their infrastructure will start
25:12 - running a specific process with
25:15 - artificial intelligence here we have the
25:16 - little bot this is representing the
25:18 - artificial intelligence how cute once
25:21 - that process starts it will try to
25:24 - translate your resources automatically
25:27 - and you will have a translated file as a
25:31 - result however usually when you use
25:33 - machine translation the translations are
25:37 - not as accurate as they could be if a
25:40 - human translated the text so these
25:43 - translations will have to be checked
25:46 - however the process the automated
25:49 - process can save you and your team a lot
25:51 - of time because instead of writing all
25:53 - the text you will just be reviewing the
25:56 - translations and actually making the
25:57 - changes
25:58 - crowding the platform that we will be
26:00 - working with has this feature and I will
26:02 - show you how to create machine
26:04 - translations for your project great so
26:08 - now you know more about machine
26:09 - translation and now we can start diving
26:11 - into translation memory yes they are
26:14 - very similar in their acronyms we have
26:16 - Mt or TM and that is something that you
26:19 - should note they are very similar
26:22 - however they are very different please
26:25 - after we talk about these Concepts take
26:26 - a moment to understand their differences
26:29 - because we will see them very frequently
26:31 - and they can be confused translation
26:33 - memory is basically a database that
26:36 - stores segments of your resource these
26:40 - segments can be sentences paragraphs or
26:43 - sentence like units like headings titles
26:46 - or elements in a list that have
26:48 - previously been translated in order to
26:51 - Aid human translators so we will have
26:54 - like puzzle pieces the individual
26:57 - translations of sentences or different
27:00 - segments of our resources that we can
27:02 - combine automatically and review before
27:04 - we actually approve the translations but
27:07 - we will have them there in a database
27:09 - and we can make sure that we are being
27:11 - consistent in our translations because
27:14 - what happens when you upload a file or
27:16 - resource to a localization platform or
27:20 - tool usually the tool will divide your
27:24 - resource into many different segments
27:26 - that we call string
27:28 - when you see the word string in a
27:30 - localization platform that means a small
27:34 - segment of your resource that would be a
27:38 - file or a text file or any type of file
27:41 - that you uploaded to your platform when
27:44 - you upload your file to the platform the
27:47 - file will be divided into these strings
27:49 - right the string will be translated by
27:52 - your team or yourself if you are
27:54 - handling the translation process and
27:57 - after that you will have a translated
27:58 - string the translated string will be
28:01 - stored in a specific database of the
28:05 - service that you choose and that is how
28:07 - you gradually create your translation
28:10 - memory and then your translators can
28:13 - reuse the translations made by other
28:16 - translators to make sure that they are
28:18 - being consistent throughout the team
28:20 - that is great right so after that you
28:22 - can just take the string from the
28:25 - database and use it in your new transl
28:28 - ation it might not be exactly the same
28:30 - you might need to adapt it but it will
28:32 - save the save you or your translators a
28:35 - lot of time we have the database over
28:37 - here using the translation memory is
28:40 - helpful for saving time and for ensuring
28:43 - that you are being consistent while you
28:45 - translate the terminology and here we
28:48 - have what I was mentioning a few minutes
28:50 - ago the difference between TM and Mt
28:54 - these are acronyms that you will find
28:56 - very frequently in the localization
28:58 - tools of your choice we will find them
29:01 - frequently in crowding and you will find
29:04 - them often as acronyms so it's very
29:07 - important to differentiate them TM is
29:10 - translation memory it's the database and
29:13 - machine translation is Mt this is the
29:16 - automated process of creating the
29:18 - translations and this is the process of
29:20 - storing the translations in a database
29:23 - please take a moment to understand this
29:25 - difference because we will find them
29:27 - very frequently TM is translation memory
29:30 - and Mt is machine
29:33 - translation awesome and since we are
29:36 - mentioning artificial intelligence with
29:38 - machine translation that takes me to
29:41 - this concept of large language models
29:44 - llms you might have heard about them
29:46 - they are very popular right now with the
29:49 - rise of chat GPT and other similar
29:51 - models and chat Bots but what is an llm
29:55 - a large language model is a deep
29:58 - learning algorithm that can recognize
30:01 - summarize translate predict and generate
30:04 - content using very large data sets a
30:08 - large language model basically takes a
30:10 - huge data set and it learns from that
30:13 - data set it learns to recognize
30:15 - summarize translate predict and generate
30:18 - content based on the data set it was
30:20 - trained on so when you talk to for
30:23 - example Chad GPT and chat GPT gives you
30:26 - an answer to your PRP that is an answer
30:29 - generated automatically but it is based
30:32 - on the information or data set that the
30:35 - model was trained on that is exactly
30:38 - what powers these tools right now like
30:40 - chat GPT and other chat Bots that you
30:43 - can chat with to create content or to
30:46 - find answers to your questions these
30:48 - terms are fundamental if you're looking
30:50 - to dive into translation and
30:51 - localization and you will also find
30:54 - tools with artificial intelligence that
30:55 - are used exactly for this process
30:58 - because artificial intelligence is
31:00 - really changing how we translate and
31:02 - localize our resources the foundation of
31:05 - these models is called neural networks
31:08 - that work like the neurons in a brain
31:12 - generating different networks that
31:14 - process the data and generate a result
31:17 - so these are terminologies that you will
31:19 - find very often I just want you to be
31:21 - familiar with them before we find them
31:23 - in the
31:24 - platform another term that is super
31:26 - super super common and that you might be
31:29 - confused at first when you see them is
31:31 - numeronym numeronym are words that use
31:36 - numbers to represent an abbreviation for
31:39 - example in the localization context we
31:42 - find this L1 n that is a numeronym that
31:45 - represents the word localization the
31:48 - number 10 stands for the 10 letters that
31:51 - we have between the letter n and the
31:53 - letter N over here we have 10 letters
31:57 - since it's a very long word people tend
31:59 - to abbreviate it and they write the
32:01 - numeron name here but it's important to
32:03 - be familiar with this in this context
32:05 - and over here we have an even longer
32:07 - word which is
32:09 - internationalization and it's very
32:11 - common to abbreviate like this I 18 n
32:15 - the number 18 stands for the 18 letters
32:18 - between the letter I and the letter N at
32:21 - the end sometimes you may find the
32:24 - letter L over here in lowercase or in
32:27 - upper case but capitalizing the L is
32:30 - often helpful to distinguish it from the
32:32 - letter i that we have here because with
32:35 - certain fonts they can look very similar
32:38 - great so now that you're familiar with
32:40 - these Concepts that are fundamental for
32:42 - the localization process let's talk
32:45 - about prove reading when you translate
32:48 - something after that translation process
32:51 - comes the proof reading process the
32:53 - proof reading phase when you upload a
32:56 - resource to your platform form the
32:58 - resource will be divided into multiple
33:00 - strings right the strings will be
33:02 - translated and after they are translated
33:05 - they have to be approved by someone that
33:08 - process of approving the translations
33:11 - checking if everything is correct and
33:13 - also making changes if they find any
33:16 - inconsistencies or spelling mistakes or
33:19 - typos is called proof reading if they
33:22 - find anything if the proof readers find
33:24 - anything that shouldn't be there in the
33:27 - translations they can just modify it and
33:30 - make sure that you are providing the
33:32 - best translations possible for your
33:34 - users so we can Define improve reading
33:36 - as the process of checking updating and
33:39 - approving the translated strings
33:42 - translating and proove reading are two
33:44 - different stages of the localization
33:46 - process and we will look at these
33:48 - processes in more detail you will learn
33:50 - the steps involved and the different
33:53 - roles that team members can have to make
33:55 - sure that your content is localized
33:57 - correctly directly the role of proof
33:59 - reader is one of those key roles in the
34:02 - process and speaking of faces and roles
34:05 - let's talk about the different phases
34:07 - and roles of the localization process
34:10 - what steps are required for localizing a
34:13 - project where should you start here are
34:15 - the steps to help you answer those
34:17 - questions after you decide that you want
34:20 - to localize your platform or project
34:23 - there are many steps that you should
34:25 - follow or at least questions that you
34:27 - should consider
34:28 - first of all let's start with step
34:30 - number one defining the scope and the
34:33 - goals of your localization project
34:35 - before you start to localize any file
34:38 - basically it's important to take a
34:40 - moment to analyze these two aspects of
34:43 - your project the scope and the goals you
34:47 - should ask yourself questions like who
34:50 - is your target audience what are you
34:53 - trying to achieve how will you reach
34:55 - your goals do do you need to localize
34:58 - all your project files or just a few or
35:02 - do you have to create a new resources
35:04 - file to keep all your strings how will
35:07 - you localize the resources will you
35:10 - translate the resources yourself if
35:12 - you're bilingual or will you find a team
35:15 - to help you into how many languages
35:17 - would you like to localize your product
35:20 - what is your available budget to start
35:22 - with what is the timeline for your
35:25 - project are your goals realistic given
35:28 - your current budget if you're an
35:30 - organization will you involve your
35:32 - community in the translation process or
35:35 - will you hire a team to help you with
35:37 - that will you use automated tools like
35:40 - machine translation these questions are
35:43 - essential if you want to be successful
35:46 - defining clear and realistic goals can
35:49 - be very helpful for avoiding any
35:51 - unexpected challenges during the process
35:53 - you should write down your goals and
35:55 - make sure that you have a key outline of
35:58 - the steps that you will need to take to
36:00 - start execute and complete the
36:02 - localization process before things get
36:05 - more complicated planning from the start
36:08 - is the key to success now step two after
36:11 - you have all of that planned it's time
36:13 - to create the actual source files that
36:15 - will be localized source files is just a
36:19 - term that we use to refer to the files
36:21 - that you will localize the original
36:24 - files in your project having a clear
36:26 - initial idea of the complexity of a
36:29 - project will be helpful later on in
36:31 - terms of time management and budget
36:34 - required remember that planning is
36:36 - essential to save you time and resources
36:39 - if you have a very simple project then
36:43 - your course of action will be very
36:46 - different than if you have a very big
36:48 - project with many different thousands of
36:50 - millions of strings that you have to
36:51 - translate the complexity of the project
36:54 - will change your road map so Iz in that
36:58 - is also very helpful you should also
37:01 - evaluate how many times you will need to
37:03 - update the resources will you use a
37:06 - traditional translation process where
37:08 - you translate and then you just update
37:11 - the project every once in a while or
37:14 - will you localize your product
37:16 - continuously what type of tool do you
37:18 - need if you're going to localize it
37:20 - continuously those are questions that
37:22 - you should have answers for at this
37:24 - stage in the process and after that that
37:27 - step three is preparing your product for
37:30 - localization this is especially true for
37:32 - software products and this is very
37:34 - technology specific the tools that you
37:37 - use to internationalize a react app for
37:40 - example may be very different from the
37:43 - tools that you use for an Android
37:45 - application or an iOS application or
37:48 - even a game however the approaches and
37:51 - Concepts that you will use are
37:53 - essentially the same if you developing a
37:57 - web app application you will need to
37:58 - implement multilingual routing routing
38:01 - just means that you want to take your
38:03 - users into the specific part of your
38:07 - application where they can choose and
38:09 - see the content in their preferred
38:12 - languages to do this you have two
38:15 - options because it's very important for
38:17 - them to choose the right language and go
38:19 - to the right part of your website where
38:21 - they can access the resources in that
38:23 - specific language for that you will need
38:25 - to implement routing first of all you
38:27 - need to choose how you're going to
38:29 - represent that in the user interface and
38:32 - that is another UI consideration that
38:35 - you should be aware of but to actually
38:37 - implement this you have two main options
38:41 - you can either add the language code as
38:44 - a subdomain in the web application URL
38:49 - like this here we have for example the
38:51 - French subdomain for this website or you
38:55 - can also add the language code to the
38:59 - URL for example you can have it like
39:02 - this French language codes are also very
39:05 - important in the localization process
39:08 - and that is something that you might
39:09 - want to check as well when you start
39:11 - localizing your product there is a
39:14 - standard worldwide for how you can
39:17 - represent different languages with two
39:19 - or three characters like here we have
39:21 - French Spanish is es English is em and
39:25 - the type of abbreviation is also
39:27 - important for the actual implementation
39:29 - of this routing process these options
39:32 - are recommended for search engine
39:34 - optimization purposes so if you want to
39:37 - rank higher in search engines you should
39:39 - Implement multilingual routing with one
39:41 - of these
39:42 - options your software should also be
39:45 - able to handle and display any adapted
39:49 - numbers dates and currencies since
39:52 - localization may also involve adapting
39:55 - them into different formats for
39:57 - different different cultures let's say
39:58 - that you are creating an e-commerce app
40:01 - and you want to accept payments in
40:03 - dollars or Pounds or Euros you will need
40:07 - to adapt your user interface to show
40:09 - that specific symbol for the currency
40:12 - that the user has selected those are
40:15 - considerations that you should be aware
40:18 - of before you start the process and when
40:20 - you're making sure that everything works
40:22 - like you intended also date formats are
40:25 - very very important for example here we
40:29 - have a very different way to represent
40:33 - the same date if we are writing a
40:36 - specific date in the United States like
40:39 - this we can see that in the United
40:42 - States the day is written after the
40:46 - month but if we go to a different
40:47 - country like let's say Uruguay the day
40:51 - is written before the month in a date
40:53 - format that is the most commonly used
40:56 - format in in different cultures so this
41:00 - difference in how we actually represent
41:02 - the date is key to avoid any errors or
41:06 - misunderstandings in how the web app
41:08 - that you're developing or the platform
41:10 - that you're developing will be used by
41:12 - your users So to avoid any
41:14 - misunderstandings date formats is also
41:17 - super important to check another
41:19 - application is exactly what we were
41:22 - talking about here if you are accepting
41:25 - a payment in US Dollars you will have to
41:28 - write the symbol the dollar symbol but
41:31 - here if you are taking a payment in
41:33 - pounds from United Kingdom you will need
41:36 - to show this symbol in pounds how will
41:40 - you handle this in your user interface
41:43 - that is another very important aspect of
41:46 - internationalizing your web application
41:49 - another important aspect of preparing
41:52 - your software for translation is making
41:54 - sure that you are including the
41:56 - necessary context for your translators
41:59 - why because many internationalization
42:02 - tools just create the resource files
42:04 - where we keep all the strings but they
42:07 - created with only one key value pair for
42:10 - each piece of text they associate each
42:13 - piece of text in the source language in
42:16 - the original language to its
42:18 - corresponding translation but it's also
42:20 - very important to make sure that the
42:22 - resource files of your project include
42:24 - some contextual information of content
42:27 - and elements around them to choose the
42:29 - best translation possible try to include
42:32 - as much context as possible in your
42:35 - resources in your strings and finally
42:38 - another aspect is that your application
42:40 - should be able to handle pluralization
42:43 - correctly because different languages
42:45 - may have different numbers of plural
42:47 - forms some of these features may be
42:49 - available with the software development
42:51 - kit that you're using but you may need
42:53 - to add some of them using third-party
42:55 - libraries and that is always important
42:58 - to consider and check first however
43:00 - since it's very technology specific that
43:03 - is something that you will have to
43:04 - research about for your specific
43:08 - application great so that was step three
43:10 - internationalizing your software and
43:12 - getting everything ready if you analyze
43:14 - the scope of the project and you decide
43:16 - that you cannot complete it by yourself
43:18 - then it's time to assemble a team you
43:20 - may hire a team or if you are a
43:23 - nonprofit organization like free code
43:26 - Camp you can also use crowdsourcing to
43:29 - ask your community to help you with the
43:32 - translations you might be surprised by
43:34 - the number of general and kind members
43:36 - of your community who will be willing to
43:39 - help you achieve your goals with free go
43:42 - gam we are involving our community in a
43:44 - translation effort once you have your
43:47 - team or your community you can start to
43:49 - assign them roles and that is another
43:53 - key aspect of the localization process
43:55 - we will talk about Ro R specifically
43:58 - when we start diving into crowding but
44:01 - let's see a brief overview of these
44:04 - roles right now translators use the
44:07 - localization platform of your choice to
44:09 - translate the resources prove readers
44:13 - review edit and approve the
44:16 - translations developers work on more
44:18 - technical tasks they work on integrating
44:21 - the tools that you choose to automate
44:23 - the localization process as much as
44:26 - possible the developers can help you and
44:28 - your team to save a lot of time by
44:30 - automating tasks that are repetitive and
44:33 - that can be optimized and finally
44:36 - project managers coordinate the tasks of
44:39 - the project to make sure that the
44:41 - localization project moves forward
44:44 - smoothly as fast as possible awesome
44:47 - let's go to step five which is actually
44:49 - choosing the localization tools after
44:52 - you have your team and you know the
44:54 - roles that they're going to have you can
44:57 - start to choose localization tools
44:59 - choosing the right localization tool can
45:01 - be essential for reaching your goals in
45:04 - the world of localization there is a
45:06 - type of tool called localization
45:08 - management platform this type of system
45:11 - is designed to help you automate
45:13 - repetitive tasks with the goal of
45:15 - optimizing your team's workflow humans
45:18 - will still play a key role in the
45:21 - localization process but with the help
45:23 - of a translation management system or a
45:26 - localization management system they can
45:28 - reach their goals much faster usually
45:31 - these systems can be integrated with
45:35 - content Management Systems to import
45:38 - content automatically from other
45:40 - platforms such as blogging platforms for
45:43 - example let's say that you are creating
45:46 - a publication and you want to translate
45:48 - your articles if you have a localization
45:51 - management platform to work on you can
45:54 - usually integrate that with a Content
45:56 - man management system of your choice and
45:59 - keep your content translated by
46:02 - importing your resources then localizing
46:05 - them and exporting them as the
46:08 - translated versions with the proper
46:11 - Integrations translation Management
46:13 - Systems can also check if there're
46:15 - happening any changes in the source
46:17 - files and import new content
46:19 - automatically to start localizing it so
46:23 - that is a key aspect of data exchange
46:26 - between the localization management
46:28 - platform and content Management Systems
46:32 - a real world example of this process is
46:35 - right next to us free cam translates its
46:38 - resources on crowding when a file from
46:41 - free Cam's curriculum changes the new
46:44 - content is updated automatically in the
46:46 - system in crowding in our project so
46:49 - contributors can translate it and
46:51 - publish it very quickly automating this
46:53 - process can be very helpful especially
46:55 - for large organizations ations with
46:57 - different projects and files that's the
46:59 - advantage of using a localization
47:02 - management
47:03 - platform now it's time to translate the
47:06 - resources usually these platforms will
47:09 - divide the source content into what they
47:12 - call strings we already saw that concept
47:14 - right strings there are parts of the
47:16 - original text that you can translate
47:19 - save their translations and the software
47:21 - will take care of storing and combining
47:24 - them in the correct place in your file
47:27 - after you have those resources
47:28 - translated then it's time to prove rthm
47:31 - which is one of the most important
47:33 - phases of this process proof readers
47:35 - should check if the translations are
47:37 - accurate if there is a better way to
47:39 - adapt them to a culture or language they
47:42 - can check if there are typos or
47:44 - misspelled words and if the correct
47:46 - format is being used they can edit and
47:49 - approv their translated strings and
47:52 - approve the strings once everything is
47:54 - ready all those small details toils
47:57 - really count for the user experience so
47:59 - this step should be taken very seriously
48:02 - and after the resources and the
48:05 - translations have been Pro R it's time
48:07 - to export the localized resources if
48:11 - your project is small you have the
48:13 - option to do this manually but if your
48:16 - project is more complex you can choose
48:18 - to automate this process with different
48:20 - Integrations like we mentioned on your
48:22 - localization management system for
48:25 - example crowding the platform that we
48:27 - will be working with during the course
48:29 - has Integrations with different
48:31 - platforms including GitHub Google Drive
48:34 - Google Sheets Dropbox MailChimp
48:38 - WordPress and so on it has hundreds of
48:40 - Integrations that you can add to your
48:43 - project to synchronize the content
48:46 - automatically if your translations are
48:48 - ready and approved for example in the
48:50 - context of GitHub and you set up a
48:52 - GitHub integration the translated files
48:55 - will be updated automatically in your
48:58 - Project's repository you can even
49:00 - configure where the translated files
49:02 - will be stored that is the importance of
49:04 - Integrations and after you have
49:06 - everything set up after exporting that
49:08 - automatically or manually your project
49:11 - will be translated but you should still
49:13 - check for changes because projects and
49:15 - platforms can evolve over time files can
49:18 - change as you add new features and
49:20 - content and this is especially true in
49:23 - the context of free code cam because we
49:25 - add new content and update our existing
49:27 - curriculum on a regular basis awesome so
49:31 - now that we covered all the localization
49:34 - fundamentals we can start talking about
49:36 - crowding fundamentals for localization
49:39 - projects we will talk about crowding you
49:41 - will see how we are applying all of
49:43 - these Concepts in this particular tool
49:46 - so let's
49:51 - continue great welcome to the second
49:53 - part of the course now we will dive into
49:56 - crowding fundamentals so let's begin
50:00 - crowding is a localization management
50:02 - platform that can be described as a
50:06 - cloudbased solution that streamlines
50:08 - localization management for your team
50:11 - that is exactly how crowding defines the
50:14 - platform crowding can be used by
50:17 - individuals by teams or by organizations
50:20 - we will talk about the different
50:22 - features and some of these features even
50:25 - overlap between teams individuals and
50:27 - organizations we asked the founder of
50:30 - crowding how he would describe crowding
50:32 - in five words and this is what he said
50:36 - continuous localization for modern
50:38 - companies so that is what crowding is
50:40 - for you will be applying your knowledge
50:43 - of localization on this platform and you
50:45 - will even learn how to localize a
50:47 - website with crowding services and
50:49 - Integrations the main goal of crowding
50:51 - is to expand the potential of agile
50:54 - localization agile localization ization
50:57 - can be defined as a process in which
50:59 - localization is incorporated into an
51:02 - agile product development cycle a cycle
51:05 - in which a product is constantly being
51:07 - updated in an iterative approach so you
51:10 - launch your product you get feedback you
51:13 - update it based on the feedback and that
51:15 - process is repeated in a cycle
51:17 - continuously in this context the word
51:20 - agile is being used to describe the
51:23 - localization process the translations
51:25 - are continuously and updated as the
51:28 - product changes however constant updates
51:30 - also require constant management
51:33 - teamwork file uploads and downloads and
51:35 - exports platform deployments and so on
51:38 - the process could become very
51:39 - complicated very quickly if your team
51:42 - does not have the right tools but with a
51:44 - localization management platform like
51:46 - crowding you and your team can save time
51:49 - and accomplish your goals more
51:50 - efficiently that's the ultimate goal to
51:52 - localize the product as quickly as
51:54 - possible as it evolves that is the cycle
51:57 - that we are referring to here and that
52:00 - is exactly what free Camp does now let's
52:03 - talk about the advantages of crowding
52:05 - why you could choose crowding as your
52:07 - localization management tool you can
52:09 - connect with external Services through
52:12 - integration to automate part of your
52:14 - localization process you can store
52:16 - translations on cloud-based services and
52:20 - Grant access to team members and
52:22 - contributors from all around the world
52:24 - with different roles and permissions you
52:26 - you can also generate machine
52:27 - translations automatically when a
52:29 - resource is created and ask translators
52:32 - to check and edit them to save time your
52:35 - team can also check the quality and
52:37 - format of the translations with crowding
52:40 - quality assurance spellchecking and
52:42 - proof reading features and you can also
52:45 - generate reports create custom workflows
52:47 - assign roles and permissions invite new
52:50 - members and more so as you can see it's
52:53 - a platform that will make the
52:54 - localization process much easier for you
52:57 - and your team crowding has a free plan
53:00 - that is what we will be working with
53:02 - during the course sometimes we may see
53:05 - if some features that are specific for
53:08 - organizations since pram is a nonprofit
53:11 - organization we have a different plan
53:14 - the crowding offers for nonprofits but
53:16 - for individuals who want to start
53:18 - localizing their content for free all
53:20 - the essential features are included like
53:23 - unlimited public projects one private
53:26 - project 60,000 hosted words one
53:29 - integration with an external service
53:32 - features for translators efficiency and
53:34 - unlimited translators in the public
53:36 - projects that you can have that is a
53:39 - free plan for open-source projects and
53:41 - educational institutions like fre Cod
53:43 - Camp crowding has special licenses if
53:46 - you want to use crowding for an open-
53:47 - source project sign up for a free
53:49 - account set up your project and send the
53:51 - team the crowding team a request apply
53:54 - for an academic license if your project
53:56 - has educational purposes each granted
53:58 - license will include an unlimited number
54:01 - of projects strings and members so if
54:03 - you're an educational or open-source
54:06 - project or institution you can contact
54:08 - that team specifically for open source
54:10 - and educational
54:16 - projects let's talk about important
54:18 - terminology for working on crowding
54:21 - strings we talked about them but now
54:23 - let's define them formally strings are
54:25 - smaller segments of the original text
54:28 - from your file that can be translated
54:31 - and saved individually into all the
54:34 - translations already they are combined
54:37 - to generate the localized version of the
54:39 - resource that you need that is important
54:41 - to keep in mind we also find the term
54:43 - Source language The Source language is
54:46 - the language of the original resource
54:48 - for example free code com's Source
54:50 - language would be English since our
54:52 - curriculum and documentation are
54:54 - originally written in English
54:56 - we also find target language this is the
54:59 - language that our resources are
55:01 - translated into it's important to know
55:04 - the differences source and Target a
55:06 - project could have multiple Target
55:08 - languages okay like for goam or you
55:11 - could have only one target language if
55:13 - you only want to translate your
55:14 - resources into a specific language we
55:17 - take the source language and we
55:19 - translate it into the target
55:22 - language QA checks stand for quality
55:25 - assurance checks these are automated
55:27 - tests that check if the translations
55:30 - have the correct format and spelling
55:32 - crowding has many QA quality assurance
55:35 - features that can help your team find
55:37 - and fix potential errors and they're
55:39 - essential for the proof reading phase of
55:41 - the process QA stands for quality
55:44 - assurance that is very important and
55:47 - then we find the term glossery glossery
55:49 - is basically a database of important
55:52 - terms in your project with their
55:54 - corresponding meanings one is a glosser
55:57 - helpful well it gives your translators
55:59 - more context about a specific term and
56:03 - it helps them to choose the most
56:05 - accurate translations for a particular
56:08 - word great and then we go to screenshot
56:11 - a screenshot is a picture of what you
56:14 - can see on your computer screen at a
56:16 - particular moment in time if your
56:19 - localization management platform
56:21 - supports this you can upload screenshots
56:24 - and Associate them to specific strings
56:27 - to give your translators more context of
56:30 - where this the specific string appears
56:32 - on your platform or resource and after
56:35 - that we also find crowdsourcing we
56:37 - mentioned this before but now we're
56:39 - going to Define it formally crowd
56:41 - sourcing is a localization practice
56:44 - based on community cooperation it's
56:47 - basically engaging your community in the
56:49 - localization process fram's translation
56:52 - effort is an example of
56:54 - crowdsourcing we also find pre
56:56 - translation it is an automated technique
56:59 - to translate your project automatically
57:01 - using machine translation or translation
57:03 - memory when you upload your files
57:06 - remember that we talked about machine
57:07 - translation and translation memory
57:10 - before right we Define them individually
57:13 - but now we are applying both of them we
57:15 - are combining them to form a new term
57:17 - called
57:18 - pre-translation we can either take the
57:21 - translations from our existing
57:23 - translation memory or use machine
57:26 - translation to translate new terms but
57:29 - the important thing here is that it is
57:31 - an automated process and we also find
57:34 - Integrations crowding has hundreds of
57:36 - Integrations and we will cover some of
57:38 - them in the course they are connections
57:40 - that you can make between crowding or
57:43 - the localization management platform of
57:45 - your choice and other applications or
57:48 - Services you could have an integration
57:50 - with GitHub Google Drive Google Sheets
57:54 - and finally the last three terms that
57:56 - we're going to Define here are more
57:58 - technical in nature for developers but
58:01 - it's important that you even if you're
58:03 - not directly related to the development
58:05 - aspect of the process it's important
58:07 - that you understand what they are first
58:09 - we find web hooks web hooks are
58:12 - automated messages that an application
58:14 - or platform will send to another
58:17 - application or platform when specific
58:19 - events happen basically what happens
58:22 - with a web Hook is that you have two
58:24 - applications let's say that something
58:26 - happens in one of those applications
58:29 - when that happens you will be able to
58:30 - communicate between the platforms and
58:34 - through web hooks run a specific process
58:37 - to handle that event and finally we will
58:41 - talk about the concept of an API an API
58:44 - is an application programming interface
58:47 - this is a more Technical and development
58:50 - oriented term it's basically an
58:52 - intermediary software that allows two
58:55 - applications to communicate with each
58:57 - other by sending information following
59:00 - specific protocols and rules of course
59:02 - crowding has an API that can help you to
59:05 - integrate localization into your
59:07 - development process in a more automated
59:09 - way and those are all the most important
59:13 - Concepts that you will need to know to
59:15 - get started with crowding so let's start
59:18 - diving into crowding and let's go to
59:20 - their main website crowding dcom we will
59:23 - see how you can create a crowding
59:25 - account and we will start translating a
59:27 - file so I will see you in the next part
59:30 - of the
59:33 - course great so after this detailed but
59:37 - super important introduction into the
59:39 - fundamentals of localization now it's
59:42 - time to dive into practice and actually
59:45 - start working on crowding so let's see
59:47 - how you can create your crowding account
59:49 - the first step is to go to crowding dcom
59:53 - this is where you can access all the
59:55 - resourc sources tools and products of
59:57 - crowding crowding is an example of a
60:00 - localization management platform like
60:02 - we've been talking about we see
60:04 - continuous localization you're already
60:06 - familiar with this concept and you can
60:08 - see that crowding is mostly focused on
60:11 - software localization but we will also
60:13 - see examples of other resources like
60:15 - translating PDF resources to illustrate
60:18 - all the basic functionality and then you
60:20 - can apply these tools and principles to
60:23 - other types of resources like mobile
60:25 - apps games websites and other types of
60:28 - products after you land on crowding dcom
60:32 - you will see this green sign up button
60:35 - you click here and then you will be
60:37 - taken to the register page start your
60:40 - localization Journey with crowding and
60:42 - here you will see two different options
60:44 - crowding dcom which is selected by
60:46 - default and crowding Enterprise crowding
60:49 - decom is where you can create a personal
60:51 - crowding account for a small team and
60:54 - crowding Enterprise is more oriented
60:56 - towards organizations if you register
60:59 - for crowding Enterprise you can create a
61:01 - new organization like for example free
61:03 - code Camp is a nonprofit organization
61:06 - and crowding has special plans for
61:08 - nonprofits for open- Source projects and
61:11 - for educational projects and they can
61:13 - create in an organization for free and
61:16 - you can also try it for free for 30 days
61:20 - so let's see how you can register here
61:21 - forcing.com first of all you will need
61:24 - to write your email to sign up for a new
61:26 - account then you will have to enter a
61:28 - username a password and you will need to
61:31 - agree to the terms and conditions and
61:33 - your privacy policy you will also see a
61:36 - check by Cloud flare over here so let's
61:39 - do them I'm going to write my email over
61:42 - here and then I'm going to choose a
61:44 - username let's say Stefania demo after I
61:47 - do that I will need to write a password
61:50 - once I see that the password is strong I
61:53 - can still make it stronger let's just
61:55 - add and something else here okay great
61:58 - now it says that the password is secure
62:01 - secure should be your Target because it
62:03 - will be give you the highest protection
62:05 - against any type of unauthorized signin
62:08 - or someone using your password it's
62:11 - always prefer to reach this level of
62:14 - security so let's just agree to the
62:17 - terms and conditions and let's create
62:20 - our account if you're already a member
62:22 - and you're already registered for
62:24 - crowding you can click here to log Lo in
62:26 - okay so next time when you are logging
62:28 - into your account just click here and
62:30 - you will be able to enter your email and
62:32 - your password so let's create an account
62:36 - awesome this is the main dashboard or
62:40 - the main screen that you will see when
62:41 - you create your account you will see
62:43 - that you will need to verify your email
62:45 - to be able to reset your password
62:47 - receive email notifications and enhance
62:50 - security so let's just go to my email
62:54 - and let's confirm this before we
62:56 - actually start to dive into the
62:58 - different elements that we have here
63:00 - because crowding is very powerful if I
63:03 - go to my email over here I can see that
63:05 - I have an email from crowding excited to
63:08 - have you on board welcome Stefania demo
63:11 - thank you for trusting crowding with
63:12 - localization to secure your account and
63:15 - receive email updates about the
63:16 - activities in the projects you create
63:19 - and join please confirm your email by
63:21 - clicking the button below here I'm going
63:23 - to click on this link and I will open a
63:26 - new window and I will see this thank you
63:28 - for verifying your email and now I can
63:32 - just close this confirmation message and
63:35 - now I have a verified crowding account
63:38 - with a verified email so everything is
63:40 - ready to get started right now I am on a
63:44 - free account so we will see all the
63:46 - features that we have available if we go
63:49 - to crowding dcom again landing page and
63:54 - we go to pricing over here
63:56 - we can see that they have specific plans
63:59 - and what we're going to cover in the
64:02 - first part of the course is related to
64:04 - the free plan they have a free plan to
64:06 - start localizing your content for free
64:08 - with all the essential features for
64:10 - translators included unlimited public
64:13 - projects 60,000 hosted words one
64:16 - integration features for translator
64:19 - sufficiency and we will talk about many
64:21 - of these features in the course we also
64:24 - see one private project and that is
64:26 - great because we're going to work with
64:28 - one private project during the course
64:30 - but you can also create unlimited public
64:33 - projects and you will also be able to
64:35 - add unlimited translators in public
64:38 - projects just note that users on a free
64:42 - plan donate their translations to
64:44 - crowding translation memory remember
64:46 - that we talked about translation memory
64:49 - where the it's like a database of all
64:51 - the strings that have been translated in
64:55 - a project project that you can reuse
64:57 - well when you use the free plan you
64:59 - donate your translations to crowding
65:01 - translation memories so they can help
65:03 - others to reuse those
65:10 - translations and after you have your
65:13 - account already created let me show you
65:15 - how you can log into your account again
65:17 - if you sign out and then you want to log
65:20 - back in you just go to Crow in.com you
65:23 - click on login over here and in crow.com
65:26 - you just need to enter your email and
65:31 - this is the email that I used to
65:33 - register and this is my password I'm
65:36 - going to log in and now cing is asking
65:39 - me if I want to stay logged in they can
65:41 - remember your session so you wouldn't
65:43 - need to log in as often you can choose
65:45 - to do that or not it's definitely up to
65:48 - you you will see your username over here
65:51 - not
65:52 - now and voila we're back at the
65:56 - dashboard the main dashboard if you want
65:58 - to log out of your account at any moment
66:02 - you just need to click here on the
66:04 - profile on your profile image and go
66:07 - here to log out that will log you out of
66:11 - your account and then you can log back
66:13 - in awesome now you know how to create
66:15 - your account how to log out and how to
66:17 - log in again whenever you want to work
66:20 - with
66:24 - crowding
66:27 - great and now that you know how to
66:29 - create a personal account on crowning
66:31 - decom let's also check how you can sign
66:34 - up for a crowding Enterprise account in
66:37 - case you are representing an
66:39 - organization like free code Camp a
66:41 - nonprofit organization or another type
66:44 - of organization and you want to try
66:46 - crowding Enterprise to do that you would
66:48 - just need to click here on crowding
66:50 - Enterprise then enter your organization
66:52 - name this will be the URL of your
66:55 - organization on crowding so here you
66:58 - could have for example free goam demo.
67:01 - crowding
67:04 - docomo here your username and your
67:07 - password and agree to the terms and
67:09 - conditions and the privacy policy you
67:12 - will need to follow a similar process to
67:15 - verify your email like we did before and
67:18 - after that you will have your
67:20 - organization ready if you want to enter
67:22 - an existing organization just click here
67:25 - and you will be able to enter your
67:27 - organization's URL for the course we
67:30 - created a demo organization free codam
67:33 - course demo. crowding
67:35 - dcom and after you enter the URL you
67:39 - just click here on continue and you will
67:42 - be able to log in to the Enterprise with
67:44 - your email or username and your password
67:47 - you can also get a magic link to sign in
67:50 - without actually entering your email or
67:53 - password but let me show you how this
67:55 - works and what you would see once you're
67:56 - inside your crowding Enterprise account
67:59 - I am going to write my email and my
68:03 - password crowding is asking me if I want
68:06 - to stay logged in we can't remember your
68:08 - session so you wouldn't need to log in
68:10 - as often so we can choose to stay logged
68:13 - in or not right now you can choose
68:15 - either one of these options then you
68:17 - will see crowding logo and over here
68:20 - this is the main dashboard that you will
68:22 - see for a crowding Enterprise account
68:24 - you can see it is very similar to the
68:27 - dashboard that we had for the personal
68:29 - account with a few differences and we
68:31 - will be covering them during the course
68:34 - as well we will see how you can use
68:35 - crowding from the perspective of an
68:37 - organization or Enterprise great so
68:40 - let's
68:44 - continue now let's see how you can
68:46 - actually activate your free plan on
68:48 - crowding currently you can do this by
68:51 - going to crowding
68:55 - if you click here on pricing and you are
68:57 - logged into your account as I am here in
69:00 - my Stefania demo account you will see
69:03 - this plans for everyone and over here
69:06 - you can see the free plan you can also
69:08 - see your current account usage here you
69:11 - may find that you're using some Advanced
69:13 - features and if you don't see the option
69:15 - to upgrade to the free plan then it
69:17 - might be because of this and you may
69:19 - need to remove some Advanced features
69:21 - for that you may have used during the
69:23 - trial but to activ AC at the free plan
69:26 - you just go here and you should see this
69:28 - button but highlighted in green if you
69:31 - click on this button then you will be
69:33 - activating your free plan and you should
69:35 - see a confirmation message the
69:38 - confirmation message should be similar
69:41 - to this one get started with your free
69:43 - crowding plan create unlimited public
69:46 - projects and invite translation agencies
69:48 - or your community to translate remember
69:50 - you go to pricing then you click on this
69:52 - button which should be green to enable
69:54 - it if you don't see this button as an
69:56 - option then you may have some Advanced
69:59 - features enabled in this case you can
70:01 - have up to three file formats and that
70:03 - is included in the free plan but if you
70:05 - see other things here under this
70:08 - category this may be preventing you from
70:10 - getting your free account so make sure
70:13 - to remove them and then click on this
70:24 - button
70:26 - great so now let's see how you can
70:27 - customize your profile one of the first
70:30 - things that you might want to do after
70:32 - you create your crowding account is to
70:34 - customize your profile so let's do that
70:38 - after you create your crowding account
70:40 - you might see this short message and
70:42 - Survey that you will only see once after
70:45 - you create your account it says welcome
70:47 - to crowding we're glad to have you on
70:49 - board let us know you better so we can
70:51 - customize your experience how would you
70:53 - describe yourself here you can choose
70:56 - one of these options localization
70:57 - manager developer or translator Pro
71:00 - reader you can also specify how you
71:02 - would describe yourself here by writing
71:05 - a brief sentence and then you can click
71:07 - on submit or you can just close the
71:09 - short survey you can answer it or close
71:12 - it it's totally up to you so for now
71:15 - let's close it and now we can see the
71:17 - dashboard like you will see it after
71:20 - submitting the survey great so once we
71:22 - have that ready it's time to do one of
71:25 - the the first things that you will
71:26 - probably want to do after creating your
71:29 - crowding account which is customizing
71:32 - your profile to customize your profile
71:34 - you just need to go here and click on
71:37 - the small profile image which will have
71:39 - your initial there it's at the top right
71:43 - and then after you click on it choose
71:45 - settings from the drop-down menu like
71:48 - this in your settings you will see many
71:52 - different tabs but the first one is
71:54 - profile
71:55 - in your profile you will find many many
71:58 - many different settings over here but
72:01 - let's talk about them in detail first we
72:03 - find your profile picture you can drag a
72:06 - picture here or select a file from your
72:09 - file system you can also remove your
72:11 - current image this button will be
72:13 - enabled when you customize your image
72:16 - then we find general information like
72:19 - full name your first name and last name
72:23 - your username which you can just change
72:26 - whenever you need to of course if it's
72:28 - not already taken by another crowding
72:31 - user we also see our email this is not
72:33 - publicly visible the email will be used
72:36 - for account related notifications like
72:39 - password resets project activity updates
72:42 - and invitations to projects you can set
72:44 - up an additional login method to have an
72:46 - alternative for accessing your account
72:49 - and here we have an option to connect
72:50 - that to protect your account that is
72:53 - recommended after that you can also
72:55 - write your company your job title and
72:58 - pronouns he him she her or other or
73:01 - prefer not to say by default you will
73:03 - see this marked I will choose she her
73:07 - and after that you will see about me you
73:10 - can write a brief description of
73:11 - yourself and that will be shown publicly
73:14 - on your profile if you choose to make
73:16 - your profile public we also see crowding
73:19 - language
73:20 - English here you will see your time zone
73:23 - it might be customized you might might
73:25 - need to choose it from the drop- down
73:28 - menu and you can filter like for example
73:31 - Monto from youry we can see it over here
73:34 - if we need to choose it but you can
73:36 - customize this like you need to then the
73:40 - time format is either 24 hours or a.m.
73:43 - p.m. the time format that you will see
73:46 - in crowding and here we have a list of
73:49 - preferred Languages by default you will
73:52 - see English but you can also add other
73:55 - preferred languages let me show you how
73:57 - you can add Spanish for example if you
74:00 - write Spanish here you can filter the
74:02 - list to all the items list items that
74:06 - have the word Spanish I'm going to
74:08 - choose Spanish in general over here and
74:13 - after you check the check box you will
74:15 - see that language appearing over here
74:18 - and here you can Mark a language as
74:21 - native are you a native English speaker
74:24 - then this should be selected are you a
74:26 - native Spanish speaker then this should
74:28 - be selected okay you will see that it is
74:31 - saving your changes automatically over
74:34 - here and what happens if you just want
74:36 - to remove a language you select it by
74:39 - mistake or something like that and for
74:41 - some reason you want to delete it just
74:44 - click on it like this and you will
74:46 - delete it from the list awesome right
74:49 - you can also just search here but
74:51 - filtering the search list is always
74:53 - super helpful and the the options are
74:56 - very specific you can choose the
74:58 - language from a specific region or
75:01 - country so you have English from from
75:03 - Puerto Rico you have English from Japan
75:06 - you have English from India so it's very
75:09 - specific and you can customize this to
75:11 - fit your needs after that we also see a
75:14 - new Option appearance you can select how
75:17 - you want crowding to look select a
75:19 - single theme or sync it with your system
75:22 - automatically switching between day and
75:24 - night themes
75:25 - you can choose light theme dark theme
75:28 - this is the Dark theme let me show you
75:30 - this the Dark theme or you can make it
75:33 - match the current theme of your system
75:36 - in this case I have a light theme
75:39 - because I'm recording this during the
75:40 - day so it might be helpful for your eyes
75:43 - if you just C sink it to your system but
75:46 - for now let's just keep it in the light
75:48 - theme and finally privacy this is very
75:51 - important you can height the projects
75:54 - and it tabs from displaying publicly on
75:57 - your profile page if you check this
76:00 - checkbox you will make your profile
76:03 - private by default it's not private so
76:07 - you should be aware of this and go here
76:08 - immediately if you don't want your
76:11 - projects and activity to be public and
76:14 - finally the last option is deleting your
76:16 - account but you will see a shiny red
76:20 - button over here because deleting an
76:21 - account will immediately delete all the
76:24 - projects created under your account and
76:27 - all the associated data deleted accounts
76:30 - cannot be restored not even by the team
76:33 - apparently based on this message so be
76:37 - completely sure that this is what you
76:38 - want to do when you press that button
76:40 - delete account awesome now you know how
76:43 - to customize your profile here in your
76:46 - account settings you will see other tabs
76:49 - like account notifications API security
76:53 - log o off and and beta features let's
76:56 - just have a quick dive into these
76:58 - options so you can see them your account
77:00 - tab has the the option to change your
77:03 - password you can also have your security
77:05 - Keys over here which are physical
77:07 - devices that add an extra layer of
77:10 - security to your online accounts you can
77:12 - register your security key here and you
77:15 - can also enable two Factor
77:17 - authentication to increase your
77:19 - account's security you can click here on
77:21 - enable to enable it and you can also
77:24 - create create SSO connections manage the
77:27 - accounts you have linked to your
77:28 - crowding account these connections allow
77:31 - you to log into crowding with a single
77:33 - click and remember that you have the
77:34 - option to log in with your Google
77:36 - account your Facebook account GitHub X
77:39 - and gitlab account and here you see a
77:42 - list of devices that have logged into to
77:44 - your crowding account and you can revoke
77:46 - any sessions that you do not recognize
77:48 - so this is for your own protection and
77:50 - it's a great feature you can also choose
77:52 - to revoke all the sessions if you need
77:54 - to after that we have notifications
77:56 - where you can customize all your
77:59 - notifications slack integration product
78:01 - updates H notifications you can set up a
78:05 - custom channel for the notifications and
78:07 - these are your Global notification
78:09 - settings you can send notifications for
78:11 - users and roles Integrations new strings
78:14 - language progress API integrative
78:17 - vendors content issues mentions tasks
78:21 - messages discussions and API
78:24 - notification
78:25 - you can choose whether to send the
78:27 - notifications in app or by email and if
78:30 - you just deselect this you will be
78:33 - deselecting all of them at once but if
78:35 - you enable this you will be enabling all
78:37 - of them and you can also disable that by
78:41 - email as well or you can enable and
78:43 - disable them individually that is great
78:46 - you can customize it to fit your needs
78:48 - and we will talk about these features in
78:49 - detail during the course after that we
78:52 - also find the API because crowding has
78:54 - an API
78:55 - that developers can work with the
78:57 - crowding API version two is a
78:59 - full-featured restful API that helps you
79:01 - integrate localization into your
79:04 - development process you can create
79:06 - personal access tokens for authorization
79:08 - when working with the crowning API the
79:11 - command line interface some of the
79:13 - Integrations and plugins here is where
79:16 - you can create a new token if you need
79:18 - to you have your personal account
79:20 - security logs all the login events and
79:23 - all the events related to your your
79:24 - account you also have o off applications
79:28 - you can create o off applications to
79:30 - access the crowding API and here we have
79:33 - some beta features that you can choose
79:35 - to enable if you would like to try them
79:37 - but they are experimental and still in
79:40 - developments so they are not quite ready
79:42 - for production they may change break or
79:45 - disappear at any time you can enable
79:47 - this if you would like to participate on
79:49 - that beta features testing process
79:52 - awesome now you know how to customize
79:54 - your profile and we talked about your
79:56 - account settings so let's start diving
79:59 - into the Practical aspects of croing and
80:02 - let's create a project in the next part
80:04 - we will create our first project in
80:10 - crowding great so now that you know how
80:12 - to customize your profile let's create a
80:16 - project we will do that from our profile
80:18 - page if you're in a different part of
80:21 - the platform like your account settings
80:23 - you can go back to your profile page by
80:25 - clicking on this small profile image at
80:28 - the top right and then clicking on your
80:32 - username here the first item that you
80:35 - can see in the drop-down menu yes you
80:38 - can do that or you can also click here
80:40 - and go to home this is your homepage
80:43 - this is where you will see all your
80:45 - projects you can explore other projects
80:48 - you will also see your activity your
80:50 - account activity over here in the
80:53 - activity tab to create a a project you
80:55 - have two different options you can
80:57 - either click here on the green create
80:59 - project button or you can click here on
81:02 - this gray button they are both
81:04 - equivalent and they both take you to
81:07 - exactly the same page so let's click on
81:09 - the green button since this is usually
81:12 - what we see first and that will take us
81:15 - to a page where we can fill fill in all
81:18 - the necessary information for our
81:20 - project like our project name our
81:23 - project address here this is the URL
81:27 - where we can find our project it must be
81:31 - unique if your project has multiple
81:33 - words and you write the those words here
81:36 - in the project name they will be
81:38 - connected here so let's see this free
81:40 - code Camp project demo you can see that
81:43 - as I type these words the project
81:46 - address is filled in automatically and
81:49 - the words are connected by a hyphen over
81:52 - here that is very helpful because URLs
81:55 - cannot have spaces so they have to be
81:57 - connected by hyphens and this URL has to
82:01 - be unique if this URL is not available
82:05 - on crowding then you will see a warning
82:07 - and you will need to add some variation
82:09 - to the URL you also see project privacy
82:13 - settings if the project is public they
82:16 - will be visible to everyone you can
82:18 - restrict access to specific languages
82:21 - after the project is created that is for
82:24 - a public project but by default the
82:26 - project will be private if you don't
82:30 - change this option a private project is
82:33 - visible only to the invited project
82:35 - members and we will see how you can
82:37 - invite project members in the part of
82:39 - the course where we talk about teams and
82:41 - collaboration for now let's keep our
82:43 - project private since we have a free
82:46 - account and the free account includes
82:48 - one private project after that we find
82:51 - the source language remember that we
82:53 - talked about the source language The
82:55 - Source language will be English we're
82:58 - going to translate a PDF file to show
83:00 - you all the basic features for now all
83:02 - the basic features and the PDF that we
83:05 - will be uploading will be in English so
83:07 - that will be our source language if you
83:09 - click here you will see a list with all
83:12 - the available Source languages that you
83:14 - can choose from you have very specific
83:17 - options so let's say that you want to
83:19 - filter the list by Spanish you can
83:21 - filter the list by Spanish and you also
83:23 - see Spanish specific to each one of
83:26 - these countries or you can also choose
83:29 - Spanish in general so that is great you
83:32 - can filter the list and after you choose
83:34 - the source language you will need to
83:36 - choose the target languages you can have
83:38 - one target language or multiple Target
83:41 - languages and crowding gives you that
83:43 - option to customize your project to fit
83:46 - your needs you can choose as many as you
83:48 - need you just need to check their check
83:50 - boxes and they will be added so let's
83:53 - let's say that we we want to create a
83:55 - demo project with a target language in
83:59 - of
84:01 - Spanish
84:04 - Japanese
84:06 - Italian Portuguese and we also want
84:10 - Portuguese
84:11 - Brazilian and Bengali as well let's just
84:15 - choose these languages to show you that
84:17 - you can select multiple Target languages
84:20 - and you will see them added to this list
84:22 - if you want to remove all the languages
84:24 - at once you can clear the list here by
84:27 - clicking on this trash can or you can
84:30 - also remove them individually by
84:32 - clicking on the language let's just
84:34 - remove
84:36 - Spanish and that will remove it we can
84:38 - add it again if we need to no worries
84:42 - you can also sort them alphabetically or
84:44 - sort them by popularity that is very
84:47 - helpful and it will also apply to your
84:49 - search another great option that you can
84:51 - use is that you can prefill the list
84:53 - with the top to 30 languages that are
84:56 - most popular on crowding without having
84:58 - to select them manually so if you're
85:01 - starting a project and you want to use
85:03 - crowd sourcing and you want to start
85:05 - translating your project to the most
85:07 - popular languages this option will save
85:10 - you some time you can also create custom
85:13 - languages as well that is another
85:15 - amazing feature that we have here on
85:17 - crowding if we click here on custom
85:20 - languages we will see the option to add
85:23 - a dialect
85:25 - initially you will not see anything
85:27 - because nothing to there is nothing to
85:28 - display we don't have a custom language
85:31 - but if you do need to create a custom
85:32 - language you can click on ADD and then
85:35 - you will be taken to this dialogue where
85:38 - you can write the name of the language
85:41 - it choose if it is a specific dialect of
85:44 - another language you can see the the
85:48 - language code on crowding how that
85:51 - language will be described with a a
85:54 - specific code you can also write a three
85:57 - letters code and a local code an example
86:00 - would be like English but from Great
86:02 - Britain if it's very specific to a
86:05 - region after that you have text
86:07 - Direction because some languages are
86:09 - written from left to right while some of
86:11 - them are written from right to left so
86:13 - you can choose the text direction for
86:16 - the custom language and you can also
86:18 - select the plural form different
86:21 - languages have different plural forms
86:23 - you can read more about adding custom
86:25 - languages if you click here and you will
86:27 - be taken to crowding documentation where
86:29 - you can learn more about these settings
86:32 - but it's great to know that this option
86:33 - is
86:34 - available let's check our settings
86:37 - before we create the project project
86:39 - name free cam project demo project
86:42 - address is free cam project demo it will
86:46 - be a private project and we can change
86:48 - this later on if we need to but for now
86:50 - we're going to make it private we also
86:53 - have the source language in English and
86:55 - we're going to choose six Target
86:56 - languages great so after you have all
86:59 - that information ready to create the
87:01 - project just click here on create
87:03 - project or if you decide that you don't
87:06 - want to create the project just click
87:09 - here on ccel and now let's just create
87:13 - the project we click here and we see
87:17 - project created successfully over here
87:20 - great if you choose to create a private
87:23 - project when we create our first project
87:26 - we will see this message this is the
87:28 - current state of crowding at the moment
87:30 - it might have changed at the time when
87:32 - you are taking the course but right now
87:35 - we see this message of the trial
87:37 - expiring in 14 days but this is a trial
87:39 - of the premium features in crowding
87:42 - after the trial expires we should go
87:44 - back to a free account with the features
87:46 - that we saw one private project
87:48 - unlimited public projects and a maximum
87:51 - number of hosted Words which was 60
87:54 - 60,000 words so you will still keep your
87:57 - free account after the trial expires
88:00 - great so now we have our first project
88:02 - in crowding free goam project demo of
88:05 - course it will be empty at first but
88:07 - don't worry we will take care of this in
88:09 - just a moment we will be uploading a
88:11 - file and we will start translating but
88:15 - first let's have a quick tour of this
88:18 - project and the different tabs that we
88:20 - have over here and how you can find all
88:23 - the information you need for your
88:25 - project we will do that in the next part
88:27 - of the course so I will see you
88:32 - there awesome let's have a quick tour of
88:36 - the project so you know everything that
88:38 - we have available here first we can see
88:41 - the name of the project over here next
88:43 - to our username here we can see the
88:45 - privacy of the project it's private
88:49 - otherwise you will see public here you
88:51 - can create one private project and
88:53 - unlimited public projects with a free
88:56 - account on crowding you can also see the
88:59 - project over here on this sidebar where
89:02 - you can find a list of all your projects
89:05 - and you also see the option to create a
89:07 - new project from here that is great
89:10 - because it is available here you don't
89:12 - have to go to your home again once you
89:14 - have this on the sidebar if you need to
89:16 - create a new project after that we find
89:20 - several different tabs let's go from
89:22 - left to right we start with the
89:24 - dashboard tab in the dashboard tab you
89:27 - can find all these elements let's let's
89:31 - talk about them first you have a filter
89:33 - to filter the list of languages that you
89:36 - chose here you can see all the target
89:38 - languages that you selected when you
89:41 - created your project we see Bengali
89:45 - Italian Japanese Portuguese Portuguese
89:48 - Brazilian I also selected this to show
89:50 - you that we will have them as
89:52 - independent like languages on the
89:54 - dashboard and we also see Spanish over
89:57 - here for each language you will have a
90:00 - list item with specific information in
90:04 - this bar you will see the progress of
90:07 - that language you will see them being
90:09 - filled with green and blue bars and they
90:12 - represent the percentage of the strings
90:15 - that have been translated and approved
90:17 - for that specific language right now if
90:20 - we click on them we see that there are
90:21 - no files to display but we will take
90:24 - care of that when we upload a file next
90:27 - to them we also see the details of the
90:30 - project we see the source language
90:32 - English project members one right now
90:34 - because it's only me words to translate
90:37 - zero the project was created 2 seconds
90:40 - ago yes that was really fast and the
90:43 - last activity was 8 minutes ago the
90:46 - quality assurance checks that we talked
90:48 - about in the slides remember when we
90:51 - talked about important terminology for
90:52 - crowding we saw quality assurance checks
90:56 - right now they say that there are no
90:58 - issues of course we have no files so
91:00 - there are no issues and we see the
91:02 - managers the project manager is
91:05 - currently my account I am the project
91:07 - owner and we will see how you can assign
91:09 - different roles to different team
91:11 - members in the course and you can also
91:14 - contact me here on this link so that is
91:16 - very helpful as well here we see a tool
91:19 - to search this will filter the list of
91:22 - languages so like let's say that I want
91:24 - to find Spanish here I just write
91:27 - Spanish and it will filter the list to
91:29 - show me only Spanish or other variations
91:33 - of Spanish local variations if I write
91:36 - Portuguese I see Portuguese and
91:39 - Portuguese brasilian this is especially
91:41 - helpful for many Target languages for
91:44 - example free code cam has more than 30
91:47 - languages more than 30 Target languages
91:50 - available for translation so four are
91:54 - organization's project this feature can
91:56 - be helpful we can also choose how to
91:59 - sort the languages sort them by default
92:03 - order alpha numeric order completed
92:05 - first or uncompleted first if we want to
92:09 - see all the completed languages first we
92:11 - choose this option all the languages
92:13 - that still need some work first then we
92:16 - choose this option or just sort them
92:19 - alphabetically Alpha numerically and
92:21 - here we can see them in a different
92:23 - present
92:24 - instead of showing them as a list like
92:27 - this we can also choose to show them
92:29 - like in a grid which is a more graphical
92:33 - option I personally like this a lot and
92:35 - I like the fact that they include
92:37 - specific Flags or the language code it's
92:41 - very visual so you can choose the option
92:43 - that you like the most here we also find
92:46 - pre- transation remember what we talked
92:48 - about pre- transation yes we find it
92:51 - here pre- transation can be done done
92:54 - via TM or via Mt remember the difference
92:58 - between these acronyms yes everything
93:00 - that we saw in the previous section with
93:03 - the slides is coming back to us we see
93:05 - TM which is translation memory the
93:08 - database of everything that we have
93:09 - translated before we could use that for
93:12 - the pre- transation or we could do that
93:15 - via the machine translation which is
93:18 - like an automated way to translate your
93:20 - files and then of course you would need
93:22 - to check the automated translations but
93:25 - you can choose which method to use for
93:27 - the pre- transation and here you can go
93:30 - to the editor to start translating but
93:33 - right now we don't have anything to
93:34 - translate so let's not go there yet and
93:38 - you also have the option here to enable
93:42 - notifications Global mentions only or
93:45 - you can also mute project these are the
93:48 - different settings you can experiment
93:49 - with them and see what works best for
93:52 - you that is what we have on the Das
93:53 - dashboard tab for the sources tab we
93:56 - have another set of tools this is where
93:58 - you will see a list of all the files
94:01 - that you can translate right now we
94:04 - don't have any files to translate so we
94:07 - can use one of the following options to
94:09 - upload our source files we have the
94:11 - option to upload files from the our
94:14 - device they also support zip archive so
94:17 - that is also helpful in case you have a
94:19 - zip file you can use sample files from
94:22 - crowding to explore explore how the
94:24 - platform works we can set up an
94:26 - integration with the repository or other
94:29 - supported systems as well and we can
94:32 - invite developers to help us with the
94:34 - project setup so we have everything we
94:36 - need here we're going to upload our file
94:38 - from our device in just a moment we can
94:41 - see our files or we can also check our
94:44 - strings right now we don't have anything
94:46 - to display we will have them when we
94:48 - upload the file we can also group our
94:52 - files into folders here we can see that
94:55 - we can create a new folder and we can
94:57 - create a new version branch and we can
95:00 - add a file this is equivalent to
95:03 - clicking here to upload file okay and we
95:06 - can create strings Vault or set up an
95:09 - integration like we have over here so we
95:11 - just have multiple buttons to do exactly
95:14 - the same but they are both helpful and
95:18 - here we also have the trash can icon in
95:20 - case we would like to delete some of
95:22 - them great
95:24 - then we go to translations the
95:26 - translations tab in translations we have
95:29 - the option to upload existing
95:31 - translations and we will talk about that
95:33 - in just a moment we can also download
95:36 - our translations as a zip file if we
95:39 - select a language one of our Target
95:42 - languages then we can just build them
95:44 - and download them as a zip file we can
95:48 - also create Target file bundles but this
95:51 - is a bit more advanced and we can also
95:53 - set up over theair content delivery with
95:56 - Amazon web services and other services
95:59 - that you can use for this but this is a
96:02 - little bit beyond the scope of the
96:03 - course you can always learn more about
96:06 - this these features on the crowding
96:08 - knowledge base in the screenshots tab we
96:10 - have the option to upload screenshots to
96:13 - provide translators with more context
96:16 - this way you can significantly improve
96:18 - the quality of the translations because
96:21 - for example if you're translating a
96:22 - website it you have some strings on your
96:24 - website you have some text you might
96:27 - want to take a screenshot of the
96:30 - specific part of the website where the
96:31 - strings are are displayed and that will
96:34 - give them some context to provide the
96:37 - best translations possible here we have
96:40 - the tasks tab where we will see tasks
96:43 - that we have created for the project we
96:45 - will talk about tasks when we reach the
96:47 - part on teams and collaboration tasks
96:49 - are very helpful in crowding for
96:52 - especially for project manager and for
96:54 - making sure that the project runs
96:56 - smoothly here we can also find the
96:58 - members tab right now I am the only
97:00 - member of this project but if you are
97:03 - planning to add multiple members here
97:05 - you will see a list of members you can
97:08 - search members by name or username you
97:10 - can filter them by rols you can assign
97:13 - them different roles of course and we
97:15 - will also talk about that but you can
97:17 - filter them here and you can filter them
97:20 - by language as well if you select one or
97:24 - more members of this list you can also
97:26 - choose to contact them or uh you can
97:28 - also delete them in this case I am the
97:30 - owner so it cannot be deleted but you
97:32 - can also delete them and you can invite
97:35 - members another key thing that you might
97:37 - miss because it's right here to the
97:39 - right very apart from the filters is
97:42 - this option if you appli some filter
97:45 - like this and you just want to clear it
97:48 - you can click here on clear filter and
97:51 - all the filters will be cleared and if
97:53 - you have multiple Pages you can just go
97:56 - through them here on these arrows after
97:59 - that we find Integrations this is where
98:01 - we can add Integrations to our project
98:03 - and we can filter them reports will show
98:06 - us reports of our project we will also
98:08 - see them in more detail but right now we
98:11 - don't have enough data because we do not
98:13 - have any files but in the projects you
98:16 - can check the project status the
98:17 - translation cost Top members as well Top
98:20 - members of your project and here here we
98:23 - can find the activity the activity for
98:26 - this project right now is just one item
98:28 - I created this project and we can filter
98:31 - that by specific types of activities
98:35 - like project builds project setting
98:37 - updates Source strings updates
98:39 - translation activity comments and issues
98:43 - we can also filter the activity by
98:45 - languages for example we could check for
98:47 - Source string updates in Italian let's
98:50 - say and we could also filter the
98:53 - activity by user if you would like to
98:56 - check the activity of a specific user in
98:59 - the project and if you need to clear the
99:01 - filters you always have that option here
99:04 - great we just have three more tabs one
99:07 - key aspect of teamwork that will make
99:09 - your project run smoothly is
99:11 - communication and that is what
99:13 - discussions are for here we can create
99:16 - new discussions with this button and we
99:21 - can mark them as open or closed and
99:23 - filter them by language or by author the
99:27 - discussions are very helpful to discuss
99:30 - or talk about anything related to the
99:33 - project that you think should have input
99:35 - or feedback from multiple team members
99:37 - you can do all of that within crowding
99:40 - you don't need to go to an external tool
99:42 - to do that to create a new discussion
99:44 - you just click here on new topic and
99:46 - then you write the name of that topic
99:49 - the title you choose the language
99:52 - related to the topic or you might choose
99:56 - not to specify the name if the topic is
99:59 - not related to a specific language and
100:03 - then you just ask a question or start a
100:05 - conversation here and this supports
100:08 - styling with markdown so you can use
100:10 - markdown you can add bold text you can
100:13 - add headers and that is very helpful to
100:16 - format your text appropriately you can
100:19 - write it here and if you need to preview
100:20 - it you can preview it let me just write
100:23 - this something like heading one and in
100:27 - markdown we create a heading with a hash
100:29 - symbol and if you want to preview it
100:31 - with the final format you can just
100:33 - preview it over here great after that
100:36 - you just create the topic and you will
100:38 - see it in your list of discussions and
100:41 - over here we have some additional tools
100:44 - like the command line tool the crowding
100:47 - API web hooks we talked about web hooks
100:50 - which are like messages that are
100:52 - warnings that we and when something
100:54 - happens in an application that means
100:57 - setting up a notification for key events
100:59 - in your project and you can also
101:01 - translate your web application with a
101:04 - realtime translation preview with
101:06 - crowding in context and finally we reach
101:09 - the project settings talking about the
101:12 - project settings let's dive into the
101:14 - settings that you can customize for your
101:17 - project there are many settings and we
101:19 - will go through them in detail so we
101:22 - will do that in the next part of the
101:24 - course so I will see you there let's
101:26 - dive into the
101:30 - settings and talking about project
101:33 - settings let's dive into the settings
101:35 - that you can customize for your project
101:37 - here we have our free code cam project
101:39 - demo you will find different categories
101:42 - of project settings including General
101:45 - privacy and collaboration languages
101:48 - quality assurance checks translation
101:50 - memories glossaries and different
101:53 - options for your content like importing
101:55 - exporting labels parser configuration
101:58 - and file processors some of these
102:01 - settings are more advanced but let's
102:02 - have a general overview of what you can
102:05 - customize first of all by default you
102:07 - will be in the general settings the
102:10 - general settings include the project
102:12 - name the public description of your
102:14 - project and branding for example you can
102:18 - set a custom domain for your project to
102:20 - get an access to the custom domain name
102:22 - you need to create a cname DNS record in
102:25 - your hosting service and only the https
102:29 - protocol is loone here you also have the
102:31 - option to invite a developer if the
102:34 - developer is the one who is going to be
102:36 - creating the custom domain you can also
102:38 - set a Project logo by uploading an image
102:41 - with these formats it can be a JPEG
102:44 - image a PNG image or a GF file and after
102:48 - branding we find the batches you can
102:50 - choose to display batches to share the
102:53 - localization progress of this project
102:56 - via a batch image and this is a preview
102:59 - of the batches you can embed batches on
103:02 - your website or read me so your app fans
103:05 - can see the localization progress and
103:07 - help you with translations currently the
103:10 - batches are disabled okay but this is a
103:13 - preview and you would see the percentage
103:15 - of the progress of your project over
103:17 - here and the last option that you can
103:19 - see in the general settings is the
103:21 - option to delete a pro project but be
103:24 - careful with this because deleting the
103:26 - project will permanently delete all the
103:29 - resources associated with the project
103:32 - including any uploaded files
103:34 - translations approvals and Etc deleted
103:37 - projects cannot be restored so be really
103:41 - careful with this if you choose to click
103:43 - on this button this is for the general
103:46 - settings then we find privacy and
103:48 - collaboration settings you can set the
103:50 - Project's visibility like making the
103:52 - project public or private a public
103:55 - project is visible to everyone you can
103:58 - restrict access to specific languages
104:00 - after the project is created and if you
104:03 - choose to make your project private it
104:05 - will be visible only to the invited
104:08 - project members and we will see how you
104:10 - can send those invitations in just a
104:13 - moment when we reach the part on team
104:15 - and collaborations after that you can
104:17 - also see some privacy settings this was
104:19 - the visibility now we go to privacy you
104:22 - can choose to Ena or disable all of
104:24 - these options like task based Access
104:27 - Control if you want to allow offline
104:29 - translation this is selected by default
104:32 - if you want to allow proof readers to
104:34 - access hidden
104:36 - strings if you also want to allow
104:38 - project members to manage glossery terms
104:40 - or show machine translation suggestions
104:44 - connected with the machine translation
104:45 - engines that you choose they will appear
104:48 - as suggestions in the editor if you have
104:50 - this option enabled and the last
104:53 - category here are notifications
104:55 - notifications for translators when there
104:58 - are new strings to be translated if you
105:00 - want to notify project managers and
105:02 - developers about new strings and if you
105:05 - want to notify project managers and
105:07 - developers when a language translation
105:11 - or proof reading phase has been
105:13 - completed those are important
105:14 - notifications you can just enable them
105:17 - or disable them by clicking here on
105:19 - their check box great that is for
105:22 - privacy and
105:24 - collaboration now let's go to
105:26 - translation settings first we find
105:29 - languages initially when we created the
105:31 - project we chose a source language and a
105:34 - target language then here we can change
105:37 - that and even add custom language
105:39 - codes if we change the source language
105:42 - that might cause a plural form mismatch
105:45 - according to crowding for imported
105:47 - strings if your new source language
105:49 - differs from the initial one in plural
105:52 - forms it's recom recommended to update
105:54 - the source files accordingly okay so
105:56 - that is recommended you can choose it
105:58 - from this list that you have over here
106:00 - it's quite comprehensive you will find
106:02 - the language and specific local
106:05 - variations of that language for specific
106:08 - countries you can also change the list
106:10 - of Target languages remember that we
106:12 - selected six languages here right you
106:15 - can just delete a language if you need
106:17 - to and save your changes by clicking
106:19 - here or you can
106:21 - also add new Languages by selecting them
106:25 - over here it's basically the same
106:28 - component or element that we saw when we
106:30 - created the project and if you just want
106:32 - to remove all the target languages you
106:34 - can click here awesome now that you know
106:37 - how to change these languages let's go
106:39 - to QA checks remember that QA checks
106:42 - automatically highlight all the possible
106:45 - mistakes in the translations prior to
106:47 - their approval they're very helpful
106:49 - because detected issues will appear in
106:51 - prove reading mode and your proof
106:53 - readers can check them and fix them if
106:56 - necessary this is where you can
106:58 - customize what you want to check
107:00 - automatically you can check for empty
107:03 - translations length issues tax mismatch
107:06 - spaces mismatch barbles mismatch
107:10 - punctuation character case special
107:13 - characters basically anything that can
107:14 - go wrong when you try to translate a
107:17 - string any typos any mistakes like
107:20 - incorrect translation issues or spelling
107:23 - or typos or also making sure that you
107:26 - use the terminology consistently with
107:28 - the correct translation for specific
107:31 - glossery terms you can enable or disable
107:34 - each one of these QA checks for your
107:37 - project and then you just need to click
107:38 - on save to save your changes and over
107:41 - here next to each one of these checks
107:43 - you will see the type of warning or
107:47 - error that you will get for these issues
107:50 - that are detected in your project for
107:53 - example if the translation exceeds any
107:55 - predefined length limits you will see an
107:58 - error here but you can also change that
108:00 - to a warning error would be the highest
108:04 - priority for those issues and warning
108:06 - would be something a little bit of a
108:08 - lower priority awesome and you can also
108:12 - disable all QA checks simply by clicking
108:15 - here this is a faster way to do that if
108:17 - you just want to disable or enable all
108:20 - the quality assurance checks
108:23 - this one will not be selected by default
108:26 - you need to select it and enable it
108:28 - manually by clicking here okay and after
108:31 - that you just save your changes and
108:33 - voila here we have them right great they
108:36 - are very helpful and another thing that
108:38 - is super helpful is a translation memory
108:42 - in the translation memory settings you
108:44 - can enable auto substitution this
108:46 - feature substitutes the non-translatable
108:49 - elements like a tax or HTML entities or
108:53 - placeholders in Translation suggested by
108:56 - translation memory by the ones that are
108:58 - used in The Source text this improves
109:01 - translation memory suggestions and
109:03 - allows pre- transations translation
109:05 - memory suggestions for dialects you can
109:07 - also enable that show the primary
109:09 - language translation memory suggestion
109:11 - for dialects if there are no dialect
109:15 - specific ones so if you have a specific
109:17 - language and then you're working with a
109:19 - dialect if you don't have a specific
109:22 - suggestion for that dialect you will
109:24 - also see the translation suggestions for
109:27 - the general or primary language that is
109:30 - very helpful you can use Global
109:32 - translation memory as well to give
109:35 - translators access to the crowding
109:38 - Global translation memory which is a
109:40 - huge fault of existing translations
109:42 - contributed by previous projects
109:45 - remember that with a free account you
109:47 - are donating your translations to
109:49 - crowding a global translation memory so
109:52 - that is great you can also reuse what
109:55 - other people have translated before when
109:57 - this setting is enabled all translations
110:00 - made in your project are automatically
110:01 - committed to the crowding Global
110:03 - translation memory you can also choose
110:06 - the translation Memory Match context
110:08 - type this is these are a little bit more
110:11 - advanced and you might want to take some
110:13 - time to dive deeper into them we're just
110:16 - having a quick overview here so let's
110:18 - just check these ones at the bottom we
110:21 - see some penalties
110:23 - penalties are basically used to decrease
110:25 - translation memory suggestion match
110:28 - percentage based on specific conditions
110:31 - so with translation memory you will see
110:35 - suggestions for a translation but some
110:38 - translations will have a higher priority
110:40 - and some translations will have a lower
110:43 - priority based on how well they match
110:45 - the original phrase or string you can
110:48 - also assign some penalties to that match
110:51 - percentage based B on these criteria
110:54 - that is a more advanced feature but you
110:57 - can also change that in the settings and
111:00 - you can change the assigned translation
111:02 - memories for your project this is
111:03 - something that you might want to use
111:05 - more often and it basically allows you
111:07 - to change the translation memories that
111:09 - you will be using in your project by
111:12 - default you will have your Project's
111:14 - translation memory based on what you
111:16 - have translated for the source files of
111:19 - your project but if you have other
111:21 - translation memories for other projects
111:23 - in your account you can also choose to
111:25 - use that for another project and share
111:28 - them across your projects that is super
111:30 - helpful and you can just select which
111:32 - ones you would like to assign to your
111:34 - current project in the settings and you
111:36 - can also assign them priorities so you
111:39 - will use the suggested translations from
111:42 - the translation memory with the highest
111:45 - priority we will talk more about
111:47 - translation memories more specifically
111:50 - during the course but for now just know
111:52 - that the this is where you can customize
111:54 - everything related to translation
111:55 - memories and over here you can also find
111:58 - glossaries remember that a glossery was
112:00 - a set of terminologies with their
112:03 - definitions a glossery term and this is
112:06 - where you can manage your glossies for
112:08 - your projects in the settings if you had
112:10 - multiple glossies you can choose them or
112:12 - select them from this list you would
112:14 - have several glossies and you can choose
112:17 - which ones will be used for your current
112:19 - project like this this one is Select Ed
112:22 - by default because it's your own
112:24 - projects glossery we're in that project
112:27 - right now but if we have multiple
112:29 - projects with multiple glossies we could
112:32 - reuse them or assign them to different
112:34 - projects and that is great because we
112:35 - will be saving time awesome and now
112:38 - let's just check the last category which
112:40 - is content content settings these are
112:42 - the settings for importing and exporting
112:45 - files and strings and source files they
112:49 - basically help you with your workflow
112:51 - like working with source strings how you
112:53 - want to handle duplicate strings like
112:56 - you can save time by translating all
112:57 - duplicates with the same translation and
113:00 - hiding these instances from translators
113:03 - but this can affect accuracy okay so you
113:05 - can choose what to do with duplicate
113:08 - strings you can also configure how you
113:10 - want crowding to count words in your
113:13 - project like automatically if you want
113:15 - to consider the TX or if you want to
113:17 - skip the TX once you change the option
113:20 - only the newly uploaded words will be
113:23 - counted according to the new settings
113:25 - and if you change this option the new
113:28 - setting that you choose will be saved
113:30 - automatically okay because right here
113:32 - you can see that we don't have a save
113:33 - button but your changes will be saved
113:35 - automatically if I let's say change this
113:39 - to count TX and then I go to another
113:42 - category and I go back you can see that
113:44 - the change was saved automatically even
113:46 - though we don't have a save button right
113:48 - here just to give you that tip and then
113:51 - once we we go to export we can also see
113:54 - that we can save context information in
113:57 - the files we can skip any untranslated
114:00 - strings if we want to this is not
114:02 - enabled by default so we can enable it
114:05 - we can skip on translated files once we
114:08 - are exporting our project we can export
114:11 - only approved translations and we can
114:14 - also automatically fill in Regional
114:16 - dialects from the primary language so
114:20 - for example untranslated strings in
114:23 - Regional dialects like for example
114:25 - Argentine Spanish will automatically
114:28 - include translations completed in the
114:30 - primary language for example Spanish and
114:33 - now we go to labels labels are very
114:36 - helpful because they can add context to
114:39 - your strings and organize them by
114:41 - different topics they can also be useful
114:43 - when you want to search for specific
114:45 - strings because you can filter strings
114:47 - by their labels you can add the labels
114:50 - to your strings here in the settings in
114:52 - the labels category let's see if you
114:55 - want to add a label you just click here
114:57 - on ADD label you write the title of your
115:00 - new label and you click on Save and then
115:02 - you will be able to add the label to
115:04 - your strings let's just check what
115:07 - happens demo label and let's save this
115:10 - now I see my new label over here and I
115:12 - can edit it or delete it if I edit the
115:15 - label I can just change its title and if
115:19 - I want to delete it I can delete it over
115:21 - here delete Del the label yes deleted
115:24 - and I don't see it here anymore but when
115:27 - I am using the editor I can assign that
115:29 - label to a specific string and that can
115:32 - be helpful and finally the last two
115:34 - options are a bit more advanced they are
115:36 - parser configuration to configure how
115:39 - you want crowding to Import and Export
115:41 - selected file types depending on your
115:43 - needs like
115:45 - this let's say for example that your
115:49 - file is in this format let's say that we
115:51 - have
115:52 - a a markdown file over here we see these
115:57 - extensions for a markdown file this
115:59 - would be the set of
116:00 - extensions and the API type here would
116:04 - be this for the markdown file MD you can
116:08 - edit this to change your parser settings
116:12 - you can see markdown parser settings you
116:14 - can enable content segmentation use
116:17 - custom segmentation rules exclude code
116:20 - blocks and these options are more
116:24 - advanced okay they are a bit beyond the
116:26 - scope of this course which is covering
116:28 - like localization fundamentals but I do
116:31 - encourage you to dive deeper into this
116:33 - because it can be very helpful as well
116:35 - as file processors which allow you to
116:38 - customize processing for the supported
116:40 - file formats great these are all the
116:42 - settings that you can customize for your
116:44 - project in crowding so you should have a
116:47 - good idea of what you can customize for
116:49 - your project in the next section we will
116:51 - see a quick review of how you can delete
116:54 - a project in crowding I will see you
116:56 - there and then we will actually start to
116:58 - upload files to our crowding project and
117:01 - we will start translating with the
117:02 - translation editor I will see you
117:08 - there great work now you know how to
117:10 - customize your project settings but
117:13 - let's quickly review how you can delete
117:15 - a project in case you ever need to do
117:17 - this in the future here we just go to
117:20 - settings then general which is selected
117:22 - by default and we go here to the bottom
117:25 - where we see delete project if you click
117:28 - on this button you will be deleting the
117:31 - project permanently and you will be
117:33 - deleting all the resources associated
117:36 - with the project including any uploaded
117:38 - files translations approvals Etc and
117:42 - this cannot be undone deleted projects
117:45 - cannot be restored so be 100% sure
117:48 - please when you click on this button now
117:51 - it's time to start working with our
117:53 - files and so for that we will upload a
117:56 - file to our crowding project I will show
117:58 - you how to do that manually for now
118:00 - since we're covering the basics we will
118:02 - upload a sample PDF file with text and
118:05 - images and you will see how crowding
118:07 - extracts the strings and how we can
118:09 - translate the strings in their
118:11 - translation editor so I will see you
118:14 - there in just a moment so let's
118:20 - continue now we're in the settings tab
118:24 - right but we need to go to the sources
118:26 - tab to upload our files in the sources
118:29 - tab you will see this of course it's
118:32 - empty because currently we have no files
118:35 - to translate but we can use one of these
118:38 - options to upload the source files we
118:40 - can choose to upload files we can also
118:43 - upload our files as Z if we need to
118:46 - upload multiple files we can use
118:49 - crowding sample files and that is
118:50 - helpful to explore crowding works if you
118:53 - want to use these samples at first you
118:55 - can also set up the integration with
118:59 - your repository we will talk about
119:01 - Integrations when we reach the part of
119:03 - the course for developers because you
119:05 - can integrate crowding with your for
119:08 - example GitHub repository with the
119:10 - GitHub integration and import your
119:13 - source files automatically with your
119:15 - GitHub integration right now we're going
119:18 - to focus on how you can do this manually
119:20 - since we're covering the basics
119:22 - and you can also invite a developer to
119:24 - help you with the project setup with
119:26 - this option right now we will be
119:28 - uploading a PDF file a PDF file with
119:32 - with some text that I took from a free
119:35 - code cam article this will be our demo
119:37 - file I will use this to illustrate how
119:40 - crowding takes a file extracts the
119:43 - strings and it can also work with files
119:46 - that contain images so I think this will
119:48 - be a nice example let's upload the file
119:51 - by clicking here you can also choose to
119:54 - add a file by clicking on this button
119:57 - and these are more advanced options okay
120:01 - so basically you would be clicking on
120:04 - ADD file or upload files and you can
120:07 - also create a folder
120:09 - here let's upload a file welcome to Free
120:13 - code cam I'm going to open this file and
120:17 - you can see how it's being uploaded yay
120:20 - so if it might take a few seconds to
120:24 - change while it's being uploaded and
120:27 - processed because remember that crowding
120:29 - has to extract the strings and divide
120:33 - the text into multiple strings and you
120:35 - will see this blue progress bar here you
120:38 - will need to wait until you see a
120:41 - confirmation that your file has been
120:43 - uploaded if you click here or you go to
120:46 - any of these tabs you based on my
120:50 - personal experience right now you will
120:52 - lose the progress that you have for that
120:55 - file so just stay there until the file
120:58 - has been uploaded and voila over here we
121:02 - can see that the blue bar that we had
121:05 - here while we were uploading the file
121:08 - now changed into different options that
121:11 - we have here for our file and we can
121:14 - also see that we uploaded a PDF file but
121:16 - that was converted into a different file
121:19 - format doc X which is like the word
121:22 - format that we use for Word files that
121:25 - is something that will happen when you
121:27 - upload certain types of files crowding
121:30 - will convert them into another format to
121:33 - make it easier for the platform to
121:35 - process the individual strings but when
121:38 - you export them you can choose how you
121:40 - want to export them and over here we see
121:43 - the number of strings that we can
121:45 - translate this particular file has 22
121:48 - strings with a total of 212 words if you
121:52 - hover over this number you will see the
121:55 - number of words and you can also see the
121:57 - history of file updates here if you
122:00 - click on the option in the revision
122:02 - column you can also choose to update the
122:06 - file by uploading a new version that can
122:09 - be helpful if the file has been modified
122:12 - somehow and you can assign priority for
122:14 - example here we have that the file has a
122:17 - normal priority what happens if I click
122:19 - here well I make it a high priority file
122:22 - it will have a high priority if not it
122:25 - will have a low priority if I click on
122:27 - it again and if I just click on it a
122:30 - third time I will go back to a normal
122:33 - priority that is helpful to categorize
122:36 - files by their translations priority for
122:39 - example you may choose to translate the
122:41 - files of your landing page before you
122:43 - actually translate files deeper in your
122:46 - website or your platform and over here
122:49 - we can see a drop- down menu when you
122:51 - click on the ellipses and we see these
122:54 - options we see add file we see new
122:56 - folder we see create strings fold
123:00 - settings download Source rename and
123:03 - delete if you click on rename you can
123:05 - just rename your file here I could just
123:08 - change it and if I click anywhere
123:10 - outside of the name I save those changes
123:14 - and if I need to delete the file I just
123:16 - click on delete if I click on settings I
123:18 - will see the file settings and that is
123:21 - interesting
123:22 - this is not the project settings this is
123:25 - the file settings let's dive deeper into
123:28 - these settings file details this is the
123:32 - title as it appears to translators you
123:35 - can show descriptive file titles to
123:37 - translators for example you can just
123:39 - assign a more readable name like this
123:43 - one instead of the original file name
123:45 - that may be abbreviated or written in a
123:49 - specific format in your application
123:52 - this file title is only shown in the
123:54 - user interface in crowding and doesn't
123:56 - rename the actual file so when you
123:59 - export your translated files you will
124:02 - still get the original name and here we
124:05 - can see different settings about the
124:07 - resulting file after translation export
124:10 - this is the file name or full path in
124:12 - the resulting archive using the
124:14 - placeholders listed below for example
124:17 - the source file can be resources. Rex
124:22 - but before integration into an
124:23 - application it should be named like this
124:27 - so you can use these
124:29 - placeholders like the language the
124:31 - twetter code the local and you can use
124:34 - the placeholders in the name of the file
124:37 - like this and that value like the
124:40 - language will be replaced in the name of
124:42 - the file that can be helpful to automate
124:45 - the process especially like in software
124:48 - projects where you need to have
124:50 - different names for your files in
124:52 - different languages you can just add the
124:54 - two letters code to differentiate them
124:57 - and use them in your file path that is
124:59 - very helpful this is an example for
125:02 - Android projects like this you can see
125:04 - how it's using the placeholder Android
125:07 - code and the original file name here and
125:10 - other types of projects you can also
125:14 - change the parser configuration like
125:16 - clean taex aggressively translate
125:18 - hyperlink URLs this is also helpful if
125:21 - you are localizing the URLs as well you
125:25 - can translate hidden text translate
125:27 - hidden rows and columns in spread sheets
125:30 - and for slides you can import hidden
125:33 - slides and import the nodes in your
125:35 - slides which can also be helpful if you
125:38 - added some extra notes to a presentation
125:41 - and you can enable content segmentation
125:44 - and use custom segmentation rules these
125:47 - are more advanced options but in the
125:49 - languages tab you can also change
125:52 - file Target languages because you can
125:55 - customize this for each file as well
125:58 - let's say that you don't want to
125:59 - translate a specific file into Spanish
126:03 - you can just disable this for that file
126:05 - and click save and you will not see that
126:08 - file in the Spanish category of your
126:11 - project you can also disable all
126:14 - languages if you don't want to translate
126:16 - it at all or you can select specific
126:20 - languages like this
126:22 - for now let's keep all languages if we
126:25 - read this warning we see that it is
126:26 - recommended not to hide duplicates in
126:29 - the project when disabling languages
126:32 - otherwise duplicate strings in this file
126:34 - may not be available for translation and
126:37 - finally context in this tab you can add
126:40 - any contextual information that will
126:42 - help translators to understand the
126:44 - source text meaning context will be
126:47 - visible for translators in the editor
126:50 - and it also ports marked down and that
126:53 - will be helpful for your translators
126:55 - great so after you configure all of that
126:57 - you can just click save or cancel or
127:00 - just click on this x here to go back and
127:03 - now you know what the file is about we
127:05 - uploaded the file and now if you need to
127:07 - upload a second file you can just click
127:10 - here on ADD file and you will see the
127:13 - option to choose a file from your file
127:15 - system this is how you can upload a file
127:17 - manually remember that we have an option
127:19 - to automate this through Crow
127:21 - Integrations specifically the GitHub
127:24 - integration is one of the most popular
127:26 - ones because you can automatically
127:28 - synchronize the files of your project
127:30 - when you add new strings that have to be
127:32 - translated in crowding that is similar
127:34 - to what we do at free code camp with our
127:37 - open source project so now that you know
127:39 - how to upload your files to crowding
127:42 - manually let's see how you and your team
127:44 - can actually start translating we have
127:46 - the file in crowding so how do we
127:48 - actually translate it that is what we
127:50 - will see in the next part part of the
127:51 - course I will see you
127:56 - there once your file is uploaded it's
127:59 - time to start translating you may start
128:02 - translating the file yourself if you're
128:05 - going to complete the task yourself or
128:08 - you can ask your team to start working
128:10 - on the translations you can assign
128:12 - specific files to your translators and
128:15 - prove readers with the tasks feature
128:17 - that we will talk about when we cover
128:20 - crowding for teams organizations they're
128:22 - very helpful and you can find them here
128:24 - on this tab but for now let's assume
128:27 - that you're translating the files
128:29 - yourself so you can also be familiar
128:32 - with the user interface to start you
128:34 - just need to go to the dashboard tab
128:36 - where you will find all your target
128:38 - languages then you need to select the
128:40 - target language that you will be
128:42 - translating from this list I will choose
128:46 - Spanish for this demo and after I click
128:50 - on Spanish I see the the list of files
128:52 - for the project this is the original
128:54 - source file that we uploaded in the
128:57 - sources tab you will see this file
128:59 - regardless of the language where you
129:01 - click on right because if we go back to
129:05 - sources and we check the file settings
129:09 - like
129:10 - this we will see this languages and
129:15 - right now we have all the target
129:16 - languages selected that is why we see
129:18 - this file in all the languages but let's
129:21 - say that we just don't want to translate
129:23 - this file into Spanish we can save these
129:26 - settings file updated we go back to
129:29 - dashboard and now we see that there are
129:31 - no files to translate you can also do
129:34 - this and choose which languages should
129:38 - be the target languages for specific
129:41 - files you even have that granularity in
129:44 - the settings and permissions great so
129:46 - let's add Spanish again and now let's go
129:49 - back to Spanish and here we have our
129:52 - file we see that we haven't started
129:54 - translating or approving our strings we
129:57 - have 20 and 12 words as to do for
130:01 - translations and approvals so let's
130:04 - start that process by clicking on the
130:07 - name of the file you can also filter
130:10 - files here if you have multiple files
130:11 - you have a very long list of files you
130:14 - can just filter them right here to start
130:17 - translating the file you just click on
130:18 - the name in the corresponding language
130:21 - and that will take you to the heart and
130:24 - soul of crowding the translation editor
130:27 - which is an amazing tool that you will
130:29 - be using daily if you're going to work
130:32 - on
130:36 - crowding when you enter the translation
130:39 - editor you will see these tips like how
130:42 - to view which strings require
130:43 - translations all the source strings are
130:45 - listed on the left side part and colors
130:48 - that know their status and icons next to
130:51 - them the note comments or issues created
130:53 - for these strings you can see if strings
130:56 - are untranslated partially translated or
130:59 - translated and the same statuses apply
131:02 - for approval partially approved approved
131:05 - and hidden if you see a string in grade
131:08 - that is a hidden string you can also
131:11 - collaborate on translations in real time
131:14 - use context to make relevant translation
131:17 - remember that we were able to add some
131:19 - context in the file settings that is
131:22 - helpful for translators and we can
131:24 - preview our translated files we can also
131:28 - make translations from any device
131:30 - because crowding has supported mobile
131:32 - view for the translation editor so you
131:35 - can translate on the go and we also have
131:37 - some different views we will see them in
131:40 - action when we start translating this
131:42 - file we have the sidebyside view and we
131:45 - also have another view that is very
131:47 - helpful to translate multiple languages
131:50 - great now that you know on your way
131:51 - around crowding translation editor you
131:53 - can start making translations you can
131:55 - also check their knowledge base or chat
131:57 - with the team so we're going to close
131:59 - this and now we are in the translations
132:01 - editor remember that when you upload a
132:04 - file crowding takes the text from that
132:06 - file and divides it into Strings which
132:09 - are like the basic units of a
132:11 - localization process this process may
132:14 - require certain format conventions based
132:16 - on the type of file that you are
132:18 - uploading in this case we uploaded a PDF
132:21 - file but we are working with a doc x
132:23 - file which is like a word file and
132:27 - therefore we can work with a strings
132:29 - individually another way here in the
132:32 - translation editor we can see the main
132:34 - layout this is called the comfortable
132:36 - mode in the crowding translation editor
132:40 - we see that we have four main sections
132:42 - or areas we have the left side bar over
132:45 - here we have the Middle top area over
132:48 - here we have the middle bottom area over
132:52 - here and we have the right sidebar let's
132:55 - see what each one of them does and what
132:57 - it has let's start with the left sidebar
132:59 - over here and let's go from left to
133:01 - right the left sidebar shows you all the
133:04 - strings in your file and a preview of
133:08 - your source file you can also enable if
133:11 - you want to see this text translated
133:14 - once you save and approve your strings
133:17 - that is helpful to see a preview of the
133:19 - file in the target language you will
133:21 - find helpful tools for the translation
133:24 - process here at the top you can search
133:27 - for something in a file let's say that I
133:30 - want to find the word certification in
133:32 - my file what do I do I just write it
133:34 - here and I press enter and that will
133:37 - take me to Strings that have the word
133:39 - certification you can see that this
133:41 - string has the word certification this
133:44 - string also has the word certification
133:46 - I'm pressing enter here to jump from the
133:49 - current string to a new one and over
133:52 - here we also see certification but
133:55 - certifications but that also matches our
133:58 - search and if we just continue pressing
134:00 - enter we will go back in a cycle that is
134:03 - helpful to find strings that have a
134:05 - specific term or something that you want
134:07 - to find in a particular file then we
134:11 - also find this tool to load the basic
134:14 - list view if you click on this button
134:17 - the preview will change to this this is
134:20 - a preview of all the strings in the file
134:23 - without actually previewing the file
134:26 - with the original layout and the images
134:29 - it's basically like a simplified version
134:31 - where you can only see the text that
134:33 - crowding extracted from the file you can
134:36 - go back to the previous View by clicking
134:38 - here in the list icon then we find this
134:42 - which is to highlight untranslated
134:45 - translated and approved strings because
134:48 - you can see that the strings here are
134:50 - highlighted in red because they are not
134:53 - translated yet if we just disable this
134:56 - option we see the file as it was
134:59 - presented originally without any
135:01 - highlighted strings we can enable or
135:04 - disable this that is very helpful too
135:06 - you will see different colors for
135:08 - strings with different status then as
135:11 - the third option here we see show the
135:14 - translation preview what this does is
135:17 - that when you enter your translation
135:19 - over here for a particular string like
135:22 - this you click on it you will see the
135:23 - string here and then you will write your
135:25 - translation over here you will see the
135:27 - preview of that translation being
135:30 - replaced here automatically so you will
135:32 - have a preview of your file in the
135:35 - target language of your choice that can
135:37 - be helpful but you can also disable it
135:39 - here if you need to and then we also
135:42 - find a scale toggle option and an option
135:47 - to add a string okay now that you're
135:50 - more familiar with this left sidebar
135:53 - let's go to the Middle top area the
135:56 - Middle top area is where you can
135:58 - translate a string you just need to
136:00 - select it from the left sidebar and the
136:03 - string will appear here will be replaced
136:05 - here in this area where it says Source
136:08 - string like this just click on it and it
136:12 - is replaced here automatically then you
136:14 - can enter your translation over here
136:18 - let's say that we translate it like this
136:24 - Al ccul the free code Camp let's
136:27 - translate it like this let's say here we
136:29 - have the translation and this is what I
136:31 - was mentioning just a few seconds ago
136:33 - that we have a preview of the
136:35 - translation that we just wrote here if
136:38 - we want to disable this and just see the
136:40 - original string in the file preview we
136:43 - can disable this option or enable it to
136:45 - see the preview again like
136:49 - this if you toggle this option and you
136:53 - disable it and you enable it again you
136:55 - might not see the preview unless you
136:58 - make a change okay this is something
137:00 - that is currently happening to me in the
137:01 - platform so if you ever get that then
137:04 - you just need to know that you just make
137:07 - a change and you will see the preview
137:08 - again like this just delete a character
137:11 - and write it again and since you have
137:14 - your translation already written over
137:16 - here you can also use these helpful
137:18 - options from the toolbar you can copy
137:22 - The Source this is helpful in case you
137:24 - have a long string and you just need to
137:26 - make some translations in a few words or
137:29 - you just need to use a large portion of
137:31 - the original string then you can just
137:34 - select this and copy the original string
137:37 - over here that can be helpful when you
137:39 - have for example tags or elements that
137:41 - don't have to be translated and you can
137:43 - just copy them without writing them
137:46 - yourself but we don't have that right
137:48 - now so let's go back to our translation
137:51 - you can also clear the translation by
137:54 - clicking here that will save you time
137:57 - and the third option is to go into text
138:01 - selection mode Let's click here and
138:04 - let's see what it does if we click on
138:06 - this option you will see that the
138:09 - translation memory and machine
138:11 - translation suggestions that crowding is
138:13 - giving us for that string are like in a
138:16 - different color right they are like in a
138:19 - dark greay that can be helpful to just
138:22 - select a piece of the string let's say
138:26 - that instead of writing this final part
138:30 - of the string I just want to copy and
138:31 - paste it from this suggestion this gives
138:34 - me the option to select it from here
138:36 - just copy it and paste it next to the
138:41 - word like this that can save me sometime
138:45 - as well if we don't have this option
138:47 - enabled then you will not be able to
138:49 - select the text individual from these
138:51 - options you will only be able to replace
138:53 - the entire translation one by one so
138:58 - that option can be very helpful when you
139:00 - need to just take a part of this
139:03 - suggestion copy and paste it awesome and
139:06 - over here on the right we find the
139:08 - string length specifically the length of
139:11 - the source which is 37 37 characters
139:14 - here and the target 41 so in Spanish
139:18 - writing this text or translating it like
139:21 - this is longer and sometimes for the
139:24 - user interface of let's say a website or
139:27 - a web app you might want to set a
139:30 - character limit and you can use these
139:33 - numbers to give you an idea of their
139:34 - length great so now that we have this we
139:37 - are going to save our translation by
139:39 - clicking on this button and after we
139:42 - save it now we see that it's highlighted
139:44 - in blue it is highlighted in blue once
139:47 - you have it saved and you will automatic
139:51 - see that you go to the next string the
139:53 - next string is replaced here as the
139:55 - source string and you can just continue
139:57 - editing here you can also see if there
140:00 - is some context for that string you can
140:03 - edit the context and just hide the
140:06 - context if you don't need it but you
140:08 - will automatically go to the next string
140:11 - if you want to go back to the previous
140:13 - string just click on it like this and
140:15 - you can always modify your
140:17 - translations you will also see the
140:20 - history of translations you will see
140:22 - this translation that was saved who
140:25 - saved it my username and when it was
140:28 - saved a few seconds ago in this case
140:31 - over here we also see some options we
140:34 - see Zero because in crowding when you
140:36 - have a project with multiple
140:39 - contributors contributors can vote
140:42 - different translations they can vote to
140:46 - select the translation that they think
140:48 - is most accurate in this case we have
140:50 - zero votes but we could have a vote and
140:54 - usually in the case of fre code cam we
140:56 - also suggest choosing the translation
140:59 - that was most highly voted by the
141:01 - community because usually that tends to
141:02 - be most accurate then then next to the
141:05 - right we also see approve this is a
141:09 - button that only proof readers or
141:10 - project owners or anyone with like
141:13 - administrator access has access to
141:16 - because this will approve the string for
141:18 - the proof reading phase so
141:21 - translators who only translate in the
141:23 - platform and don't prove read will not
141:25 - see this option but you will be able to
141:28 - approve your own translations even
141:30 - though it is recommended to make someone
141:33 - check your translations before you
141:35 - approve them and here we can also see if
141:37 - we can delete the suggested translation
141:40 - and some additional options but right
141:42 - now this option is grayed out so we
141:44 - don't have any additional options here
141:46 - this is what we call the middle button
141:49 - area the Spanish translations the
141:52 - translation memory and machine
141:53 - translation suggestions and you can also
141:56 - see translations suggested from other
141:59 - languages right now we don't have any
142:01 - but we could you can always resize these
142:05 - columns okay if you need to this is
142:07 - something that I also think that it
142:08 - would be important for you to know you
142:10 - can resize them they have a maximum WID
142:13 - but you can resize them and another
142:16 - thing here in the top middle area is
142:18 - that you can go to the next string by
142:20 - clicking on these arrows go to the next
142:23 - or the previous string you can also edit
142:26 - the string over here the original string
142:29 - and you have more options like hi height
142:31 - string from the translators copy the
142:34 - string URL Copy Source skeleton
142:36 - translation history and you can also
142:39 - view the string in context these are all
142:42 - helpful functions that I suggest going
142:44 - through if you have the time when you
142:46 - start diving into crowding more deeply
142:49 - great so now last last but not least we
142:52 - have the right sidebar this is where you
142:54 - can write comments search for the
142:56 - translation memory search for terms in
142:59 - your glossery add new apps and find the
143:02 - apps that you added through the crowding
143:04 - store you can choose the tool that you
143:07 - need to use over here in the right
143:10 - sidebar to the right of the right
143:12 - sidebar first we find the comments then
143:14 - we find the translation memory then the
143:17 - glossery where you can search for
143:19 - specific terms and you can also see some
143:23 - the file context that we were able to
143:26 - add in the settings remember this is the
143:28 - context for the file and you can also
143:31 - add new apps and you would see their
143:34 - small icons over here to write a comment
143:37 - you just need to go to the first option
143:39 - here comments on the sidebar and write
143:42 - your comment on the text input field at
143:45 - the bottom if you click here on new
143:48 - comment let's say that we have
143:51 - demo comment you can also Mark the
143:53 - content as an issue if you need to if
143:56 - this is an issue with a string or with a
143:58 - file you can mark it as an issue and you
144:00 - can categorize the issue it's this a
144:03 - general question is the current
144:05 - translation wrong is there a lack of
144:08 - contextual information is there a
144:11 - mistake in the source string you can
144:13 - choose any one of these categories for
144:15 - the issue for now let's not make this an
144:18 - issue and let's just click here to send
144:21 - the comment demo comment after you send
144:24 - the comment you can also edit it like
144:27 - this and save the changes let me just to
144:29 - make a change remove the period at the
144:31 - end edit it and you can also delete it
144:35 - over here but let's just keep it for now
144:38 - to have it as a sample and that's
144:41 - basically how comments work now if we go
144:44 - to the second option we can see search
144:47 - translation memory with this tool you
144:49 - can search search translation memory for
144:52 - previously made translations and reuse
144:54 - them to ensure consistency here you have
144:57 - some help like excluding words from the
144:59 - search using quotation marks to find the
145:02 - exact combination of words typing an
145:04 - esteras to find words where the end or
145:07 - the beginning may be different you have
145:09 - some examples typing a plus sign and
145:12 - here you have some examples so you have
145:14 - many different options to choose from
145:17 - but let's
145:19 - just search for the translation memory
145:22 - for welcome let's see what we get here
145:25 - welcome we can choose where we want to
145:27 - search search in Source or search in
145:30 - Target where do we want to search for
145:33 - this word if we search in the source
145:36 - language then it would have to be in
145:37 - English if we search in the target
145:39 - language it would have to be in Spanish
145:42 - search option we can also choose a
145:45 - numeric equivalence or guess the
145:47 - translation translation memory result
145:50 - here give us this okay the translation
145:53 - that we just submitted over here this
145:55 - was saved to the translation memory of
145:57 - our project so we can just use it right
146:01 - here and that would also appear here in
146:04 - the translation memory suggestions that
146:07 - is how translation memory works and in
146:10 - the third option we find terminology
146:12 - which is the glosser we can manage our
146:14 - glossies by clicking on manage and we
146:17 - can just go here to the settings and and
146:20 - assign different glossies or create new
146:23 - glossaries we can work with the
146:25 - glossaries in this option in the right
146:28 - side bar we can also search for terms
146:31 - here and we can add a new concept here
146:34 - by clicking on this option in crowding
146:37 - adding A New Concept can be helpful for
146:40 - the glossery we will talk about glossies
146:42 - in more detail but for now just know
146:44 - that you can add a concept and a term
146:47 - for that concept to your glossery and
146:49 - you will see them here in the list and
146:52 - finally the file context right now we
146:54 - don't have any but let's just add some
146:58 - context to show you how this works let
147:01 - me go to my project to sources and
147:04 - remember that we had that in the
147:06 - settings in the settings we find context
147:10 - let's just write something like demo
147:12 - context so you can see if this is
147:15 - updated in the translation editor let's
147:18 - save it the file was up updated and
147:22 - right now if we try to see this in the
147:26 - translation editor by reloading the
147:28 - editor
147:30 - again we see this demo context amazing
147:34 - right we are getting the demo context
147:37 - that we wrote in the settings and this
147:39 - supports markdown formatting so you can
147:42 - just add any context that your
147:44 - translators will need to translate the
147:46 - file accurately based on specific
147:50 - context like where it's located on your
147:52 - website or web application or Android
147:55 - application basically anywhere if you
147:58 - add a context you will also see this
148:00 - like a little warning here warning sign
148:02 - that says file has context provided for
148:05 - translators context can be edited in the
148:08 - file settings model the model is what we
148:11 - were just configuring here in the
148:13 - settings great and if you click here on
148:16 - the plus sign you will be taken to the
148:18 - crowding store when you where you you
148:20 - can add apps and
148:22 - Integrations you will be taken to the
148:24 - crowding store where you can add apps
148:26 - and Integrations for your projects we
148:29 - will talk about Integrations and how you
148:31 - can add them during the course there are
148:33 - multiple free apps and Integrations we
148:35 - will talk about them in more detail
148:37 - during the course but just know that you
148:39 - can add them to your file and project
148:41 - from here great another thing that you
148:44 - should know about the translation editor
148:46 - here is that if a string is hidden like
148:49 - this number over right here which is the
148:51 - page number you will see this tag hidden
148:55 - in the sour string you don't necessarily
148:58 - have to translate it and that will not
149:00 - be available for your translators if you
149:03 - want to Mark a string as hidden you can
149:05 - also Mark it here height string so your
149:09 - translators won't translate it and
149:12 - another great thing that I would like
149:13 - you to know about these tools is that
149:16 - crowding mentions that if the term that
149:19 - you search for or in your terminology
149:22 - tab in the glossery is not available in
149:25 - the actual projects glossery the system
149:28 - will show you Wikipedia explanations so
149:31 - let's write programming for example the
149:34 - term that you're looking for has no
149:36 - matches in the project terminology but
149:38 - crowding is super helpful and it will
149:41 - give you this
149:43 - Wikipedia definition it will give you
149:46 - more context about that term in the
149:49 - target language and in the source
149:51 - language so that is very helpful it will
149:54 - also give you like related Concepts that
149:57 - can be helpful to give you more context
149:59 - about the term and how it should be
150:01 - translated so it is very helpful even if
150:05 - you don't have it in the glossery
150:06 - already you won't be able to understand
150:08 - it without leaving the translation
150:10 - editor that's great for productivity
150:12 - awesome now that you know more about the
150:15 - translation editor and the user
150:17 - interface right now remember that we are
150:19 - in in the comfortable mode so let's talk
150:22 - about translation editor modes in the
150:25 - next part of the course we will see how
150:27 - you can customize the layout in a way
150:29 - that fits your needs because crowding
150:31 - has three options comfortable mode side
150:34 - by side mode and multilingual mode
150:36 - they're all very helpful they're
150:38 - different so we will see them in the
150:39 - next part of the course I will see you
150:45 - there the translation editor has three
150:48 - modes to customize the the layout in a
150:51 - way that fits your needs we have three
150:54 - options the comfortable mode which is
150:56 - exactly what you are seeing right now
150:59 - the side by side mode and the
151:01 - multilingual mode Let's talk about the
151:04 - comfortable mode well it's primarily
151:07 - used for translations it has these four
151:10 - main sections that we just saw and you
151:12 - can switch from this mode to the other
151:15 - two modes by clicking on this button
151:18 - here clicking on the menu icon at the
151:21 - top left of the translation editor then
151:25 - you click on view here and you have two
151:28 - other options side by side and
151:31 - multilingual if you click on side by
151:33 - side you will see that there is a change
151:36 - in how you see things you will see some
151:40 - tips for working with the side by side
151:42 - mode like how to review or make
151:44 - translations you can also approve
151:46 - multiple translations at once which is a
151:49 - bold action that can save you a lot of
151:51 - time if you are a proed reader and
151:54 - reviewing multiple translations you can
151:57 - switch again to the comfortable view to
151:59 - make new translations If instead of
152:01 - reviewing you want to
152:03 - translate and that's all friends so you
152:06 - can close that now this mode is
152:08 - primarily used by managers and proof
152:11 - readers to approve the best translations
152:14 - it's also used by translators to vote
152:18 - translations in a r
152:20 - so if you want to vote on the
152:23 - translations and you want to support the
152:26 - best translations you can do so from
152:29 - this mode but this mode is not usually
152:32 - used for actually translating it's more
152:34 - for a review process we also see four
152:38 - main areas we see an area with the
152:41 - strings their current status here the
152:44 - color tells you the status and notice
152:46 - that here we don't see the strings in Al
152:49 - alphabetical order or in the order in
152:52 - which they appear in the file that is
152:55 - usually why we don't use it for
152:56 - translation it's not really meant for
152:59 - translation you will see that the string
153:02 - that we just translated is actually at
153:04 - the bottom welcome to Free code cams
153:06 - curriculum and we see the translation
153:08 - over here if we click on it we are taken
153:11 - to the string in the preview we can reiz
153:14 - this of course it's another way of
153:16 - looking at the string but by default
153:19 - they will not be in the same order you
153:21 - can click on them and that will take you
153:23 - to the string in the preview but they
153:26 - are not in the same order they're
153:28 - actually grouped by their status so all
153:32 - the untranslated strings will be first
153:36 - in the list and then we will go to the
153:38 - translated strings and then approved
153:40 - strings and so on and here we also see
153:43 - that we have two hidden strings which
153:46 - will be at the bottom here at the top we
153:48 - see these options you can select all the
153:51 - strings for bulk actions on all the
153:53 - strings if you need to for example you
153:55 - can approve all the selected strings you
153:58 - can select them all or or just select
154:00 - some of them and approve them approve
154:03 - their translations in bulk so that's why
154:06 - proof readers really like this mode and
154:10 - here you can also search for terminology
154:12 - in the file let's see certification
154:15 - again we go to the strings that have
154:18 - this word in in the string just like in
154:22 - the comfortable mode that is the search
154:24 - filter we also see filter strings we can
154:27 - show all the strings but by default we
154:30 - see all the strings with the
154:32 - untranslated strings first the show all
154:36 - option shows all the strings in the
154:38 - original order of the source file so if
154:41 - we change this to show all we will see
154:44 - the strings in the order that they
154:46 - appear in the file that is how ful but
154:50 - by default you will see this option you
154:53 - can also choose to see untranslated not
154:56 - approved and approved strings or filter
154:59 - by quality assurance issues the issues
155:02 - that we saw previously that you can
155:04 - configure show the machine translation
155:07 - you can filter strings by strings that
155:09 - have comment strings with unresolved
155:12 - issues remember that we could Mark a
155:15 - comment as an issue we will see strings
155:19 - with unresolved issues for all languages
155:22 - or for the current language That We're
155:24 - translating we can also filter by hidden
155:28 - strings or Define our own filtering and
155:31 - sorting parameters here you can create
155:34 - an advanced filter but that is a bit
155:37 - beyond the scope of the course you can
155:39 - dive into this when you start working
155:41 - with crowding okay it is helpful you can
155:44 - use these Advanced options so now let's
155:47 - use this by default you also see some
155:50 - helpful data about the currently
155:53 - selected string you have the length of
155:56 - the source and the translated string you
155:58 - can save it you can cancel this you can
156:01 - copy Source you can also edit the string
156:04 - and you have more options over here
156:06 - similar to the options that we had in
156:07 - the comfortable mode you can also choose
156:10 - to pre-translated it via translation
156:12 - memory or via machine translation you'll
156:15 - find the string details over here and
156:17 - the suggestions and trans ations and
156:20 - previous translations you can see the
156:22 - translation and when it was submitted
156:24 - here you also have the option to toggle
156:27 - whether to highlight the strings by
156:29 - their status just like we did before and
156:31 - if you want to toggle the translation
156:34 - preview like this show the translated
156:36 - string or not it's basically a different
156:39 - layout but it's more optimized for proof
156:42 - ring great so that is side by side view
156:46 - now let's go to multilingual mode this
156:49 - mode is primarily used by translators
156:52 - and pro readers to work on multiple
156:55 - languages at the same time so for
156:57 - example if you're a translator and you
156:59 - know multiple languages this mode can be
157:02 - helpful to save your time you just need
157:04 - to go here to the menu icon here at the
157:08 - top left and go to view and select
157:11 - multilingual now you will see this when
157:15 - you are a multilingual view you can
157:18 - translate a string into multiple
157:20 - languages so let's say that I want to
157:23 - translate the string into Spanish and
157:26 - Italian let's say you just go here to
157:30 - the menu icon then you go to language
157:33 - languages and you select the languages
157:36 - like Spanish and Italian you can choose
157:39 - up to 10 languages at once you can also
157:43 - search fore language if you have a very
157:45 - long list over here then you choose
157:47 - apply once you apply that but you will
157:50 - see this change in the layout which is
157:52 - like very helpful if you know both
157:54 - Spanish and Italian or any combination
157:57 - of languages you can just take the
157:59 - string for example welcome to Free code
158:01 - Cam's curriculum and write your
158:04 - translation in Spanish here and write
158:06 - your translation in Italian here well
158:10 - I'm not very familiar with Italian
158:12 - myself but let's say that I was familiar
158:14 - with Italian I would be able to write my
158:17 - translation here directly but since I'm
158:20 - not familiar with Italian right now for
158:22 - demonstration purposes I will select a
158:25 - machine translations suggestion let's
158:29 - take this for example if I click here in
158:33 - the icon over here at the right I will
158:36 - be replacing the suggestion over here
158:39 - for Italian and I would be translating
158:42 - both languages at once that can save us
158:45 - a lot of time that's great right so here
158:47 - I have it it's it was added by me a few
158:51 - seconds ago that is also a practical
158:54 - example of how you can add or use a
158:57 - machine translation or translation
158:59 - memory suggestion just click here and
159:02 - have that language selected and it will
159:04 - be added automatically when you're
159:06 - working in multilingual mode you will
159:08 - also have two different options to view
159:12 - the translations you will have a list
159:14 - View and a grid view right now we are in
159:18 - list view which is like personally I
159:20 - would recommend using this and this one
159:23 - over here is a grid view the grid view
159:27 - gives you like more information for each
159:28 - string and you can scroll horizontally
159:30 - through the strings and through the
159:32 - columns and you will see like for each
159:36 - string each string will have a specific
159:38 - key to identify it uniquely in the
159:41 - system and you will see the string
159:43 - labels The Source language the
159:47 - translation in Italian and the trans
159:49 - ation in Spanish you will be able to
159:52 - click here on let's say Spanish
159:54 - translation write your translation over
159:56 - here use the suggestions if you need to
159:59 - and then save your translation so that
160:02 - is another way to translate in crowding
160:06 - when you want to translate into multiple
160:08 - languages at once the other parts of the
160:10 - editor and the tools in this
160:13 - multilingual mode are very similar to
160:16 - the side by side view that you're
160:18 - already familiar with so once you are
160:20 - ready and you want to go back to the
160:23 - comfortable mode to continue your
160:25 - translation let's say that you're just
160:27 - translating one language at a time you
160:29 - have two options to go back to the
160:31 - comfortable mode you can either click
160:33 - here on the menu icon then View and
160:37 - comfortable or you can click here this
160:40 - is like a shorter way to reach the same
160:43 - option here in editor view you click
160:47 - here and you choose comfortable Side by
160:49 - side or multilingual right now we are in
160:51 - multilingual so let's go to comfortable
160:54 - and voila here we can see this and we
160:57 - are back to Spanish over here and we
161:01 - still have our saved translation so
161:03 - that's great now you know how to switch
161:06 - view modes in crowding in the
161:08 - translation editor great work so far
161:11 - congratulations on reaching this part of
161:13 - the course now we will see how you can
161:15 - switch to a different file because so
161:17 - far we have been working with the same
161:20 - file throughout the course now we will
161:22 - see how you can switch to a different
161:24 - file we will see that in the next part
161:26 - of the
161:32 - course at some point during your
161:35 - translation or localization process you
161:38 - will want to go to another file once the
161:41 - current file is translated right that is
161:43 - very easy to do in crowding without
161:46 - leaving the translation Editor to do it
161:48 - you just need to click on the main menu
161:51 - at the top left then you go to file and
161:55 - then you go to open here we have other
161:58 - options let's just go through them
162:00 - quickly we see source file preview
162:02 - translated file preview we also see the
162:05 - option to download the file to export it
162:08 - to upload translations to check all the
162:11 - strings in the file we will see that in
162:13 - just a moment we can also replace in the
162:16 - translations or in sources but right now
162:19 - we're focused on opening a new file or
162:21 - going to a different file when we click
162:24 - there we will see these this list of
162:28 - files and right now we only have one
162:30 - file in our project that is the
162:32 - currently opened file if we had another
162:35 - file we would see it here in the list
162:37 - and we would be able to open it we just
162:39 - click on it we click on open and that
162:43 - will take us to the file just let's
162:46 - click on open and we're there great so
162:48 - if you have a list of files you can
162:50 - choose one but another way to do the
162:53 - same thing a lot faster is to click here
162:56 - if you click on the file name that will
162:58 - be a lot faster you will reach the same
163:01 - option and you will be able to choose a
163:03 - file and open it you can also filter
163:06 - files here if you have a complex project
163:09 - structure awesome now you know how to
163:13 - switch files now let's check how you can
163:16 - view all the strings in your project
163:19 - project as a list you will learn how to
163:21 - do that in the next part so I will see
163:23 - you
163:27 - there you also have an option to see a
163:30 - list of all the strings in your project
163:33 - you just need to go to the main menu
163:36 - here at the top left go to file and then
163:39 - to all strings if you click here you
163:42 - will see all the source strings for that
163:45 - file you will see them as a list you
163:48 - will also o see their current status
163:50 - here we see a string that was translated
163:53 - we see a string that is hidden a string
163:56 - that is not translated and you will also
163:58 - see a different status when the string
164:00 - has been approved let's say that we want
164:02 - to approve a string as a proof reader
164:05 - well proof readers will see this option
164:07 - over here and we can just click here if
164:10 - we want to approve it like this and
164:13 - there we go we see this green check mark
164:16 - that indicates that the string has been
164:18 - up approved this approval can be removed
164:22 - by clicking here remove approval and it
164:24 - will go back to the translated status
164:27 - that is something for proof readers and
164:29 - for project managers but that's
164:31 - basically how you approve a string in
164:33 - the translation editor and you can do
164:35 - that in the three different
164:39 - views and just a quick note before we
164:42 - move on to the translation editor
164:44 - settings is that you can also translate
164:47 - right to left language languages in
164:49 - crowding while some languages like
164:52 - Spanish and Italian are written from
164:54 - left to right other languages like
164:56 - Arabic and Udu are written from right to
164:59 - left crowding mentions that when
165:01 - translating between left to right and
165:03 - right to left languages some elements in
165:05 - the translation field in the editor
165:08 - might not be displayed the same way as
165:11 - they will be once the file is exported
165:14 - to make sure that the translations will
165:16 - be displayed correctly in the exported
165:18 - file crowding recommends clicking Copy
165:21 - Source this button when running the
165:24 - translations this is the first button in
165:26 - the toolbar then translating the text
165:28 - into the target language but leaving any
165:31 - variables or Texs exactly the same even
165:34 - if they do not look the same they will
165:36 - be in the right position when you export
165:38 - the file this is an example taken from
165:40 - the crowding documentation where you can
165:42 - see the translation of a right to left
165:45 - language and how this works you just
165:47 - need to click on The Copy Source button
165:49 - that we saw that basically copies the
165:51 - original string and keep variables and
165:54 - TXS exactly the same while you translate
165:57 - the text so now that you know this let's
165:59 - talk about the translation editor
166:01 - settings because you can also customize
166:03 - the settings of the editor so we will
166:06 - talk about that in just a moment stay
166:08 - tuned and let's go to the next
166:13 - part yes you can also customize the
166:16 - settings of the translation editor to
166:19 - access these settings just click on the
166:21 - gear icon located right here at the top
166:24 - right of the translation editor and that
166:28 - will open the model for editor settings
166:31 - you will see a list of settings that you
166:34 - can customize first of all you can
166:36 - choose to show translation memory
166:38 - suggestions with a minimum match of a
166:42 - specific percentage so if a suggestion
166:45 - matches by 70% of the string that will
166:50 - be shown as a suggestion but you can
166:52 - change that percentage by dragging this
166:56 - slider you can also enable QA issues to
166:59 - check the translations for common
167:01 - mistakes like punctuation tags spaces
167:05 - mismatch missing variables and other
167:07 - issues you can show a PumpUp that
167:09 - attempts to predict and automatically
167:12 - complete the transations while you enter
167:14 - them by default this is disabled but you
167:17 - can enable it clicking here you can also
167:20 - Auto approve if your project role is a
167:23 - pro reader or hire but you're also
167:26 - translating the translations added by
167:28 - you will be automatically approved if
167:30 - you enable this option however it's
167:33 - always recommended to have an extra pair
167:35 - of eyes just in case you have any typos
167:37 - or spelling mistakes or that sort of
167:40 - thing that can happen perhaps after
167:42 - looking at the text for too long we
167:44 - don't even notice that so it's always
167:46 - great to have a backup team you can also
167:48 - choose to automatically move to the next
167:51 - string that is enabled by default
167:54 - exactly what happened when we saved our
167:56 - translation we moved to the next string
167:58 - you can have keep this enabled or
168:01 - disable it you can choose the theme for
168:04 - your editor you may choose to use the
168:07 - Dark theme you may choose the light
168:09 - theme or you may choose the auto theme
168:11 - that synchronizes with your system you
168:14 - can also change the appearance of some
168:17 - of the elements in the editor like
168:18 - compact strings view show only the
168:22 - beginning of the source string so it
168:23 - fits in a single line on the list you
168:26 - can show the translation
168:29 - preview and you have different options
168:31 - here like HTML tags if they display or
168:34 - not so if you have like HTML files and
168:38 - you're translating HTML files and you
168:40 - have some tags then by default these
168:44 - tags will be hidden you can choose to
168:47 - show them hide them or just use this
168:50 - auto option which is selected by default
168:53 - you can also display non-printable
168:56 - characters or hide them they are hidden
168:58 - by default and these are more
169:00 - specialized settings you can find more
169:02 - information about them like translation
169:04 - field highlighting and real time spell
169:07 - check
169:07 - displaying and of course you can change
169:10 - the language of the user interface if
169:12 - you're more comfortable with the user
169:14 - interface in let's say Spanish or
169:19 - Portuguese from Brazil or German or
169:22 - Japanese or French you can choose that
169:25 - and you can change the user interface to
169:29 - your language you can also choose to
169:30 - autod detect your
169:32 - language so that can be helpful if it's
169:34 - more comfortable for you you can
169:36 - customize the settings to fit your needs
169:39 - and another productivity tip that I
169:41 - think is very important for you would be
169:44 - keyboard
169:47 - shortcuts
169:50 - to see all the keyboard shortcuts that
169:52 - you currently have available for your
169:54 - operating system just click on this
169:57 - keyboard icon at the top and that will
169:59 - show you a list with all the keyboard
170:01 - shortcuts for your current operating
170:03 - system right now I'm working on Mac OS
170:06 - but we also have specific shortcuts for
170:10 - Windows and for other operating systems
170:13 - just click on that button and you will
170:15 - see these shortcuts you can also change
170:19 - them because if you click here you will
170:22 - be able to modify the shortcut and you
170:24 - can reset them to the default or cancel
170:28 - the operation now that you know how to
170:30 - actually translate your project manually
170:32 - let's see how you can download the
170:34 - translated files remember that we are
170:37 - showing the basic functionality here
170:39 - we're not automating things yet but this
170:42 - is basically how crowding works for
170:44 - individuals who are working on small
170:46 - localization projects you can choose to
170:48 - automate this task but we will cover
170:50 - that later in the course so let's see
170:52 - how you can download your
170:58 - files we're going to see how you can
171:00 - download your translated files we're not
171:02 - going to translate our entire file we
171:05 - just have this string translated but
171:07 - we're going to choose the settings so
171:09 - that we do download the file with the
171:12 - translation that we have and the rest
171:15 - will be in the source language let's go
171:18 - to our dashboard we click here on our
171:22 - profile image then our username we see a
171:25 - new tab and we go here we see our
171:28 - projects after we reach that we just
171:30 - need to go to our project to the
171:33 - translations tab in the translations tab
171:37 - we will see an option to download the
171:39 - project as a zip file this might be
171:44 - collapsed you will may need to open this
171:47 - but translations will be download loed
171:48 - in the original format according to the
171:51 - export settings if we open this link we
171:54 - see the export
171:56 - settings the export settings are exactly
171:59 - what we have here when we saw the
172:01 - settings top we can choose to skip
172:04 - untranslated strings but we won't do
172:06 - that because we do have some
172:08 - untranslated strings in our file and we
172:10 - want to keep them we can skip
172:12 - untranslated files if we're downloading
172:15 - the entire project we can export only
172:17 - the approved the translations and we can
172:20 - also automatically fill in the regional
172:23 - dialects based on those settings the
172:26 - translations will be downloaded we just
172:28 - need to select a target language that we
172:31 - want to download let's say Spanish and
172:34 - then we have two options either build
172:37 - the the project or build and download if
172:41 - we click on build and download we will
172:43 - see that the build is in progress
172:46 - current language current file so we see
172:49 - a little bit of the progress might take
172:51 - a few seconds depending on the size of
172:53 - the project and then we will see a zip
172:57 - file if we open the zip file we will
173:00 - find a doc x file we uploaded it as a
173:04 - PDF but when we download it we're
173:06 - downloading it as a document a word file
173:09 - or a document that we can open in
173:12 - keynote in Mac OS or another text editor
173:16 - here we see our file but we do see the
173:19 - translation replaced over here so it
173:21 - worked if we translate all of these
173:23 - strings we will see the translated
173:26 - version of the file and that is great
173:29 - you can download it manually like this
173:31 - and you have other options to download
173:33 - it not just the translations tab a key
173:36 - thing to note is that the zip file that
173:38 - you're downloading here will have
173:41 - folders for each language if you are
173:45 - downloading all languages like this if
173:48 - you choose all languages then you will
173:50 - have one folder per language and each
173:54 - folder will have its corresponding files
173:57 - the names of the folders will have their
173:59 - corresponding language codes just a tip
174:02 - so you can identify them when you
174:04 - download them awesome and if you need to
174:08 - download all the translated files in
174:11 - just a specific target language you just
174:14 - need to select the language here like we
174:17 - did with Spanish
174:18 - this will download all the files for
174:20 - that specific language and you also have
174:24 - a third option if you don't want to
174:25 - download all the files in a language and
174:28 - you just need to download a specific
174:30 - file then you just need to go to your
174:33 - dashboard tab select choose the language
174:36 - and then go to that file if you click on
174:39 - the three dots to the right you will see
174:41 - additional options and you can click on
174:43 - download like this you will see
174:47 - downloading over here and then you will
174:50 - find a file in your downloads folder and
174:54 - that file will be the translated version
174:57 - in that language remember that we are
174:59 - selecting the language here when we
175:01 - enter this category in the dashboard tab
175:05 - so crowding already knows what we want
175:07 - to download and that is the translation
175:10 - awesome your download should start
175:12 - relatively quickly and you should have
175:14 - your files ready in just a few seconds
175:16 - or a few minutes depending on your
175:17 - internet connection you can also
175:20 - automate this process of exporting or
175:22 - downloading the translated files with
175:24 - crowding Integrations awesome now you
175:27 - know how to download all the files and
175:29 - individual files in your project so
175:32 - let's dive deeper into the concepts that
175:34 - we have been working with let's see them
175:36 - in practice and how you can work with
175:38 - them in crowding we will start talking
175:40 - about translation memory and how you can
175:43 - create manage download and assign
175:45 - translation memory for your project
175:53 - GRE work so far now that you know the
175:56 - basic features of the translation editor
175:59 - and crowding let's talk about more
176:01 - advanced features like the translation
176:04 - memory we have been working with the
176:06 - translation memory in the editor but now
176:09 - we will see the details of how you can
176:11 - manage that memory remember that the
176:13 - translation memory is like a database of
176:16 - strings that we have translated
176:18 - previously in our project and their
176:20 - corresponding translations this is
176:23 - helpful because reusing previous
176:25 - translations can save us a lot of time
176:28 - so are you ready let's begin let's start
176:30 - by creating a translation memory by
176:33 - default when you create a new project
176:34 - you will have a new translation memory
176:37 - for that project but you can also create
176:39 - it manually you can create one manually
176:42 - let's go back to our profile here by
176:44 - clicking here or by clicking on the
176:46 - drop- down menu
176:48 - if we click here on translation memories
176:51 - on this sidebar you will see all the
176:54 - translation memories that you currently
176:56 - have across your projects for example we
176:59 - see fream project demos TM the
177:03 - translation memory this has one record
177:06 - it's available for these languages
177:08 - English Italian and Spanish remember
177:10 - that we added a machine translation for
177:13 - the Italian string this translation
177:16 - memory is associated to this project if
177:18 - we click on it we can go to that project
177:21 - like this to the settings and if we see
177:24 - more options we can choose to upload the
177:26 - translation memory as a CSV or another
177:31 - type of format we can also downloaded we
177:35 - can edit it and we can view all the
177:37 - records in the translation memory we can
177:40 - see all the records over here if we
177:43 - click here we will see all the records
177:45 - in all the translation memories we can
177:47 - also filter the translation Memories by
177:50 - those that we own or those that we
177:52 - manage we can share translation memories
177:55 - and what this means is that we're going
177:57 - to share all the translation memories
178:00 - across our projects like this if we have
178:03 - this enabled they will be shared or
178:05 - otherwise they will only have the
178:08 - translation memories that we assign to
178:11 - each individual project manually we can
178:14 - also choose a translation memory over
178:16 - here we can select it and that will
178:19 - enable these options we can edit the
178:21 - translation memory view its records or
178:24 - create a new translation memory to
178:27 - create a new translation memory just
178:29 - click here on create TM you will find
178:32 - the TM abbreviation a lot throughout
178:34 - crowding so it's best to be familiar
178:36 - with this abbreviation TM translation
178:38 - memory and remember that Mt is machine
178:42 - translation they're different for the
178:44 - name of the translation memory let's
178:46 - just write demo te M and this
178:50 - translation memory will be in English
178:54 - let's say for now we're not going to
178:56 - assign it to any specific project but we
178:58 - can do so by clicking here on the name
179:01 - of the project if you have multiple
179:03 - projects you will see the list over here
179:05 - so you can click on Create and now you
179:07 - will see this translation memory added
179:10 - to the list now you have two translation
179:13 - memories you can select either one of
179:15 - them and you have your new translation
179:17 - memory in the list so congratulations if
179:20 - you click on a translation memory from
179:23 - this list like this one you will be able
179:26 - to view all the records in that
179:28 - translation memory if you click on this
179:30 - view records button this will show you
179:33 - the source strings and their
179:35 - corresponding translations in all the
179:38 - languages that it's currently available
179:40 - in so we have Italian and we have
179:43 - Spanish like this we can edit each
179:47 - individual r record like this English
179:50 - Italian and Spanish right now um I
179:54 - remember that this is a machine
179:55 - translation so it might not be 100%
179:58 - accurate I'm not familiar with Italian
180:00 - so I am familiar with Spanish and this
180:02 - is accurate but if there is anything
180:05 - that we need to change about this record
180:07 - we can change it here directly for that
180:10 - string we can also delete the record so
180:12 - it's not suggested to us anymore when we
180:15 - just translate if we have multiple
180:18 - records which is what we usually have
180:20 - for large projects like free code camp
180:23 - we can search for specific records here
180:26 - we can match the case we can match whole
180:29 - phrase and we can also find an exact
180:32 - match so these are helpful options that
180:34 - we can enable or disable and combine to
180:38 - our needs to fit our needs you can also
180:41 - upload machine translation if you
180:43 - already have this structure you can
180:46 - upload specific files with The Source
180:48 - strings and their corresponding
180:50 - translations into other languages just
180:53 - click on this upload button and you will
180:54 - be able to upload the file here we can
180:57 - see that we can upload translation
180:58 - memory in these formats xlsx remember
181:02 - this is a format that we saw in the
181:04 - slides at the beginning of the course a
181:06 - CSV file which is a comma separated
181:09 - values file or a TMX file these are the
181:12 - three options you can upload that
181:14 - translation memory and you will have it
181:16 - here automatically and you will will be
181:18 - able to use it in your project here you
181:20 - can see a screenshot taken from the
181:22 - crowding documentation this shows you
181:25 - how you can select the matching columns
181:28 - to their corresponding languages when
181:31 - you upload a file for the translation
181:34 - memory now you can also download your
181:37 - translation memory as an xlsx file as a
181:42 - CSV file or as a TMX file if you click
181:45 - on download just choose a format let's
181:47 - say
181:48 - CSV you can choose to download all
181:52 - languages or just a specific language
181:54 - pair so we have the source here English
181:57 - and let's say that we want to
182:01 - download the translations in Spanish we
182:04 - can choose that language pair and that
182:06 - will work but for now let's just
182:08 - download all languages to show you the
182:11 - file if we open the file uh the CSV file
182:15 - this is what we see we see the source
182:17 - string the language code which is
182:19 - English we see the target language
182:22 - Italian and Spanish and we see the
182:25 - corresponding
182:26 - translation so that is very very helpful
182:29 - in case you need to download it and save
182:32 - it locally or upload it to another tool
182:35 - another great thing about translation
182:37 - memory in crowding is that you can
182:39 - assign translation memory to your
182:42 - project here we have our demo
182:44 - translation memory let's assign it to
182:47 - our project let's go to our home here
182:50 - then to our demo project let's go to the
182:52 - settings tab and then we go to
182:56 - translation memories like this at the
182:59 - bottom you will find the assigned
183:01 - translation memories and if you want to
183:04 - assign a new translation memory a second
183:06 - one you can just enable this here and it
183:09 - will have that translation memory for
183:12 - the suggestions in the project the
183:14 - default translation memory will be
183:17 - marked by the star icon the translation
183:20 - memory with the gray star is used by
183:23 - default and you can also set the
183:25 - priority and one of the key things here
183:28 - about the priorities is that when you
183:30 - assign a few or multiple translation
183:33 - memories to a project you can set the
183:36 - priority for each one of them the
183:38 - suggestion from the translation memory
183:40 - with the higher priority will be
183:42 - displayed first it makes sense right but
183:45 - here a higher number represents a higher
183:48 - priority so if I assign priority to here
183:51 - according to crowding that would be a
183:54 - higher priority than this one so the the
183:58 - suggestions from this translation memory
184:01 - would have a higher priority than this
184:04 - one you can also view the records from
184:06 - each one of them but this is a link that
184:08 - will be opened in a new tab will take
184:11 - you to that translation memory and its
184:14 - records awesome now you know how to work
184:16 - with transl ation memory in crowding
184:20 - this is a more advanced feature so
184:22 - congratulations in the next part we will
184:24 - talk about the gloss series and how you
184:26 - can work with them in crowding so I will
184:28 - see you
184:32 - there awesome now that you know the most
184:36 - important aspects of translation memory
184:39 - on crowding let's check out the gloss
184:41 - series and how they work remember that a
184:43 - glossery allows you to store and manage
184:46 - your projects terminology to help your
184:49 - translators with more context and
184:52 - definitions let's see how you can create
184:54 - a glossery because when you create a
184:56 - project a glossery is automatically
184:59 - created for you for that project but you
185:01 - can create new ones that are independent
185:04 - from any project to create a glossery
185:07 - just go here to this option on the
185:10 - sidebar and you will see a glossery for
185:13 - each project that you currently have but
185:15 - if you want to create a glossery just
185:17 - click here on Create
185:20 - glossery and then you will need to enter
185:22 - the glossery name let's say glossery
185:25 - demo and you will need to select the
185:28 - language let's say English you can also
185:32 - assign the glossery to the projects that
185:34 - you can see on this list you can assign
185:37 - them to projects or not and if you don't
185:39 - assign them you can do that later too
185:42 - let's create it for Now glossery demo
185:44 - you can find the number of terms here
185:47 - here the languages and the projects that
185:50 - each glossery is associated with here
185:53 - you can click on the ellipses to find
185:57 - more options for each glossery you can
185:59 - upload the glossies as
186:02 - xlsx a CSV or tbx file format you can
186:07 - download your glossery in either one of
186:10 - those formats you can edit your glossery
186:13 - view its records and delete the glossery
186:16 - so let's see how you can manage glossery
186:19 - terms in crowding it's important to
186:21 - distinguish between a concept and a term
186:25 - a concept is broader than a term this is
186:29 - what the crowding documentation says
186:31 - about their difference a concept
186:33 - incorporates glossery terms and their
186:37 - variations with multiple translations
186:40 - and other relevant information so you
186:42 - can see the concept sort of like
186:44 - englobes all the terms and additional
186:47 - information to add a concept you select
186:50 - it you view the records over here and
186:54 - you will see that the glossery is empty
186:56 - you can ask translators to create
186:58 - glossery terms or upload a glossery to
187:02 - add a concept yourself just click here
187:04 - on ADD concept and you will see this
187:07 - detailed form for adding the New Concept
187:10 - it has many different options for
187:13 - including information about the concept
187:16 - here we have concept details the
187:18 - definition is the concept definition the
187:21 - subject is a branch of knowledge that
187:23 - the concept is related to you can also
187:26 - add short notes about a concept that
187:29 - translators might find helpful you can
187:31 - add a URL to the web page with relevant
187:34 - information about that concept and
187:37 - finally a figure which is like a URL to
187:40 - the relevant image if the concept is
187:43 - related to an image it also mentions
187:45 - these term details because remember that
187:48 - concept is broader a concept can have
187:51 - multiple terms and if we need to add a
187:53 - new term we can add it over here in any
187:57 - language for each term we will be able
188:00 - to select its part of speech like a noun
188:04 - verb adjective the part of speech the
188:08 - type is like for example a full form an
188:11 - acronym an abbreviation short form
188:14 - phrase or variant the status is
188:17 - preferred admitted not recommended or
188:20 - obsolete you can also choose the gender
188:23 - if the term has a gender masculine
188:26 - feminine common neuter or other you can
188:29 - write a definition for that term you can
188:31 - also include notes and a related URL to
188:35 - important information after you create
188:38 - the term you will see it in the list of
188:40 - terms for the Glasser you can choose
188:42 - what details you want to fill in you
188:44 - don't necessarily need to write all of
188:46 - this for each concept ccept or term even
188:48 - though that is recommended if you have
188:51 - all of this information because your
188:53 - translators will definitely thank you in
188:55 - the future for now let's just write the
188:57 - definition and the term like just to see
189:00 - what we get afterwards if we create the
189:03 - demo we get the new term here in our
189:07 - glossery we can see it here we can see
189:09 - the definition concept details and we
189:12 - can also edit the term and delete it but
189:16 - notice that here we are seeing the term
189:20 - over here the term itself and over here
189:22 - we see the concept that the term is
189:25 - related to remember that concept is
189:28 - broader so this is broader than the
189:30 - actual term in this filter we can search
189:33 - for specific terms and here we can also
189:36 - filter by users with this button we can
189:40 - change which columns are displayed like
189:42 - concept details we may choose not to
189:44 - include it we may choose not to include
189:46 - English or we can also hide all the
189:49 - columns you can also delete a glossery
189:52 - term over here if you need it let's just
189:55 - delete it over here delete this term and
189:58 - you will see that the glossery is empty
190:00 - again you can upload or download a
190:04 - glossery as a an xlsx file a CSV file or
190:09 - a tbx file just click on this button and
190:12 - you will be able to upload it or
190:14 - download it you can also delete glossies
190:17 - here if you go to your glossies panel
190:20 - your glossies tool by clicking on the
190:22 - ellipses and then clicking on delete
190:25 - just delete this and to confirm the that
190:29 - you're absolutely sure about deleting
190:32 - the glossery you need to type a specific
190:34 - number that crowding will give you 419
190:39 - 316 delete and there we go we don't have
190:43 - that glossery anymore now how can you
190:46 - assign a gloss to a project well you
190:49 - just go here to home you go to your
190:52 - project you go to settings and here in
190:56 - Translation you will find glossaries
190:59 - here you will see a list of all your
191:00 - glossies and you will be able to select
191:03 - the glossies that you want to use for
191:05 - your project over here the glossery with
191:08 - the gray star will be used by default
191:10 - for the project you can also share
191:13 - glossies across all your projects by
191:16 - checking a specific specific option here
191:18 - in glossaries if you enable this option
191:21 - share glossies which is similar to
191:24 - sharing the translation memory remember
191:26 - you will be sharing the glossies that
191:28 - you create across all your projects that
191:31 - can be helpful sometimes so you can
191:33 - enable it but it is disabled by default
191:37 - awesome now you know how to work with
191:39 - glossaries in crowding so let's go to
191:42 - Quality Assurance checks in crowding and
191:44 - let's see how they work this is another
191:46 - Advanced feature so so let's dive
191:51 - in now let's talk about quality
191:54 - assurance quality assurance is essential
191:57 - for every type of project and this is
191:59 - especially true for localization
192:01 - projects one small typo or spelling
192:04 - mistake can make all the difference to
192:06 - your users this is why crowding
192:09 - implemented efficient quality assurance
192:11 - features to help you deliver the high
192:13 - quality translations that your users
192:15 - deserve to have in our case is the free
192:17 - code cam Community according to crowding
192:20 - these checks will help you to detect
192:22 - some common mistakes easily and quickly
192:25 - and you can resolve all those issues
192:27 - before you actually get the strings live
192:29 - the issues detected by quality assurance
192:32 - check include typos missing commas Extra
192:34 - Spaces and other common mistakes that
192:37 - you might make while you're translating
192:39 - or that your translators might make
192:41 - let's see how you can configure these
192:43 - quality assurance checks this is done
192:45 - for every project individually you go to
192:48 - your project then to your settings tab
192:51 - and then you go to QA checks in
192:53 - Translation here you will see all the
192:55 - quality assurance checks that you have
192:57 - enabled and you can enable or disable
193:00 - them based on your current needs once
193:04 - you enable or disable whatever you need
193:06 - let's just disable some of them as a
193:09 - sample and then you click on this save
193:12 - button you will see that the settings
193:14 - were updated that's great after you have
193:18 - these settings enabled or disabled or
193:21 - customized to your liking let's just
193:23 - enable everything for now how can you
193:25 - check the quality assurance status of
193:27 - your project well you just go here to
193:29 - your dashboard and over here you can see
193:32 - QA checks currently the status of the QA
193:35 - checks is in progress so the checks are
193:39 - running they are in progress if you
193:42 - reload your project you may still see it
193:46 - in progress but here you will see the
193:48 - status of your QA checks you may see
193:50 - them as off when they are disabled let's
193:54 - just try to disable them for now you can
193:57 - disable them by deselecting this and
194:00 - saving your settings and here if you go
194:03 - back to your dashboard you will see that
194:05 - they are
194:07 - off if we turn them on again like this
194:10 - we save our changes and we go to our
194:13 - dashboard we will see this in progress
194:16 - and after the checks are completed we
194:18 - will see a different status no issues if
194:22 - the checks did not find any issues with
194:24 - our strings or issues found when there
194:27 - were issues found and we will also be
194:29 - able to see these issues when we try to
194:32 - approve a string let's go to our Spanish
194:35 - translation and let's just to test this
194:38 - add an issue to our
194:41 - translation let's add an extra space
194:43 - here this is looking really bad right
194:47 - but let's save our translation for now
194:50 - and when we try to save our translation
194:52 - our quality assurance checks are
194:54 - checking if everything is correct but
194:56 - they detected that the translation
194:58 - contains three spaces in a row we have
195:01 - an option to autofix the issue to save
195:04 - the translation anyway if we are sure
195:06 - that this is actually not an error or to
195:09 - cancel the operation and we can just
195:11 - change this ourselves let's choose
195:14 - autofix this will autofix the
195:16 - translation and then we can save it
195:20 - again what happens if we try to save the
195:22 - translation again well we see this check
195:26 - that says that an identical translation
195:28 - of the string has been already saved
195:30 - vote for the existing translation
195:32 - instead of adding a new one if we save
195:36 - the string with issues like these let's
195:40 - just save this with issues we see that
195:42 - the translation contains three spaces in
195:44 - our Rob but let's just save this anyway
195:47 - and we go back to the string we see that
195:49 - this string has one quality assurance
195:52 - issue the translation contains multiple
195:54 - spaces in a row that will be helpful for
195:57 - the proof reader who is going to check
195:59 - and approve the string and we can also
196:02 - see this if we go back to our project
196:06 - and we check the status the quality
196:08 - assurance checks are still in progress
196:12 - but after the process has been completed
196:14 - we will see that there were issues found
196:17 - and we will be able to fix them in the
196:19 - strings that is the power of quality
196:21 - assurance checks now after I approve the
196:25 - string the string is now in green
196:29 - because it has been translated and
196:31 - approved this is a sample image from the
196:33 - crowding documentation showing what you
196:35 - would see if the quality assurance
196:38 - issues are found in your project you
196:41 - would see something like this quality
196:43 - assurance is a very important step that
196:45 - you should definitely take very
196:47 - seriously during your localization
196:49 - process so now you know how to enable
196:52 - them and work with them in crowding
196:54 - let's continue in the next part of the
196:56 - course we will see how you can upload
196:58 - existing translations you will have
197:00 - three different options so we will see
197:02 - them in the next part of the course I
197:04 - will see you
197:08 - there if you have existing translations
197:12 - already written in a specific file
197:15 - format you can also upload them to your
197:18 - project and use them directly you have
197:20 - three options you can upload them via
197:23 - the translations tab over here you can
197:26 - upload them via the specific language
197:29 - page or you can upload them via the
197:31 - translation editor we will see a three
197:34 - options you can upload translations from
197:37 - this translation tab by clicking here
197:40 - upload existing translations if you drag
197:43 - existing translations here you will be
197:46 - up uploading them and you can upload
197:48 - them from your file system according to
197:50 - crowding the supported formats for
197:52 - uploading translations include those
197:55 - that have a key value structure such as
197:57 - for example Json or Android XML Mac OS
198:02 - or iOS strings and there are many
198:04 - different formats here you can find a
198:06 - list also CSV files are accepted and
198:10 - crowding also mentions that for file
198:12 - formats that do not have a defined
198:14 - structure translation upload is handled
198:16 - bu by an experimental machine learning
198:18 - technology so when they say experimental
198:22 - that means that it might not be 100%
198:24 - accurate great that is how to upload it
198:26 - from the translations tab you can also
198:29 - upload them from the language page you
198:31 - just go to the dashboard tab then you
198:33 - click on a target language and then you
198:36 - click on a file but instead of clicking
198:39 - on the name of the file itself you will
198:41 - click on the three dots to show more
198:44 - options and then you will see upload
198:47 - translations you can allow Target
198:49 - translation to match the source you can
198:52 - approve added translations or you can
198:54 - translate hidden strings those are
198:57 - options that you can enable before you
198:59 - actually upload your file just click on
199:01 - select file and you will see your file
199:03 - system an option to select the file from
199:06 - your file system and that will upload
199:09 - the translations for your file and
199:12 - finally the third option is to upload
199:14 - via the translation editor if if you
199:17 - double click on the name of the file and
199:18 - you go to the translation editor then
199:21 - you can click on this menu and then in
199:23 - file you will find the option to upload
199:26 - translations you will see the same three
199:29 - options and you will be able to select
199:31 - the file from your file system awesome
199:34 - now you know how to upload translations
199:37 - there are many supported file formats on
199:39 - crowding for all of these operations
199:42 - because so far we have mentioned many
199:44 - different file formats during the course
199:47 - that you can work with in crowding but
199:49 - actually crowding supports more than 100
199:51 - file formats you can view all of these
199:54 - formats in the crowding store over here
199:57 - all of these formats are supported by
200:00 - crowding you can filter the list with
200:02 - this search bar you can also filter them
200:05 - by author or by tag and you can sort
200:08 - them by relevance name and date you just
200:12 - need to go to support. crowd.com /s
200:15 - supported format
200:17 - and then you click on this button view
200:19 - on crowding store that will take you
200:22 - here to this list and there you will
200:24 - find the catalog of all the formats that
200:27 - you can use and work with in crowding it
200:30 - and it's very helpful for any type of
200:32 - project great now you know all the
200:35 - supported file formats so let's talk
200:37 - about pre- transation remember pre-
200:39 - transation it was a way to translate
200:42 - your project files automatically when
200:44 - you upload them so we will see how you
200:46 - can enable enable that in
200:49 - crowding now let's talk about pre-
200:52 - transation if your goal is to save time
200:55 - and improve your productivity pre-
200:57 - transation through machine translation
200:59 - can be exactly what you need this is an
201:01 - automated process that applies computer
201:04 - generated translations to your project
201:06 - when you upload a file and you can set
201:09 - that up in crowding in cring you can
201:11 - customize machine translation engines to
201:13 - use this feature you have two
201:15 - alternatives to implement the process
201:17 - you can do it either manually or
201:19 - automatically so let's talk about the
201:22 - manual pre- transation to configure pre-
201:26 - transation for your project you just go
201:28 - to your project to your dashboard Tab
201:31 - and then here you see the option for
201:33 - pre- transation remember these acronyms
201:36 - I told you that their difference was
201:38 - going to be very important because
201:40 - crowding uses these acronyms very often
201:42 - and they are very similar so at first
201:44 - you might find them a bit confusing but
201:47 - remember this is translation memory and
201:49 - this is machine translation if you
201:52 - choose to pre- translate via translation
201:55 - memory you will be using the database of
201:59 - existing translations from your project
202:02 - and if you choose via machine
202:03 - translation you will be generating the
202:06 - translations automatically if you choose
202:09 - via machine translation you will need to
202:12 - choose a translation engine by default
202:15 - you will use crowd translate but based
202:18 - on your current plan you might be able
202:20 - to choose another translation engine
202:23 - like Google translate or Amazon
202:25 - translate or any translation engine that
202:29 - you need you can choose the target
202:30 - languages you can choose different files
202:34 - and you can filter by labels and exclude
202:37 - labels so that is what you can do to set
202:40 - up pre- transation via machine
202:42 - translation you just choose your target
202:44 - languages choose your files
202:46 - and you can see that this enables the
202:49 - button for pre- transation Via machine
202:52 - translation this will give you automated
202:55 - translations translations generated by a
202:58 - computer by an artificial intelligence
203:00 - model that your proof readers should
203:02 - check before they are approved but it
203:05 - can save them a lot of time if you
203:07 - automate this process because they will
203:09 - have something to work with and they can
203:12 - just modify them you can also enable
203:14 - this for specific Target languages if
203:16 - you don't want to do that for all your
203:18 - target languages and you can do that for
203:21 - specific files you can use these search
203:23 - filters to filter the list if you have a
203:27 - complex project structure if you choose
203:29 - to automate the process the system will
203:31 - pre- translate new content automatically
203:34 - and another great thing is that you can
203:36 - set up pre- transation via translation
203:39 - memory if you have to use translations
203:42 - from your database of previous
203:45 - translations if you have shareed
203:47 - translation memories option if you have
203:50 - that option enabled all the translation
203:52 - memories from the projects you own or
203:54 - manage are already shared so you can
203:57 - pre-ra using them you can select the
204:00 - target languages for which you would
204:02 - like to use this automated process and
204:04 - select the files you can also set the
204:07 - minimum match ratio to translate only if
204:10 - it's a 100% match you can skip any
204:14 - approved translations apply for
204:16 - untranslated strings only this is very
204:19 - helpful and it is selected by default so
204:21 - you don't end up translating strings
204:24 - that were already translated and you can
204:26 - also approve added translations but only
204:29 - if they have like for example a perfect
204:31 - match a perfect match that was approved
204:35 - by a pro reader previously or you can
204:38 - just approve all of them skipping Autos
204:41 - substituted suggestions or all of them
204:43 - by default if you enable this option you
204:46 - can choose either one of these options
204:48 - you can also filter by label exclude
204:50 - labels and you have these notes for auto
204:55 - substitution and prioritize translation
204:57 - memories in the settings tab how you can
205:00 - assign and prioritize the translation
205:02 - memories we talked about that in a
205:05 - previous section right how to assign
205:06 - them a specific priority if you set this
205:10 - up your files will be automatically
205:12 - translated then you can open the files
205:14 - in the translation editor and and just
205:17 - check the automated translations but you
205:19 - will have something to work with
205:21 - immediately and that will save you time
205:23 - great that is how you can work with pre-
205:25 - transation in the next part we will talk
205:27 - about offline translations because
205:30 - sometimes you and your team will need to
205:32 - work offline crowding has a great
205:34 - feature for this and we will talk about
205:37 - that in the next part of the
205:43 - course now we will see how you can work
205:45 - with offline translation because
205:48 - sometimes you and your team may need to
205:50 - work offline crowding has a great
205:52 - feature for this you can download your
205:54 - files for situations where you may not
205:57 - have access to the internet or you may
205:59 - like to work with the files locally and
206:01 - then upload your translations to enable
206:04 - or disable offline translation for your
206:07 - project you may choose to disable it as
206:09 - well you just need to go to your project
206:11 - then to the settings tab and then
206:13 - privacy and collaboration after after
206:16 - that you will find this option allow
206:19 - offline translation this allows
206:22 - translators to download the source files
206:24 - to their machines and upload
206:26 - translations back into the project
206:29 - project owner and managers can always
206:31 - download sources and upload translations
206:34 - so this is basically for translators and
206:36 - prove readers owners and managers will
206:39 - always have this option we can enable
206:42 - this or disable this each file can be
206:45 - downloaded individually in two different
206:47 - ways the source files you can download
206:49 - the source files themselves to translate
206:51 - them locally and then upload your
206:53 - translations you can download them via
206:55 - the translation editor or via the
206:57 - language page let's see how you can do
206:59 - that via the language page just go to
207:01 - your project to the dashboard you select
207:04 - the language let's say Spanish and then
207:06 - in the list of files click here on the
207:09 - three dots and then just download it if
207:13 - the file has not been translated you
207:15 - will will see the original source file
207:18 - because if you assign that task to a
207:20 - translator and no one has ever started
207:23 - translating the file you can just
207:25 - download it and you will see the
207:27 - original file in English if someone has
207:30 - already started translating the file you
207:32 - will see the translated version with the
207:35 - translations that have already been
207:37 - approved like this but if you haven't
207:40 - started translating the file that will
207:42 - be exactly the same to the original
207:44 - source file that is the first option but
207:47 - you can also download the file from the
207:49 - editor let's just go to the editor by
207:52 - double clicking the file here and let's
207:54 - open the menu you will see the option to
207:57 - download from here you will be
207:59 - downloading the file you will see it in
208:01 - your list of downloads and if you open
208:04 - the file you will see the file over here
208:07 - with the translations of course but if
208:09 - you haven't started translating it that
208:12 - would be the source file awesome now you
208:14 - know how to download individual files
208:18 - for offline translation you can also
208:21 - download all the files for a specific
208:25 - language in your project if you want to
208:27 - download all the source files let's say
208:30 - that you need to translate for Spanish
208:32 - you haven't started translating them yet
208:35 - then you can click here to download or
208:37 - upload download translations upload
208:40 - translations and you can export them in
208:43 - this format awesome now you know how to
208:47 - work with offline translations that can
208:49 - be very helpful for you and your
208:55 - team now let's see how crowding can help
208:58 - you if you're working with a team on a
209:00 - localization project or perhaps you're
209:03 - the founder or manager of an
209:05 - organization that is interested in
209:07 - localizing a product and you will need
209:09 - to work with team members let's see
209:12 - these features in crowding first we are
209:15 - going to see how you can invite project
209:17 - members and contributors to invite
209:20 - members to your projects go to your
209:22 - project and then go to the members tab
209:25 - once you're in the members tab you just
209:27 - need to click on the green invite button
209:30 - you can also click on this button and
209:32 - then you will see the option to invite
209:34 - people you will need to enter
209:36 - information for these options before
209:38 - sending the invitations first you need
209:41 - to select a specific role then you need
209:44 - to enter the emails or or usernames
209:47 - because you can invite multiple members
209:49 - and afterwards you will find a default
209:52 - message here you're invited to join the
209:54 - project and then you will see the name
209:56 - of your project here by default but you
209:59 - can customize it to your liking or you
210:01 - can just leave it blank if you want to
210:04 - but of course it's always best to be
210:06 - kind to the new team members so I would
210:10 - keep this or customize it let's see how
210:13 - this works if you click on select role
210:16 - you should see something like this you
210:18 - will see all the available roles that
210:21 - you can assign in crowding by default
210:24 - the translator role will be selected
210:26 - because this is what we will usually
210:28 - assign for team members right
210:30 - translators they can translate the
210:32 - content and vote for existing
210:34 - translations you will also see these
210:36 - roles manager developer translator proof
210:39 - reader and language coordinator we will
210:42 - talk about these roles in more detail in
210:44 - just a moment but here on the right you
210:47 - will see these fields in these fields
210:50 - you can assign specific languages for
210:53 - which you would like to assign these
210:55 - roles to that member or those members
210:58 - for example you could assign the role of
211:03 - translator for a particular contributor
211:06 - for the language Italian and you could
211:09 - also assign the role of proof reader to
211:12 - that same contributor for Spanish or you
211:15 - can assign both languages Italian and
211:18 - Spanish so the contributor would have
211:20 - these roles for these specific languages
211:23 - but if you want to assign the role of
211:26 - proof reader or translator for all the
211:28 - languages that you currently have
211:30 - available on your project you just leave
211:32 - this empty we will talk more about
211:35 - member roles in just a moment once
211:37 - you're ready you just click save here
211:39 - and you go back to the main options for
211:42 - now let's just assign the role of
211:45 - translator for all languages okay let's
211:48 - click on Save here and we go back to our
211:51 - invite people form let's just write an
211:54 - email here to send an invitation you're
211:56 - invited to join the project free code
211:58 - cam project demo if you click here on
212:01 - invite you will send an invitation to
212:03 - that project member but there is another
212:06 - way to invite that member you can also
212:09 - send invitation links if you click here
212:12 - on get link you will also have the invit
212:16 - URL copy to the clipboard and if you
212:20 - just copy and paste it let's just copy
212:22 - and paste it on a plain text file to
212:25 - preview it you can see that it's a URL a
212:29 - crowding URL with your project and then
212:32 - it has a specific invite code when the
212:35 - new team member clicks on this link they
212:38 - will be able to join the project with
212:40 - the permissions that you granted them
212:43 - and after you get a link you will also
212:45 - be able able to manage links by clicking
212:48 - here manage links these are the links
212:51 - that you've generated so far here I
212:53 - clicked on the get link button twice so
212:56 - I have two links you can see that the
212:58 - times are really close and you can see
213:00 - the roles assigned with that link for
213:03 - that member and you can also click here
213:06 - to copy the link to the clipboard or you
213:10 - can also revoke the link let's just
213:12 - revoke this as a test and it's removed
213:15 - from from the list of links that we
213:17 - currently have available if we click
213:20 - here we just copy the URL to the
213:22 - clipboard and we can paste it anywhere
213:25 - we need to like an email or a chat
213:27 - anywhere where we want to send the
213:30 - invitation to the team member once we're
213:32 - ready managing the links we just click
213:35 - on done and let's also test how the
213:39 - invite button works I am going to send
213:42 - an invite to one of my emails to my one
213:46 - of my accounts select the role of
213:49 - translator and with this default message
213:53 - let's click on invite over here and I
213:55 - see that one invitation was sent
213:58 - successfully now if I go where I
214:01 - received the invitation like I am seeing
214:04 - what a member what a normal member would
214:08 - see in might take a few minutes two or 3
214:11 - minutes and then I got the invitation to
214:14 - join the project to join the translation
214:16 - project this is what the new team member
214:19 - would see when you send them the invite
214:22 - hello the Stefania demo in this case the
214:26 - project owner invites you to participate
214:28 - in the free cam project demo translation
214:31 - project at crowding here we can see the
214:34 - default message that we sent with the
214:36 - invite of course it would be great if
214:38 - you customize this to invite your team
214:41 - members and here we see a link get
214:44 - involved if user clicks on it they will
214:48 - be taken to the project and they will be
214:51 - added to the project so let's open this
214:54 - in in an incognito window because right
214:56 - now I am in my crowding account so I
214:59 - have to simulate as if I have no
215:01 - relation to that account I am just a
215:03 - normal person what I see is that I have
215:06 - been invited to the free code cam
215:08 - project demo project with the following
215:10 - permissions as a translator I can sign
215:13 - up for free or log in and I will
215:15 - automatically join the project so if I
215:18 - create that account and I join with that
215:21 - link I will be able to contribute to the
215:24 - translation project and just to have one
215:27 - contributor and I so that I can show you
215:29 - all the different features of how we can
215:31 - handle team members I'm going to do that
215:33 - with my second account I have two
215:36 - accounts on crowding one with the
215:38 - project and another one to simulate a
215:40 - contributor so that's what we're going
215:42 - to do next now you know how to invite
215:46 - new contributors you just select a role
215:48 - you write their emails or usernames like
215:51 - sample
215:53 - gmail.com and then you just write the
215:55 - message send the invite or you get a
215:58 - link great so I am just going to sign in
216:02 - to my other account accept the
216:04 - invitation and I will be right back to
216:06 - this project this is my second account
216:10 - this is the other account that I created
216:12 - on crowding and this is what I'm going
216:15 - continues to simulate being a new team
216:18 - member let's say that I received this
216:21 - invitation by email and I just clicked
216:24 - on get involved I created my crowding
216:27 - account and after I click on that link I
216:30 - see this welcome to Free code cam
216:32 - project demo translations you have
216:34 - joined the translation team you can
216:36 - leave this project if you don't want to
216:38 - participate in the translations so if
216:41 - you click here you will leave the
216:42 - project but since you joined this is is
216:45 - what you would see as a contributor and
216:48 - now that we have this new contributor in
216:50 - our project let's just go back to our
216:54 - project owner perspective this is from a
216:56 - contributor's perspective we just
216:58 - accepted the invitation we're part of
217:00 - the project now but what will you see if
217:03 - you are the project owner that is what
217:06 - we will see in just a moment let me go
217:08 - back to my project owner account
217:11 - estefania demo and here I'm back with my
217:15 - my project owner account here I can see
217:17 - my project I own one project but now we
217:21 - do have an an important change now if we
217:24 - go to the members tab we can see that we
217:26 - have another account another member of
217:30 - the team right now Stefania demo is the
217:34 - project owner account it's my account my
217:37 - personal account where I created the
217:39 - project this is the owner but this is a
217:43 - translator I just used my name here but
217:45 - it could be any team member that I added
217:47 - to my project okay what can we do with
217:50 - this once we have our team member
217:54 - already signed up for a project project
217:56 - roles can play a key role in this
217:59 - platform as well because you can grant
218:01 - different permissions to your team
218:04 - members now that you know how to invite
218:06 - them let's see how you can change their
218:08 - project
218:13 - role we can find more information about
218:16 - the different roles that we can assign
218:18 - by clicking here on invite and then
218:20 - clicking on the role this will give us
218:24 - more details about each role in crowding
218:27 - and what it involves a manager has
218:29 - unlimited control over the entire
218:32 - project developers can upload files edit
218:35 - translatable text connect Integrations
218:38 - and use the API they cannot manage
218:40 - project tasks members and reports that
218:43 - is reserved for managers and and project
218:46 - owners but they can work with the files
218:49 - translators can translate the content
218:51 - and vote for existing translations
218:53 - usually when you add a team member the
218:56 - new member will be a translator by
218:58 - default and then you can upgrade their
219:01 - role to Pro reader and Beyond Pro
219:03 - readers can translate and proofread the
219:06 - content they are in charge of checking
219:10 - that everything is okay with the
219:11 - translations and with the localization
219:14 - process and finally we have language
219:16 - coordinator language coordinators can
219:19 - manage people of selected languages
219:22 - because here we can also assign these
219:24 - roles for specific languages remember so
219:27 - we can also have language coordinators
219:29 - for specific languages to assign a
219:32 - specific role to a member you can either
219:35 - select the role here in the invitation
219:37 - when you invite that team member and you
219:40 - can also select the role on the member's
219:42 - profile page let's see how you can do
219:45 - that because you already know how to
219:46 - select the role here on the invitation
219:48 - if you grant manager the manager role by
219:52 - default that will have unlimited control
219:54 - over the project so all of these will be
219:57 - like marked by default and they are gray
219:59 - out okay but if you go here below you
220:02 - can assign the different roles
220:04 - individually as well so now that you
220:07 - know how to do this in the invitation
220:09 - let's see how you can do that in the
220:10 - memb profile here we have estefania CN
220:14 - this is the username of my team member
220:17 - if I double click on this member I see
220:21 - member info this is like a summary of
220:25 - that member in the project it's very
220:27 - helpful here you can see the profile
220:29 - image the username the roles that it
220:32 - currently has assigned how you can also
220:35 - click here to contact that member when
220:38 - the member joined when it saw the
220:41 - project for the last time and how many
220:44 - strings the user has translated approved
220:47 - voted and commented we see that please
220:51 - note that this data only shows current
220:54 - contributions removed ones are in
220:56 - display here here you have some options
220:58 - for that user remove contributions
221:01 - remove contribution you can open profile
221:04 - remove from Project or block a project
221:07 - because yes if you need to you can also
221:10 - remove or Block members from your
221:12 - project because sometimes things may go
221:14 - wrong with someone in the project so if
221:17 - you need to block their access entirely
221:20 - you can do so from here and here in the
221:23 - permissions tab you can also change
221:26 - their roles right now we only have
221:28 - translators selected but let's say that
221:30 - I want to upgrade this to proof reader
221:33 - and I want to make this contributor a
221:35 - proof reader for Spanish I
221:39 - can let's say that this team member can
221:43 - translate and prove read in Spanish
221:45 - so I would just add the language here
221:49 - and select that rle approv reader and
221:51 - select Spanish over here and after that
221:54 - I just need to click on save like this
221:57 - and then done we need to click twice on
222:01 - this button first to save and then to
222:04 - close this done like this and now we see
222:08 - that the project roll has been updated
222:10 - like this we see translator and then a
222:13 - shortened version of Pro
222:16 - great so now you know how to change the
222:18 - project role you can do that on on the
222:21 - imitation itself or if you already
222:24 - invited the member remember that you can
222:26 - just open the members info and change
222:28 - the permissions awesome in the next part
222:32 - we will talk about project managers they
222:34 - play a key role for the team and for the
222:37 - project so we will dive into the
222:39 - functionality that was specifically
222:41 - designed to add and manage project
222:43 - managers in crowding we will talk about
222:46 - this in the next section so I will see
222:48 - you
222:51 - there project managers play a key role
222:54 - for your team and for your project they
222:57 - can have unlimited control over the
222:59 - entire project and they can help you to
223:02 - coordinate and assign tasks to team
223:04 - members we will talk about tasks in more
223:07 - detail in just a few minutes in an
223:10 - upcoming section but now let's focus on
223:13 - Project managers and let's see how you
223:15 - can add a project manager to your
223:17 - project you can assign the role of
223:21 - manager here in the invitation you just
223:24 - click on the roll and you select manager
223:27 - here the manager has unlimited control
223:30 - over the entire project and
223:33 - alternatively you can also add managers
223:35 - by going here to managers on the left
223:39 - sidebar and if you click here you go to
223:42 - managers you will see that there are no
223:45 - managers yet invite project managers who
223:48 - help you manage your projects in
223:50 - crowding you can modify permissions for
223:52 - a user at any time and this is where our
223:55 - member account Stefania CN will come
223:59 - into play we will grant our contributor
224:02 - manager role if we need to invite a new
224:05 - manager for our project we can click
224:07 - here on ADD manager we will need to
224:10 - enter the email or username of the
224:13 - manager that we are inviting writing we
224:15 - can also write a message and we can set
224:18 - the manager's permissions if we want the
224:21 - manager to be able to manage the
224:23 - projects the translation memories and
224:26 - the glossaries we can click this to
224:31 - select all of these if we had multiple
224:33 - projects here we would see a list with
224:35 - all the projects and we could select
224:37 - specific projects for that manager we
224:40 - can also choose specific translation
224:43 - memories for that manager to manage and
224:47 - we can also select specific glossies all
224:51 - the translation memories and glossies
224:53 - that are assigned by default to a
224:56 - project are also marked by default okay
225:00 - here we have our only demo project that
225:03 - is one way of inviting a manager but we
225:07 - can also promote an existing team member
225:10 - to manager and we can do that here by
225:13 - going to our project
225:16 - then going to members and then just
225:18 - changing the role of that member we just
225:21 - double click on its user name or click
225:24 - here on details we go to permissions and
225:27 - then we select this manager the manager
225:30 - has unlimited control over the entire
225:33 - project so we save this we click on done
225:37 - and now we see the project role of
225:40 - manager again if we go back we see
225:42 - manager and now the role has been up
225:44 - updated here if we go to the managers
225:48 - section here on the sidebar now we see
225:51 - this user as a manager and it's the
225:53 - manager for this particular project from
225:56 - this list of managers we can also edit
225:59 - the manager's permissions and everything
226:02 - Associated to that manager if we click
226:05 - here on the ellipses we see edit
226:07 - permissions and remove we can remove a
226:11 - manager we can edit permissions and if
226:13 - we edit permissions we see this we can
226:16 - change the permissions for specific
226:19 - projects let's say that we don't want
226:20 - this manager to have permissions over
226:23 - this project anymore we just unmark it
226:26 - uncheck this or if we selected multiple
226:30 - translation memories and now we want to
226:32 - remove those permissions we can just
226:35 - update this and save the changes we can
226:38 - also go to that user's profile by
226:41 - clicking here it will be opened in a new
226:43 - tab like this so let's just save this
226:48 - and voila here we have the updated
226:51 - manager you can also remove a manager by
226:55 - clicking here on the ellipses and
226:56 - clicking on remove we are asked if we
226:59 - would like to remove this manager we can
227:02 - click here on remove or we can click on
227:05 - cancel for now we're not going to remove
227:07 - the manager but just know that you can
227:09 - do that anytime you need to with the
227:12 - ellipses and remove there is is an
227:15 - important difference between a manager
227:17 - and a pro reader on crowding managers
227:20 - and pro readers have key differences in
227:23 - their roles and permissions to explain
227:25 - this in more detail we can go to
227:28 - crowding knowledge base you can find
227:30 - that at support. crowding
227:33 - docomo project participant roles QA this
227:37 - is this article managing roles of
227:40 - project members and then you go down
227:43 - here to Q Q&A questions and answers this
227:47 - is important I think to know the
227:48 - difference between a manager and a pro
227:50 - reader the question says I'm a project
227:53 - owner do I need to invite a manager or a
227:56 - proof reader what do I need the main
227:59 - difference between a manager and a proof
228:01 - reader is the following in addition to
228:03 - approving translations added by
228:06 - translators managers can also invite and
228:09 - remove project members so they have
228:12 - higher permissions upload source and
228:14 - translation files to the project set up
228:18 - Integrations Etc so they have additional
228:22 - permissions than just approving the
228:24 - translations if you want to have a
228:26 - project member who should have access to
228:28 - the features mentioned above you need to
228:31 - invite a project manager alternatively
228:33 - if you plan to manage the project
228:36 - yourself it will be enough to invite a
228:38 - proof reader so that is the answer to
228:40 - the question the difference between
228:42 - manager or proof reader awesome now that
228:45 - you know more about project managers
228:47 - let's talk about tasks because tasks in
228:50 - crowding can help you to stay organized
228:52 - and manage your projects more
228:53 - efficiently we will see them in more
228:55 - detail in the next part so I will see
228:58 - you there let's
229:03 - continue organization is the key to
229:06 - success in any project and crowding
229:09 - definitely knows this because they
229:11 - Incorporated very helpful tools called
229:13 - tasks on their platform to help you
229:16 - organize your project and coordinate
229:18 - tasks among your team members with tasks
229:21 - you can assign specific files to your
229:23 - translators and proof readers you can
229:25 - set duat for specific tasks you can
229:28 - receive notification discuss specific
229:31 - task with other team members and even
229:34 - split a task among different team
229:37 - members you can also track the status of
229:39 - each task in a board where you can drag
229:42 - and drop your tasks from one status to
229:45 - the next that sounds great right it's a
229:47 - great tool for tracking the progress of
229:49 - your project so let's see how you can
229:52 - actually create them and work with them
229:54 - in detail to create a task you just need
229:57 - to go to your project and then to the
229:59 - tasks tab over here at first of course
230:03 - this will be empty we won't have any
230:05 - tasks but don't worry we will take care
230:07 - of that in just a moment we're going to
230:09 - create a task to do that we click here
230:12 - on the green create task button there we
230:15 - will see new task please note that a
230:18 - task can only be assigned to one project
230:21 - so that is why we have the tasks tab
230:24 - within a specific project all the tasks
230:27 - that you create here will be applied to
230:30 - that project let's try to create a new
230:33 - task what kind of information can we
230:35 - enter we can enter the task name let's
230:39 - say for example translate the welcome to
230:41 - Free code cam file let's just add this
230:44 - name and we can enter a description we
230:48 - need to translate the welcome to free
230:51 - codam file as soon as possible just as a
230:54 - demo description you can of course
230:56 - customize this to your liking then we
230:59 - see the type what is the type of task
231:02 - well we can translate the the file or
231:05 - complete the translation by our own
231:07 - translators we can prove read it by our
231:10 - own prove readers but for now we're
231:11 - going to translate it by our own
231:13 - translators
231:15 - we can set a du weate let's say that
231:17 - well right now we're in December 2023 so
231:20 - let's say that I want to have that file
231:23 - ready by December 8th we can set the
231:26 - time a specific time we can change the
231:28 - hour here with the slider and we can
231:32 - also change the minute that's really
231:34 - nice right we want to have this ready by
231:38 - let's say 10:30 great so after we have
231:41 - that we just click somewhere outside the
231:43 - calendar and we can move on here we have
231:49 - an option for the strings the task will
231:52 - be assigned or will be related to all
231:54 - the untranslated strings or we can also
231:57 - set a specific range uh date range for
232:01 - the strings that will be assigned to the
232:03 - task for example all the strings that
232:06 - were modified today all the strings that
232:08 - were modified in the last seven days
232:11 - this is helpful for reducing the scope
232:13 - of the task the because remember that
232:15 - you will be assigning this to
232:16 - translators and proof readers so they
232:19 - should have a clear idea of what they
232:21 - should be working on so this just helps
232:23 - you to narrow down the scope of the task
232:26 - or you can just select all the
232:27 - untranslated strings and keep the task
232:30 - Broad and open you can filter by labels
232:34 - you can exclude specific labels for the
232:36 - strings you can skip strings that are
232:39 - already included in other tasks that is
232:42 - also very helpful if you select this you
232:45 - will be skipping strings that are
232:48 - already part of other tasks to avoid any
232:51 - duplicate work from your translators so
232:54 - you can select this option which is
232:56 - broader but still avoid duplicate work
232:59 - with this option and then we see the
233:02 - files here you will see all the files of
233:05 - your project you can also filter with
233:07 - this search bar and to select on a
233:10 - specific file you just click here to
233:13 - select the file here you see the number
233:15 - of words and you will also be able to
233:18 - assign a specific language for the task
233:21 - or multiple languages if you need to
233:23 - please note that if the task has more
233:27 - than one target language here then the
233:29 - system will create a task for each
233:32 - language and just to show you that I'm
233:34 - going to select let's say Japanese and
233:37 - Spanish we're going to see this after
233:41 - you select the target languages you can
233:43 - assign spefic specific team members to
233:46 - the specific Target languages for
233:48 - example let's say that I want to assign
233:50 - a team member to this task in Spanish I
233:54 - can click on assign and I will see a
233:57 - list of my current team members of users
234:00 - in Spanish and I will select this one my
234:05 - team member account okay so if I select
234:08 - this user I have it here in the list and
234:12 - if I have like hundreds of users here I
234:14 - will will see a very long list and I can
234:17 - search for users here using the filter I
234:20 - can also like show managers show
234:23 - developers language coordinators proof
234:26 - readers and
234:28 - translators if I just click on one of
234:30 - these I will be filtering the list show
234:33 - translators show prove readers and based
234:36 - on whether we have the check mark here
234:38 - or not that means that we are showing
234:41 - these roles here we're show for example
234:45 - here we know that this is a project
234:46 - manager right so you can filter the list
234:49 - like this and you can also split files
234:52 - split files is interesting it's an
234:55 - interesting option because if you would
234:57 - like to assign multiple team members to
235:00 - the same file to work on different parts
235:02 - of the file like let's say that you are
235:05 - translating a very long article and you
235:07 - want two or three team members to work
235:09 - on the same file but without any
235:13 - overlapping work you can split the files
235:15 - and assign them to those specific
235:18 - strings if you split the files you will
235:20 - see this the approximate number of words
235:23 - that they will be translating and you
235:25 - can see unassigned words and we can
235:28 - clear the list by clicking here on the
235:31 - trash can we can also deselect members
235:35 - by clicking on their name let's click on
235:37 - apply here and now we see the profile
235:40 - image of the user that we just assigned
235:42 - and if we hover over the profile image
235:44 - we will see the username awesome so
235:47 - let's keep this task as it is translate
235:49 - the welcome to Free Goan file this is
235:51 - the welcome to free file so this is like
235:54 - a basic task but of course you can
235:56 - customize this to your liking let's
235:59 - create the task great task created
236:02 - successfully awesome we have three
236:05 - different categories a to do category an
236:09 - in progress category and a done category
236:13 - these are like the different status that
236:16 - a task can have for now we have this
236:19 - task one task in Spanish and one task in
236:23 - Japanese if we click on the language we
236:26 - will be expanding the details of the
236:28 - tasks and we will see the maass
236:30 - individual cards we have the same task
236:33 - per language if we select multiple
236:35 - languages so they will be kind of
236:37 - independent of course they will have a
236:39 - different number of words based on the
236:42 - the language and the source files and
236:44 - everything everything let's check out
236:45 - the details of a task here in spanish if
236:49 - we click on the task we will see more
236:52 - details like the language this is the
236:55 - description this is the title this is
236:57 - the number this is the task number that
237:00 - we can use to identify it the type of
237:03 - task we see when it was created modified
237:06 - the due date we also see how many files
237:10 - it has the number of words and strings
237:13 - mod if IED if there is a specific time
237:16 - range for the strings we see who created
237:19 - the task the username and if we click on
237:22 - it we will be taken to that profile we
237:24 - see the members of the task assign words
237:28 - and how many words are left and we also
237:31 - see some actions like view strings and
237:34 - Export at the bottom we find two
237:37 - sections here we can see the files
237:39 - related to the task and we can also
237:42 - write a comment this is help because we
237:45 - can keep conversations related to a task
237:47 - on the task itself that is very helpful
237:51 - let's say we need to work on this file
237:54 - just as a demo comment if I click on
237:57 - send here I can add my comment I see the
238:01 - username when it was published and the
238:03 - comment itself here at the top we see
238:07 - three options to do in progress and done
238:11 - and that is very curious because those
238:13 - are the three three categories that we
238:15 - saw here in all tasks if we click here
238:17 - we go back to the main boorn to do in
238:21 - progress and done and actually that is
238:25 - one way to change the current status of
238:28 - a task if the task is already in
238:32 - progress we can click here and the task
238:35 - will be updated to in progress if we go
238:39 - back to the main board we will see it
238:41 - here in the in progress category
238:44 - of the board another great feature is
238:46 - that we can drag and drop the tasks like
238:49 - this instead of changing them inside the
238:51 - details we can just change their status
238:55 - like this or we can do that from here
238:57 - manually and we will see them updated as
239:00 - well once a task is done we can mark it
239:04 - as done here like this and we also have
239:08 - the option to close a task there is a
239:11 - difference between a task being done and
239:14 - a task being closed it's not the same
239:17 - the task can be in the done status or
239:20 - category and still you will need to
239:22 - close it and you will be able to see all
239:25 - your closed task if you click here right
239:28 - now we don't have any closed tasks so
239:31 - let's just close one
239:34 - now and now it's disappeared from the
239:38 - board we only see the Japanese task we
239:41 - don't see the Spanish task anymore but
239:43 - if we go here to the closed status we
239:47 - see the task over here if we click on it
239:50 - we go back to the details and we also
239:53 - have an option to reopen it if we click
239:57 - here on the ellipses reopen we can also
240:01 - edit the task and delete it if we click
240:04 - on reopen we will be reopening the task
240:08 - and after we go back to our board we
240:10 - will see it again reopen the task so
240:14 - that is how you can update the current
240:16 - status we also have other options over
240:18 - here like exporting and uploading
240:22 - translations we can view the strings
240:24 - related to the task in the translation
240:27 - editor and here in the ellipses we can
240:29 - edit the task we can close it and we can
240:32 - delete it if we click on edit we will go
240:36 - back to a form that is very similar to
240:38 - when we created the task initially we
240:41 - see the duate when it started when it
240:43 - was was resolved we can filter by labels
240:47 - change the files change the target
240:50 - language assign new team members for a
240:53 - specific target language and we can also
240:55 - reset the task scope and progress but
240:59 - the progress for the files will be reset
241:02 - as well so be careful choosing this
241:04 - option great now you know how to edit
241:06 - and close a task you can close it
241:09 - directly from here as well you don't
241:11 - necessarily need to close it from the
241:13 - board it will we click here on close we
241:16 - will see that the task was closed just
241:19 - as before and we can keep it closed or
241:22 - we can reopen it once the task is closed
241:25 - you will see when it was resolved you
241:28 - will see all the comments as well
241:30 - they're all kept there so you can see
241:32 - the previous discussions that you had
241:34 - and you can reopen it like
241:37 - this that's why it's also great that
241:40 - they're independent because you can have
241:41 - independent conversations per link
241:43 - language and now let's see how you can
241:46 - actually delete a task because so far
241:48 - we've created managed and closed tasks
241:52 - so let's see how you can actually delete
241:55 - a task this is the Japanese task that we
241:58 - created let's follow the normal workflow
242:02 - that you would follow for a project
242:04 - first you created as say you to do then
242:07 - let's say that you move it to the in
242:09 - progress status then to the done status
242:14 - and after that you close it once you
242:17 - close it you can keep it here or you can
242:21 - also delete it you can also delete it
242:24 - before closing it but usually when we
242:26 - create the task is something important
242:28 - so we delete it if we created it by
242:31 - mistake or if we made a mistake we can
242:33 - also edit it so we click here on delete
242:36 - and we see delete the task translate the
242:39 - welcome to fre Cod cam file if the task
242:42 - is completed you can close it or or Mark
242:44 - as done so for now let's check how this
242:48 - is deleted by clicking on delete and we
242:50 - see that the task was deleted
242:53 - successfully awesome let's see how you
242:55 - can go to the translation editor
242:58 - directly from the task let's say that
243:00 - this was assigned to me and I want to
243:02 - start working on my strings if you need
243:04 - to go to the translation editor you can
243:06 - just click here on view strings and that
243:09 - will take you to the translation editor
243:11 - for your project in the knowledge B
243:14 - crowding mentions something very
243:15 - important about tasks here we see this
243:19 - question how do the source file updates
243:22 - affect the existing translation and
243:24 - improv reading tasks that is very
243:26 - important for for a project that is
243:28 - constantly being updated like for
243:30 - example a platform like free code cam
243:34 - we're constantly updating the curriculum
243:36 - and different resources let's see after
243:39 - the source file update the list of
243:41 - source strings included in the task will
243:44 - be updated in the following way the
243:46 - strength removed from the source file
243:49 - during the update will be removed from
243:51 - the task the modified strings that are
243:54 - marked with the keep translations option
243:56 - will appear in the task with the new
243:58 - modified text and the newly added
244:01 - strings won't affect the existing task
244:04 - in any way if the source file is
244:07 - restored to the revision containing the
244:09 - removed strings they will reappear in
244:12 - the task so so this is how crowding
244:15 - handles these constant updates to the
244:17 - source
244:18 - file great now you know how to work with
244:26 - tasks as a project owner or a project
244:29 - manager reports can be very helpful for
244:33 - understanding your team's current
244:34 - progress and activity crowding has a
244:37 - reports feature where you can track and
244:39 - check your project status to access the
244:42 - reports of your project project go to
244:44 - your project and then to the reports tab
244:47 - there you will find very helpful and
244:50 - graphical reports about the status and
244:53 - activity of your project here the first
244:55 - thing that we can see is that we have
244:58 - the project status and your Top members
245:01 - we will focus on the project status and
245:03 - the Top members here we find the size of
245:06 - the project how many words it has how
245:08 - many translatable words because remember
245:11 - that some strings are hidden from
245:13 - translators they're not
245:15 - translatable so that is why this number
245:17 - is different we have the source language
245:20 - how many Target languages we have how
245:22 - many members we have and how many
245:24 - managers we have we also see the
245:27 - progress bar here translatable hidden
245:31 - and duplicates we also see this bar here
245:34 - with the number of translatable hidden
245:36 - and duplicate words and over here we
245:39 - have interactive Graphics which are like
245:41 - super helpful I mean let me show you how
245:44 - they work you can see your translation
245:46 - activity prove reading activity and sour
245:49 - strings activity in specific periods you
245:54 - can filter them by day by week by month
245:58 - or by year let's keep the month range
246:03 - and here we can see the number of
246:06 - translated words and how that has
246:08 - changed in the period that you selected
246:12 - the number of approved work words new
246:14 - members active members and here we have
246:17 - an interactive graph with dates the Blue
246:21 - Line the blue graph is the number of
246:23 - translated words the green line is the
246:26 - number of translated words by
246:29 - translation memory and the light blue
246:32 - graph are the words translated by
246:35 - Machine translation over here so you can
246:37 - see all these three statistics per date
246:41 - you can also see proof reading activity
246:43 - by approved words and votes and Source
246:47 - strings activity by added words deleted
246:51 - words and updated words and if you ever
246:54 - need to check the performance of your
246:57 - team members and find the Top members to
247:00 - congratulate them or reward them you can
247:03 - go to Top members here and you can
247:05 - select a date range in the calendar you
247:09 - can just select a date range and
247:11 - generate the report like this that will
247:14 - filter the list to give you your Top
247:17 - members for that date range let's select
247:21 - this one right here and it's very easy
247:23 - to select the range because once you
247:24 - click on the day and you just need to
247:27 - move your mouse to expand the range like
247:31 - this let's start here from November 19th
247:35 - to December 3rd and generate the report
247:39 - and now you see that the date range has
247:41 - been updated and over here we can see
247:44 - the users this is my project owner user
247:47 - or account and this is my sample member
247:50 - account like this is a contributor we
247:53 - can filter Top members by language
247:56 - remember that we have six Target
247:58 - languages here let's say Spanish we have
248:01 - this one and we can also change the
248:04 - layout of the presentation like this we
248:07 - can choose which columns we would like
248:09 - to include the username languages that
248:12 - the user translates into number of
248:15 - translated words Target words approved
248:18 - voted and if we just deselect one of
248:21 - these you will see that the column will
248:23 - disappear this is helpful to customize
248:26 - the layout and the data that you will be
248:29 - getting if you would like to export this
248:32 - report as a CSV a Json or an xlsx file
248:37 - you have these three options to export
248:40 - this table you can also include the
248:42 - number of Plus or positive votes
248:45 - received number of negative votes
248:47 - received winning and joined when the
248:52 - member joined the project you can also
248:54 - scroll horizontally if you add all the
248:56 - columns but by default you will only
248:58 - have the basic ones the other ones you
249:01 - can add them as well and you can change
249:03 - the page here if you have multiple Top
249:05 - members by clicking on these arrows
249:07 - right now they're gr out because we only
249:09 - have one but if you had multiple Pages
249:12 - you can change the page here and you can
249:15 - also filter the user by the username by
249:18 - using this search bar great another
249:21 - great thing about the project status
249:24 - here is that you can choose the unit of
249:27 - this report if you would like to measure
249:30 - the performance in words you can do so
249:32 - but you can also change that to Strings
249:35 - number of strings now instead of words
249:38 - we will see translated strings approved
249:40 - strings and everywhere where we had
249:43 - words now we have strings instead and
249:45 - the data will be updated appropriately
249:49 - we have strings words characters without
249:52 - spaces and characters with spaces but by
249:55 - default wordss will be selected in the
249:58 - crowding knowledge Bas in the project
250:00 - reports article you can see a sample of
250:04 - these graphs for an active project like
250:07 - this one you will see the three graphs
250:10 - the total translated words the words
250:13 - trans translated by translation memory
250:15 - and the words translated by Machine
250:18 - translation this is what a project like
250:20 - freom would look like for example once
250:23 - it has some activity during a time
250:25 - period and for Source strings you will
250:27 - see it like this number of added words
250:30 - deleted words and updated words in blue
250:34 - that's also very helpful but now we see
250:35 - it as a sequence of bars instead of a
250:39 - line graph awesome so now you know how
250:42 - to gen generate reports on crowding and
250:45 - how to export them when you need to you
250:47 - can export your list of top members if
250:49 - you need to and check your project
250:51 - status so let's dive into conversations
250:55 - and crowding because communication
250:57 - within a team is very important and you
250:59 - can communicate with your team members
251:01 - directly on crowding with this feature
251:04 - so I will see you in the next part of
251:07 - the
251:12 - course let's talk about conversations
251:15 - communication is essential for any
251:17 - successful project you and your team
251:20 - members can communicate directly on
251:22 - crowding with the conversations feature
251:24 - with this feature you can communicate
251:26 - with one or more team members in a
251:29 - private chat each conversation has a
251:33 - subject so you can easily find them
251:34 - among all your conversations so let's
251:37 - see how this works to access your
251:39 - conversations you just need to click
251:41 - here on this icon we see no unread
251:44 - messages right now but that will take us
251:47 - to create a conversation to create a
251:50 - conversation first I need to search a
251:53 - user by name or username I can also
251:56 - filter users by contacts or by the users
252:00 - of all my projects I can filter my users
252:04 - by their roles as well if I know that I
252:07 - need to talk to for example a project
252:10 - manager I can just select all the
252:12 - project manager ERS I can select
252:15 - translators and I can also filter by
252:17 - language if I want to get a list of all
252:20 - my translators for Spanish let's say I
252:24 - can do so like this right now I don't
252:27 - have any I have one manager which is my
252:31 - other account to show you all of these
252:34 - features how this works with two
252:36 - crowding accounts once I have that user
252:39 - here I click on the user and this is
252:42 - added to my list and then I click on go
252:46 - I can remove the user if I don't want to
252:48 - include it by clicking on the X then I
252:52 - click on go and now I see a new
252:55 - conversation the conversation can have a
252:59 - subject or a title that you can use to
253:02 - filter and find that conversation so
253:04 - let's say let's say that I want to talk
253:08 - about creating a new glossery for
253:11 - example just as a demo I can write
253:13 - create a new glossery as the subject and
253:17 - I can save my subject create a new
253:19 - glossery I see it here in my
253:21 - conversations and I see that this
253:24 - conversation only has one invited member
253:27 - which is my other account and here I can
253:30 - just click on the gear icon to change
253:33 - the subject it's like editing the title
253:36 - okay and over here I can see that today
253:39 - Stefania demo my main account created
253:42 - the conversation and edit one user like
253:46 - this I can also see the time when this
253:48 - happened and if I need to I just write
253:51 - my message over here it's very intuitive
253:54 - let's say let's say do you think that we
253:56 - should create a new glossery for the
253:58 - project and after I write my message I
254:01 - click here on send and there we go I
254:04 - have my new message here and just like a
254:07 - normal chat application that we use
254:10 - every day we will see all the messages
254:13 - vertically in the order that they were
254:15 - sent and we also have additional options
254:17 - for each message we can share a message
254:20 - we can mark it as unread for us to
254:23 - review later later on we can edit the
254:26 - message and we can also delete it if we
254:29 - are the ones who sent the message we
254:31 - cannot edit or delete messages sent by
254:34 - another user let's say that I need to
254:36 - edit my message I can just edit it here
254:39 - let's just
254:41 - add the word hello hello hello do you
254:44 - think that we should create a new
254:45 - glossery for the project here and we if
254:47 - we edit the message just know that this
254:50 - will be added at the end edited and we
254:52 - can also delete the message like this if
254:55 - we click here we will see a confirmation
254:58 - message delete this message the action
255:00 - cannot be undone so we just delete it
255:04 - and it just disappeared another great
255:07 - thing is that we can filter
255:08 - conversations we can search for
255:10 - something in conversations by writing
255:14 - the text that we're looking for in the
255:16 - search bar and we can start a new
255:18 - conversation by clicking here on create
255:21 - conversation again the same process we
255:24 - filter the list we write the name or
255:26 - username we select the users and then we
255:29 - click on go to start a new conversation
255:32 - so that is basically the conversations
255:35 - feature and how it
255:41 - works
255:43 - great so now we're going to start diving
255:45 - into Integrations what are Integrations
255:49 - how can we use them how can we add them
255:51 - to our projects and what free
255:53 - Integrations can we use in coding let's
255:56 - see here we have our previous project
255:58 - the free codam project demo but for this
256:01 - demo I'm going to create a different
256:02 - project so we can actually work with the
256:04 - Integrations and import our file instead
256:07 - of uploading it manually like we did
256:09 - before we're going to create a new
256:11 - project really quickly project project
256:13 - name Integrations demo free go camp
256:16 - Integrations demo like we saw over here
256:19 - public project visible to everyone you
256:21 - can restrict access to specific
256:23 - languages after the project is created
256:25 - so that is very important too let me
256:28 - zoom in over here so we can see the the
256:31 - text better we already created a project
256:33 - previously during the course so I'm
256:35 - going to work through this a little bit
256:36 - more quickly Source language English and
256:39 - let's make the target language Spanish
256:42 - in this case okay we're going to make
256:45 - the Spanish and then we're going to
256:47 - actually create the project freeo cam
256:49 - Integrations demo public project I
256:53 - already have one private project so I
256:56 - cannot create more projects because I
256:57 - have the free plan I activated the free
257:00 - plan after the trial so I'm going to
257:02 - make this public by default okay this
257:05 - option will be great out then I create
257:08 - the project of course we can always
257:10 - change these settings now now we see
257:13 - that we can add files for translation to
257:16 - this project but we're going to do that
257:18 - through an integration when we have our
257:20 - project over here like we saw before we
257:22 - can go to the Integrations Tab and with
257:25 - a free plan we can add one integration
257:28 - how can we do that we go here to this
257:29 - button add
257:31 - integration there are hundreds of
257:33 - Integrations that you can choose from
257:36 - it's very important to choose the right
257:37 - one because on the free plan you can
257:39 - only use one at a time so for this this
257:43 - example I'm going to show you something
257:44 - that is very commonly used like Google
257:46 - Drive we're going to use the Google
257:48 - Drive integration so you can Import and
257:50 - Export files directly to your drive
257:53 - folders that you can use with your
257:55 - Google account if we click on the
257:58 - integration we will go to the
258:00 - description page where you can find an
258:02 - overview the features at a quick lens
258:05 - you can also find usually like a
258:07 - tutorial recorded by crowding and how to
258:10 - set it up you can Import and Export
258:12 - trans translations manually but it just
258:14 - takes a few clicks so we will see how to
258:17 - do that in just a moment it's free so we
258:20 - just need to click here on install and
258:22 - we will install it install if we install
258:26 - this application Google Drive the
258:28 - application will have access to our
258:29 - projects and it will be displayed in the
258:32 - project menu Integrations Google Drive
258:34 - select the users that will be able to
258:36 - use this app you can choose if only you
258:39 - will have access to this app all project
258:41 - members or you can also select specific
258:44 - users if you had more users here you
258:46 - would see a list you can select them and
258:48 - you can filter them then you would click
258:50 - on select or cancel for now let's select
258:53 - only me then select the projects where
258:56 - users will be able to use the app
258:59 - projects you own or selected projects
259:01 - this will allow you to use this
259:03 - integration in all the projects you own
259:06 - or you can also select specific projects
259:08 - let's just select the free cocam
259:10 - Integrations demo because we don't want
259:12 - want access to this in the project demo
259:15 - so let's select this selected projects
259:18 - and then we install it let's install it
259:22 - like this and we see a confirmation
259:25 - message installed awesome right then of
259:28 - course we can click here again if we
259:30 - need to uninstall it at any time after
259:33 - that we have it installed let's go back
259:35 - now if we go back to the overview of the
259:37 - apps and Integrations now we see that it
259:40 - is installed because we see this install
259:43 - button awesome so after that we just
259:46 - click on the X icon and if we refresh we
259:50 - should see our integration over here in
259:53 - the Integrations tab Google Drive if we
259:55 - click on details we can see this over
259:59 - here this will prompt us to log in with
260:02 - Google drive here I'm working with a
260:04 - demo email a Gmail account so I'm going
260:07 - to log in with Google drive after that I
260:10 - select the email that I want to link I
260:13 - click here and then I see that crowding
260:16 - integration wants access to my Google
260:19 - account when you allow this access
260:21 - crowding integration will be able to see
260:24 - edit create and delete all of your
260:26 - Google drive files so make sure that you
260:28 - are granting this permission knowing
260:30 - what the application can do on your
260:33 - account okay make sure you trust this
260:36 - integration and then continue after you
260:39 - have the integration set up you will see
260:41 - this it's a actually quite easy you will
260:44 - see the content of your drive here I
260:46 - have a folder that I created on my drive
260:49 - manually and if I expand this I see the
260:53 - welcome to Free code cam PDF file I can
260:55 - just select this file if I want to
260:57 - translate it on my project and then
261:00 - select sync to crowding after I click on
261:03 - sync to crowding it might take a few
261:05 - seconds to actually sync to my crowding
261:08 - account you will see like this loading
261:11 - animation you can also select all the
261:13 - files of a folder by selecting that
261:15 - folder and voila here we have the
261:17 - content on crowding select content for
261:20 - synchronization to Google Drive this is
261:23 - like a back and forth process we first
261:26 - select the files on Google Drive then we
261:30 - sync that to crowding and then once we
261:32 - have the translation we will sync it
261:35 - back to Google Drive and we will have
261:37 - the translated version let's see how you
261:40 - can do that but first let's also check
261:42 - out these options that we have at the
261:44 - top we can see error Logs with the most
261:47 - recent error logs for this application
261:50 - right now we don't have any because we
261:52 - just installed it here we have the
261:54 - settings if we want to schedule
261:56 - synchronization for pushing sources and
261:59 - translations we can push sources and
262:01 - translations every hour every 3 hours 6
262:05 - hours 12 hours or 24 hours and we can
262:08 - also show shared with me files from our
262:12 - drive if we don't want to show files
262:15 - that have been shared with us on our
262:17 - Google Drive account then we just
262:18 - disable this and then we can save and
262:21 - close this if we ever need to log out we
262:26 - can do that and log back in with a
262:29 - different Google account with a
262:31 - different Gmail great so now we have
262:34 - this on crowding and we can see we
262:37 - expand the folder and the file we can
262:39 - see that we are going to translate it
262:41 - into Spanish because this is our target
262:43 - language if we go back to our project
262:46 - and we check on sources now we see a
262:49 - folder that says Google Drive
262:51 - integration demo welcome to Free code
262:54 - cam we see the file over here in our
262:56 - sources Tab and if we go to our
262:58 - dashboard we will see Spanish as a
263:02 - target language and then we will see
263:04 - this the file ready to be translated if
263:08 - again we double click on this file we
263:10 - will go to the translation editor where
263:12 - we can start translating let's translate
263:15 - this first string again this is how we
263:18 - translated it before so I'm going to
263:21 - select this option and save the
263:24 - translation and then we are going to
263:28 - select this translation memory string
263:32 - again and then we are going to save it
263:35 - we're just going to translate the first
263:37 - two strings of this file so you know how
263:40 - this works remember we already saw all
263:43 - the different details of this
263:44 - translation editor so you should be
263:45 - familiar with these details you can
263:47 - continue translating the file but I'm
263:49 - going to show you how you can
263:51 - synchronize this back to your Google
263:53 - Drive we will have the first two strings
263:56 - in Spanish after we have that saved we
263:59 - can go back by clicking on the arrow and
264:02 - then we see that we are getting some
264:05 - progress on the translation
264:07 - 7% awesome right but we want to
264:10 - synchronize that to our Google Drive we
264:13 - go to
264:14 - Integrations details and then we can
264:17 - sync it manually or we can set the
264:19 - synchronization time like we saw before
264:21 - in the settings to a specific number of
264:23 - hours if we want to do that manually we
264:25 - go here to synchronize it and then we
264:29 - synchronize it we can either choose to
264:32 - synchronize the entire folder the file
264:35 - in all the languages or synchronize a
264:38 - specific language let's choose Spanish
264:41 - here and and then when we select the
264:44 - file and the language we can click here
264:47 - on sync to Google Drive If We sync this
264:50 - to Google Drive let's see what happens
264:54 - again we may need to wait for a few
264:56 - seconds until this is synchronized and
264:58 - we see that the file was exported
265:00 - successfully what happens now well let's
265:03 - see if I go to Google Drive now I see
265:07 - this welcome to Free code camp with the
265:10 - Spanish letter code the the two letter
265:13 - code and I see that it is in a doc X
265:16 - format because remember that crowding
265:18 - converts the file formats when we're
265:20 - working with PDF into a format that is
265:23 - easier to edit and work with with
265:25 - individual strings so if we double click
265:27 - on it we will be able to open it in
265:29 - Google Docs and we see the translation
265:32 - we see the first string translated and
265:34 - we see the second string translated
265:36 - awesome right crowding added this
265:39 - language code to differentiate the files
265:41 - automatically so if we have multiple
265:43 - languages we will have different files
265:45 - with their corresponding language codes
265:47 - we can do all of this manually like we
265:50 - just did or remember if you go to
265:52 - settings you can set the synchronization
265:55 - schedule to an hour 3 hours 6 hours 12
265:58 - hours or 24 hours if you're translating
266:01 - your files gradually step by step or
266:04 - with multiple team members you can
266:05 - synchronize all of those changes to
266:07 - Google Drive that is an example of an
266:10 - integration that can be very helpful in
266:13 - crowding we have many many different
266:15 - Integrations in the next section I'm
266:17 - going to show you some of them so you
266:19 - have an idea of the kinds of things that
266:21 - you can do with this amazing
266:23 - Integrations feature now that you know
266:25 - how to actually install and use the
266:27 - integration let's see how you can
266:29 - uninstall it if you click here on
266:31 - details first I would suggest logging
266:33 - out here where you can log out of your
266:36 - account by clicking on log out and then
266:38 - it's just the same process for logging
266:40 - in again with your Google Drive just
266:41 - like we did a few minutes ago and then
266:44 - if you go to add integration you can
266:47 - choose here to uninstall it let's
266:49 - uninstall it and see what happens we see
266:52 - are you sure you want to uninstall
266:54 - Google Drive application well you can
266:56 - uninstall it like this and we see
266:59 - uninstalled successfully if we refresh
267:02 - this page then we don't see any
267:05 - Integrations and again we can always
267:07 - install a new one there are tons of free
267:10 - options to choose from if you want to
267:13 - filter the the Integrations by a
267:16 - specific criteria you can do that by
267:19 - category features CMS marketing
267:22 - e-commerce development specifically this
267:24 - is very helpful for development if we
267:26 - are translating a website like we are
267:28 - going to do in just a few minutes we can
267:30 - add the GitHub integration gitlab
267:34 - bitbucket in addition to the
267:35 - Integrations and apps you will also find
267:37 - guides over here and others that are
267:40 - tagged with system come over here so
267:43 - there are different types of resources
267:45 - combined in this very helpful you can
267:48 - also filter by author by tag search for
267:52 - a specific Apple integration filter by
267:55 - category sort by relevance sort by name
267:58 - sort by date published and you can
268:01 - always reverse the order great so let's
268:04 - go into the next section where we will
268:06 - take a look at some of the apps and
268:08 - Integrations that I think would be most
268:10 - helpful for you if you planning to
268:12 - translate your files or your website if
268:15 - you're working on development I will see
268:17 - you in the next section and then we will
268:19 - start working with the GitHub
268:20 - integration and working with other
268:22 - Integrations to actually translate your
268:25 - website so I will see you in the next
268:27 - part first we will take a look at the
268:29 - Integrations that you can use so let's
268:32 - go there let's dive
268:36 - in before we dive into other specific
268:39 - Integrations like the GitHub integration
268:42 - and the the visual studio code extension
268:45 - I'm going to show you some of the
268:47 - Integrations that I personally think
268:48 - would be most helpful for you as an
268:51 - organization or as a representative of
268:54 - an open source project or an educational
268:57 - project first of all of course we find
269:00 - the GitHub integration over here if you
269:03 - click on the integration you can find
269:05 - more details about it like an overview
269:07 - and here you can find specific details
269:11 - like the permission it requires and how
269:13 - it will be registered so it is very
269:16 - helpful you may also find other
269:17 - tutorials by crowding and how to set it
269:19 - up specifically we will cover the GitHub
269:22 - integration and we will see the visual
269:25 - studio code extension they also have a
269:28 - visual studio code guide over here in
269:31 - the absent integration section over here
269:34 - a guide of how to use crowding for VSS
269:37 - code we will see that step by step with
269:39 - a sample react app then we also find
269:42 - other tools that you may find helpful
269:44 - like Google Sheets integration if you're
269:47 - working with Google Sheets to create
269:49 - your glossies or to translate content
269:53 - that you're storing on a Google sheet
269:55 - you can also install this free beta
269:58 - integration right now it's in beta it's
270:01 - in in testing in a testing phase but
270:04 - when you're watching this video this may
270:06 - be out of beta so it might be more
270:07 - stable you can install it by clicking
270:10 - here to synchronize multi-link Google
270:12 - spreadsheets if you're storing your
270:14 - files in other services like Dropbox you
270:17 - can also install this free integration
270:21 - the Dropbox integration to localize your
270:24 - files like we did with Google Drive and
270:27 - since artificial intelligence is
270:29 - increasingly becoming more important in
270:31 - every area of development and
270:33 - translation crowding also included an AI
270:36 - assistant CH GPT Gemini to take your
270:38 - localization to the next level right now
270:41 - it's a free integration it's in beta and
270:44 - you can install it by clicking on this
270:46 - button you can find more details about
270:48 - it and how it works here in the overview
270:52 - another integration that I would suggest
270:55 - checking out is the suggestions diff
270:58 - Checker this integration Compares two
271:01 - translations and sees the differences
271:03 - between them so this is an integration
271:07 - that's especially helpful for proof
271:08 - readers and for translators that
271:11 - compares two two translations and shows
271:13 - the differences between them so that can
271:15 - be helpful because sometimes when we are
271:17 - checking the translations we may miss
271:19 - small details and this just highlights
271:21 - everything better it's a free
271:23 - integration that you can install with
271:24 - this button remember that with the free
271:27 - plan you can only use one integration at
271:29 - a time so make sure to choose that
271:31 - carefully but they are all really nice
271:34 - we also have a glosser editor we can add
271:37 - and change the terms from your glossies
271:39 - directly from the crowding editor if we
271:41 - in install this integration it's also
271:43 - free we can install it like this we can
271:46 - just edit the terms directly from the
271:49 - crowding editor without having to go to
271:51 - the glossery tab that can be helpful to
271:53 - save your time and if you're an
271:55 - organization that's also sharing
271:57 - educational or free content through
271:59 - video resources you may find these two
272:02 - Integrations super helpful you just
272:04 - write here captions and you will see
272:06 - this extension video captions Translator
272:09 - translate captions titles and
272:11 - descriptions from YouTube videos video
272:14 - captions localization with crowding you
272:16 - have the tutorial over here and you can
272:18 - learn how to set it up but it's always
272:20 - very easy they're usually very similar
272:22 - to what we just did with Google Drive
272:25 - they just have different purposes and
272:27 - that's also very helpful to synchronize
272:29 - the files automatically and I would
272:31 - personally suggest if you're working
272:33 - with video using this integration video
272:36 - preview this is an integration that lets
272:39 - you preview the video that you're
272:40 - translating when when you're translating
272:42 - the subtitles for additional context
272:45 - this is always very helpful if you watch
272:48 - the video when you're actually
272:49 - translating the subtitles or the or the
272:51 - captions so these are some of my
272:54 - personal suggestions for apps and
272:56 - Integrations I had an overview of the
272:58 - Integrations and these are the three
273:00 - ones that I do think would be worth it
273:02 - for any type of project specifically the
273:05 - last two if you're working with video
273:07 - but there are hundreds to choose from
273:09 - and many of them are free so take
273:12 - advantage of that you can use the one
273:14 - integration with the free plan if you're
273:17 - working on mobile development you also
273:19 - have Android Studio A plugin for Android
273:22 - studio and many
273:29 - more congratulations on reaching this
273:32 - part of the course it's great to have
273:34 - you here and now we're going to dive
273:36 - into the crowding Enterprise features
273:40 - why crowding Enterprise well because
273:42 - that's the plan that open-source
273:43 - projects and educational projects get
273:46 - for free with crowding first let's start
273:49 - with the basics let's start with how you
273:52 - can actually get a free license from
273:55 - crowding if you are an open- source
273:57 - project an educational project let's see
274:00 - if you go to crowding docomo here to
274:03 - pricing and you quickly scroll down to
274:06 - the bottom and you reach the frequently
274:09 - asked questions you can see here at the
274:11 - the bottom do you have plans for open-
274:13 - Source projects and educational
274:16 - institutions yes they do have them so if
274:18 - you want to use crowding for an open
274:20 - source project you can sign up for a
274:22 - free account set up your project and
274:24 - then send them a request they will grant
274:27 - you the license you can also apply for
274:29 - an academic license if your project has
274:32 - educational purposes each granted
274:35 - license will include an unlimited number
274:37 - of projects strings and members here you
274:41 - have the links for requesting that
274:42 - license after you set up your project
274:45 - and you follow all the steps that we saw
274:46 - in the previous part of the course for
274:49 - that you will need to choose either open
274:51 - source or academic license for either
274:54 - one of them you can open them and here
274:55 - you will see if you are an open source
274:58 - project the setup request form crowding
275:01 - is completely free of charge for open-
275:03 - Source projects before submitting this
275:05 - form and where you will request the
275:09 - license you will need to ensure that
275:10 - your project meets the following
275:12 - criteria here you have the list this may
275:15 - change as this may be different when
275:18 - you're watching this course but
275:20 - initially you have to create a
275:21 - translation project in crowding the
275:24 - project that you are currently owning
275:26 - the open- source project has to be
275:28 - licensed under an approved license from
275:31 - an open source initiative your Project's
275:34 - source code has to be publicly available
275:36 - for download you do not have any
275:39 - commercial products related to the open
275:41 - source project that you are requesting a
275:43 - license for you are the Project Lead so
275:46 - remember this you have to be the project
275:48 - lead to actually request this license
275:51 - and submit the form you have been
275:53 - working on your open source project for
275:55 - at least 3 months you must have an
275:58 - active community of collaborators you
276:00 - keep the news section of your website up
276:03 - to date and you release updated Builds
276:06 - on a regular basis so it's not like a
276:09 - project that you just released once and
276:11 - then you don't update anymore it has to
276:13 - be updated on a regular basis please
276:16 - note that as an open- source project
276:18 - maintainer by submitting the form you
276:20 - are agreeing to join the crowding beta
276:23 - group so you will test the latest
276:25 - features and you will also contribute
276:27 - your project translations to the
276:29 - crowding Global translation memory to
276:32 - gain access to crowding neural machine
276:35 - translator this is the form that you
276:37 - have to submit the project name project
276:39 - license project website URL
276:42 - describe your project in as much detail
276:44 - as possible your email your name your
276:47 - crowding username and your crowding
276:49 - organization name specifically for
276:52 - crowding Enterprise if you're currently
276:54 - on a trial all your information is kept
276:56 - secure and protected so after that you
276:58 - just submit your request and the
277:00 - crowding team will contact you that is
277:02 - for an open source project but what
277:05 - about academic projects you just go here
277:07 - to the second form and you will see a
277:10 - form that is very similar with some
277:11 - differences this is an academic license
277:14 - project setup request form they are
277:17 - intended for educational purposes only
277:19 - they can only be registered with the
277:22 - educational email address of your
277:24 - institution they must match a school's
277:26 - domain name here you can see the
277:29 - different features you can have open or
277:31 - private open licenses are provided for
277:34 - Public Access projects and private
277:36 - licenses allow you to limit project
277:39 - access due to confidentiality so you can
277:42 - choose between an open license or a
277:44 - private license and here you can see the
277:46 - differences in the features the most
277:48 - important one is that here you have
277:50 - private projects if you choose private
277:53 - the open license does not have private
277:55 - projects open licenses are completely
277:58 - free of charge here you can see the form
278:00 - the name of your educational institution
278:03 - your project name project type it can
278:05 - either be open or private describe your
278:08 - project in as much detail as possible
278:10 - your email your name and your crowding
278:13 - username then you submit your request
278:16 - with this form this is how you can get a
278:19 - license if you're representing if you're
278:21 - the Project Lead of an open source
278:22 - project or an educational institution
278:25 - awesome so after you have your license
278:28 - let's see how you can actually create an
278:31 - organization in crowding with crowding
278:33 - Enterprise this is more advanced and the
278:36 - crowding domcom account that we have
278:38 - been working with it has more features
278:40 - and it's usually used for large
278:42 - organizations or teams that will be
278:44 - working with many team members or using
278:47 - the power of crowdsourcing by engaging
278:50 - collaborators to create an organization
278:52 - you just need to go to here login or
278:55 - sign up if you click here on sign up you
278:57 - will go to where you can actually sign
279:00 - up for an account but by default
279:02 - crowding dcom will be selected this is
279:04 - like the basic account that we have been
279:06 - working with so far when you get a
279:08 - license as an organization you will be
279:10 - able to create a an organization through
279:13 - crowding Enterprise that has more
279:14 - advanced features and you can also try
279:16 - it for free for 30 days to see if the
279:19 - features match what your organization
279:21 - needs to sign up to create the
279:23 - organization we see this short form the
279:26 - organization name you will need to
279:29 - choose an organization name that will
279:31 - end with doing.com in our case we have
279:35 - an organization called freec codam
279:38 - course demo. crowding
279:41 - if you go to that URL you will be able
279:43 - to check your organization then you need
279:46 - to enter your work email that's usually
279:49 - an email granted by the organization or
279:51 - the project then your username and your
279:54 - password after that okay check this
279:56 - check box to agree to the terms and
279:59 - conditions and the privacy policy you
280:01 - will also see a verification from
280:03 - cloudflare and if you click here you can
280:05 - create an organization I already have my
280:08 - organization created so I will click
280:10 - here on enter an existing organization
280:13 - to enter an existing organization you
280:15 - just need to enter your organization's
280:17 - URL in my case that would be freec codom
280:20 - course demo. crowding dcom it's very
280:22 - important to write the name with dashes
280:26 - okay if you forgot the URL if you click
280:29 - here you can find your organization with
280:32 - your email they will send you a
280:33 - confirmation email and find existing
280:35 - organizations you've joined or can join
280:38 - but for now since we are just logging in
280:41 - we are going to enter our organization's
280:44 - URL then you will see this the name of
280:46 - your organization then here you will
280:49 - enter the email or username that you
280:51 - used when you created that organization
280:54 - and then your password if you don't want
280:56 - to use your password and that's usually
280:58 - what I do I can click here on the magic
281:01 - link option it's super helpful it will
281:04 - send you a link to your email and you
281:06 - may also need to enter a second
281:08 - verification code but it's helpful
281:10 - because you don't have to actually
281:11 - remember the password you can either
281:13 - click here on login if you enter the
281:15 - password or click here on Magic link I'm
281:17 - going to show you magic link because
281:19 - it's very helpful and I love this
281:21 - picture just see your email here confirm
281:23 - that it's your email the one that you
281:25 - entered before you can also choose if
281:27 - you want to stay logged in then send
281:30 - magic link you will get a magic link on
281:33 - your email and you will be able to click
281:36 - on a login link that will open crowding
281:40 - on a different different tub and this is
281:43 - what you will see when you enter your
281:47 - organization account it's very very
281:50 - similar to the crowding decom account
281:52 - but it does have a few more advanced
281:54 - features when you get the full license
281:57 - as an organization but we will go
282:00 - through that and you will see the
282:01 - similarities and differences in just a
282:03 - moment over here the first thing that
282:06 - you can see is the sidebar it's located
282:09 - to the left the first section is the
282:12 - workspace where you will see your
282:14 - projects or groups groups are like
282:17 - folders that you can use to categorize
282:20 - all the different projects of your
282:22 - organization a project is the set of
282:24 - files that you're going to translate for
282:26 - a specific project of your organization
282:29 - but a group is a way to group your
282:31 - projects we will create a project and a
282:33 - group in just a moment for now let's
282:35 - just have a quick tour of these options
282:37 - because you will find them very familiar
282:40 - if you already watch the previous part
282:42 - of the course then after workspace we
282:45 - find start projects if you have many
282:47 - different projects and you want to just
282:49 - select your favorite ones or your most
282:52 - used ones or the ones you're actively
282:54 - working on then you can click on the
282:56 - start icon in the project start them and
282:58 - find them all here that's very helpful
283:01 - if you have many projects then here you
283:03 - can find notifications you will see a
283:06 - history of all the notifications as like
283:08 - in a timeline and you can mark them as
283:10 - red red or un red you can also find
283:13 - archived notifications and you can
283:16 - filter them you can show all
283:18 - notifications just unresolved issues or
283:21 - notifications without a reply here you
283:24 - can also Mark all your notifications as
283:27 - red but I already did that here so
283:30 - that's why this is gray out but you
283:31 - should have this enabled if you have
283:33 - unread notifications then after that we
283:36 - find the messages messages is where you
283:39 - can create conversations remember
283:41 - conversations from crowding decom yes
283:44 - it's basically the same with crowding
283:46 - Enterprise you can start a conversation
283:48 - with individuals or invite multiple
283:50 - members you can search for members by
283:53 - their name username or email so here you
283:56 - can enter a username and an email and
283:58 - you will find your member and start a
284:00 - new conversation here we also find tasks
284:04 - tasks here work a little bit different
284:06 - because in the general view of this
284:08 - organization tasks are like shown
284:11 - globally you can create tasks within
284:14 - specific projects and they will all
284:16 - appear here you can also assign specific
284:19 - people to each workflow step and enable
284:22 - project notifications to avoid creating
284:24 - tasks but that is something very
284:26 - specific it's outside of the scope of
284:28 - this course you may dive into this if
284:30 - you don't want to create tasks for
284:32 - specific team members remember we create
284:35 - the task directly within the projects
284:37 - and they will all appear here because
284:39 - we're not actually with in a specific
284:41 - project we're within the organization's
284:44 - account that's something that you should
284:45 - keep in mind when you're in this main
284:47 - dashboard great that's the first
284:49 - category of tools and then we find more
284:52 - advanced tools that we have seen in the
284:54 - previous hours of the course here we
284:57 - find managers I created the organization
285:00 - so I am the owner I am a manager here it
285:03 - shows when I joined and the teams I
285:05 - belong to I can also search for specific
285:07 - managers here if I have many different
285:09 - managers in my organization
285:11 - and I can go to different pages and
285:14 - choose how many rows I want to see per
285:17 - page that's great I can add Managers
285:20 - from here you will see this helpful
285:22 - description on the bottom right and you
285:24 - can either click on got it learn more or
285:27 - actually use that additional tool here
285:30 - we can add a manager and adding a
285:33 - manager is very similar to what we did
285:35 - in crowding dcom you just need to enter
285:38 - the name username or email here and you
285:41 - will be adding a manager then you click
285:44 - on done and that's it you will be adding
285:46 - a manager for a specific subgroup or
285:49 - project then we find workflow templates
285:53 - we have not really covered workflows
285:55 - during the course because this is
285:56 - something that is more oriented towards
285:59 - Enterprise accounts and organizational
286:02 - accounts they're basically a sequence of
286:05 - steps that um the content of your
286:07 - project should go through when you start
286:10 - your project like like translation proof
286:12 - reading and quality assurance all the
286:15 - different steps that you would follow in
286:18 - a translation process here you can find
286:20 - some workflow templates that you can
286:22 - start with that you can edit and
286:24 - customize to your needs if you need to
286:27 - search for a specific workflow you can
286:28 - always search it over here and you can
286:31 - sort them by their name or by the date
286:33 - that we modified you can also reverse
286:36 - the order over here and change this to
286:39 - list view if you don't like the grid
286:41 - view I personally like the grid view
286:43 - because it's more Visual and I can
286:45 - actually see the workflow here they do
286:48 - have some similarities with flowcharts
286:50 - because they describe a process and a
286:52 - sequence of steps if we click here on
286:55 - let's say crowdsourcing because that is
286:58 - an example of what a nonprofit
287:00 - organization like an open source project
287:02 - would usually use crowd sourcing
287:05 - remember is the practice of engaging
287:07 - your community in the translation
287:09 - process so if we click on it we will
287:12 - enter like the the workflow editor and
287:14 - we will be able to customize each step
287:17 - let's have a quick overview of this so
287:19 - you can understand this better this is
287:21 - the workflow you can if if you click on
287:24 - the left Mouse button you drag it you
287:26 - can also zoom in and zoom out with these
287:29 - controls here at the bottom left and you
287:32 - can click on each individual node over
287:35 - here in the workflow to learn more about
287:38 - how it's being configured for example
287:41 - how can we read this workflow we start
287:43 - here we start the process and then we
287:45 - see that the strings are on
287:49 - translated then they go through a
287:51 - process of translation memory pre-
287:54 - transation here we see that we need to
287:56 - select the target language so it does
287:58 - need some specific setup or
288:00 - configuration to start the process Auto
288:03 - substitution of 100% match for the
288:06 - translation memory so the automated
288:09 - suggestions have to be a 100% match to
288:12 - actually translate it then the strings
288:16 - that are
288:17 - unrated go to the crowdsourcing phase
288:21 - here we can see more details about this
288:22 - phase engage your community in the
288:25 - localization process collaborate with
288:27 - volunteer translators and reward their
288:29 - efforts in a way that works for both of
288:31 - you all projects with this workflow step
288:33 - will be publicly accessible and
288:36 - translation resources will be shared
288:38 - with all volunteers registered in your
288:40 - organization ation so you can see that
288:42 - we have some description of these steps
288:45 - and Below them we have some settings
288:47 - that we can configure but for that we
288:49 - need to edit the workflow and we will do
288:51 - that in just a moment finally here we
288:54 - see proof reading and once the strings
288:57 - are approved because everything is
288:59 - translated you can see here we have
289:01 - translated strings then we just need to
289:03 - approve it then the strings are approved
289:05 - and the process ends since we don't have
289:08 - any Target languages yes we need to
289:10 - select a target language this is the
289:13 - basic crowd sourcing workflow we have
289:14 - other templates let's see how you can
289:16 - edit the workflow on the left side barar
289:19 - when we edit the workflow we see many
289:21 - different steps that we can add to this
289:24 - diagram and we just need to drag and
289:26 - drop them like this let's say that I
289:28 - want to add an extra Pro reading I can
289:31 - just drag it onto this area and I need
289:35 - to connect it with the previous node in
289:38 - the process so let's say that I want
289:41 - to have a second prove reading phase I
289:44 - am very very careful with my
289:46 - translations and I want the team to have
289:49 - a second proof reading phase what do I
289:51 - do well I just disconnect these two
289:55 - notes and then I take this node I click
289:59 - here at the bottom you will see a plus
290:01 - sign and I connect it over here creating
290:05 - this flow once the strings have been
290:07 - approved I just take this at the bottom
290:12 - and voila I connected with the end like
290:16 - this and I can readjust the location of
290:20 - the noes or the the different steps in
290:23 - the process over here in the diagram and
290:26 - I can also configure it so let's say
290:28 - that the output of this pH will be an
290:31 - approved string so that is already
290:33 - marked by default because it's a proof
290:35 - reading note and the output could also
290:38 - be approved by the assigned user
290:41 - and that would change the output of that
290:43 - node we can select specific languages
290:46 - for the output of that node or what the
290:49 - that phas will involve Great that is a
290:52 - proof reading step but we have many
290:54 - different types of steps we have Source
290:56 - text review custom code switch Source
290:59 - language translation memory pre-
291:01 - transation machine translation pre-
291:04 - transation translation translation by a
291:07 - vendor translation by apis proof reading
291:10 - and prove reading by vendor those are
291:13 - all the steps that we have right now and
291:15 - since we're already using the
291:16 - crowdsourcing step we see that it is
291:18 - great out because only one crowdsourcing
291:21 - step can be added to a workflow so they
291:23 - do have some limitations based on the
291:25 - logic of the step let's see how for
291:27 - example we can configure this
291:29 - translation memory pre- transation we
291:32 - can select the language we can turn on
291:35 - or off the auto substitution or we can
291:38 - use project settings and we can also set
291:40 - the minimum match ratio how good should
291:44 - the match be for the translation memory
291:47 - to actually assign a translation to the
291:49 - string in this case we're saying that it
291:51 - has to be a 100% match but we could
291:55 - decrement this number so we can actually
291:58 - find a match that fits our needs or we
292:01 - can also ask the match to be perfect to
292:04 - actually translate the string before the
292:07 - crowd sourcing step and in this case I
292:10 - would suggest keeping this off but you
292:12 - can automatically approve added
292:15 - translations you can choose to approve
292:17 - the added
292:18 - translations if they are a perfect match
292:21 - you can approve all of them which is
292:24 - it's always recommended to actually have
292:27 - someone reviewing that translation
292:30 - before it goes live in your project
292:32 - because it is automatically generated or
292:35 - it is selected from a database of
292:38 - previous translations that may not be
292:40 - appropriate for specific context so it's
292:43 - always great to have a pro reading phase
292:45 - before approving them but with perfect
292:48 - match with perfect match but approved
292:50 - previously or you can also replace all
292:53 - but skip Autos substituted translations
292:56 - so these are the settings that you can
292:59 - customize after you have your workflow
293:01 - ready you can choose to save it you can
293:03 - also undo or redo the changes you can
293:06 - find more information here in this
293:09 - question mark and if we see the tips we
293:11 - see drag workflow steps to the working
293:13 - area to get started that's exactly what
293:15 - we did right now we can drag the
293:17 - workflow steps we can set the connection
293:19 - between all the selected steps we can
293:22 - select the target languages and
293:24 - configure step settings to make each
293:27 - step work you need to set it up click on
293:29 - the steps one by one to Define Target
293:31 - languages and other specific settings
293:33 - workflow configuration is almost done so
293:36 - you can click save if all the steps are
293:38 - correct and if all the steps are
293:39 - connected to each each other like this
293:42 - and over here in the gear icon you can
293:44 - see the workflow settings you can change
293:46 - the name of the workflow you can change
293:48 - the description the template already has
293:51 - a description that you can customize and
293:53 - you can also choose don't center the
293:55 - selected workflow step when editing you
293:58 - can enable or disable this and after
294:01 - that you can save your workflow by
294:03 - clicking here that's basically the
294:04 - workflow editor and you can customize
294:08 - this to fit the needs of your
294:09 - organization
294:11 - here if we go back to the workflow
294:13 - templates in our organization we go back
294:17 - and we can see additional options over
294:19 - here in the templates if we click here
294:22 - on the information button we will see
294:24 - the name of the workflow and the
294:26 - description so we can see more about the
294:28 - workflow before we actually enter the
294:31 - workflow editor and if we click on the
294:33 - ellipses we can preview the template if
294:35 - we preview the template we see it over
294:37 - here and then we can click on edit we
294:40 - can also go back we can edit it directly
294:43 - we can duplicate it and we can delete it
294:46 - if you want to customize a template but
294:48 - you don't actually want to change the
294:50 - template itself then you can duplicate
294:52 - it and then customize it to your liking
294:55 - and you can also delete
294:57 - it another option would be to create a
295:00 - new workflow from scratch if you want to
295:03 - do that then you just need to click here
295:05 - on
295:06 - Create and then you can create a new
295:09 - workflow template projects within an
295:11 - organization can share the same workflow
295:13 - template or have different ones each
295:15 - step can be assigned to different people
295:17 - and include different languages so we
295:20 - are creating a new workflow template
295:22 - because over here all the workflows that
295:24 - we have are templates that we can assign
295:26 - to multiple projects so we can create
295:29 - our workflow once and reuse it as many
295:32 - times as we need to we are writing the
295:34 - name of the workflow and the description
295:37 - once we have that we just click on
295:39 - Create and that will create our workflow
295:42 - we can assign it to the projects we need
295:44 - awesome now you know how to work with
295:46 - workflows so let's continue with these
295:48 - options you will find them very familiar
295:51 - because they are familiar we saw them
295:52 - previously the translation memories we
295:55 - don't have any yet because we haven't
295:56 - created a project but here you will find
295:58 - your translation memories your
296:01 - glossies and your machine translation
296:04 - the translation memories can be created
296:07 - over here with a create
296:08 - button and if you create a new
296:10 - translation memory you will need to
296:12 - enter the name the language and you can
296:15 - drag files here or you can select files
296:18 - from your file system if you want to
296:21 - actually upload a file with the source
296:23 - strings and their translations into
296:26 - different languages this can help you to
296:28 - speed up the translation like we did in
296:30 - crowding dcom the glossaries can also be
296:33 - created here with the create button new
296:35 - you you just write a new name you assign
296:38 - a name you select the language of the
296:40 - glossery and you can also drag glossery
296:42 - files over here machine translation has
296:45 - a few different options by default here
296:48 - you can see crowding translate the
296:50 - engine is crowding translate and it
296:53 - supports 24 language pairs you can see
296:56 - them over
296:57 - here English to all of these languages
297:00 - French to English and Chinese simplified
297:03 - to English and Japanese so you can check
297:06 - if the language pair that you're looking
297:08 - for is available here on crowding
297:10 - translate for the machine translation
297:12 - process if you click on this ellipses
297:14 - you can edit the machine translation
297:16 - clear cache or delete and you can change
297:19 - the view by clicking here on select
297:21 - columns if you want to show all of these
297:24 - columns just check them if you want to
297:26 - hide any of them just uncheck them and
297:28 - you can customize the user interface to
297:31 - fit your needs this way you can also
297:33 - hide everything or show everything over
297:36 - here with all
297:38 - selected great and you can also over
297:42 - here we go to the bottom right you can
297:45 - add a machine translation engine you
297:47 - will see it added over here below as a
297:50 - second entry here to add a machine
297:53 - translation engine you can use an
297:56 - existing integration or a custom
297:58 - integration and here you can select the
298:00 - engine Google translate Microsoft
298:02 - translator Amazon translate then you
298:05 - assign a name to your translation engine
298:07 - and you select the applicable languages
298:10 - you can leave it empty for access to all
298:13 - languages and you can enable the machine
298:16 - translation in specific projects here
298:18 - you would be able to select your project
298:21 - you can leave it empty to enable it in
298:23 - all the projects after you have all of
298:25 - this set up or if you want to set up a
298:27 - custom integration you can do that and
298:29 - then click on Create and you will have
298:32 - your new machine transation
298:35 - engine that's for machine translation if
298:37 - you want to go to reports then you click
298:40 - here on reports and you will see
298:42 - basically all the information that we
298:44 - had in crowd.com in a different view or
298:47 - presentation the organization overview
298:49 - number of words languages the percentage
298:52 - of strings that have been translated by
298:55 - users translation memory machine
298:57 - translation we have unresolved issues
298:59 - quality assurance issues we have charts
299:03 - different charts and graphs of the proof
299:05 - reading and translation activity so you
299:08 - can have a a bird side view a general
299:10 - overview of everything that is happening
299:12 - in your project and you can keep a close
299:15 - track on your theme it can be super
299:17 - helpful remember that you can change
299:19 - this to show you for example a number of
299:22 - words number of strings characters or
299:25 - characters with spaces so you can get as
299:28 - granular as you need for your
299:30 - organization and you can also expand the
299:33 - range the the time range of the summary
299:37 - from 30 days to 24 hours to last year or
299:41 - you can narrow it down to the last week
299:44 - depending on the data that you actually
299:45 - need to analyze they're very very
299:48 - helpful and in this with this option the
299:50 - purple option you can also generate a
299:53 - list of translators based on a specific
299:56 - period of time to see who contributed
299:59 - the most to your Project's translation
300:01 - if you click here on generate you will
300:03 - get a list of your Top members that's
300:06 - always helpful to know who has
300:07 - contributed the most to your project
300:10 - after that we find here the store which
300:13 - is an interesting area of the
300:15 - organization because it's already
300:17 - incorporated into the organization if we
300:20 - click here we will see all the different
300:22 - applications that are available in
300:25 - crowding if you see this little arrow
300:27 - here that means that the extension is
300:31 - free to download or free to incorporate
300:33 - into your projects and they do have many
300:35 - many different applications in their
300:37 - store you can filter them by author by
300:41 - specific authors you can filter them by
300:44 - tax those are the two options author and
300:47 - tax you can also search for them in the
300:50 - search bar you can filter by
300:53 - categories and by relevance by name by
300:57 - date publish so basically you have many
300:59 - different options to find exactly what
301:01 - you need and additionally you can also
301:03 - reverse the order over here we also find
301:05 - something very interesting if you want
301:07 - extra quality assurance checks
301:10 - you can go here to QA check templates
301:13 - and you can add them to your project
301:15 - like colors mismatch date format
301:18 - consistency find duplicate words Emoji
301:22 - mismatch extra phone number forbidden
301:25 - characters it's just great to know that
301:27 - we have all of these extra quality
301:29 - assurance features that make the
301:30 - translation process a lot easier so I
301:33 - recommend checking this if you are
301:35 - representing an organization it will
301:37 - help you and your contributors a lot it
301:40 - will save you a lot of time and finally
301:42 - we reach user management user management
301:45 - is where you can manage users and teams
301:48 - I can see a summary of all my users when
301:51 - I joined when I last saw the project my
301:54 - name username the permissions I have and
301:58 - I can select my row and perform other
302:01 - operations on me like on that user which
302:04 - is really me but it could be any user
302:07 - that belongs to my organization I can
302:09 - edit
302:10 - the user first name last name pronouns
302:14 - time zone and the
302:15 - email and I can also view the user
302:20 - crowding is currently working on a
302:22 - feature that is coming soon working on
302:25 - so you can expect this feature to be
302:28 - available perhaps when you're watching
302:30 - this video it seems like it will show
302:32 - you the test that the user is currently
302:34 - working on so that's great I'm looking
302:36 - forward to that feature from the bottom
302:40 - right you can also invite users if you
302:43 - want to invite people to your
302:44 - organization you can use their emails
302:47 - you can send multiple emails just
302:48 - separate the addresses with commas so if
302:51 - you write the emails here like sample
302:54 - gmail.com and demog gmail.com you will
302:59 - going see that I'm adding all these
303:00 - emails and I can also remove them here
303:03 - by clicking on the X if I click here on
303:06 - this button send invite I will be
303:07 - sending the invites to those emails and
303:10 - they will be able to join my
303:13 - organization now that we covered all the
303:15 - tools that we have here on the left
303:17 - sidebar let's go to the settings because
303:20 - in crowding Enterprise we also have
303:22 - settings that we can customize just like
303:23 - in crowding dcom we will go through them
303:26 - real quick first we're going to start
303:28 - with the account settings and then the
303:30 - organization settings for the account
303:32 - settings we can see our personal
303:33 - information like Photo first name last
303:36 - name pronouns the platform language we
303:39 - can change this to English or Chinese
303:42 - simplified our username and our email
303:45 - then we have security features like the
303:48 - authenticator app connected applications
303:50 - device verification they have many
303:53 - different ways to keep your projects
303:54 - safe then we have notifications we can
303:57 - configure if we want to get inapp
303:59 - notifications or email notifications or
304:02 - custom notifications basically we can
304:05 - get notifications for many different
304:08 - things like collaboration Integrations
304:11 - new strings language progress content
304:14 - issues it's really great to know that we
304:17 - can customize this to fit our needs
304:19 - exactly I encourage you to go through
304:22 - all of them and check what you would
304:24 - like to enable or disable from the
304:27 - notifications panel and over here we can
304:29 - also find personal access tokens that we
304:31 - may use with accounting API command line
304:35 - interface and some of the Integrations
304:37 - and plugins they may ask for personal
304:40 - access tokens you can generate a new
304:43 - token over here clicking on this button
304:46 - and that's the account settings in
304:48 - Enterprise if we go to organization
304:51 - settings over here we find even more
304:53 - settings that we can customize we have
304:56 - the name of the organization we can
304:58 - change that the logo public
305:01 - organizations this section is unlocked
305:03 - when the organization has at least one
305:05 - public project a public project in
305:07 - crowding is a project that has has a
305:10 - crowdsourcing step in its workflow
305:12 - remember we just talked about workflows
305:14 - and we had a crowdsourcing step so we
305:16 - have to have that step to enable these
305:18 - settings public description default
305:21 - public project View and featured
305:23 - projects free Cod cam is an example of a
305:26 - public organization you can see this
305:28 - over here we have this view we have
305:30 - different projects and we also have the
305:33 - name and we can have a description here
305:35 - in
305:36 - about and finally we see a custom domain
305:39 - you can enter the custom domain over
305:41 - here and save it then we see
305:43 - authentication we see different apps
305:46 - that we can install from the store and
305:48 - we can also install private apps custom
305:50 - QA checks what we just saw that we can
305:53 - add from the store we can configure web
305:55 - hooks custom languages custom
305:59 - placeholders and much more like security
306:01 - logs and legal and compliance but that's
306:03 - beyond the scope of what we're trying to
306:05 - do over here those are all the settings
306:08 - that we can configure
306:10 - if we go back to the workspace now let's
306:12 - go through these options that we have
306:14 - here we have the search bar where we can
306:16 - search for projects if we have many
306:18 - different projects they will appear here
306:20 - and you will be able to filter them to
306:22 - find them quickly here we can see
306:24 - notifications over here we can go to
306:27 - conversations it's the same as clicking
306:29 - here and here we can find more
306:31 - information like support help center
306:33 - community cookies keyboard shortcuts and
306:36 - what's new you may see some differences
306:39 - between what I am showing you right now
306:41 - and the state of crowding Enterprise
306:43 - when you take the course but they will
306:46 - be small updates or additions or
306:47 - modifications but overall the
306:49 - functionality should be basically the
306:52 - same great now you know the basics of
306:55 - the crowding Enterprise user interface
306:57 - so we're going to create a project in in
307:02 - in crowding Enterprise to show you how
307:03 - it works and how we can also create
307:05 - groups to group your projects by
307:07 - category so I will see you in in the
307:09 - next section to continue with this
307:15 - topic let's say that I I'm representing
307:18 - an organization and I'm creating the
307:21 - project in my organization's account how
307:24 - can I do that how can I start a new
307:26 - project we're going to be looking at how
307:29 - this works with a basic example the PDF
307:32 - file that we worked within the previous
307:35 - sections of the course but this process
307:38 - will apply to projects of any complexity
307:41 - okay I'm just using the PDF file to show
307:43 - you all the basics if we click here on
307:45 - create on this button here at the bottom
307:48 - right we will see two options we can
307:50 - either create a project or create a
307:53 - group what's the difference between a
307:56 - project and a group a project is a set
307:58 - of files that we are used to working
308:00 - with but a group is like one level above
308:03 - the concept of a project because it's
308:05 - like a folder that organizes related
308:08 - projects on under the same area or space
308:12 - in the workspace if we create a group we
308:15 - can also create subgroups groups within
308:18 - groups of projects and that's very
308:20 - helpful to organize our projects because
308:22 - they can share resources within the same
308:26 - group we can share translation memories
308:29 - we can share glossaries we can share
308:31 - Machine translation engines and
308:33 - workflows so creating groups and
308:35 - organizing your projects like this can
308:38 - save you your contrib rors and your team
308:40 - a lot of time so let's create a group
308:44 - let me show you how we can create a
308:46 - group new group let's name this Android
308:49 - let's say that we are an organization
308:51 - and we are developing an Android app
308:54 - like free codam has its own Android app
308:56 - if we are planning to have multiple
308:58 - projects for Android then we can create
309:00 - a group named Android and then we click
309:04 - here on create group if we create that
309:06 - group we can see it right here Android
309:08 - the group is empty but now we see the
309:11 - workspace we can filter our groups and
309:14 - projects by their visibility by public
309:17 - and private projects by their
309:19 - translation status and by the workflow
309:22 - status we can also filter by their name
309:26 - and sort them by their name by when they
309:28 - were added by their last activity and we
309:31 - can switch between list and grid view
309:34 - but I personally prefer the GD view so I
309:37 - recommend it but it's really up to you
309:39 - if we click here on the group we will be
309:41 - inside the group inside the Android
309:43 - group we can see it here within our
309:45 - workspace and currently we have no
309:47 - projects in this group all projects that
309:50 - we add to the group will appear over
309:52 - here just to show you how this works
309:54 - with multiple groups let's create
309:56 - another group let's say web for all our
309:59 - web application projects create group
310:03 - web and let's create another
310:05 - group iOS let's say that we are
310:08 - developing an app an app for Android and
310:11 - for iOS and we also have a web version
310:14 - like fre codam so we have three groups
310:16 - here that are all empty right now if we
310:18 - go into the groups we will see them over
310:21 - here we see the overall workspace
310:23 - structure and if we click here we can go
310:26 - from one group to another without
310:28 - actually returning to the main workspace
310:30 - this is quicker and it can save you a
310:32 - lot of time awesome so you know what a
310:35 - group is you know how to create it so
310:37 - let's actually create a project
310:43 - let's create a project in crowding
310:45 - Enterprise for your organization to
310:48 - create a project you click here on
310:50 - Create and then you can choose if you
310:53 - want to create a project or a group a
310:55 - group is like a set of projects here we
310:58 - created the groups Android web and iOS
311:01 - right now these groups are empty but we
311:04 - can always add new projects to them
311:06 - let's select project here and let's see
311:08 - what we need to choose and customize we
311:10 - need to customize the name so
311:13 - let's name this freeo cam tutorial the
311:17 - project languages are going to be Source
311:20 - language English and target language
311:22 - again we see the same list of languages
311:25 - that we are familiar with from previous
311:27 - steps and we can choose Spanish let's
311:30 - say that we are going to choose Japanese
311:34 - Bengali Hindi and French just to add a a
311:39 - few Target languages for our project but
311:42 - we will be mainly working with Spanish
311:44 - like always we can always click here on
311:46 - the X if we want to remove that language
311:49 - selected from the list then we can also
311:51 - click on clear we can create custom
311:54 - languages or we can prefill the list
311:56 - with the top 30 languages on crowding we
312:00 - have all of these options then
312:02 - optionally we can choose a workflow by
312:05 - default you will see the in-house
312:07 - translators workflow but but you can
312:10 - remove this with the X and you will be
312:12 - able to set up a workflow later you
312:14 - don't have to do that at this particular
312:16 - step and you can see all the four
312:19 - templates that you already have
312:20 - predefined let's say that we choose a
312:22 - crowdsourcing workflow just as a example
312:25 - because if you're representing an open
312:27 - source project or a nonprofit
312:29 - organization you will be working with
312:31 - crowdsourcing so let's see how this
312:33 - works we can also enable this delay
312:36 - workflow start delayed workflow start
312:39 - allows you to upload existing
312:41 - translations and resources like
312:43 - translation memory or glossies even
312:46 - before the project becomes available for
312:48 - translation so if you want to upload any
312:51 - existing resources to your project just
312:54 - enable this okay for now we're going to
312:57 - keep this
312:59 - disabled and then we create our project
313:03 - and here we can see our project in
313:05 - crowding Enterprise it's a bit different
313:08 - than what we saw in crowd.com but the
313:10 - functionality is essentially very
313:12 - similar let's go through the main
313:14 - aspects of this first here we find the
313:17 - name of our project and we can search
313:19 - for projects if our organization has
313:21 - multiple projects we can also star our
313:24 - project if this is a project that will
313:27 - be used very frequently we can start it
313:29 - here by clicking on the start and you
313:32 - will see it in the start projects in
313:34 - your organization that's helpful if you
313:36 - want to keep track of the projects that
313:38 - you're currently working work on or your
313:39 - most popular projects so that's like a
313:42 - quick way to have them at hand here you
313:44 - can see that we have the crowdsourcing
313:46 - workflow five Target languages zero
313:49 - Source words because we haven't uploaded
313:51 - any resources yet and the last activity
313:53 - was a few seconds ago we can change our
313:56 - project's logo in the settings that's
313:59 - always helpful to create a friendlier
314:02 - tone for the organization and for your
314:04 - volunteers and
314:07 - contributors first here we we find the
314:09 - dashboard in the dashboard we find our
314:12 - Target languages with a very similar
314:14 - user interface that we had before we
314:17 - have the translation and approval
314:19 - percentages we can see a more detailed
314:22 - breakdown of the different steps of our
314:25 - crowdsourcing workflow that we chose we
314:28 - see this automatic step we have the
314:30 - crowd sourcing step and we have the
314:31 - proof reading step and we can go to the
314:34 - editor very quickly or we can close this
314:37 - for every individual language if we
314:40 - click on the language we go to that
314:42 - particular language and here we would
314:44 - see the source files if we go to the
314:46 - details we can see all the managers and
314:48 - if we have any members project members
314:50 - we will also see them here we see their
314:52 - role the project ID when it was created
314:55 - The Source language we can change that
314:57 - by clicking on the gear icon and then
315:00 - choosing the language again we can
315:02 - change that over here if we need to and
315:04 - we see how many project members we have
315:07 - we also have the option to upload
315:09 - download or pre-
315:11 - translate right now our workflow in the
315:14 - second tab here in the second step we
315:18 - see the workflow scheme here we can see
315:21 - that we have the same workflow that we
315:23 - had for crowdsourcing before but now
315:24 - instead of being a template it's
315:27 - actually customized to our project
315:30 - because now we do have Target languages
315:32 - selected Bengali French Hindi Japanese
315:35 - and
315:36 - Spanish so instead of being just a
315:38 - template now we do have specific
315:40 - translated languages and here if we
315:42 - click on crowdsourcing we also see a
315:45 - special page this is your crowdsourcing
315:48 - settings page here you can configure the
315:50 - appearance of your project on the public
315:53 - page what your volunteers will see set
315:56 - up branding and build a community by
315:58 - sharing an invitation link on your
316:00 - website or social media that's basically
316:03 - what fream does for our community once
316:06 - confirmed publish your project to make
316:08 - it visible on your organization's public
316:10 - page if we go to free code camp we can
316:13 - see that this is the translation page
316:16 - for our Organization for free code cam
316:19 - we see the feature projects all the
316:21 - projects we see an about page and we can
316:24 - also share links to our organization on
316:26 - our website so basically this is what
316:28 - free Cen has configured we can customize
316:31 - our logo by uploading a new logo here
316:34 - change the public project name use a
316:37 - catchy title to inspire your
316:39 - contributors then we see the public
316:41 - project identifier the public project
316:44 - URL how people are going to be able to
316:47 - reach your public project and your
316:50 - description this is optional you can
316:52 - also choose a custom domain if you click
316:55 - here you will go to this part of the
316:58 - settings where you can set up your
317:00 - custom domain your organization settings
317:03 - now if we go back to the project now we
317:06 - know what workflow is we know the
317:08 - crowdsourcing step in the crowdsourcing
317:10 - step we also see the readme we can edit
317:13 - the readme with the markdown format add
317:16 - links quotes and images everything to
317:19 - get your community excited about this
317:21 - new project that they can contribute to
317:24 - you can also activate gamification but
317:27 - that feature is coming soon it seems
317:29 - like it's going to be a great feature
317:31 - you can activate reward system to
317:33 - encourage contributors that's a very
317:36 - interesting feature I'm looking forward
317:38 - to seeing it might be enabled by the
317:40 - time you watching this video so make
317:42 - sure to try that for encouraging your
317:45 - community then you can also see the
317:47 - status image this is something that you
317:49 - can embed in your projects read me the
317:52 - localization status this one right here
317:54 - the general documentation or any other
317:56 - service for that you use for the project
317:59 - like GitHub this is a preview of your
318:02 - status image it will show the percentage
318:04 - of the translation of your project you
318:07 - can embed that status icon with this
318:10 - line of a markdown here for HTML this
318:14 - line of markdown for a your readme or
318:17 - markdown file and you can also share
318:19 - this image URL you can copy it by
318:22 - clicking on this button and it will be
318:23 - copied to your clipboard you can also
318:26 - invite a developer if you need help with
318:28 - any of these steps another thing that is
318:31 - very helpful for crowdsourcing is
318:33 - assigning proof readers and manager
318:35 - roles proof readers and managers
318:37 - participate in discussions they help you
318:39 - find the best translations and basically
318:40 - organize the localization community so
318:43 - you can invite people here and you will
318:46 - be inviting them to contribute to this
318:48 - particular project and finally we see
318:50 - building Community direct link this is a
318:53 - link that you can use to invite people
318:55 - to your crowdsourcing project you can
318:57 - share it directly on your website or
318:59 - send it via email it's great out but you
319:01 - can copy it here and it will be copied
319:04 - to your clipboard please read the
319:06 - privacy policy notice so you know
319:08 - everything that crowding is sharing with
319:10 - you here about the privacy policy when
319:12 - you share this link and here we can also
319:14 - see a website pop up you can see the
319:17 - crowding is thinking about everything
319:18 - that can be helpful to engage the
319:20 - community for these types of
319:22 - crowdsourcing projects you can also add
319:24 - the website popup the crowding web
319:27 - widget encourage visitors to your
319:29 - website to contribute to the
319:32 - translations the this widget allows
319:34 - browsing visitors to translate and vote
319:36 - for Strings shown in a Rand order
319:39 - directly on your website this way more
319:42 - people can contribute to your Project's
319:44 - translation you can enable translations
319:46 - via the web widget over here if you
319:48 - click on it and you can add this this
319:51 - JavaScript snippet to your website Pages
319:54 - where the widget should be displayed you
319:56 - just copy it right before the closing
319:58 - body tag and you will see the widget
320:00 - where people can contribute please note
320:02 - that each person who clicks on the
320:04 - widget must choose from the list of all
320:06 - the project Target languages be for
320:09 - contributing if you want to skip the
320:11 - step predefine the target language at
320:13 - the beginning by adding the language
320:15 - code to the snippet members will also be
320:17 - able to change the language in the
320:19 - widget settings this is an example of
320:22 - what a snippet with a French predefined
320:24 - language would look like here we can see
320:26 - this data language code we can see F FR
320:30 - which is the twetter code for the French
320:32 - language so that's very interesting and
320:36 - I highly suggest diving into these Ops
320:39 - because they can be super helpful for
320:40 - engaging your community especially this
320:43 - feature that is coming soon the
320:44 - gamification system to reward your
320:48 - contributors great so after we know
320:50 - about that let's go to sources here we
320:53 - find files and
320:54 - strings files is where you can upload
320:57 - your files it's very similar to what we
320:59 - saw in crow.com but we have a few option
321:02 - a few different options here we see
321:04 - upload files from the device from your
321:07 - device you can also upload zip archives
321:10 - you can use samples from crowding to
321:12 - explore how the platform works you can
321:14 - set up Integrations with your repository
321:17 - or other supported systems like we did
321:19 - before and you can invite developers to
321:21 - help you with the project setup
321:23 - currently we have no files to translate
321:25 - but I'm going to upload our welcome to
321:27 - Free code cam sample file just as a test
321:30 - upload
321:30 - [Music]
321:31 - file welcome to Free code cam it's
321:34 - uploading the file it's uploading the
321:37 - file
321:39 - and you may need to wait for a few
321:40 - seconds while it's being uploaded and
321:42 - also remember that this has to be
321:44 - converted into individual strings so it
321:46 - might take a few minutes or a few
321:48 - seconds while it's being processed also
321:51 - since it's a PDF file it will be
321:53 - converted into either HTML or dogx files
321:57 - it's automatically converted so now we
321:59 - close it and if we double click on it we
322:02 - see a preview of the file over here if
322:06 - we click on these three small while the
322:09 - in the ellipses we see all of these
322:10 - options preview opening editor settings
322:13 - download Source view progress view
322:15 - strings update move rename and delete
322:19 - basically the Bas the essential
322:21 - functionality that you would need for
322:23 - any file and I'm showing you this with a
322:26 - basic doca or a PDF file because the
322:30 - functionality will be exactly the same
322:32 - for projects of any size or complexity
322:35 - okay so I'm focusing here on the basics
322:37 - to be as general as possible so you can
322:39 - understand how this works and apply it
322:41 - to any project that you're working with
322:43 - let's select this file and let's see
322:46 - what we get here on the right sidebar we
322:48 - see the details the number of strings
322:51 - number of words when it was last updated
322:54 - we can preserve folder hierarchy for
322:56 - export that is also important if we want
322:58 - to keep that hierarchy when we export
323:01 - the files we can click here we can also
323:04 - download the translations for selected
323:06 - languages and we have a history of
323:09 - revisions made to the file we have 24
323:12 - strings added none of them were updated
323:14 - and none of them were removed at this
323:17 - point then you will see like a timeline
323:19 - a vertical timeline being created as you
323:21 - work on the file great revisions one and
323:25 - you will be taken to that timeline you
323:27 - will see all the different revisions of
323:29 - your file with this Arrow you can also
323:32 - set the priority right now it says
323:33 - medium priority if we click on it again
323:36 - it will turn red and it will have a high
323:38 - high priority or right now if we click
323:40 - on it again it will go to a low priority
323:43 - so you can help your translators choose
323:45 - what to translate first by giving them
323:48 - this particular priority great over here
323:51 - we also find the search bar we find an
323:54 - option where we can create a branch if
323:56 - we're working with Version Control
323:58 - Systems like GID and we want to create
324:00 - different branches we can also create
324:02 - folders and we can add new files we can
324:05 - upload them we can create strings Vault
324:08 - or we can set up an integration to
324:10 - upload them or import them automatically
324:13 - through an integration now if we go to
324:15 - Strings now we can see all the strings
324:17 - that we had from that particular file
324:20 - that we just uploaded we can see the key
324:23 - for that string the context and the
324:26 - source in English the text on the string
324:30 - so we have all this detail and for each
324:33 - individual string we can edit it we can
324:35 - hide it or we can assign a label to it
324:38 - we can manage labels if we click over
324:40 - here and assign labels to individual
324:43 - strings it goes to a very granular level
324:46 - this tool and how crowding presents the
324:48 - information we can filter strings
324:50 - because you can see that right now I
324:52 - only have one very simple file and I
324:54 - already have all of these strings for a
324:56 - real project this would have like
324:58 - thousands of rows or millions of rows
325:01 - potentially if you want to filter them
325:04 - you can filter them by strings with
325:05 - issues with comments with screen
325:08 - screenshots or with different visibility
325:11 - only the strings that are hidden or
325:13 - visible you can also search for them by
325:16 - the source string by the context or by
325:19 - anything you need to filter in this list
325:22 - you can edit the string that you
325:24 - currently have selected by selecting
325:27 - that string with the check mark over
325:29 - here and then clicking here on edit
325:31 - that's another way of editing that
325:33 - string you can also hide it or you can
325:36 - manage that String's labels these are
325:38 - like shortcuts to the options that you
325:41 - have over here we can also add a
325:44 - string add a source string ourselves if
325:47 - we need to if it's a string that is not
325:49 - in one of our source files here at the
325:52 - top we also see all
325:54 - files we can filter the strings by the
325:57 - files that we want to check for example
326:00 - if we had multiple files we could only
326:02 - show the strings for this particular
326:04 - file and here we can search for that
326:06 - file if we have hundreds of f files so
326:09 - we don't see all the strings here in an
326:11 - endless list of rows we can just go to
326:14 - the strings that we're interested in and
326:17 - over here we have an option called
326:19 - labels where we can manage the labels
326:21 - that we can assign to specific strings
326:24 - we create a label and then we can assign
326:27 - it to a string very easily with this
326:30 - option label ass let me show you how to
326:34 - create a label we go to labels then
326:37 - let's say that this
326:39 - we want to create a label that says that
326:41 - the string is important let's say we
326:44 - save it now we have that label we can
326:47 - edit it or delete
326:49 - it and now if we go back to sources
326:53 - strings and we select a specific string
326:57 - we are going to label it as
327:01 - important we mark it we check it and
327:04 - then we apply it like this and now
327:07 - that's string will be marked as
327:09 - important for that label it's a great
327:12 - feature if you want to categorize your
327:15 - strings great so after that we go to the
327:18 - next category translations where we can
327:21 - upload existing translations if we have
327:23 - them download them as zip it's very
327:25 - similar to what we saw in crown.com this
327:28 - one is really very similar you can
327:31 - download all languages or specific
327:33 - languages this will be languages from
327:35 - your target languages for that
327:37 - particular Pro project Target file
327:40 - bundles that you can generate and you
327:42 - can have over thee a Content delivery
327:45 - but this is beyond the scope of the
327:46 - course this is more advanced if you want
327:48 - you can dive into this option you also
327:50 - have an option to preview translations
327:52 - as a CSP file and xlsx file or you can
327:57 - also preview them in the browser if you
328:00 - click on preview in the browser you will
328:01 - see like an overview of all the strings
328:05 - that you currently have and since we
328:07 - haven't translated them them they are
328:09 - just a repetition of what we had in
328:11 - English but when we translate them we
328:13 - will see them there then we find a
328:16 - screenshots that you can add and upload
328:17 - for additional context you just click
328:19 - here on upload you select your
328:21 - screenshot and then you can add that to
328:24 - your strings you can also create tasks
328:27 - for this particular project and it's
328:29 - important to remember that you are
328:31 - creating the tasks for that particular
328:34 - project when you go back to your
328:36 - crowding dashboard your organizations
328:38 - dashboard by clicking here on the
328:40 - crowding icon you will go back to your
328:43 - workspace this workspace has all the
328:46 - projects of your organization and if you
328:48 - go here to tasks this will show all the
328:51 - tasks of all the different projects in
328:53 - your organization it's like a
328:56 - combination of everything that you're
328:58 - working on all the tasks will be there
329:00 - but this is different from the tasks of
329:02 - an individual project when you're inside
329:05 - the project view this tasks will be
329:08 - the task for that particular project
329:11 - these tasks are for the project and the
329:13 - other tasks are in general for the
329:15 - organization so you will see all the
329:17 - tasks of all the projects in your
329:19 - workspace great so let's create a new
329:23 - task you can see that it's very similar
329:24 - to what we did in crowding dcom
329:27 - translate by your own translators by
329:29 - proof readers Source language the
329:32 - strings if you want to translate all the
329:35 - to-do strings or the strings that were
329:37 - modified IED in a specific time range
329:40 - you can filter them by labels for
329:42 - example if we have the important label
329:44 - here we can choose to translate all the
329:47 - important strings in that file or you
329:50 - can also exclude labels you can add a
329:53 - due date and selected from the calendar
329:56 - and this option is also very important
329:58 - to make sure that your team is working
330:00 - productively skip strings already
330:02 - included in other tasks if you select
330:05 - this you will be skipping the strings
330:07 - that have already been assigned to other
330:09 - team members so you will be avoiding any
330:11 - repetitive work then you can select the
330:14 - files that you want to assign the target
330:17 - languages like Spanish Japanese and then
330:21 - who is going to be assigned to that
330:23 - particular language I'm going to assign
330:26 - users for Spanish then I can select the
330:29 - user here and click on done I also have
330:32 - the option to split files and tell that
330:35 - user or that contributor how many words
330:38 - will be translated approximately so we
330:41 - are going to just disable this we're not
330:45 - going to split the file for now we're
330:47 - we're going to click on done then we see
330:50 - summary here and description here you
330:52 - can write a more detailed description of
330:54 - the
330:55 - task I'm going to assign myself to
330:58 - Spanish and Japanese so you can see that
331:00 - the same contributor can be assigned to
331:03 - multiple languages let's check this
331:06 - let's also add a we're not going to have
331:09 - any due dates for now we're just going
331:11 - to create the task and we're going to
331:13 - create it you can see that after you
331:15 - create your first task you will have
331:18 - like a the dashboard that we had before
331:20 - in crowding dcom where you can drag and
331:22 - drop your tasks and you will have one
331:24 - task per language here we have Japanese
331:27 - and here we have Spanish when the tasks
331:30 - are pending when they are not completed
331:32 - they will be in the
331:33 - to-do column then in progress and then
331:37 - they will be done
331:38 - you can also close the task it's
331:40 - basically essentially the same with a
331:42 - different presentation here very helpful
331:45 - to keep track of everything you have who
331:47 - created the task when it was created the
331:49 - current
331:50 - status you can open the task in the
331:52 - editor the percentage of completion of
331:56 - that task and who is assigned to that
331:59 - task you can also add comments here and
332:02 - start a discussion you can filter tasks
332:05 - as well with different criteria you can
332:07 - search for specific tasks Group by
332:10 - language and this is very very nice you
332:12 - can group tasks by language instead of
332:14 - seeing them like this in a board all of
332:17 - them combined you can group them by
332:19 - language so if you're looking for a task
332:21 - in Spanish just open this and you will
332:23 - see all the tasks that you currently
332:25 - have for Spanish and you can just
332:27 - reorder them and the effect will also be
332:30 - reflected if you change the view to the
332:35 - dashboard again like this it's very very
332:39 - helpful you can also see all the tasks
332:41 - for that particular project here in all
332:44 - tasks and you can choose to move to a
332:46 - different status to edit the task close
332:49 - it or delete
332:51 - it now we go to members and this is
332:54 - basically the same that we have been
332:55 - working with the member tab we have the
332:57 - members we know their their roles Here I
333:00 - Am the owner H when we gave them access
333:03 - if they belong to a team and here we can
333:05 - find more details about the user how
333:07 - many strings were translated approved
333:10 - voted or commented we can also remove
333:12 - members over here in the trash can and
333:14 - we can invite people if you want to
333:16 - invite people to that project this is
333:19 - similar and yet a bit different from
333:20 - what we did in crowding decom you can
333:23 - enter the users email username or team
333:26 - name you just need to write the email so
333:28 - let's say sample at gmail.com but don't
333:30 - worry I'm not going to send the
333:32 - invitation
333:33 - there and there I can assign the role
333:36 - manager develop ER Pro reader or
333:39 - language
333:40 - coordinator I can also just send the
333:42 - invitation without enabling any of these
333:45 - roles if I just want the contributor to
333:47 - be a translator but I can enable this if
333:50 - I want to okay manager developer if you
333:54 - want to give access to that contributor
333:56 - to the project as a proof reader you can
333:59 - enable this and if you click on this
334:02 - Arrow where you see all languages you
334:04 - can restrict the access because
334:06 - sometimes we don't want to assign a
334:08 - proof reader to all the languages we
334:10 - want to assign it to a particular
334:12 - language that we know he or she is
334:14 - proficient in right so we will disable
334:16 - this access to all the project languages
334:19 - and then we can select a specific
334:21 - language like
334:23 - Spanish and after we select that
334:26 - language we can select multiple
334:28 - languages like let's say Spanish and
334:30 - Japanese we can also restrict in the
334:33 - access of that particular proof Feer to
334:36 - the steps of our workflow
334:38 - if we want to assign that proof reader
334:40 - to all the steps in the workflow
334:42 - existing and a future we keep this by
334:45 - default but if we only want to assign
334:47 - that proof reader to specific steps we
334:49 - can do so by clicking here if we had
334:52 - multiple proof reading steps for example
334:54 - multiple faces of people checking the
334:57 - translations we could assign them to the
334:59 - first step for example or the second
335:01 - step and we could choose this very
335:04 - granularly to restrict the permissions
335:07 - as needed that is very helpful as well
335:10 - in crowding that we have the granularity
335:12 - in the permissions to avoid any
335:14 - misunderstandings or anything that could
335:16 - happen when you're working with a team
335:17 - of
335:18 - volunteers great so we're going to
335:21 - remove this proof reader access for now
335:23 - and you can see that with the language
335:25 - coordinator is exactly the same language
335:27 - coordinators can manage people and teams
335:30 - of the selected languages so they have a
335:34 - higher level in the hierarchy than proof
335:36 - readers when it comes to their
335:38 - permissions in the platform because
335:40 - proof readers can translate and
335:42 - proofread the content but language
335:44 - coordinators can also manage people and
335:47 - teams of their selected Languages by
335:49 - default you will see all languages like
335:52 - with proof readers but you can disable
335:54 - this and select a specific
335:56 - language let's say that I want this
335:58 - contributor to be a language coordinator
336:00 - for Bengali Japanese and Spanish I can
336:03 - just select these three languages and
336:05 - now I see that I will send an invitation
336:08 - for these three
336:10 - languages and if I instead of sending an
336:13 - email I want to get a sharable link I
336:16 - can also get a sharable link I click
336:19 - here and then I get the sharable link I
336:23 - can see that it expires in one week and
336:25 - I can change when it will expire if one
336:28 - week is too much for me then I can set
336:30 - it the the expiration to one day or 1
336:33 - hour or if it's too little then I can
336:36 - set it to one month or I can set it to
336:39 - never expiring and just keep that
336:41 - invitation open as long as it needs to
336:43 - be if I click here on copy link I will
336:46 - be copying it to the H to the clipboard
336:49 - that's another way of sending the
336:51 - invitation this one will send the user
336:54 - an email with the invitation when you're
336:56 - ready and you have everything set up
336:59 - exactly like you want it to be you can
337:00 - send the invite you can invite multiple
337:03 - members at once you just need to add
337:06 - them here to the list and if you want to
337:08 - remove them you can just click on the X
337:10 - to remove them that's basically how you
337:13 - can invite people to your organization
337:15 - in crowding
337:17 - Enterprise when you're ready just click
337:19 - on invite I'm going to click here on
337:20 - Escape so we can go back to the project
337:23 - and again here we have our famous
337:25 - Integrations remember in crowding decom
337:28 - that we use the Google Drive integration
337:30 - well this works exactly the same in
337:31 - crowding Enterprise but here if you have
337:34 - the license for an open- source project
337:37 - and it educational project you will be
337:39 - able to add multiple Integrations that's
337:41 - basically the difference if you click
337:43 - here on add apps you will see the same
337:46 - basically the same view that we had
337:48 - before with all the applications from
337:50 - the crowding store there are hundreds
337:53 - stitches from and with a crowding
337:54 - Enterprise plan you can choose and
337:57 - install multiple Integrations at once
338:00 - here we also find reports because if
338:02 - you're going to manage an organization
338:04 - you will also need to view the reports
338:06 - and this
338:08 - reports H tab or this reports feature is
338:11 - different from the reports feature that
338:13 - we had here in the main workspace here
338:17 - remember that we also had reports in our
338:20 - main
338:21 - workspace this report is for the
338:24 - organization for the organization
338:26 - remember that we can have multiple
338:28 - projects per organization if we need to
338:31 - see a high level overview of the
338:33 - performance of our organization we can
338:35 - go here to the reports in our main
338:38 - workspace but if we need to check
338:40 - specific statistics about our project we
338:43 - go here to the reports tab or the report
338:46 - section of our project it's basically
338:49 - the same but the data will be specific
338:51 - for our project we can see the overview
338:55 - the the project size and we also get the
338:59 - Top members feature where we can have an
339:01 - export a report of our Top members which
339:04 - is always helpful to encourage your top
339:06 - contributors finally we can also see the
339:09 - activity here this is like a timeline of
339:12 - the changes or updates made to the
339:15 - project we see tools over here tools
339:18 - that you can work with like the crowding
339:20 - API the command line interface crowding
339:23 - and context and other helpful tools and
339:26 - here at the very bottom we find the
339:28 - settings you can customize a ton of
339:31 - settings there are many to choose from
339:33 - and customize like customizing the the
339:36 - Project logo project name you can also
339:39 - transfer ownership if you need to and
339:41 - you can delete your project but be very
339:44 - certain that you want to do this because
339:46 - it deleting the project at least cannot
339:48 - be
339:49 - undone you can also change the
339:52 - Privacy this is something very important
339:55 - this feature over here this is something
339:56 - that I really wanted to highlight
339:58 - because if you're planning to manage
339:59 - contributors and volunteers this will be
340:02 - helpful for you task based Access
340:04 - Control this means that your project
340:06 - member can work with tasks they are
340:09 - assigned to even if they do not have
340:11 - full access to the language basically
340:13 - what this does is that it allows you to
340:15 - create tasks and assign contributors to
340:18 - specific tasks without giving them
340:21 - access or full access to the language so
340:24 - they can work on the specific files they
340:27 - are working on they are assigned to but
340:29 - not on files they are not assigned to if
340:32 - you enable this that will limit
340:35 - contributors access to the overall
340:38 - project if you're translating for
340:40 - example articles for from your blog or
340:43 - you're translating specific parts of
340:45 - your website or your platform and you
340:47 - want to be able to assign contributors
340:50 - to specific files then you should enable
340:53 - this and create tasks and assign them to
340:56 - tasks this is something that we are
340:58 - adding to our workflow at free code camp
341:01 - and over here we see notifications you
341:02 - can enable notifications for translators
341:05 - when there are new strings to be trans
341:07 - ated you can notify project managers and
341:09 - developers about new strings and you can
341:12 - notify project managers and developers
341:14 - when a language has been completed when
341:16 - the translation or proof reading process
341:19 - have been completed that's always
341:21 - helpful you can change the source and
341:23 - Target languages you can also customize
341:26 - your quality assurance settings here you
341:29 - can disable but it will be enabled by
341:31 - default the QA checks they are always
341:34 - like helpful and you can change how many
341:38 - approvals are needed to clear the
341:40 - quality assurance checks one approval
341:43 - two approvals three four five approvals
341:46 - you have a maximum of five approvals in
341:49 - the quality assurance checks we can
341:50 - check for omissions translation length
341:52 - limit tax and basically everything we
341:55 - had in crowding decom as well and we can
341:58 - change if they errors or if they are
342:00 - warnings we can also set up custom
342:02 - quality assurance checks but we can add
342:05 - them in our organization settings if we
342:07 - want to add some custom quality
342:09 - assurance checks here we can also enable
342:13 - translation memories and customize them
342:16 - we can set up machine
342:18 - translations
342:20 - glossies we can customize settings for
342:23 - importing and exporting files I highly
342:26 - encourage you to go through these
342:27 - settings to know everything that you can
342:29 - customize in crowding including like the
342:31 - labels and this is a bit more advanced
342:33 - the parser configuration and finally
342:36 - file processor
342:38 - this has been a general overview of what
342:40 - you will find in your project when you
342:43 - start working on crowding Enterprise
342:46 - it's very similar to crowding decom but
342:49 - you will be working with an organization
342:51 - and you can manage contributors in a
342:53 - more efficient way you can manage your
342:54 - team members in a more efficient way and
342:57 - you will have additional tools like
342:59 - workflows and workflow templates and
343:02 - that's crowding
343:06 - Enterprise
343:09 - now let's talk about Visual Studio code
343:11 - and how you can use the croing extension
343:13 - for visual studio code to localize your
343:16 - web application or any application
343:19 - really because the extension works for
343:22 - basically all the types of files that
343:24 - are supported in crowding here we are in
343:26 - vial Studio code I have a folder named
343:29 - my app a very general name that is
343:33 - intentional because you can use this
343:35 - with any application and in inside my
343:37 - app folder I have the locals folder this
343:41 - is usually how you would structure a
343:43 - localization project somewhere in your
343:46 - project structure you would have a local
343:56 - folder where you would store the
343:59 - translations and the original strings of
344:01 - your project and that is what you would
344:03 - upload to crowding to translate in the
344:07 - translation management tool of your
344:09 - choice or the localization management
344:11 - tool inside local we have this folder
344:15 - Visual Studio code is just abbreviating
344:18 - this because I only have one folder
344:21 - inside that folder so it's like
344:23 - compacting it into the same line this is
344:27 - another folder named en n from English
344:31 - and this is where we will store the
344:32 - original strings in English inside that
344:36 - folder and I have a file called main.
344:39 - Json for this part of the of the course
344:44 - I'm going to assume that you are already
344:45 - familiar with Visual Studio code you
344:47 - already have it installed you already
344:49 - know how to create folders like this by
344:52 - right clicking here on the Explorer
344:54 - create new folder and you are familiar
344:57 - with the Json format if you're not
345:00 - familiar with this format a quick
345:01 - overview is that it's a lightweight
345:04 - format used to exchange data across the
345:06 - web it's very popular and it's also used
345:09 - for translation projects we will use it
345:11 - when we use the I8 Max framework when we
345:15 - actually translate a sample website
345:17 - which we will do in just a few minutes
345:20 - so here we're going to keep this example
345:22 - simple to show you how the extension
345:24 - works but of course you can apply
345:26 - everything you learn here in these next
345:28 - few minutes to Applications of any
345:30 - complexity I'm just going to show you
345:32 - the main functionality of the extension
345:35 - for our demo we're going to use the the
345:37 - main. Json file you can name this file
345:39 - whatever you want like messages or
345:42 - notifications and the content can be
345:44 - anything that it would be valid in Json
345:47 - format but the key thing about the Json
345:50 - format is that it's wrapped within curly
345:53 - brackets and within the curly brackets
345:55 - we have key value pairs the key is
345:58 - separated from the value with a colon
346:01 - and the pairs are separated from each
346:03 - other with a comma what you would
346:06 - usually do in an application is writing
346:08 - everything that appears in your
346:10 - application everything that the user can
346:12 - see here in Json files instead of your
346:15 - actual HTML
346:30 - files so it would be like avoiding
346:33 - hardcoded values you would keep
346:36 - everything in the Json files and you
346:39 - won't have one Json file per language so
346:42 - when the application loads or the user
346:44 - changes the language the correct
346:47 - translations will be applied and for
346:50 - that the keys that we have over here are
346:52 - essential these are the keys that we
346:54 - will be writing in our application to
346:57 - replace them with these strings in the
346:59 - corresponding language all the Json
347:02 - files that we're going to create in all
347:04 - the different languages will have the
347:06 - same keys
347:07 - so our application will know exactly
347:10 - what to look for in the corresponding
347:12 - language folder that's the basic
347:15 - principle of how we structure these
347:17 - localized applications we take
347:19 - everything out and instead we have it in
347:21 - the Json file and that is replaced
347:23 - automatically by our localization
347:25 - framework we will see that in just a
347:27 - moment in a practical example with a
347:29 - simple react application I'm just giving
347:32 - you a quick overview because that's how
347:34 - we're going to structure our project
347:36 - here for the the extension we can see
347:38 - the title welcome to Free code Cam and
347:40 - the mission is to help people learn to
347:43 - code for free we will be localizing
347:46 - these two strings and in theory they
347:49 - would be replaced automatically in the
347:51 - application right now we don't have any
347:53 - other files we're just focusing on the
347:54 - locals folder I will show you how you
347:57 - can upload these strings to your couting
348:00 - project and how you can download the
348:02 - translations directly within Visual
348:04 - Studio code with this extension
348:07 - to install the extension you just need
348:09 - to go here to the extensions option in
348:12 - the activity bar to the left and write
348:16 - crowding if you write crowding here and
348:18 - you click on crowding you will be able
348:21 - to click on this button to install it
348:24 - I'm installing it right now and you can
348:26 - also find more details here in the
348:28 - documentation of how to use it and how
348:30 - to set it up but I'm going to show you
348:31 - that step by step you could also go to
348:35 - the official GitHub repository for this
348:38 - extension crowding for vs code great so
348:41 - after we have it installed I can see now
348:44 - that it is installed I can go back to my
348:47 - Explorer and now I see this new Option
348:50 - this new icon here crowding let's see
348:53 - what we get we get three new panels in
348:56 - this tool we see upload we see download
349:00 - and we see progress yes we will be able
349:03 - to check the progress of the
349:05 - translations directly with within Visual
349:07 - Studio code so let's do that after you
349:10 - install the crowding extension you need
349:12 - to follow these steps because the
349:15 - crowding exential will add some commands
349:18 - that you can use from the command pallet
349:20 - first you need to sign in to crowding so
349:23 - we will open the command pallet with
349:25 - command shift p or control shift p on
349:28 - Windows notice here we have all of these
349:31 - new commands we have sign in select
349:34 - project focus on upload view Focus Fus
349:36 - on progress view focus on download View
349:39 - and create
349:40 - configuration so first of all we need to
349:43 - sign in I'm going to click on sign in
349:45 - and this says that the extension
349:46 - crowding wants to sign in using crowding
349:49 - so we're going to allow that do you want
349:51 - code to open the external website I'm
349:54 - going to open this and I want to
349:56 - continue the authorization request here
350:00 - I'm going to sign in again because the
350:03 - my sign in just expired so I'm going to
350:05 - sign in again
350:07 - I'm going to log in and then I see my
350:10 - authorization request for crowding dcom
350:13 - crowding for vs code requests additional
350:15 - permissions this application needs
350:17 - access to your projects it grants access
350:21 - to manage projects a user has access to
350:25 - so we're going to authorize the
350:26 - extension to do this for us and then
350:29 - we're asked if we want to open Visual
350:31 - Studio code. apppp then I click here on
350:35 - open it because I want to to open it and
350:38 - then we are going to accept allowing
350:41 - crowding extension to open this URI open
350:45 - and there we go we have the extension
350:47 - configured but we also need to create
350:49 - another configuration file and select
350:51 - the project that we are going to be
350:53 - synchronizing from our local files so
350:57 - first of all we need to create a project
350:59 - on crowding dcom I go to crowding decom
351:03 - I go to
351:05 - my main profile or dashboard and then
351:09 - I'm going to create a new project again
351:12 - I'm going to name this free code Cam vs
351:15 - code extension demo I'm going to name
351:17 - this it's going to be a very long name
351:19 - this but free code Cam vs code extension
351:30 - demo again it's going to be public
351:33 - because I'm on the free account so I
351:34 - can't create any more private projects
351:37 - The Source language will be English and
351:39 - the target language let's say that it's
351:42 - Spanish right now of course I can always
351:44 - add or modify the target languages but
351:47 - for now let's start with Spanish and I
351:50 - say create project project created
351:53 - successfully free goam vs code extension
351:56 - demo currently it's empty but now we can
352:00 - choose that project from vs code for our
352:04 - extension after we have that created on
352:06 - crowding oncom we go back to vs code and
352:11 - now we can run that command we open the
352:14 - command pallet again with command shift
352:17 - p we write crowding and then we select
352:20 - the project it's going to load our
352:23 - projects and here I have my three
352:25 - projects from my account I'm going to
352:27 - select this project free code Cam vs
352:29 - code extension demo crowding could not
352:31 - find a configuration file yes that's
352:34 - something that we are going to create
352:35 - right now
352:37 - and the project I can see this message
352:39 - it was selected successfully so now I
352:41 - can close These Warnings the
352:44 - configuration file is another thing that
352:46 - we have to generate first we sign in
352:48 - then we select the project and then we
352:50 - create our configuration file this will
352:52 - tell the crowding extension what files
352:55 - are our source files and where we want
352:58 - to store our translations so I'm going
353:00 - to open the command palet again yes
353:03 - there are a few commands and the third
353:05 - command that we are going to run is
353:07 - create configuration once the command
353:10 - runs the file will be automatically
353:13 - created crowding yml this is a
353:17 - configuration file we see a warning that
353:19 - the file source is empty in my app and
353:23 - that's true the source and translation
353:25 - Fields the keys are empty so we are
353:29 - going to change that in just a moment
353:31 - what is source and what is translation
353:34 - we will keep seeing that error or for
353:36 - the warning until we just remove this so
353:39 - I'm going to just add a letter here to
353:42 - avoid that warning great but we do need
353:45 - to write something meaningful there in
353:47 - source and translation Source will be
353:51 - the path to the files that we want to
353:54 - translate where are we storing our
353:57 - source strings our source language is
354:00 - English so where are we storing our
354:02 - source strings in English that would be
354:05 - main do Json here we have the keys and
354:09 - we have the corresponding strings in
354:11 - English so we have to write the path to
354:15 - this file how can we do that well we are
354:18 - in local then the en folder remember
354:22 - it's in English and then this is
354:25 - something very interesting that crowding
354:27 - supports we can use a wild card this
354:31 - asterisk match any file name that ends
354:35 - with do Json that's basically it we're
354:38 - not writing any specific name we're just
354:40 - matching any name that can be here
354:43 - within the E folder that's the path to
354:47 - our files and then for translation I'm
354:50 - going to do this we need to write the
354:53 - path to the location of our translated
354:57 - files but how can we customize this for
355:00 - every language let's say that we have
355:02 - multiple Target languages well crowding
355:05 - supports using placeholders for this so
355:08 - we can create a folder for Spanish with
355:11 - es and a folder for French with FR FR if
355:15 - we need to translate our files into
355:18 - multiple languages or for Italian that
355:21 - would be it or Japanese JP we can use
355:24 - the twetter codes with this placeholder
355:28 - two
355:30 - letters code like this the only
355:33 - important key aspect here the only key
355:36 - thing that you have to keep in mind is
355:38 - that you need to surround the
355:39 - placeholder with two percentage symbols
355:42 - that's what tells crowding that this is
355:44 - a placeholder and then we can assign the
355:48 - original file name with this placeholder
355:51 - as well so if the file name was main.
355:55 - Json this will also be named main. Json
355:58 - with this placeholder but it will be
356:00 - within its corresponding folder with the
356:03 - TW letters code if it's French it would
356:06 - be F FR and within F FR we would have
356:10 - the main. Json file with the French
356:13 - translations that's what's so powerful
356:15 - about this configuration file that you
356:18 - can do all of that with just one line
356:20 - using placeholders and this will also
356:23 - keep the Json extension we will see that
356:26 - in just a
356:27 - moment so now we have our configuration
356:30 - file we have our folder and now let's go
356:33 - to crowding to the tool the new tool
356:35 - that we just installed in the activity
356:37 - bar and voila here we have it we can see
356:41 - it in upload and download and we can
356:44 - also see the progress bar here like this
356:47 - so now we know that we signed in
356:49 - correctly and the configuration file was
356:52 - correct as well now before we do
356:55 - anything if we check crowding oncom we
356:58 - refresh the page we can see that we
357:00 - currently don't have any files to
357:02 - translate that's because we haven't
357:04 - actually uploaded any of our files files
357:06 - to do that we just need the
357:08 - configuration file that we just wrote
357:10 - and then we go here to upload and we
357:13 - have two options here we can refresh and
357:16 - we can upload all our source files this
357:19 - is very helpful when we are sure that we
357:21 - want to upload all the source files that
357:24 - we currently have in the path but if we
357:27 - don't want to do that and we want to
357:28 - select them individually we can just
357:30 - click on the Arrow next to them or we
357:33 - can upload the folders here we can also
357:36 - edit the configuration file if we click
357:38 - on the gear icon let's upload main. Json
357:42 - I'm going to click here to be more
357:43 - specific we see uploading file main.
357:46 - Json and after that if I check the the
357:52 - web version and I refresh this I should
357:56 - see yes I do see it it's here in the
358:01 - local folder English main. Json so I was
358:05 - able to to upload the file following the
358:08 - folder structure that I had in Visual
358:10 - Studio code I can then take that file
358:14 - and translate it to my target languages
358:18 - let's go from the sources tab where we
358:20 - are right now we're going to go to
358:22 - dashboard and we're going to translate
358:24 - the two strings into Spanish I click on
358:27 - Spanish then I click on this
358:30 - file double click on the file and then I
358:33 - see the two strings here that I can
358:34 - translate crowd is smart enough to know
358:38 - what parts of the Json file have to be
358:40 - translated it's not going to translate
358:42 - the keys it's going to translate the
358:44 - values so I'm going to translate this as
358:49 - BOS a free code Camp I'm going to save
358:52 - this and then I'm going to translate
358:56 - this
359:03 - string this would be the Spanish
359:05 - translation help people learn to code
359:07 - for
359:11 - free then I'm going to save this
359:15 - translation and you can see that the two
359:17 - strings are translated so now we
359:19 - finished translating the entire Json
359:22 - file if we go back to our dashboard into
359:26 - this Spanish section we see that the
359:29 - file is 100%
359:31 - translated so let's go back to our vs
359:36 - code project and now we can go to the
359:39 - download part we can also check the
359:42 - progress here in Spanish and we can see
359:44 - that if we refresh this sometimes you
359:47 - will need to refresh the progress tool
359:50 - to actually get the current progress you
359:53 - can see that previously it was Zero now
359:55 - it's 100 and only after I refreshed it
359:57 - it showed 100 so this has been 100%
360:01 - translated but 0% approved let's approve
360:05 - them just really quickly since I'm also
360:08 - a proof reader here I'm going to go to
360:11 - the string and I'm going to approve it
360:15 - and here I'm going to approve it too
360:18 - then I reach the end of the file they're
360:20 - all translated and approv and now if I
360:24 - go back to vs code and I refresh this I
360:27 - see that it's 100% translated and 100%
360:31 - approved the Spanish language so that's
360:34 - great and now I can download my source
360:36 - files in Spanish and this is the true
360:40 - test for the configuration file when I
360:43 - download these new files in Spanish they
360:46 - should be within their own es folder
360:49 - that they should it should keep the same
360:51 - Json file the same name but they should
360:53 - be translated and they should have the
360:56 - same keys and they should be within
360:59 - their own es folder so we're going to
361:02 - test that we can always change the
361:05 - configuration file if we need
361:17 - to but let's download them you can also
361:21 - resize these tools if you need to okay
361:23 - if we hover over the my app folder we
361:27 - see the option to download the project
361:30 - translations we see the option to
361:32 - download source files and we also see
361:34 - the option to edit the configuration
361:37 - that opens the this file the
361:39 - configuration file so we have a quick
361:42 - access to that file if we need
361:44 - it here if we click on Download Project
361:48 - translations let's see what happens
361:51 - downloading translations it might take a
361:53 - moment depending on your internet
361:55 - connection and the current state of the
361:58 - system but if you go next to the
362:02 - Explorer here it is here it is here it
362:04 - is here it is now we have two folders
362:08 - English and Es which is the twetter code
362:12 - for Spanish we have our folder now it's
362:16 - collapsed but if I expand it I see main.
362:19 - Json so we are keeping the same file
362:21 - name in the two folders and that's
362:23 - usually a convention that we use we keep
362:26 - the same file name but we keep them in
362:28 - different folders with their
362:30 - translations and then in Spanish if we
362:34 - open the file we see that they are
362:36 - keeping the same key title and Mission
362:40 - and we are only translating the string
362:42 - associated with that key these are the
362:45 - translations that we wrote and approved
362:48 - in crowding tocom in the online platform
362:51 - so you can see how this workflow can
362:54 - really save you time you just go there
362:56 - to crowding decom or your translators go
362:58 - there your team goes there your
363:01 - organization or the your community
363:04 - translates the files that you need and
363:06 - then you can synchronize them in Visual
363:09 - Studio code so it's very very helpful
363:12 - and it's basically automated because we
363:15 - are already defining our source files
363:18 - and our translation files and the
363:20 - location where we want our translations
363:22 - to be in this will use the standard
363:25 - two-letter codee for the language so if
363:27 - you have three or four languages you
363:29 - would have all of them here and you
363:31 - would have the main. Json file with the
363:33 - corresponding translations you can
363:36 - always repeat the process upload any new
363:39 - files download them and you can check
363:41 - the progress for every language how much
363:44 - it has been translated how much it has
363:46 - been approved awesome now you know how
363:48 - to work with the crowding extension for
363:52 - visual studio code it's really powerful
363:55 - again I encourage you to review this
363:57 - part of the course if you would like to
363:59 - continue working with it and install it
364:02 - if you haven't so far let's continue now
364:04 - we're going to start diving into a more
364:07 - realistic example of a react application
364:09 - it will be a simple application but we
364:12 - will be working with the IIT next
364:14 - localization framework and we will see
364:16 - how we can use this extension to
364:19 - translate the files and we will also use
364:21 - the GitHub integration so you can
364:23 - translate your repositories using
364:26 - crowding Integrations so let's
364:34 - continue
364:36 - congratulations on reaching this part of
364:38 - the course now you know the fundamentals
364:40 - of a localization process and you know
364:42 - the fundamentals of crowding for
364:44 - individuals and teams so now we're going
364:46 - to start the actual developer Focus part
364:50 - of the course we're going to translate a
364:53 - react app this very simple react app but
364:56 - you will learn the fundamentals of the
364:58 - i18 next framework for react called
365:02 - react IAT next we will use that frame
365:05 - work to create this simple app but we're
365:10 - going to be able to change the language
365:12 - like this we can go from English to
365:15 - Spanish and vice versa with this drop-
365:18 - down manual by just selecting the option
365:20 - we will be working with Json files and
365:22 - I'm going to show you how you can use
365:25 - the crowding extension for visual studio
365:27 - code to translate your Json files like
365:30 - we did before but now we are going to
365:32 - apply this to a react project so you
365:35 - will learn the fundamentals and of
365:36 - course you can apply these principles to
365:39 - Applications of any complexity and
365:42 - applications in different context like
365:44 - mobile development web development and
365:46 - other types of applications I kept this
365:49 - application simple on purpose
365:51 - intentionally because I want to focus on
365:53 - these fundamentals so let's begin if we
365:56 - go to visual studio code now we see the
365:59 - localized app folder this is where I'm
366:01 - going to create my react app with create
366:04 - react app you can also use V or any
366:07 - other tool that you can use to get the
366:10 - starter code for a simple react
366:12 - application to create that I'm going to
366:15 - use this terminal and I'm in my
366:17 - localized app folder and I'm going to
366:19 - run npx create react app and here
366:24 - instead of writing the name of the
366:27 - folder like my app like we have in the
366:29 - sample documentation I'm going to write
366:31 - a DOT that tells the command that I want
366:34 - to create the react app directly in the
366:36 - folder where I am currently located so
366:40 - I'm going to press enter and the process
366:45 - will start I'm going to assume here for
366:47 - this part of the course that you're
366:48 - already familiar with react we're going
366:51 - to make some changes to the main app
366:53 - component and then we're going to
366:55 - localize that specific component we are
366:58 - going to wait until all the packages are
367:01 - installed in case you would like to
367:02 - review the fundamentals of react we also
367:05 - have other courses on the channel I'm
367:07 - going to keep this app simple so the
367:09 - fundamentals of react should be enough
367:11 - if you know them this can take a while
367:13 - to reach the end so I'm going to speed
367:15 - things up a bit to start
367:21 - working and here we go we have our react
367:26 - up our starter react up with all the
367:28 - basic files and the folder structure if
367:30 - we check this with have we have all the
367:32 - files within the source folder we have
367:34 - the resources within the public folder
367:37 - we have our node modules the basic node
367:40 - modules we're going to install some to
367:43 - add support for the localization
367:45 - framework I8 next for react we also have
367:49 - a package.json file with all our
367:51 - dependencies and a readme file with the
367:54 - license for this um for this starter
367:57 - code the the project was bootstrap with
367:59 - create react app of course you can also
368:02 - use any other tool like V that's totally
368:05 - okay and the the principles that I'm
368:07 - going to show you here will still apply
368:09 - there so now I'm going to refresh my
368:11 - terminal and I'm going to start the
368:14 - application with mpm start and here I
368:17 - can see the the app that I'm getting by
368:20 - default with the starter code we're
368:22 - going to edit app.js and we're going to
368:25 - save that to get our new application
368:28 - we're going to build that step by step
368:30 - here we're also going to make some
368:32 - changes to the CSS file but we're going
368:34 - to do that really quickly because we
368:36 - want to focus on localization right so
368:39 - I'm going to hide my terminal for now
368:42 - hide it hide it for now great I'm in
368:46 - app.js what are the main changes that
368:48 - I'm going to make to this app to get the
368:51 - user interface that we are looking for
368:53 - first of all we need to change the logo
368:56 - we're going to use free code cams logo
368:58 - you can get that logo from free code
369:00 - Cam's official style guide I want to
369:03 - replace this react logo with the free C
369:06 - cam logo so I'm going to put it on the
369:08 - same path right now this logo is over
369:11 - here in the source folder so I'm going
369:13 - to put my free C cam logo here I'm going
369:16 - to drag and drop it I already had it in
369:19 - my folder in another folder in my file
369:21 - system so I'm going to use that I'm
369:24 - going to like basically swap the logo
369:26 - with this one I just need to change this
369:29 - path to FCC primary large instead of an
369:33 - SVG file it's a PNG G file logo over
369:37 - here and since I don't need this logo
369:39 - the react logo anymore I can just delet
369:43 - it it's an SVG file deleted you can keep
369:47 - it if you like but I'm not going to use
369:49 - it this is what the preview looks like
369:51 - it's just spinning over there so let's
369:54 - go to the CSS we're going to make it
369:57 - stop spinning by removing this last key
370:00 - frames from the CSS file and here in app
370:05 - logo we're going to assign it a height
370:08 - of 50 pixels and we're going to just
370:12 - remove all the animations for that logo
370:15 - like this so if we go back now we see
370:17 - the free cam logo in a more reasonable
370:20 - size you can of course customize this to
370:22 - your liking after that we want to edit
370:26 - the text so we're going to replace the
370:28 - link and the text we're going to replace
370:30 - all of this with an H1 text this will be
370:33 - welcome and then we are going to add
370:36 - four paragraph tags over here the text
370:40 - will be in English by default for now
370:42 - until we actually Implement localization
370:45 - then we are going to replace that with
370:46 - the corresponding keys but as a
370:50 - placeholder we're going to use the text
370:52 - build projects earn certifications learn
370:54 - to code for free build projects earn
370:56 - certifications that's the text that we
370:58 - actually have on the landing page at
371:00 - free code camp and then we are going to
371:03 - add a fourth paragraph tag
371:05 - this is just for demonstration purposes
371:08 - and it's going to say that the language
371:11 - is currently set to English this is
371:14 - going to change dynamically we're going
371:17 - to show this with a strong tag the
371:21 - strong tag is usually used for text that
371:23 - is more important and I think that is
371:26 - important because it highlights the
371:28 - language of the application the current
371:31 - language you can of course customize
371:33 - this I'm going to choose strong and then
371:35 - we will be replacing this by a variable
371:37 - using a hook a state hook the state will
371:40 - be the current language we're going to
371:42 - assign this ID to the paragraph language
371:46 - text so we can change its specific style
371:50 - and after that within the header tag
371:53 - we're still within the header we're
371:55 - going to add a select element this
371:57 - select element is going to be named
372:00 - language in a future iteration of this
372:04 - project you may want to separate this
372:06 - into multiple components I'm just
372:08 - keeping it simple so we can do all the
372:10 - localization here in the app component
372:12 - within the select element we have the
372:14 - option this option will have a specific
372:18 - value en n and this value will be
372:22 - essential this value is going to tell
372:25 - our entire application what language we
372:27 - have selected English then we have
372:32 - another
372:34 - option value Spanish and we're going to
372:37 - write all the options in English right
372:39 - now we could write espanol here which is
372:42 - Spanish in Spanish but I'm going to keep
372:45 - things simpler so they're all in English
372:47 - so everyone can understand them and then
372:50 - that's our select element so let's apply
372:53 - some Styles and then we're going to add
372:55 - the
372:56 - functionality but before we do that let
372:58 - me add a suspense element the suspense
373:01 - element is very helpful in react because
373:04 - it gives you a way to show something
373:06 - while these components or elements are
373:09 - being loaded in the application so it's
373:12 - just like a backup or a fallback in case
373:15 - this takes a moment to load and with
373:18 - translations that can happen if you are
373:20 - for example fetching them from an
373:22 - external API which crowding actually has
373:25 - you can fetch your translations from an
373:27 - API and that can take some time so if we
373:30 - fix the format here with command shift F
373:33 - or control shift f
373:35 - we get the code nicely formatted and you
373:39 - can see that suspense was already
373:42 - imported automatically from the react
373:45 - module let me just move this to the top
373:48 - great so after we have that let's add
373:51 - style because if we see the application
373:53 - right now it's very basic it doesn't
373:55 - have like any custom style but it's
373:57 - still there it's taking some interesting
374:00 - shapes let's go to app.css and here to
374:03 - save us some time I'm going to copy and
374:06 - paste so we can move faster but you can
374:10 - of course pause the video at any time if
374:13 - you would like to check these Styles and
374:15 - reproduce them yourself I'm also going
374:17 - to include them in the repository but
374:19 - I'm copy pasting them one by one to make
374:21 - sure that you can see them clearly and
374:24 - you can always pause to know what I'm
374:27 - doing or what I'm changing here here I'm
374:30 - going to change the background of the
374:33 - application to match free code cams
374:35 - style guide this is one of free code
374:36 - Cam's main colors we're going to keep
374:39 - all the other styles here we may not
374:41 - need them we may for now we're going to
374:43 - keep them maybe in the future we're
374:44 - going to remove them for now we're going
374:46 - to keep them and finally app link and we
374:49 - have this color great so that's our CSS
374:52 - file let me go back to control and now
374:55 - we can see the same style that we had in
374:57 - our application preview that's ready and
375:01 - we see the two options English and
375:03 - Spanish but right now this is not
375:06 - working because we haven't actually
375:08 - implemented anything in JavaScript yet
375:10 - in our jsx file so we're going to start
375:14 - doing that in just a moment let's dive
375:16 - in when we change this to Spanish these
375:19 - strings should be replaced by their
375:20 - corresponding Spanish translations and
375:23 - we will be translating them in crowding
375:26 - with the extension we will do that in
375:28 - the next part of the course so let's
375:33 - continue so let's start implementing the
375:37 - actual localization functionality
375:39 - because so far we've been just building
375:41 - this basic react up let's start with IAT
375:45 - next first of all how can you get IAT
375:47 - next because right now it's not
375:50 - installed it's not part of our
375:52 - dependencies we need to install it and
375:55 - add it to our package.json file we can
375:58 - do that with npm we just need to start a
376:02 - new terminal here that could be SE
376:05 - CSH and after that we will need to run
376:09 - npm install let's close the Explorer so
376:12 - you can see it here and mpm install I8
376:16 - next that will install the I8 next
376:19 - framework as a dependency we will
376:22 - actually install three different
376:24 - variations of this framework I8 next we
376:28 - will also
376:29 - install react I8
376:33 - next
376:37 - and then we will install I8 next HTTP
376:42 - back end this is based on nodejs and
376:46 - it's a way for the framework to send us
376:49 - the the localized versions of the files
376:53 - the translations as a Json in Json
376:55 - format through the server the local
376:58 - server that we will be running when the
377:01 - react application runs in the browser if
377:04 - we don't install this if we don't use
377:06 - this then we will not be able to preview
377:09 - those translations you can always choose
377:11 - a different back end and IAT next also
377:15 - has a documentation of the different
377:16 - backends it supports like you can call
377:19 - an API you can get the translations from
377:22 - an API you can also use other backend
377:25 - calls so you can use different backend
377:27 - approaches for now we're going to work
377:29 - with local Json files to keep things
377:32 - simple so again we press enter we're
377:34 - going to to install it and there we have
377:37 - it we can kill that terminal now but we
377:41 - have to keep this terminal alive if we
377:43 - want to keep the react application
377:44 - running we close the terminal in the X
377:47 - and again if we go to the Explorer to
377:49 - the package.json file now we see that we
377:52 - have I8 next I8 next HTTP backend as
377:56 - dependencies and we also see react I8
378:00 - next so we will be working with the
378:02 - three of them right now after we have
378:04 - them as dependencies we will need to
378:09 - import them we go to app.js and we're
378:12 - going to import specifically i8n from
378:17 - i18 next we're also going to import
378:22 - HTTP backend
378:26 - from I8 next HTTP backend we see that
378:30 - it's Auto completing so that's really
378:32 - helpful and then we're going to import
378:35 - two things actually from
378:39 - react I8 next you can see that we are
378:43 - using these three dependencies we're
378:45 - importing iatn we're importing HTTP back
378:49 - end and we are importing two elements
378:52 - here that we will be using I promise you
378:55 - we are going to add them that will be
378:57 - initial react I8 next and use
379:01 - translation this will be like a hook to
379:03 - use the translation
379:05 - where we need to we're going to use this
379:08 - to replace the hardcoded strings
379:10 - directly within the jsx elements if you
379:13 - want you can divide these import
379:15 - statements into a different like block
379:18 - because they're all related to
379:19 - localization that really depends on your
379:22 - personal style and the guidelines that
379:24 - you're following for your team and to
379:26 - finish off our import statements we're
379:28 - also going to use use state so we're
379:31 - going to import it here this is a normal
379:33 - Hook from react
379:35 - great so let's we can of course readjust
379:39 - these import statements as we need to if
379:41 - we want to group them for now we're
379:43 - going to keep them all together and then
379:46 - before the app component we have to set
379:49 - up the
379:50 - localization how are we going to do that
379:53 - we're going to use the
379:55 - iatn object that we have here that we
379:58 - imported from IAT next and we're going
380:01 - to call a few methods on this we're
380:04 - going to make it use the HTTP back end
380:08 - we're also going to use init react I8
380:13 - next and we're going to initialize this
380:16 - to a few options within in it we have
380:20 - the curly brackets this is going to be
380:22 - an object with different options first
380:25 - we have a fallback language this is the
380:28 - fallback language in case the the user
380:31 - of the application selects a language
380:33 - that is not available or we don't have
380:35 - the translations if anything happens we
380:37 - will fall back into English and we also
380:40 - configure the back end where are we
380:43 - going to load these translation files
380:45 - from where are we going to take them
380:47 - well they're going to be available at a
380:49 - specific path remember the path that we
380:52 - saw in the previous section when we
380:54 - started talking about the extension in a
380:57 - folder named locals and then a folder
381:01 - for that particular language like this
381:03 - would be e n for English or ES s for
381:07 - Spanish JP for Japanese and for that for
381:10 - replacing that particular language here
381:12 - as a placeholder we use these double
381:15 - curly brackets that's a standard in IAT
381:18 - next the twet code and then we are going
381:22 - to store them in a file named main. Json
381:25 - we need to set that up in our file
381:27 - structure but for now we are configuring
381:29 - it in our Javascript file so now we have
381:32 - our back end set up we have everything
381:34 - set up we're using HTTP backend we're
381:37 - using react IAT next we have our
381:39 - fallback language and we are setting up
381:42 - our back end where are we going to look
381:44 - for those files that we want to serve
381:46 - with the local server we have everything
381:48 - ready to start actually working on the
381:50 - app and replacing those strings like
381:53 - this first we're going to set up our
381:57 - event our goal is that when the user
382:00 - clicks on one of these options from the
382:02 - drop- down menu when there is a change
382:05 - we want the entire translation to be
382:08 - replaced right the all the strings so we
382:10 - need to listen to that change we need to
382:13 - have an event listener we're going to
382:15 - add that to the select element on change
382:19 - that's the event and how are we going to
382:22 - handle that with the onchange
382:32 - function we Define the on change
382:35 - function over here within the app
382:38 - component const on change and here we
382:42 - have it we are going to use an arrow
382:43 - function for this this would be the
382:46 - event the parameter we can also call
382:48 - this e it's a a normal standard I'm
382:51 - going to call this event and just to
382:53 - test this I'm going to print this value
382:57 - the event has a Target that is the the
383:01 - the drop- down menu the element and the
383:04 - target has a value that value will be
383:07 - the value of the option that we are
383:09 - currently selecting so if we select
383:12 - Spanish the value will be es the value
383:16 - that we are setting over here that's the
383:18 - value that we are going to get from that
383:20 - event from the target if we select
383:23 - English we're going to get En n and that
383:26 - will be fundamental here to handle the
383:29 - change so let's test this and see if it
383:32 - works let's see if it works
383:34 - here we are in Chrome I just have it
383:37 - full screen so that's why this is still
383:40 - the browser if we right click and we
383:42 - click on inspect we can see the console
383:45 - and let's change this to English now we
383:47 - see e n if we change this to Spanish we
383:51 - see es s so it is working we are
383:54 - reacting to that event but how are we
383:57 - going to actually handle the event
384:00 - because we don't just want to print this
384:03 - value we want to do something with
384:05 - it when we change the language we want
384:08 - two things to happen we want the
384:10 - localization framework to know that the
384:12 - language was changed and we also want to
384:15 - update the language over here remember
384:18 - that this is still hardcoded it's still
384:20 - a fixed part of the string we want this
384:22 - to be dynamic and be replaced by the
384:25 - language so I'm going to take a
384:29 - relatively simple approach here you
384:30 - could also increase that the complexity
384:34 - and multiple languages but since we only
384:36 - support two languages right now I'm
384:38 - going to use a tary
384:41 - operator to change the language in the
384:44 - IAT n Frameworks to know that we have to
384:47 - load the new translations we call the
384:50 - change language method on iatn this is
384:53 - the same object that we imported here
384:55 - from I8 next then we call change
384:58 - language and then we pass as the
385:01 - argument the value that would be
385:05 - or ES or the the the value that we are
385:08 - setting for that option that is the
385:11 - twetter code for that language that will
385:14 - handle that from the framework side but
385:16 - we also need to change this value over
385:19 - here English we want to set it to
385:22 - English or Spanish and we're going to
385:24 - use a state hook over here to do that so
385:28 - we're handling both the framework and
385:30 - the text update simultaneously if you're
385:33 - familiar with hooks you know the Stak
385:35 - hook we have let's say language this
385:38 - would be our state set language and with
385:41 - the used State hook we're going to set
385:44 - English by default we can set the
385:47 - language over here so
385:50 - language and then if we have that state
385:53 - we can replace it over here instead of
385:56 - just writing English we can replace this
385:59 - with Language by wrapping it with curly
386:02 - braces next the next thing that we need
386:05 - to do is that on when there is a change
386:08 - we just update the language and we're
386:11 - going to do that in a very simplistic
386:14 - way for this uh purp for this tutorial
386:17 - we're going to just call set language
386:20 - and we're going to take the previous
386:22 - language that we had in the previous
386:24 - state and then we're going to check if
386:27 - it's English if the language was English
386:30 - then we are going to change that to
386:32 - Spanish if not not we're going to just
386:35 - keep English so that's our approach of
386:38 - course if you're supporting more than
386:39 - two languages you may need to to use a
386:42 - different approach but for Simplicity
386:44 - purposes since we're actually focusing
386:46 - on the framework I'm going to update
386:48 - this in a simple way so how are we
386:51 - handling this right now well you can see
386:53 - this working if we change this to
386:56 - Spanish this changed to Spanish if we
386:58 - Chang this to English this changed to
387:00 - English so we are handling that change
387:03 - appropriately but we don't see that
387:05 - these strings are changing in any way
387:08 - for that we are going to replace the
387:11 - text that we have over here because if
387:14 - we just write the text directly in the
387:17 - component the text will never be
387:19 - modified it won't be dynamic we need to
387:22 - change that to something that can change
387:24 - when the framework detects that the
387:27 - language has been updated to do that we
387:30 - just need to add a hook over here we
387:34 - need to have access to a hook named T
387:37 - usually the name is T and we're going to
387:40 - get that from used translation remember
387:43 - that we imported used translation from
387:46 - this react IAT next we're going to use
387:50 - this use translation to get the T hook
387:53 - and then we're going to use T this will
387:56 - be essential this one letter identifier
388:00 - here is going to make all the magic come
388:02 - true because we're going to replace
388:04 - these strings with something that we're
388:07 - going to get from the te and for that we
388:09 - need to set the Json file up first we
388:13 - want to remove these hardcoded strings
388:16 - from our Javascript file so for that we
388:19 - need to start creating our Json file and
388:22 - get all the English strings or the
388:23 - source strings over there usually you
388:26 - will find the locals folder like we have
388:30 - over here in the public
388:33 - folder
388:38 - so we create a new folder we name it
388:42 - local and then within local we create a
388:44 - new folder named I for the English
388:48 - strings within the English strings we
388:50 - create a new file make sure that you're
388:52 - clicking here on en instead of locals
388:54 - because the file has to be here in EN
388:57 - and we're going to name this main. Json
389:00 - you could choose a different name but
389:01 - I'm going to name this main so we have
389:03 - all the main strings over here make sure
389:06 - that it's within n here and then within
389:09 - main. Json we're going to Define our
389:13 - Json file with the key value pairs let's
389:16 - say that we want the key to be welcome
389:18 - here welcome and then we want the first
389:22 - line to be the key the key doesn't
389:26 - necessarily have to be exactly the same
389:28 - as a string okay it's just like a way to
389:31 - identify that particular string so this
389:34 - could be name and this would be the name
389:36 - or this could be address and this could
389:38 - be the address it it doesn't really have
389:41 - to be exactly the same text itself it's
389:43 - a way to identify that string across the
389:46 - different languages remember that the
389:48 - keys will be shared across the Json
389:51 - files in all the languages so they will
389:55 - stay in the language they were written
389:57 - in they will say in English this would
390:00 - be the first line of the text that we
390:02 - want to show this would be the second
390:05 - line we need to separate them with a
390:07 - comma and this would be the third line
390:11 - these are the keys they could be more
390:12 - specific but I'm just writing them like
390:15 - this first line Second Line third line
390:17 - for Simplicity purposes you can of
390:19 - course make them more descriptive so now
390:21 - that we have them in the Json file we
390:24 - can remove these hardcoded these fixed
390:27 - strings from our app.js file instead of
390:31 - just writing welcome here we can make
390:34 - this Dynamic by wrapping it with curly
390:37 - brackets and then calling T within
390:41 - parentheses we pass welcome as the
390:45 - argument this is the key of the string
390:48 - that we want to replace over here this
390:50 - is this value welcome welcome it's the
390:54 - key and that will tell the app our app
390:58 - that we want to use the string that
391:00 - corresponds to this key in whatever
391:03 - language we currently have selected
391:05 - that's what we are configuring here
391:06 - we're making this Dynamic but since the
391:08 - key is shared across all the different
391:11 - Json files in every language this is a
391:15 - fixed value that we can use in our app
391:18 - and we will still be dynamic then we're
391:21 - going to do exactly the same thing for
391:24 - the next component but now instead of
391:26 - welcome what do we want to replace here
391:30 - this string the key for that string is
391:32 - first line so we are replacing it over
391:35 - here then we do exactly the same but now
391:37 - we have second line and then third
391:42 - line this could be more descriptive if
391:44 - you're working on a more complex
391:46 - application I'm just keeping things
391:47 - simple here because we only have three
391:50 - lines like this and how will the
391:53 - framework know when the language was
391:55 - changed and what language it has to
391:57 - select for this particular Key Well it
392:00 - knows because here we are calling change
392:03 - language
392:04 - and this will be the two-letter code for
392:07 - that language so it knows that it has to
392:09 - look in that particular folder and get
392:12 - the corresponding Json file that's how
392:15 - we set things up over here when we are
392:17 - defining the local path it will look
392:19 - within the language folder for the file
392:22 - named main. Json if we check the
392:25 - application we should see the strings
392:27 - replaced voila now we don't have any
392:31 - hardcoded strings let's see this in our
392:35 - application let me close the Explorer
392:37 - right now we don't have any strings over
392:40 - here this final paragraph We are going
392:42 - to keep it this way because it's
392:44 - updating automatically it's in English
392:47 - so it helps us to keep track of the
392:49 - current language if we don't actually
392:51 - know the text so I don't know it's just
392:53 - I think a a small little detail that I
392:55 - would like to include or keep this in
392:57 - the demo so if you want to translate
393:00 - everything you can also take the
393:02 - challenge of localizing this as well but
393:05 - these four lines that we are focused on
393:08 - are being replaced automatically but if
393:11 - we change this to Spanish we see that
393:13 - nothing happens right that's because we
393:17 - don't actually have a Json file for the
393:20 - Spanish local we only have the English
393:23 - folder so how can we actually create the
393:27 - Spanish folder and translate that in
393:29 - crowding let me show you that let me
393:32 - show you this if we go to the crowding
393:36 - extension we see welcome back Stephania
393:39 - demo that's because I'm already signed
393:40 - into my account you will see this
393:42 - message if you're already signed in if
393:45 - you're not signed in remember that you
393:46 - can go to the command palet search for
393:49 - crowding and you can click a sign in you
393:52 - will have a sign in Command right now I
393:54 - have a sign out command and it's helpful
393:57 - to know this too that you can sign out
393:59 - anytime you like and then of course you
394:01 - can create a configuration file as well
394:04 - so for now we're going to create a
394:07 - configuration file create configuration
394:10 - the file is added over here to our react
394:14 - app structure at the root of the project
394:17 - and here we need to configure source and
394:19 - translation how are we going to
394:21 - configure that where are our source
394:24 - files the files that we want to
394:26 - translate we already extracted all the
394:28 - strings into our Json file and that's
394:32 - where our source string
394:34 - live that's the source
394:36 - language so we have to write the path to
394:38 - our source that would be locals then en
394:42 - n and then Main dojon and then the
394:47 - translations would be a bit different
394:50 - they would be similar to the path that
394:51 - we wrote previously locals then we would
394:55 - use the placeholder of two letter two
394:58 - letters code now you can see why the
395:00 - placeholder is very helpful especially
395:01 - for react this will create the folders
395:04 - dynamically like we had before when we
395:07 - installed the extension remember and
395:09 - then we're going to keep the original
395:11 - file name with this placeholder like
395:14 - this so we have our source and we have
395:16 - our translation we should double check
395:19 - these paths and they look okay if we
395:22 - have to make any adjustments we can make
395:23 - them afterwards and then since we need a
395:27 - project on crowding let's go to crowding
395:30 - let's go to crowding I'm going to log in
395:33 - again because I spent too much time
395:36 - outside of the platform so I was not
395:38 - locked in great so I'm back here and I
395:41 - want to create a new project this will
395:43 - be of course a public project we're
395:45 - going to name this free cam react public
395:48 - project The Source language is English
395:51 - and the target language right now will
395:53 - be Spanish we can add them later on
395:56 - create
395:57 - project and I don't have any sources but
396:00 - remember that we can upload them we do
396:02 - have the target language in Spanish but
396:04 - now I can select my project in VSS code
396:07 - I have my configuration file ready and I
396:10 - can open the command palet with command
396:12 - shift p then go to crowding select
396:15 - project it's going to load all my
396:18 - projects I'm going to select Freo can
396:20 - react like this and then uh voila here I
396:25 - have the files that I can upload the
396:27 - files that I can download and my
396:29 - progress right now it's 0% because I
396:31 - haven't uploaded anything but I can
396:34 - upload my files over
396:36 - here I'm going to change this to the
396:39 - asterisk asterisk Json if we only write
396:42 - locals here it's not going to work
396:45 - because it's within the public folder so
396:48 - I'm going to write public over here and
396:53 - now you can see that it is being
396:55 - displayed so I see public then I see
396:57 - locals and I see
397:00 - English and then I find my main doj Json
397:03 - file that's the Json file with the
397:06 - strings that I want to translate so
397:09 - let's upload the file upload source file
397:13 - remember that I'm already signed into my
397:15 - account uploading file main. Json once
397:19 - the process is completed if I refresh
397:22 - the browser I can see this in the
397:25 - sources tab I do have a public folder
397:29 - with the English folder and main. Json I
397:32 - can change this settings of that file
397:34 - within crowding and it can start
397:36 - translating Spanish then if I translate
397:40 - let's say welcome benos I'm going to
397:43 - save this translation this will
397:47 - bear then this will be conr Pro and then
397:51 - this will be obtain certific this is the
397:55 - the text that we have on the main free
397:57 - Cod cam landing page then I'm going to
398:00 - approve these strings just for
398:02 - demonstration purposes so we can
398:04 - download them to vs code like this and I
398:07 - reach the end of the file so I have it
398:10 - 100% translated and
398:12 - approve you can see it here if we go
398:15 - back to visual studio code now we can
398:18 - download the translations by clicking on
398:20 - this Arrow here we will also need to add
398:23 - public before the Local's folder to
398:25 - actually reach that path we need to
398:27 - write like the full path to that
398:32 - folder
398:38 - public locals and that's when we can
398:41 - actually download our files we can click
398:44 - here Download Project translations it's
398:47 - going to download the translations and
398:50 - after that if we refresh this you should
398:53 - have something like this in locals you
398:56 - see English and you see Spanish and
398:59 - inside Spanish you can see this Main doj
399:03 - on file we have the same keys but the
399:06 - strings are translated and we translated
399:09 - them on crowding decom and we did all of
399:12 - that through the crowding extension and
399:15 - of course we had to go to the online
399:17 - editor but it's super easy to
399:19 - synchronize your localized files with
399:22 - your local project the local folder can
399:25 - be inside the public folder or it can be
399:27 - inside the source folder it really
399:29 - depends on your personal preference the
399:32 - public folder is for files it should be
399:34 - available anywhere like the the Fab icon
399:37 - or any Json
399:39 - files some developers prefer to keep the
399:42 - local folder inside the source folder so
399:45 - it's really up to you but you just need
399:47 - to update the paths to reflect that
399:49 - change great so now we have the Spanish
399:52 - translations and we have the
399:54 - keys now if we go to our application and
399:58 - we change the language to Spanish here
400:01 - we can see that translated strings they
400:04 - are replaced automatically when we
400:06 - change the language with our method in
400:09 - the app component we see that the
400:11 - language is currently set to Spanish and
400:13 - then if we change that to English we see
400:15 - all the strings in English again those
400:17 - are the fundamentals of how you can use
400:19 - the IAT next framework for react and
400:22 - crowding to set up your translation
400:24 - workflow as a developer this is very
400:27 - helpful and you can also automate this
400:30 - further with other Integrations that can
400:32 - help you to automate the process even
400:34 - further but these are the fundamentals
400:36 - so great work you're taking big steps
400:39 - into this world of localization if you
400:42 - want to add any other languages Beyond
400:45 - these two you would need to change the
400:48 - logic of the app.js component of course
400:51 - because here we're only handling two
400:53 - languages to update the text and if you
400:56 - want to have more languages you would
400:58 - have to add more options here in the
401:00 - drop- down menu each one with it some
401:03 - particular value it's twet code the
401:06 - standard code and then you will also
401:10 - need to have a main. Json file for each
401:14 - language you will need to translate that
401:16 - in crowding add them as Target languages
401:19 - translate them and then download the
401:28 - translations awesome now that you know
401:30 - how to translate your application or
401:34 - website in vs code with a crowding
401:37 - extension for vs code we're going to
401:39 - start diving into the GitHub extension
401:42 - because this is a way to keep crowding
401:44 - and your GitHub repository synchronized
401:47 - if you're planning to host your project
401:49 - on GitHub it's like a way to automate
401:51 - the process it will make it so much
401:53 - easier let's go to crowding dcom to my
401:56 - profile and I'm going to create a
401:58 - project of course this will be a public
402:00 - project because I am in my free account
402:03 - so free Cod cam GitHub this will be the
402:06 - name of my project free Cod cam GitHub
402:09 - we're going to test the GitHub
402:11 - integration to see how it works this is
402:13 - a new option that crowding added from my
402:16 - previous the previous parts of the
402:18 - course they're constantly adding new
402:19 - features and things that you will see in
402:22 - in the platform compared to when I
402:24 - recorded them of course so don't be
402:26 - surprised if you see anything marked as
402:27 - new you can also enable string based
402:30 - project but right now we're not going to
402:32 - work with with that the source language
402:35 - will be English and the target language
402:37 - let's select Spanish for now let's also
402:42 - select Japanese and Italian just as an
402:47 - example just to select a few of them
402:49 - let's create the project project created
402:53 - successfully free code cam get home and
402:55 - right now we don't have any projects to
402:57 - translate that's intentional because
402:59 - we're going to import them through an
403:01 - integration we're going to to add an
403:03 - integration remember that with the free
403:05 - plan you can only have one integration
403:07 - at a time and the integration that we're
403:09 - looking for is the ghub integration we
403:12 - click on it and we install it this
403:15 - application will have access to your
403:18 - projects and it will be displayed in the
403:20 - project menu Integrations GitHub the
403:23 - users that will be able to use the app
403:25 - will be only me you can also customize
403:29 - this to fit your needs select the
403:30 - projects where users will be able to use
403:32 - the app projects you own or selected
403:35 - projects I'm going to choose selected
403:37 - projects and only on free code cam
403:39 - GitHub I'm going to restrict the app to
403:41 - only work on free code cam GitHub so I'm
403:45 - going to install it and I see that it
403:48 - was successfully installed I can also
403:50 - uninstall it but for now let's close
403:53 - this and if I refresh the page now I see
403:55 - the GitHub integration here and I need
403:58 - to set up the integration to set it up I
404:01 - need to click here on on setup
404:04 - integration there are two different
404:06 - modes for this source and translation
404:08 - files mode and Target file bundles mode
404:12 - this is actually new and we can find
404:14 - more information about this it says that
404:17 - it exports sets of strings in one of the
404:20 - selected formats if we go to this
404:22 - article in the crowding knowledge base
404:24 - GitHub integration file based we will
404:27 - see the specific description for these
404:30 - two file modes for the source and
404:32 - translation files mode this will
404:34 - synchronize source and translation files
404:37 - between your GitHub repository and the
404:39 - crowding project this is what you'll use
404:41 - most of the time and they also have
404:43 - another Mode called Target file bundles
404:46 - mode this will generate and push
404:49 - translation files to your GitHub
404:50 - repository from the crowding project in
404:53 - the selected format in this mode the
404:56 - integration pushes translation files and
404:59 - doesn't sync sources from your
405:01 - Repository in cases when you perform a
405:05 - source text review in your crowding
405:07 - project and you want to get updated
405:09 - Source text to your repository you can
405:11 - add a source language as a target
405:13 - language which will be pushed to your
405:15 - repo along with translations this is a
405:18 - quick overview of what the crowding team
405:21 - explains about these modes but I highly
405:23 - recommend going here to their knowledge
405:25 - base to the GitHub integration article
405:28 - to learn more about them for now we're
405:30 - going to stay with the traditional mode
405:32 - here here I have my GitHub account I am
405:35 - going to authorize crowding you will
405:36 - need to do exactly the same you should
405:39 - read the permissions very carefully you
405:41 - will be granting access to your public
405:43 - and private repositories including your
405:46 - code issues pool requests weeky settings
405:49 - web Hooks and services deploy keys and
405:51 - collaboration invites the repos scope
405:54 - also grants access to manage
405:56 - organization attributes and organization
405:59 - owned resources including projects
406:01 - invitations team memberships and web
406:04 - hooks so I am going to authorize
406:07 - crowding
406:08 - here and use my authentication
406:13 - code now I'm being redirected and I can
406:17 - see the GitHub integration I will select
406:20 - my account over here then the repository
406:24 - the repository that I will be working
406:27 - with is localization GitHub integration
406:29 - after I select the repository I have
406:32 - different options that I can customize
406:34 - select branches for translation I only
406:38 - have a main branch right now so I'm
406:39 - going to select that and this service
406:42 - Branch name just means the name of the
406:45 - branch that will be created when
406:47 - crowding pushes the translation crowding
406:50 - will create a pool request with the
406:52 - updated translations with a new Branch
406:54 - so you can check the translations before
406:56 - you actually merge them this is ready
406:59 - but you can also change the branch
407:02 - configuration
407:03 - in the project we see that this is
407:05 - already because we already had a
407:07 - crowding do yamu file in the repository
407:10 - this is basically the the react app that
407:12 - we worked with in the previous example
407:15 - with the visual studio code extension I
407:17 - removed the Spanish translations but I
407:19 - kept the crowding yamu file so that was
407:21 - already configured if I click on this
407:24 - the pen I can see the source and the
407:27 - translation paths they're exactly the
407:30 - same as we had before we have public
407:33 - locals English and then the wild card.
407:37 - Json we can also change this to main.
407:40 - Json if we don't have this yamu file
407:44 - already created in the project we will
407:45 - be able to create it by customizing this
407:48 - path and we can preview the source files
407:51 - here we have we see that it's in public
407:53 - local English and then main. Json and
407:57 - then for the translated files where we
407:59 - want to store our translations we're
408:02 - going to store them in public locals
408:05 - then the two letters code and then the
408:07 - original file name here we have public
408:10 - locals and this would give us a preview
408:13 - of how we're going to store the
408:15 - translated files in our project
408:17 - structure this would be Spanish main.
408:19 - Json Italian main. Json and Japanese
408:22 - main. Json so this is very helpful to
408:25 - work with different
408:27 - placeholders if you click on this eye
408:29 - over here you can see a list of
408:30 - placeholders that you can use to set a
408:33 - translated file path and a name like
408:37 - this we have the original file name the
408:39 - original path the file extension file
408:42 - name language two letters code three
408:45 - letters code the local local with
408:49 - uncore Android code OSX code and OSX low
408:53 - count I encourage you to dive deeper
408:56 - into this placeholders because they are
408:58 - helpful to customize where you're going
408:59 - to store the translated files you can
409:02 - also select multilingual
409:04 - files so then we are going to save this
409:08 - and we can add a file filter this is a
409:11 - more advanced function we see that the
409:13 - configuration will be saved as crowding
409:15 - doyo file in the main branch so we save
409:18 - this and then we find more settings this
409:22 - setting will help you to deal with
409:24 - branches efficiently to set how you're
409:28 - going to handle duplicate strings across
409:30 - different branches because you may have
409:32 - the same keys and the same localization
409:35 - files the same source files in different
409:38 - branches how are you going to handle
409:40 - those duplicate strings you have many
409:42 - different options you can show them and
409:45 - translate each instance separately you
409:47 - can hike them you can share the same
409:51 - translation across all the duplicates
409:53 - it's really up to you what you do with
409:55 - these options but for now I'm going to
409:57 - keep the default so translators will
409:59 - translate each instance separately then
410:02 - I see these options over here I see
410:04 - onetime translation import after the
410:06 - branch is
410:08 - connected I can choose to always import
410:11 - new translations from the repository
410:14 - these two settings over here are related
410:16 - to how we are going to import our source
410:18 - files by default we see that we're going
410:21 - to have a onetime translation import
410:23 - after the branch is connected when we
410:25 - connect it right now we click on Save
410:28 - we're going to import our source files
410:30 - we can also push changes any changes
410:33 - made to the source files on crowding
410:35 - back to your repository if you make any
410:37 - changes to the original Source strings
410:40 - you can also push those changes back to
410:42 - your repository automatically but by
410:44 - default this is disabled because you
410:46 - will be changing the content of your
410:48 - repository and that's not always what we
410:51 - need and this is very very helpful for
410:55 - automating the process of synchronizing
410:57 - crowding with your GitHub repository
411:00 - this is the sync schedule it will set
411:02 - the frequency for pushing sources and
411:05 - translations to the repository 1 Hour 3
411:08 - hours 6 hours 12 hours or 24 hours you
411:13 - can set your synchronization schedule
411:15 - the source files changes made on the
411:17 - repo will be synced with crowding
411:20 - continuously to reduce the number of the
411:23 - the pipelines configure the commit
411:25 - message parameter in the configuration
411:27 - file this is a bit more advanced beyond
411:30 - the scope of the course but you may dive
411:32 - deeper into this article if you click
411:34 - here on learn more and you can choose
411:36 - which branches you want to synchronize
411:39 - automatically and the default
411:41 - configuration file configuration file
411:43 - name for automatically synchronized
411:45 - branches if it's not defined then the
411:47 - crowding doyo configuration file is
411:50 - expected in the branch we do have that
411:53 - configuration file in our main branch so
411:55 - for now we're not going to customize
411:58 - this we're going to set our
412:00 - synchronization schedule to 1 hour which
412:02 - is is the default so we're going to
412:04 - click on Save over here and what this
412:07 - will do is it will start to synchronize
412:09 - the source files to crowding and it will
412:12 - show us the status it has been
412:16 - synchronized with our main branch we can
412:19 - pause the synchronization process we can
412:21 - edit this or delete the integration we
412:23 - can sync our repository right now
412:26 - manually by clicking on this button and
412:28 - we can sync our translations back to
412:30 - crowding if we already have some
412:33 - pre-existing translations if we click
412:35 - here on the data for that particular
412:37 - Branch we see that it's when it was last
412:40 - synchronize the status and we can
412:42 - synchronize that particular Branch
412:44 - synchronize translations to crowding or
412:46 - we can change the branch
412:48 - configuration we can also see any issues
412:50 - that may arise when crowding tries to
412:52 - synchronize the
412:54 - translations now let's see what happened
412:56 - with our project because so far we're
412:58 - just configuring the integration but we
413:00 - can see that it was successful so if we
413:02 - go to our dashboard and we check our
413:05 - Target languages now we do see the main.
413:09 - Json file over here you can see this in
413:12 - the sources tab two if we go to main
413:15 - because we're in the main branch and we
413:17 - go to local English we see main. Json
413:21 - that is awesome right and what happens
413:24 - if we go to a specific language like
413:28 - Spanish and let's say that we are going
413:31 - to translate a few strings we have four
413:33 - strings over here welcome let's
413:36 - translate this and save it let's
413:39 - translate a few strings and then we're
413:40 - going to synchronize the translations
413:42 - back to the GitHub repository bidos yes
413:47 - I'm going to approve this learn to code
413:49 - for free build projects earn
413:52 - certifications I'm going to approve all
413:54 - of these translations and then I'm going
413:57 - to synchronize these translations with
414:00 - my GitHub repository to see what happens
414:03 - here I am in my GitHub repository and I
414:05 - can see that in my GitHub repository
414:07 - crowding already created this Branch the
414:10 - internationalization main branch like
414:13 - this this branch is three commits ahead
414:16 - of Maine and I can see that some new
414:18 - commits were created if I go to my
414:22 - commits over here I can see that I have
414:24 - a new translations main. Json for
414:27 - Spanish for Italian and for Japanese
414:30 - these files were created automatically
414:32 - by crowding over here but they will be
414:35 - replaced by their corresponding
414:36 - translations once I start to translate
414:39 - in the platform so let's do that I have
414:42 - that file already translated into
414:44 - Spanish and approved so if I go here to
414:48 - my Integrations and I really don't want
414:50 - to wait that hour that I set up to
414:53 - synchronize the new translations with my
414:56 - repository I can click on sync now I'm
414:59 - going to sync it now and I will see that
415:02 - the status will be sinking sinking and
415:06 - it's still sinking it might take a while
415:08 - and if I go to my GitHub repository I
415:10 - see a new pool request new crowding
415:13 - updates new crowding updates new
415:17 - translations for main. Json in Spanish
415:19 - Italian Japanese and here I have Spanish
415:22 - if I go here to my Branch I can see that
415:26 - now it's four commits ahead of Maine I
415:28 - had a new commit when I synchronized
415:31 - that brand over here and if I click on
415:34 - it over here at the bottom I can see
415:36 - that now these strings were replaced
415:39 - previously they were in English by
415:40 - default and now they are in Spanish with
415:43 - the translations I submitted and
415:45 - approved now I have them in my Branch
415:49 - over
415:50 - here the branch is four commits ahead of
415:53 - main so I can check my translations very
415:55 - carefully before I decide to merge them
415:57 - with the main branch then I when I check
416:00 - them I can compare the this Branch with
416:03 - my main branch and I can see that they
416:06 - are able to merge so they can be
416:08 - automatically merged in GitHub if I want
416:11 - to I can just merge the branches in the
416:15 - pool request I click on view pull
416:17 - request over here and then I can merge
416:20 - the pool request I can also change the
416:23 - the description over here of the pool
416:25 - request and everything was done
416:27 - automatically if I merge the pool
416:29 - request I will be merging the
416:31 - translations
416:32 - into my main branch and I will be able
416:36 - to keep those files in the local folder
416:39 - you can see that these files were added
416:42 - and this is located exactly where I
416:44 - wanted to be public locals Spanish main.
416:49 - Json now you know how to use the GitHub
416:52 - integration remember that it will send
416:54 - you a pull request it will send a pool
416:56 - request to your repository that you can
416:59 - merge to your main branch and it will
417:02 - send it to the localization main branch
417:05 - or the the name that you assign to that
417:08 - particular Branch it's very helpful
417:10 - because that that way you can check the
417:12 - translations before you merge them in
417:14 - the live version of your project this is
417:17 - basically how the GitHub integration
417:19 - works if you want to check your branch
417:22 - configuration you can click on the
417:24 - ellipses Branch configuration load
417:26 - configuration from crowding yaml
417:30 - continue and then you will B basically
417:32 - see what we configured when we set up
417:35 - the integration you can change the
417:37 - source and the translation path like
417:40 - this if you click on it you will be able
417:41 - to change the source path and the
417:43 - translated files path with the
417:45 - placeholders that you can see over here
417:48 - they're all very helpful to create the
417:50 - path that you need for your application
417:51 - or for your project remember you can
417:54 - preview the source files and the
417:55 - translated files and how they will look
417:57 - and where they will be in your project
418:00 - structure if you you want to pause sync
418:03 - you can click here on pause and you can
418:06 - resume whenever you need to like this
418:10 - you can also edit the settings for the
418:12 - GitHub integration like this to change
418:14 - the sync schedule let's say that I want
418:17 - to change this to 3 hours I can do that
418:20 - and save
418:23 - it and I can also delete the integration
418:26 - so I don't use it anymore if you want to
418:29 - delete the integration then you can
418:31 - click here delete integration delete
418:34 - this integration well first I would
418:36 - suggest pausing the sync just in case
418:40 - and then deleting the integration
418:43 - remember that you can only have one
418:44 - integration per project if you're on the
418:46 - free plan so I'm going to delete it so
418:49 - you can see how this works and then well
418:52 - you can start from scratch again to set
418:54 - up the integration with the mode that
418:57 - you choose but this is basically how the
418:59 - GitHub integration Works in crowding
419:01 - it's way to automate the process
419:04 - basically what we were doing with the
419:06 - VSS code extension manually now we can
419:08 - do that automatically through GitHub I
419:11 - hope you found this helpful so let's
419:13 - continue to the next part of the
419:20 - course congratulations on reaching this
419:23 - part of the course now you know how to
419:25 - translate your website or application in
419:28 - vs code with the GitHub integration and
419:30 - now we will see a third option which is
419:32 - actually a bit simpler and it may be a
419:34 - good alternative for static content like
419:37 - a blog or a landing page a personal
419:41 - portfolio that type of website that is
419:44 - mostly static where all the content is
419:47 - already there when you load the page and
419:50 - that option is called ajs proxy a
419:53 - JavaScript proxy we will be translating
419:56 - the strings from this sample website you
419:58 - can see that we have some strings in
420:00 - English that we translate let's say into
420:03 - Spanish or into other languages we also
420:06 - have some Lauren Ipson placeholder text
420:08 - over here but we won't to be Translating
420:10 - that in this example we will translate
420:13 - the strings that we can translate here
420:15 - that are not placeholders so let me show
420:17 - you how this works it's very easy to set
420:19 - up with a crowding integration for that
420:22 - we need to create a crowding project
420:25 - we're going to name this free code Camp
420:27 - JS proxy you can see the project address
420:30 - it's a public project
420:32 - The Source language will be English and
420:34 - the target languages will be Spanish
420:38 - Chinese simplified and Hindi just to
420:42 - select some languages of course you can
420:44 - always change this list or modify it
420:47 - afterwards but it's just to get started
420:49 - with a project and what we're actually
420:51 - going to do is translate them into
420:53 - Spanish great so we have our project
420:56 - free cam JS proxy The Next Step would be
420:59 - to add the JS proxy integration we go
421:02 - here to the Integrations Tab and
421:04 - remember that with the free plan you can
421:06 - use one integration you can add one
421:08 - integration per project so you click
421:11 - here on ADD integration and then you
421:14 - browse the list JS proxy translator this
421:19 - is a free extension that allows you to
421:22 - translate content with proxy translation
421:24 - technology and what is a proxy a proxy
421:28 - is like a server that acts as an
421:31 - intermediary in resource requests from
421:34 - the client to another server so we're
421:36 - basically adding like an intermediary in
421:38 - the process of actually retrieving that
421:40 - website and seeing it this will be
421:43 - translating our website very easily it
421:46 - will basically crawl the website extract
421:49 - all the strings that can be translated
421:51 - we will be able to translate them in
421:52 - crowding and then synchronize that so
421:54 - people can see it live on our website
421:57 - you can see it here it will crawl your
421:59 - website and extract all the translatable
422:01 - text in your project you will find a new
422:03 - file with text for translations once the
422:07 - translations are ready you can add them
422:09 - to your a website using over the air
422:11 - delivery we will see how this works in
422:14 - just a moment you can also find more
422:15 - information here in the apps and
422:17 - integration section we're going to
422:19 - install this and we can see that it will
422:21 - have access to our projects who should
422:24 - be able to use the app only me in this
422:27 - case only me again and where will we be
422:31 - able to to use the app only in the
422:33 - selected projects the free cam JS proxy
422:36 - project like this we're going to install
422:39 - it and here we can see that it is
422:42 - installed successfully that's great so
422:44 - after we have that integration installed
422:47 - if we refresh the page now we will see
422:49 - the JS proxy translator integration
422:52 - let's go into the details where we can
422:54 - set up the integration remember this is
422:57 - mostly used for static content content
422:59 - that will not change while the use is
423:02 - actually reading or seeing that
423:04 - information it's not for dynamic
423:06 - applications it's more for like blogs or
423:09 - landing pages where the content is
423:10 - already there it might take a few
423:12 - seconds but it will load and here we can
423:14 - see how to set it up synchronize all
423:16 - source files with your project and send
423:19 - new translations from the project to
423:21 - your website
423:22 - immediately so let's take a look at
423:24 - these settings how we can set this up
423:27 - remember our goal is to get these
423:29 - strings which are hosted here on my
423:31 - GitHub subdomain my personal subdomain
423:35 - in this path localization JS proxy this
423:38 - is a project that I created in a
423:42 - repository on my personal account so
423:45 - let's see the first thing we need to do
423:48 - is to specify the site URL this app will
423:51 - crawl your website and extract all
423:54 - translatable text in your project you
423:56 - will find a new file with text for
423:58 - translation so we have to go there where
424:01 - we are hosting our website copy the URL
424:04 - over here copy it copy it and then we
424:09 - paste it over
424:10 - here like this then in application mode
424:14 - we have two different modes server side
424:17 - which is default the application will
424:19 - scan the content on the visible pages of
424:22 - your website or client s your website
424:25 - administrator needs to add a JavaScript
424:27 - code snippet to each page this mode is
424:30 - useful for internal pages with
424:33 - authorization then if we check the site
424:36 - settings we can also configure the
424:38 - different site settings like separate
424:40 - files for each page if you want to have
424:43 - separate files for each page you can
424:45 - enable this option otherwise all the
424:47 - text will be imported into one file
424:50 - that's interesting that's something to
424:52 - keep in mind it's it might be a very
424:54 - important setting we can also have a
424:57 - page limit when you're testing the
424:59 - technology because website crawling
425:01 - takes time you can set the limit of how
425:03 - many pages you actually want to
425:05 - translate the default is 10,000 you can
425:08 - also specify the IDS of the HTML tags
425:11 - that you would like to be skipped during
425:13 - the sources import it's very important
425:15 - in case you don't want to actually
425:17 - import some of the elements the text
425:20 - from specific elements on your website
425:23 - use commas to separate the IDS you can
425:25 - also ignore the text or Elements by CSS
425:29 - classes that can be helpful too and you
425:32 - can specify which paths you would like
425:34 - to craw if this is not specified then
425:37 - all pages will be imported these are
425:40 - some examples of paths and how you can
425:42 - include them like about page article
425:45 - comments if you have multiple pages
425:48 - right now this is a simple onepage
425:51 - portfolio website okay we just have a
425:54 - basic information contact information
425:58 - like recent work some links articles
426:02 - testimonials and some contact
426:04 - information over here here we have
426:07 - internal links they are not links to
426:09 - other pages but if you do have multiple
426:12 - Pages you can configure this directly in
426:14 - crowding with the paths and you can also
426:17 - exclude paths finally we can see
426:20 - language detect type this setting is
426:24 - basically how the language will be
426:27 - detected it can be a query parameter
426:30 - this is the default it can be a
426:33 - subdomain like en here some websites use
426:37 - a subdomain for the localization for the
426:40 - internationalization process this would
426:42 - be the English version then you would
426:44 - have es for Spanish and then you would
426:47 - have your website.com or your main
426:50 - website domain or you can have a
426:54 - subdirectory like for example
426:56 - slem like this in this case we're going
427:00 - to keep the default for now maybe we
427:01 - need to change this in the future but
427:03 - we're going to keep the default and here
427:06 - we can see that after we add the
427:07 - JavaScript snippet which is a snippet
427:09 - that we will need to add to our code we
427:11 - need to make sure that we add this class
427:14 - in the body tag to avoid swapping
427:18 - translation swapping on page load how do
427:21 - we want to sync the source manually or
427:23 - daily this is very important for
427:25 - automating the process if we do it daily
427:28 - we can Auto Import once a day if we do
427:31 - that manually we can import it now and
427:34 - we also find options for publishing the
427:36 - translations the latest translations
427:38 - will be available for overthe a delivery
427:41 - for your website you can sync the
427:43 - translations manually or daily once a
427:45 - day and this is another tool crowning in
427:48 - context which allows you to translate
427:51 - directly over the website that you're
427:52 - translating but that is beyond the scope
427:54 - of this part of the course we will talk
427:56 - about it in the next part but if you
427:58 - need to publish your translations just
428:00 - click here on publish
428:02 - here you can import the strings and here
428:03 - you can publish them again you can do
428:06 - that manually or automatically once a
428:09 - day and finally here we see the language
428:12 - switcher this will be a JavaScript
428:15 - snippet that we can add to our website
428:17 - like we do with Google analytics this
428:19 - will let your visitors see the language
428:21 - switcher which is like a very small box
428:24 - at the bottom right of the website that
428:27 - users can use to change the language
428:29 - remember you must add the scanner
428:31 - snippet for each desired page so this
428:34 - snippet that we will see right here
428:35 - after we import the translations should
428:38 - be in every page that we want to
428:41 - translate let's import our strings now
428:44 - yes we have the right side URL so I'm
428:46 - going to import them import
428:51 - now we're starting the crawler let's see
428:54 - what we get this may take a moment might
428:57 - take a while because the crawling
428:59 - process is timec consuming so it will
429:02 - scan all the pages of your
429:05 - website you can see that now this says
429:09 - Distributing and we can see that the
429:11 - publish process has already started
429:14 - let's see what has changed in the
429:16 - project we may need to wait for a few
429:18 - seconds or minutes until the publish
429:20 - process is
429:23 - completed but while that is running we
429:26 - can go to our sources Tab and check if
429:29 - we have anything new there we you can
429:31 - see that it is loading so the process
429:33 - still running if we go back to the
429:36 - Integrations tab now after the process
429:39 - has been completed we will see this JS
429:42 - proxy generated and imported a source
429:45 - file a SL stepan cn. github.io dojon
429:51 - with your website text into the project
429:54 - it was last imported a few moments ago
429:57 - here you can also read more about
429:58 - translation strategies but if we we go
430:02 - to the bottom here we can already see
430:04 - that we have the script that we have to
430:06 - add to each page that we want to
430:09 - translate this is a language switcher
430:11 - and we will see it in action in just a
430:13 - moment but we can copy it here to our
430:15 - clipboard now if we go to sources we
430:18 - will see a new Json file and if we go to
430:21 - dashboard we just need to go to our
430:24 - target language Spanish click on it and
430:27 - then we will see all the strings that
430:29 - the web crawler extracted from our
430:31 - website and notice how easy it is to
430:33 - start translating let's translate a few
430:36 - strings like this about me projects
430:42 - testimonials contact we're going to
430:45 - translate the first five strings of the
430:47 - website and I'm going to show you how
430:48 - you can have a partial translation and
430:50 - translate it step by step and then
430:53 - synchronize the translations back to
430:55 - your website so we're going to approve
430:57 - these strings because you should approve
430:59 - them before you actually send them to
431:02 - the to the website to the live version
431:05 - of the website you can also check the
431:07 - quality assurance issues if you're sure
431:09 - that the word is actually written
431:11 - correctly you can just approve it like
431:13 - this and that's it we have the first
431:15 - five strings translated if we go back to
431:18 - the dashboard we can see some progress
431:21 - in the translation for
431:24 - Spanish so if we go back to the
431:27 - Integrations we go to the JS proxy
431:29 - translator for if we go back to our
431:32 - project we won't see any changes what
431:35 - crowning just did was calling the
431:37 - website and it extracted all the text
431:40 - from the website but how can we actually
431:43 - switch the language we need to add the
431:45 - language switcher we need to do that in
431:48 - my case I'm storing this in a GitHub
431:50 - repository so I will add this language
431:53 - switcher to my HTML file this is a basic
431:55 - website built with HTML CSS and
431:58 - JavaScript so I will add this to my HTML
432:02 - file and push a commit to my GitHub
432:05 - repository I will copy the script then I
432:08 - will go to visual studio code like this
432:12 - to the actual project and over here in
432:16 - head here we could add it at the bottom
432:19 - let's add a comment that this is from
432:21 - crow in we can format this nicely in the
432:25 - head dock we're going to add a script
432:28 - and we're going to add this style and
432:30 - over here we also
432:33 - see in side settings remember that we
432:36 - saw that for hiding translation swapping
432:39 - on page load after adding the JavaScript
432:43 - snippet make sure to add the JS proxy
432:46 - blur class in the body tag so we're
432:48 - going to add this class to our body tag
432:51 - this is something that is a bit like
432:53 - hidden here when you expand the site
432:57 - settings but it might be important if
432:59 - they are mentioning this so we're we're
433:01 - going to do this to avoid any potential
433:04 - issues JS proxy blur great so now if we
433:08 - check Source control yes we have the new
433:11 - script we have the new class and that's
433:14 - what we're going to commit to our
433:16 - repository so let me Commit This with
433:20 - the
433:27 - terminal I'm going to add a new commit
433:30 - to my repository and I'm going to
433:34 - describe it as adding a JS proxy adding
433:38 - the JS proxy script then I'm going to
433:41 - close this and I'm going to push it to
433:44 - my main branch in GitHub you might have
433:48 - to check if there is sensitive data that
433:50 - you may not want to publish here in the
433:53 - HTML file something you might like to
433:55 - keep to yourself okay so after we have
433:59 - that in the HTML file of the
434:02 - repository the site may take a few
434:05 - minutes to build again here we can see
434:08 - the the status the pages build and
434:10 - deployment status is in progress so we
434:13 - just need to wait until this is
434:14 - completed we see that it is pending and
434:17 - if we refresh it now we do see this
434:21 - little language switcher look at this
434:23 - it's really really nice we see that it's
434:26 - powered by crowding and it has our
434:28 - Target languages Spanish Chinese
434:31 - simplified Hindi and our source language
434:33 - English which is the current language
434:35 - let's see what happens if I switch this
434:37 - to Spanish right now nothing is
434:40 - happening why because we need to publish
434:44 - our translations we chose to publish
434:46 - them manually right so we have to click
434:49 - here on publish now publish now it might
434:52 - take a few seconds or a few minutes to
434:55 - update and you may need to refresh the
434:57 - website a few times while you're waiting
434:59 - but eventually you will'll see the
435:01 - strings replaced over here amazing right
435:04 - we have this in Spanish this is a string
435:07 - we translated and we have the other four
435:09 - strings here about me projects
435:12 - testimonials and contact great the
435:15 - language switcher worked here we are in
435:17 - Spanish and if I switch to English they
435:19 - are replaced automatically like this
435:23 - Spanish and English it's amazing right
435:27 - we also see this string being replaced
435:31 - English and
435:32 - Spanish you can continue the same
435:35 - process until you translate your entire
435:37 - website with all the different pages it
435:39 - currently has and you can see that the
435:41 - language switcher is adding this to the
435:44 - request it's adding the language that we
435:47 - are requesting as an identifier for that
435:49 - JavaScript the JS proxy the JS proxy is
435:53 - acting as an intermediary between the
435:57 - server and the client the original
435:59 - server of this website and the client if
436:02 - we try to continue translating let's say
436:05 - that we are going to translate
436:07 - additional strings like let's translate
436:10 - a couple of them we see students so
436:13 - let's translate it and see how we can
436:15 - again publish our new translations and
436:17 - we will see them in the website with the
436:20 - JS proxy right now we're doing all of
436:23 - this manually because we haven't set up
436:25 - the
436:26 - automated synchronization to daily but
436:29 - we're going to continue doing manually
436:31 - for now for demonstration purposes but
436:33 - you can automate this and do this daily
436:36 - after we publish them we will see them
436:40 - since I'm activating that blur you may
436:42 - see it blurry while you're refreshing
436:44 - while the translations are being loaded
436:47 - and here you can see this this is a
436:49 - string that we translated student in
436:51 - Spanish now if we switch back to English
436:55 - you will see the original strings in
436:58 - English so it's as easy as that I would
437:02 - suggest practicing this with other
437:04 - languages or with different projects but
437:08 - it's actually quite simple for
437:09 - translating static content remember this
437:13 - is not for dynamic content that will
437:15 - change over time all the content should
437:18 - be available before you actually start
437:20 - to crawl the website so you can get the
437:23 - full list of strings and translate them
437:26 - appropriately with the JX proxy
437:28 - integration you also have some
437:31 - additional options here that you may
437:33 - like to work with or customize like
437:35 - reviews strings to review you can import
437:38 - all of them you can clear the process
437:41 - cache import it and delet it and right
437:44 - now we don't have anything to display
437:46 - here but we may have some strings that
437:48 - need review we also see variables you
437:51 - can create patterns to replace similar
437:53 - strings with a single string containing
437:56 - placeholders for example replace strings
437:59 - like hello John hello chane with a
438:01 - single string like hello name you can
438:04 - set the pattern here with ADD pattern
438:07 - like this then you can use a title for a
438:11 - placeholder that provides translators
438:13 - with a clear understanding of how the
438:15 - rest of the string should be translated
438:17 - the placeholder would be this like
438:19 - username and it should be within double
438:22 - curly brackets that is an advanced
438:24 - feature a more advanced feature that you
438:26 - may like to dive into but I'm just
438:27 - showing you this in case you would like
438:29 - to use it in your project
438:31 - we can also see logs displayed um over a
438:34 - period of two months and here you can
438:37 - find help for this integration this is
438:39 - also very helpful and actually there is
438:41 - something that I would like to highlight
438:43 - here we know how it works right now you
438:46 - can read more about this to understand
438:48 - the details and the different modes but
438:51 - over here we find something quite
438:53 - interesting we can see the language
438:55 - switcher
438:57 - customization yes you can customize the
438:59 - language switcher to change the position
439:02 - submenu position and the a class if you
439:05 - would like to add a specific custom
439:07 - class to the language switcher you can
439:10 - set that with these parameters over here
439:13 - you can see them here in the script that
439:16 - you will need to add to every page that
439:19 - you would like to translate here we can
439:21 - see position top right if you want to
439:24 - customize that for a sticky position
439:26 - then for inline position you can also
439:29 - use inline left or right or any of these
439:32 - values for sticky position the submenu
439:36 - position you also have these four
439:37 - options and then the class would be some
439:41 - value for your custom class any class
439:43 - any custom class that you would like to
439:45 - assign to that language switcher and
439:48 - here you have more information in case
439:50 - you would like to add a call back to the
439:52 - language switcher which will be invoked
439:55 - when changing the language on a website
439:57 - this is helpful to detect when the user
439:59 - is changing the language so you can
440:00 - react to that so you can handle that
440:03 - appropriately the Callback can pass two
440:05 - arguments language code two letters
440:08 - language code for example here we have
440:10 - the script again but here at the bottom
440:12 - we also see the Callback in the Callback
440:15 - we are defining a JavaScript functions
440:17 - we have the language code as the first
440:19 - parameter and the two letters language
440:21 - code as the second parameter and over
440:24 - here we're just printing that the
440:25 - language changed and the message is
440:29 - descriptive because it's using the
440:30 - values of the parameters but you can
440:32 - customize this to fit your needs in case
440:34 - you need to do something in your code
440:37 - when the user changes the language so
440:40 - you can customize all of this I
440:41 - encourage you to read this help article
440:44 - when you install the JS proxy
440:46 - integration awesome work now you know
440:48 - how to use this integration for
440:50 - translating static
440:55 - content great now let's talk about
440:57 - crowding in context this is the last
441:00 - technique that we're going to cover in
441:02 - the course for translating a website
441:05 - crowding in context is great when you
441:07 - want your translators or your community
441:09 - to translate the strings that you
441:11 - currently have in a project in crowding
441:14 - directly on top of that website app or
441:17 - platform they can basically click on the
441:20 - string translated see a preview of the
441:23 - translation live on the website where it
441:25 - should be and the changes will be
441:28 - automatically synchronized between your
441:30 - a and crowding so I will show you the
441:33 - basics the fundamentals of how you can
441:35 - synchronize that and how you can set it
441:37 - up here we have our localized app
441:39 - example this is our basic react app here
441:43 - it's already running so I'm going to
441:44 - open this in my browser and we can see
441:47 - it over here free go gam welcome learn
441:49 - to code for free I just made a few
441:52 - modifications because now we will need
441:54 - to support multiple languages because we
441:56 - will have a pseudo language to configure
441:59 - all of this functionality a pseudo
442:02 - language will be like a template with
442:04 - additional information about the strings
442:06 - that crowding is going to use to get the
442:09 - information it needs for the
442:11 - translations so instead of here saying
442:14 - English or Spanish I am just showing the
442:16 - twet code English Spanish and we're
442:20 - going to use Africans as a pseudo
442:23 - language this the pseudo language should
442:25 - be a language that you're not planning
442:27 - to translate your content into Okay so
442:30 - so if I'm not planning to translate my
442:32 - website into Africans then I can use
442:35 - that because the language itself will
442:36 - not be available it will be used for
442:38 - placeholders that crowding will need to
442:41 - get the translations live and
442:42 - synchronize them let me show you the
442:44 - changes I made to the code compared to
442:47 - the previous versions because now we are
442:49 - supporting multiple languages here in
442:52 - the unchange method now I am setting the
442:54 - language to the value of the current
442:56 - Target the option that the user selects
442:59 - from the drop- down menu and it will be
443:01 - one of these values en N es s or AF I
443:05 - added this third option for Africans
443:07 - because to enable crowding in context
443:10 - you or the user the translator has to
443:13 - select that particular language to
443:15 - activate the entire functionality okay
443:18 - so that's one of the changes and the
443:21 - other change is here in the initial
443:24 - State instead of English now I have en n
443:26 - which is the twet code for
443:29 - English since all of that is set up we
443:31 - need to go to crowding
443:34 - Enterprise and here I have a project
443:36 - named free code cam in context tutorial
443:39 - these are the target languages I
443:40 - selected Bengali French Hindi Japanese
443:43 - and Spanish this feature is available
443:45 - for teams and for crowning Enterprise if
443:48 - you're representing an open source
443:50 - project an organization or an
443:51 - educational project then you will be
443:54 - able to configure this in your project
443:57 - to do that go to sources and here we
444:00 - need to upload the file where we are
444:03 - storing the strings that we want to
444:05 - translate we're going to do that
444:07 - manually for the purposes of this demo
444:10 - of this simple example but you can
444:11 - automate this with the techniques we've
444:13 - seen you can add the GitHub integration
444:15 - and synchronize all the files you need
444:18 - automatically for now I am just going to
444:20 - go to this folder or I can also go to my
444:24 - vs code over here where I have my files
444:28 - and I'm going to take my main. Json file
444:31 - where I'm storing all the strings the
444:34 - original strings the English strings to
444:36 - upload the file by dragging and dropping
444:39 - it I am going to right click on it I am
444:42 - going to open it or reveal it in finder
444:45 - I'm using Mac OS in Windows you also
444:47 - have an option to see the path to the
444:49 - file and open it and here I'm going to
444:52 - drag and drop it to this area that will
444:56 - start the upload and once the upload is
444:59 - completed you will you will be able to
445:00 - go here to the tools in the tools you
445:03 - will find in context over here if you
445:06 - click on it you will reach this part in
445:09 - context for web crowding in context tool
445:12 - provides an overlay for your application
445:14 - translators can make translation in
445:16 - context and instantly preview them by
445:19 - default it will be disabled if you want
445:22 - to enable it just click on this button
445:25 - and then it will change to enabled and
445:27 - here you see the two steps that you need
445:29 - to follow it's it's actually quite
445:31 - simple let me show you the first step is
445:33 - to integrate a new language into your
445:36 - application since localization and
445:38 - translation is very technology specific
445:41 - there are many ways to do this I'm just
445:42 - showing you a simple example with a
445:44 - react app and the I next framework but
445:48 - this will depend on the technology that
445:51 - you are using for your application to
445:53 - enable in context localization you will
445:56 - have to switch your application to this
445:58 - language so if if you have some way of
446:01 - switching the language of your
446:03 - application like a drop down menu or a
446:05 - query parameter or any other approach
446:08 - then you will need to switch to that
446:10 - language that we're integrating here
446:12 - this is a pseudo language like you can
446:15 - see over here we need to integrate that
446:17 - but we have to choose it first this
446:19 - should be a language that you're not
446:21 - planning to translate your content into
446:24 - so in this case I'm going to choose just
446:26 - as an example Africans you could choose
446:28 - any other language that you're not
446:29 - planning to translate you can choose if
446:31 - you also want to translate hidden
446:34 - strings or disable this I'm going to
446:36 - keep it enabled it's enabled by default
446:39 - and you can see here the twet code of
446:41 - the language you selected and the local
446:43 - code this option should be disabled if
446:45 - hidden strings are used for metadata and
446:48 - should be original for the web or the
446:49 - apps functioning okay something to be
446:52 - aware of so after that we click on
446:55 - download and then we open a folder that
446:59 - we downloaded this will be a zip file we
447:02 - just need to unzip it the folder will be
447:05 - named AF when you unzip it and inside
447:08 - that folder you will have a main. Json
447:10 - file this is a file that you have to add
447:13 - to your application in some way
447:15 - depending on how you're structuring your
447:17 - file where you're storing your
447:18 - translations and your locals if we check
447:21 - the content of the file you will see
447:23 - that it's actually quite interesting if
447:25 - we go back to visual studio code we just
447:27 - need to drag and drop this folder here
447:30 - into my local folder which is where I'm
447:33 - storing all the translations it should
447:36 - be at the same level as my English
447:38 - folder let me just make this full
447:41 - screen now we have two languages we have
447:45 - English and we have Africans if we open
447:48 - the Africans Json file you will see that
447:50 - it's not actually translating them into
447:53 - Africans it's just giving them crowding
447:55 - specific identifiers for crowding in
447:58 - context so that's why why you shouldn't
448:01 - plan to translate your application into
448:03 - this pseudo language so choose it
448:06 - carefully when you set this up after you
448:08 - have that you also need to make sure
448:09 - that the application will handle
448:11 - switching to this language appropriately
448:14 - right now if I go to my application I
448:18 - can see that I added the option for
448:19 - afcons and it will handle it correctly
448:22 - like this now if we switch to this
448:24 - language instead of the translations
448:27 - because we don't have them we see just
448:28 - the crowding identify
448:30 - but this is not working yet because we
448:32 - need to take a second step if we go back
448:35 - to crowding Enterprise now we go to the
448:39 - JavaScript snippet setup we need to
448:41 - paste this JavaScript snippet in our
448:45 - head section in the head section of the
448:48 - HTML document or the document that
448:50 - you're working with before any other
448:52 - scripts every page it's important to
448:55 - read this every page with a localizable
448:58 - text should contain this script you can
449:00 - also include this JavaScript snippet
449:02 - only when the pseudo language is active
449:05 - so let's copy this and let's paste it
449:09 - where we need it to be they mentioned
449:12 - that it should be in the head section of
449:14 - the application in a react up that would
449:17 - be in
449:18 - index.html this would be the head
449:20 - element so after that after I'm going to
449:24 - place them below the title here and I'm
449:27 - going to fix the the indentation like
449:30 - this it's just this couple of script
449:32 - texts and that will create all the magic
449:35 - you can see that we have like a code for
449:37 - the project and a domain and we also see
449:40 - this script with a specific Source from
449:43 - crowding CDN the content delivery
449:45 - Network so now if we go back to our
449:49 - react application now we see something
449:51 - special over here you may see this
449:53 - warning first because there is nothing
449:55 - to translate with crowning in context
449:57 - because we're not in the Africans
449:59 - language yet by default we are in
450:01 - English in the application so if you
450:03 - ever see this just click on close you
450:05 - might also read this to know what would
450:07 - be causing it but if it's not an issue
450:09 - really you can just close it and here
450:11 - you can see this preview we see this
450:15 - preview and we can move it anywhere we
450:17 - need to and what are we seeing here well
450:20 - we see all the strings that we can
450:21 - translate for that specific page we're
450:24 - in we can also type to search for a
450:27 - specific string we see like a summary
450:30 - for the left panel of the crowding
450:33 - editor tool but it's right there
450:35 - directly on top of our application we
450:38 - can also click here to take a screenshot
450:41 - of the current screen and upload it to
450:43 - crowding and we also have some settings
450:46 - you might also get a signin screen the
450:49 - first time you launch your application
450:52 - where you will need to choose your
450:53 - target language and you will need to log
450:55 - into crowding and then go back to your
450:57 - application I have I've already done
450:59 - that in this computer so that's why it's
451:01 - not asking me again to sign in for the
451:03 - same application but here I do see
451:06 - croing in context and I can change those
451:09 - settings here in the settings tab the
451:11 - language the target language is Spanish
451:14 - I can also change this if I'm going to
451:16 - translate to a different target language
451:18 - at the moment I cannot select a workflow
451:20 - step from my Enterprise workflow I can
451:24 - change this preview the translations or
451:26 - not highlight them and list only text
451:29 - from the current page I can also log out
451:31 - from my account and let me show you this
451:33 - I'm going to log out momentarily and
451:36 - then log back in so you can see how this
451:38 - works I'm going to log out and this is
451:41 - exactly what you will see when you
451:42 - launch your application this is the
451:45 - target language you need to choose it
451:47 - and the workflow step and then you log
451:49 - in with your crowding account you will
451:51 - be redirected to your crowding account
451:54 - you can send a magic link if you want to
451:57 - and after you click on the magic link
451:59 - you you will be redirected to your react
452:03 - application where you can start
452:04 - translating exactly what we had before
452:07 - right but now when you start translating
452:09 - what happens if you switch to Africans
452:12 - which is the pseudo language well the
452:14 - pseudo language will enable the overlay
452:18 - on your app and you will be able to
452:20 - click here on this little icon next to
452:22 - the string that you want to translate
452:25 - this will open like a more compact
452:27 - version of the editor where you can
452:28 - submit your Translate
452:30 - you will need to use cookies you can
452:33 - customize them reject them or accept
452:35 - them I'm going to accept them and here
452:37 - you can write your translations let me
452:40 - translate this welcome I'm going to
452:42 - translate it like this and then if I
452:45 - save my translation you will see what
452:47 - happens instead of being red now it's
452:49 - green because I translated it and if I
452:52 - have the permissions I can also approve
452:54 - it as a prove reader once it's approved
452:56 - I will see a check mark I will see all
452:59 - the revision history here as well and if
453:02 - I go to my project in crowding
453:05 - Enterprise now if I go to the dashboard
453:08 - I can see that there is a progress here
453:11 - 9% in the Spanish translations let me
453:14 - continue translating
453:17 - this I'm going to save this then I'm
453:21 - going to
453:24 - translate this like this and then I can
453:27 - just approve them as a proof reader and
453:30 - it will be synchronized automatically
453:33 - now you can see a green dotted line
453:36 - around the strings in the overlay and we
453:39 - can see the preview over here if we
453:42 - switch the language to Spanish we are
453:44 - not seeing this the translations because
453:48 - right now we don't have that locally in
453:51 - our project but we do have them over
453:54 - here in our project so if I choose to
453:57 - download this Json file in Spanish like
454:01 - this main. Json I can just download it
454:04 - I'm doing all of this manually of course
454:06 - but you can automate this with all the
454:08 - tools you learned before I can drag and
454:11 - drop the file in Spanish over here to
454:14 - the folder and now if I refresh this in
454:17 - the application I will be able to switch
454:20 - to the Spanish version very easily with
454:24 - the translations I just saved but
454:27 - crowning in context will be activated
454:30 - for specifically Africans when you
454:32 - select Africans if you want to translate
454:34 - into another target language let's say
454:37 - Japanese now I can change this to
454:40 - Japanese while I'm still selecting the
454:42 - Africans language in my app if I want to
454:45 - change the target language I need to
454:46 - make sure that I click here on change
454:49 - okay that will change the strings that I
454:53 - am the status of the strings that I'm
454:55 - translating because they will be the
454:57 - same for all the languages but they
454:59 - statuses will be different or might be
455:01 - different let's say that I'm going to
455:03 - translate into Japanese I personally
455:06 - don't speak Japanese but I'm going to
455:08 - use this machine translation I'm not
455:10 - sure if this is 100% accurate but let's
455:13 - save it so you can see how it works and
455:15 - now I submitted it and approved it and
455:18 - you can see how the status is being
455:20 - updated now if we go to Africans we can
455:23 - see the preview of the translation in
455:26 - Japanese and if we go back to our
455:28 - project in crowding and and we refresh
455:30 - this we see a progress in Japanese we
455:33 - see 9% now if we go to main. Json in
455:37 - crowding we can see that this
455:40 - translation was successfully saved and
455:42 - approved and we can also work from here
455:44 - from the main editor in crowding or in
455:47 - crowding in context so we have these two
455:49 - options and it's always great to see
455:51 - what We're translating in the context of
455:53 - the real application great now you know
455:56 - how to set this up this process is a bit
455:58 - more detailed and it really depends on
456:00 - how you structured and configure your
456:02 - app and the framework that you're using
456:04 - for internationalization in this case I
456:06 - was using IAT next for react react IAT
456:09 - next but for every framework you just
456:12 - need to check where you're storing your
456:15 - translations then choose a pseudo
456:18 - language download the file upload your
456:22 - original strings files then download the
456:26 - file for your pseudo language the pseudo
456:29 - language that you chose from crowding
456:32 - and then follow the steps that we just
456:33 - saw please feel free to review this part
456:37 - of the course to set this up in your own
456:39 - application and the crowding team is
456:41 - also available if you need help here in
456:44 - the tools panel if you go to in contacts
456:47 - for web at the bottom you can see that
456:50 - if you need assistance with any of the
456:51 - stages above you can contact the
456:53 - crowding team if you need any help but
456:56 - these are the two main steps awesome now
456:58 - you know how to work with crowding in
457:00 - context for
457:05 - web awesome congratulations on reaching
457:09 - this part of the course now that you
457:11 - know how to translate your project on
457:14 - crowding let's see how free Cam's
457:16 - Community is translating the content
457:18 - into many world languages we'll see this
457:21 - from a potential contributors point of
457:23 - view emphasizing how to translate our
457:26 - content on crowding so this time we will
457:29 - see this from a contributor's point of
457:31 - view how you as a contributor can
457:33 - translate resources for free code Camp
457:36 - if you are a contributor who is
457:38 - interested in joining our translation
457:40 - effort where should you start you should
457:42 - start by reading our contribution
457:44 - guidelines here we are in our
457:47 - contribution guidelines contribute to
457:49 - freec cam.org you can contribute in many
457:52 - different ways but here we're focusing
457:54 - on translation so you would click here
457:57 - on help us translate and you you will
457:59 - see this we are localizing free cam.org
458:02 - to Major World languages you can see all
458:05 - the languages that we have available
458:07 - right now if you're interested in
458:08 - translating here is how to translate
458:11 - free Cam's resources so you can click
458:13 - here on this link or you can click here
458:16 - on the sidebar on work on translating
458:19 - resources and that will take you to this
458:21 - article first of all prepare yourself
458:23 - for contributions there are no speed
458:27 - limits you can start by reading this
458:29 - announcement we recommend joining our
458:30 - community forum and our Discord chat
458:33 - server if you click on these links let
458:36 - me open them right here so you can see
458:38 - them you can find Quincy larsson's
458:40 - announcements Quincy Larson is the
458:42 - founder of free Cod cam he wrote this
458:44 - article to help you join the
458:46 - localization process how to help
458:48 - translate free code cam into your native
458:51 - language you can read this announcement
458:53 - this has the major steps that you should
458:55 - follow for the localization process and
458:59 - after after that you can also go to this
459:02 - link over here this is the community
459:04 - Forum the community forum is where you
459:07 - can ask questions we also have a Discord
459:10 - server that you can join you just need
459:12 - to choose your name and click on
459:15 - continue to join you will need to
459:17 - register and you will be taken to our
459:20 - Discord server where you can ask
459:22 - questions we have special rooms where
459:24 - you can talk about the localization
459:26 - process and get started you can transl
459:29 - as much as you want when you want it's
459:31 - only a matter of how much time and
459:33 - energy you are willing to invest as a
459:35 - volunteer translator we just ask you to
459:38 - understand the following translations
459:40 - are a team effort it is a fun and
459:43 - rewarding experience but it works best
459:45 - if you involve your friends and
459:47 - colleagues who speak the same language
459:48 - as you we also have the goal of
459:52 - providing education in as many languages
459:55 - as possible but it costs quite a lot to
459:57 - keep the engines running so Freo cam is
460:00 - committed to providing these for free as
460:02 - always but we need to prioritize
460:04 - resources for those who need it the most
460:06 - for translating the curriculum once a
460:09 - language reaches at least a few
460:10 - certifications we can begin deploying
460:12 - the language live on our learn platform
460:15 - where you can find the curriculum we
460:17 - looked at our user base and added 30
460:19 - more than 30 most widely spoken
460:21 - languages to the list of enabled
460:23 - languages on the translations platform
460:26 - which is crowding we are definitely
460:27 - looking forward to adding more languages
460:29 - to the list but it would only be
460:31 - feasible if we get enough momentum
460:33 - around a language I am covering all of
460:36 - this really quickly you can go here to
460:38 - this link to how to translate files on
460:40 - fre Cod Cam's contribution guidelines to
460:43 - learn more about this and read this in
460:44 - more detail I'm just giving you a
460:46 - general overview now we go to the
460:48 - overview of crowding but of course you
460:50 - just watch the score so you know a lot
460:52 - about crowding let's just go through
460:55 - this really quickly to help us with this
460:57 - massive effort we have integrated our
460:59 - open-source codebase and curriculum with
461:01 - crowding a tool to help us localize our
461:04 - codebase we use a different tool and
461:06 - workflow for translating articles in the
461:09 - Publications okay so crowding is being
461:12 - used for the curriculum and code base
461:15 - the translation workflow is split into
461:17 - two main activities translating and
461:19 - prove reading and we saw those roles
461:21 - during the course right so now you're
461:23 - seeing all of these Concepts in a real
461:26 - world project everything that we saw is
461:28 - a part of the course is being applied
461:31 - here in a real project that is live with
461:34 - a global Community we translate
461:36 - curriculum files documentation and UI
461:39 - user interface elements like buttons
461:42 - labels and other elements you can sign
461:45 - up to our translation platform and
461:47 - contribute with any of the 30 languages
461:49 - more than 30 languages enabled in the
461:52 - platform you can also be a proof reader
461:54 - to verify the translations to get
461:56 - started you should say hi in our this
461:59 - score where we publish updates then head
462:02 - to our translation platform and log in
462:05 - okay let's open up our translation
462:07 - platform here if you click on this link
462:08 - you will see that once you're in here in
462:11 - crowding in our project you will see
462:13 - these three featured projects coding
462:16 - curriculum user interface and
462:17 - documentation we also have other
462:19 - projects but these are the main ones you
462:22 - will also find an about tab where you
462:24 - can find more information about free
462:27 - code camp in the open project you will
462:29 - need to click on one of these projects
462:31 - let's say that you want to contribute to
462:33 - the coding curriculum once you're in
462:35 - there you will find many different
462:38 - elements first of all you will notice a
462:41 - list with all the languages that we have
462:43 - enabled more than 30 languages and you
462:46 - will see their status here on their
462:49 - status bar here you can see the number
462:52 - of words to translate in each language
462:56 - you can see the progress here on the
462:57 - progress bar you can see that the green
463:00 - bar represents how many strings have
463:02 - been approved approved means that they
463:04 - have been translated and pro read and
463:06 - then the approved reader approved the
463:09 - string to be live and we also have a
463:12 - blue bar that represents how many
463:14 - strings have been translated how many
463:16 - words have been translated let's say
463:19 - that we want to check the project for
463:23 - Spanish if we click on this language and
463:27 - we see Spanish modern we go into that
463:30 - project specifically and we can see all
463:33 - the files that we can translate we see
463:35 - the project structure if you need to
463:37 - collapse or close a specific folder you
463:40 - just click here on the small arrow and
463:43 - you will be able to expand or collapse
463:46 - that folder the files will still be
463:48 - there but you will not see them it might
463:50 - take a while but after that you will see
463:52 - the progress of each file as well and
463:55 - you can see them here as numbers and if
463:58 - you want to start contributing or
463:59 - translating then you would also need to
464:02 - choose a file to choose a file let's say
464:05 - just to click on a random file let's
464:09 - choose one from this certification
464:11 - scientific Computing with python let's
464:14 - just click here and if you click here on
464:16 - a file you will be taken to a login page
464:22 - you can log in over here into crowding
464:25 - Enterprise and you will need to log in
464:27 - into crowding Enterprise to have access
464:29 - to free code cam as an organization and
464:32 - to contribute to the project so you you
464:35 - enter your email or username you enter
464:37 - your password and then you log in you
464:40 - can also click here to get a magic link
464:43 - and you can log in with Google Facebook
464:46 - GitHub or your ex Twitter account if
464:50 - you're new to the project then you will
464:53 - need to sign up you can sign up by
464:54 - clicking here and then you will need to
464:56 - enter your email username and pass
464:59 - password agree to the terms and
465:01 - conditions and you may need to do some
465:03 - extra verification here for cloud fler
465:06 - and create your account I already have
465:08 - my account so let me just sign into this
465:12 - if you log in and you already have an
465:15 - account crowding will ask you if you
465:17 - want to stay logged in we can remember
465:20 - your session so you wouldn't need to log
465:21 - in as often you can choose to keep me
465:24 - logged in or not now I'm going to choose
465:26 - one of these options and then
465:29 - I go into the file that I selected
465:32 - because remember that we were in the
465:34 - free code cam coding curriculum project
465:37 - we clicked on a file and now we go to
465:39 - that file and we're back at the user
465:42 - interface that you are already familiar
465:44 - with after taking the course that is how
465:47 - you can start translating our resources
465:51 - technically how you can actually get to
465:53 - the resources if you go to our project
465:57 - again once you're logged in
465:59 - you will also be able to choose the the
466:02 - project you can log in from here after
466:04 - you log in if you don't see your profile
466:09 - here here you will see a login button
466:12 - that you can click on and after that you
466:13 - will see your profile image the
466:16 - organizations that you manage or that
466:17 - you're part of and your notifications as
466:20 - well but here let's say that I am in my
466:23 - account I already locked in I can go to
466:26 - the coding curriculum I can choose a
466:29 - file and now I will see some changes if
466:31 - I am logged into my account I will see
466:33 - go to editor and I will see these files
466:38 - it might take a while to load the
466:39 - progress of the files if you click here
466:41 - on hide completed you will not see the
466:44 - files that have been 100% translated and
466:46 - approved like for example here we have
466:49 - one of these files if you click on the
466:52 - button you will hide them that can be
466:54 - helpful as well to save you some time
466:56 - and reach a file that needs your help
466:59 - after that you also have the option to
467:01 - go to the editor if you click here you
467:02 - can go to the editor and help with
467:06 - strings that need help great that that
467:09 - is how you can start translating our
467:11 - coding curriculum but we also have other
467:13 - projects like the learn user interface
467:16 - and contributing documentation if you go
467:18 - there you will see the same project
467:20 - structure you will see the different
467:22 - managers you will see the same list of
467:25 - languages but you will see different
467:27 - files because that that is the version
467:30 - of the documentation that we are
467:32 - currently reading in the course okay if
467:35 - you would like to help with this you can
467:37 - also help us with this but the interface
467:40 - is very similar for all the projects now
467:43 - how can you translate the learn
467:45 - interface let's go back to our
467:46 - documentation if you would like to help
467:48 - translate the learn user interface like
467:50 - the buttons and the labels if you don't
467:53 - want to contribute to the curriculum and
467:55 - instead you would like to help translate
467:58 - the interface we also have a project for
468:00 - this and our documentation mentions that
468:03 - to translate the learn interface the
468:06 - interface relies on Json files remember
468:09 - Json this is another format that we
468:11 - talked about during the course it is
468:13 - loaded into uh an internationalization
468:16 - this is a numeronym the
468:18 - internationalization plugin to generate
468:20 - translated text this translation effort
468:23 - is split across both crowding and GitHub
468:26 - so if you are going to translate the
468:29 - learn interface you will need to read a
468:31 - little bit about this these Json files
468:34 - contain information that need to be
468:36 - updated to reflect your language but
468:38 - they cannot be uploaded into crowding as
468:41 - the content isn't something that would
468:43 - be a onetoone translation so these files
468:46 - will have to be maintained by your
468:48 - language lead but you're welcome to read
468:50 - about how to translate them in this link
468:52 - on crowding it's also important that you
468:54 - do not edit the following files through
468:56 - a GitHub pool request like these Json
468:59 - files intro and translations are
469:01 - translated on crowding in the project
469:05 - that we have for learn translating them
469:07 - can be a bit tricky as each individual
469:09 - Json value appears as its own string and
469:12 - sometimes the context is missing but the
469:16 - context information provided by crowding
469:18 - over here can help you understand where
469:20 - the string fits into the larger
469:22 - structure if you have any questions
469:24 - about a string you can reach out in the
469:26 - contributor chat that is about
469:28 - translating the learn interface because
469:30 - we have three main projects remember you
469:32 - can contribute to the coding curriculum
469:34 - the learn interface or the documentation
469:37 - translating the documentation is another
469:40 - essential task because this is the main
469:42 - resource that we use to explain
469:45 - contributors how to join free code Cam's
469:48 - Mission we share information steps and
469:50 - guidelines the the information that you
469:52 - are reading right now but we do have
469:54 - certain guidelines for translating our
469:56 - documentation our contributing
469:57 - documentation is powered by doif and we
470:00 - have special parsing for message boxes
470:02 - like this one so if you see this kind of
470:04 - string these words should not be
470:06 - translated and if you have any internal
470:08 - links you have to make sure that you
470:10 - replace them properly when you translate
470:13 - them because the internal links will be
470:15 - broken if you don't replace the ID of
470:19 - the target section with the ID of the
470:21 - translated document here we have an
470:24 - example here just make sure that the ID
470:26 - matches the ID of the element in your
470:29 - markdown files even after the
470:32 - translation so in the documentation we
470:35 - have many different details I'm just
470:36 - giving you a general overview of what
470:38 - you can expect right now we are focusing
470:41 - on these three main projects and finally
470:45 - we also find some best practices do not
470:48 - translate the content within the code
470:50 - text they indicate text that is found in
470:53 - code and should be left in English do
470:55 - not add any additional content if you
470:57 - feel a requires change in the text
471:00 - content or additional information you
471:02 - should propose the changes through a
471:04 - GitHub issue or a pull request that
471:06 - modifies the English file if you think
471:09 - that you need to change something in the
471:10 - challenge please do open a GitHub issue
471:14 - and do not change the order of the
471:16 - content okay to be consistent across
471:19 - languages if you have any questions you
471:20 - can also reach out on Discord and we
471:22 - will be happy to assist you at some
471:25 - point you may also want to become a
471:26 - proof reader right but how did you
471:28 - become a proof reader on free Cam's
471:30 - translation effort if we go down here we
471:34 - can find a section called becoming a
471:36 - proof reader if you have any questions
471:38 - or you're interested in becoming a proof
471:40 - reader feel free to reach out in our
471:42 - contributors chat room we will typically
471:44 - Grant you proof reading access if you
471:46 - have been contributing to free codam for
471:48 - a while so you'll need to contribute as
471:51 - a translator and then we can grant you
471:53 - proof reader access please note that
471:56 - crowding by default will allow you to to
471:58 - approve your translations if you become
472:00 - a proof reader however in general it's
472:03 - best to allow another proof reader to
472:05 - review your proposed translations as an
472:07 - extra safety measure to make sure that
472:09 - there are no errors awesome if you have
472:12 - any questions on the localization
472:14 - process or you would like to join our
472:16 - translation effort you're welcome to
472:18 - join our Discord chat server let me go
472:21 - back here we go to work on translating
472:23 - resources and here you can find the link
472:26 - Discord chat server there you can sign
472:29 - up create an account and contact us if
472:31 - you have any questions once you create
472:34 - your account and join the server you
472:36 - will see a welcome message with the
472:38 - start here localization
472:45 - Channel congratulations on reaching this
472:48 - part of the course you just completed
472:49 - the course and you're more familiar with
472:51 - the fundamentals of localization and how
472:54 - you can translate a project on crowding
472:56 - our localization management platform but
472:59 - the application that we buil and how we
473:01 - use the IAT next framework is just
473:04 - scratching the surface of everything
473:06 - that you can do with this amazing
473:07 - framework so here is a helpful tip for
473:09 - you you can go to IAT next.com to find
473:13 - the documentation for this framework
473:16 - there you will find a lot of information
473:18 - about the different features that it
473:19 - supports you can see that IAT next is an
473:23 - internationalization framework written
473:25 - in and for JavaScript but it's much more
473:27 - than that it goes beyond just providing
473:30 - the standard features such as plurals
473:32 - context interpolation and format it
473:35 - gives you a complete solution to
473:36 - localize your product from web to mobile
473:38 - and desktop here you can find a brief
473:41 - tutorial and you can see that this
473:43 - framework is compatible with many
473:45 - different JavaScript Frameworks and
473:47 - libraries it works with react angular
473:50 - VJs and many more you can also use I
473:54 - next with nodejs with Deno with PHP iOS
473:58 - Android and other platforms if we go
474:01 - here we can see all the supported
474:03 - Frameworks the list is not officially
474:06 - maintained so information here is
474:08 - contributed by the library maintainers
474:10 - themselves you can find more information
474:13 - here we can see that flutter also
474:14 - supports this for development for mobile
474:18 - apps react spelt next.js
474:22 - Angular JS angular here you can see that
474:26 - we do have some variations of the IAT
474:29 - next framework for example for react we
474:32 - worked with react IAT next and each one
474:34 - of them will have their own
474:36 - documentation but from the central
474:38 - website you can reach all of that
474:40 - information you have specific for
474:42 - angular for view jQuery HTML 5 and many
474:48 - more ember.js and the list just goes on
474:51 - and on like PHP rails it's very
474:54 - versatile and you have an entire
474:56 - ecosystem of libraries and fr Frameworks
474:58 - to work with which is always great if we
475:01 - dive deeper into the documentation we
475:03 - can see that we have a tutorial to get
475:05 - started with the framework you already
475:08 - know the basics but we used a very
475:11 - simplified approach for translating
475:13 - because our application was quite simple
475:15 - and it was a simple single page
475:17 - application this will give you more
475:19 - details about how you can use the
475:21 - framework like how you can use the API
475:25 - here in need and the different methods
475:28 - that you can call on the IAT next module
475:32 - like this here you can see a list of all
475:36 - those methods and if you click on them
475:38 - you can quickly scroll down or jump to
475:40 - that particular part of the
475:42 - documentation and they even include an
475:44 - example over here in JavaScript we also
475:47 - see the configuration options how we can
475:50 - pass the the options and a call back
475:53 - function you can find a lot of
475:55 - information about each one of these
475:57 - options over here a
475:59 - description we also see plugins and
476:02 - utils over here and we see typescript
476:06 - because you can use this framework with
476:08 - typescript as well here we also find
476:11 - information about the translation
476:12 - function like Essentials interpolation
476:15 - because with interpolation you can
476:17 - integrate Dynamic values into your
476:19 - translations that is great notice here
476:22 - like the basic interpolation example
476:24 - that we see over here we have the keys
476:27 - the key here and this string right but
476:30 - once we call the T we are going to pass
476:33 - this object and the value over here will
476:37 - be replaced where we find this
476:39 - interpolation in the original string so
476:42 - that is a great great feature working
476:45 - with data models as well you can also
476:47 - pass entire data models as a value for
476:49 - interpolation like this we have the
476:51 - author and you can pass it for
476:53 - interpolation over here there are many
476:55 - additional options that you can choose
476:57 - to work with you can find them in the
477:00 - documentation we also see formatting
477:03 - built-in formatting like plural rules
477:05 - list format display names number format
477:08 - local and date time format this is
477:12 - interesting because it will give you
477:13 - more information about how we can format
477:16 - these values we also see plurals over
477:19 - here how to handle the plurals with your
477:23 - keys how to handle nesting because with
477:25 - nesting you can reference other keys in
477:28 - a translation you can also add a context
477:32 - to differentiate the different
477:34 - translations for example you can provide
477:36 - gender specific translations and you can
477:39 - also work with objects and arrays to be
477:41 - used by third-party modules
477:44 - localization so you can find all of this
477:46 - information in the official
477:48 - documentation in the course I kept the
477:50 - example as simple as possible to make it
477:52 - General and as broad as possible for a
477:55 - wide community of Learners to get
477:57 - started but from here you can take this
478:00 - as your first step into the world of
478:02 - localization there's a lot to be covered
478:04 - here and you may dive into a more
478:07 - advanced course on IAT next I'm showing
478:10 - you like the basic principles and
478:11 - Concepts that you need to know you can
478:13 - also find best practices here that you
478:16 - should follow we also see translation
478:18 - resolution fallback name spaces and more
478:22 - advanced concepts this is for the IAT
478:24 - next framework in general but if you
478:27 - want to Di into a specific version of
478:29 - this framework like for example react
478:31 - you can go to react. next.com and here
478:35 - you will find the documentation and more
478:37 - information about this framework is
478:40 - specifically made for react and react
478:42 - native it's based on IAT next so you can
478:45 - find the general information over here
478:47 - in the general articles in documentation
478:51 - but you will also find specific
478:53 - information like the used translation
478:56 - hook that we used in our
478:59 - application you also have different
479:01 - components like the trans component and
479:03 - you can find a step-by-step guide on how
479:06 - to integrate it this is specifically for
479:09 - react but you can also go to the
479:11 - documentation of the framework for the
479:13 - technology that you are working with and
479:15 - after you dive into all the details of
479:17 - the localization framework you can also
479:20 - find more information about crowding
479:22 - where your translators or yourself are
479:24 - going to be working on the translations
479:26 - by going to crowding s base you can go
479:29 - here to support. crowding
479:40 - docomo here crowding KB where KB stands
479:44 - for knowledge base it's like their
479:46 - documentation where they keep all the
479:48 - details of their features and if you
479:50 - ever have any questions or doubts about
479:52 - how a feature works you can go here and
479:55 - check that in more detail you can see
479:57 - how how to create a project how to
479:59 - upload source files and they do have
480:01 - very helpful screenshots that you can
480:03 - check as well you can find translation
480:06 - strategies how you can manage a project
480:10 - project settings the translation process
480:13 - and the different features they have
480:15 - Integrations as well and for translators
480:19 - you can also find more information like
480:22 - a quick introduction to
480:24 - crowding information for volunteer
480:26 - translators and more information about
480:29 - crowdsourcing their account settings and
480:32 - how to join a translation
480:34 - project this is helpful as a an overview
480:38 - of the basic features for volunteer
480:40 - translators to get them started and
480:43 - ready to start translating your content
480:45 - they can also find more information
480:47 - about the translation process like the
480:49 - online editor with helpful screenshots
480:51 - and visual information so if you ever
480:54 - have any questions just go to crowding
480:56 - knowledge base and there you you will
480:58 - find the answers or of course you can
480:59 - always review the content of this
481:02 - course thank you so much for taking the
481:04 - course I hope you liked it and I hope
481:06 - you found it helpful for your
481:07 - localization project I will see you in a
481:10 - future course and I hope you have a
481:13 - great
481:15 - day

Cleaned transcript:

localization is the process of adapting content to suit the language culture and preferences of a specific target market we've been using crow in to localize the freeo camp curriculum and articles in this course you'll discover how to use crow in to streamline your translation processes enabling you to effectively reach a diverse International Audience by embracing localization you can significantly enhance user experience broaden your Market reach and ensure your content resonates with people across different cultures and languages as Stephania teaches this course she is an amazing instructor who also runs the free camp.org Spanish Channel if you speak Spanish I encourage you to check out that channel if you're new to the world of localization this course is for you hi I'm stepania software developer and course creator for free code camp we will dive into the world of localization you will learn how to translate resources and software on crowding a localization management platform with all the features and a free plan that you need to get started but why is localization so important translating and adapting your content and your platform is essential for reaching a global community of users right but there are many details faces and tools that you need to know to get started and to reach that final translated platform where do you start this course is here to help you understand all of this step by step it's it's for everyone who wants to learn localization whether you have a technical background or not or whether you're an individual a team or an organization this course will be helpful for you you can apply these principles to any project that you need to translate that's why we will start from the basics my goal is to take you from zero knowledge of localization to working knowledge and actually being able to translate a website and manage a localization project or team on crowding this is our road map ahead we will start by looking at Freo Camp as an example of an organization that is currently managing a localization project worldwide and how we are approaching this task from there with this context we will dive into the fundamentals of localization including important terminology faces and roles this first part is based on Theory but that theory I promise you will be super important when we reach the Practical aspects of of actually localizing and crowding our localization management platform we will create a crowding account and we will go through the most important features of this platform to get started as an individual team or organization this will be an indepth overview and by the end of the course you will know crowding in detail we will also cover how to integrate crowding with external services and platforms like GitHub and Google drive and how opensource and educational projects can get a free license for crowning Enterprise the last part of the course will be focused on actual development you do need to have some basic react knowledge to follow along step by step but only the fundamentals should be enough to understand what we're doing we will create a basic react app using the react IAT next framework then we will be able to switch the language of our react application and localize the text on crowding plus we will see four techniques and tools for translating a website including crowding Visual Studio code extension GitHub integration JS translation proxy and crowding in context for organizations when you complete the course you will know the theoretical and practical aspects of localization are you ready let's begin localization is waiting for us fre cam.org is an example of an organization an opensource project that has embraced the con conceptt of localization for reaching a global Community our coding curriculum is available in many world languages including English Spanish Chinese Japanese Portuguese Ukrainian and Italian actually if you go to our website right now and you click on this little icon at the top you will see a drop down menu with these languages and you will be able to localize the platform automatically in just a few milliseconds and you will be able to learn to code in your native language that is the power of localization opening the doors to everyone around the world without any language barriers our community is also actively working on translating free codam into many world languages including Bengali Dutch French German Hindi Korean sahili and many more we have many world languages available for localization because our goal is to reach a global community so we have these languages enabled and available in our localization platform we also run localized Publications YouTube channels forums and other resources but this is a group effort this is an an amazing effort made possible by the amazing free code cam community and the members of the free code cam staff because our localization process has one main goal to remove any barriers that could prevent someone from accessing the education they need and deserve that is our goal and that should be your goal if you're planning to localize your product or resource remove any barriers and let people or users or your community come to you and learn or enjoy your product without any barriers one of the key features of our localization effort is that it is performed by humans for humans our processes focus on what matters the most our amazing community of Learners who waake wake up every day around the world excited about learning new skills we believe that language and cultures should not be barriers for learning knowledge should be accessible worldwide that is why we started this process and why we will continue our localization effort one of the key aspects of our process is that it is managed and run by humans for humans translations are written and approved and checked by our amazing community and staff because let's be honest usually anyone can tell when a translation has been generated automatically we can detect it we can see it it's much more literal it lacks the clarity and sometimes it feels disconnected from the context and the original tone of the text which can take away from the meaning of the text or the original message of the content human translators are much better at adapting languages and translating sentences in a way that sounds more natural in different languages and cultures at come we have an amazing community of contributors who dedicate their time to translate and check our translations and an amazing team of Staff members Who oversee the process with the goal of publishing highquality translations for Learners since we launched our localization effort more than 2,000 translators and 60 proof readers have helped us to accomplish our mission if this sounds interesting to you and you would like to join free Cam's translation effort please find our contribution guidelines in the description during this course we will also talk more more about our localization effort and how we are specifically using our translation or localization platform to achieve our mission but managing such a large project with a worldwide community of contributors might seem complicated right how can we accomplish all of this as a nonprofit organization you will get answers to these questions during the course we will cover this from the perspective of a nonprofit organization but the principles can be applied to any localization process that you need we will cover all the fundamentals of localization specifically we will talk about localization on a platform called crowding the course will start with General localization Concepts the process and the different steps and roles that you can have in a localization team after that we will talk about crowding for beginners all the fundamentals of how you can localize a resource or platform in crowding and then we will talk talk about crowding for teams and organizations because if you are representing an organization you will very likely have to work with multiple team members how can you organize your tasks how can you assign tasks to different members that is possible in crowding and in localization Tools in general so we will talk about them in more detail and we will also talk about crowding for developers this part will be a bit more Technical and we will talk about different features of crowding that developers can use to autom made and improve the efficiency of the localization process are you ready we will also talk about how to localize a website because that is usually one of our main goals when we create a website right if you're trying to reach a global Community your website should be localized and you will learn how to do that in crowding and you will be able to apply all these general principles to any localization process that you need to complete awesome so let's start the localization fundamentals section we will talk about the key Concepts and the key phases and roles of the localization process so let's begin great so now let's start with an overview of the fundamentals of localization and the steps you will need to take to make sure that your platform can be used without any language or cultural barriers specifically we will cover the concept of localization and everything that localization involves we will also talk about translation and how translation can be a bit different from localization and we will talk about prove reading which is another phase in this process it's very important and we will talk about it in just a moment we will also talk about the most common file formats that you will find in a localization process so you're familiar with them and you know what they do and what type of data they contain and we will talk about the faces and roles of the this process to make sure that your project runs smoothly you can have managers you can have translators proof readers and more so that is basically what we will cover in this part of the course the fundamentals what is localization localization is defined by the Cambridge Dictionary as the process of organizing a business or industry so that its main activities happen in local areas rather than nationally or internationally in the context of products and services and platforms localizing something really means adapting that to the language and culture of a specific population this also applies to software products and our course will be focused on localizing software products because they need to be adapted to different cultures as well and we will see how during the course software also needs to be localized and the platform that we will be working with crowding is a software localization platform why is localization important let's say that you are an organization with a global community and you keep your resources in English what will happen with these communities that let's say do not speak English well then you will be closing access to those communities to your platform or service and if you're an education platform or an organization whose goal is to reach as many people as possible people around the world then you will need to create that Global community of Learners who are interested in your platform who can find it helpful and who can spread the word about your resources now localization is a bit different from translation you might be surprised to know that this concept is actually broader the Cambridge Dictionary defines translation as the activity or process of changing the words of one language into the words in another language that have the same meaning so notice the key part of this definition translating is just changing the words while keeping the same meaning it's very helpful but a bit limited because when we translate something we want to say exactly the same thing in a different language however localization can go beyond that let's say that you have a file in English and you want to translate it into Spanish what do you do in that case well you translate it and you say the same thing in Spanish localization can go beyond just translating the words it can adapt the content better to another culture or country when you work with resources in English you will usually find like feet inches and those types of units for measurement for length but in Spanish we typically use meters and centimeters so converting that will be helpful for your users readers and viewers another example would be adapting the colors here let's say that we have a website for a particular population and we have this pinkish color but let's say that you've done some research and you decided to adapt the website into a different color that is also an example of localization because you are translating your content but you're also adapting it to fit the local culture better what are the types of resources that you can translate because we're talking about translating resources right when we talk about translation we usually think of a text document right like a Word document or something that has text on it and that is a very common application of localization but the term is even broader because you can localize or translate many different types of resources spreadsheets websites games even scripts and movies podcasts or videos with voiceovers or by translating their subtitles and or even localize in the subtitles if you would like to use local terminology when we create resources we will work with many different types of files and text combined with video is also very common in localization projects localization is not limited to text format we will focus on software localization during the course but I just want you to know that there are many different types of resources that you can translate and localize let's talk about common file formats that you can work with in a localization project this will be a very quick overview I promise you okay there are many different types of files but I carefully chose those that are most common for you okay first of all we have text files plain text files with the txt extension they do not store any images or nontext characters then we find comma separated values or CSV files here we are going to store text but the values are going to be separated by commas each line will represent a record in your data and this type of file is commonly used for data exchange the file extension is. CSV then we find HTML files they are mostly used for web devel velopment they have a file extension of HTML hypertext markup language and these types of files represent the structure and content of a web page they can be opened in a web browser Json files are also very common to store data Json stands for JavaScript object notation but it's actually independent from any programming language this type of file stores key value Pairs and it is commonly used for data exchange especially across the web after that we find markdown files to create formatted text it's a lightweight format with a specific syntax that is commonly used to write software documentation and blog post but its applications go even beyond that we also find portable object files portable object files are more specific for the localization process commonly used for writing multilingual systems get text is used by development engines like the Unreal Engine and XML is also very common extensible markup language these files are used to store share and reconstruct arbitrary data you can represent the data in an arbitrary way that fits your needs it's commonly used to exchange data over the internet and it's very important for localization in particular because many localization Frameworks use XML for example Android and we also find these types of files x l i FF files the file extension is exactly that xli i f f it this stands for XML localization interchange file format specific for localization it's an XML based format it's used to standardize the way localizable data can be passed between localization tools and we can also see this xlsx files and they are usually used used to store data in spreadsheets we also find Rex files well we can pronounce it like this or re SX files this is the file extension it's an XML resource file that is used bynet applications for storying resources that can be localized and this is something that you might be familiar with it's more standardized and it's not specific to localization it's PDF files it's a portable document format has a consistent format across software hardware and operating system so it's very helpful you will always see the same format when you open an PDF file independently of where you open it awesome and now you know more about the localization process and the files that you can work with let's talk a bit about continuous localization continuous localization involves localizing a product continuously as it is updated or expanded in an agile product development cycle it's often used to localize software products with the traditional localization process we would for example write a book then we would translate it and we would have the translated version right and that could happen once every few years when we make some updates or changes or we have a new addition but now with the software industry everything has to be faster because we're constantly updating the software and changing things in our user interface and in our content that will be a continuous process that is what continuous localization is all about continuously localizing the product as it is updated and in this case the product would be our platform great so now that you know exactly what localization is and how it is applied in the software industry we can start talking about some key local localization Concepts that you should know localization terminology you will come across these terms very often in the context of translation and localization here we have internationalization internationalization is defined by the Cambridge Dictionary as the action of becoming or making something become International in the context of localizing a software product it also involves adapting the user interface for working correctly with other languages and making sure that it is ready to be translated after that we find the term culturalized culturalized is defined by the maram Webster dictionary as deriving from or imposed or conditioned by culture so culture here plays a key role because every culture has different traditions and vocabulary culture can play a key role in how communities Embrace different products campaigns and platforms so understanding how to adapt them is very important to succeed and you will usually want to get the advice of someone who is very familiar with the culture that you're trying to Target pseudo localization is another very important term but let's start with the prefix pseudo the pseudo prefix is defined by the cambrid dictionary as pretended and not real pretended and that is exactly what pseudo localization is all about we have the prefix over here pseudo localization it's like a fake localization process the process of creating fake translations that act as placeholders for the real translations of a product or platform but right now you may be asking why would we ever need to use fake translations the answer is very curious we use these fake translations to check if our software is ready to handle multiple languages even before the translation process begins because remember that usually you will have a budget before you even start to work with that budget for the localization itself you can check if your software is ready to be localized with this process that is very curious I know and it's a very important step in this process that you may have not considered before this moment one specific example of this would be checking if a language that tends to have shorter or longer words works well with our current user interface because some words may be longer and some words may be shorter how does the UI adapt to those changes and will that work correctly if you check on Free Cams website and you try to change the language in this little icon at the top you will see all the options in the drop down menu and after you click on them you can see that the user interface still works with different language even if they have different symbols if they're longer if they're shorter and that is also part of the pseudo localization process after that you translate the terms and you actually translate the platform but it's very important to make sure that the UI works correctly another example is making sure that the user interface is ready to handle right to left languages like this one some languages are written from left to right like Eng English or Spanish but other languages are written from right to left how is your user interface handling this is it prepared to handle that will you localize your product into this type of language those are common questions that you should ask yourself even before you start translating your software and pseudo localization can also be helpful to find any strings that may still be hardcoded in the project source files because when you start start translating your project you may need to move your strings to a specific resources file where you keep all the translatable strings but if you keep some strings that are still hardcoded they will not be translated and you will have that small issue in your user interface so pseudo localization can also be helpful to spot those cases that is the ultimate goal of pseudo localization checking if everything is ready to start translating awesome let's talk about machine translation machine translation is defined by Amazon web services as the process of using artificial intelligence to automatically translate text from one language to another without human involvement we will talk about this term in more detail during the course because the localization management platform that we will use to translate our resources has this feature which can save us a lot of time however these are usually not perfect and they will have to be checked before they are approved the process of generating machine translations is like this you upload your file to the platform of your choice and then the platform in their servers or in their infrastructure will start running a specific process with artificial intelligence here we have the little bot this is representing the artificial intelligence how cute once that process starts it will try to translate your resources automatically and you will have a translated file as a result however usually when you use machine translation the translations are not as accurate as they could be if a human translated the text so these translations will have to be checked however the process the automated process can save you and your team a lot of time because instead of writing all the text you will just be reviewing the translations and actually making the changes crowding the platform that we will be working with has this feature and I will show you how to create machine translations for your project great so now you know more about machine translation and now we can start diving into translation memory yes they are very similar in their acronyms we have Mt or TM and that is something that you should note they are very similar however they are very different please after we talk about these Concepts take a moment to understand their differences because we will see them very frequently and they can be confused translation memory is basically a database that stores segments of your resource these segments can be sentences paragraphs or sentence like units like headings titles or elements in a list that have previously been translated in order to Aid human translators so we will have like puzzle pieces the individual translations of sentences or different segments of our resources that we can combine automatically and review before we actually approve the translations but we will have them there in a database and we can make sure that we are being consistent in our translations because what happens when you upload a file or resource to a localization platform or tool usually the tool will divide your resource into many different segments that we call string when you see the word string in a localization platform that means a small segment of your resource that would be a file or a text file or any type of file that you uploaded to your platform when you upload your file to the platform the file will be divided into these strings right the string will be translated by your team or yourself if you are handling the translation process and after that you will have a translated string the translated string will be stored in a specific database of the service that you choose and that is how you gradually create your translation memory and then your translators can reuse the translations made by other translators to make sure that they are being consistent throughout the team that is great right so after that you can just take the string from the database and use it in your new transl ation it might not be exactly the same you might need to adapt it but it will save the save you or your translators a lot of time we have the database over here using the translation memory is helpful for saving time and for ensuring that you are being consistent while you translate the terminology and here we have what I was mentioning a few minutes ago the difference between TM and Mt these are acronyms that you will find very frequently in the localization tools of your choice we will find them frequently in crowding and you will find them often as acronyms so it's very important to differentiate them TM is translation memory it's the database and machine translation is Mt this is the automated process of creating the translations and this is the process of storing the translations in a database please take a moment to understand this difference because we will find them very frequently TM is translation memory and Mt is machine translation awesome and since we are mentioning artificial intelligence with machine translation that takes me to this concept of large language models llms you might have heard about them they are very popular right now with the rise of chat GPT and other similar models and chat Bots but what is an llm a large language model is a deep learning algorithm that can recognize summarize translate predict and generate content using very large data sets a large language model basically takes a huge data set and it learns from that data set it learns to recognize summarize translate predict and generate content based on the data set it was trained on so when you talk to for example Chad GPT and chat GPT gives you an answer to your PRP that is an answer generated automatically but it is based on the information or data set that the model was trained on that is exactly what powers these tools right now like chat GPT and other chat Bots that you can chat with to create content or to find answers to your questions these terms are fundamental if you're looking to dive into translation and localization and you will also find tools with artificial intelligence that are used exactly for this process because artificial intelligence is really changing how we translate and localize our resources the foundation of these models is called neural networks that work like the neurons in a brain generating different networks that process the data and generate a result so these are terminologies that you will find very often I just want you to be familiar with them before we find them in the platform another term that is super super super common and that you might be confused at first when you see them is numeronym numeronym are words that use numbers to represent an abbreviation for example in the localization context we find this L1 n that is a numeronym that represents the word localization the number 10 stands for the 10 letters that we have between the letter n and the letter N over here we have 10 letters since it's a very long word people tend to abbreviate it and they write the numeron name here but it's important to be familiar with this in this context and over here we have an even longer word which is internationalization and it's very common to abbreviate like this I 18 n the number 18 stands for the 18 letters between the letter I and the letter N at the end sometimes you may find the letter L over here in lowercase or in upper case but capitalizing the L is often helpful to distinguish it from the letter i that we have here because with certain fonts they can look very similar great so now that you're familiar with these Concepts that are fundamental for the localization process let's talk about prove reading when you translate something after that translation process comes the proof reading process the proof reading phase when you upload a resource to your platform form the resource will be divided into multiple strings right the strings will be translated and after they are translated they have to be approved by someone that process of approving the translations checking if everything is correct and also making changes if they find any inconsistencies or spelling mistakes or typos is called proof reading if they find anything if the proof readers find anything that shouldn't be there in the translations they can just modify it and make sure that you are providing the best translations possible for your users so we can Define improve reading as the process of checking updating and approving the translated strings translating and proove reading are two different stages of the localization process and we will look at these processes in more detail you will learn the steps involved and the different roles that team members can have to make sure that your content is localized correctly directly the role of proof reader is one of those key roles in the process and speaking of faces and roles let's talk about the different phases and roles of the localization process what steps are required for localizing a project where should you start here are the steps to help you answer those questions after you decide that you want to localize your platform or project there are many steps that you should follow or at least questions that you should consider first of all let's start with step number one defining the scope and the goals of your localization project before you start to localize any file basically it's important to take a moment to analyze these two aspects of your project the scope and the goals you should ask yourself questions like who is your target audience what are you trying to achieve how will you reach your goals do do you need to localize all your project files or just a few or do you have to create a new resources file to keep all your strings how will you localize the resources will you translate the resources yourself if you're bilingual or will you find a team to help you into how many languages would you like to localize your product what is your available budget to start with what is the timeline for your project are your goals realistic given your current budget if you're an organization will you involve your community in the translation process or will you hire a team to help you with that will you use automated tools like machine translation these questions are essential if you want to be successful defining clear and realistic goals can be very helpful for avoiding any unexpected challenges during the process you should write down your goals and make sure that you have a key outline of the steps that you will need to take to start execute and complete the localization process before things get more complicated planning from the start is the key to success now step two after you have all of that planned it's time to create the actual source files that will be localized source files is just a term that we use to refer to the files that you will localize the original files in your project having a clear initial idea of the complexity of a project will be helpful later on in terms of time management and budget required remember that planning is essential to save you time and resources if you have a very simple project then your course of action will be very different than if you have a very big project with many different thousands of millions of strings that you have to translate the complexity of the project will change your road map so Iz in that is also very helpful you should also evaluate how many times you will need to update the resources will you use a traditional translation process where you translate and then you just update the project every once in a while or will you localize your product continuously what type of tool do you need if you're going to localize it continuously those are questions that you should have answers for at this stage in the process and after that that step three is preparing your product for localization this is especially true for software products and this is very technology specific the tools that you use to internationalize a react app for example may be very different from the tools that you use for an Android application or an iOS application or even a game however the approaches and Concepts that you will use are essentially the same if you developing a web app application you will need to implement multilingual routing routing just means that you want to take your users into the specific part of your application where they can choose and see the content in their preferred languages to do this you have two options because it's very important for them to choose the right language and go to the right part of your website where they can access the resources in that specific language for that you will need to implement routing first of all you need to choose how you're going to represent that in the user interface and that is another UI consideration that you should be aware of but to actually implement this you have two main options you can either add the language code as a subdomain in the web application URL like this here we have for example the French subdomain for this website or you can also add the language code to the URL for example you can have it like this French language codes are also very important in the localization process and that is something that you might want to check as well when you start localizing your product there is a standard worldwide for how you can represent different languages with two or three characters like here we have French Spanish is es English is em and the type of abbreviation is also important for the actual implementation of this routing process these options are recommended for search engine optimization purposes so if you want to rank higher in search engines you should Implement multilingual routing with one of these options your software should also be able to handle and display any adapted numbers dates and currencies since localization may also involve adapting them into different formats for different different cultures let's say that you are creating an ecommerce app and you want to accept payments in dollars or Pounds or Euros you will need to adapt your user interface to show that specific symbol for the currency that the user has selected those are considerations that you should be aware of before you start the process and when you're making sure that everything works like you intended also date formats are very very important for example here we have a very different way to represent the same date if we are writing a specific date in the United States like this we can see that in the United States the day is written after the month but if we go to a different country like let's say Uruguay the day is written before the month in a date format that is the most commonly used format in in different cultures so this difference in how we actually represent the date is key to avoid any errors or misunderstandings in how the web app that you're developing or the platform that you're developing will be used by your users So to avoid any misunderstandings date formats is also super important to check another application is exactly what we were talking about here if you are accepting a payment in US Dollars you will have to write the symbol the dollar symbol but here if you are taking a payment in pounds from United Kingdom you will need to show this symbol in pounds how will you handle this in your user interface that is another very important aspect of internationalizing your web application another important aspect of preparing your software for translation is making sure that you are including the necessary context for your translators why because many internationalization tools just create the resource files where we keep all the strings but they created with only one key value pair for each piece of text they associate each piece of text in the source language in the original language to its corresponding translation but it's also very important to make sure that the resource files of your project include some contextual information of content and elements around them to choose the best translation possible try to include as much context as possible in your resources in your strings and finally another aspect is that your application should be able to handle pluralization correctly because different languages may have different numbers of plural forms some of these features may be available with the software development kit that you're using but you may need to add some of them using thirdparty libraries and that is always important to consider and check first however since it's very technology specific that is something that you will have to research about for your specific application great so that was step three internationalizing your software and getting everything ready if you analyze the scope of the project and you decide that you cannot complete it by yourself then it's time to assemble a team you may hire a team or if you are a nonprofit organization like free code Camp you can also use crowdsourcing to ask your community to help you with the translations you might be surprised by the number of general and kind members of your community who will be willing to help you achieve your goals with free go gam we are involving our community in a translation effort once you have your team or your community you can start to assign them roles and that is another key aspect of the localization process we will talk about Ro R specifically when we start diving into crowding but let's see a brief overview of these roles right now translators use the localization platform of your choice to translate the resources prove readers review edit and approve the translations developers work on more technical tasks they work on integrating the tools that you choose to automate the localization process as much as possible the developers can help you and your team to save a lot of time by automating tasks that are repetitive and that can be optimized and finally project managers coordinate the tasks of the project to make sure that the localization project moves forward smoothly as fast as possible awesome let's go to step five which is actually choosing the localization tools after you have your team and you know the roles that they're going to have you can start to choose localization tools choosing the right localization tool can be essential for reaching your goals in the world of localization there is a type of tool called localization management platform this type of system is designed to help you automate repetitive tasks with the goal of optimizing your team's workflow humans will still play a key role in the localization process but with the help of a translation management system or a localization management system they can reach their goals much faster usually these systems can be integrated with content Management Systems to import content automatically from other platforms such as blogging platforms for example let's say that you are creating a publication and you want to translate your articles if you have a localization management platform to work on you can usually integrate that with a Content man management system of your choice and keep your content translated by importing your resources then localizing them and exporting them as the translated versions with the proper Integrations translation Management Systems can also check if there're happening any changes in the source files and import new content automatically to start localizing it so that is a key aspect of data exchange between the localization management platform and content Management Systems a real world example of this process is right next to us free cam translates its resources on crowding when a file from free Cam's curriculum changes the new content is updated automatically in the system in crowding in our project so contributors can translate it and publish it very quickly automating this process can be very helpful especially for large organizations ations with different projects and files that's the advantage of using a localization management platform now it's time to translate the resources usually these platforms will divide the source content into what they call strings we already saw that concept right strings there are parts of the original text that you can translate save their translations and the software will take care of storing and combining them in the correct place in your file after you have those resources translated then it's time to prove rthm which is one of the most important phases of this process proof readers should check if the translations are accurate if there is a better way to adapt them to a culture or language they can check if there are typos or misspelled words and if the correct format is being used they can edit and approv their translated strings and approve the strings once everything is ready all those small details toils really count for the user experience so this step should be taken very seriously and after the resources and the translations have been Pro R it's time to export the localized resources if your project is small you have the option to do this manually but if your project is more complex you can choose to automate this process with different Integrations like we mentioned on your localization management system for example crowding the platform that we will be working with during the course has Integrations with different platforms including GitHub Google Drive Google Sheets Dropbox MailChimp WordPress and so on it has hundreds of Integrations that you can add to your project to synchronize the content automatically if your translations are ready and approved for example in the context of GitHub and you set up a GitHub integration the translated files will be updated automatically in your Project's repository you can even configure where the translated files will be stored that is the importance of Integrations and after you have everything set up after exporting that automatically or manually your project will be translated but you should still check for changes because projects and platforms can evolve over time files can change as you add new features and content and this is especially true in the context of free code cam because we add new content and update our existing curriculum on a regular basis awesome so now that we covered all the localization fundamentals we can start talking about crowding fundamentals for localization projects we will talk about crowding you will see how we are applying all of these Concepts in this particular tool so let's continue great welcome to the second part of the course now we will dive into crowding fundamentals so let's begin crowding is a localization management platform that can be described as a cloudbased solution that streamlines localization management for your team that is exactly how crowding defines the platform crowding can be used by individuals by teams or by organizations we will talk about the different features and some of these features even overlap between teams individuals and organizations we asked the founder of crowding how he would describe crowding in five words and this is what he said continuous localization for modern companies so that is what crowding is for you will be applying your knowledge of localization on this platform and you will even learn how to localize a website with crowding services and Integrations the main goal of crowding is to expand the potential of agile localization agile localization ization can be defined as a process in which localization is incorporated into an agile product development cycle a cycle in which a product is constantly being updated in an iterative approach so you launch your product you get feedback you update it based on the feedback and that process is repeated in a cycle continuously in this context the word agile is being used to describe the localization process the translations are continuously and updated as the product changes however constant updates also require constant management teamwork file uploads and downloads and exports platform deployments and so on the process could become very complicated very quickly if your team does not have the right tools but with a localization management platform like crowding you and your team can save time and accomplish your goals more efficiently that's the ultimate goal to localize the product as quickly as possible as it evolves that is the cycle that we are referring to here and that is exactly what free Camp does now let's talk about the advantages of crowding why you could choose crowding as your localization management tool you can connect with external Services through integration to automate part of your localization process you can store translations on cloudbased services and Grant access to team members and contributors from all around the world with different roles and permissions you you can also generate machine translations automatically when a resource is created and ask translators to check and edit them to save time your team can also check the quality and format of the translations with crowding quality assurance spellchecking and proof reading features and you can also generate reports create custom workflows assign roles and permissions invite new members and more so as you can see it's a platform that will make the localization process much easier for you and your team crowding has a free plan that is what we will be working with during the course sometimes we may see if some features that are specific for organizations since pram is a nonprofit organization we have a different plan the crowding offers for nonprofits but for individuals who want to start localizing their content for free all the essential features are included like unlimited public projects one private project 60,000 hosted words one integration with an external service features for translators efficiency and unlimited translators in the public projects that you can have that is a free plan for opensource projects and educational institutions like fre Cod Camp crowding has special licenses if you want to use crowding for an open source project sign up for a free account set up your project and send the team the crowding team a request apply for an academic license if your project has educational purposes each granted license will include an unlimited number of projects strings and members so if you're an educational or opensource project or institution you can contact that team specifically for open source and educational projects let's talk about important terminology for working on crowding strings we talked about them but now let's define them formally strings are smaller segments of the original text from your file that can be translated and saved individually into all the translations already they are combined to generate the localized version of the resource that you need that is important to keep in mind we also find the term Source language The Source language is the language of the original resource for example free code com's Source language would be English since our curriculum and documentation are originally written in English we also find target language this is the language that our resources are translated into it's important to know the differences source and Target a project could have multiple Target languages okay like for goam or you could have only one target language if you only want to translate your resources into a specific language we take the source language and we translate it into the target language QA checks stand for quality assurance checks these are automated tests that check if the translations have the correct format and spelling crowding has many QA quality assurance features that can help your team find and fix potential errors and they're essential for the proof reading phase of the process QA stands for quality assurance that is very important and then we find the term glossery glossery is basically a database of important terms in your project with their corresponding meanings one is a glosser helpful well it gives your translators more context about a specific term and it helps them to choose the most accurate translations for a particular word great and then we go to screenshot a screenshot is a picture of what you can see on your computer screen at a particular moment in time if your localization management platform supports this you can upload screenshots and Associate them to specific strings to give your translators more context of where this the specific string appears on your platform or resource and after that we also find crowdsourcing we mentioned this before but now we're going to Define it formally crowd sourcing is a localization practice based on community cooperation it's basically engaging your community in the localization process fram's translation effort is an example of crowdsourcing we also find pre translation it is an automated technique to translate your project automatically using machine translation or translation memory when you upload your files remember that we talked about machine translation and translation memory before right we Define them individually but now we are applying both of them we are combining them to form a new term called pretranslation we can either take the translations from our existing translation memory or use machine translation to translate new terms but the important thing here is that it is an automated process and we also find Integrations crowding has hundreds of Integrations and we will cover some of them in the course they are connections that you can make between crowding or the localization management platform of your choice and other applications or Services you could have an integration with GitHub Google Drive Google Sheets and finally the last three terms that we're going to Define here are more technical in nature for developers but it's important that you even if you're not directly related to the development aspect of the process it's important that you understand what they are first we find web hooks web hooks are automated messages that an application or platform will send to another application or platform when specific events happen basically what happens with a web Hook is that you have two applications let's say that something happens in one of those applications when that happens you will be able to communicate between the platforms and through web hooks run a specific process to handle that event and finally we will talk about the concept of an API an API is an application programming interface this is a more Technical and development oriented term it's basically an intermediary software that allows two applications to communicate with each other by sending information following specific protocols and rules of course crowding has an API that can help you to integrate localization into your development process in a more automated way and those are all the most important Concepts that you will need to know to get started with crowding so let's start diving into crowding and let's go to their main website crowding dcom we will see how you can create a crowding account and we will start translating a file so I will see you in the next part of the course great so after this detailed but super important introduction into the fundamentals of localization now it's time to dive into practice and actually start working on crowding so let's see how you can create your crowding account the first step is to go to crowding dcom this is where you can access all the resourc sources tools and products of crowding crowding is an example of a localization management platform like we've been talking about we see continuous localization you're already familiar with this concept and you can see that crowding is mostly focused on software localization but we will also see examples of other resources like translating PDF resources to illustrate all the basic functionality and then you can apply these tools and principles to other types of resources like mobile apps games websites and other types of products after you land on crowding dcom you will see this green sign up button you click here and then you will be taken to the register page start your localization Journey with crowding and here you will see two different options crowding dcom which is selected by default and crowding Enterprise crowding decom is where you can create a personal crowding account for a small team and crowding Enterprise is more oriented towards organizations if you register for crowding Enterprise you can create a new organization like for example free code Camp is a nonprofit organization and crowding has special plans for nonprofits for open Source projects and for educational projects and they can create in an organization for free and you can also try it for free for 30 days so let's see how you can register here forcing.com first of all you will need to write your email to sign up for a new account then you will have to enter a username a password and you will need to agree to the terms and conditions and your privacy policy you will also see a check by Cloud flare over here so let's do them I'm going to write my email over here and then I'm going to choose a username let's say Stefania demo after I do that I will need to write a password once I see that the password is strong I can still make it stronger let's just add and something else here okay great now it says that the password is secure secure should be your Target because it will be give you the highest protection against any type of unauthorized signin or someone using your password it's always prefer to reach this level of security so let's just agree to the terms and conditions and let's create our account if you're already a member and you're already registered for crowding you can click here to log Lo in okay so next time when you are logging into your account just click here and you will be able to enter your email and your password so let's create an account awesome this is the main dashboard or the main screen that you will see when you create your account you will see that you will need to verify your email to be able to reset your password receive email notifications and enhance security so let's just go to my email and let's confirm this before we actually start to dive into the different elements that we have here because crowding is very powerful if I go to my email over here I can see that I have an email from crowding excited to have you on board welcome Stefania demo thank you for trusting crowding with localization to secure your account and receive email updates about the activities in the projects you create and join please confirm your email by clicking the button below here I'm going to click on this link and I will open a new window and I will see this thank you for verifying your email and now I can just close this confirmation message and now I have a verified crowding account with a verified email so everything is ready to get started right now I am on a free account so we will see all the features that we have available if we go to crowding dcom again landing page and we go to pricing over here we can see that they have specific plans and what we're going to cover in the first part of the course is related to the free plan they have a free plan to start localizing your content for free with all the essential features for translators included unlimited public projects 60,000 hosted words one integration features for translator sufficiency and we will talk about many of these features in the course we also see one private project and that is great because we're going to work with one private project during the course but you can also create unlimited public projects and you will also be able to add unlimited translators in public projects just note that users on a free plan donate their translations to crowding translation memory remember that we talked about translation memory where the it's like a database of all the strings that have been translated in a project project that you can reuse well when you use the free plan you donate your translations to crowding translation memories so they can help others to reuse those translations and after you have your account already created let me show you how you can log into your account again if you sign out and then you want to log back in you just go to Crow in.com you click on login over here and in crow.com you just need to enter your email and this is the email that I used to register and this is my password I'm going to log in and now cing is asking me if I want to stay logged in they can remember your session so you wouldn't need to log in as often you can choose to do that or not it's definitely up to you you will see your username over here not now and voila we're back at the dashboard the main dashboard if you want to log out of your account at any moment you just need to click here on the profile on your profile image and go here to log out that will log you out of your account and then you can log back in awesome now you know how to create your account how to log out and how to log in again whenever you want to work with crowding great and now that you know how to create a personal account on crowning decom let's also check how you can sign up for a crowding Enterprise account in case you are representing an organization like free code Camp a nonprofit organization or another type of organization and you want to try crowding Enterprise to do that you would just need to click here on crowding Enterprise then enter your organization name this will be the URL of your organization on crowding so here you could have for example free goam demo. crowding docomo here your username and your password and agree to the terms and conditions and the privacy policy you will need to follow a similar process to verify your email like we did before and after that you will have your organization ready if you want to enter an existing organization just click here and you will be able to enter your organization's URL for the course we created a demo organization free codam course demo. crowding dcom and after you enter the URL you just click here on continue and you will be able to log in to the Enterprise with your email or username and your password you can also get a magic link to sign in without actually entering your email or password but let me show you how this works and what you would see once you're inside your crowding Enterprise account I am going to write my email and my password crowding is asking me if I want to stay logged in we can't remember your session so you wouldn't need to log in as often so we can choose to stay logged in or not right now you can choose either one of these options then you will see crowding logo and over here this is the main dashboard that you will see for a crowding Enterprise account you can see it is very similar to the dashboard that we had for the personal account with a few differences and we will be covering them during the course as well we will see how you can use crowding from the perspective of an organization or Enterprise great so let's continue now let's see how you can actually activate your free plan on crowding currently you can do this by going to crowding if you click here on pricing and you are logged into your account as I am here in my Stefania demo account you will see this plans for everyone and over here you can see the free plan you can also see your current account usage here you may find that you're using some Advanced features and if you don't see the option to upgrade to the free plan then it might be because of this and you may need to remove some Advanced features for that you may have used during the trial but to activ AC at the free plan you just go here and you should see this button but highlighted in green if you click on this button then you will be activating your free plan and you should see a confirmation message the confirmation message should be similar to this one get started with your free crowding plan create unlimited public projects and invite translation agencies or your community to translate remember you go to pricing then you click on this button which should be green to enable it if you don't see this button as an option then you may have some Advanced features enabled in this case you can have up to three file formats and that is included in the free plan but if you see other things here under this category this may be preventing you from getting your free account so make sure to remove them and then click on this button great so now let's see how you can customize your profile one of the first things that you might want to do after you create your crowding account is to customize your profile so let's do that after you create your crowding account you might see this short message and Survey that you will only see once after you create your account it says welcome to crowding we're glad to have you on board let us know you better so we can customize your experience how would you describe yourself here you can choose one of these options localization manager developer or translator Pro reader you can also specify how you would describe yourself here by writing a brief sentence and then you can click on submit or you can just close the short survey you can answer it or close it it's totally up to you so for now let's close it and now we can see the dashboard like you will see it after submitting the survey great so once we have that ready it's time to do one of the the first things that you will probably want to do after creating your crowding account which is customizing your profile to customize your profile you just need to go here and click on the small profile image which will have your initial there it's at the top right and then after you click on it choose settings from the dropdown menu like this in your settings you will see many different tabs but the first one is profile in your profile you will find many many many different settings over here but let's talk about them in detail first we find your profile picture you can drag a picture here or select a file from your file system you can also remove your current image this button will be enabled when you customize your image then we find general information like full name your first name and last name your username which you can just change whenever you need to of course if it's not already taken by another crowding user we also see our email this is not publicly visible the email will be used for account related notifications like password resets project activity updates and invitations to projects you can set up an additional login method to have an alternative for accessing your account and here we have an option to connect that to protect your account that is recommended after that you can also write your company your job title and pronouns he him she her or other or prefer not to say by default you will see this marked I will choose she her and after that you will see about me you can write a brief description of yourself and that will be shown publicly on your profile if you choose to make your profile public we also see crowding language English here you will see your time zone it might be customized you might might need to choose it from the drop down menu and you can filter like for example Monto from youry we can see it over here if we need to choose it but you can customize this like you need to then the time format is either 24 hours or a.m. p.m. the time format that you will see in crowding and here we have a list of preferred Languages by default you will see English but you can also add other preferred languages let me show you how you can add Spanish for example if you write Spanish here you can filter the list to all the items list items that have the word Spanish I'm going to choose Spanish in general over here and after you check the check box you will see that language appearing over here and here you can Mark a language as native are you a native English speaker then this should be selected are you a native Spanish speaker then this should be selected okay you will see that it is saving your changes automatically over here and what happens if you just want to remove a language you select it by mistake or something like that and for some reason you want to delete it just click on it like this and you will delete it from the list awesome right you can also just search here but filtering the search list is always super helpful and the the options are very specific you can choose the language from a specific region or country so you have English from from Puerto Rico you have English from Japan you have English from India so it's very specific and you can customize this to fit your needs after that we also see a new Option appearance you can select how you want crowding to look select a single theme or sync it with your system automatically switching between day and night themes you can choose light theme dark theme this is the Dark theme let me show you this the Dark theme or you can make it match the current theme of your system in this case I have a light theme because I'm recording this during the day so it might be helpful for your eyes if you just C sink it to your system but for now let's just keep it in the light theme and finally privacy this is very important you can height the projects and it tabs from displaying publicly on your profile page if you check this checkbox you will make your profile private by default it's not private so you should be aware of this and go here immediately if you don't want your projects and activity to be public and finally the last option is deleting your account but you will see a shiny red button over here because deleting an account will immediately delete all the projects created under your account and all the associated data deleted accounts cannot be restored not even by the team apparently based on this message so be completely sure that this is what you want to do when you press that button delete account awesome now you know how to customize your profile here in your account settings you will see other tabs like account notifications API security log o off and and beta features let's just have a quick dive into these options so you can see them your account tab has the the option to change your password you can also have your security Keys over here which are physical devices that add an extra layer of security to your online accounts you can register your security key here and you can also enable two Factor authentication to increase your account's security you can click here on enable to enable it and you can also create create SSO connections manage the accounts you have linked to your crowding account these connections allow you to log into crowding with a single click and remember that you have the option to log in with your Google account your Facebook account GitHub X and gitlab account and here you see a list of devices that have logged into to your crowding account and you can revoke any sessions that you do not recognize so this is for your own protection and it's a great feature you can also choose to revoke all the sessions if you need to after that we have notifications where you can customize all your notifications slack integration product updates H notifications you can set up a custom channel for the notifications and these are your Global notification settings you can send notifications for users and roles Integrations new strings language progress API integrative vendors content issues mentions tasks messages discussions and API notification you can choose whether to send the notifications in app or by email and if you just deselect this you will be deselecting all of them at once but if you enable this you will be enabling all of them and you can also disable that by email as well or you can enable and disable them individually that is great you can customize it to fit your needs and we will talk about these features in detail during the course after that we also find the API because crowding has an API that developers can work with the crowding API version two is a fullfeatured restful API that helps you integrate localization into your development process you can create personal access tokens for authorization when working with the crowning API the command line interface some of the Integrations and plugins here is where you can create a new token if you need to you have your personal account security logs all the login events and all the events related to your your account you also have o off applications you can create o off applications to access the crowding API and here we have some beta features that you can choose to enable if you would like to try them but they are experimental and still in developments so they are not quite ready for production they may change break or disappear at any time you can enable this if you would like to participate on that beta features testing process awesome now you know how to customize your profile and we talked about your account settings so let's start diving into the Practical aspects of croing and let's create a project in the next part we will create our first project in crowding great so now that you know how to customize your profile let's create a project we will do that from our profile page if you're in a different part of the platform like your account settings you can go back to your profile page by clicking on this small profile image at the top right and then clicking on your username here the first item that you can see in the dropdown menu yes you can do that or you can also click here and go to home this is your homepage this is where you will see all your projects you can explore other projects you will also see your activity your account activity over here in the activity tab to create a a project you have two different options you can either click here on the green create project button or you can click here on this gray button they are both equivalent and they both take you to exactly the same page so let's click on the green button since this is usually what we see first and that will take us to a page where we can fill fill in all the necessary information for our project like our project name our project address here this is the URL where we can find our project it must be unique if your project has multiple words and you write the those words here in the project name they will be connected here so let's see this free code Camp project demo you can see that as I type these words the project address is filled in automatically and the words are connected by a hyphen over here that is very helpful because URLs cannot have spaces so they have to be connected by hyphens and this URL has to be unique if this URL is not available on crowding then you will see a warning and you will need to add some variation to the URL you also see project privacy settings if the project is public they will be visible to everyone you can restrict access to specific languages after the project is created that is for a public project but by default the project will be private if you don't change this option a private project is visible only to the invited project members and we will see how you can invite project members in the part of the course where we talk about teams and collaboration for now let's keep our project private since we have a free account and the free account includes one private project after that we find the source language remember that we talked about the source language The Source language will be English we're going to translate a PDF file to show you all the basic features for now all the basic features and the PDF that we will be uploading will be in English so that will be our source language if you click here you will see a list with all the available Source languages that you can choose from you have very specific options so let's say that you want to filter the list by Spanish you can filter the list by Spanish and you also see Spanish specific to each one of these countries or you can also choose Spanish in general so that is great you can filter the list and after you choose the source language you will need to choose the target languages you can have one target language or multiple Target languages and crowding gives you that option to customize your project to fit your needs you can choose as many as you need you just need to check their check boxes and they will be added so let's let's say that we we want to create a demo project with a target language in of Spanish Japanese Italian Portuguese and we also want Portuguese Brazilian and Bengali as well let's just choose these languages to show you that you can select multiple Target languages and you will see them added to this list if you want to remove all the languages at once you can clear the list here by clicking on this trash can or you can also remove them individually by clicking on the language let's just remove Spanish and that will remove it we can add it again if we need to no worries you can also sort them alphabetically or sort them by popularity that is very helpful and it will also apply to your search another great option that you can use is that you can prefill the list with the top to 30 languages that are most popular on crowding without having to select them manually so if you're starting a project and you want to use crowd sourcing and you want to start translating your project to the most popular languages this option will save you some time you can also create custom languages as well that is another amazing feature that we have here on crowding if we click here on custom languages we will see the option to add a dialect initially you will not see anything because nothing to there is nothing to display we don't have a custom language but if you do need to create a custom language you can click on ADD and then you will be taken to this dialogue where you can write the name of the language it choose if it is a specific dialect of another language you can see the the language code on crowding how that language will be described with a a specific code you can also write a three letters code and a local code an example would be like English but from Great Britain if it's very specific to a region after that you have text Direction because some languages are written from left to right while some of them are written from right to left so you can choose the text direction for the custom language and you can also select the plural form different languages have different plural forms you can read more about adding custom languages if you click here and you will be taken to crowding documentation where you can learn more about these settings but it's great to know that this option is available let's check our settings before we create the project project name free cam project demo project address is free cam project demo it will be a private project and we can change this later on if we need to but for now we're going to make it private we also have the source language in English and we're going to choose six Target languages great so after you have all that information ready to create the project just click here on create project or if you decide that you don't want to create the project just click here on ccel and now let's just create the project we click here and we see project created successfully over here great if you choose to create a private project when we create our first project we will see this message this is the current state of crowding at the moment it might have changed at the time when you are taking the course but right now we see this message of the trial expiring in 14 days but this is a trial of the premium features in crowding after the trial expires we should go back to a free account with the features that we saw one private project unlimited public projects and a maximum number of hosted Words which was 60 60,000 words so you will still keep your free account after the trial expires great so now we have our first project in crowding free goam project demo of course it will be empty at first but don't worry we will take care of this in just a moment we will be uploading a file and we will start translating but first let's have a quick tour of this project and the different tabs that we have over here and how you can find all the information you need for your project we will do that in the next part of the course so I will see you there awesome let's have a quick tour of the project so you know everything that we have available here first we can see the name of the project over here next to our username here we can see the privacy of the project it's private otherwise you will see public here you can create one private project and unlimited public projects with a free account on crowding you can also see the project over here on this sidebar where you can find a list of all your projects and you also see the option to create a new project from here that is great because it is available here you don't have to go to your home again once you have this on the sidebar if you need to create a new project after that we find several different tabs let's go from left to right we start with the dashboard tab in the dashboard tab you can find all these elements let's let's talk about them first you have a filter to filter the list of languages that you chose here you can see all the target languages that you selected when you created your project we see Bengali Italian Japanese Portuguese Portuguese Brazilian I also selected this to show you that we will have them as independent like languages on the dashboard and we also see Spanish over here for each language you will have a list item with specific information in this bar you will see the progress of that language you will see them being filled with green and blue bars and they represent the percentage of the strings that have been translated and approved for that specific language right now if we click on them we see that there are no files to display but we will take care of that when we upload a file next to them we also see the details of the project we see the source language English project members one right now because it's only me words to translate zero the project was created 2 seconds ago yes that was really fast and the last activity was 8 minutes ago the quality assurance checks that we talked about in the slides remember when we talked about important terminology for crowding we saw quality assurance checks right now they say that there are no issues of course we have no files so there are no issues and we see the managers the project manager is currently my account I am the project owner and we will see how you can assign different roles to different team members in the course and you can also contact me here on this link so that is very helpful as well here we see a tool to search this will filter the list of languages so like let's say that I want to find Spanish here I just write Spanish and it will filter the list to show me only Spanish or other variations of Spanish local variations if I write Portuguese I see Portuguese and Portuguese brasilian this is especially helpful for many Target languages for example free code cam has more than 30 languages more than 30 Target languages available for translation so four are organization's project this feature can be helpful we can also choose how to sort the languages sort them by default order alpha numeric order completed first or uncompleted first if we want to see all the completed languages first we choose this option all the languages that still need some work first then we choose this option or just sort them alphabetically Alpha numerically and here we can see them in a different present instead of showing them as a list like this we can also choose to show them like in a grid which is a more graphical option I personally like this a lot and I like the fact that they include specific Flags or the language code it's very visual so you can choose the option that you like the most here we also find pre transation remember what we talked about pre transation yes we find it here pre transation can be done done via TM or via Mt remember the difference between these acronyms yes everything that we saw in the previous section with the slides is coming back to us we see TM which is translation memory the database of everything that we have translated before we could use that for the pre transation or we could do that via the machine translation which is like an automated way to translate your files and then of course you would need to check the automated translations but you can choose which method to use for the pre transation and here you can go to the editor to start translating but right now we don't have anything to translate so let's not go there yet and you also have the option here to enable notifications Global mentions only or you can also mute project these are the different settings you can experiment with them and see what works best for you that is what we have on the Das dashboard tab for the sources tab we have another set of tools this is where you will see a list of all the files that you can translate right now we don't have any files to translate so we can use one of the following options to upload our source files we have the option to upload files from the our device they also support zip archive so that is also helpful in case you have a zip file you can use sample files from crowding to explore explore how the platform works we can set up an integration with the repository or other supported systems as well and we can invite developers to help us with the project setup so we have everything we need here we're going to upload our file from our device in just a moment we can see our files or we can also check our strings right now we don't have anything to display we will have them when we upload the file we can also group our files into folders here we can see that we can create a new folder and we can create a new version branch and we can add a file this is equivalent to clicking here to upload file okay and we can create strings Vault or set up an integration like we have over here so we just have multiple buttons to do exactly the same but they are both helpful and here we also have the trash can icon in case we would like to delete some of them great then we go to translations the translations tab in translations we have the option to upload existing translations and we will talk about that in just a moment we can also download our translations as a zip file if we select a language one of our Target languages then we can just build them and download them as a zip file we can also create Target file bundles but this is a bit more advanced and we can also set up over theair content delivery with Amazon web services and other services that you can use for this but this is a little bit beyond the scope of the course you can always learn more about this these features on the crowding knowledge base in the screenshots tab we have the option to upload screenshots to provide translators with more context this way you can significantly improve the quality of the translations because for example if you're translating a website it you have some strings on your website you have some text you might want to take a screenshot of the specific part of the website where the strings are are displayed and that will give them some context to provide the best translations possible here we have the tasks tab where we will see tasks that we have created for the project we will talk about tasks when we reach the part on teams and collaboration tasks are very helpful in crowding for especially for project manager and for making sure that the project runs smoothly here we can also find the members tab right now I am the only member of this project but if you are planning to add multiple members here you will see a list of members you can search members by name or username you can filter them by rols you can assign them different roles of course and we will also talk about that but you can filter them here and you can filter them by language as well if you select one or more members of this list you can also choose to contact them or uh you can also delete them in this case I am the owner so it cannot be deleted but you can also delete them and you can invite members another key thing that you might miss because it's right here to the right very apart from the filters is this option if you appli some filter like this and you just want to clear it you can click here on clear filter and all the filters will be cleared and if you have multiple Pages you can just go through them here on these arrows after that we find Integrations this is where we can add Integrations to our project and we can filter them reports will show us reports of our project we will also see them in more detail but right now we don't have enough data because we do not have any files but in the projects you can check the project status the translation cost Top members as well Top members of your project and here here we can find the activity the activity for this project right now is just one item I created this project and we can filter that by specific types of activities like project builds project setting updates Source strings updates translation activity comments and issues we can also filter the activity by languages for example we could check for Source string updates in Italian let's say and we could also filter the activity by user if you would like to check the activity of a specific user in the project and if you need to clear the filters you always have that option here great we just have three more tabs one key aspect of teamwork that will make your project run smoothly is communication and that is what discussions are for here we can create new discussions with this button and we can mark them as open or closed and filter them by language or by author the discussions are very helpful to discuss or talk about anything related to the project that you think should have input or feedback from multiple team members you can do all of that within crowding you don't need to go to an external tool to do that to create a new discussion you just click here on new topic and then you write the name of that topic the title you choose the language related to the topic or you might choose not to specify the name if the topic is not related to a specific language and then you just ask a question or start a conversation here and this supports styling with markdown so you can use markdown you can add bold text you can add headers and that is very helpful to format your text appropriately you can write it here and if you need to preview it you can preview it let me just write this something like heading one and in markdown we create a heading with a hash symbol and if you want to preview it with the final format you can just preview it over here great after that you just create the topic and you will see it in your list of discussions and over here we have some additional tools like the command line tool the crowding API web hooks we talked about web hooks which are like messages that are warnings that we and when something happens in an application that means setting up a notification for key events in your project and you can also translate your web application with a realtime translation preview with crowding in context and finally we reach the project settings talking about the project settings let's dive into the settings that you can customize for your project there are many settings and we will go through them in detail so we will do that in the next part of the course so I will see you there let's dive into the settings and talking about project settings let's dive into the settings that you can customize for your project here we have our free code cam project demo you will find different categories of project settings including General privacy and collaboration languages quality assurance checks translation memories glossaries and different options for your content like importing exporting labels parser configuration and file processors some of these settings are more advanced but let's have a general overview of what you can customize first of all by default you will be in the general settings the general settings include the project name the public description of your project and branding for example you can set a custom domain for your project to get an access to the custom domain name you need to create a cname DNS record in your hosting service and only the https protocol is loone here you also have the option to invite a developer if the developer is the one who is going to be creating the custom domain you can also set a Project logo by uploading an image with these formats it can be a JPEG image a PNG image or a GF file and after branding we find the batches you can choose to display batches to share the localization progress of this project via a batch image and this is a preview of the batches you can embed batches on your website or read me so your app fans can see the localization progress and help you with translations currently the batches are disabled okay but this is a preview and you would see the percentage of the progress of your project over here and the last option that you can see in the general settings is the option to delete a pro project but be careful with this because deleting the project will permanently delete all the resources associated with the project including any uploaded files translations approvals and Etc deleted projects cannot be restored so be really careful with this if you choose to click on this button this is for the general settings then we find privacy and collaboration settings you can set the Project's visibility like making the project public or private a public project is visible to everyone you can restrict access to specific languages after the project is created and if you choose to make your project private it will be visible only to the invited project members and we will see how you can send those invitations in just a moment when we reach the part on team and collaborations after that you can also see some privacy settings this was the visibility now we go to privacy you can choose to Ena or disable all of these options like task based Access Control if you want to allow offline translation this is selected by default if you want to allow proof readers to access hidden strings if you also want to allow project members to manage glossery terms or show machine translation suggestions connected with the machine translation engines that you choose they will appear as suggestions in the editor if you have this option enabled and the last category here are notifications notifications for translators when there are new strings to be translated if you want to notify project managers and developers about new strings and if you want to notify project managers and developers when a language translation or proof reading phase has been completed those are important notifications you can just enable them or disable them by clicking here on their check box great that is for privacy and collaboration now let's go to translation settings first we find languages initially when we created the project we chose a source language and a target language then here we can change that and even add custom language codes if we change the source language that might cause a plural form mismatch according to crowding for imported strings if your new source language differs from the initial one in plural forms it's recom recommended to update the source files accordingly okay so that is recommended you can choose it from this list that you have over here it's quite comprehensive you will find the language and specific local variations of that language for specific countries you can also change the list of Target languages remember that we selected six languages here right you can just delete a language if you need to and save your changes by clicking here or you can also add new Languages by selecting them over here it's basically the same component or element that we saw when we created the project and if you just want to remove all the target languages you can click here awesome now that you know how to change these languages let's go to QA checks remember that QA checks automatically highlight all the possible mistakes in the translations prior to their approval they're very helpful because detected issues will appear in prove reading mode and your proof readers can check them and fix them if necessary this is where you can customize what you want to check automatically you can check for empty translations length issues tax mismatch spaces mismatch barbles mismatch punctuation character case special characters basically anything that can go wrong when you try to translate a string any typos any mistakes like incorrect translation issues or spelling or typos or also making sure that you use the terminology consistently with the correct translation for specific glossery terms you can enable or disable each one of these QA checks for your project and then you just need to click on save to save your changes and over here next to each one of these checks you will see the type of warning or error that you will get for these issues that are detected in your project for example if the translation exceeds any predefined length limits you will see an error here but you can also change that to a warning error would be the highest priority for those issues and warning would be something a little bit of a lower priority awesome and you can also disable all QA checks simply by clicking here this is a faster way to do that if you just want to disable or enable all the quality assurance checks this one will not be selected by default you need to select it and enable it manually by clicking here okay and after that you just save your changes and voila here we have them right great they are very helpful and another thing that is super helpful is a translation memory in the translation memory settings you can enable auto substitution this feature substitutes the nontranslatable elements like a tax or HTML entities or placeholders in Translation suggested by translation memory by the ones that are used in The Source text this improves translation memory suggestions and allows pre transations translation memory suggestions for dialects you can also enable that show the primary language translation memory suggestion for dialects if there are no dialect specific ones so if you have a specific language and then you're working with a dialect if you don't have a specific suggestion for that dialect you will also see the translation suggestions for the general or primary language that is very helpful you can use Global translation memory as well to give translators access to the crowding Global translation memory which is a huge fault of existing translations contributed by previous projects remember that with a free account you are donating your translations to crowding a global translation memory so that is great you can also reuse what other people have translated before when this setting is enabled all translations made in your project are automatically committed to the crowding Global translation memory you can also choose the translation Memory Match context type this is these are a little bit more advanced and you might want to take some time to dive deeper into them we're just having a quick overview here so let's just check these ones at the bottom we see some penalties penalties are basically used to decrease translation memory suggestion match percentage based on specific conditions so with translation memory you will see suggestions for a translation but some translations will have a higher priority and some translations will have a lower priority based on how well they match the original phrase or string you can also assign some penalties to that match percentage based B on these criteria that is a more advanced feature but you can also change that in the settings and you can change the assigned translation memories for your project this is something that you might want to use more often and it basically allows you to change the translation memories that you will be using in your project by default you will have your Project's translation memory based on what you have translated for the source files of your project but if you have other translation memories for other projects in your account you can also choose to use that for another project and share them across your projects that is super helpful and you can just select which ones you would like to assign to your current project in the settings and you can also assign them priorities so you will use the suggested translations from the translation memory with the highest priority we will talk more about translation memories more specifically during the course but for now just know that the this is where you can customize everything related to translation memories and over here you can also find glossaries remember that a glossery was a set of terminologies with their definitions a glossery term and this is where you can manage your glossies for your projects in the settings if you had multiple glossies you can choose them or select them from this list you would have several glossies and you can choose which ones will be used for your current project like this this one is Select Ed by default because it's your own projects glossery we're in that project right now but if we have multiple projects with multiple glossies we could reuse them or assign them to different projects and that is great because we will be saving time awesome and now let's just check the last category which is content content settings these are the settings for importing and exporting files and strings and source files they basically help you with your workflow like working with source strings how you want to handle duplicate strings like you can save time by translating all duplicates with the same translation and hiding these instances from translators but this can affect accuracy okay so you can choose what to do with duplicate strings you can also configure how you want crowding to count words in your project like automatically if you want to consider the TX or if you want to skip the TX once you change the option only the newly uploaded words will be counted according to the new settings and if you change this option the new setting that you choose will be saved automatically okay because right here you can see that we don't have a save button but your changes will be saved automatically if I let's say change this to count TX and then I go to another category and I go back you can see that the change was saved automatically even though we don't have a save button right here just to give you that tip and then once we we go to export we can also see that we can save context information in the files we can skip any untranslated strings if we want to this is not enabled by default so we can enable it we can skip on translated files once we are exporting our project we can export only approved translations and we can also automatically fill in Regional dialects from the primary language so for example untranslated strings in Regional dialects like for example Argentine Spanish will automatically include translations completed in the primary language for example Spanish and now we go to labels labels are very helpful because they can add context to your strings and organize them by different topics they can also be useful when you want to search for specific strings because you can filter strings by their labels you can add the labels to your strings here in the settings in the labels category let's see if you want to add a label you just click here on ADD label you write the title of your new label and you click on Save and then you will be able to add the label to your strings let's just check what happens demo label and let's save this now I see my new label over here and I can edit it or delete it if I edit the label I can just change its title and if I want to delete it I can delete it over here delete Del the label yes deleted and I don't see it here anymore but when I am using the editor I can assign that label to a specific string and that can be helpful and finally the last two options are a bit more advanced they are parser configuration to configure how you want crowding to Import and Export selected file types depending on your needs like this let's say for example that your file is in this format let's say that we have a a markdown file over here we see these extensions for a markdown file this would be the set of extensions and the API type here would be this for the markdown file MD you can edit this to change your parser settings you can see markdown parser settings you can enable content segmentation use custom segmentation rules exclude code blocks and these options are more advanced okay they are a bit beyond the scope of this course which is covering like localization fundamentals but I do encourage you to dive deeper into this because it can be very helpful as well as file processors which allow you to customize processing for the supported file formats great these are all the settings that you can customize for your project in crowding so you should have a good idea of what you can customize for your project in the next section we will see a quick review of how you can delete a project in crowding I will see you there and then we will actually start to upload files to our crowding project and we will start translating with the translation editor I will see you there great work now you know how to customize your project settings but let's quickly review how you can delete a project in case you ever need to do this in the future here we just go to settings then general which is selected by default and we go here to the bottom where we see delete project if you click on this button you will be deleting the project permanently and you will be deleting all the resources associated with the project including any uploaded files translations approvals Etc and this cannot be undone deleted projects cannot be restored so be 100% sure please when you click on this button now it's time to start working with our files and so for that we will upload a file to our crowding project I will show you how to do that manually for now since we're covering the basics we will upload a sample PDF file with text and images and you will see how crowding extracts the strings and how we can translate the strings in their translation editor so I will see you there in just a moment so let's continue now we're in the settings tab right but we need to go to the sources tab to upload our files in the sources tab you will see this of course it's empty because currently we have no files to translate but we can use one of these options to upload the source files we can choose to upload files we can also upload our files as Z if we need to upload multiple files we can use crowding sample files and that is helpful to explore crowding works if you want to use these samples at first you can also set up the integration with your repository we will talk about Integrations when we reach the part of the course for developers because you can integrate crowding with your for example GitHub repository with the GitHub integration and import your source files automatically with your GitHub integration right now we're going to focus on how you can do this manually since we're covering the basics and you can also invite a developer to help you with the project setup with this option right now we will be uploading a PDF file a PDF file with with some text that I took from a free code cam article this will be our demo file I will use this to illustrate how crowding takes a file extracts the strings and it can also work with files that contain images so I think this will be a nice example let's upload the file by clicking here you can also choose to add a file by clicking on this button and these are more advanced options okay so basically you would be clicking on ADD file or upload files and you can also create a folder here let's upload a file welcome to Free code cam I'm going to open this file and you can see how it's being uploaded yay so if it might take a few seconds to change while it's being uploaded and processed because remember that crowding has to extract the strings and divide the text into multiple strings and you will see this blue progress bar here you will need to wait until you see a confirmation that your file has been uploaded if you click here or you go to any of these tabs you based on my personal experience right now you will lose the progress that you have for that file so just stay there until the file has been uploaded and voila over here we can see that the blue bar that we had here while we were uploading the file now changed into different options that we have here for our file and we can also see that we uploaded a PDF file but that was converted into a different file format doc X which is like the word format that we use for Word files that is something that will happen when you upload certain types of files crowding will convert them into another format to make it easier for the platform to process the individual strings but when you export them you can choose how you want to export them and over here we see the number of strings that we can translate this particular file has 22 strings with a total of 212 words if you hover over this number you will see the number of words and you can also see the history of file updates here if you click on the option in the revision column you can also choose to update the file by uploading a new version that can be helpful if the file has been modified somehow and you can assign priority for example here we have that the file has a normal priority what happens if I click here well I make it a high priority file it will have a high priority if not it will have a low priority if I click on it again and if I just click on it a third time I will go back to a normal priority that is helpful to categorize files by their translations priority for example you may choose to translate the files of your landing page before you actually translate files deeper in your website or your platform and over here we can see a drop down menu when you click on the ellipses and we see these options we see add file we see new folder we see create strings fold settings download Source rename and delete if you click on rename you can just rename your file here I could just change it and if I click anywhere outside of the name I save those changes and if I need to delete the file I just click on delete if I click on settings I will see the file settings and that is interesting this is not the project settings this is the file settings let's dive deeper into these settings file details this is the title as it appears to translators you can show descriptive file titles to translators for example you can just assign a more readable name like this one instead of the original file name that may be abbreviated or written in a specific format in your application this file title is only shown in the user interface in crowding and doesn't rename the actual file so when you export your translated files you will still get the original name and here we can see different settings about the resulting file after translation export this is the file name or full path in the resulting archive using the placeholders listed below for example the source file can be resources. Rex but before integration into an application it should be named like this so you can use these placeholders like the language the twetter code the local and you can use the placeholders in the name of the file like this and that value like the language will be replaced in the name of the file that can be helpful to automate the process especially like in software projects where you need to have different names for your files in different languages you can just add the two letters code to differentiate them and use them in your file path that is very helpful this is an example for Android projects like this you can see how it's using the placeholder Android code and the original file name here and other types of projects you can also change the parser configuration like clean taex aggressively translate hyperlink URLs this is also helpful if you are localizing the URLs as well you can translate hidden text translate hidden rows and columns in spread sheets and for slides you can import hidden slides and import the nodes in your slides which can also be helpful if you added some extra notes to a presentation and you can enable content segmentation and use custom segmentation rules these are more advanced options but in the languages tab you can also change file Target languages because you can customize this for each file as well let's say that you don't want to translate a specific file into Spanish you can just disable this for that file and click save and you will not see that file in the Spanish category of your project you can also disable all languages if you don't want to translate it at all or you can select specific languages like this for now let's keep all languages if we read this warning we see that it is recommended not to hide duplicates in the project when disabling languages otherwise duplicate strings in this file may not be available for translation and finally context in this tab you can add any contextual information that will help translators to understand the source text meaning context will be visible for translators in the editor and it also ports marked down and that will be helpful for your translators great so after you configure all of that you can just click save or cancel or just click on this x here to go back and now you know what the file is about we uploaded the file and now if you need to upload a second file you can just click here on ADD file and you will see the option to choose a file from your file system this is how you can upload a file manually remember that we have an option to automate this through Crow Integrations specifically the GitHub integration is one of the most popular ones because you can automatically synchronize the files of your project when you add new strings that have to be translated in crowding that is similar to what we do at free code camp with our open source project so now that you know how to upload your files to crowding manually let's see how you and your team can actually start translating we have the file in crowding so how do we actually translate it that is what we will see in the next part part of the course I will see you there once your file is uploaded it's time to start translating you may start translating the file yourself if you're going to complete the task yourself or you can ask your team to start working on the translations you can assign specific files to your translators and prove readers with the tasks feature that we will talk about when we cover crowding for teams organizations they're very helpful and you can find them here on this tab but for now let's assume that you're translating the files yourself so you can also be familiar with the user interface to start you just need to go to the dashboard tab where you will find all your target languages then you need to select the target language that you will be translating from this list I will choose Spanish for this demo and after I click on Spanish I see the the list of files for the project this is the original source file that we uploaded in the sources tab you will see this file regardless of the language where you click on right because if we go back to sources and we check the file settings like this we will see this languages and right now we have all the target languages selected that is why we see this file in all the languages but let's say that we just don't want to translate this file into Spanish we can save these settings file updated we go back to dashboard and now we see that there are no files to translate you can also do this and choose which languages should be the target languages for specific files you even have that granularity in the settings and permissions great so let's add Spanish again and now let's go back to Spanish and here we have our file we see that we haven't started translating or approving our strings we have 20 and 12 words as to do for translations and approvals so let's start that process by clicking on the name of the file you can also filter files here if you have multiple files you have a very long list of files you can just filter them right here to start translating the file you just click on the name in the corresponding language and that will take you to the heart and soul of crowding the translation editor which is an amazing tool that you will be using daily if you're going to work on crowding when you enter the translation editor you will see these tips like how to view which strings require translations all the source strings are listed on the left side part and colors that know their status and icons next to them the note comments or issues created for these strings you can see if strings are untranslated partially translated or translated and the same statuses apply for approval partially approved approved and hidden if you see a string in grade that is a hidden string you can also collaborate on translations in real time use context to make relevant translation remember that we were able to add some context in the file settings that is helpful for translators and we can preview our translated files we can also make translations from any device because crowding has supported mobile view for the translation editor so you can translate on the go and we also have some different views we will see them in action when we start translating this file we have the sidebyside view and we also have another view that is very helpful to translate multiple languages great now that you know on your way around crowding translation editor you can start making translations you can also check their knowledge base or chat with the team so we're going to close this and now we are in the translations editor remember that when you upload a file crowding takes the text from that file and divides it into Strings which are like the basic units of a localization process this process may require certain format conventions based on the type of file that you are uploading in this case we uploaded a PDF file but we are working with a doc x file which is like a word file and therefore we can work with a strings individually another way here in the translation editor we can see the main layout this is called the comfortable mode in the crowding translation editor we see that we have four main sections or areas we have the left side bar over here we have the Middle top area over here we have the middle bottom area over here and we have the right sidebar let's see what each one of them does and what it has let's start with the left sidebar over here and let's go from left to right the left sidebar shows you all the strings in your file and a preview of your source file you can also enable if you want to see this text translated once you save and approve your strings that is helpful to see a preview of the file in the target language you will find helpful tools for the translation process here at the top you can search for something in a file let's say that I want to find the word certification in my file what do I do I just write it here and I press enter and that will take me to Strings that have the word certification you can see that this string has the word certification this string also has the word certification I'm pressing enter here to jump from the current string to a new one and over here we also see certification but certifications but that also matches our search and if we just continue pressing enter we will go back in a cycle that is helpful to find strings that have a specific term or something that you want to find in a particular file then we also find this tool to load the basic list view if you click on this button the preview will change to this this is a preview of all the strings in the file without actually previewing the file with the original layout and the images it's basically like a simplified version where you can only see the text that crowding extracted from the file you can go back to the previous View by clicking here in the list icon then we find this which is to highlight untranslated translated and approved strings because you can see that the strings here are highlighted in red because they are not translated yet if we just disable this option we see the file as it was presented originally without any highlighted strings we can enable or disable this that is very helpful too you will see different colors for strings with different status then as the third option here we see show the translation preview what this does is that when you enter your translation over here for a particular string like this you click on it you will see the string here and then you will write your translation over here you will see the preview of that translation being replaced here automatically so you will have a preview of your file in the target language of your choice that can be helpful but you can also disable it here if you need to and then we also find a scale toggle option and an option to add a string okay now that you're more familiar with this left sidebar let's go to the Middle top area the Middle top area is where you can translate a string you just need to select it from the left sidebar and the string will appear here will be replaced here in this area where it says Source string like this just click on it and it is replaced here automatically then you can enter your translation over here let's say that we translate it like this Al ccul the free code Camp let's translate it like this let's say here we have the translation and this is what I was mentioning just a few seconds ago that we have a preview of the translation that we just wrote here if we want to disable this and just see the original string in the file preview we can disable this option or enable it to see the preview again like this if you toggle this option and you disable it and you enable it again you might not see the preview unless you make a change okay this is something that is currently happening to me in the platform so if you ever get that then you just need to know that you just make a change and you will see the preview again like this just delete a character and write it again and since you have your translation already written over here you can also use these helpful options from the toolbar you can copy The Source this is helpful in case you have a long string and you just need to make some translations in a few words or you just need to use a large portion of the original string then you can just select this and copy the original string over here that can be helpful when you have for example tags or elements that don't have to be translated and you can just copy them without writing them yourself but we don't have that right now so let's go back to our translation you can also clear the translation by clicking here that will save you time and the third option is to go into text selection mode Let's click here and let's see what it does if we click on this option you will see that the translation memory and machine translation suggestions that crowding is giving us for that string are like in a different color right they are like in a dark greay that can be helpful to just select a piece of the string let's say that instead of writing this final part of the string I just want to copy and paste it from this suggestion this gives me the option to select it from here just copy it and paste it next to the word like this that can save me sometime as well if we don't have this option enabled then you will not be able to select the text individual from these options you will only be able to replace the entire translation one by one so that option can be very helpful when you need to just take a part of this suggestion copy and paste it awesome and over here on the right we find the string length specifically the length of the source which is 37 37 characters here and the target 41 so in Spanish writing this text or translating it like this is longer and sometimes for the user interface of let's say a website or a web app you might want to set a character limit and you can use these numbers to give you an idea of their length great so now that we have this we are going to save our translation by clicking on this button and after we save it now we see that it's highlighted in blue it is highlighted in blue once you have it saved and you will automatic see that you go to the next string the next string is replaced here as the source string and you can just continue editing here you can also see if there is some context for that string you can edit the context and just hide the context if you don't need it but you will automatically go to the next string if you want to go back to the previous string just click on it like this and you can always modify your translations you will also see the history of translations you will see this translation that was saved who saved it my username and when it was saved a few seconds ago in this case over here we also see some options we see Zero because in crowding when you have a project with multiple contributors contributors can vote different translations they can vote to select the translation that they think is most accurate in this case we have zero votes but we could have a vote and usually in the case of fre code cam we also suggest choosing the translation that was most highly voted by the community because usually that tends to be most accurate then then next to the right we also see approve this is a button that only proof readers or project owners or anyone with like administrator access has access to because this will approve the string for the proof reading phase so translators who only translate in the platform and don't prove read will not see this option but you will be able to approve your own translations even though it is recommended to make someone check your translations before you approve them and here we can also see if we can delete the suggested translation and some additional options but right now this option is grayed out so we don't have any additional options here this is what we call the middle button area the Spanish translations the translation memory and machine translation suggestions and you can also see translations suggested from other languages right now we don't have any but we could you can always resize these columns okay if you need to this is something that I also think that it would be important for you to know you can resize them they have a maximum WID but you can resize them and another thing here in the top middle area is that you can go to the next string by clicking on these arrows go to the next or the previous string you can also edit the string over here the original string and you have more options like hi height string from the translators copy the string URL Copy Source skeleton translation history and you can also view the string in context these are all helpful functions that I suggest going through if you have the time when you start diving into crowding more deeply great so now last last but not least we have the right sidebar this is where you can write comments search for the translation memory search for terms in your glossery add new apps and find the apps that you added through the crowding store you can choose the tool that you need to use over here in the right sidebar to the right of the right sidebar first we find the comments then we find the translation memory then the glossery where you can search for specific terms and you can also see some the file context that we were able to add in the settings remember this is the context for the file and you can also add new apps and you would see their small icons over here to write a comment you just need to go to the first option here comments on the sidebar and write your comment on the text input field at the bottom if you click here on new comment let's say that we have demo comment you can also Mark the content as an issue if you need to if this is an issue with a string or with a file you can mark it as an issue and you can categorize the issue it's this a general question is the current translation wrong is there a lack of contextual information is there a mistake in the source string you can choose any one of these categories for the issue for now let's not make this an issue and let's just click here to send the comment demo comment after you send the comment you can also edit it like this and save the changes let me just to make a change remove the period at the end edit it and you can also delete it over here but let's just keep it for now to have it as a sample and that's basically how comments work now if we go to the second option we can see search translation memory with this tool you can search search translation memory for previously made translations and reuse them to ensure consistency here you have some help like excluding words from the search using quotation marks to find the exact combination of words typing an esteras to find words where the end or the beginning may be different you have some examples typing a plus sign and here you have some examples so you have many different options to choose from but let's just search for the translation memory for welcome let's see what we get here welcome we can choose where we want to search search in Source or search in Target where do we want to search for this word if we search in the source language then it would have to be in English if we search in the target language it would have to be in Spanish search option we can also choose a numeric equivalence or guess the translation translation memory result here give us this okay the translation that we just submitted over here this was saved to the translation memory of our project so we can just use it right here and that would also appear here in the translation memory suggestions that is how translation memory works and in the third option we find terminology which is the glosser we can manage our glossies by clicking on manage and we can just go here to the settings and and assign different glossies or create new glossaries we can work with the glossaries in this option in the right side bar we can also search for terms here and we can add a new concept here by clicking on this option in crowding adding A New Concept can be helpful for the glossery we will talk about glossies in more detail but for now just know that you can add a concept and a term for that concept to your glossery and you will see them here in the list and finally the file context right now we don't have any but let's just add some context to show you how this works let me go to my project to sources and remember that we had that in the settings in the settings we find context let's just write something like demo context so you can see if this is updated in the translation editor let's save it the file was up updated and right now if we try to see this in the translation editor by reloading the editor again we see this demo context amazing right we are getting the demo context that we wrote in the settings and this supports markdown formatting so you can just add any context that your translators will need to translate the file accurately based on specific context like where it's located on your website or web application or Android application basically anywhere if you add a context you will also see this like a little warning here warning sign that says file has context provided for translators context can be edited in the file settings model the model is what we were just configuring here in the settings great and if you click here on the plus sign you will be taken to the crowding store when you where you you can add apps and Integrations you will be taken to the crowding store where you can add apps and Integrations for your projects we will talk about Integrations and how you can add them during the course there are multiple free apps and Integrations we will talk about them in more detail during the course but just know that you can add them to your file and project from here great another thing that you should know about the translation editor here is that if a string is hidden like this number over right here which is the page number you will see this tag hidden in the sour string you don't necessarily have to translate it and that will not be available for your translators if you want to Mark a string as hidden you can also Mark it here height string so your translators won't translate it and another great thing that I would like you to know about these tools is that crowding mentions that if the term that you search for or in your terminology tab in the glossery is not available in the actual projects glossery the system will show you Wikipedia explanations so let's write programming for example the term that you're looking for has no matches in the project terminology but crowding is super helpful and it will give you this Wikipedia definition it will give you more context about that term in the target language and in the source language so that is very helpful it will also give you like related Concepts that can be helpful to give you more context about the term and how it should be translated so it is very helpful even if you don't have it in the glossery already you won't be able to understand it without leaving the translation editor that's great for productivity awesome now that you know more about the translation editor and the user interface right now remember that we are in in the comfortable mode so let's talk about translation editor modes in the next part of the course we will see how you can customize the layout in a way that fits your needs because crowding has three options comfortable mode side by side mode and multilingual mode they're all very helpful they're different so we will see them in the next part of the course I will see you there the translation editor has three modes to customize the the layout in a way that fits your needs we have three options the comfortable mode which is exactly what you are seeing right now the side by side mode and the multilingual mode Let's talk about the comfortable mode well it's primarily used for translations it has these four main sections that we just saw and you can switch from this mode to the other two modes by clicking on this button here clicking on the menu icon at the top left of the translation editor then you click on view here and you have two other options side by side and multilingual if you click on side by side you will see that there is a change in how you see things you will see some tips for working with the side by side mode like how to review or make translations you can also approve multiple translations at once which is a bold action that can save you a lot of time if you are a proed reader and reviewing multiple translations you can switch again to the comfortable view to make new translations If instead of reviewing you want to translate and that's all friends so you can close that now this mode is primarily used by managers and proof readers to approve the best translations it's also used by translators to vote translations in a r so if you want to vote on the translations and you want to support the best translations you can do so from this mode but this mode is not usually used for actually translating it's more for a review process we also see four main areas we see an area with the strings their current status here the color tells you the status and notice that here we don't see the strings in Al alphabetical order or in the order in which they appear in the file that is usually why we don't use it for translation it's not really meant for translation you will see that the string that we just translated is actually at the bottom welcome to Free code cams curriculum and we see the translation over here if we click on it we are taken to the string in the preview we can reiz this of course it's another way of looking at the string but by default they will not be in the same order you can click on them and that will take you to the string in the preview but they are not in the same order they're actually grouped by their status so all the untranslated strings will be first in the list and then we will go to the translated strings and then approved strings and so on and here we also see that we have two hidden strings which will be at the bottom here at the top we see these options you can select all the strings for bulk actions on all the strings if you need to for example you can approve all the selected strings you can select them all or or just select some of them and approve them approve their translations in bulk so that's why proof readers really like this mode and here you can also search for terminology in the file let's see certification again we go to the strings that have this word in in the string just like in the comfortable mode that is the search filter we also see filter strings we can show all the strings but by default we see all the strings with the untranslated strings first the show all option shows all the strings in the original order of the source file so if we change this to show all we will see the strings in the order that they appear in the file that is how ful but by default you will see this option you can also choose to see untranslated not approved and approved strings or filter by quality assurance issues the issues that we saw previously that you can configure show the machine translation you can filter strings by strings that have comment strings with unresolved issues remember that we could Mark a comment as an issue we will see strings with unresolved issues for all languages or for the current language That We're translating we can also filter by hidden strings or Define our own filtering and sorting parameters here you can create an advanced filter but that is a bit beyond the scope of the course you can dive into this when you start working with crowding okay it is helpful you can use these Advanced options so now let's use this by default you also see some helpful data about the currently selected string you have the length of the source and the translated string you can save it you can cancel this you can copy Source you can also edit the string and you have more options over here similar to the options that we had in the comfortable mode you can also choose to pretranslated it via translation memory or via machine translation you'll find the string details over here and the suggestions and trans ations and previous translations you can see the translation and when it was submitted here you also have the option to toggle whether to highlight the strings by their status just like we did before and if you want to toggle the translation preview like this show the translated string or not it's basically a different layout but it's more optimized for proof ring great so that is side by side view now let's go to multilingual mode this mode is primarily used by translators and pro readers to work on multiple languages at the same time so for example if you're a translator and you know multiple languages this mode can be helpful to save your time you just need to go here to the menu icon here at the top left and go to view and select multilingual now you will see this when you are a multilingual view you can translate a string into multiple languages so let's say that I want to translate the string into Spanish and Italian let's say you just go here to the menu icon then you go to language languages and you select the languages like Spanish and Italian you can choose up to 10 languages at once you can also search fore language if you have a very long list over here then you choose apply once you apply that but you will see this change in the layout which is like very helpful if you know both Spanish and Italian or any combination of languages you can just take the string for example welcome to Free code Cam's curriculum and write your translation in Spanish here and write your translation in Italian here well I'm not very familiar with Italian myself but let's say that I was familiar with Italian I would be able to write my translation here directly but since I'm not familiar with Italian right now for demonstration purposes I will select a machine translations suggestion let's take this for example if I click here in the icon over here at the right I will be replacing the suggestion over here for Italian and I would be translating both languages at once that can save us a lot of time that's great right so here I have it it's it was added by me a few seconds ago that is also a practical example of how you can add or use a machine translation or translation memory suggestion just click here and have that language selected and it will be added automatically when you're working in multilingual mode you will also have two different options to view the translations you will have a list View and a grid view right now we are in list view which is like personally I would recommend using this and this one over here is a grid view the grid view gives you like more information for each string and you can scroll horizontally through the strings and through the columns and you will see like for each string each string will have a specific key to identify it uniquely in the system and you will see the string labels The Source language the translation in Italian and the trans ation in Spanish you will be able to click here on let's say Spanish translation write your translation over here use the suggestions if you need to and then save your translation so that is another way to translate in crowding when you want to translate into multiple languages at once the other parts of the editor and the tools in this multilingual mode are very similar to the side by side view that you're already familiar with so once you are ready and you want to go back to the comfortable mode to continue your translation let's say that you're just translating one language at a time you have two options to go back to the comfortable mode you can either click here on the menu icon then View and comfortable or you can click here this is like a shorter way to reach the same option here in editor view you click here and you choose comfortable Side by side or multilingual right now we are in multilingual so let's go to comfortable and voila here we can see this and we are back to Spanish over here and we still have our saved translation so that's great now you know how to switch view modes in crowding in the translation editor great work so far congratulations on reaching this part of the course now we will see how you can switch to a different file because so far we have been working with the same file throughout the course now we will see how you can switch to a different file we will see that in the next part of the course at some point during your translation or localization process you will want to go to another file once the current file is translated right that is very easy to do in crowding without leaving the translation Editor to do it you just need to click on the main menu at the top left then you go to file and then you go to open here we have other options let's just go through them quickly we see source file preview translated file preview we also see the option to download the file to export it to upload translations to check all the strings in the file we will see that in just a moment we can also replace in the translations or in sources but right now we're focused on opening a new file or going to a different file when we click there we will see these this list of files and right now we only have one file in our project that is the currently opened file if we had another file we would see it here in the list and we would be able to open it we just click on it we click on open and that will take us to the file just let's click on open and we're there great so if you have a list of files you can choose one but another way to do the same thing a lot faster is to click here if you click on the file name that will be a lot faster you will reach the same option and you will be able to choose a file and open it you can also filter files here if you have a complex project structure awesome now you know how to switch files now let's check how you can view all the strings in your project project as a list you will learn how to do that in the next part so I will see you there you also have an option to see a list of all the strings in your project you just need to go to the main menu here at the top left go to file and then to all strings if you click here you will see all the source strings for that file you will see them as a list you will also o see their current status here we see a string that was translated we see a string that is hidden a string that is not translated and you will also see a different status when the string has been approved let's say that we want to approve a string as a proof reader well proof readers will see this option over here and we can just click here if we want to approve it like this and there we go we see this green check mark that indicates that the string has been up approved this approval can be removed by clicking here remove approval and it will go back to the translated status that is something for proof readers and for project managers but that's basically how you approve a string in the translation editor and you can do that in the three different views and just a quick note before we move on to the translation editor settings is that you can also translate right to left language languages in crowding while some languages like Spanish and Italian are written from left to right other languages like Arabic and Udu are written from right to left crowding mentions that when translating between left to right and right to left languages some elements in the translation field in the editor might not be displayed the same way as they will be once the file is exported to make sure that the translations will be displayed correctly in the exported file crowding recommends clicking Copy Source this button when running the translations this is the first button in the toolbar then translating the text into the target language but leaving any variables or Texs exactly the same even if they do not look the same they will be in the right position when you export the file this is an example taken from the crowding documentation where you can see the translation of a right to left language and how this works you just need to click on The Copy Source button that we saw that basically copies the original string and keep variables and TXS exactly the same while you translate the text so now that you know this let's talk about the translation editor settings because you can also customize the settings of the editor so we will talk about that in just a moment stay tuned and let's go to the next part yes you can also customize the settings of the translation editor to access these settings just click on the gear icon located right here at the top right of the translation editor and that will open the model for editor settings you will see a list of settings that you can customize first of all you can choose to show translation memory suggestions with a minimum match of a specific percentage so if a suggestion matches by 70% of the string that will be shown as a suggestion but you can change that percentage by dragging this slider you can also enable QA issues to check the translations for common mistakes like punctuation tags spaces mismatch missing variables and other issues you can show a PumpUp that attempts to predict and automatically complete the transations while you enter them by default this is disabled but you can enable it clicking here you can also Auto approve if your project role is a pro reader or hire but you're also translating the translations added by you will be automatically approved if you enable this option however it's always recommended to have an extra pair of eyes just in case you have any typos or spelling mistakes or that sort of thing that can happen perhaps after looking at the text for too long we don't even notice that so it's always great to have a backup team you can also choose to automatically move to the next string that is enabled by default exactly what happened when we saved our translation we moved to the next string you can have keep this enabled or disable it you can choose the theme for your editor you may choose to use the Dark theme you may choose the light theme or you may choose the auto theme that synchronizes with your system you can also change the appearance of some of the elements in the editor like compact strings view show only the beginning of the source string so it fits in a single line on the list you can show the translation preview and you have different options here like HTML tags if they display or not so if you have like HTML files and you're translating HTML files and you have some tags then by default these tags will be hidden you can choose to show them hide them or just use this auto option which is selected by default you can also display nonprintable characters or hide them they are hidden by default and these are more specialized settings you can find more information about them like translation field highlighting and real time spell check displaying and of course you can change the language of the user interface if you're more comfortable with the user interface in let's say Spanish or Portuguese from Brazil or German or Japanese or French you can choose that and you can change the user interface to your language you can also choose to autod detect your language so that can be helpful if it's more comfortable for you you can customize the settings to fit your needs and another productivity tip that I think is very important for you would be keyboard shortcuts to see all the keyboard shortcuts that you currently have available for your operating system just click on this keyboard icon at the top and that will show you a list with all the keyboard shortcuts for your current operating system right now I'm working on Mac OS but we also have specific shortcuts for Windows and for other operating systems just click on that button and you will see these shortcuts you can also change them because if you click here you will be able to modify the shortcut and you can reset them to the default or cancel the operation now that you know how to actually translate your project manually let's see how you can download the translated files remember that we are showing the basic functionality here we're not automating things yet but this is basically how crowding works for individuals who are working on small localization projects you can choose to automate this task but we will cover that later in the course so let's see how you can download your files we're going to see how you can download your translated files we're not going to translate our entire file we just have this string translated but we're going to choose the settings so that we do download the file with the translation that we have and the rest will be in the source language let's go to our dashboard we click here on our profile image then our username we see a new tab and we go here we see our projects after we reach that we just need to go to our project to the translations tab in the translations tab we will see an option to download the project as a zip file this might be collapsed you will may need to open this but translations will be download loed in the original format according to the export settings if we open this link we see the export settings the export settings are exactly what we have here when we saw the settings top we can choose to skip untranslated strings but we won't do that because we do have some untranslated strings in our file and we want to keep them we can skip untranslated files if we're downloading the entire project we can export only the approved the translations and we can also automatically fill in the regional dialects based on those settings the translations will be downloaded we just need to select a target language that we want to download let's say Spanish and then we have two options either build the the project or build and download if we click on build and download we will see that the build is in progress current language current file so we see a little bit of the progress might take a few seconds depending on the size of the project and then we will see a zip file if we open the zip file we will find a doc x file we uploaded it as a PDF but when we download it we're downloading it as a document a word file or a document that we can open in keynote in Mac OS or another text editor here we see our file but we do see the translation replaced over here so it worked if we translate all of these strings we will see the translated version of the file and that is great you can download it manually like this and you have other options to download it not just the translations tab a key thing to note is that the zip file that you're downloading here will have folders for each language if you are downloading all languages like this if you choose all languages then you will have one folder per language and each folder will have its corresponding files the names of the folders will have their corresponding language codes just a tip so you can identify them when you download them awesome and if you need to download all the translated files in just a specific target language you just need to select the language here like we did with Spanish this will download all the files for that specific language and you also have a third option if you don't want to download all the files in a language and you just need to download a specific file then you just need to go to your dashboard tab select choose the language and then go to that file if you click on the three dots to the right you will see additional options and you can click on download like this you will see downloading over here and then you will find a file in your downloads folder and that file will be the translated version in that language remember that we are selecting the language here when we enter this category in the dashboard tab so crowding already knows what we want to download and that is the translation awesome your download should start relatively quickly and you should have your files ready in just a few seconds or a few minutes depending on your internet connection you can also automate this process of exporting or downloading the translated files with crowding Integrations awesome now you know how to download all the files and individual files in your project so let's dive deeper into the concepts that we have been working with let's see them in practice and how you can work with them in crowding we will start talking about translation memory and how you can create manage download and assign translation memory for your project GRE work so far now that you know the basic features of the translation editor and crowding let's talk about more advanced features like the translation memory we have been working with the translation memory in the editor but now we will see the details of how you can manage that memory remember that the translation memory is like a database of strings that we have translated previously in our project and their corresponding translations this is helpful because reusing previous translations can save us a lot of time so are you ready let's begin let's start by creating a translation memory by default when you create a new project you will have a new translation memory for that project but you can also create it manually you can create one manually let's go back to our profile here by clicking here or by clicking on the drop down menu if we click here on translation memories on this sidebar you will see all the translation memories that you currently have across your projects for example we see fream project demos TM the translation memory this has one record it's available for these languages English Italian and Spanish remember that we added a machine translation for the Italian string this translation memory is associated to this project if we click on it we can go to that project like this to the settings and if we see more options we can choose to upload the translation memory as a CSV or another type of format we can also downloaded we can edit it and we can view all the records in the translation memory we can see all the records over here if we click here we will see all the records in all the translation memories we can also filter the translation Memories by those that we own or those that we manage we can share translation memories and what this means is that we're going to share all the translation memories across our projects like this if we have this enabled they will be shared or otherwise they will only have the translation memories that we assign to each individual project manually we can also choose a translation memory over here we can select it and that will enable these options we can edit the translation memory view its records or create a new translation memory to create a new translation memory just click here on create TM you will find the TM abbreviation a lot throughout crowding so it's best to be familiar with this abbreviation TM translation memory and remember that Mt is machine translation they're different for the name of the translation memory let's just write demo te M and this translation memory will be in English let's say for now we're not going to assign it to any specific project but we can do so by clicking here on the name of the project if you have multiple projects you will see the list over here so you can click on Create and now you will see this translation memory added to the list now you have two translation memories you can select either one of them and you have your new translation memory in the list so congratulations if you click on a translation memory from this list like this one you will be able to view all the records in that translation memory if you click on this view records button this will show you the source strings and their corresponding translations in all the languages that it's currently available in so we have Italian and we have Spanish like this we can edit each individual r record like this English Italian and Spanish right now um I remember that this is a machine translation so it might not be 100% accurate I'm not familiar with Italian so I am familiar with Spanish and this is accurate but if there is anything that we need to change about this record we can change it here directly for that string we can also delete the record so it's not suggested to us anymore when we just translate if we have multiple records which is what we usually have for large projects like free code camp we can search for specific records here we can match the case we can match whole phrase and we can also find an exact match so these are helpful options that we can enable or disable and combine to our needs to fit our needs you can also upload machine translation if you already have this structure you can upload specific files with The Source strings and their corresponding translations into other languages just click on this upload button and you will be able to upload the file here we can see that we can upload translation memory in these formats xlsx remember this is a format that we saw in the slides at the beginning of the course a CSV file which is a comma separated values file or a TMX file these are the three options you can upload that translation memory and you will have it here automatically and you will will be able to use it in your project here you can see a screenshot taken from the crowding documentation this shows you how you can select the matching columns to their corresponding languages when you upload a file for the translation memory now you can also download your translation memory as an xlsx file as a CSV file or as a TMX file if you click on download just choose a format let's say CSV you can choose to download all languages or just a specific language pair so we have the source here English and let's say that we want to download the translations in Spanish we can choose that language pair and that will work but for now let's just download all languages to show you the file if we open the file uh the CSV file this is what we see we see the source string the language code which is English we see the target language Italian and Spanish and we see the corresponding translation so that is very very helpful in case you need to download it and save it locally or upload it to another tool another great thing about translation memory in crowding is that you can assign translation memory to your project here we have our demo translation memory let's assign it to our project let's go to our home here then to our demo project let's go to the settings tab and then we go to translation memories like this at the bottom you will find the assigned translation memories and if you want to assign a new translation memory a second one you can just enable this here and it will have that translation memory for the suggestions in the project the default translation memory will be marked by the star icon the translation memory with the gray star is used by default and you can also set the priority and one of the key things here about the priorities is that when you assign a few or multiple translation memories to a project you can set the priority for each one of them the suggestion from the translation memory with the higher priority will be displayed first it makes sense right but here a higher number represents a higher priority so if I assign priority to here according to crowding that would be a higher priority than this one so the the suggestions from this translation memory would have a higher priority than this one you can also view the records from each one of them but this is a link that will be opened in a new tab will take you to that translation memory and its records awesome now you know how to work with transl ation memory in crowding this is a more advanced feature so congratulations in the next part we will talk about the gloss series and how you can work with them in crowding so I will see you there awesome now that you know the most important aspects of translation memory on crowding let's check out the gloss series and how they work remember that a glossery allows you to store and manage your projects terminology to help your translators with more context and definitions let's see how you can create a glossery because when you create a project a glossery is automatically created for you for that project but you can create new ones that are independent from any project to create a glossery just go here to this option on the sidebar and you will see a glossery for each project that you currently have but if you want to create a glossery just click here on Create glossery and then you will need to enter the glossery name let's say glossery demo and you will need to select the language let's say English you can also assign the glossery to the projects that you can see on this list you can assign them to projects or not and if you don't assign them you can do that later too let's create it for Now glossery demo you can find the number of terms here here the languages and the projects that each glossery is associated with here you can click on the ellipses to find more options for each glossery you can upload the glossies as xlsx a CSV or tbx file format you can download your glossery in either one of those formats you can edit your glossery view its records and delete the glossery so let's see how you can manage glossery terms in crowding it's important to distinguish between a concept and a term a concept is broader than a term this is what the crowding documentation says about their difference a concept incorporates glossery terms and their variations with multiple translations and other relevant information so you can see the concept sort of like englobes all the terms and additional information to add a concept you select it you view the records over here and you will see that the glossery is empty you can ask translators to create glossery terms or upload a glossery to add a concept yourself just click here on ADD concept and you will see this detailed form for adding the New Concept it has many different options for including information about the concept here we have concept details the definition is the concept definition the subject is a branch of knowledge that the concept is related to you can also add short notes about a concept that translators might find helpful you can add a URL to the web page with relevant information about that concept and finally a figure which is like a URL to the relevant image if the concept is related to an image it also mentions these term details because remember that concept is broader a concept can have multiple terms and if we need to add a new term we can add it over here in any language for each term we will be able to select its part of speech like a noun verb adjective the part of speech the type is like for example a full form an acronym an abbreviation short form phrase or variant the status is preferred admitted not recommended or obsolete you can also choose the gender if the term has a gender masculine feminine common neuter or other you can write a definition for that term you can also include notes and a related URL to important information after you create the term you will see it in the list of terms for the Glasser you can choose what details you want to fill in you don't necessarily need to write all of this for each concept ccept or term even though that is recommended if you have all of this information because your translators will definitely thank you in the future for now let's just write the definition and the term like just to see what we get afterwards if we create the demo we get the new term here in our glossery we can see it here we can see the definition concept details and we can also edit the term and delete it but notice that here we are seeing the term over here the term itself and over here we see the concept that the term is related to remember that concept is broader so this is broader than the actual term in this filter we can search for specific terms and here we can also filter by users with this button we can change which columns are displayed like concept details we may choose not to include it we may choose not to include English or we can also hide all the columns you can also delete a glossery term over here if you need it let's just delete it over here delete this term and you will see that the glossery is empty again you can upload or download a glossery as a an xlsx file a CSV file or a tbx file just click on this button and you will be able to upload it or download it you can also delete glossies here if you go to your glossies panel your glossies tool by clicking on the ellipses and then clicking on delete just delete this and to confirm the that you're absolutely sure about deleting the glossery you need to type a specific number that crowding will give you 419 316 delete and there we go we don't have that glossery anymore now how can you assign a gloss to a project well you just go here to home you go to your project you go to settings and here in Translation you will find glossaries here you will see a list of all your glossies and you will be able to select the glossies that you want to use for your project over here the glossery with the gray star will be used by default for the project you can also share glossies across all your projects by checking a specific specific option here in glossaries if you enable this option share glossies which is similar to sharing the translation memory remember you will be sharing the glossies that you create across all your projects that can be helpful sometimes so you can enable it but it is disabled by default awesome now you know how to work with glossaries in crowding so let's go to Quality Assurance checks in crowding and let's see how they work this is another Advanced feature so so let's dive in now let's talk about quality assurance quality assurance is essential for every type of project and this is especially true for localization projects one small typo or spelling mistake can make all the difference to your users this is why crowding implemented efficient quality assurance features to help you deliver the high quality translations that your users deserve to have in our case is the free code cam Community according to crowding these checks will help you to detect some common mistakes easily and quickly and you can resolve all those issues before you actually get the strings live the issues detected by quality assurance check include typos missing commas Extra Spaces and other common mistakes that you might make while you're translating or that your translators might make let's see how you can configure these quality assurance checks this is done for every project individually you go to your project then to your settings tab and then you go to QA checks in Translation here you will see all the quality assurance checks that you have enabled and you can enable or disable them based on your current needs once you enable or disable whatever you need let's just disable some of them as a sample and then you click on this save button you will see that the settings were updated that's great after you have these settings enabled or disabled or customized to your liking let's just enable everything for now how can you check the quality assurance status of your project well you just go here to your dashboard and over here you can see QA checks currently the status of the QA checks is in progress so the checks are running they are in progress if you reload your project you may still see it in progress but here you will see the status of your QA checks you may see them as off when they are disabled let's just try to disable them for now you can disable them by deselecting this and saving your settings and here if you go back to your dashboard you will see that they are off if we turn them on again like this we save our changes and we go to our dashboard we will see this in progress and after the checks are completed we will see a different status no issues if the checks did not find any issues with our strings or issues found when there were issues found and we will also be able to see these issues when we try to approve a string let's go to our Spanish translation and let's just to test this add an issue to our translation let's add an extra space here this is looking really bad right but let's save our translation for now and when we try to save our translation our quality assurance checks are checking if everything is correct but they detected that the translation contains three spaces in a row we have an option to autofix the issue to save the translation anyway if we are sure that this is actually not an error or to cancel the operation and we can just change this ourselves let's choose autofix this will autofix the translation and then we can save it again what happens if we try to save the translation again well we see this check that says that an identical translation of the string has been already saved vote for the existing translation instead of adding a new one if we save the string with issues like these let's just save this with issues we see that the translation contains three spaces in our Rob but let's just save this anyway and we go back to the string we see that this string has one quality assurance issue the translation contains multiple spaces in a row that will be helpful for the proof reader who is going to check and approve the string and we can also see this if we go back to our project and we check the status the quality assurance checks are still in progress but after the process has been completed we will see that there were issues found and we will be able to fix them in the strings that is the power of quality assurance checks now after I approve the string the string is now in green because it has been translated and approved this is a sample image from the crowding documentation showing what you would see if the quality assurance issues are found in your project you would see something like this quality assurance is a very important step that you should definitely take very seriously during your localization process so now you know how to enable them and work with them in crowding let's continue in the next part of the course we will see how you can upload existing translations you will have three different options so we will see them in the next part of the course I will see you there if you have existing translations already written in a specific file format you can also upload them to your project and use them directly you have three options you can upload them via the translations tab over here you can upload them via the specific language page or you can upload them via the translation editor we will see a three options you can upload translations from this translation tab by clicking here upload existing translations if you drag existing translations here you will be up uploading them and you can upload them from your file system according to crowding the supported formats for uploading translations include those that have a key value structure such as for example Json or Android XML Mac OS or iOS strings and there are many different formats here you can find a list also CSV files are accepted and crowding also mentions that for file formats that do not have a defined structure translation upload is handled bu by an experimental machine learning technology so when they say experimental that means that it might not be 100% accurate great that is how to upload it from the translations tab you can also upload them from the language page you just go to the dashboard tab then you click on a target language and then you click on a file but instead of clicking on the name of the file itself you will click on the three dots to show more options and then you will see upload translations you can allow Target translation to match the source you can approve added translations or you can translate hidden strings those are options that you can enable before you actually upload your file just click on select file and you will see your file system an option to select the file from your file system and that will upload the translations for your file and finally the third option is to upload via the translation editor if if you double click on the name of the file and you go to the translation editor then you can click on this menu and then in file you will find the option to upload translations you will see the same three options and you will be able to select the file from your file system awesome now you know how to upload translations there are many supported file formats on crowding for all of these operations because so far we have mentioned many different file formats during the course that you can work with in crowding but actually crowding supports more than 100 file formats you can view all of these formats in the crowding store over here all of these formats are supported by crowding you can filter the list with this search bar you can also filter them by author or by tag and you can sort them by relevance name and date you just need to go to support. crowd.com /s supported format and then you click on this button view on crowding store that will take you here to this list and there you will find the catalog of all the formats that you can use and work with in crowding it and it's very helpful for any type of project great now you know all the supported file formats so let's talk about pre transation remember pre transation it was a way to translate your project files automatically when you upload them so we will see how you can enable enable that in crowding now let's talk about pre transation if your goal is to save time and improve your productivity pre transation through machine translation can be exactly what you need this is an automated process that applies computer generated translations to your project when you upload a file and you can set that up in crowding in cring you can customize machine translation engines to use this feature you have two alternatives to implement the process you can do it either manually or automatically so let's talk about the manual pre transation to configure pre transation for your project you just go to your project to your dashboard Tab and then here you see the option for pre transation remember these acronyms I told you that their difference was going to be very important because crowding uses these acronyms very often and they are very similar so at first you might find them a bit confusing but remember this is translation memory and this is machine translation if you choose to pre translate via translation memory you will be using the database of existing translations from your project and if you choose via machine translation you will be generating the translations automatically if you choose via machine translation you will need to choose a translation engine by default you will use crowd translate but based on your current plan you might be able to choose another translation engine like Google translate or Amazon translate or any translation engine that you need you can choose the target languages you can choose different files and you can filter by labels and exclude labels so that is what you can do to set up pre transation via machine translation you just choose your target languages choose your files and you can see that this enables the button for pre transation Via machine translation this will give you automated translations translations generated by a computer by an artificial intelligence model that your proof readers should check before they are approved but it can save them a lot of time if you automate this process because they will have something to work with and they can just modify them you can also enable this for specific Target languages if you don't want to do that for all your target languages and you can do that for specific files you can use these search filters to filter the list if you have a complex project structure if you choose to automate the process the system will pre translate new content automatically and another great thing is that you can set up pre transation via translation memory if you have to use translations from your database of previous translations if you have shareed translation memories option if you have that option enabled all the translation memories from the projects you own or manage are already shared so you can prera using them you can select the target languages for which you would like to use this automated process and select the files you can also set the minimum match ratio to translate only if it's a 100% match you can skip any approved translations apply for untranslated strings only this is very helpful and it is selected by default so you don't end up translating strings that were already translated and you can also approve added translations but only if they have like for example a perfect match a perfect match that was approved by a pro reader previously or you can just approve all of them skipping Autos substituted suggestions or all of them by default if you enable this option you can choose either one of these options you can also filter by label exclude labels and you have these notes for auto substitution and prioritize translation memories in the settings tab how you can assign and prioritize the translation memories we talked about that in a previous section right how to assign them a specific priority if you set this up your files will be automatically translated then you can open the files in the translation editor and and just check the automated translations but you will have something to work with immediately and that will save you time great that is how you can work with pre transation in the next part we will talk about offline translations because sometimes you and your team will need to work offline crowding has a great feature for this and we will talk about that in the next part of the course now we will see how you can work with offline translation because sometimes you and your team may need to work offline crowding has a great feature for this you can download your files for situations where you may not have access to the internet or you may like to work with the files locally and then upload your translations to enable or disable offline translation for your project you may choose to disable it as well you just need to go to your project then to the settings tab and then privacy and collaboration after after that you will find this option allow offline translation this allows translators to download the source files to their machines and upload translations back into the project project owner and managers can always download sources and upload translations so this is basically for translators and prove readers owners and managers will always have this option we can enable this or disable this each file can be downloaded individually in two different ways the source files you can download the source files themselves to translate them locally and then upload your translations you can download them via the translation editor or via the language page let's see how you can do that via the language page just go to your project to the dashboard you select the language let's say Spanish and then in the list of files click here on the three dots and then just download it if the file has not been translated you will will see the original source file because if you assign that task to a translator and no one has ever started translating the file you can just download it and you will see the original file in English if someone has already started translating the file you will see the translated version with the translations that have already been approved like this but if you haven't started translating the file that will be exactly the same to the original source file that is the first option but you can also download the file from the editor let's just go to the editor by double clicking the file here and let's open the menu you will see the option to download from here you will be downloading the file you will see it in your list of downloads and if you open the file you will see the file over here with the translations of course but if you haven't started translating it that would be the source file awesome now you know how to download individual files for offline translation you can also download all the files for a specific language in your project if you want to download all the source files let's say that you need to translate for Spanish you haven't started translating them yet then you can click here to download or upload download translations upload translations and you can export them in this format awesome now you know how to work with offline translations that can be very helpful for you and your team now let's see how crowding can help you if you're working with a team on a localization project or perhaps you're the founder or manager of an organization that is interested in localizing a product and you will need to work with team members let's see these features in crowding first we are going to see how you can invite project members and contributors to invite members to your projects go to your project and then go to the members tab once you're in the members tab you just need to click on the green invite button you can also click on this button and then you will see the option to invite people you will need to enter information for these options before sending the invitations first you need to select a specific role then you need to enter the emails or or usernames because you can invite multiple members and afterwards you will find a default message here you're invited to join the project and then you will see the name of your project here by default but you can customize it to your liking or you can just leave it blank if you want to but of course it's always best to be kind to the new team members so I would keep this or customize it let's see how this works if you click on select role you should see something like this you will see all the available roles that you can assign in crowding by default the translator role will be selected because this is what we will usually assign for team members right translators they can translate the content and vote for existing translations you will also see these roles manager developer translator proof reader and language coordinator we will talk about these roles in more detail in just a moment but here on the right you will see these fields in these fields you can assign specific languages for which you would like to assign these roles to that member or those members for example you could assign the role of translator for a particular contributor for the language Italian and you could also assign the role of proof reader to that same contributor for Spanish or you can assign both languages Italian and Spanish so the contributor would have these roles for these specific languages but if you want to assign the role of proof reader or translator for all the languages that you currently have available on your project you just leave this empty we will talk more about member roles in just a moment once you're ready you just click save here and you go back to the main options for now let's just assign the role of translator for all languages okay let's click on Save here and we go back to our invite people form let's just write an email here to send an invitation you're invited to join the project free code cam project demo if you click here on invite you will send an invitation to that project member but there is another way to invite that member you can also send invitation links if you click here on get link you will also have the invit URL copy to the clipboard and if you just copy and paste it let's just copy and paste it on a plain text file to preview it you can see that it's a URL a crowding URL with your project and then it has a specific invite code when the new team member clicks on this link they will be able to join the project with the permissions that you granted them and after you get a link you will also be able able to manage links by clicking here manage links these are the links that you've generated so far here I clicked on the get link button twice so I have two links you can see that the times are really close and you can see the roles assigned with that link for that member and you can also click here to copy the link to the clipboard or you can also revoke the link let's just revoke this as a test and it's removed from from the list of links that we currently have available if we click here we just copy the URL to the clipboard and we can paste it anywhere we need to like an email or a chat anywhere where we want to send the invitation to the team member once we're ready managing the links we just click on done and let's also test how the invite button works I am going to send an invite to one of my emails to my one of my accounts select the role of translator and with this default message let's click on invite over here and I see that one invitation was sent successfully now if I go where I received the invitation like I am seeing what a member what a normal member would see in might take a few minutes two or 3 minutes and then I got the invitation to join the project to join the translation project this is what the new team member would see when you send them the invite hello the Stefania demo in this case the project owner invites you to participate in the free cam project demo translation project at crowding here we can see the default message that we sent with the invite of course it would be great if you customize this to invite your team members and here we see a link get involved if user clicks on it they will be taken to the project and they will be added to the project so let's open this in in an incognito window because right now I am in my crowding account so I have to simulate as if I have no relation to that account I am just a normal person what I see is that I have been invited to the free code cam project demo project with the following permissions as a translator I can sign up for free or log in and I will automatically join the project so if I create that account and I join with that link I will be able to contribute to the translation project and just to have one contributor and I so that I can show you all the different features of how we can handle team members I'm going to do that with my second account I have two accounts on crowding one with the project and another one to simulate a contributor so that's what we're going to do next now you know how to invite new contributors you just select a role you write their emails or usernames like sample gmail.com and then you just write the message send the invite or you get a link great so I am just going to sign in to my other account accept the invitation and I will be right back to this project this is my second account this is the other account that I created on crowding and this is what I'm going continues to simulate being a new team member let's say that I received this invitation by email and I just clicked on get involved I created my crowding account and after I click on that link I see this welcome to Free code cam project demo translations you have joined the translation team you can leave this project if you don't want to participate in the translations so if you click here you will leave the project but since you joined this is is what you would see as a contributor and now that we have this new contributor in our project let's just go back to our project owner perspective this is from a contributor's perspective we just accepted the invitation we're part of the project now but what will you see if you are the project owner that is what we will see in just a moment let me go back to my project owner account estefania demo and here I'm back with my my project owner account here I can see my project I own one project but now we do have an an important change now if we go to the members tab we can see that we have another account another member of the team right now Stefania demo is the project owner account it's my account my personal account where I created the project this is the owner but this is a translator I just used my name here but it could be any team member that I added to my project okay what can we do with this once we have our team member already signed up for a project project roles can play a key role in this platform as well because you can grant different permissions to your team members now that you know how to invite them let's see how you can change their project role we can find more information about the different roles that we can assign by clicking here on invite and then clicking on the role this will give us more details about each role in crowding and what it involves a manager has unlimited control over the entire project developers can upload files edit translatable text connect Integrations and use the API they cannot manage project tasks members and reports that is reserved for managers and and project owners but they can work with the files translators can translate the content and vote for existing translations usually when you add a team member the new member will be a translator by default and then you can upgrade their role to Pro reader and Beyond Pro readers can translate and proofread the content they are in charge of checking that everything is okay with the translations and with the localization process and finally we have language coordinator language coordinators can manage people of selected languages because here we can also assign these roles for specific languages remember so we can also have language coordinators for specific languages to assign a specific role to a member you can either select the role here in the invitation when you invite that team member and you can also select the role on the member's profile page let's see how you can do that because you already know how to select the role here on the invitation if you grant manager the manager role by default that will have unlimited control over the project so all of these will be like marked by default and they are gray out okay but if you go here below you can assign the different roles individually as well so now that you know how to do this in the invitation let's see how you can do that in the memb profile here we have estefania CN this is the username of my team member if I double click on this member I see member info this is like a summary of that member in the project it's very helpful here you can see the profile image the username the roles that it currently has assigned how you can also click here to contact that member when the member joined when it saw the project for the last time and how many strings the user has translated approved voted and commented we see that please note that this data only shows current contributions removed ones are in display here here you have some options for that user remove contributions remove contribution you can open profile remove from Project or block a project because yes if you need to you can also remove or Block members from your project because sometimes things may go wrong with someone in the project so if you need to block their access entirely you can do so from here and here in the permissions tab you can also change their roles right now we only have translators selected but let's say that I want to upgrade this to proof reader and I want to make this contributor a proof reader for Spanish I can let's say that this team member can translate and prove read in Spanish so I would just add the language here and select that rle approv reader and select Spanish over here and after that I just need to click on save like this and then done we need to click twice on this button first to save and then to close this done like this and now we see that the project roll has been updated like this we see translator and then a shortened version of Pro great so now you know how to change the project role you can do that on on the imitation itself or if you already invited the member remember that you can just open the members info and change the permissions awesome in the next part we will talk about project managers they play a key role for the team and for the project so we will dive into the functionality that was specifically designed to add and manage project managers in crowding we will talk about this in the next section so I will see you there project managers play a key role for your team and for your project they can have unlimited control over the entire project and they can help you to coordinate and assign tasks to team members we will talk about tasks in more detail in just a few minutes in an upcoming section but now let's focus on Project managers and let's see how you can add a project manager to your project you can assign the role of manager here in the invitation you just click on the roll and you select manager here the manager has unlimited control over the entire project and alternatively you can also add managers by going here to managers on the left sidebar and if you click here you go to managers you will see that there are no managers yet invite project managers who help you manage your projects in crowding you can modify permissions for a user at any time and this is where our member account Stefania CN will come into play we will grant our contributor manager role if we need to invite a new manager for our project we can click here on ADD manager we will need to enter the email or username of the manager that we are inviting writing we can also write a message and we can set the manager's permissions if we want the manager to be able to manage the projects the translation memories and the glossaries we can click this to select all of these if we had multiple projects here we would see a list with all the projects and we could select specific projects for that manager we can also choose specific translation memories for that manager to manage and we can also select specific glossies all the translation memories and glossies that are assigned by default to a project are also marked by default okay here we have our only demo project that is one way of inviting a manager but we can also promote an existing team member to manager and we can do that here by going to our project then going to members and then just changing the role of that member we just double click on its user name or click here on details we go to permissions and then we select this manager the manager has unlimited control over the entire project so we save this we click on done and now we see the project role of manager again if we go back we see manager and now the role has been up updated here if we go to the managers section here on the sidebar now we see this user as a manager and it's the manager for this particular project from this list of managers we can also edit the manager's permissions and everything Associated to that manager if we click here on the ellipses we see edit permissions and remove we can remove a manager we can edit permissions and if we edit permissions we see this we can change the permissions for specific projects let's say that we don't want this manager to have permissions over this project anymore we just unmark it uncheck this or if we selected multiple translation memories and now we want to remove those permissions we can just update this and save the changes we can also go to that user's profile by clicking here it will be opened in a new tab like this so let's just save this and voila here we have the updated manager you can also remove a manager by clicking here on the ellipses and clicking on remove we are asked if we would like to remove this manager we can click here on remove or we can click on cancel for now we're not going to remove the manager but just know that you can do that anytime you need to with the ellipses and remove there is is an important difference between a manager and a pro reader on crowding managers and pro readers have key differences in their roles and permissions to explain this in more detail we can go to crowding knowledge base you can find that at support. crowding docomo project participant roles QA this is this article managing roles of project members and then you go down here to Q Q&A questions and answers this is important I think to know the difference between a manager and a pro reader the question says I'm a project owner do I need to invite a manager or a proof reader what do I need the main difference between a manager and a proof reader is the following in addition to approving translations added by translators managers can also invite and remove project members so they have higher permissions upload source and translation files to the project set up Integrations Etc so they have additional permissions than just approving the translations if you want to have a project member who should have access to the features mentioned above you need to invite a project manager alternatively if you plan to manage the project yourself it will be enough to invite a proof reader so that is the answer to the question the difference between manager or proof reader awesome now that you know more about project managers let's talk about tasks because tasks in crowding can help you to stay organized and manage your projects more efficiently we will see them in more detail in the next part so I will see you there let's continue organization is the key to success in any project and crowding definitely knows this because they Incorporated very helpful tools called tasks on their platform to help you organize your project and coordinate tasks among your team members with tasks you can assign specific files to your translators and proof readers you can set duat for specific tasks you can receive notification discuss specific task with other team members and even split a task among different team members you can also track the status of each task in a board where you can drag and drop your tasks from one status to the next that sounds great right it's a great tool for tracking the progress of your project so let's see how you can actually create them and work with them in detail to create a task you just need to go to your project and then to the tasks tab over here at first of course this will be empty we won't have any tasks but don't worry we will take care of that in just a moment we're going to create a task to do that we click here on the green create task button there we will see new task please note that a task can only be assigned to one project so that is why we have the tasks tab within a specific project all the tasks that you create here will be applied to that project let's try to create a new task what kind of information can we enter we can enter the task name let's say for example translate the welcome to Free code cam file let's just add this name and we can enter a description we need to translate the welcome to free codam file as soon as possible just as a demo description you can of course customize this to your liking then we see the type what is the type of task well we can translate the the file or complete the translation by our own translators we can prove read it by our own prove readers but for now we're going to translate it by our own translators we can set a du weate let's say that well right now we're in December 2023 so let's say that I want to have that file ready by December 8th we can set the time a specific time we can change the hour here with the slider and we can also change the minute that's really nice right we want to have this ready by let's say 1030 great so after we have that we just click somewhere outside the calendar and we can move on here we have an option for the strings the task will be assigned or will be related to all the untranslated strings or we can also set a specific range uh date range for the strings that will be assigned to the task for example all the strings that were modified today all the strings that were modified in the last seven days this is helpful for reducing the scope of the task the because remember that you will be assigning this to translators and proof readers so they should have a clear idea of what they should be working on so this just helps you to narrow down the scope of the task or you can just select all the untranslated strings and keep the task Broad and open you can filter by labels you can exclude specific labels for the strings you can skip strings that are already included in other tasks that is also very helpful if you select this you will be skipping strings that are already part of other tasks to avoid any duplicate work from your translators so you can select this option which is broader but still avoid duplicate work with this option and then we see the files here you will see all the files of your project you can also filter with this search bar and to select on a specific file you just click here to select the file here you see the number of words and you will also be able to assign a specific language for the task or multiple languages if you need to please note that if the task has more than one target language here then the system will create a task for each language and just to show you that I'm going to select let's say Japanese and Spanish we're going to see this after you select the target languages you can assign spefic specific team members to the specific Target languages for example let's say that I want to assign a team member to this task in Spanish I can click on assign and I will see a list of my current team members of users in Spanish and I will select this one my team member account okay so if I select this user I have it here in the list and if I have like hundreds of users here I will will see a very long list and I can search for users here using the filter I can also like show managers show developers language coordinators proof readers and translators if I just click on one of these I will be filtering the list show translators show prove readers and based on whether we have the check mark here or not that means that we are showing these roles here we're show for example here we know that this is a project manager right so you can filter the list like this and you can also split files split files is interesting it's an interesting option because if you would like to assign multiple team members to the same file to work on different parts of the file like let's say that you are translating a very long article and you want two or three team members to work on the same file but without any overlapping work you can split the files and assign them to those specific strings if you split the files you will see this the approximate number of words that they will be translating and you can see unassigned words and we can clear the list by clicking here on the trash can we can also deselect members by clicking on their name let's click on apply here and now we see the profile image of the user that we just assigned and if we hover over the profile image we will see the username awesome so let's keep this task as it is translate the welcome to Free Goan file this is the welcome to free file so this is like a basic task but of course you can customize this to your liking let's create the task great task created successfully awesome we have three different categories a to do category an in progress category and a done category these are like the different status that a task can have for now we have this task one task in Spanish and one task in Japanese if we click on the language we will be expanding the details of the tasks and we will see the maass individual cards we have the same task per language if we select multiple languages so they will be kind of independent of course they will have a different number of words based on the the language and the source files and everything everything let's check out the details of a task here in spanish if we click on the task we will see more details like the language this is the description this is the title this is the number this is the task number that we can use to identify it the type of task we see when it was created modified the due date we also see how many files it has the number of words and strings mod if IED if there is a specific time range for the strings we see who created the task the username and if we click on it we will be taken to that profile we see the members of the task assign words and how many words are left and we also see some actions like view strings and Export at the bottom we find two sections here we can see the files related to the task and we can also write a comment this is help because we can keep conversations related to a task on the task itself that is very helpful let's say we need to work on this file just as a demo comment if I click on send here I can add my comment I see the username when it was published and the comment itself here at the top we see three options to do in progress and done and that is very curious because those are the three three categories that we saw here in all tasks if we click here we go back to the main boorn to do in progress and done and actually that is one way to change the current status of a task if the task is already in progress we can click here and the task will be updated to in progress if we go back to the main board we will see it here in the in progress category of the board another great feature is that we can drag and drop the tasks like this instead of changing them inside the details we can just change their status like this or we can do that from here manually and we will see them updated as well once a task is done we can mark it as done here like this and we also have the option to close a task there is a difference between a task being done and a task being closed it's not the same the task can be in the done status or category and still you will need to close it and you will be able to see all your closed task if you click here right now we don't have any closed tasks so let's just close one now and now it's disappeared from the board we only see the Japanese task we don't see the Spanish task anymore but if we go here to the closed status we see the task over here if we click on it we go back to the details and we also have an option to reopen it if we click here on the ellipses reopen we can also edit the task and delete it if we click on reopen we will be reopening the task and after we go back to our board we will see it again reopen the task so that is how you can update the current status we also have other options over here like exporting and uploading translations we can view the strings related to the task in the translation editor and here in the ellipses we can edit the task we can close it and we can delete it if we click on edit we will go back to a form that is very similar to when we created the task initially we see the duate when it started when it was was resolved we can filter by labels change the files change the target language assign new team members for a specific target language and we can also reset the task scope and progress but the progress for the files will be reset as well so be careful choosing this option great now you know how to edit and close a task you can close it directly from here as well you don't necessarily need to close it from the board it will we click here on close we will see that the task was closed just as before and we can keep it closed or we can reopen it once the task is closed you will see when it was resolved you will see all the comments as well they're all kept there so you can see the previous discussions that you had and you can reopen it like this that's why it's also great that they're independent because you can have independent conversations per link language and now let's see how you can actually delete a task because so far we've created managed and closed tasks so let's see how you can actually delete a task this is the Japanese task that we created let's follow the normal workflow that you would follow for a project first you created as say you to do then let's say that you move it to the in progress status then to the done status and after that you close it once you close it you can keep it here or you can also delete it you can also delete it before closing it but usually when we create the task is something important so we delete it if we created it by mistake or if we made a mistake we can also edit it so we click here on delete and we see delete the task translate the welcome to fre Cod cam file if the task is completed you can close it or or Mark as done so for now let's check how this is deleted by clicking on delete and we see that the task was deleted successfully awesome let's see how you can go to the translation editor directly from the task let's say that this was assigned to me and I want to start working on my strings if you need to go to the translation editor you can just click here on view strings and that will take you to the translation editor for your project in the knowledge B crowding mentions something very important about tasks here we see this question how do the source file updates affect the existing translation and improv reading tasks that is very important for for a project that is constantly being updated like for example a platform like free code cam we're constantly updating the curriculum and different resources let's see after the source file update the list of source strings included in the task will be updated in the following way the strength removed from the source file during the update will be removed from the task the modified strings that are marked with the keep translations option will appear in the task with the new modified text and the newly added strings won't affect the existing task in any way if the source file is restored to the revision containing the removed strings they will reappear in the task so so this is how crowding handles these constant updates to the source file great now you know how to work with tasks as a project owner or a project manager reports can be very helpful for understanding your team's current progress and activity crowding has a reports feature where you can track and check your project status to access the reports of your project project go to your project and then to the reports tab there you will find very helpful and graphical reports about the status and activity of your project here the first thing that we can see is that we have the project status and your Top members we will focus on the project status and the Top members here we find the size of the project how many words it has how many translatable words because remember that some strings are hidden from translators they're not translatable so that is why this number is different we have the source language how many Target languages we have how many members we have and how many managers we have we also see the progress bar here translatable hidden and duplicates we also see this bar here with the number of translatable hidden and duplicate words and over here we have interactive Graphics which are like super helpful I mean let me show you how they work you can see your translation activity prove reading activity and sour strings activity in specific periods you can filter them by day by week by month or by year let's keep the month range and here we can see the number of translated words and how that has changed in the period that you selected the number of approved work words new members active members and here we have an interactive graph with dates the Blue Line the blue graph is the number of translated words the green line is the number of translated words by translation memory and the light blue graph are the words translated by Machine translation over here so you can see all these three statistics per date you can also see proof reading activity by approved words and votes and Source strings activity by added words deleted words and updated words and if you ever need to check the performance of your team members and find the Top members to congratulate them or reward them you can go to Top members here and you can select a date range in the calendar you can just select a date range and generate the report like this that will filter the list to give you your Top members for that date range let's select this one right here and it's very easy to select the range because once you click on the day and you just need to move your mouse to expand the range like this let's start here from November 19th to December 3rd and generate the report and now you see that the date range has been updated and over here we can see the users this is my project owner user or account and this is my sample member account like this is a contributor we can filter Top members by language remember that we have six Target languages here let's say Spanish we have this one and we can also change the layout of the presentation like this we can choose which columns we would like to include the username languages that the user translates into number of translated words Target words approved voted and if we just deselect one of these you will see that the column will disappear this is helpful to customize the layout and the data that you will be getting if you would like to export this report as a CSV a Json or an xlsx file you have these three options to export this table you can also include the number of Plus or positive votes received number of negative votes received winning and joined when the member joined the project you can also scroll horizontally if you add all the columns but by default you will only have the basic ones the other ones you can add them as well and you can change the page here if you have multiple Top members by clicking on these arrows right now they're gr out because we only have one but if you had multiple Pages you can change the page here and you can also filter the user by the username by using this search bar great another great thing about the project status here is that you can choose the unit of this report if you would like to measure the performance in words you can do so but you can also change that to Strings number of strings now instead of words we will see translated strings approved strings and everywhere where we had words now we have strings instead and the data will be updated appropriately we have strings words characters without spaces and characters with spaces but by default wordss will be selected in the crowding knowledge Bas in the project reports article you can see a sample of these graphs for an active project like this one you will see the three graphs the total translated words the words trans translated by translation memory and the words translated by Machine translation this is what a project like freom would look like for example once it has some activity during a time period and for Source strings you will see it like this number of added words deleted words and updated words in blue that's also very helpful but now we see it as a sequence of bars instead of a line graph awesome so now you know how to gen generate reports on crowding and how to export them when you need to you can export your list of top members if you need to and check your project status so let's dive into conversations and crowding because communication within a team is very important and you can communicate with your team members directly on crowding with this feature so I will see you in the next part of the course let's talk about conversations communication is essential for any successful project you and your team members can communicate directly on crowding with the conversations feature with this feature you can communicate with one or more team members in a private chat each conversation has a subject so you can easily find them among all your conversations so let's see how this works to access your conversations you just need to click here on this icon we see no unread messages right now but that will take us to create a conversation to create a conversation first I need to search a user by name or username I can also filter users by contacts or by the users of all my projects I can filter my users by their roles as well if I know that I need to talk to for example a project manager I can just select all the project manager ERS I can select translators and I can also filter by language if I want to get a list of all my translators for Spanish let's say I can do so like this right now I don't have any I have one manager which is my other account to show you all of these features how this works with two crowding accounts once I have that user here I click on the user and this is added to my list and then I click on go I can remove the user if I don't want to include it by clicking on the X then I click on go and now I see a new conversation the conversation can have a subject or a title that you can use to filter and find that conversation so let's say let's say that I want to talk about creating a new glossery for example just as a demo I can write create a new glossery as the subject and I can save my subject create a new glossery I see it here in my conversations and I see that this conversation only has one invited member which is my other account and here I can just click on the gear icon to change the subject it's like editing the title okay and over here I can see that today Stefania demo my main account created the conversation and edit one user like this I can also see the time when this happened and if I need to I just write my message over here it's very intuitive let's say let's say do you think that we should create a new glossery for the project and after I write my message I click here on send and there we go I have my new message here and just like a normal chat application that we use every day we will see all the messages vertically in the order that they were sent and we also have additional options for each message we can share a message we can mark it as unread for us to review later later on we can edit the message and we can also delete it if we are the ones who sent the message we cannot edit or delete messages sent by another user let's say that I need to edit my message I can just edit it here let's just add the word hello hello hello do you think that we should create a new glossery for the project here and we if we edit the message just know that this will be added at the end edited and we can also delete the message like this if we click here we will see a confirmation message delete this message the action cannot be undone so we just delete it and it just disappeared another great thing is that we can filter conversations we can search for something in conversations by writing the text that we're looking for in the search bar and we can start a new conversation by clicking here on create conversation again the same process we filter the list we write the name or username we select the users and then we click on go to start a new conversation so that is basically the conversations feature and how it works great so now we're going to start diving into Integrations what are Integrations how can we use them how can we add them to our projects and what free Integrations can we use in coding let's see here we have our previous project the free codam project demo but for this demo I'm going to create a different project so we can actually work with the Integrations and import our file instead of uploading it manually like we did before we're going to create a new project really quickly project project name Integrations demo free go camp Integrations demo like we saw over here public project visible to everyone you can restrict access to specific languages after the project is created so that is very important too let me zoom in over here so we can see the the text better we already created a project previously during the course so I'm going to work through this a little bit more quickly Source language English and let's make the target language Spanish in this case okay we're going to make the Spanish and then we're going to actually create the project freeo cam Integrations demo public project I already have one private project so I cannot create more projects because I have the free plan I activated the free plan after the trial so I'm going to make this public by default okay this option will be great out then I create the project of course we can always change these settings now now we see that we can add files for translation to this project but we're going to do that through an integration when we have our project over here like we saw before we can go to the Integrations Tab and with a free plan we can add one integration how can we do that we go here to this button add integration there are hundreds of Integrations that you can choose from it's very important to choose the right one because on the free plan you can only use one at a time so for this this example I'm going to show you something that is very commonly used like Google Drive we're going to use the Google Drive integration so you can Import and Export files directly to your drive folders that you can use with your Google account if we click on the integration we will go to the description page where you can find an overview the features at a quick lens you can also find usually like a tutorial recorded by crowding and how to set it up you can Import and Export trans translations manually but it just takes a few clicks so we will see how to do that in just a moment it's free so we just need to click here on install and we will install it install if we install this application Google Drive the application will have access to our projects and it will be displayed in the project menu Integrations Google Drive select the users that will be able to use this app you can choose if only you will have access to this app all project members or you can also select specific users if you had more users here you would see a list you can select them and you can filter them then you would click on select or cancel for now let's select only me then select the projects where users will be able to use the app projects you own or selected projects this will allow you to use this integration in all the projects you own or you can also select specific projects let's just select the free cocam Integrations demo because we don't want want access to this in the project demo so let's select this selected projects and then we install it let's install it like this and we see a confirmation message installed awesome right then of course we can click here again if we need to uninstall it at any time after that we have it installed let's go back now if we go back to the overview of the apps and Integrations now we see that it is installed because we see this install button awesome so after that we just click on the X icon and if we refresh we should see our integration over here in the Integrations tab Google Drive if we click on details we can see this over here this will prompt us to log in with Google drive here I'm working with a demo email a Gmail account so I'm going to log in with Google drive after that I select the email that I want to link I click here and then I see that crowding integration wants access to my Google account when you allow this access crowding integration will be able to see edit create and delete all of your Google drive files so make sure that you are granting this permission knowing what the application can do on your account okay make sure you trust this integration and then continue after you have the integration set up you will see this it's a actually quite easy you will see the content of your drive here I have a folder that I created on my drive manually and if I expand this I see the welcome to Free code cam PDF file I can just select this file if I want to translate it on my project and then select sync to crowding after I click on sync to crowding it might take a few seconds to actually sync to my crowding account you will see like this loading animation you can also select all the files of a folder by selecting that folder and voila here we have the content on crowding select content for synchronization to Google Drive this is like a back and forth process we first select the files on Google Drive then we sync that to crowding and then once we have the translation we will sync it back to Google Drive and we will have the translated version let's see how you can do that but first let's also check out these options that we have at the top we can see error Logs with the most recent error logs for this application right now we don't have any because we just installed it here we have the settings if we want to schedule synchronization for pushing sources and translations we can push sources and translations every hour every 3 hours 6 hours 12 hours or 24 hours and we can also show shared with me files from our drive if we don't want to show files that have been shared with us on our Google Drive account then we just disable this and then we can save and close this if we ever need to log out we can do that and log back in with a different Google account with a different Gmail great so now we have this on crowding and we can see we expand the folder and the file we can see that we are going to translate it into Spanish because this is our target language if we go back to our project and we check on sources now we see a folder that says Google Drive integration demo welcome to Free code cam we see the file over here in our sources Tab and if we go to our dashboard we will see Spanish as a target language and then we will see this the file ready to be translated if again we double click on this file we will go to the translation editor where we can start translating let's translate this first string again this is how we translated it before so I'm going to select this option and save the translation and then we are going to select this translation memory string again and then we are going to save it we're just going to translate the first two strings of this file so you know how this works remember we already saw all the different details of this translation editor so you should be familiar with these details you can continue translating the file but I'm going to show you how you can synchronize this back to your Google Drive we will have the first two strings in Spanish after we have that saved we can go back by clicking on the arrow and then we see that we are getting some progress on the translation 7% awesome right but we want to synchronize that to our Google Drive we go to Integrations details and then we can sync it manually or we can set the synchronization time like we saw before in the settings to a specific number of hours if we want to do that manually we go here to synchronize it and then we synchronize it we can either choose to synchronize the entire folder the file in all the languages or synchronize a specific language let's choose Spanish here and and then when we select the file and the language we can click here on sync to Google Drive If We sync this to Google Drive let's see what happens again we may need to wait for a few seconds until this is synchronized and we see that the file was exported successfully what happens now well let's see if I go to Google Drive now I see this welcome to Free code camp with the Spanish letter code the the two letter code and I see that it is in a doc X format because remember that crowding converts the file formats when we're working with PDF into a format that is easier to edit and work with with individual strings so if we double click on it we will be able to open it in Google Docs and we see the translation we see the first string translated and we see the second string translated awesome right crowding added this language code to differentiate the files automatically so if we have multiple languages we will have different files with their corresponding language codes we can do all of this manually like we just did or remember if you go to settings you can set the synchronization schedule to an hour 3 hours 6 hours 12 hours or 24 hours if you're translating your files gradually step by step or with multiple team members you can synchronize all of those changes to Google Drive that is an example of an integration that can be very helpful in crowding we have many many different Integrations in the next section I'm going to show you some of them so you have an idea of the kinds of things that you can do with this amazing Integrations feature now that you know how to actually install and use the integration let's see how you can uninstall it if you click here on details first I would suggest logging out here where you can log out of your account by clicking on log out and then it's just the same process for logging in again with your Google Drive just like we did a few minutes ago and then if you go to add integration you can choose here to uninstall it let's uninstall it and see what happens we see are you sure you want to uninstall Google Drive application well you can uninstall it like this and we see uninstalled successfully if we refresh this page then we don't see any Integrations and again we can always install a new one there are tons of free options to choose from if you want to filter the the Integrations by a specific criteria you can do that by category features CMS marketing ecommerce development specifically this is very helpful for development if we are translating a website like we are going to do in just a few minutes we can add the GitHub integration gitlab bitbucket in addition to the Integrations and apps you will also find guides over here and others that are tagged with system come over here so there are different types of resources combined in this very helpful you can also filter by author by tag search for a specific Apple integration filter by category sort by relevance sort by name sort by date published and you can always reverse the order great so let's go into the next section where we will take a look at some of the apps and Integrations that I think would be most helpful for you if you planning to translate your files or your website if you're working on development I will see you in the next section and then we will start working with the GitHub integration and working with other Integrations to actually translate your website so I will see you in the next part first we will take a look at the Integrations that you can use so let's go there let's dive in before we dive into other specific Integrations like the GitHub integration and the the visual studio code extension I'm going to show you some of the Integrations that I personally think would be most helpful for you as an organization or as a representative of an open source project or an educational project first of all of course we find the GitHub integration over here if you click on the integration you can find more details about it like an overview and here you can find specific details like the permission it requires and how it will be registered so it is very helpful you may also find other tutorials by crowding and how to set it up specifically we will cover the GitHub integration and we will see the visual studio code extension they also have a visual studio code guide over here in the absent integration section over here a guide of how to use crowding for VSS code we will see that step by step with a sample react app then we also find other tools that you may find helpful like Google Sheets integration if you're working with Google Sheets to create your glossies or to translate content that you're storing on a Google sheet you can also install this free beta integration right now it's in beta it's in in testing in a testing phase but when you're watching this video this may be out of beta so it might be more stable you can install it by clicking here to synchronize multilink Google spreadsheets if you're storing your files in other services like Dropbox you can also install this free integration the Dropbox integration to localize your files like we did with Google Drive and since artificial intelligence is increasingly becoming more important in every area of development and translation crowding also included an AI assistant CH GPT Gemini to take your localization to the next level right now it's a free integration it's in beta and you can install it by clicking on this button you can find more details about it and how it works here in the overview another integration that I would suggest checking out is the suggestions diff Checker this integration Compares two translations and sees the differences between them so this is an integration that's especially helpful for proof readers and for translators that compares two two translations and shows the differences between them so that can be helpful because sometimes when we are checking the translations we may miss small details and this just highlights everything better it's a free integration that you can install with this button remember that with the free plan you can only use one integration at a time so make sure to choose that carefully but they are all really nice we also have a glosser editor we can add and change the terms from your glossies directly from the crowding editor if we in install this integration it's also free we can install it like this we can just edit the terms directly from the crowding editor without having to go to the glossery tab that can be helpful to save your time and if you're an organization that's also sharing educational or free content through video resources you may find these two Integrations super helpful you just write here captions and you will see this extension video captions Translator translate captions titles and descriptions from YouTube videos video captions localization with crowding you have the tutorial over here and you can learn how to set it up but it's always very easy they're usually very similar to what we just did with Google Drive they just have different purposes and that's also very helpful to synchronize the files automatically and I would personally suggest if you're working with video using this integration video preview this is an integration that lets you preview the video that you're translating when when you're translating the subtitles for additional context this is always very helpful if you watch the video when you're actually translating the subtitles or the or the captions so these are some of my personal suggestions for apps and Integrations I had an overview of the Integrations and these are the three ones that I do think would be worth it for any type of project specifically the last two if you're working with video but there are hundreds to choose from and many of them are free so take advantage of that you can use the one integration with the free plan if you're working on mobile development you also have Android Studio A plugin for Android studio and many more congratulations on reaching this part of the course it's great to have you here and now we're going to dive into the crowding Enterprise features why crowding Enterprise well because that's the plan that opensource projects and educational projects get for free with crowding first let's start with the basics let's start with how you can actually get a free license from crowding if you are an open source project an educational project let's see if you go to crowding docomo here to pricing and you quickly scroll down to the bottom and you reach the frequently asked questions you can see here at the the bottom do you have plans for open Source projects and educational institutions yes they do have them so if you want to use crowding for an open source project you can sign up for a free account set up your project and then send them a request they will grant you the license you can also apply for an academic license if your project has educational purposes each granted license will include an unlimited number of projects strings and members here you have the links for requesting that license after you set up your project and you follow all the steps that we saw in the previous part of the course for that you will need to choose either open source or academic license for either one of them you can open them and here you will see if you are an open source project the setup request form crowding is completely free of charge for open Source projects before submitting this form and where you will request the license you will need to ensure that your project meets the following criteria here you have the list this may change as this may be different when you're watching this course but initially you have to create a translation project in crowding the project that you are currently owning the open source project has to be licensed under an approved license from an open source initiative your Project's source code has to be publicly available for download you do not have any commercial products related to the open source project that you are requesting a license for you are the Project Lead so remember this you have to be the project lead to actually request this license and submit the form you have been working on your open source project for at least 3 months you must have an active community of collaborators you keep the news section of your website up to date and you release updated Builds on a regular basis so it's not like a project that you just released once and then you don't update anymore it has to be updated on a regular basis please note that as an open source project maintainer by submitting the form you are agreeing to join the crowding beta group so you will test the latest features and you will also contribute your project translations to the crowding Global translation memory to gain access to crowding neural machine translator this is the form that you have to submit the project name project license project website URL describe your project in as much detail as possible your email your name your crowding username and your crowding organization name specifically for crowding Enterprise if you're currently on a trial all your information is kept secure and protected so after that you just submit your request and the crowding team will contact you that is for an open source project but what about academic projects you just go here to the second form and you will see a form that is very similar with some differences this is an academic license project setup request form they are intended for educational purposes only they can only be registered with the educational email address of your institution they must match a school's domain name here you can see the different features you can have open or private open licenses are provided for Public Access projects and private licenses allow you to limit project access due to confidentiality so you can choose between an open license or a private license and here you can see the differences in the features the most important one is that here you have private projects if you choose private the open license does not have private projects open licenses are completely free of charge here you can see the form the name of your educational institution your project name project type it can either be open or private describe your project in as much detail as possible your email your name and your crowding username then you submit your request with this form this is how you can get a license if you're representing if you're the Project Lead of an open source project or an educational institution awesome so after you have your license let's see how you can actually create an organization in crowding with crowding Enterprise this is more advanced and the crowding domcom account that we have been working with it has more features and it's usually used for large organizations or teams that will be working with many team members or using the power of crowdsourcing by engaging collaborators to create an organization you just need to go to here login or sign up if you click here on sign up you will go to where you can actually sign up for an account but by default crowding dcom will be selected this is like the basic account that we have been working with so far when you get a license as an organization you will be able to create a an organization through crowding Enterprise that has more advanced features and you can also try it for free for 30 days to see if the features match what your organization needs to sign up to create the organization we see this short form the organization name you will need to choose an organization name that will end with doing.com in our case we have an organization called freec codam course demo. crowding if you go to that URL you will be able to check your organization then you need to enter your work email that's usually an email granted by the organization or the project then your username and your password after that okay check this check box to agree to the terms and conditions and the privacy policy you will also see a verification from cloudflare and if you click here you can create an organization I already have my organization created so I will click here on enter an existing organization to enter an existing organization you just need to enter your organization's URL in my case that would be freec codom course demo. crowding dcom it's very important to write the name with dashes okay if you forgot the URL if you click here you can find your organization with your email they will send you a confirmation email and find existing organizations you've joined or can join but for now since we are just logging in we are going to enter our organization's URL then you will see this the name of your organization then here you will enter the email or username that you used when you created that organization and then your password if you don't want to use your password and that's usually what I do I can click here on the magic link option it's super helpful it will send you a link to your email and you may also need to enter a second verification code but it's helpful because you don't have to actually remember the password you can either click here on login if you enter the password or click here on Magic link I'm going to show you magic link because it's very helpful and I love this picture just see your email here confirm that it's your email the one that you entered before you can also choose if you want to stay logged in then send magic link you will get a magic link on your email and you will be able to click on a login link that will open crowding on a different different tub and this is what you will see when you enter your organization account it's very very similar to the crowding decom account but it does have a few more advanced features when you get the full license as an organization but we will go through that and you will see the similarities and differences in just a moment over here the first thing that you can see is the sidebar it's located to the left the first section is the workspace where you will see your projects or groups groups are like folders that you can use to categorize all the different projects of your organization a project is the set of files that you're going to translate for a specific project of your organization but a group is a way to group your projects we will create a project and a group in just a moment for now let's just have a quick tour of these options because you will find them very familiar if you already watch the previous part of the course then after workspace we find start projects if you have many different projects and you want to just select your favorite ones or your most used ones or the ones you're actively working on then you can click on the start icon in the project start them and find them all here that's very helpful if you have many projects then here you can find notifications you will see a history of all the notifications as like in a timeline and you can mark them as red red or un red you can also find archived notifications and you can filter them you can show all notifications just unresolved issues or notifications without a reply here you can also Mark all your notifications as red but I already did that here so that's why this is gray out but you should have this enabled if you have unread notifications then after that we find the messages messages is where you can create conversations remember conversations from crowding decom yes it's basically the same with crowding Enterprise you can start a conversation with individuals or invite multiple members you can search for members by their name username or email so here you can enter a username and an email and you will find your member and start a new conversation here we also find tasks tasks here work a little bit different because in the general view of this organization tasks are like shown globally you can create tasks within specific projects and they will all appear here you can also assign specific people to each workflow step and enable project notifications to avoid creating tasks but that is something very specific it's outside of the scope of this course you may dive into this if you don't want to create tasks for specific team members remember we create the task directly within the projects and they will all appear here because we're not actually with in a specific project we're within the organization's account that's something that you should keep in mind when you're in this main dashboard great that's the first category of tools and then we find more advanced tools that we have seen in the previous hours of the course here we find managers I created the organization so I am the owner I am a manager here it shows when I joined and the teams I belong to I can also search for specific managers here if I have many different managers in my organization and I can go to different pages and choose how many rows I want to see per page that's great I can add Managers from here you will see this helpful description on the bottom right and you can either click on got it learn more or actually use that additional tool here we can add a manager and adding a manager is very similar to what we did in crowding dcom you just need to enter the name username or email here and you will be adding a manager then you click on done and that's it you will be adding a manager for a specific subgroup or project then we find workflow templates we have not really covered workflows during the course because this is something that is more oriented towards Enterprise accounts and organizational accounts they're basically a sequence of steps that um the content of your project should go through when you start your project like like translation proof reading and quality assurance all the different steps that you would follow in a translation process here you can find some workflow templates that you can start with that you can edit and customize to your needs if you need to search for a specific workflow you can always search it over here and you can sort them by their name or by the date that we modified you can also reverse the order over here and change this to list view if you don't like the grid view I personally like the grid view because it's more Visual and I can actually see the workflow here they do have some similarities with flowcharts because they describe a process and a sequence of steps if we click here on let's say crowdsourcing because that is an example of what a nonprofit organization like an open source project would usually use crowd sourcing remember is the practice of engaging your community in the translation process so if we click on it we will enter like the the workflow editor and we will be able to customize each step let's have a quick overview of this so you can understand this better this is the workflow you can if if you click on the left Mouse button you drag it you can also zoom in and zoom out with these controls here at the bottom left and you can click on each individual node over here in the workflow to learn more about how it's being configured for example how can we read this workflow we start here we start the process and then we see that the strings are on translated then they go through a process of translation memory pre transation here we see that we need to select the target language so it does need some specific setup or configuration to start the process Auto substitution of 100% match for the translation memory so the automated suggestions have to be a 100% match to actually translate it then the strings that are unrated go to the crowdsourcing phase here we can see more details about this phase engage your community in the localization process collaborate with volunteer translators and reward their efforts in a way that works for both of you all projects with this workflow step will be publicly accessible and translation resources will be shared with all volunteers registered in your organization ation so you can see that we have some description of these steps and Below them we have some settings that we can configure but for that we need to edit the workflow and we will do that in just a moment finally here we see proof reading and once the strings are approved because everything is translated you can see here we have translated strings then we just need to approve it then the strings are approved and the process ends since we don't have any Target languages yes we need to select a target language this is the basic crowd sourcing workflow we have other templates let's see how you can edit the workflow on the left side barar when we edit the workflow we see many different steps that we can add to this diagram and we just need to drag and drop them like this let's say that I want to add an extra Pro reading I can just drag it onto this area and I need to connect it with the previous node in the process so let's say that I want to have a second prove reading phase I am very very careful with my translations and I want the team to have a second proof reading phase what do I do well I just disconnect these two notes and then I take this node I click here at the bottom you will see a plus sign and I connect it over here creating this flow once the strings have been approved I just take this at the bottom and voila I connected with the end like this and I can readjust the location of the noes or the the different steps in the process over here in the diagram and I can also configure it so let's say that the output of this pH will be an approved string so that is already marked by default because it's a proof reading note and the output could also be approved by the assigned user and that would change the output of that node we can select specific languages for the output of that node or what the that phas will involve Great that is a proof reading step but we have many different types of steps we have Source text review custom code switch Source language translation memory pre transation machine translation pre transation translation translation by a vendor translation by apis proof reading and prove reading by vendor those are all the steps that we have right now and since we're already using the crowdsourcing step we see that it is great out because only one crowdsourcing step can be added to a workflow so they do have some limitations based on the logic of the step let's see how for example we can configure this translation memory pre transation we can select the language we can turn on or off the auto substitution or we can use project settings and we can also set the minimum match ratio how good should the match be for the translation memory to actually assign a translation to the string in this case we're saying that it has to be a 100% match but we could decrement this number so we can actually find a match that fits our needs or we can also ask the match to be perfect to actually translate the string before the crowd sourcing step and in this case I would suggest keeping this off but you can automatically approve added translations you can choose to approve the added translations if they are a perfect match you can approve all of them which is it's always recommended to actually have someone reviewing that translation before it goes live in your project because it is automatically generated or it is selected from a database of previous translations that may not be appropriate for specific context so it's always great to have a pro reading phase before approving them but with perfect match with perfect match but approved previously or you can also replace all but skip Autos substituted translations so these are the settings that you can customize after you have your workflow ready you can choose to save it you can also undo or redo the changes you can find more information here in this question mark and if we see the tips we see drag workflow steps to the working area to get started that's exactly what we did right now we can drag the workflow steps we can set the connection between all the selected steps we can select the target languages and configure step settings to make each step work you need to set it up click on the steps one by one to Define Target languages and other specific settings workflow configuration is almost done so you can click save if all the steps are correct and if all the steps are connected to each each other like this and over here in the gear icon you can see the workflow settings you can change the name of the workflow you can change the description the template already has a description that you can customize and you can also choose don't center the selected workflow step when editing you can enable or disable this and after that you can save your workflow by clicking here that's basically the workflow editor and you can customize this to fit the needs of your organization here if we go back to the workflow templates in our organization we go back and we can see additional options over here in the templates if we click here on the information button we will see the name of the workflow and the description so we can see more about the workflow before we actually enter the workflow editor and if we click on the ellipses we can preview the template if we preview the template we see it over here and then we can click on edit we can also go back we can edit it directly we can duplicate it and we can delete it if you want to customize a template but you don't actually want to change the template itself then you can duplicate it and then customize it to your liking and you can also delete it another option would be to create a new workflow from scratch if you want to do that then you just need to click here on Create and then you can create a new workflow template projects within an organization can share the same workflow template or have different ones each step can be assigned to different people and include different languages so we are creating a new workflow template because over here all the workflows that we have are templates that we can assign to multiple projects so we can create our workflow once and reuse it as many times as we need to we are writing the name of the workflow and the description once we have that we just click on Create and that will create our workflow we can assign it to the projects we need awesome now you know how to work with workflows so let's continue with these options you will find them very familiar because they are familiar we saw them previously the translation memories we don't have any yet because we haven't created a project but here you will find your translation memories your glossies and your machine translation the translation memories can be created over here with a create button and if you create a new translation memory you will need to enter the name the language and you can drag files here or you can select files from your file system if you want to actually upload a file with the source strings and their translations into different languages this can help you to speed up the translation like we did in crowding dcom the glossaries can also be created here with the create button new you you just write a new name you assign a name you select the language of the glossery and you can also drag glossery files over here machine translation has a few different options by default here you can see crowding translate the engine is crowding translate and it supports 24 language pairs you can see them over here English to all of these languages French to English and Chinese simplified to English and Japanese so you can check if the language pair that you're looking for is available here on crowding translate for the machine translation process if you click on this ellipses you can edit the machine translation clear cache or delete and you can change the view by clicking here on select columns if you want to show all of these columns just check them if you want to hide any of them just uncheck them and you can customize the user interface to fit your needs this way you can also hide everything or show everything over here with all selected great and you can also over here we go to the bottom right you can add a machine translation engine you will see it added over here below as a second entry here to add a machine translation engine you can use an existing integration or a custom integration and here you can select the engine Google translate Microsoft translator Amazon translate then you assign a name to your translation engine and you select the applicable languages you can leave it empty for access to all languages and you can enable the machine translation in specific projects here you would be able to select your project you can leave it empty to enable it in all the projects after you have all of this set up or if you want to set up a custom integration you can do that and then click on Create and you will have your new machine transation engine that's for machine translation if you want to go to reports then you click here on reports and you will see basically all the information that we had in crowd.com in a different view or presentation the organization overview number of words languages the percentage of strings that have been translated by users translation memory machine translation we have unresolved issues quality assurance issues we have charts different charts and graphs of the proof reading and translation activity so you can have a a bird side view a general overview of everything that is happening in your project and you can keep a close track on your theme it can be super helpful remember that you can change this to show you for example a number of words number of strings characters or characters with spaces so you can get as granular as you need for your organization and you can also expand the range the the time range of the summary from 30 days to 24 hours to last year or you can narrow it down to the last week depending on the data that you actually need to analyze they're very very helpful and in this with this option the purple option you can also generate a list of translators based on a specific period of time to see who contributed the most to your Project's translation if you click here on generate you will get a list of your Top members that's always helpful to know who has contributed the most to your project after that we find here the store which is an interesting area of the organization because it's already incorporated into the organization if we click here we will see all the different applications that are available in crowding if you see this little arrow here that means that the extension is free to download or free to incorporate into your projects and they do have many many different applications in their store you can filter them by author by specific authors you can filter them by tax those are the two options author and tax you can also search for them in the search bar you can filter by categories and by relevance by name by date publish so basically you have many different options to find exactly what you need and additionally you can also reverse the order over here we also find something very interesting if you want extra quality assurance checks you can go here to QA check templates and you can add them to your project like colors mismatch date format consistency find duplicate words Emoji mismatch extra phone number forbidden characters it's just great to know that we have all of these extra quality assurance features that make the translation process a lot easier so I recommend checking this if you are representing an organization it will help you and your contributors a lot it will save you a lot of time and finally we reach user management user management is where you can manage users and teams I can see a summary of all my users when I joined when I last saw the project my name username the permissions I have and I can select my row and perform other operations on me like on that user which is really me but it could be any user that belongs to my organization I can edit the user first name last name pronouns time zone and the email and I can also view the user crowding is currently working on a feature that is coming soon working on so you can expect this feature to be available perhaps when you're watching this video it seems like it will show you the test that the user is currently working on so that's great I'm looking forward to that feature from the bottom right you can also invite users if you want to invite people to your organization you can use their emails you can send multiple emails just separate the addresses with commas so if you write the emails here like sample gmail.com and demog gmail.com you will going see that I'm adding all these emails and I can also remove them here by clicking on the X if I click here on this button send invite I will be sending the invites to those emails and they will be able to join my organization now that we covered all the tools that we have here on the left sidebar let's go to the settings because in crowding Enterprise we also have settings that we can customize just like in crowding dcom we will go through them real quick first we're going to start with the account settings and then the organization settings for the account settings we can see our personal information like Photo first name last name pronouns the platform language we can change this to English or Chinese simplified our username and our email then we have security features like the authenticator app connected applications device verification they have many different ways to keep your projects safe then we have notifications we can configure if we want to get inapp notifications or email notifications or custom notifications basically we can get notifications for many different things like collaboration Integrations new strings language progress content issues it's really great to know that we can customize this to fit our needs exactly I encourage you to go through all of them and check what you would like to enable or disable from the notifications panel and over here we can also find personal access tokens that we may use with accounting API command line interface and some of the Integrations and plugins they may ask for personal access tokens you can generate a new token over here clicking on this button and that's the account settings in Enterprise if we go to organization settings over here we find even more settings that we can customize we have the name of the organization we can change that the logo public organizations this section is unlocked when the organization has at least one public project a public project in crowding is a project that has has a crowdsourcing step in its workflow remember we just talked about workflows and we had a crowdsourcing step so we have to have that step to enable these settings public description default public project View and featured projects free Cod cam is an example of a public organization you can see this over here we have this view we have different projects and we also have the name and we can have a description here in about and finally we see a custom domain you can enter the custom domain over here and save it then we see authentication we see different apps that we can install from the store and we can also install private apps custom QA checks what we just saw that we can add from the store we can configure web hooks custom languages custom placeholders and much more like security logs and legal and compliance but that's beyond the scope of what we're trying to do over here those are all the settings that we can configure if we go back to the workspace now let's go through these options that we have here we have the search bar where we can search for projects if we have many different projects they will appear here and you will be able to filter them to find them quickly here we can see notifications over here we can go to conversations it's the same as clicking here and here we can find more information like support help center community cookies keyboard shortcuts and what's new you may see some differences between what I am showing you right now and the state of crowding Enterprise when you take the course but they will be small updates or additions or modifications but overall the functionality should be basically the same great now you know the basics of the crowding Enterprise user interface so we're going to create a project in in in crowding Enterprise to show you how it works and how we can also create groups to group your projects by category so I will see you in in the next section to continue with this topic let's say that I I'm representing an organization and I'm creating the project in my organization's account how can I do that how can I start a new project we're going to be looking at how this works with a basic example the PDF file that we worked within the previous sections of the course but this process will apply to projects of any complexity okay I'm just using the PDF file to show you all the basics if we click here on create on this button here at the bottom right we will see two options we can either create a project or create a group what's the difference between a project and a group a project is a set of files that we are used to working with but a group is like one level above the concept of a project because it's like a folder that organizes related projects on under the same area or space in the workspace if we create a group we can also create subgroups groups within groups of projects and that's very helpful to organize our projects because they can share resources within the same group we can share translation memories we can share glossaries we can share Machine translation engines and workflows so creating groups and organizing your projects like this can save you your contrib rors and your team a lot of time so let's create a group let me show you how we can create a group new group let's name this Android let's say that we are an organization and we are developing an Android app like free codam has its own Android app if we are planning to have multiple projects for Android then we can create a group named Android and then we click here on create group if we create that group we can see it right here Android the group is empty but now we see the workspace we can filter our groups and projects by their visibility by public and private projects by their translation status and by the workflow status we can also filter by their name and sort them by their name by when they were added by their last activity and we can switch between list and grid view but I personally prefer the GD view so I recommend it but it's really up to you if we click here on the group we will be inside the group inside the Android group we can see it here within our workspace and currently we have no projects in this group all projects that we add to the group will appear over here just to show you how this works with multiple groups let's create another group let's say web for all our web application projects create group web and let's create another group iOS let's say that we are developing an app an app for Android and for iOS and we also have a web version like fre codam so we have three groups here that are all empty right now if we go into the groups we will see them over here we see the overall workspace structure and if we click here we can go from one group to another without actually returning to the main workspace this is quicker and it can save you a lot of time awesome so you know what a group is you know how to create it so let's actually create a project let's create a project in crowding Enterprise for your organization to create a project you click here on Create and then you can choose if you want to create a project or a group a group is like a set of projects here we created the groups Android web and iOS right now these groups are empty but we can always add new projects to them let's select project here and let's see what we need to choose and customize we need to customize the name so let's name this freeo cam tutorial the project languages are going to be Source language English and target language again we see the same list of languages that we are familiar with from previous steps and we can choose Spanish let's say that we are going to choose Japanese Bengali Hindi and French just to add a a few Target languages for our project but we will be mainly working with Spanish like always we can always click here on the X if we want to remove that language selected from the list then we can also click on clear we can create custom languages or we can prefill the list with the top 30 languages on crowding we have all of these options then optionally we can choose a workflow by default you will see the inhouse translators workflow but but you can remove this with the X and you will be able to set up a workflow later you don't have to do that at this particular step and you can see all the four templates that you already have predefined let's say that we choose a crowdsourcing workflow just as a example because if you're representing an open source project or a nonprofit organization you will be working with crowdsourcing so let's see how this works we can also enable this delay workflow start delayed workflow start allows you to upload existing translations and resources like translation memory or glossies even before the project becomes available for translation so if you want to upload any existing resources to your project just enable this okay for now we're going to keep this disabled and then we create our project and here we can see our project in crowding Enterprise it's a bit different than what we saw in crowd.com but the functionality is essentially very similar let's go through the main aspects of this first here we find the name of our project and we can search for projects if our organization has multiple projects we can also star our project if this is a project that will be used very frequently we can start it here by clicking on the start and you will see it in the start projects in your organization that's helpful if you want to keep track of the projects that you're currently working work on or your most popular projects so that's like a quick way to have them at hand here you can see that we have the crowdsourcing workflow five Target languages zero Source words because we haven't uploaded any resources yet and the last activity was a few seconds ago we can change our project's logo in the settings that's always helpful to create a friendlier tone for the organization and for your volunteers and contributors first here we we find the dashboard in the dashboard we find our Target languages with a very similar user interface that we had before we have the translation and approval percentages we can see a more detailed breakdown of the different steps of our crowdsourcing workflow that we chose we see this automatic step we have the crowd sourcing step and we have the proof reading step and we can go to the editor very quickly or we can close this for every individual language if we click on the language we go to that particular language and here we would see the source files if we go to the details we can see all the managers and if we have any members project members we will also see them here we see their role the project ID when it was created The Source language we can change that by clicking on the gear icon and then choosing the language again we can change that over here if we need to and we see how many project members we have we also have the option to upload download or pre translate right now our workflow in the second tab here in the second step we see the workflow scheme here we can see that we have the same workflow that we had for crowdsourcing before but now instead of being a template it's actually customized to our project because now we do have Target languages selected Bengali French Hindi Japanese and Spanish so instead of being just a template now we do have specific translated languages and here if we click on crowdsourcing we also see a special page this is your crowdsourcing settings page here you can configure the appearance of your project on the public page what your volunteers will see set up branding and build a community by sharing an invitation link on your website or social media that's basically what fream does for our community once confirmed publish your project to make it visible on your organization's public page if we go to free code camp we can see that this is the translation page for our Organization for free code cam we see the feature projects all the projects we see an about page and we can also share links to our organization on our website so basically this is what free Cen has configured we can customize our logo by uploading a new logo here change the public project name use a catchy title to inspire your contributors then we see the public project identifier the public project URL how people are going to be able to reach your public project and your description this is optional you can also choose a custom domain if you click here you will go to this part of the settings where you can set up your custom domain your organization settings now if we go back to the project now we know what workflow is we know the crowdsourcing step in the crowdsourcing step we also see the readme we can edit the readme with the markdown format add links quotes and images everything to get your community excited about this new project that they can contribute to you can also activate gamification but that feature is coming soon it seems like it's going to be a great feature you can activate reward system to encourage contributors that's a very interesting feature I'm looking forward to seeing it might be enabled by the time you watching this video so make sure to try that for encouraging your community then you can also see the status image this is something that you can embed in your projects read me the localization status this one right here the general documentation or any other service for that you use for the project like GitHub this is a preview of your status image it will show the percentage of the translation of your project you can embed that status icon with this line of a markdown here for HTML this line of markdown for a your readme or markdown file and you can also share this image URL you can copy it by clicking on this button and it will be copied to your clipboard you can also invite a developer if you need help with any of these steps another thing that is very helpful for crowdsourcing is assigning proof readers and manager roles proof readers and managers participate in discussions they help you find the best translations and basically organize the localization community so you can invite people here and you will be inviting them to contribute to this particular project and finally we see building Community direct link this is a link that you can use to invite people to your crowdsourcing project you can share it directly on your website or send it via email it's great out but you can copy it here and it will be copied to your clipboard please read the privacy policy notice so you know everything that crowding is sharing with you here about the privacy policy when you share this link and here we can also see a website pop up you can see the crowding is thinking about everything that can be helpful to engage the community for these types of crowdsourcing projects you can also add the website popup the crowding web widget encourage visitors to your website to contribute to the translations the this widget allows browsing visitors to translate and vote for Strings shown in a Rand order directly on your website this way more people can contribute to your Project's translation you can enable translations via the web widget over here if you click on it and you can add this this JavaScript snippet to your website Pages where the widget should be displayed you just copy it right before the closing body tag and you will see the widget where people can contribute please note that each person who clicks on the widget must choose from the list of all the project Target languages be for contributing if you want to skip the step predefine the target language at the beginning by adding the language code to the snippet members will also be able to change the language in the widget settings this is an example of what a snippet with a French predefined language would look like here we can see this data language code we can see F FR which is the twetter code for the French language so that's very interesting and I highly suggest diving into these Ops because they can be super helpful for engaging your community especially this feature that is coming soon the gamification system to reward your contributors great so after we know about that let's go to sources here we find files and strings files is where you can upload your files it's very similar to what we saw in crow.com but we have a few option a few different options here we see upload files from the device from your device you can also upload zip archives you can use samples from crowding to explore how the platform works you can set up Integrations with your repository or other supported systems like we did before and you can invite developers to help you with the project setup currently we have no files to translate but I'm going to upload our welcome to Free code cam sample file just as a test upload file welcome to Free code cam it's uploading the file it's uploading the file and you may need to wait for a few seconds while it's being uploaded and also remember that this has to be converted into individual strings so it might take a few minutes or a few seconds while it's being processed also since it's a PDF file it will be converted into either HTML or dogx files it's automatically converted so now we close it and if we double click on it we see a preview of the file over here if we click on these three small while the in the ellipses we see all of these options preview opening editor settings download Source view progress view strings update move rename and delete basically the Bas the essential functionality that you would need for any file and I'm showing you this with a basic doca or a PDF file because the functionality will be exactly the same for projects of any size or complexity okay so I'm focusing here on the basics to be as general as possible so you can understand how this works and apply it to any project that you're working with let's select this file and let's see what we get here on the right sidebar we see the details the number of strings number of words when it was last updated we can preserve folder hierarchy for export that is also important if we want to keep that hierarchy when we export the files we can click here we can also download the translations for selected languages and we have a history of revisions made to the file we have 24 strings added none of them were updated and none of them were removed at this point then you will see like a timeline a vertical timeline being created as you work on the file great revisions one and you will be taken to that timeline you will see all the different revisions of your file with this Arrow you can also set the priority right now it says medium priority if we click on it again it will turn red and it will have a high high priority or right now if we click on it again it will go to a low priority so you can help your translators choose what to translate first by giving them this particular priority great over here we also find the search bar we find an option where we can create a branch if we're working with Version Control Systems like GID and we want to create different branches we can also create folders and we can add new files we can upload them we can create strings Vault or we can set up an integration to upload them or import them automatically through an integration now if we go to Strings now we can see all the strings that we had from that particular file that we just uploaded we can see the key for that string the context and the source in English the text on the string so we have all this detail and for each individual string we can edit it we can hide it or we can assign a label to it we can manage labels if we click over here and assign labels to individual strings it goes to a very granular level this tool and how crowding presents the information we can filter strings because you can see that right now I only have one very simple file and I already have all of these strings for a real project this would have like thousands of rows or millions of rows potentially if you want to filter them you can filter them by strings with issues with comments with screen screenshots or with different visibility only the strings that are hidden or visible you can also search for them by the source string by the context or by anything you need to filter in this list you can edit the string that you currently have selected by selecting that string with the check mark over here and then clicking here on edit that's another way of editing that string you can also hide it or you can manage that String's labels these are like shortcuts to the options that you have over here we can also add a string add a source string ourselves if we need to if it's a string that is not in one of our source files here at the top we also see all files we can filter the strings by the files that we want to check for example if we had multiple files we could only show the strings for this particular file and here we can search for that file if we have hundreds of f files so we don't see all the strings here in an endless list of rows we can just go to the strings that we're interested in and over here we have an option called labels where we can manage the labels that we can assign to specific strings we create a label and then we can assign it to a string very easily with this option label ass let me show you how to create a label we go to labels then let's say that this we want to create a label that says that the string is important let's say we save it now we have that label we can edit it or delete it and now if we go back to sources strings and we select a specific string we are going to label it as important we mark it we check it and then we apply it like this and now that's string will be marked as important for that label it's a great feature if you want to categorize your strings great so after that we go to the next category translations where we can upload existing translations if we have them download them as zip it's very similar to what we saw in crown.com this one is really very similar you can download all languages or specific languages this will be languages from your target languages for that particular Pro project Target file bundles that you can generate and you can have over thee a Content delivery but this is beyond the scope of the course this is more advanced if you want you can dive into this option you also have an option to preview translations as a CSP file and xlsx file or you can also preview them in the browser if you click on preview in the browser you will see like an overview of all the strings that you currently have and since we haven't translated them them they are just a repetition of what we had in English but when we translate them we will see them there then we find a screenshots that you can add and upload for additional context you just click here on upload you select your screenshot and then you can add that to your strings you can also create tasks for this particular project and it's important to remember that you are creating the tasks for that particular project when you go back to your crowding dashboard your organizations dashboard by clicking here on the crowding icon you will go back to your workspace this workspace has all the projects of your organization and if you go here to tasks this will show all the tasks of all the different projects in your organization it's like a combination of everything that you're working on all the tasks will be there but this is different from the tasks of an individual project when you're inside the project view this tasks will be the task for that particular project these tasks are for the project and the other tasks are in general for the organization so you will see all the tasks of all the projects in your workspace great so let's create a new task you can see that it's very similar to what we did in crowding dcom translate by your own translators by proof readers Source language the strings if you want to translate all the todo strings or the strings that were modified IED in a specific time range you can filter them by labels for example if we have the important label here we can choose to translate all the important strings in that file or you can also exclude labels you can add a due date and selected from the calendar and this option is also very important to make sure that your team is working productively skip strings already included in other tasks if you select this you will be skipping the strings that have already been assigned to other team members so you will be avoiding any repetitive work then you can select the files that you want to assign the target languages like Spanish Japanese and then who is going to be assigned to that particular language I'm going to assign users for Spanish then I can select the user here and click on done I also have the option to split files and tell that user or that contributor how many words will be translated approximately so we are going to just disable this we're not going to split the file for now we're we're going to click on done then we see summary here and description here you can write a more detailed description of the task I'm going to assign myself to Spanish and Japanese so you can see that the same contributor can be assigned to multiple languages let's check this let's also add a we're not going to have any due dates for now we're just going to create the task and we're going to create it you can see that after you create your first task you will have like a the dashboard that we had before in crowding dcom where you can drag and drop your tasks and you will have one task per language here we have Japanese and here we have Spanish when the tasks are pending when they are not completed they will be in the todo column then in progress and then they will be done you can also close the task it's basically essentially the same with a different presentation here very helpful to keep track of everything you have who created the task when it was created the current status you can open the task in the editor the percentage of completion of that task and who is assigned to that task you can also add comments here and start a discussion you can filter tasks as well with different criteria you can search for specific tasks Group by language and this is very very nice you can group tasks by language instead of seeing them like this in a board all of them combined you can group them by language so if you're looking for a task in Spanish just open this and you will see all the tasks that you currently have for Spanish and you can just reorder them and the effect will also be reflected if you change the view to the dashboard again like this it's very very helpful you can also see all the tasks for that particular project here in all tasks and you can choose to move to a different status to edit the task close it or delete it now we go to members and this is basically the same that we have been working with the member tab we have the members we know their their roles Here I Am the owner H when we gave them access if they belong to a team and here we can find more details about the user how many strings were translated approved voted or commented we can also remove members over here in the trash can and we can invite people if you want to invite people to that project this is similar and yet a bit different from what we did in crowding decom you can enter the users email username or team name you just need to write the email so let's say sample at gmail.com but don't worry I'm not going to send the invitation there and there I can assign the role manager develop ER Pro reader or language coordinator I can also just send the invitation without enabling any of these roles if I just want the contributor to be a translator but I can enable this if I want to okay manager developer if you want to give access to that contributor to the project as a proof reader you can enable this and if you click on this Arrow where you see all languages you can restrict the access because sometimes we don't want to assign a proof reader to all the languages we want to assign it to a particular language that we know he or she is proficient in right so we will disable this access to all the project languages and then we can select a specific language like Spanish and after we select that language we can select multiple languages like let's say Spanish and Japanese we can also restrict in the access of that particular proof Feer to the steps of our workflow if we want to assign that proof reader to all the steps in the workflow existing and a future we keep this by default but if we only want to assign that proof reader to specific steps we can do so by clicking here if we had multiple proof reading steps for example multiple faces of people checking the translations we could assign them to the first step for example or the second step and we could choose this very granularly to restrict the permissions as needed that is very helpful as well in crowding that we have the granularity in the permissions to avoid any misunderstandings or anything that could happen when you're working with a team of volunteers great so we're going to remove this proof reader access for now and you can see that with the language coordinator is exactly the same language coordinators can manage people and teams of the selected languages so they have a higher level in the hierarchy than proof readers when it comes to their permissions in the platform because proof readers can translate and proofread the content but language coordinators can also manage people and teams of their selected Languages by default you will see all languages like with proof readers but you can disable this and select a specific language let's say that I want this contributor to be a language coordinator for Bengali Japanese and Spanish I can just select these three languages and now I see that I will send an invitation for these three languages and if I instead of sending an email I want to get a sharable link I can also get a sharable link I click here and then I get the sharable link I can see that it expires in one week and I can change when it will expire if one week is too much for me then I can set it the the expiration to one day or 1 hour or if it's too little then I can set it to one month or I can set it to never expiring and just keep that invitation open as long as it needs to be if I click here on copy link I will be copying it to the H to the clipboard that's another way of sending the invitation this one will send the user an email with the invitation when you're ready and you have everything set up exactly like you want it to be you can send the invite you can invite multiple members at once you just need to add them here to the list and if you want to remove them you can just click on the X to remove them that's basically how you can invite people to your organization in crowding Enterprise when you're ready just click on invite I'm going to click here on Escape so we can go back to the project and again here we have our famous Integrations remember in crowding decom that we use the Google Drive integration well this works exactly the same in crowding Enterprise but here if you have the license for an open source project and it educational project you will be able to add multiple Integrations that's basically the difference if you click here on add apps you will see the same basically the same view that we had before with all the applications from the crowding store there are hundreds stitches from and with a crowding Enterprise plan you can choose and install multiple Integrations at once here we also find reports because if you're going to manage an organization you will also need to view the reports and this reports H tab or this reports feature is different from the reports feature that we had here in the main workspace here remember that we also had reports in our main workspace this report is for the organization for the organization remember that we can have multiple projects per organization if we need to see a high level overview of the performance of our organization we can go here to the reports in our main workspace but if we need to check specific statistics about our project we go here to the reports tab or the report section of our project it's basically the same but the data will be specific for our project we can see the overview the the project size and we also get the Top members feature where we can have an export a report of our Top members which is always helpful to encourage your top contributors finally we can also see the activity here this is like a timeline of the changes or updates made to the project we see tools over here tools that you can work with like the crowding API the command line interface crowding and context and other helpful tools and here at the very bottom we find the settings you can customize a ton of settings there are many to choose from and customize like customizing the the Project logo project name you can also transfer ownership if you need to and you can delete your project but be very certain that you want to do this because it deleting the project at least cannot be undone you can also change the Privacy this is something very important this feature over here this is something that I really wanted to highlight because if you're planning to manage contributors and volunteers this will be helpful for you task based Access Control this means that your project member can work with tasks they are assigned to even if they do not have full access to the language basically what this does is that it allows you to create tasks and assign contributors to specific tasks without giving them access or full access to the language so they can work on the specific files they are working on they are assigned to but not on files they are not assigned to if you enable this that will limit contributors access to the overall project if you're translating for example articles for from your blog or you're translating specific parts of your website or your platform and you want to be able to assign contributors to specific files then you should enable this and create tasks and assign them to tasks this is something that we are adding to our workflow at free code camp and over here we see notifications you can enable notifications for translators when there are new strings to be trans ated you can notify project managers and developers about new strings and you can notify project managers and developers when a language has been completed when the translation or proof reading process have been completed that's always helpful you can change the source and Target languages you can also customize your quality assurance settings here you can disable but it will be enabled by default the QA checks they are always like helpful and you can change how many approvals are needed to clear the quality assurance checks one approval two approvals three four five approvals you have a maximum of five approvals in the quality assurance checks we can check for omissions translation length limit tax and basically everything we had in crowding decom as well and we can change if they errors or if they are warnings we can also set up custom quality assurance checks but we can add them in our organization settings if we want to add some custom quality assurance checks here we can also enable translation memories and customize them we can set up machine translations glossies we can customize settings for importing and exporting files I highly encourage you to go through these settings to know everything that you can customize in crowding including like the labels and this is a bit more advanced the parser configuration and finally file processor this has been a general overview of what you will find in your project when you start working on crowding Enterprise it's very similar to crowding decom but you will be working with an organization and you can manage contributors in a more efficient way you can manage your team members in a more efficient way and you will have additional tools like workflows and workflow templates and that's crowding Enterprise now let's talk about Visual Studio code and how you can use the croing extension for visual studio code to localize your web application or any application really because the extension works for basically all the types of files that are supported in crowding here we are in vial Studio code I have a folder named my app a very general name that is intentional because you can use this with any application and in inside my app folder I have the locals folder this is usually how you would structure a localization project somewhere in your project structure you would have a local folder where you would store the translations and the original strings of your project and that is what you would upload to crowding to translate in the translation management tool of your choice or the localization management tool inside local we have this folder Visual Studio code is just abbreviating this because I only have one folder inside that folder so it's like compacting it into the same line this is another folder named en n from English and this is where we will store the original strings in English inside that folder and I have a file called main. Json for this part of the of the course I'm going to assume that you are already familiar with Visual Studio code you already have it installed you already know how to create folders like this by right clicking here on the Explorer create new folder and you are familiar with the Json format if you're not familiar with this format a quick overview is that it's a lightweight format used to exchange data across the web it's very popular and it's also used for translation projects we will use it when we use the I8 Max framework when we actually translate a sample website which we will do in just a few minutes so here we're going to keep this example simple to show you how the extension works but of course you can apply everything you learn here in these next few minutes to Applications of any complexity I'm just going to show you the main functionality of the extension for our demo we're going to use the the main. Json file you can name this file whatever you want like messages or notifications and the content can be anything that it would be valid in Json format but the key thing about the Json format is that it's wrapped within curly brackets and within the curly brackets we have key value pairs the key is separated from the value with a colon and the pairs are separated from each other with a comma what you would usually do in an application is writing everything that appears in your application everything that the user can see here in Json files instead of your actual HTML files so it would be like avoiding hardcoded values you would keep everything in the Json files and you won't have one Json file per language so when the application loads or the user changes the language the correct translations will be applied and for that the keys that we have over here are essential these are the keys that we will be writing in our application to replace them with these strings in the corresponding language all the Json files that we're going to create in all the different languages will have the same keys so our application will know exactly what to look for in the corresponding language folder that's the basic principle of how we structure these localized applications we take everything out and instead we have it in the Json file and that is replaced automatically by our localization framework we will see that in just a moment in a practical example with a simple react application I'm just giving you a quick overview because that's how we're going to structure our project here for the the extension we can see the title welcome to Free code Cam and the mission is to help people learn to code for free we will be localizing these two strings and in theory they would be replaced automatically in the application right now we don't have any other files we're just focusing on the locals folder I will show you how you can upload these strings to your couting project and how you can download the translations directly within Visual Studio code with this extension to install the extension you just need to go here to the extensions option in the activity bar to the left and write crowding if you write crowding here and you click on crowding you will be able to click on this button to install it I'm installing it right now and you can also find more details here in the documentation of how to use it and how to set it up but I'm going to show you that step by step you could also go to the official GitHub repository for this extension crowding for vs code great so after we have it installed I can see now that it is installed I can go back to my Explorer and now I see this new Option this new icon here crowding let's see what we get we get three new panels in this tool we see upload we see download and we see progress yes we will be able to check the progress of the translations directly with within Visual Studio code so let's do that after you install the crowding extension you need to follow these steps because the crowding exential will add some commands that you can use from the command pallet first you need to sign in to crowding so we will open the command pallet with command shift p or control shift p on Windows notice here we have all of these new commands we have sign in select project focus on upload view Focus Fus on progress view focus on download View and create configuration so first of all we need to sign in I'm going to click on sign in and this says that the extension crowding wants to sign in using crowding so we're going to allow that do you want code to open the external website I'm going to open this and I want to continue the authorization request here I'm going to sign in again because the my sign in just expired so I'm going to sign in again I'm going to log in and then I see my authorization request for crowding dcom crowding for vs code requests additional permissions this application needs access to your projects it grants access to manage projects a user has access to so we're going to authorize the extension to do this for us and then we're asked if we want to open Visual Studio code. apppp then I click here on open it because I want to to open it and then we are going to accept allowing crowding extension to open this URI open and there we go we have the extension configured but we also need to create another configuration file and select the project that we are going to be synchronizing from our local files so first of all we need to create a project on crowding dcom I go to crowding decom I go to my main profile or dashboard and then I'm going to create a new project again I'm going to name this free code Cam vs code extension demo I'm going to name this it's going to be a very long name this but free code Cam vs code extension demo again it's going to be public because I'm on the free account so I can't create any more private projects The Source language will be English and the target language let's say that it's Spanish right now of course I can always add or modify the target languages but for now let's start with Spanish and I say create project project created successfully free goam vs code extension demo currently it's empty but now we can choose that project from vs code for our extension after we have that created on crowding oncom we go back to vs code and now we can run that command we open the command pallet again with command shift p we write crowding and then we select the project it's going to load our projects and here I have my three projects from my account I'm going to select this project free code Cam vs code extension demo crowding could not find a configuration file yes that's something that we are going to create right now and the project I can see this message it was selected successfully so now I can close These Warnings the configuration file is another thing that we have to generate first we sign in then we select the project and then we create our configuration file this will tell the crowding extension what files are our source files and where we want to store our translations so I'm going to open the command palet again yes there are a few commands and the third command that we are going to run is create configuration once the command runs the file will be automatically created crowding yml this is a configuration file we see a warning that the file source is empty in my app and that's true the source and translation Fields the keys are empty so we are going to change that in just a moment what is source and what is translation we will keep seeing that error or for the warning until we just remove this so I'm going to just add a letter here to avoid that warning great but we do need to write something meaningful there in source and translation Source will be the path to the files that we want to translate where are we storing our source strings our source language is English so where are we storing our source strings in English that would be main do Json here we have the keys and we have the corresponding strings in English so we have to write the path to this file how can we do that well we are in local then the en folder remember it's in English and then this is something very interesting that crowding supports we can use a wild card this asterisk match any file name that ends with do Json that's basically it we're not writing any specific name we're just matching any name that can be here within the E folder that's the path to our files and then for translation I'm going to do this we need to write the path to the location of our translated files but how can we customize this for every language let's say that we have multiple Target languages well crowding supports using placeholders for this so we can create a folder for Spanish with es and a folder for French with FR FR if we need to translate our files into multiple languages or for Italian that would be it or Japanese JP we can use the twetter codes with this placeholder two letters code like this the only important key aspect here the only key thing that you have to keep in mind is that you need to surround the placeholder with two percentage symbols that's what tells crowding that this is a placeholder and then we can assign the original file name with this placeholder as well so if the file name was main. Json this will also be named main. Json with this placeholder but it will be within its corresponding folder with the TW letters code if it's French it would be F FR and within F FR we would have the main. Json file with the French translations that's what's so powerful about this configuration file that you can do all of that with just one line using placeholders and this will also keep the Json extension we will see that in just a moment so now we have our configuration file we have our folder and now let's go to crowding to the tool the new tool that we just installed in the activity bar and voila here we have it we can see it in upload and download and we can also see the progress bar here like this so now we know that we signed in correctly and the configuration file was correct as well now before we do anything if we check crowding oncom we refresh the page we can see that we currently don't have any files to translate that's because we haven't actually uploaded any of our files files to do that we just need the configuration file that we just wrote and then we go here to upload and we have two options here we can refresh and we can upload all our source files this is very helpful when we are sure that we want to upload all the source files that we currently have in the path but if we don't want to do that and we want to select them individually we can just click on the Arrow next to them or we can upload the folders here we can also edit the configuration file if we click on the gear icon let's upload main. Json I'm going to click here to be more specific we see uploading file main. Json and after that if I check the the web version and I refresh this I should see yes I do see it it's here in the local folder English main. Json so I was able to to upload the file following the folder structure that I had in Visual Studio code I can then take that file and translate it to my target languages let's go from the sources tab where we are right now we're going to go to dashboard and we're going to translate the two strings into Spanish I click on Spanish then I click on this file double click on the file and then I see the two strings here that I can translate crowd is smart enough to know what parts of the Json file have to be translated it's not going to translate the keys it's going to translate the values so I'm going to translate this as BOS a free code Camp I'm going to save this and then I'm going to translate this string this would be the Spanish translation help people learn to code for free then I'm going to save this translation and you can see that the two strings are translated so now we finished translating the entire Json file if we go back to our dashboard into this Spanish section we see that the file is 100% translated so let's go back to our vs code project and now we can go to the download part we can also check the progress here in Spanish and we can see that if we refresh this sometimes you will need to refresh the progress tool to actually get the current progress you can see that previously it was Zero now it's 100 and only after I refreshed it it showed 100 so this has been 100% translated but 0% approved let's approve them just really quickly since I'm also a proof reader here I'm going to go to the string and I'm going to approve it and here I'm going to approve it too then I reach the end of the file they're all translated and approv and now if I go back to vs code and I refresh this I see that it's 100% translated and 100% approved the Spanish language so that's great and now I can download my source files in Spanish and this is the true test for the configuration file when I download these new files in Spanish they should be within their own es folder that they should it should keep the same Json file the same name but they should be translated and they should have the same keys and they should be within their own es folder so we're going to test that we can always change the configuration file if we need to but let's download them you can also resize these tools if you need to okay if we hover over the my app folder we see the option to download the project translations we see the option to download source files and we also see the option to edit the configuration that opens the this file the configuration file so we have a quick access to that file if we need it here if we click on Download Project translations let's see what happens downloading translations it might take a moment depending on your internet connection and the current state of the system but if you go next to the Explorer here it is here it is here it is here it is now we have two folders English and Es which is the twetter code for Spanish we have our folder now it's collapsed but if I expand it I see main. Json so we are keeping the same file name in the two folders and that's usually a convention that we use we keep the same file name but we keep them in different folders with their translations and then in Spanish if we open the file we see that they are keeping the same key title and Mission and we are only translating the string associated with that key these are the translations that we wrote and approved in crowding tocom in the online platform so you can see how this workflow can really save you time you just go there to crowding decom or your translators go there your team goes there your organization or the your community translates the files that you need and then you can synchronize them in Visual Studio code so it's very very helpful and it's basically automated because we are already defining our source files and our translation files and the location where we want our translations to be in this will use the standard twoletter codee for the language so if you have three or four languages you would have all of them here and you would have the main. Json file with the corresponding translations you can always repeat the process upload any new files download them and you can check the progress for every language how much it has been translated how much it has been approved awesome now you know how to work with the crowding extension for visual studio code it's really powerful again I encourage you to review this part of the course if you would like to continue working with it and install it if you haven't so far let's continue now we're going to start diving into a more realistic example of a react application it will be a simple application but we will be working with the IIT next localization framework and we will see how we can use this extension to translate the files and we will also use the GitHub integration so you can translate your repositories using crowding Integrations so let's continue congratulations on reaching this part of the course now you know the fundamentals of a localization process and you know the fundamentals of crowding for individuals and teams so now we're going to start the actual developer Focus part of the course we're going to translate a react app this very simple react app but you will learn the fundamentals of the i18 next framework for react called react IAT next we will use that frame work to create this simple app but we're going to be able to change the language like this we can go from English to Spanish and vice versa with this drop down manual by just selecting the option we will be working with Json files and I'm going to show you how you can use the crowding extension for visual studio code to translate your Json files like we did before but now we are going to apply this to a react project so you will learn the fundamentals and of course you can apply these principles to Applications of any complexity and applications in different context like mobile development web development and other types of applications I kept this application simple on purpose intentionally because I want to focus on these fundamentals so let's begin if we go to visual studio code now we see the localized app folder this is where I'm going to create my react app with create react app you can also use V or any other tool that you can use to get the starter code for a simple react application to create that I'm going to use this terminal and I'm in my localized app folder and I'm going to run npx create react app and here instead of writing the name of the folder like my app like we have in the sample documentation I'm going to write a DOT that tells the command that I want to create the react app directly in the folder where I am currently located so I'm going to press enter and the process will start I'm going to assume here for this part of the course that you're already familiar with react we're going to make some changes to the main app component and then we're going to localize that specific component we are going to wait until all the packages are installed in case you would like to review the fundamentals of react we also have other courses on the channel I'm going to keep this app simple so the fundamentals of react should be enough if you know them this can take a while to reach the end so I'm going to speed things up a bit to start working and here we go we have our react up our starter react up with all the basic files and the folder structure if we check this with have we have all the files within the source folder we have the resources within the public folder we have our node modules the basic node modules we're going to install some to add support for the localization framework I8 next for react we also have a package.json file with all our dependencies and a readme file with the license for this um for this starter code the the project was bootstrap with create react app of course you can also use any other tool like V that's totally okay and the the principles that I'm going to show you here will still apply there so now I'm going to refresh my terminal and I'm going to start the application with mpm start and here I can see the the app that I'm getting by default with the starter code we're going to edit app.js and we're going to save that to get our new application we're going to build that step by step here we're also going to make some changes to the CSS file but we're going to do that really quickly because we want to focus on localization right so I'm going to hide my terminal for now hide it hide it for now great I'm in app.js what are the main changes that I'm going to make to this app to get the user interface that we are looking for first of all we need to change the logo we're going to use free code cams logo you can get that logo from free code Cam's official style guide I want to replace this react logo with the free C cam logo so I'm going to put it on the same path right now this logo is over here in the source folder so I'm going to put my free C cam logo here I'm going to drag and drop it I already had it in my folder in another folder in my file system so I'm going to use that I'm going to like basically swap the logo with this one I just need to change this path to FCC primary large instead of an SVG file it's a PNG G file logo over here and since I don't need this logo the react logo anymore I can just delet it it's an SVG file deleted you can keep it if you like but I'm not going to use it this is what the preview looks like it's just spinning over there so let's go to the CSS we're going to make it stop spinning by removing this last key frames from the CSS file and here in app logo we're going to assign it a height of 50 pixels and we're going to just remove all the animations for that logo like this so if we go back now we see the free cam logo in a more reasonable size you can of course customize this to your liking after that we want to edit the text so we're going to replace the link and the text we're going to replace all of this with an H1 text this will be welcome and then we are going to add four paragraph tags over here the text will be in English by default for now until we actually Implement localization then we are going to replace that with the corresponding keys but as a placeholder we're going to use the text build projects earn certifications learn to code for free build projects earn certifications that's the text that we actually have on the landing page at free code camp and then we are going to add a fourth paragraph tag this is just for demonstration purposes and it's going to say that the language is currently set to English this is going to change dynamically we're going to show this with a strong tag the strong tag is usually used for text that is more important and I think that is important because it highlights the language of the application the current language you can of course customize this I'm going to choose strong and then we will be replacing this by a variable using a hook a state hook the state will be the current language we're going to assign this ID to the paragraph language text so we can change its specific style and after that within the header tag we're still within the header we're going to add a select element this select element is going to be named language in a future iteration of this project you may want to separate this into multiple components I'm just keeping it simple so we can do all the localization here in the app component within the select element we have the option this option will have a specific value en n and this value will be essential this value is going to tell our entire application what language we have selected English then we have another option value Spanish and we're going to write all the options in English right now we could write espanol here which is Spanish in Spanish but I'm going to keep things simpler so they're all in English so everyone can understand them and then that's our select element so let's apply some Styles and then we're going to add the functionality but before we do that let me add a suspense element the suspense element is very helpful in react because it gives you a way to show something while these components or elements are being loaded in the application so it's just like a backup or a fallback in case this takes a moment to load and with translations that can happen if you are for example fetching them from an external API which crowding actually has you can fetch your translations from an API and that can take some time so if we fix the format here with command shift F or control shift f we get the code nicely formatted and you can see that suspense was already imported automatically from the react module let me just move this to the top great so after we have that let's add style because if we see the application right now it's very basic it doesn't have like any custom style but it's still there it's taking some interesting shapes let's go to app.css and here to save us some time I'm going to copy and paste so we can move faster but you can of course pause the video at any time if you would like to check these Styles and reproduce them yourself I'm also going to include them in the repository but I'm copy pasting them one by one to make sure that you can see them clearly and you can always pause to know what I'm doing or what I'm changing here here I'm going to change the background of the application to match free code cams style guide this is one of free code Cam's main colors we're going to keep all the other styles here we may not need them we may for now we're going to keep them maybe in the future we're going to remove them for now we're going to keep them and finally app link and we have this color great so that's our CSS file let me go back to control and now we can see the same style that we had in our application preview that's ready and we see the two options English and Spanish but right now this is not working because we haven't actually implemented anything in JavaScript yet in our jsx file so we're going to start doing that in just a moment let's dive in when we change this to Spanish these strings should be replaced by their corresponding Spanish translations and we will be translating them in crowding with the extension we will do that in the next part of the course so let's continue so let's start implementing the actual localization functionality because so far we've been just building this basic react up let's start with IAT next first of all how can you get IAT next because right now it's not installed it's not part of our dependencies we need to install it and add it to our package.json file we can do that with npm we just need to start a new terminal here that could be SE CSH and after that we will need to run npm install let's close the Explorer so you can see it here and mpm install I8 next that will install the I8 next framework as a dependency we will actually install three different variations of this framework I8 next we will also install react I8 next and then we will install I8 next HTTP back end this is based on nodejs and it's a way for the framework to send us the the localized versions of the files the translations as a Json in Json format through the server the local server that we will be running when the react application runs in the browser if we don't install this if we don't use this then we will not be able to preview those translations you can always choose a different back end and IAT next also has a documentation of the different backends it supports like you can call an API you can get the translations from an API you can also use other backend calls so you can use different backend approaches for now we're going to work with local Json files to keep things simple so again we press enter we're going to to install it and there we have it we can kill that terminal now but we have to keep this terminal alive if we want to keep the react application running we close the terminal in the X and again if we go to the Explorer to the package.json file now we see that we have I8 next I8 next HTTP backend as dependencies and we also see react I8 next so we will be working with the three of them right now after we have them as dependencies we will need to import them we go to app.js and we're going to import specifically i8n from i18 next we're also going to import HTTP backend from I8 next HTTP backend we see that it's Auto completing so that's really helpful and then we're going to import two things actually from react I8 next you can see that we are using these three dependencies we're importing iatn we're importing HTTP back end and we are importing two elements here that we will be using I promise you we are going to add them that will be initial react I8 next and use translation this will be like a hook to use the translation where we need to we're going to use this to replace the hardcoded strings directly within the jsx elements if you want you can divide these import statements into a different like block because they're all related to localization that really depends on your personal style and the guidelines that you're following for your team and to finish off our import statements we're also going to use use state so we're going to import it here this is a normal Hook from react great so let's we can of course readjust these import statements as we need to if we want to group them for now we're going to keep them all together and then before the app component we have to set up the localization how are we going to do that we're going to use the iatn object that we have here that we imported from IAT next and we're going to call a few methods on this we're going to make it use the HTTP back end we're also going to use init react I8 next and we're going to initialize this to a few options within in it we have the curly brackets this is going to be an object with different options first we have a fallback language this is the fallback language in case the the user of the application selects a language that is not available or we don't have the translations if anything happens we will fall back into English and we also configure the back end where are we going to load these translation files from where are we going to take them well they're going to be available at a specific path remember the path that we saw in the previous section when we started talking about the extension in a folder named locals and then a folder for that particular language like this would be e n for English or ES s for Spanish JP for Japanese and for that for replacing that particular language here as a placeholder we use these double curly brackets that's a standard in IAT next the twet code and then we are going to store them in a file named main. Json we need to set that up in our file structure but for now we are configuring it in our Javascript file so now we have our back end set up we have everything set up we're using HTTP backend we're using react IAT next we have our fallback language and we are setting up our back end where are we going to look for those files that we want to serve with the local server we have everything ready to start actually working on the app and replacing those strings like this first we're going to set up our event our goal is that when the user clicks on one of these options from the drop down menu when there is a change we want the entire translation to be replaced right the all the strings so we need to listen to that change we need to have an event listener we're going to add that to the select element on change that's the event and how are we going to handle that with the onchange function we Define the on change function over here within the app component const on change and here we have it we are going to use an arrow function for this this would be the event the parameter we can also call this e it's a a normal standard I'm going to call this event and just to test this I'm going to print this value the event has a Target that is the the the drop down menu the element and the target has a value that value will be the value of the option that we are currently selecting so if we select Spanish the value will be es the value that we are setting over here that's the value that we are going to get from that event from the target if we select English we're going to get En n and that will be fundamental here to handle the change so let's test this and see if it works let's see if it works here we are in Chrome I just have it full screen so that's why this is still the browser if we right click and we click on inspect we can see the console and let's change this to English now we see e n if we change this to Spanish we see es s so it is working we are reacting to that event but how are we going to actually handle the event because we don't just want to print this value we want to do something with it when we change the language we want two things to happen we want the localization framework to know that the language was changed and we also want to update the language over here remember that this is still hardcoded it's still a fixed part of the string we want this to be dynamic and be replaced by the language so I'm going to take a relatively simple approach here you could also increase that the complexity and multiple languages but since we only support two languages right now I'm going to use a tary operator to change the language in the IAT n Frameworks to know that we have to load the new translations we call the change language method on iatn this is the same object that we imported here from I8 next then we call change language and then we pass as the argument the value that would be or ES or the the the value that we are setting for that option that is the twetter code for that language that will handle that from the framework side but we also need to change this value over here English we want to set it to English or Spanish and we're going to use a state hook over here to do that so we're handling both the framework and the text update simultaneously if you're familiar with hooks you know the Stak hook we have let's say language this would be our state set language and with the used State hook we're going to set English by default we can set the language over here so language and then if we have that state we can replace it over here instead of just writing English we can replace this with Language by wrapping it with curly braces next the next thing that we need to do is that on when there is a change we just update the language and we're going to do that in a very simplistic way for this uh purp for this tutorial we're going to just call set language and we're going to take the previous language that we had in the previous state and then we're going to check if it's English if the language was English then we are going to change that to Spanish if not not we're going to just keep English so that's our approach of course if you're supporting more than two languages you may need to to use a different approach but for Simplicity purposes since we're actually focusing on the framework I'm going to update this in a simple way so how are we handling this right now well you can see this working if we change this to Spanish this changed to Spanish if we Chang this to English this changed to English so we are handling that change appropriately but we don't see that these strings are changing in any way for that we are going to replace the text that we have over here because if we just write the text directly in the component the text will never be modified it won't be dynamic we need to change that to something that can change when the framework detects that the language has been updated to do that we just need to add a hook over here we need to have access to a hook named T usually the name is T and we're going to get that from used translation remember that we imported used translation from this react IAT next we're going to use this use translation to get the T hook and then we're going to use T this will be essential this one letter identifier here is going to make all the magic come true because we're going to replace these strings with something that we're going to get from the te and for that we need to set the Json file up first we want to remove these hardcoded strings from our Javascript file so for that we need to start creating our Json file and get all the English strings or the source strings over there usually you will find the locals folder like we have over here in the public folder so we create a new folder we name it local and then within local we create a new folder named I for the English strings within the English strings we create a new file make sure that you're clicking here on en instead of locals because the file has to be here in EN and we're going to name this main. Json you could choose a different name but I'm going to name this main so we have all the main strings over here make sure that it's within n here and then within main. Json we're going to Define our Json file with the key value pairs let's say that we want the key to be welcome here welcome and then we want the first line to be the key the key doesn't necessarily have to be exactly the same as a string okay it's just like a way to identify that particular string so this could be name and this would be the name or this could be address and this could be the address it it doesn't really have to be exactly the same text itself it's a way to identify that string across the different languages remember that the keys will be shared across the Json files in all the languages so they will stay in the language they were written in they will say in English this would be the first line of the text that we want to show this would be the second line we need to separate them with a comma and this would be the third line these are the keys they could be more specific but I'm just writing them like this first line Second Line third line for Simplicity purposes you can of course make them more descriptive so now that we have them in the Json file we can remove these hardcoded these fixed strings from our app.js file instead of just writing welcome here we can make this Dynamic by wrapping it with curly brackets and then calling T within parentheses we pass welcome as the argument this is the key of the string that we want to replace over here this is this value welcome welcome it's the key and that will tell the app our app that we want to use the string that corresponds to this key in whatever language we currently have selected that's what we are configuring here we're making this Dynamic but since the key is shared across all the different Json files in every language this is a fixed value that we can use in our app and we will still be dynamic then we're going to do exactly the same thing for the next component but now instead of welcome what do we want to replace here this string the key for that string is first line so we are replacing it over here then we do exactly the same but now we have second line and then third line this could be more descriptive if you're working on a more complex application I'm just keeping things simple here because we only have three lines like this and how will the framework know when the language was changed and what language it has to select for this particular Key Well it knows because here we are calling change language and this will be the twoletter code for that language so it knows that it has to look in that particular folder and get the corresponding Json file that's how we set things up over here when we are defining the local path it will look within the language folder for the file named main. Json if we check the application we should see the strings replaced voila now we don't have any hardcoded strings let's see this in our application let me close the Explorer right now we don't have any strings over here this final paragraph We are going to keep it this way because it's updating automatically it's in English so it helps us to keep track of the current language if we don't actually know the text so I don't know it's just I think a a small little detail that I would like to include or keep this in the demo so if you want to translate everything you can also take the challenge of localizing this as well but these four lines that we are focused on are being replaced automatically but if we change this to Spanish we see that nothing happens right that's because we don't actually have a Json file for the Spanish local we only have the English folder so how can we actually create the Spanish folder and translate that in crowding let me show you that let me show you this if we go to the crowding extension we see welcome back Stephania demo that's because I'm already signed into my account you will see this message if you're already signed in if you're not signed in remember that you can go to the command palet search for crowding and you can click a sign in you will have a sign in Command right now I have a sign out command and it's helpful to know this too that you can sign out anytime you like and then of course you can create a configuration file as well so for now we're going to create a configuration file create configuration the file is added over here to our react app structure at the root of the project and here we need to configure source and translation how are we going to configure that where are our source files the files that we want to translate we already extracted all the strings into our Json file and that's where our source string live that's the source language so we have to write the path to our source that would be locals then en n and then Main dojon and then the translations would be a bit different they would be similar to the path that we wrote previously locals then we would use the placeholder of two letter two letters code now you can see why the placeholder is very helpful especially for react this will create the folders dynamically like we had before when we installed the extension remember and then we're going to keep the original file name with this placeholder like this so we have our source and we have our translation we should double check these paths and they look okay if we have to make any adjustments we can make them afterwards and then since we need a project on crowding let's go to crowding let's go to crowding I'm going to log in again because I spent too much time outside of the platform so I was not locked in great so I'm back here and I want to create a new project this will be of course a public project we're going to name this free cam react public project The Source language is English and the target language right now will be Spanish we can add them later on create project and I don't have any sources but remember that we can upload them we do have the target language in Spanish but now I can select my project in VSS code I have my configuration file ready and I can open the command palet with command shift p then go to crowding select project it's going to load all my projects I'm going to select Freo can react like this and then uh voila here I have the files that I can upload the files that I can download and my progress right now it's 0% because I haven't uploaded anything but I can upload my files over here I'm going to change this to the asterisk asterisk Json if we only write locals here it's not going to work because it's within the public folder so I'm going to write public over here and now you can see that it is being displayed so I see public then I see locals and I see English and then I find my main doj Json file that's the Json file with the strings that I want to translate so let's upload the file upload source file remember that I'm already signed into my account uploading file main. Json once the process is completed if I refresh the browser I can see this in the sources tab I do have a public folder with the English folder and main. Json I can change this settings of that file within crowding and it can start translating Spanish then if I translate let's say welcome benos I'm going to save this translation this will bear then this will be conr Pro and then this will be obtain certific this is the the text that we have on the main free Cod cam landing page then I'm going to approve these strings just for demonstration purposes so we can download them to vs code like this and I reach the end of the file so I have it 100% translated and approve you can see it here if we go back to visual studio code now we can download the translations by clicking on this Arrow here we will also need to add public before the Local's folder to actually reach that path we need to write like the full path to that folder public locals and that's when we can actually download our files we can click here Download Project translations it's going to download the translations and after that if we refresh this you should have something like this in locals you see English and you see Spanish and inside Spanish you can see this Main doj on file we have the same keys but the strings are translated and we translated them on crowding decom and we did all of that through the crowding extension and of course we had to go to the online editor but it's super easy to synchronize your localized files with your local project the local folder can be inside the public folder or it can be inside the source folder it really depends on your personal preference the public folder is for files it should be available anywhere like the the Fab icon or any Json files some developers prefer to keep the local folder inside the source folder so it's really up to you but you just need to update the paths to reflect that change great so now we have the Spanish translations and we have the keys now if we go to our application and we change the language to Spanish here we can see that translated strings they are replaced automatically when we change the language with our method in the app component we see that the language is currently set to Spanish and then if we change that to English we see all the strings in English again those are the fundamentals of how you can use the IAT next framework for react and crowding to set up your translation workflow as a developer this is very helpful and you can also automate this further with other Integrations that can help you to automate the process even further but these are the fundamentals so great work you're taking big steps into this world of localization if you want to add any other languages Beyond these two you would need to change the logic of the app.js component of course because here we're only handling two languages to update the text and if you want to have more languages you would have to add more options here in the drop down menu each one with it some particular value it's twet code the standard code and then you will also need to have a main. Json file for each language you will need to translate that in crowding add them as Target languages translate them and then download the translations awesome now that you know how to translate your application or website in vs code with a crowding extension for vs code we're going to start diving into the GitHub extension because this is a way to keep crowding and your GitHub repository synchronized if you're planning to host your project on GitHub it's like a way to automate the process it will make it so much easier let's go to crowding dcom to my profile and I'm going to create a project of course this will be a public project because I am in my free account so free Cod cam GitHub this will be the name of my project free Cod cam GitHub we're going to test the GitHub integration to see how it works this is a new option that crowding added from my previous the previous parts of the course they're constantly adding new features and things that you will see in in the platform compared to when I recorded them of course so don't be surprised if you see anything marked as new you can also enable string based project but right now we're not going to work with with that the source language will be English and the target language let's select Spanish for now let's also select Japanese and Italian just as an example just to select a few of them let's create the project project created successfully free code cam get home and right now we don't have any projects to translate that's intentional because we're going to import them through an integration we're going to to add an integration remember that with the free plan you can only have one integration at a time and the integration that we're looking for is the ghub integration we click on it and we install it this application will have access to your projects and it will be displayed in the project menu Integrations GitHub the users that will be able to use the app will be only me you can also customize this to fit your needs select the projects where users will be able to use the app projects you own or selected projects I'm going to choose selected projects and only on free code cam GitHub I'm going to restrict the app to only work on free code cam GitHub so I'm going to install it and I see that it was successfully installed I can also uninstall it but for now let's close this and if I refresh the page now I see the GitHub integration here and I need to set up the integration to set it up I need to click here on on setup integration there are two different modes for this source and translation files mode and Target file bundles mode this is actually new and we can find more information about this it says that it exports sets of strings in one of the selected formats if we go to this article in the crowding knowledge base GitHub integration file based we will see the specific description for these two file modes for the source and translation files mode this will synchronize source and translation files between your GitHub repository and the crowding project this is what you'll use most of the time and they also have another Mode called Target file bundles mode this will generate and push translation files to your GitHub repository from the crowding project in the selected format in this mode the integration pushes translation files and doesn't sync sources from your Repository in cases when you perform a source text review in your crowding project and you want to get updated Source text to your repository you can add a source language as a target language which will be pushed to your repo along with translations this is a quick overview of what the crowding team explains about these modes but I highly recommend going here to their knowledge base to the GitHub integration article to learn more about them for now we're going to stay with the traditional mode here here I have my GitHub account I am going to authorize crowding you will need to do exactly the same you should read the permissions very carefully you will be granting access to your public and private repositories including your code issues pool requests weeky settings web Hooks and services deploy keys and collaboration invites the repos scope also grants access to manage organization attributes and organization owned resources including projects invitations team memberships and web hooks so I am going to authorize crowding here and use my authentication code now I'm being redirected and I can see the GitHub integration I will select my account over here then the repository the repository that I will be working with is localization GitHub integration after I select the repository I have different options that I can customize select branches for translation I only have a main branch right now so I'm going to select that and this service Branch name just means the name of the branch that will be created when crowding pushes the translation crowding will create a pool request with the updated translations with a new Branch so you can check the translations before you actually merge them this is ready but you can also change the branch configuration in the project we see that this is already because we already had a crowding do yamu file in the repository this is basically the the react app that we worked with in the previous example with the visual studio code extension I removed the Spanish translations but I kept the crowding yamu file so that was already configured if I click on this the pen I can see the source and the translation paths they're exactly the same as we had before we have public locals English and then the wild card. Json we can also change this to main. Json if we don't have this yamu file already created in the project we will be able to create it by customizing this path and we can preview the source files here we have we see that it's in public local English and then main. Json and then for the translated files where we want to store our translations we're going to store them in public locals then the two letters code and then the original file name here we have public locals and this would give us a preview of how we're going to store the translated files in our project structure this would be Spanish main. Json Italian main. Json and Japanese main. Json so this is very helpful to work with different placeholders if you click on this eye over here you can see a list of placeholders that you can use to set a translated file path and a name like this we have the original file name the original path the file extension file name language two letters code three letters code the local local with uncore Android code OSX code and OSX low count I encourage you to dive deeper into this placeholders because they are helpful to customize where you're going to store the translated files you can also select multilingual files so then we are going to save this and we can add a file filter this is a more advanced function we see that the configuration will be saved as crowding doyo file in the main branch so we save this and then we find more settings this setting will help you to deal with branches efficiently to set how you're going to handle duplicate strings across different branches because you may have the same keys and the same localization files the same source files in different branches how are you going to handle those duplicate strings you have many different options you can show them and translate each instance separately you can hike them you can share the same translation across all the duplicates it's really up to you what you do with these options but for now I'm going to keep the default so translators will translate each instance separately then I see these options over here I see onetime translation import after the branch is connected I can choose to always import new translations from the repository these two settings over here are related to how we are going to import our source files by default we see that we're going to have a onetime translation import after the branch is connected when we connect it right now we click on Save we're going to import our source files we can also push changes any changes made to the source files on crowding back to your repository if you make any changes to the original Source strings you can also push those changes back to your repository automatically but by default this is disabled because you will be changing the content of your repository and that's not always what we need and this is very very helpful for automating the process of synchronizing crowding with your GitHub repository this is the sync schedule it will set the frequency for pushing sources and translations to the repository 1 Hour 3 hours 6 hours 12 hours or 24 hours you can set your synchronization schedule the source files changes made on the repo will be synced with crowding continuously to reduce the number of the the pipelines configure the commit message parameter in the configuration file this is a bit more advanced beyond the scope of the course but you may dive deeper into this article if you click here on learn more and you can choose which branches you want to synchronize automatically and the default configuration file configuration file name for automatically synchronized branches if it's not defined then the crowding doyo configuration file is expected in the branch we do have that configuration file in our main branch so for now we're not going to customize this we're going to set our synchronization schedule to 1 hour which is is the default so we're going to click on Save over here and what this will do is it will start to synchronize the source files to crowding and it will show us the status it has been synchronized with our main branch we can pause the synchronization process we can edit this or delete the integration we can sync our repository right now manually by clicking on this button and we can sync our translations back to crowding if we already have some preexisting translations if we click here on the data for that particular Branch we see that it's when it was last synchronize the status and we can synchronize that particular Branch synchronize translations to crowding or we can change the branch configuration we can also see any issues that may arise when crowding tries to synchronize the translations now let's see what happened with our project because so far we're just configuring the integration but we can see that it was successful so if we go to our dashboard and we check our Target languages now we do see the main. Json file over here you can see this in the sources tab two if we go to main because we're in the main branch and we go to local English we see main. Json that is awesome right and what happens if we go to a specific language like Spanish and let's say that we are going to translate a few strings we have four strings over here welcome let's translate this and save it let's translate a few strings and then we're going to synchronize the translations back to the GitHub repository bidos yes I'm going to approve this learn to code for free build projects earn certifications I'm going to approve all of these translations and then I'm going to synchronize these translations with my GitHub repository to see what happens here I am in my GitHub repository and I can see that in my GitHub repository crowding already created this Branch the internationalization main branch like this this branch is three commits ahead of Maine and I can see that some new commits were created if I go to my commits over here I can see that I have a new translations main. Json for Spanish for Italian and for Japanese these files were created automatically by crowding over here but they will be replaced by their corresponding translations once I start to translate in the platform so let's do that I have that file already translated into Spanish and approved so if I go here to my Integrations and I really don't want to wait that hour that I set up to synchronize the new translations with my repository I can click on sync now I'm going to sync it now and I will see that the status will be sinking sinking and it's still sinking it might take a while and if I go to my GitHub repository I see a new pool request new crowding updates new crowding updates new translations for main. Json in Spanish Italian Japanese and here I have Spanish if I go here to my Branch I can see that now it's four commits ahead of Maine I had a new commit when I synchronized that brand over here and if I click on it over here at the bottom I can see that now these strings were replaced previously they were in English by default and now they are in Spanish with the translations I submitted and approved now I have them in my Branch over here the branch is four commits ahead of main so I can check my translations very carefully before I decide to merge them with the main branch then I when I check them I can compare the this Branch with my main branch and I can see that they are able to merge so they can be automatically merged in GitHub if I want to I can just merge the branches in the pool request I click on view pull request over here and then I can merge the pool request I can also change the the description over here of the pool request and everything was done automatically if I merge the pool request I will be merging the translations into my main branch and I will be able to keep those files in the local folder you can see that these files were added and this is located exactly where I wanted to be public locals Spanish main. Json now you know how to use the GitHub integration remember that it will send you a pull request it will send a pool request to your repository that you can merge to your main branch and it will send it to the localization main branch or the the name that you assign to that particular Branch it's very helpful because that that way you can check the translations before you merge them in the live version of your project this is basically how the GitHub integration works if you want to check your branch configuration you can click on the ellipses Branch configuration load configuration from crowding yaml continue and then you will B basically see what we configured when we set up the integration you can change the source and the translation path like this if you click on it you will be able to change the source path and the translated files path with the placeholders that you can see over here they're all very helpful to create the path that you need for your application or for your project remember you can preview the source files and the translated files and how they will look and where they will be in your project structure if you you want to pause sync you can click here on pause and you can resume whenever you need to like this you can also edit the settings for the GitHub integration like this to change the sync schedule let's say that I want to change this to 3 hours I can do that and save it and I can also delete the integration so I don't use it anymore if you want to delete the integration then you can click here delete integration delete this integration well first I would suggest pausing the sync just in case and then deleting the integration remember that you can only have one integration per project if you're on the free plan so I'm going to delete it so you can see how this works and then well you can start from scratch again to set up the integration with the mode that you choose but this is basically how the GitHub integration Works in crowding it's way to automate the process basically what we were doing with the VSS code extension manually now we can do that automatically through GitHub I hope you found this helpful so let's continue to the next part of the course congratulations on reaching this part of the course now you know how to translate your website or application in vs code with the GitHub integration and now we will see a third option which is actually a bit simpler and it may be a good alternative for static content like a blog or a landing page a personal portfolio that type of website that is mostly static where all the content is already there when you load the page and that option is called ajs proxy a JavaScript proxy we will be translating the strings from this sample website you can see that we have some strings in English that we translate let's say into Spanish or into other languages we also have some Lauren Ipson placeholder text over here but we won't to be Translating that in this example we will translate the strings that we can translate here that are not placeholders so let me show you how this works it's very easy to set up with a crowding integration for that we need to create a crowding project we're going to name this free code Camp JS proxy you can see the project address it's a public project The Source language will be English and the target languages will be Spanish Chinese simplified and Hindi just to select some languages of course you can always change this list or modify it afterwards but it's just to get started with a project and what we're actually going to do is translate them into Spanish great so we have our project free cam JS proxy The Next Step would be to add the JS proxy integration we go here to the Integrations Tab and remember that with the free plan you can use one integration you can add one integration per project so you click here on ADD integration and then you browse the list JS proxy translator this is a free extension that allows you to translate content with proxy translation technology and what is a proxy a proxy is like a server that acts as an intermediary in resource requests from the client to another server so we're basically adding like an intermediary in the process of actually retrieving that website and seeing it this will be translating our website very easily it will basically crawl the website extract all the strings that can be translated we will be able to translate them in crowding and then synchronize that so people can see it live on our website you can see it here it will crawl your website and extract all the translatable text in your project you will find a new file with text for translations once the translations are ready you can add them to your a website using over the air delivery we will see how this works in just a moment you can also find more information here in the apps and integration section we're going to install this and we can see that it will have access to our projects who should be able to use the app only me in this case only me again and where will we be able to to use the app only in the selected projects the free cam JS proxy project like this we're going to install it and here we can see that it is installed successfully that's great so after we have that integration installed if we refresh the page now we will see the JS proxy translator integration let's go into the details where we can set up the integration remember this is mostly used for static content content that will not change while the use is actually reading or seeing that information it's not for dynamic applications it's more for like blogs or landing pages where the content is already there it might take a few seconds but it will load and here we can see how to set it up synchronize all source files with your project and send new translations from the project to your website immediately so let's take a look at these settings how we can set this up remember our goal is to get these strings which are hosted here on my GitHub subdomain my personal subdomain in this path localization JS proxy this is a project that I created in a repository on my personal account so let's see the first thing we need to do is to specify the site URL this app will crawl your website and extract all translatable text in your project you will find a new file with text for translation so we have to go there where we are hosting our website copy the URL over here copy it copy it and then we paste it over here like this then in application mode we have two different modes server side which is default the application will scan the content on the visible pages of your website or client s your website administrator needs to add a JavaScript code snippet to each page this mode is useful for internal pages with authorization then if we check the site settings we can also configure the different site settings like separate files for each page if you want to have separate files for each page you can enable this option otherwise all the text will be imported into one file that's interesting that's something to keep in mind it's it might be a very important setting we can also have a page limit when you're testing the technology because website crawling takes time you can set the limit of how many pages you actually want to translate the default is 10,000 you can also specify the IDS of the HTML tags that you would like to be skipped during the sources import it's very important in case you don't want to actually import some of the elements the text from specific elements on your website use commas to separate the IDS you can also ignore the text or Elements by CSS classes that can be helpful too and you can specify which paths you would like to craw if this is not specified then all pages will be imported these are some examples of paths and how you can include them like about page article comments if you have multiple pages right now this is a simple onepage portfolio website okay we just have a basic information contact information like recent work some links articles testimonials and some contact information over here here we have internal links they are not links to other pages but if you do have multiple Pages you can configure this directly in crowding with the paths and you can also exclude paths finally we can see language detect type this setting is basically how the language will be detected it can be a query parameter this is the default it can be a subdomain like en here some websites use a subdomain for the localization for the internationalization process this would be the English version then you would have es for Spanish and then you would have your website.com or your main website domain or you can have a subdirectory like for example slem like this in this case we're going to keep the default for now maybe we need to change this in the future but we're going to keep the default and here we can see that after we add the JavaScript snippet which is a snippet that we will need to add to our code we need to make sure that we add this class in the body tag to avoid swapping translation swapping on page load how do we want to sync the source manually or daily this is very important for automating the process if we do it daily we can Auto Import once a day if we do that manually we can import it now and we also find options for publishing the translations the latest translations will be available for overthe a delivery for your website you can sync the translations manually or daily once a day and this is another tool crowning in context which allows you to translate directly over the website that you're translating but that is beyond the scope of this part of the course we will talk about it in the next part but if you need to publish your translations just click here on publish here you can import the strings and here you can publish them again you can do that manually or automatically once a day and finally here we see the language switcher this will be a JavaScript snippet that we can add to our website like we do with Google analytics this will let your visitors see the language switcher which is like a very small box at the bottom right of the website that users can use to change the language remember you must add the scanner snippet for each desired page so this snippet that we will see right here after we import the translations should be in every page that we want to translate let's import our strings now yes we have the right side URL so I'm going to import them import now we're starting the crawler let's see what we get this may take a moment might take a while because the crawling process is timec consuming so it will scan all the pages of your website you can see that now this says Distributing and we can see that the publish process has already started let's see what has changed in the project we may need to wait for a few seconds or minutes until the publish process is completed but while that is running we can go to our sources Tab and check if we have anything new there we you can see that it is loading so the process still running if we go back to the Integrations tab now after the process has been completed we will see this JS proxy generated and imported a source file a SL stepan cn. github.io dojon with your website text into the project it was last imported a few moments ago here you can also read more about translation strategies but if we we go to the bottom here we can already see that we have the script that we have to add to each page that we want to translate this is a language switcher and we will see it in action in just a moment but we can copy it here to our clipboard now if we go to sources we will see a new Json file and if we go to dashboard we just need to go to our target language Spanish click on it and then we will see all the strings that the web crawler extracted from our website and notice how easy it is to start translating let's translate a few strings like this about me projects testimonials contact we're going to translate the first five strings of the website and I'm going to show you how you can have a partial translation and translate it step by step and then synchronize the translations back to your website so we're going to approve these strings because you should approve them before you actually send them to the to the website to the live version of the website you can also check the quality assurance issues if you're sure that the word is actually written correctly you can just approve it like this and that's it we have the first five strings translated if we go back to the dashboard we can see some progress in the translation for Spanish so if we go back to the Integrations we go to the JS proxy translator for if we go back to our project we won't see any changes what crowning just did was calling the website and it extracted all the text from the website but how can we actually switch the language we need to add the language switcher we need to do that in my case I'm storing this in a GitHub repository so I will add this language switcher to my HTML file this is a basic website built with HTML CSS and JavaScript so I will add this to my HTML file and push a commit to my GitHub repository I will copy the script then I will go to visual studio code like this to the actual project and over here in head here we could add it at the bottom let's add a comment that this is from crow in we can format this nicely in the head dock we're going to add a script and we're going to add this style and over here we also see in side settings remember that we saw that for hiding translation swapping on page load after adding the JavaScript snippet make sure to add the JS proxy blur class in the body tag so we're going to add this class to our body tag this is something that is a bit like hidden here when you expand the site settings but it might be important if they are mentioning this so we're we're going to do this to avoid any potential issues JS proxy blur great so now if we check Source control yes we have the new script we have the new class and that's what we're going to commit to our repository so let me Commit This with the terminal I'm going to add a new commit to my repository and I'm going to describe it as adding a JS proxy adding the JS proxy script then I'm going to close this and I'm going to push it to my main branch in GitHub you might have to check if there is sensitive data that you may not want to publish here in the HTML file something you might like to keep to yourself okay so after we have that in the HTML file of the repository the site may take a few minutes to build again here we can see the the status the pages build and deployment status is in progress so we just need to wait until this is completed we see that it is pending and if we refresh it now we do see this little language switcher look at this it's really really nice we see that it's powered by crowding and it has our Target languages Spanish Chinese simplified Hindi and our source language English which is the current language let's see what happens if I switch this to Spanish right now nothing is happening why because we need to publish our translations we chose to publish them manually right so we have to click here on publish now publish now it might take a few seconds or a few minutes to update and you may need to refresh the website a few times while you're waiting but eventually you will'll see the strings replaced over here amazing right we have this in Spanish this is a string we translated and we have the other four strings here about me projects testimonials and contact great the language switcher worked here we are in Spanish and if I switch to English they are replaced automatically like this Spanish and English it's amazing right we also see this string being replaced English and Spanish you can continue the same process until you translate your entire website with all the different pages it currently has and you can see that the language switcher is adding this to the request it's adding the language that we are requesting as an identifier for that JavaScript the JS proxy the JS proxy is acting as an intermediary between the server and the client the original server of this website and the client if we try to continue translating let's say that we are going to translate additional strings like let's translate a couple of them we see students so let's translate it and see how we can again publish our new translations and we will see them in the website with the JS proxy right now we're doing all of this manually because we haven't set up the automated synchronization to daily but we're going to continue doing manually for now for demonstration purposes but you can automate this and do this daily after we publish them we will see them since I'm activating that blur you may see it blurry while you're refreshing while the translations are being loaded and here you can see this this is a string that we translated student in Spanish now if we switch back to English you will see the original strings in English so it's as easy as that I would suggest practicing this with other languages or with different projects but it's actually quite simple for translating static content remember this is not for dynamic content that will change over time all the content should be available before you actually start to crawl the website so you can get the full list of strings and translate them appropriately with the JX proxy integration you also have some additional options here that you may like to work with or customize like reviews strings to review you can import all of them you can clear the process cache import it and delet it and right now we don't have anything to display here but we may have some strings that need review we also see variables you can create patterns to replace similar strings with a single string containing placeholders for example replace strings like hello John hello chane with a single string like hello name you can set the pattern here with ADD pattern like this then you can use a title for a placeholder that provides translators with a clear understanding of how the rest of the string should be translated the placeholder would be this like username and it should be within double curly brackets that is an advanced feature a more advanced feature that you may like to dive into but I'm just showing you this in case you would like to use it in your project we can also see logs displayed um over a period of two months and here you can find help for this integration this is also very helpful and actually there is something that I would like to highlight here we know how it works right now you can read more about this to understand the details and the different modes but over here we find something quite interesting we can see the language switcher customization yes you can customize the language switcher to change the position submenu position and the a class if you would like to add a specific custom class to the language switcher you can set that with these parameters over here you can see them here in the script that you will need to add to every page that you would like to translate here we can see position top right if you want to customize that for a sticky position then for inline position you can also use inline left or right or any of these values for sticky position the submenu position you also have these four options and then the class would be some value for your custom class any class any custom class that you would like to assign to that language switcher and here you have more information in case you would like to add a call back to the language switcher which will be invoked when changing the language on a website this is helpful to detect when the user is changing the language so you can react to that so you can handle that appropriately the Callback can pass two arguments language code two letters language code for example here we have the script again but here at the bottom we also see the Callback in the Callback we are defining a JavaScript functions we have the language code as the first parameter and the two letters language code as the second parameter and over here we're just printing that the language changed and the message is descriptive because it's using the values of the parameters but you can customize this to fit your needs in case you need to do something in your code when the user changes the language so you can customize all of this I encourage you to read this help article when you install the JS proxy integration awesome work now you know how to use this integration for translating static content great now let's talk about crowding in context this is the last technique that we're going to cover in the course for translating a website crowding in context is great when you want your translators or your community to translate the strings that you currently have in a project in crowding directly on top of that website app or platform they can basically click on the string translated see a preview of the translation live on the website where it should be and the changes will be automatically synchronized between your a and crowding so I will show you the basics the fundamentals of how you can synchronize that and how you can set it up here we have our localized app example this is our basic react app here it's already running so I'm going to open this in my browser and we can see it over here free go gam welcome learn to code for free I just made a few modifications because now we will need to support multiple languages because we will have a pseudo language to configure all of this functionality a pseudo language will be like a template with additional information about the strings that crowding is going to use to get the information it needs for the translations so instead of here saying English or Spanish I am just showing the twet code English Spanish and we're going to use Africans as a pseudo language this the pseudo language should be a language that you're not planning to translate your content into Okay so so if I'm not planning to translate my website into Africans then I can use that because the language itself will not be available it will be used for placeholders that crowding will need to get the translations live and synchronize them let me show you the changes I made to the code compared to the previous versions because now we are supporting multiple languages here in the unchange method now I am setting the language to the value of the current Target the option that the user selects from the drop down menu and it will be one of these values en N es s or AF I added this third option for Africans because to enable crowding in context you or the user the translator has to select that particular language to activate the entire functionality okay so that's one of the changes and the other change is here in the initial State instead of English now I have en n which is the twet code for English since all of that is set up we need to go to crowding Enterprise and here I have a project named free code cam in context tutorial these are the target languages I selected Bengali French Hindi Japanese and Spanish this feature is available for teams and for crowning Enterprise if you're representing an open source project an organization or an educational project then you will be able to configure this in your project to do that go to sources and here we need to upload the file where we are storing the strings that we want to translate we're going to do that manually for the purposes of this demo of this simple example but you can automate this with the techniques we've seen you can add the GitHub integration and synchronize all the files you need automatically for now I am just going to go to this folder or I can also go to my vs code over here where I have my files and I'm going to take my main. Json file where I'm storing all the strings the original strings the English strings to upload the file by dragging and dropping it I am going to right click on it I am going to open it or reveal it in finder I'm using Mac OS in Windows you also have an option to see the path to the file and open it and here I'm going to drag and drop it to this area that will start the upload and once the upload is completed you will you will be able to go here to the tools in the tools you will find in context over here if you click on it you will reach this part in context for web crowding in context tool provides an overlay for your application translators can make translation in context and instantly preview them by default it will be disabled if you want to enable it just click on this button and then it will change to enabled and here you see the two steps that you need to follow it's it's actually quite simple let me show you the first step is to integrate a new language into your application since localization and translation is very technology specific there are many ways to do this I'm just showing you a simple example with a react app and the I next framework but this will depend on the technology that you are using for your application to enable in context localization you will have to switch your application to this language so if if you have some way of switching the language of your application like a drop down menu or a query parameter or any other approach then you will need to switch to that language that we're integrating here this is a pseudo language like you can see over here we need to integrate that but we have to choose it first this should be a language that you're not planning to translate your content into so in this case I'm going to choose just as an example Africans you could choose any other language that you're not planning to translate you can choose if you also want to translate hidden strings or disable this I'm going to keep it enabled it's enabled by default and you can see here the twet code of the language you selected and the local code this option should be disabled if hidden strings are used for metadata and should be original for the web or the apps functioning okay something to be aware of so after that we click on download and then we open a folder that we downloaded this will be a zip file we just need to unzip it the folder will be named AF when you unzip it and inside that folder you will have a main. Json file this is a file that you have to add to your application in some way depending on how you're structuring your file where you're storing your translations and your locals if we check the content of the file you will see that it's actually quite interesting if we go back to visual studio code we just need to drag and drop this folder here into my local folder which is where I'm storing all the translations it should be at the same level as my English folder let me just make this full screen now we have two languages we have English and we have Africans if we open the Africans Json file you will see that it's not actually translating them into Africans it's just giving them crowding specific identifiers for crowding in context so that's why why you shouldn't plan to translate your application into this pseudo language so choose it carefully when you set this up after you have that you also need to make sure that the application will handle switching to this language appropriately right now if I go to my application I can see that I added the option for afcons and it will handle it correctly like this now if we switch to this language instead of the translations because we don't have them we see just the crowding identify but this is not working yet because we need to take a second step if we go back to crowding Enterprise now we go to the JavaScript snippet setup we need to paste this JavaScript snippet in our head section in the head section of the HTML document or the document that you're working with before any other scripts every page it's important to read this every page with a localizable text should contain this script you can also include this JavaScript snippet only when the pseudo language is active so let's copy this and let's paste it where we need it to be they mentioned that it should be in the head section of the application in a react up that would be in index.html this would be the head element so after that after I'm going to place them below the title here and I'm going to fix the the indentation like this it's just this couple of script texts and that will create all the magic you can see that we have like a code for the project and a domain and we also see this script with a specific Source from crowding CDN the content delivery Network so now if we go back to our react application now we see something special over here you may see this warning first because there is nothing to translate with crowning in context because we're not in the Africans language yet by default we are in English in the application so if you ever see this just click on close you might also read this to know what would be causing it but if it's not an issue really you can just close it and here you can see this preview we see this preview and we can move it anywhere we need to and what are we seeing here well we see all the strings that we can translate for that specific page we're in we can also type to search for a specific string we see like a summary for the left panel of the crowding editor tool but it's right there directly on top of our application we can also click here to take a screenshot of the current screen and upload it to crowding and we also have some settings you might also get a signin screen the first time you launch your application where you will need to choose your target language and you will need to log into crowding and then go back to your application I have I've already done that in this computer so that's why it's not asking me again to sign in for the same application but here I do see croing in context and I can change those settings here in the settings tab the language the target language is Spanish I can also change this if I'm going to translate to a different target language at the moment I cannot select a workflow step from my Enterprise workflow I can change this preview the translations or not highlight them and list only text from the current page I can also log out from my account and let me show you this I'm going to log out momentarily and then log back in so you can see how this works I'm going to log out and this is exactly what you will see when you launch your application this is the target language you need to choose it and the workflow step and then you log in with your crowding account you will be redirected to your crowding account you can send a magic link if you want to and after you click on the magic link you you will be redirected to your react application where you can start translating exactly what we had before right but now when you start translating what happens if you switch to Africans which is the pseudo language well the pseudo language will enable the overlay on your app and you will be able to click here on this little icon next to the string that you want to translate this will open like a more compact version of the editor where you can submit your Translate you will need to use cookies you can customize them reject them or accept them I'm going to accept them and here you can write your translations let me translate this welcome I'm going to translate it like this and then if I save my translation you will see what happens instead of being red now it's green because I translated it and if I have the permissions I can also approve it as a prove reader once it's approved I will see a check mark I will see all the revision history here as well and if I go to my project in crowding Enterprise now if I go to the dashboard I can see that there is a progress here 9% in the Spanish translations let me continue translating this I'm going to save this then I'm going to translate this like this and then I can just approve them as a proof reader and it will be synchronized automatically now you can see a green dotted line around the strings in the overlay and we can see the preview over here if we switch the language to Spanish we are not seeing this the translations because right now we don't have that locally in our project but we do have them over here in our project so if I choose to download this Json file in Spanish like this main. Json I can just download it I'm doing all of this manually of course but you can automate this with all the tools you learned before I can drag and drop the file in Spanish over here to the folder and now if I refresh this in the application I will be able to switch to the Spanish version very easily with the translations I just saved but crowning in context will be activated for specifically Africans when you select Africans if you want to translate into another target language let's say Japanese now I can change this to Japanese while I'm still selecting the Africans language in my app if I want to change the target language I need to make sure that I click here on change okay that will change the strings that I am the status of the strings that I'm translating because they will be the same for all the languages but they statuses will be different or might be different let's say that I'm going to translate into Japanese I personally don't speak Japanese but I'm going to use this machine translation I'm not sure if this is 100% accurate but let's save it so you can see how it works and now I submitted it and approved it and you can see how the status is being updated now if we go to Africans we can see the preview of the translation in Japanese and if we go back to our project in crowding and and we refresh this we see a progress in Japanese we see 9% now if we go to main. Json in crowding we can see that this translation was successfully saved and approved and we can also work from here from the main editor in crowding or in crowding in context so we have these two options and it's always great to see what We're translating in the context of the real application great now you know how to set this up this process is a bit more detailed and it really depends on how you structured and configure your app and the framework that you're using for internationalization in this case I was using IAT next for react react IAT next but for every framework you just need to check where you're storing your translations then choose a pseudo language download the file upload your original strings files then download the file for your pseudo language the pseudo language that you chose from crowding and then follow the steps that we just saw please feel free to review this part of the course to set this up in your own application and the crowding team is also available if you need help here in the tools panel if you go to in contacts for web at the bottom you can see that if you need assistance with any of the stages above you can contact the crowding team if you need any help but these are the two main steps awesome now you know how to work with crowding in context for web awesome congratulations on reaching this part of the course now that you know how to translate your project on crowding let's see how free Cam's Community is translating the content into many world languages we'll see this from a potential contributors point of view emphasizing how to translate our content on crowding so this time we will see this from a contributor's point of view how you as a contributor can translate resources for free code Camp if you are a contributor who is interested in joining our translation effort where should you start you should start by reading our contribution guidelines here we are in our contribution guidelines contribute to freec cam.org you can contribute in many different ways but here we're focusing on translation so you would click here on help us translate and you you will see this we are localizing free cam.org to Major World languages you can see all the languages that we have available right now if you're interested in translating here is how to translate free Cam's resources so you can click here on this link or you can click here on the sidebar on work on translating resources and that will take you to this article first of all prepare yourself for contributions there are no speed limits you can start by reading this announcement we recommend joining our community forum and our Discord chat server if you click on these links let me open them right here so you can see them you can find Quincy larsson's announcements Quincy Larson is the founder of free Cod cam he wrote this article to help you join the localization process how to help translate free code cam into your native language you can read this announcement this has the major steps that you should follow for the localization process and after after that you can also go to this link over here this is the community Forum the community forum is where you can ask questions we also have a Discord server that you can join you just need to choose your name and click on continue to join you will need to register and you will be taken to our Discord server where you can ask questions we have special rooms where you can talk about the localization process and get started you can transl as much as you want when you want it's only a matter of how much time and energy you are willing to invest as a volunteer translator we just ask you to understand the following translations are a team effort it is a fun and rewarding experience but it works best if you involve your friends and colleagues who speak the same language as you we also have the goal of providing education in as many languages as possible but it costs quite a lot to keep the engines running so Freo cam is committed to providing these for free as always but we need to prioritize resources for those who need it the most for translating the curriculum once a language reaches at least a few certifications we can begin deploying the language live on our learn platform where you can find the curriculum we looked at our user base and added 30 more than 30 most widely spoken languages to the list of enabled languages on the translations platform which is crowding we are definitely looking forward to adding more languages to the list but it would only be feasible if we get enough momentum around a language I am covering all of this really quickly you can go here to this link to how to translate files on fre Cod Cam's contribution guidelines to learn more about this and read this in more detail I'm just giving you a general overview now we go to the overview of crowding but of course you just watch the score so you know a lot about crowding let's just go through this really quickly to help us with this massive effort we have integrated our opensource codebase and curriculum with crowding a tool to help us localize our codebase we use a different tool and workflow for translating articles in the Publications okay so crowding is being used for the curriculum and code base the translation workflow is split into two main activities translating and prove reading and we saw those roles during the course right so now you're seeing all of these Concepts in a real world project everything that we saw is a part of the course is being applied here in a real project that is live with a global Community we translate curriculum files documentation and UI user interface elements like buttons labels and other elements you can sign up to our translation platform and contribute with any of the 30 languages more than 30 languages enabled in the platform you can also be a proof reader to verify the translations to get started you should say hi in our this score where we publish updates then head to our translation platform and log in okay let's open up our translation platform here if you click on this link you will see that once you're in here in crowding in our project you will see these three featured projects coding curriculum user interface and documentation we also have other projects but these are the main ones you will also find an about tab where you can find more information about free code camp in the open project you will need to click on one of these projects let's say that you want to contribute to the coding curriculum once you're in there you will find many different elements first of all you will notice a list with all the languages that we have enabled more than 30 languages and you will see their status here on their status bar here you can see the number of words to translate in each language you can see the progress here on the progress bar you can see that the green bar represents how many strings have been approved approved means that they have been translated and pro read and then the approved reader approved the string to be live and we also have a blue bar that represents how many strings have been translated how many words have been translated let's say that we want to check the project for Spanish if we click on this language and we see Spanish modern we go into that project specifically and we can see all the files that we can translate we see the project structure if you need to collapse or close a specific folder you just click here on the small arrow and you will be able to expand or collapse that folder the files will still be there but you will not see them it might take a while but after that you will see the progress of each file as well and you can see them here as numbers and if you want to start contributing or translating then you would also need to choose a file to choose a file let's say just to click on a random file let's choose one from this certification scientific Computing with python let's just click here and if you click here on a file you will be taken to a login page you can log in over here into crowding Enterprise and you will need to log in into crowding Enterprise to have access to free code cam as an organization and to contribute to the project so you you enter your email or username you enter your password and then you log in you can also click here to get a magic link and you can log in with Google Facebook GitHub or your ex Twitter account if you're new to the project then you will need to sign up you can sign up by clicking here and then you will need to enter your email username and pass password agree to the terms and conditions and you may need to do some extra verification here for cloud fler and create your account I already have my account so let me just sign into this if you log in and you already have an account crowding will ask you if you want to stay logged in we can remember your session so you wouldn't need to log in as often you can choose to keep me logged in or not now I'm going to choose one of these options and then I go into the file that I selected because remember that we were in the free code cam coding curriculum project we clicked on a file and now we go to that file and we're back at the user interface that you are already familiar with after taking the course that is how you can start translating our resources technically how you can actually get to the resources if you go to our project again once you're logged in you will also be able to choose the the project you can log in from here after you log in if you don't see your profile here here you will see a login button that you can click on and after that you will see your profile image the organizations that you manage or that you're part of and your notifications as well but here let's say that I am in my account I already locked in I can go to the coding curriculum I can choose a file and now I will see some changes if I am logged into my account I will see go to editor and I will see these files it might take a while to load the progress of the files if you click here on hide completed you will not see the files that have been 100% translated and approved like for example here we have one of these files if you click on the button you will hide them that can be helpful as well to save you some time and reach a file that needs your help after that you also have the option to go to the editor if you click here you can go to the editor and help with strings that need help great that that is how you can start translating our coding curriculum but we also have other projects like the learn user interface and contributing documentation if you go there you will see the same project structure you will see the different managers you will see the same list of languages but you will see different files because that that is the version of the documentation that we are currently reading in the course okay if you would like to help with this you can also help us with this but the interface is very similar for all the projects now how can you translate the learn interface let's go back to our documentation if you would like to help translate the learn user interface like the buttons and the labels if you don't want to contribute to the curriculum and instead you would like to help translate the interface we also have a project for this and our documentation mentions that to translate the learn interface the interface relies on Json files remember Json this is another format that we talked about during the course it is loaded into uh an internationalization this is a numeronym the internationalization plugin to generate translated text this translation effort is split across both crowding and GitHub so if you are going to translate the learn interface you will need to read a little bit about this these Json files contain information that need to be updated to reflect your language but they cannot be uploaded into crowding as the content isn't something that would be a onetoone translation so these files will have to be maintained by your language lead but you're welcome to read about how to translate them in this link on crowding it's also important that you do not edit the following files through a GitHub pool request like these Json files intro and translations are translated on crowding in the project that we have for learn translating them can be a bit tricky as each individual Json value appears as its own string and sometimes the context is missing but the context information provided by crowding over here can help you understand where the string fits into the larger structure if you have any questions about a string you can reach out in the contributor chat that is about translating the learn interface because we have three main projects remember you can contribute to the coding curriculum the learn interface or the documentation translating the documentation is another essential task because this is the main resource that we use to explain contributors how to join free code Cam's Mission we share information steps and guidelines the the information that you are reading right now but we do have certain guidelines for translating our documentation our contributing documentation is powered by doif and we have special parsing for message boxes like this one so if you see this kind of string these words should not be translated and if you have any internal links you have to make sure that you replace them properly when you translate them because the internal links will be broken if you don't replace the ID of the target section with the ID of the translated document here we have an example here just make sure that the ID matches the ID of the element in your markdown files even after the translation so in the documentation we have many different details I'm just giving you a general overview of what you can expect right now we are focusing on these three main projects and finally we also find some best practices do not translate the content within the code text they indicate text that is found in code and should be left in English do not add any additional content if you feel a requires change in the text content or additional information you should propose the changes through a GitHub issue or a pull request that modifies the English file if you think that you need to change something in the challenge please do open a GitHub issue and do not change the order of the content okay to be consistent across languages if you have any questions you can also reach out on Discord and we will be happy to assist you at some point you may also want to become a proof reader right but how did you become a proof reader on free Cam's translation effort if we go down here we can find a section called becoming a proof reader if you have any questions or you're interested in becoming a proof reader feel free to reach out in our contributors chat room we will typically Grant you proof reading access if you have been contributing to free codam for a while so you'll need to contribute as a translator and then we can grant you proof reader access please note that crowding by default will allow you to to approve your translations if you become a proof reader however in general it's best to allow another proof reader to review your proposed translations as an extra safety measure to make sure that there are no errors awesome if you have any questions on the localization process or you would like to join our translation effort you're welcome to join our Discord chat server let me go back here we go to work on translating resources and here you can find the link Discord chat server there you can sign up create an account and contact us if you have any questions once you create your account and join the server you will see a welcome message with the start here localization Channel congratulations on reaching this part of the course you just completed the course and you're more familiar with the fundamentals of localization and how you can translate a project on crowding our localization management platform but the application that we buil and how we use the IAT next framework is just scratching the surface of everything that you can do with this amazing framework so here is a helpful tip for you you can go to IAT next.com to find the documentation for this framework there you will find a lot of information about the different features that it supports you can see that IAT next is an internationalization framework written in and for JavaScript but it's much more than that it goes beyond just providing the standard features such as plurals context interpolation and format it gives you a complete solution to localize your product from web to mobile and desktop here you can find a brief tutorial and you can see that this framework is compatible with many different JavaScript Frameworks and libraries it works with react angular VJs and many more you can also use I next with nodejs with Deno with PHP iOS Android and other platforms if we go here we can see all the supported Frameworks the list is not officially maintained so information here is contributed by the library maintainers themselves you can find more information here we can see that flutter also supports this for development for mobile apps react spelt next.js Angular JS angular here you can see that we do have some variations of the IAT next framework for example for react we worked with react IAT next and each one of them will have their own documentation but from the central website you can reach all of that information you have specific for angular for view jQuery HTML 5 and many more ember.js and the list just goes on and on like PHP rails it's very versatile and you have an entire ecosystem of libraries and fr Frameworks to work with which is always great if we dive deeper into the documentation we can see that we have a tutorial to get started with the framework you already know the basics but we used a very simplified approach for translating because our application was quite simple and it was a simple single page application this will give you more details about how you can use the framework like how you can use the API here in need and the different methods that you can call on the IAT next module like this here you can see a list of all those methods and if you click on them you can quickly scroll down or jump to that particular part of the documentation and they even include an example over here in JavaScript we also see the configuration options how we can pass the the options and a call back function you can find a lot of information about each one of these options over here a description we also see plugins and utils over here and we see typescript because you can use this framework with typescript as well here we also find information about the translation function like Essentials interpolation because with interpolation you can integrate Dynamic values into your translations that is great notice here like the basic interpolation example that we see over here we have the keys the key here and this string right but once we call the T we are going to pass this object and the value over here will be replaced where we find this interpolation in the original string so that is a great great feature working with data models as well you can also pass entire data models as a value for interpolation like this we have the author and you can pass it for interpolation over here there are many additional options that you can choose to work with you can find them in the documentation we also see formatting builtin formatting like plural rules list format display names number format local and date time format this is interesting because it will give you more information about how we can format these values we also see plurals over here how to handle the plurals with your keys how to handle nesting because with nesting you can reference other keys in a translation you can also add a context to differentiate the different translations for example you can provide gender specific translations and you can also work with objects and arrays to be used by thirdparty modules localization so you can find all of this information in the official documentation in the course I kept the example as simple as possible to make it General and as broad as possible for a wide community of Learners to get started but from here you can take this as your first step into the world of localization there's a lot to be covered here and you may dive into a more advanced course on IAT next I'm showing you like the basic principles and Concepts that you need to know you can also find best practices here that you should follow we also see translation resolution fallback name spaces and more advanced concepts this is for the IAT next framework in general but if you want to Di into a specific version of this framework like for example react you can go to react. next.com and here you will find the documentation and more information about this framework is specifically made for react and react native it's based on IAT next so you can find the general information over here in the general articles in documentation but you will also find specific information like the used translation hook that we used in our application you also have different components like the trans component and you can find a stepbystep guide on how to integrate it this is specifically for react but you can also go to the documentation of the framework for the technology that you are working with and after you dive into all the details of the localization framework you can also find more information about crowding where your translators or yourself are going to be working on the translations by going to crowding s base you can go here to support. crowding docomo here crowding KB where KB stands for knowledge base it's like their documentation where they keep all the details of their features and if you ever have any questions or doubts about how a feature works you can go here and check that in more detail you can see how how to create a project how to upload source files and they do have very helpful screenshots that you can check as well you can find translation strategies how you can manage a project project settings the translation process and the different features they have Integrations as well and for translators you can also find more information like a quick introduction to crowding information for volunteer translators and more information about crowdsourcing their account settings and how to join a translation project this is helpful as a an overview of the basic features for volunteer translators to get them started and ready to start translating your content they can also find more information about the translation process like the online editor with helpful screenshots and visual information so if you ever have any questions just go to crowding knowledge base and there you you will find the answers or of course you can always review the content of this course thank you so much for taking the course I hope you liked it and I hope you found it helpful for your localization project I will see you in a future course and I hope you have a great day
