With timestamps:

00:03 - hey everybody welcome to live coding
00:05 - with jesse i'm jesse and today we're
00:08 - going to work with react
00:10 - i wasn't exactly sure what we'll be
00:11 - working on so i left the title nice and
00:14 - vague
00:15 - and just said react
00:17 - coding
00:19 - so we're probably going to finish up or
00:21 - at least try to do a little bit more
00:23 - with that form that we were working with
00:25 - yesterday
00:28 - i uh i thought i might be able to get it
00:30 - finished before the stream
00:32 - but i wasn't really able to do that much
00:34 - so i had kind of a long meeting this
00:36 - morning
00:37 - and um
00:39 - but it was a good meeting though it
00:40 - started out with food so we had
00:42 - breakfast
00:43 - which was really nice and then
00:46 - um
00:48 - then we had like our normal meeting
00:50 - afterwards which took longer longer than
00:53 - normal
00:54 - but i still wanted to get a stream in so
00:56 - today's stream might be a little bit
00:58 - shorter than normal
01:01 - uh we'll see how it goes
01:03 - so we may only end up doing one pomodoro
01:05 - session of code
01:07 - so for everyone who's new uh this live
01:10 - stream is just me doing my everyday work
01:13 - i'm a full-time front-end developer i
01:15 - work for a small university
01:18 - uh so this is not rehearsed at all i
01:22 - will make mistakes
01:23 - i think maybe one time i did a stream
01:25 - where i everything worked out well so
01:27 - but
01:28 - um i'll make mistakes we'll work through
01:31 - them i'll answer your questions and i'll
01:33 - try to narrate what i'm doing as we go
01:35 - along
01:37 - i break things up with pomodoro sessions
01:39 - so we'll do 25 minutes of just mostly
01:41 - coding and i'll i'll won't really look
01:43 - at the live chat too much and then i'll
01:45 - take a five minute break and i'll answer
01:47 - your questions in the chat and then at
01:49 - the end of the stream if there are any
01:51 - questions remaining i'll take
01:53 - as much time as i need to get through
01:55 - all the other questions
01:57 - so uh like i said for today
01:59 - maybe we'll just do one pomodoro session
02:01 - and the rest will be questions so i did
02:03 - get into work really early like way
02:05 - earlier than normal this morning so i'm
02:08 - going to be leaving
02:09 - earlier than normal
02:11 - [Music]
02:14 - so i don't want to do want to take too
02:16 - long
02:17 - with the stream
02:19 - and
02:22 - all right so let's get started
02:25 - i'm going to check the the chat first
02:27 - before we uh
02:28 - start our timer and do some code so hey
02:31 - a few people saying hi how's it going
02:32 - thanks for joining us
02:35 - um
02:37 - anna um
02:38 - is
02:40 - thr through the emoji that she's put on
02:42 - there is it thinks it's funny that i i
02:44 - put the description as i'm not sure
02:46 - exactly what we're going to work on
02:47 - today but i'm pretty sure it will have
02:49 - something to do with react.js yeah i
02:51 - mean that's
02:53 - that's the best i could come up with for
02:54 - the description because i i really
02:56 - didn't know how far i would get uh with
02:58 - what i was working on
03:00 - and um
03:02 - and noob says i have a static website in
03:04 - react which has client-side uh rendered
03:08 - which is client-side rendered i would
03:10 - like to know how i can convert it to
03:12 - server-side rendered website
03:14 - um
03:15 - if it were me personally
03:17 - i would just
03:19 - start up
03:20 - i would build a react project with next
03:23 - js and i would literally just copy and
03:25 - paste the components over
03:28 - then you're gonna get server-side
03:29 - rendering already built in
03:31 - the only thing that might be weird is
03:33 - like
03:34 - if you wanted to then use the routing
03:38 - from nexjs you might have to change some
03:40 - things
03:42 - that's what i would do there may be an
03:44 - easier way to do that but i don't know
03:46 - about it you know offhand so if i had a
03:49 - little bit more time i personally would
03:51 - probably research it first
03:53 - but if i needed to get it
03:55 - server side rendered as fast as possible
03:57 - i would go the next js route because
04:00 - i already know how to do that
04:06 - let's see
04:08 - we have a hive from guadalajara mexico
04:10 - awesome welcome
04:15 - um
04:17 - if i jesse you really like your videos
04:19 - because you're showing uh
04:21 - a normal
04:22 - um expert web developer would you
04:24 - recommend me
04:26 - to be a react developer in 2019 thanks
04:28 - oh yeah for sure i think there's a lot
04:30 - of jobs in react
04:31 - it's a lot of fun to develop with
04:33 - so if you're interested in react and you
04:36 - think you'll enjoy working with it then
04:39 - for sure go for it i see react jobs
04:41 - being posted like constantly i was just
04:44 - at react rally last week and there were
04:47 - a lot of companies there that were
04:48 - looking for react developers uh even
04:51 - like big companies were there like apple
04:53 - was there
04:54 - american express was there and then some
04:57 - smaller companies uh like formidable
04:59 - labs um
05:03 - that slip in my mind there was this
05:04 - other company that had this really cool
05:07 - like editor website editor product that
05:09 - was all built with react and i can't
05:10 - starts with a w man it's slipping my
05:12 - mind but anyway
05:14 - you know
05:15 - i believe every single
05:17 - like company that had a booth at react
05:19 - rally was hiring and
05:22 - wanted react developers specifically
05:26 - so in any case
05:27 - i think it's it's
05:29 - definitely um
05:31 - a good way to go
05:33 - i mean react is still young right it's
05:35 - it's only been out for
05:38 - i mean what like four years or something
05:40 - like that and you know during the first
05:42 - year everybody thought it it was crazy
05:45 - anyway so
05:46 - i mean it's
05:48 - it's still growing
05:52 - let's see we have hi from india
05:55 - uh all right cool i'm gonna get started
05:57 - so i've been
05:58 - spent about six minutes on the uh intro
06:00 - stuff so
06:02 - um let's get started if anybody wants to
06:06 - follow along with the code there's a
06:08 - link to the
06:10 - uh the github repo in the description
06:13 - and we are on the salesforce branch so
06:16 - make sure you switch it up from master
06:18 - brands to salesforce
06:20 - uh otherwise the code is going to look
06:22 - different for what we're working on
06:24 - today we'll be working on the
06:27 - component called inquiry.js
06:31 - let me switch my screen so you can see
06:33 - and i'm gonna make my font
06:36 - a lot bigger
06:39 - and so you can see here in the
06:40 - components folder or an inquiry
06:44 - and
06:45 - i have
06:46 - updated the github repo with the latest
06:50 - code
06:51 - i will say this the latest code has some
06:53 - errors in it but i just wanted to make
06:55 - sure it was all there
06:58 - on github so i i pushed it anyway
07:02 - but let me catch you up on what i've
07:04 - done
07:05 - and then explain what we're gonna do and
07:08 - we'll uh we'll do some code let me start
07:10 - my pomodoro timer
07:13 - so
07:14 - basically uh what i've added is a dialog
07:20 - uh component this is from material ui so
07:23 - we need to bring in a dialog
07:25 - and this will be basically like a little
07:28 - modal that pops up when you
07:30 - submit the form so i'm still not sure if
07:32 - i want to go with a modal or just some
07:34 - type of small loading indicator the
07:36 - reason that i thought of going with the
07:38 - modal is because well two reasons number
07:40 - one i already had the code for that
07:42 - ready from another project so it was
07:43 - easy to copy and paste it
07:45 - but also the number two reason is i may
07:49 - want to give the user more information
07:52 - and i think a modal would easily let me
07:54 - do that
07:56 - maybe prompt them to even
07:58 - do do more
07:59 - so
08:00 - i'm not exactly sure how i want to do
08:02 - that yet so for now that's what's going
08:04 - to be in there what would happen is
08:06 - the modal would open it would say that
08:08 - it's still sending
08:10 - the data and then when we get
08:12 - confirmation that the data has been sent
08:14 - successfully then it'll switch over and
08:16 - say success or something like that
08:19 - and then prompt the user to
08:22 - either like just close the modal or
08:24 - potentially
08:26 - i don't know take the next step give us
08:28 - some more info i'm not exactly sure yet
08:31 - it's going to be somewhat up to our
08:33 - admissions department here because
08:35 - they're the ones that need that data and
08:37 - are going to be acting on that
08:41 - okay
08:43 - um
08:44 - oh ocean asks for the dev site uh link
08:47 - yeah let's
08:49 - i wonder
08:54 - there we go let's start up and grog
08:58 - so ngrok
09:04 - will allow you all to see
09:08 - what i'm working on on your local
09:10 - machines so if you click that link or
09:12 - copy and paste that link you should be
09:14 - able to see the site
09:16 - and the stuff that we're doing will show
09:18 - up on the home page so you shouldn't
09:19 - have to navigate anywhere of course you
09:21 - can if you want to and check out you
09:22 - know other pages on the site
09:26 - and
09:27 - let me pull it over on the screen too
09:28 - and that way for those of you who uh who
09:30 - can't be at a computer right now looking
09:32 - at it you'll still be able to see what
09:34 - we're we're working on
09:38 - so i have it all on the other screen
09:40 - right now
09:43 - and i'm just gonna move it over here
09:45 - and show you what we have
09:47 - so here's what we have
09:49 - the um
09:51 - the form that we're working on is right
09:53 - here
09:54 - it looks really bad right now so we're
09:56 - going to work on the look of it a little
09:58 - bit
10:01 - but these are the these are the fields
10:02 - that we'll have so these are not likely
10:04 - to change we'll just have these four
10:06 - fields first name last name email and
10:08 - student type and you could pick
10:10 - undergrad graduate and online and then
10:13 - we have a submit button that right now
10:16 - i don't know what's up with that so
10:18 - we'll have to uh fix the styling on that
10:21 - also
10:22 - like
10:24 - the
10:25 - i don't know why this is all the way
10:27 - over here
10:28 - it's something to do with the container
10:29 - i guess so
10:30 - we definitely have some styling work
10:32 - that needs to be done
10:34 - and uh that might actually be a good
10:36 - thing to do like let's just style this a
10:39 - little bit better
10:41 - because even if i can't get it to work
10:44 - if i have it styled correctly by the
10:46 - time i have to present this
10:48 - it'll be fine right because
10:50 - if i'm presenting it nobody's going to
10:52 - actually be clicking anything right i'm
10:53 - just going to be scrolling down telling
10:55 - everybody what it does so
10:57 - it makes more sense to just kind of make
10:59 - it look good now
11:01 - and then we can make it work after
11:05 - so
11:06 - let's work on that
11:10 - so we have let me show you what
11:13 - how we're doing styling so
11:15 - we have this object it's actually um
11:22 - basically like css
11:24 - but you'll see there are some
11:25 - differences so we go with camel case
11:27 - instead of
11:28 - hyphenated
11:31 - terms here so you know font size is
11:34 - capital s right no hyphen and then
11:39 - anything that's a string needs to go in
11:41 - quotes
11:42 - numbers can just be numbers right but
11:45 - it's
11:47 - in the format of a javascript object
11:49 - okay so that's what we'll be using
11:51 - mostly for our styles here
11:54 - so first things first uh let's get that
11:56 - container into shape so our stuff's not
11:58 - like super spread out
12:00 - so
12:01 - i like the container size that we
12:03 - already have here
12:06 - right so we have some space on the side
12:08 - so let's just try to match that for now
12:11 - and then we can go from there and see
12:13 - see how it looks
12:18 - i'm actually gonna i'm gonna turn on my
12:21 - fan here and just keep it on low if it's
12:24 - too noisy let me know but i don't know
12:26 - if you can see like i'm super hot and i
12:28 - feel like
12:29 - my forehead is just super shiny because
12:32 - i'm starting to sweat so apologies for
12:34 - that it probably looks gross but uh it
12:37 - just got really hot in my office
12:41 - okay
12:43 - if you're just coming in you're
12:44 - wondering why i'm not looking at your
12:45 - question in chat i will look at your
12:47 - question as soon as this pomodoro timer
12:49 - is up so in about 20 minutes
12:51 - so just hang in there a little bit and i
12:53 - will be sure to
12:55 - look at your comment and answer any
12:57 - questions that you might have
13:00 - so we have this grid container
13:06 - let's see where that ends
13:08 - yeah you know what
13:16 - actually
13:17 - let's see where this is we need to go
13:18 - back to our index page right because
13:20 - that's where all the other containers
13:22 - are so this inquiry.js is its own
13:24 - component and we're just putting it into
13:26 - the index page here
13:29 - right here under inquiry and on the
13:31 - index page
13:34 - i think what we have is that
13:37 - our
13:38 - our main grid is not what's giving us
13:41 - our padding on the sides it's these grid
13:44 - items each have their own padding so
13:47 - i'm going to verify that
13:50 - in our our css object which
13:54 - let's move that down
13:57 - so
13:58 - we're currently moving all of
14:01 - our css to the bottom of our components
14:05 - that makes it a bit easier to figure out
14:07 - what a component does when you first
14:09 - open it
14:12 - so we're going to look at those grid as
14:14 - content we have a content container
14:19 - actually
14:21 - our content container should be
14:23 - regulating
14:26 - let's double check
14:28 - what class we have on here
14:35 - yeah our grid container
14:37 - does have the class of content container
14:40 - and our our inquiry is within that
14:42 - container so
14:44 - we're gonna have to dig a little bit
14:45 - deeper to figure out why this inquiry
14:47 - component is not fitting in there
14:49 - uh so let's see
14:52 - first off let's see what kind of styles
14:54 - we have here
15:03 - and we grabbed some of these styles
15:08 - let's get rid of because they were from
15:10 - when we
15:12 - we used a different component as our
15:14 - base and then we just kind of edited it
15:17 - so those styles were from a different
15:18 - component
15:20 - um yeah so we don't have any styles in
15:22 - here right now
15:26 - that i think would would really mess
15:28 - anything up
15:32 - i don't even think we're using this form
15:34 - control
15:36 - let's see if it's on the page i guess we
15:38 - are
15:40 - no
15:41 - okay we are using a form control
15:44 - somewhere okay
15:45 - uh so let's go back to
15:50 - let's go back to this and let's just
15:53 - inspect it see what's going on
15:57 - uh i will make this
15:59 - bigger so y'all can see
16:02 - and
16:08 - let's see what section so we're dealing
16:10 - with this section here
16:13 - okay
16:13 - so
16:16 - we'll just do a quick comparison here
16:19 - uh so we have this grid container
16:23 - and it's saying we have a width of 100
16:26 - let's compare it to this grid container
16:28 - which also has a width of 100 percent
16:31 - but then it has a max width of 70.
16:38 - interesting
16:39 - great item
16:42 - you know what i think
16:44 - is going on let's look back at our index
16:46 - component
16:48 - i thought
16:53 - let's close this off
16:56 - interesting okay
16:58 - so i thought that this grid container
17:01 - was not closed but evidently it is
17:03 - closed
17:05 - and it closes here
17:08 - okay
17:09 - um
17:12 - that makes more sense now
17:13 - let's
17:26 - let's put another great container here
17:36 - i'm not sure if this is the best way to
17:37 - handle this but i i'm gonna try it first
17:41 - the
17:42 - thing i'm thinking is maybe we could
17:45 - just extend it and put this inquiry
17:47 - inside our existing grid container
17:50 - and
17:51 - we could probably do put this in there
17:53 - as well
17:55 - or potentially we could
17:57 - add the styles for the grid container on
18:00 - the container that's in our other
18:01 - component
18:03 - which i wouldn't like to do because that
18:04 - would make it a bit less versatile
18:06 - um and then
18:10 - the other thing i'm worried about is
18:11 - we're going to have a container grid
18:12 - container within a grid container i'm
18:14 - not sure how
18:16 - how that's going to work but we'll find
18:18 - out
18:19 - so for now
18:21 - it looks like it's okay it is within
18:24 - that
18:28 - yeah so it's staying within there
18:31 - in terms of the layout
18:34 - let's see what it looks like
18:42 - so
18:43 - we have this outer container
18:45 - and then we have a inner container
18:48 - and then we have another one so
18:51 - i guess it doesn't really matter
18:53 - uh it's just kind of like an extra
18:54 - unnecessary div which
18:56 - is not a huge deal
18:58 - so
18:59 - i think we'll go with it for now
19:08 - so that gives us a little bit of padding
19:11 - hey look our submit button now
19:14 - actually says submit
19:16 - that's cool
19:17 - i don't know what the deal was before
19:18 - but
19:19 - uh i probably end up styling that
19:21 - differently maybe to look more like like
19:23 - this button does
19:26 - but for now it
19:27 - you know we we get the idea that there's
19:29 - a submit button
19:31 - um
19:35 - it
19:36 - would actually might be nice if
19:42 - y'all let me know what you think about
19:43 - this
19:45 - so
19:46 - when the screen's small this doesn't
19:48 - look too bad but when it starts to get
19:50 - big this is just a huge gap between
19:55 - like all these fields
19:58 - so
20:01 - i'm thinking
20:03 - we need to do something about that
20:11 - uh so either we could go with
20:14 - the fields being like all on one line on
20:17 - a large screen and then starting to
20:19 - stack as the screens get smaller or we
20:22 - could set a like a fixed max width
20:28 - um
20:29 - so that
20:30 - we get the width we like and it'll never
20:32 - go bigger than that
20:36 - let's try both let's let's see though so
20:38 - let me know what you all think in the
20:40 - chat and then i'm just going to try both
20:42 - right here so you can see them and i'll
20:44 - be able to see them and see what i like
20:46 - so first
20:47 - first thing and uh it'll be really easy
20:49 - is let's just add in
20:52 - everywhere that we have this uh sm
20:55 - equals six
20:57 - we're going to switch that up
21:04 - and
21:05 - we'll leave it for for the small screens
21:07 - there's six but now we're going to say
21:09 - md
21:10 - for medium size
21:12 - equals
21:14 - um
21:17 - so we actually have
21:18 - five of these i think because if we
21:20 - count the submit button it's it's five
21:23 - so
21:26 - we could go
21:28 - with this is gonna be weird
21:31 - um
21:35 - yeah let's go with uh
21:38 - three let's have a take up three columns
21:39 - for now that is gonna leave that fifth
21:42 - one kind of like on the end there like
21:45 - down below
21:46 - but you can't really divide 12 by five
21:50 - evenly so
21:53 - we'll just try this first
21:56 - okay so now when there's a large screen
21:59 - it does go across
22:04 - i'm gonna submit button below
22:07 - i don't know
22:08 - i'm not sure that i i really love that
22:10 - either
22:18 - hmm
22:26 - at it just for a second let you all have
22:27 - a chance to look at it
22:38 - okay
22:41 - i think it potentially would look a lot
22:43 - better if we had it like inside um a
22:46 - section like this that had a dark
22:48 - background
22:50 - i'm not going to try it out right now
22:51 - though we could try it out
22:54 - maybe in a minute because i then i'd
22:56 - have to change the
22:58 - font color and everything
23:01 - so we're just going to imagine it for
23:03 - right now
23:05 - eventually i do want to do it though
23:06 - because i'd like to put the same these
23:08 - same fields in the footer
23:10 - and
23:11 - obviously i'd need to change the font
23:14 - color for that
23:18 - alright so
23:19 - the next thing i'm going to try is we'll
23:22 - switch it back to how it was
23:24 - and
23:25 - then we'll
23:27 - we'll just have a max width
23:32 - uh i get to the end of my playlist
23:34 - need to switch this up
23:46 - okay we're good now
23:48 - can't possibly code without spotify on
23:50 - right
23:58 - okay
24:05 - so we'll just
24:07 - undo all that and now
24:10 - let's put
24:17 - try to see if we already had
24:19 - styles on here but i guess we don't
24:21 - do we have styles on anything yeah we do
24:25 - just trying to copy and paste and avoid
24:27 - typing as much as possible
24:29 - so on our grid container let's add this
24:33 - and we'll just say container
24:38 - and then let's go down here and add
24:42 - a class for container
24:46 - and we'll say max with
24:51 - let's give it a max width of 300 pixels
24:56 - and that'll actually work
24:58 - no matter what even on mobile because as
25:00 - far as i know the
25:02 - narrowest mobile device still has 320
25:06 - pixels
25:07 - so
25:09 - uh this should be good
25:14 - i've seen a lot of stuff down here
25:17 - what is happening oops forgot a comma
25:22 - so remember this is uh the same syntax
25:25 - as a javascript object because in fact
25:27 - it is a javascript object so we do need
25:30 - to have these commas in here so that
25:32 - should work yep that works now
25:35 - oh
25:37 - all right so first problem with that
25:41 - is that we have overlapping fields
25:50 - all right so it's not going to work
25:52 - being that small
25:55 - uh so let's go in here and see
25:58 - remember we're just trying to get a feel
26:00 - for what it looks like so
26:03 - what i'm gonna do now is just change
26:05 - things in dev tools
26:07 - just so we can see it without the
26:09 - overlapping fields
26:10 - so here's the container that we put that
26:12 - max width on let's bump it up to 600 pix
26:16 - yeah 600 looks way better
26:20 - and
26:22 - let's also
26:24 - give this a
26:27 - flex
26:28 - maps flex let's go with the flex
26:32 - um
26:37 - align items
26:40 - no that's not what i want uh justify
26:43 - content
26:47 - there we go so since we're using flexbox
26:49 - we can say justify content center
26:52 - on this containing div and this will
26:55 - move everything to the middle i just
26:56 - kind of wanted to see what it would look
26:58 - like in the middle i don't like that
27:00 - this is
27:01 - on
27:02 - on the side here
27:05 - um
27:12 - all right let me do a little bit with
27:13 - this just to see what it'll look like
27:16 - oops here we go so let's move this down
27:20 - all right so our container we're going
27:22 - to bump to a 600 600 pixels and then
27:26 - within that let's go justify content
27:30 - cfy
27:33 - content
27:36 - oops
27:38 - forget that comma again so we have
27:39 - justify content we're going to say
27:41 - center
27:42 - and then we're also going we're going to
27:44 - go up here
27:46 - and find that submit
27:52 - i'm going to find that submit button and
27:54 - we're going to switch this so that it
27:56 - takes up the full
27:58 - um
27:59 - amount of space
28:00 - and then i don't really want that to be
28:03 - centered either so
28:05 - uh
28:06 - well let me wait a second on that so i
28:08 - want to see what it looks like first
28:15 - so
28:17 - let's go back here
28:20 - to this containing div
28:22 - so verify that now it is taking up the
28:24 - full width right which is what we wanted
28:28 - uh and we could say
28:32 - let's let's say a line self and see what
28:35 - we can get here whoops is that the wrong
28:37 - one
28:40 - i wonder why it's doing that
28:42 - oh i know what
28:44 - um
28:47 - and so here's the problem
28:51 - is there an equivalent in flexbox to
28:54 - um a lion's self but
28:58 - let me justify i guess i can go with
29:02 - this div and let's let's just say um
29:06 - justify content
29:07 - i'm going to end
29:12 - that's weird
29:17 - yeah we should be able to
29:22 - we should be able to do this
29:30 - hmm
29:49 - uh what am i doing wrong
29:55 - all right about two more minutes till i
29:57 - go to the chat and answer questions
30:01 - so
30:04 - i'm messing something up here
30:20 - content in
30:31 - uh john hanson saying put the submit
30:33 - button in its own flex div what's the
30:36 - thing i thought it
30:38 - already was
30:42 - guess not
30:45 - reflexive
30:52 - reflex
30:57 - all right
31:01 - all right let's try that this will be
31:02 - the last thing that we do
31:07 - oops
31:09 - div
31:11 - styles
31:19 - let's go with
31:23 - display
31:24 - flex
31:27 - oops
31:30 - flex and then
31:33 - oops
31:36 - i'm gonna say
31:38 - justify content
31:42 - and
31:54 - what's up with this
31:58 - what's my problem here what's going on
32:01 - oops
32:05 - oops shouldn't have even say
32:14 - all right let's see what that did
32:17 - nothing
32:31 - hmm
32:33 - i'm gonna refresh to make sure we're
32:35 - clearing anything that might still be in
32:37 - here
32:44 - all right
32:45 - um
32:50 - oh michael cruz saying use flex end yeah
32:53 - maybe that's my problem
32:57 - yeah flex in
33:00 - it was that the whole time
33:04 - all right cool and then now i've lost my
33:09 - formatting for this
33:18 - for whatever reason
33:20 - this is not working now
33:27 - all right uh i mainly just wanted to see
33:30 - if this submit button would look better
33:31 - over here
33:32 - now that i see it i'm not so sure
33:36 - but my timer is up so
33:39 - i'm gonna put on this five minute timer
33:41 - just to see um if maybe we want to do
33:43 - another pomodoro session
33:45 - but
33:46 - for now
33:48 - i'm thinking maybe not
33:51 - we'll see how it goes
33:53 - in any case i do uh still want your
33:55 - opinion on
33:58 - what to do with with this form in terms
34:00 - of style
34:04 - so the only constraints basically are we
34:06 - need those fields and a submit button
34:09 - and it has to be like material design
34:12 - looking okay so other than that
34:14 - you know we do whatever we want with it
34:19 - uh so if you have ideas please let me
34:21 - know
34:30 - uh
34:31 - kyotik says react versus node versus
34:33 - angular
34:35 - so i would say node shouldn't be
34:37 - included in there because node can and
34:39 - usually is used with both react and
34:41 - angular so node is back end
34:44 - react versus angular
34:47 - i i mean it's really a matter of
34:48 - preference
34:50 - uh they're not exactly
34:52 - the same like comparable you know one to
34:54 - one
34:55 - they do some different things
34:58 - but
35:01 - i mean the only thing that i'll say in
35:03 - terms of difference is
35:05 - react is growing at a faster rate than
35:08 - angular in terms of like usage right
35:12 - but angular is still
35:15 - used
35:16 - so
35:18 - i haven't used any of the newer versions
35:20 - of angular so i really can't say much
35:22 - more about it
35:33 - uh john hanson
35:35 - also said oh okay so there was a
35:37 - question earlier about server side
35:39 - rendering with react john hanson
35:41 - recommends uh gatsby js so i had
35:43 - mentioned next js that's what we're
35:45 - using for this project but uh john says
35:47 - check out gatsby so yeah i
35:49 - haven't used gatsby on a project but i
35:52 - was pretty impressed with it when we we
35:53 - checked it out as a potential solution
35:56 - for this particular project
36:01 - uh
36:02 - lar
36:04 - lar says uh how to build a c plus
36:07 - website
36:08 - i have no idea i've never attempted to
36:10 - build a website in c plus
36:13 - in general though if you're going to
36:14 - build a website
36:16 - you're going to use html and css i mean
36:19 - html at the very least minimum right
36:22 - css if you want it to look nice if you
36:24 - wanted to do anything you're going to
36:26 - need javascript
36:27 - your any other language you're using is
36:29 - going to be backend
36:31 - so
36:33 - you can use whatever you want for the
36:34 - back end but you definitely need to know
36:36 - html css and javascript
36:39 - if you're going to do anything with the
36:40 - web
36:45 - carticas that says no air conditioner in
36:47 - your room yeah i mean there is air
36:48 - conditioning in this building it's just
36:51 - my room gets really warm
36:53 - i think it's because of all my my
36:55 - screens generate like heat so
36:59 - other rooms like other offices
37:01 - in my building are
37:03 - they're generally pretty cool
37:05 - but
37:06 - i just have a heat source
37:09 - in mine
37:18 - uh
37:19 - boo man
37:21 - says what do you think about redux is it
37:24 - needed for a small project no i
37:26 - generally i think redux is not necessary
37:29 - for a small project
37:31 - you
37:34 - usually the point at which i start
37:36 - considering redux is if i find myself
37:38 - passing props down like through a number
37:41 - of of children or like back up to the
37:43 - number of like parent and grandparent
37:45 - elements
37:46 - uh so if i need to pass things
37:48 - like three
37:50 - levels down or more i'm then i'm going
37:53 - to consider redux or something like
37:55 - redux
37:58 - otherwise
38:00 - just manage state the way react was was
38:04 - intended right just
38:06 - with local like component state um i
38:08 - think you'd be fine like that and
38:11 - you're gonna
38:12 - because like redux just adds all this
38:14 - extra complexity and it it will slow you
38:19 - down
38:20 - for a small project if you don't really
38:21 - need it if you have a large project
38:24 - redux will eventually save you time but
38:26 - there's a point at which it would
38:28 - actually save you time
38:30 - so if you haven't reached that point in
38:32 - terms of project complexity it's it's
38:34 - less efficient to use redux so hopefully
38:37 - that makes sense let me know if it
38:38 - doesn't
38:41 - okay my five minute timer is up but i'm
38:42 - just going to keep going with some
38:43 - questions right now
38:54 - okay michael krill says the form control
38:56 - is wrapping the select okay so that's
38:58 - probably why the select is not taking up
39:00 - this full space because
39:03 - it's inside of
39:05 - another container
39:07 - all right cool i'm glad you noticed that
39:29 - um
39:30 - anku says which language uh we're using
39:33 - javascript
39:39 - and michael cruz says i thought you said
39:41 - it was gonna end up being a modal the
39:42 - form itself won't be a modal but once
39:45 - you submit the form a modal will pop up
39:51 - john hanson says we can easily nest grid
39:54 - containers since they're uh flexbox
39:58 - um
39:59 - nested true css grids have a few gotchas
40:02 - okay cool so we should be fine nesting
40:04 - it i mean it looks a bit messy but you
40:06 - know not that many people are gonna be
40:08 - inspecting our code
40:13 - man my eyes look super red right now
40:17 - i don't know why
40:19 - i've been so tired i just can't recover
40:21 - from my my trip i i didn't get that much
40:23 - sleep
40:25 - like last week and
40:28 - i'm i'm still like exhausted all the
40:29 - time
40:36 - maybe i'm starting to get sick
40:39 - actually that kind of makes sense
40:41 - maybe it's like the early
40:43 - early stages of me getting sick
40:46 - i hope not but it's definitely possible
40:59 - uh williams says what program are you
41:02 - discussing uh javascript in particular
41:05 - react
41:31 - all right michael crow says you set a
41:33 - width on the items against uh the
41:35 - viewport set an absolute value for the
41:37 - container
41:39 - okay that must have been before we
41:41 - we did that so i think we that's in fact
41:43 - what we ended up doing
42:02 - uh williams says how can i become a
42:04 - developer i know the basics of
42:06 - programming which i studied uh in
42:08 - engineering
42:09 - um
42:11 - if you're very new
42:12 - to
42:13 - being a web developer check out
42:16 - freecodecamp.org
42:18 - and start to go through some of the
42:19 - lessons there
42:21 - they are
42:22 - very helpful and it will take you
42:24 - through a lot of the basics all the way
42:26 - into some more advanced stuff as you go
42:28 - on and that should give you a good idea
42:30 - of
42:31 - you know what you need to know and
42:32 - whether or not you even like
42:34 - working with uh with that kind of thing
42:39 - uh lenovo
42:41 - as how was your trip to new york city
42:44 - it was good so yeah let me
42:48 - i don't know if i said anything about my
42:49 - trip yet that or at least explain that
42:52 - much about it so
42:53 - last week i actually took two trips
42:55 - first i went to react rally in salt lake
42:57 - city
42:58 - and then i flew to new york
43:03 - in particular i was in williamsburg
43:05 - brooklyn
43:06 - brooklyn is a
43:08 - section of new york city
43:10 - and
43:11 - there was a free code camp
43:14 - top contributors party so
43:17 - uh i was was honored uh to be
43:20 - one of the top contributors for 2018.
43:23 - so went there
43:25 - it was really cool it was awesome to
43:27 - meet
43:28 - a lot of these people that i had contact
43:31 - with online and i'd never met in person
43:34 - so that was really cool and there are a
43:35 - lot of people that were doing things
43:37 - that i didn't even realize that they
43:39 - were working with free code camp and
43:40 - after getting to meet him and learning
43:42 - about what they were doing you know i
43:44 - was
43:44 - wow this is awesome you know i i know
43:46 - your work even though i didn't know you
43:49 - um
43:51 - yeah so i mean some of the people i met
43:54 - you know uh moderated the forum and some
43:57 - of them were editors for the medium
43:58 - publication or
44:00 - uh worked with a podcast
44:03 - or worked on like the actual code for
44:05 - free code cam
44:07 - so
44:09 - it was cool it was really cool it was a
44:11 - lot of fun
44:13 - so we just kind of hung out ate food and
44:15 - stuff and and the whole thing was live
44:17 - streamed so you can check that out the
44:20 - the videos available uh on this youtube
44:23 - channel
44:25 - so it was a good cool experience and
44:27 - then i just the rest of the time i that
44:30 - i was there i
44:31 - i just decided to walk around new york
44:33 - and see what it was like so i took
44:35 - like during the day i i walked all
44:37 - around brooklyn
44:38 - and
44:40 - and just checked out as much as i could
44:41 - i walked around until my phone died and
44:43 - then i
44:44 - charged it a bit and then that that
44:47 - night
44:48 - uh so this would be sunday night i went
44:51 - to manhattan and walked around manhattan
44:54 - for hours and hours until my phone was
44:56 - about to die
44:57 - um
44:59 - so that was cool so i mean i stopped at
45:01 - a lot of places got you know food or
45:03 - coffee or something i had the best ramen
45:05 - i've ever eaten in my life
45:07 - uh in manhattan it was awesome that uh
45:11 - tonkatsu-style ramen was so good
45:14 - uh
45:15 - but anyway yeah it was cool it was cool
45:16 - to just get
45:18 - see what it's like brooklyn and
45:20 - manhattan are super different
45:22 - um
45:24 - yeah it's just so so different
45:26 - so it's kind of cool you know like you
45:28 - go to new york it's not it's not just
45:30 - all the same not all one city like each
45:32 - part is definitely distinct
45:35 - um
45:36 - its own like
45:37 - type of people stores like architecture
45:40 - it's
45:41 - it's cool it was really cool trip
45:44 - and salt lake city was a cool place too
45:46 - uh way different from new york but um
45:49 - but also cool uh cool place to be so
45:53 - uh if anybody wants to know more about
45:55 - my trip or anything specific feel free
45:57 - to ask me in the chat here or at some
45:59 - other time
46:00 - i'd be happy to talk more about it
46:02 - otherwise i don't want to bore you if
46:04 - you're not interested
46:14 - uh strata says the code is so blurry
46:17 - so
46:18 - if your code is blurry i'm guessing that
46:20 - it might be the connection
46:22 - so it should be
46:24 - i'm streaming in uh 1080p
46:27 - quality so in 1080p and i think two and
46:30 - 720 the code shouldn't be blurry but
46:32 - anything lower than that it's blurry so
46:34 - if you're not getting a good picture
46:36 - right now you can wait and watch the
46:38 - recording and
46:40 - you may be able to watch in full hd if
46:42 - you have a good network connection you
46:44 - know later on
46:47 - the other thing it could be if you're
46:48 - watching on a mobile device
46:50 - it's really hard to watch code on a
46:51 - mobile device so it doesn't really
46:53 - matter how big i make the code it's
46:56 - still going to look kind of small
47:05 - alexi
47:07 - says
47:09 - how to master css
47:12 - uh work just practice work with it a lot
47:16 - so you can watch videos and do courses
47:19 - on it which is great uh but no matter
47:21 - what you do just practice every day or
47:24 - as close as you can get to every day
47:26 - i think that's the key to getting good
47:28 - at really anything
47:30 - so
47:31 - that's that's my advice
47:33 - for css and for pretty much everything
47:35 - else
47:37 - just try to do at least a little bit
47:38 - every day
47:47 - cardig says angular has mvc so model
47:50 - view controller which is not in react is
47:53 - it important
47:54 - uh it
47:55 - it depends on what you want to do right
47:57 - if
47:58 - if your project lends itself better to
48:01 - that kind of architecture the model view
48:03 - controller
48:04 - um then then go with that like if not it
48:08 - so i mean it's really
48:10 - when we're talking about
48:12 - let's say like angular versus react
48:14 - versus vue or amber or jquery whatever
48:17 - else you want to compare it to right
48:20 - uh a lot of times we want to say like
48:23 - and i get these questions a lot like
48:25 - which one's the best
48:27 - like like there's a best like that's the
48:29 - answer right but it's not that clear cut
48:31 - it it usually comes down to
48:34 - what are you trying to accomplish
48:37 - like let's pick the tool right trying to
48:40 - asking
48:41 - which is the best between like angular
48:44 - or whatever you want to ask
48:46 - is kind of like asking what's the best
48:48 - tool
48:48 - right
48:49 - hammer versus screwdriver versus wrench
48:52 - which is the best
48:54 - it depends entirely on what you're
48:55 - trying to do right if you're trying to
48:57 - hammer a nail obviously the hammer is
48:59 - the best
49:00 - all right but if you try to take a screw
49:02 - and drive it into a piece of wood with a
49:03 - hammer
49:04 - it's not going to be nearly as effective
49:06 - as if you had a screwdriver if you have
49:08 - a bolt
49:09 - right like you're going to want to
49:11 - wrench so think of frameworks in
49:14 - encoding like that
49:16 - right
49:17 - it's not that there's one thing that's
49:19 - better in all cases it's
49:22 - what is your use case and what's going
49:24 - to be the best thing for you you want
49:26 - something that's going to do what you
49:28 - need it to do but not come with all this
49:30 - extra stuff that you don't need so that
49:32 - it's bloated right it may
49:35 - take you a lot more time to set
49:36 - something up that has lots of extra
49:38 - stuff that you don't need
49:41 - sometimes the best thing is just to pick
49:43 - the most simple solution that fits your
49:45 - use case
49:46 - even if that solution in terms of total
49:49 - features
49:50 - is way less feature filled than
49:52 - something else right you also want to
49:54 - think about like on your team of
49:57 - developers what do they already know
49:59 - right learning something new
50:02 - even if that new thing might be better
50:05 - is going to take a long time
50:07 - is it is that better thing going to add
50:10 - enough value to the project
50:12 - uh to
50:14 - to make sense
50:17 - and like all that extra time that you're
50:19 - gonna need to give your developers uh to
50:21 - learn it right it it doesn't always pay
50:24 - off
50:24 - right sometimes it makes more sense to
50:26 - go with the older thing or the thing
50:29 - that's not doesn't have as many features
50:31 - if your developers already know it
50:33 - if you need to get that thing out
50:35 - quickly right because you get the
50:36 - product out quickly and it works
50:38 - then you can move on to the next product
50:40 - right and make a lot more money
50:43 - assuming that you can fulfill all your
50:44 - clients requirements
50:46 - it doesn't have to be like i'm using the
50:48 - absolute latest
50:49 - cutting edge perfect thing
50:51 - it's do i fulfill the requirements of
50:54 - the projects
50:55 - right
50:56 - and
50:57 - that's what should be your focus should
51:00 - be so for me react makes sense for a lot
51:03 - of things
51:04 - one of the big reasons is i know react
51:08 - right it would take me a while to learn
51:10 - something new
51:12 - but there are some cases where even
51:14 - react
51:15 - is overkill
51:17 - and i might say okay for this project
51:19 - like
51:20 - i'm just gonna do straight up html css
51:23 - if i need some interactivity i'll do
51:25 - vanilla javascript
51:26 - maybe even jquery sometimes it needs to
51:29 - get loaded for something else on the
51:30 - page anyway and in that case i'm i would
51:32 - just use it right
51:34 - uh so that's where i think we need to
51:37 - look at that question sorry for like the
51:39 - the rant on that but you know i get i
51:41 - get that question often enough that i
51:43 - think is kind of worth explaining this
51:46 - um
51:47 - that it's you know these frameworks are
51:49 - not it's not competition
51:51 - right they often borrow ideas from each
51:53 - other and build off of each other and
51:55 - they are created to solve different
51:57 - problems
51:59 - uh so
52:01 - i think the tool analogy is is pretty
52:04 - good here right you just need to find
52:06 - the tool that is meant for your problem
52:10 - right and and not think that somehow
52:13 - there's one tool that's going to solve
52:16 - everything
52:18 - right and and sometimes it doesn't
52:20 - matter if you pick the wrong thing it'll
52:21 - still work
52:22 - right like
52:24 - if you pound hard enough you can get a
52:26 - screw into a board with a hammer
52:29 - but it's going to take a lot more effort
52:32 - and it's not going to fit us perfectly
52:35 - but it's possible right so
52:38 - you know don't be afraid of
52:40 - am i going to pick the wrong framework
52:41 - just get started start working if it's
52:44 - really the wrong thing for you it'll
52:46 - you'll notice
52:47 - and hopefully you'll have time to switch
52:49 - but even if you don't you could probably
52:51 - still make it work
53:02 - uh let's see
53:04 - i lost my place it scrolled me down
53:06 - automatically
53:11 - uh david as his react is still an
53:13 - on-demand javascript library yes
53:15 - definitely
53:16 - i think i mentioned earlier i see a ton
53:19 - of uh jobs that are asking for react
53:23 - experience so
53:24 - um
53:26 - yeah so you're good if if you no react
53:29 - if you're gonna learn react there are
53:31 - jobs out there
53:33 - stephen says any plans for using graphql
53:35 - yeah we are using graphql on this
53:37 - project so we didn't work with it today
53:39 - but uh we will work with it again in the
53:42 - future and we have worked with it on on
53:44 - past streams
53:46 - uh schrada says how do i get this code
53:50 - from the start stage
53:52 - um
53:54 - i guess you'd have to look back at
53:56 - um
53:58 - some of
53:59 - the
54:01 - like the earliest
54:03 - commits and then view the repo at that
54:05 - point
54:12 - and uh the the link to the repos in the
54:14 - description
54:23 - somebody says don't die i would try not
54:25 - to die
54:26 - uh i guess because i mentioned i think i
54:28 - was getting sick earlier
54:30 - uh strata said is the session over sir
54:33 - um the coding portion is over i don't
54:35 - think i'm gonna do any more coding today
54:37 - because i'm actually going to leave the
54:39 - office
54:40 - really soon
54:42 - but i'm still going to do questions
54:52 - uh aj asks any tips uh for making a
54:55 - sticky footer uh any way to point me in
54:58 - the direction to the one you use on your
55:00 - current site
55:01 - um
55:03 - so a sticky footer
55:08 - you mean like
55:10 - all right so i'm not exactly sure what
55:11 - you mean by that do you mean that you
55:13 - would always be able to see the footer
55:14 - and it would always be visible as you
55:16 - scroll
55:17 - or
55:19 - or do you mean that the footer would
55:21 - always be at the bottom even if you were
55:23 - on a page that didn't have enough
55:25 - content to push it to the bottom
55:31 - so i guess
55:33 - if you wanted the footer to always be
55:34 - visible
55:36 - then
55:37 - i guess you're going to want to set it
55:39 - to
55:40 - something like
55:43 - uh
55:44 - absolute
55:45 - position
55:46 - right or i'm sorry a fixed position
55:49 - right and uh you're going to want to set
55:51 - a fixed position right like 100 oh
55:54 - actually michael michael creel has the
55:55 - answer here so
55:57 - um
55:59 - so just check out what he wrote i'll
56:01 - explain it for those of you who maybe
56:02 - can't see the live chat right now
56:04 - basically you would um
56:06 - set it at position fixed
56:09 - and then you would do
56:10 - for
56:11 - the value it would be
56:13 - you would say top right for the
56:15 - positioning and then you'd use calc
56:18 - so calc lets you do math inside of css
56:21 - so you would want to say 100 vh that's
56:24 - viewport height so that would position
56:26 - it with the top corner down here so you
56:28 - wouldn't actually be able to see it but
56:30 - then you would do calc minus the height
56:32 - of your footer right so whatever that
56:34 - might be
56:35 - and that would bump it up by the height
56:37 - of your footer so then the footer would
56:38 - always be there always visible as you
56:40 - scroll down right so that's that's how
56:43 - you would do that if that's what you
56:44 - mean by sticky
56:46 - otherwise
56:47 - if you just always wanted it to be at
56:49 - the bottom even if you didn't have
56:50 - enough content to push it to the bottom
56:52 - you would want to put your content in
56:54 - one container right maybe call it main
56:56 - or something and then make the minimum
56:59 - height of that container
57:01 - be
57:02 - 100 vh
57:04 - minus the height of the footer and then
57:08 - potentially if
57:10 - you might want to take into account the
57:12 - height of the header as well
57:14 - depending on what you have the header
57:16 - set at
57:21 - uh modina says hello from bangladesh hey
57:24 - how's it going thanks for uh for joining
57:26 - us
57:32 - um
57:35 - let's see louie or luis how do you
57:38 - pronounce that in france anyway says hi
57:40 - from france how's it going
57:42 - um
57:42 - thanks for joining us michael says it
57:44 - must have been nice when you introduced
57:45 - yourself on the stream hi i'm jesse and
57:48 - most of them got the reference so yeah
57:50 - on the if you watch the free code camp
57:52 - top contributor party live stream when
57:55 - they got around to me which was kind of
57:58 - when they were doing introductions i was
57:59 - almost the last one
58:02 - i got on the mic and said hey you know
58:04 - everyone it's jesse from live coding
58:07 - with jesse which is pretty close to what
58:09 - i say at the beginning of every stream
58:11 - and uh
58:13 - a lot of people did laugh they
58:15 - they got the reference so it was it was
58:17 - fun
58:31 - uh
58:32 - vamshi says do you use sass with jsx
58:36 - you can use sas with with react
58:40 - it's possible we're not in this
58:42 - particular project
58:43 - but we have in past projects
58:47 - uh if you're talking about actually
58:49 - having sass like
58:51 - in your jsx code i've never seen that
58:54 - happen
58:55 - it's usually in a separate file
59:05 - michael cruz says
59:07 - except so uh this is earlier i said
59:10 - there's not really one javascript
59:12 - library framework that solves all your
59:13 - problems right um
59:16 - that's always the best solution
59:18 - and uh michael cruz says except duct
59:20 - tape duct tape is always useful in any
59:22 - circumstance so duct tape is quite
59:24 - useful for many different things
59:30 - john hanson says duct tape works on
59:31 - everything is there a new dev platform
59:34 - duct tape js
59:35 - that's a good idea somebody better grab
59:38 - that domain
59:39 - ducttape.io or something
59:43 - put up like a placeholder npm package
59:46 - called duct tape
59:53 - uh
59:54 - mammy uh let me know if i'm pronouncing
59:56 - that wrong but ma'am he says uh hello
59:59 - jesse i listen
60:00 - because i see now i will not get good at
60:03 - this i have to see it even with the
60:06 - desktop too small for me and it saddens
60:08 - me because i want to uh legally blind oh
60:11 - no
60:12 - um
60:18 - hmm
60:19 - i'm not sure what i can do
60:21 - um
60:22 - do you think if i made the font even
60:24 - bigger it would help or does it not
60:27 - really matter what the the font size is
60:29 - uh i mean i could probably make it a
60:31 - little bit bigger than i have it right
60:33 - now
60:34 - it needs i mean there's definitely an
60:35 - upper limit to where we wouldn't be able
60:37 - to see enough on the screen to really
60:39 - understand anything but let me know i
60:41 - can definitely try to make it larger for
60:43 - you
60:51 - now bomb she says all right enough
60:52 - talking get to work
60:54 - i'm gonna get through all the questions
61:08 - uh alex says hello from brazil i'm not
61:10 - sure i saw that earlier so hey alex
61:27 - uh kartik says how do i get ideas for a
61:29 - project in react i'm not creative uh if
61:32 - you just check out like app ideas or
61:36 - something like that like if you google
61:37 - that you'll see there are whole lists
61:39 - and of and websites dedicated to
61:42 - ideas for
61:44 - for web projects so check that out and
61:47 - you can just pick whatever one you uh
61:49 - you like
61:56 - he says i did that footer it's just some
61:58 - flexbox
62:00 - the idea is you set display flex on your
62:03 - container and a min height of 100 vh
62:07 - then declare flex 1 on the main item
62:10 - oh okay cool so
62:12 - evidently nikki said to set this up for
62:14 - the footer for this site thank you nikki
62:16 - i
62:17 - that was probably one of the first
62:19 - things that we did so that was so long
62:21 - ago i i've forgotten about that but
62:23 - thanks for that and thanks for
62:24 - explaining how you did it
62:28 - um
62:30 - gnas
62:32 - nas i don't know if the g is supposed to
62:34 - be silent on that but his g-n-a-s says
62:36 - can you compare css animation versus
62:38 - javascript animation
62:40 - uh yeah from what i understand which
62:42 - maybe is limited
62:44 - uh if you can do animation css
62:47 - performance wise it's almost always
62:49 - better to do it in css versus javascript
62:52 - okay but javascript is going to allow
62:54 - you to do more
62:56 - than you can do with css right although
62:59 - there's a lot you can do
63:01 - with css right you'd be surprised at how
63:04 - much how much is possible with your css
63:06 - so
63:07 - uh but it as a general rule if you can
63:10 - do something with pure css and it's it's
63:12 - not going to be like ridiculously
63:13 - complicated and it will be supported in
63:16 - the browsers that you need to support
63:18 - then you want to try to do it with css
63:21 - otherwise i mean there's nothing wrong
63:22 - with doing it with javascript a ton of
63:24 - websites use javascript for animation
63:26 - but you might get a slight you know
63:28 - performance increase if you can do it
63:29 - with css
63:32 - uh alexis says do you use css modules
63:35 - and react components are they useful
63:38 - um in general
63:40 - basically the way you see us using css
63:43 - here is pretty much the way that we we
63:45 - always do it so
63:46 - we do some inline css we do css and in
63:50 - javascript as those objects and then we
63:52 - also have just regular css files
63:55 - that we we pull in uh just by you know
63:58 - putting it in that the head of our
64:01 - page components
64:06 - sorry sorry for the yawn
64:09 - i've been trying to hold him back
64:12 - so anyway that's what we do with css i
64:14 - haven't really messed with very much of
64:16 - anything else i have tried styled
64:17 - components
64:18 - um
64:19 - i don't really have experience using css
64:21 - modules though
64:24 - uh as as a it's easy not sure how to
64:28 - pronounce that let me know and i'll try
64:30 - to pronounce it correctly next time says
64:32 - hi from nigeria how's it going thanks
64:35 - for watching
64:41 - let's see
64:44 - all right so nikki uh posted a
64:48 - a link uh a github link to a sticky
64:52 - footer uh demo and it was held for
64:55 - review i just saw it and approved it now
64:57 - so if you scroll back up
65:00 - it's not too far from the bottom but
65:02 - you'll see nikki's link so that might
65:04 - help anybody who's looking to do a
65:06 - sticky footer with flexbox
65:41 - uh javascript is here hey javascript
65:43 - how's it going javascript jacks did you
65:45 - asks did you see the updates to
65:48 - javascript.af
65:50 - i have not i haven't seen in a while
65:53 - so
65:53 - um in case you
65:57 - wondering what that is i own the domain
65:59 - name javascript.af
66:01 - and uh some of the live stream viewers
66:05 - have been working on it on the side so
66:07 - um
66:09 - in particular harshit and nikki and
66:12 - javascripter have been working on it so
66:15 - [Music]
66:16 - i will let you know more once it's ready
66:19 - uh but it's basically gonna be a place
66:21 - where you can check out
66:23 - news about the coolest things that are
66:25 - happening in javascript and you'll be
66:26 - able to check out repos
66:28 - uh and potentially some other stuff we
66:31 - have some more ideas for it but anyway
66:33 - that's
66:34 - that's what javascript af is
66:38 - uh miami says
66:40 - uh so if you remember we were talking
66:41 - about font sizes uh for uh mammy and
66:45 - says uh it probably
66:47 - okay so a larger font probably wouldn't
66:51 - um what i'm pursuing pursuing is to keep
66:55 - learning
66:56 - um
66:57 - it says i'm i'm retired i will keep
66:59 - trying though
67:00 - uh
67:01 - i could finally get good with practice
67:03 - okay yeah
67:05 - um just yummy let me know if there's
67:07 - anything i could do you know to help and
67:09 - i definitely you could definitely get
67:10 - good with practice you know it's
67:13 - it's just a matter of putting in that
67:14 - time you know
67:18 - uh as a says do you see yourself using
67:20 - php ever we i do use some thp uh when i
67:24 - have to do wordpress plugins
67:26 - and i've done like some basic file
67:28 - uploaders with php before
67:30 - uh but
67:32 - mainly i want to stick with javascript
67:34 - uh so it php is not something i want to
67:37 - pursue further i'm comfortable with what
67:40 - i know about it right now um and i'm not
67:43 - i'm not really interested in learning
67:44 - that much more about it
67:47 - you know not that i don't have anything
67:48 - against php but that's just not the
67:50 - direction i want you know my
67:52 - my learning to go in right now
68:03 - oh okay michael
68:05 - michael reminded me that so when i say
68:07 - nikki
68:09 - nikki is rook in the chat so
68:12 - they're the same person so
68:15 - that may have been confusing
68:21 - cardig says how do you remember what
68:22 - syntax to use when coding up a project
68:24 - in javascript considering javascript is
68:26 - confusing language for many people
68:29 - um
68:30 - it's it's just practice right so
68:32 - uh i think any language is confusing at
68:35 - first
68:36 - some maybe more than others but
68:39 - if you use it all the time and you
68:40 - practice
68:42 - you're you're gonna remember things uh
68:44 - so
68:46 - i i think that's really all it is it's
68:48 - just
68:48 - you know you have the practice it's
68:50 - gonna be less confusing you'll remember
68:52 - more you'll have to look up less and
68:54 - when you do look things up you'll be
68:56 - able to find the answer a lot faster
68:58 - because you you'll know how to structure
69:00 - the questions you'll know exactly like
69:02 - you'll have a better idea where to look
69:04 - for an answer
69:07 - and you can only get that through using
69:09 - the language practice you know
69:29 - okay all right i've got to the the end
69:31 - of the chat and i'm gonna wrap things up
69:33 - here i'm gonna leave the office soon
69:36 - uh so thank you all so much for watching
69:39 - and
69:39 - [Music]
69:41 - i don't know i don't know if i'll be
69:42 - able to stream tomorrow night so i may
69:44 - see you all next week probably on monday
69:46 - uh so either way i hope you have a great
69:48 - day and and a great weekend uh thanks
69:51 - again for watching
69:52 - and uh
69:54 - i'll see you next time

Cleaned transcript:

hey everybody welcome to live coding with jesse i'm jesse and today we're going to work with react i wasn't exactly sure what we'll be working on so i left the title nice and vague and just said react coding so we're probably going to finish up or at least try to do a little bit more with that form that we were working with yesterday i uh i thought i might be able to get it finished before the stream but i wasn't really able to do that much so i had kind of a long meeting this morning and um but it was a good meeting though it started out with food so we had breakfast which was really nice and then um then we had like our normal meeting afterwards which took longer longer than normal but i still wanted to get a stream in so today's stream might be a little bit shorter than normal uh we'll see how it goes so we may only end up doing one pomodoro session of code so for everyone who's new uh this live stream is just me doing my everyday work i'm a fulltime frontend developer i work for a small university uh so this is not rehearsed at all i will make mistakes i think maybe one time i did a stream where i everything worked out well so but um i'll make mistakes we'll work through them i'll answer your questions and i'll try to narrate what i'm doing as we go along i break things up with pomodoro sessions so we'll do 25 minutes of just mostly coding and i'll i'll won't really look at the live chat too much and then i'll take a five minute break and i'll answer your questions in the chat and then at the end of the stream if there are any questions remaining i'll take as much time as i need to get through all the other questions so uh like i said for today maybe we'll just do one pomodoro session and the rest will be questions so i did get into work really early like way earlier than normal this morning so i'm going to be leaving earlier than normal so i don't want to do want to take too long with the stream and all right so let's get started i'm going to check the the chat first before we uh start our timer and do some code so hey a few people saying hi how's it going thanks for joining us um anna um is thr through the emoji that she's put on there is it thinks it's funny that i i put the description as i'm not sure exactly what we're going to work on today but i'm pretty sure it will have something to do with react.js yeah i mean that's that's the best i could come up with for the description because i i really didn't know how far i would get uh with what i was working on and um and noob says i have a static website in react which has clientside uh rendered which is clientside rendered i would like to know how i can convert it to serverside rendered website um if it were me personally i would just start up i would build a react project with next js and i would literally just copy and paste the components over then you're gonna get serverside rendering already built in the only thing that might be weird is like if you wanted to then use the routing from nexjs you might have to change some things that's what i would do there may be an easier way to do that but i don't know about it you know offhand so if i had a little bit more time i personally would probably research it first but if i needed to get it server side rendered as fast as possible i would go the next js route because i already know how to do that let's see we have a hive from guadalajara mexico awesome welcome um if i jesse you really like your videos because you're showing uh a normal um expert web developer would you recommend me to be a react developer in 2019 thanks oh yeah for sure i think there's a lot of jobs in react it's a lot of fun to develop with so if you're interested in react and you think you'll enjoy working with it then for sure go for it i see react jobs being posted like constantly i was just at react rally last week and there were a lot of companies there that were looking for react developers uh even like big companies were there like apple was there american express was there and then some smaller companies uh like formidable labs um that slip in my mind there was this other company that had this really cool like editor website editor product that was all built with react and i can't starts with a w man it's slipping my mind but anyway you know i believe every single like company that had a booth at react rally was hiring and wanted react developers specifically so in any case i think it's it's definitely um a good way to go i mean react is still young right it's it's only been out for i mean what like four years or something like that and you know during the first year everybody thought it it was crazy anyway so i mean it's it's still growing let's see we have hi from india uh all right cool i'm gonna get started so i've been spent about six minutes on the uh intro stuff so um let's get started if anybody wants to follow along with the code there's a link to the uh the github repo in the description and we are on the salesforce branch so make sure you switch it up from master brands to salesforce uh otherwise the code is going to look different for what we're working on today we'll be working on the component called inquiry.js let me switch my screen so you can see and i'm gonna make my font a lot bigger and so you can see here in the components folder or an inquiry and i have updated the github repo with the latest code i will say this the latest code has some errors in it but i just wanted to make sure it was all there on github so i i pushed it anyway but let me catch you up on what i've done and then explain what we're gonna do and we'll uh we'll do some code let me start my pomodoro timer so basically uh what i've added is a dialog uh component this is from material ui so we need to bring in a dialog and this will be basically like a little modal that pops up when you submit the form so i'm still not sure if i want to go with a modal or just some type of small loading indicator the reason that i thought of going with the modal is because well two reasons number one i already had the code for that ready from another project so it was easy to copy and paste it but also the number two reason is i may want to give the user more information and i think a modal would easily let me do that maybe prompt them to even do do more so i'm not exactly sure how i want to do that yet so for now that's what's going to be in there what would happen is the modal would open it would say that it's still sending the data and then when we get confirmation that the data has been sent successfully then it'll switch over and say success or something like that and then prompt the user to either like just close the modal or potentially i don't know take the next step give us some more info i'm not exactly sure yet it's going to be somewhat up to our admissions department here because they're the ones that need that data and are going to be acting on that okay um oh ocean asks for the dev site uh link yeah let's i wonder there we go let's start up and grog so ngrok will allow you all to see what i'm working on on your local machines so if you click that link or copy and paste that link you should be able to see the site and the stuff that we're doing will show up on the home page so you shouldn't have to navigate anywhere of course you can if you want to and check out you know other pages on the site and let me pull it over on the screen too and that way for those of you who uh who can't be at a computer right now looking at it you'll still be able to see what we're we're working on so i have it all on the other screen right now and i'm just gonna move it over here and show you what we have so here's what we have the um the form that we're working on is right here it looks really bad right now so we're going to work on the look of it a little bit but these are the these are the fields that we'll have so these are not likely to change we'll just have these four fields first name last name email and student type and you could pick undergrad graduate and online and then we have a submit button that right now i don't know what's up with that so we'll have to uh fix the styling on that also like the i don't know why this is all the way over here it's something to do with the container i guess so we definitely have some styling work that needs to be done and uh that might actually be a good thing to do like let's just style this a little bit better because even if i can't get it to work if i have it styled correctly by the time i have to present this it'll be fine right because if i'm presenting it nobody's going to actually be clicking anything right i'm just going to be scrolling down telling everybody what it does so it makes more sense to just kind of make it look good now and then we can make it work after so let's work on that so we have let me show you what how we're doing styling so we have this object it's actually um basically like css but you'll see there are some differences so we go with camel case instead of hyphenated terms here so you know font size is capital s right no hyphen and then anything that's a string needs to go in quotes numbers can just be numbers right but it's in the format of a javascript object okay so that's what we'll be using mostly for our styles here so first things first uh let's get that container into shape so our stuff's not like super spread out so i like the container size that we already have here right so we have some space on the side so let's just try to match that for now and then we can go from there and see see how it looks i'm actually gonna i'm gonna turn on my fan here and just keep it on low if it's too noisy let me know but i don't know if you can see like i'm super hot and i feel like my forehead is just super shiny because i'm starting to sweat so apologies for that it probably looks gross but uh it just got really hot in my office okay if you're just coming in you're wondering why i'm not looking at your question in chat i will look at your question as soon as this pomodoro timer is up so in about 20 minutes so just hang in there a little bit and i will be sure to look at your comment and answer any questions that you might have so we have this grid container let's see where that ends yeah you know what actually let's see where this is we need to go back to our index page right because that's where all the other containers are so this inquiry.js is its own component and we're just putting it into the index page here right here under inquiry and on the index page i think what we have is that our our main grid is not what's giving us our padding on the sides it's these grid items each have their own padding so i'm going to verify that in our our css object which let's move that down so we're currently moving all of our css to the bottom of our components that makes it a bit easier to figure out what a component does when you first open it so we're going to look at those grid as content we have a content container actually our content container should be regulating let's double check what class we have on here yeah our grid container does have the class of content container and our our inquiry is within that container so we're gonna have to dig a little bit deeper to figure out why this inquiry component is not fitting in there uh so let's see first off let's see what kind of styles we have here and we grabbed some of these styles let's get rid of because they were from when we we used a different component as our base and then we just kind of edited it so those styles were from a different component um yeah so we don't have any styles in here right now that i think would would really mess anything up i don't even think we're using this form control let's see if it's on the page i guess we are no okay we are using a form control somewhere okay uh so let's go back to let's go back to this and let's just inspect it see what's going on uh i will make this bigger so y'all can see and let's see what section so we're dealing with this section here okay so we'll just do a quick comparison here uh so we have this grid container and it's saying we have a width of 100 let's compare it to this grid container which also has a width of 100 percent but then it has a max width of 70. interesting great item you know what i think is going on let's look back at our index component i thought let's close this off interesting okay so i thought that this grid container was not closed but evidently it is closed and it closes here okay um that makes more sense now let's let's put another great container here i'm not sure if this is the best way to handle this but i i'm gonna try it first the thing i'm thinking is maybe we could just extend it and put this inquiry inside our existing grid container and we could probably do put this in there as well or potentially we could add the styles for the grid container on the container that's in our other component which i wouldn't like to do because that would make it a bit less versatile um and then the other thing i'm worried about is we're going to have a container grid container within a grid container i'm not sure how how that's going to work but we'll find out so for now it looks like it's okay it is within that yeah so it's staying within there in terms of the layout let's see what it looks like so we have this outer container and then we have a inner container and then we have another one so i guess it doesn't really matter uh it's just kind of like an extra unnecessary div which is not a huge deal so i think we'll go with it for now so that gives us a little bit of padding hey look our submit button now actually says submit that's cool i don't know what the deal was before but uh i probably end up styling that differently maybe to look more like like this button does but for now it you know we we get the idea that there's a submit button um it would actually might be nice if y'all let me know what you think about this so when the screen's small this doesn't look too bad but when it starts to get big this is just a huge gap between like all these fields so i'm thinking we need to do something about that uh so either we could go with the fields being like all on one line on a large screen and then starting to stack as the screens get smaller or we could set a like a fixed max width um so that we get the width we like and it'll never go bigger than that let's try both let's let's see though so let me know what you all think in the chat and then i'm just going to try both right here so you can see them and i'll be able to see them and see what i like so first first thing and uh it'll be really easy is let's just add in everywhere that we have this uh sm equals six we're going to switch that up and we'll leave it for for the small screens there's six but now we're going to say md for medium size equals um so we actually have five of these i think because if we count the submit button it's it's five so we could go with this is gonna be weird um yeah let's go with uh three let's have a take up three columns for now that is gonna leave that fifth one kind of like on the end there like down below but you can't really divide 12 by five evenly so we'll just try this first okay so now when there's a large screen it does go across i'm gonna submit button below i don't know i'm not sure that i i really love that either hmm at it just for a second let you all have a chance to look at it okay i think it potentially would look a lot better if we had it like inside um a section like this that had a dark background i'm not going to try it out right now though we could try it out maybe in a minute because i then i'd have to change the font color and everything so we're just going to imagine it for right now eventually i do want to do it though because i'd like to put the same these same fields in the footer and obviously i'd need to change the font color for that alright so the next thing i'm going to try is we'll switch it back to how it was and then we'll we'll just have a max width uh i get to the end of my playlist need to switch this up okay we're good now can't possibly code without spotify on right okay so we'll just undo all that and now let's put try to see if we already had styles on here but i guess we don't do we have styles on anything yeah we do just trying to copy and paste and avoid typing as much as possible so on our grid container let's add this and we'll just say container and then let's go down here and add a class for container and we'll say max with let's give it a max width of 300 pixels and that'll actually work no matter what even on mobile because as far as i know the narrowest mobile device still has 320 pixels so uh this should be good i've seen a lot of stuff down here what is happening oops forgot a comma so remember this is uh the same syntax as a javascript object because in fact it is a javascript object so we do need to have these commas in here so that should work yep that works now oh all right so first problem with that is that we have overlapping fields all right so it's not going to work being that small uh so let's go in here and see remember we're just trying to get a feel for what it looks like so what i'm gonna do now is just change things in dev tools just so we can see it without the overlapping fields so here's the container that we put that max width on let's bump it up to 600 pix yeah 600 looks way better and let's also give this a flex maps flex let's go with the flex um align items no that's not what i want uh justify content there we go so since we're using flexbox we can say justify content center on this containing div and this will move everything to the middle i just kind of wanted to see what it would look like in the middle i don't like that this is on on the side here um all right let me do a little bit with this just to see what it'll look like oops here we go so let's move this down all right so our container we're going to bump to a 600 600 pixels and then within that let's go justify content cfy content oops forget that comma again so we have justify content we're going to say center and then we're also going we're going to go up here and find that submit i'm going to find that submit button and we're going to switch this so that it takes up the full um amount of space and then i don't really want that to be centered either so uh well let me wait a second on that so i want to see what it looks like first so let's go back here to this containing div so verify that now it is taking up the full width right which is what we wanted uh and we could say let's let's say a line self and see what we can get here whoops is that the wrong one i wonder why it's doing that oh i know what um and so here's the problem is there an equivalent in flexbox to um a lion's self but let me justify i guess i can go with this div and let's let's just say um justify content i'm going to end that's weird yeah we should be able to we should be able to do this hmm uh what am i doing wrong all right about two more minutes till i go to the chat and answer questions so i'm messing something up here content in uh john hanson saying put the submit button in its own flex div what's the thing i thought it already was guess not reflexive reflex all right all right let's try that this will be the last thing that we do oops div styles let's go with display flex oops flex and then oops i'm gonna say justify content and what's up with this what's my problem here what's going on oops oops shouldn't have even say all right let's see what that did nothing hmm i'm gonna refresh to make sure we're clearing anything that might still be in here all right um oh michael cruz saying use flex end yeah maybe that's my problem yeah flex in it was that the whole time all right cool and then now i've lost my formatting for this for whatever reason this is not working now all right uh i mainly just wanted to see if this submit button would look better over here now that i see it i'm not so sure but my timer is up so i'm gonna put on this five minute timer just to see um if maybe we want to do another pomodoro session but for now i'm thinking maybe not we'll see how it goes in any case i do uh still want your opinion on what to do with with this form in terms of style so the only constraints basically are we need those fields and a submit button and it has to be like material design looking okay so other than that you know we do whatever we want with it uh so if you have ideas please let me know uh kyotik says react versus node versus angular so i would say node shouldn't be included in there because node can and usually is used with both react and angular so node is back end react versus angular i i mean it's really a matter of preference uh they're not exactly the same like comparable you know one to one they do some different things but i mean the only thing that i'll say in terms of difference is react is growing at a faster rate than angular in terms of like usage right but angular is still used so i haven't used any of the newer versions of angular so i really can't say much more about it uh john hanson also said oh okay so there was a question earlier about server side rendering with react john hanson recommends uh gatsby js so i had mentioned next js that's what we're using for this project but uh john says check out gatsby so yeah i haven't used gatsby on a project but i was pretty impressed with it when we we checked it out as a potential solution for this particular project uh lar lar says uh how to build a c plus website i have no idea i've never attempted to build a website in c plus in general though if you're going to build a website you're going to use html and css i mean html at the very least minimum right css if you want it to look nice if you wanted to do anything you're going to need javascript your any other language you're using is going to be backend so you can use whatever you want for the back end but you definitely need to know html css and javascript if you're going to do anything with the web carticas that says no air conditioner in your room yeah i mean there is air conditioning in this building it's just my room gets really warm i think it's because of all my my screens generate like heat so other rooms like other offices in my building are they're generally pretty cool but i just have a heat source in mine uh boo man says what do you think about redux is it needed for a small project no i generally i think redux is not necessary for a small project you usually the point at which i start considering redux is if i find myself passing props down like through a number of of children or like back up to the number of like parent and grandparent elements uh so if i need to pass things like three levels down or more i'm then i'm going to consider redux or something like redux otherwise just manage state the way react was was intended right just with local like component state um i think you'd be fine like that and you're gonna because like redux just adds all this extra complexity and it it will slow you down for a small project if you don't really need it if you have a large project redux will eventually save you time but there's a point at which it would actually save you time so if you haven't reached that point in terms of project complexity it's it's less efficient to use redux so hopefully that makes sense let me know if it doesn't okay my five minute timer is up but i'm just going to keep going with some questions right now okay michael krill says the form control is wrapping the select okay so that's probably why the select is not taking up this full space because it's inside of another container all right cool i'm glad you noticed that um anku says which language uh we're using javascript and michael cruz says i thought you said it was gonna end up being a modal the form itself won't be a modal but once you submit the form a modal will pop up john hanson says we can easily nest grid containers since they're uh flexbox um nested true css grids have a few gotchas okay cool so we should be fine nesting it i mean it looks a bit messy but you know not that many people are gonna be inspecting our code man my eyes look super red right now i don't know why i've been so tired i just can't recover from my my trip i i didn't get that much sleep like last week and i'm i'm still like exhausted all the time maybe i'm starting to get sick actually that kind of makes sense maybe it's like the early early stages of me getting sick i hope not but it's definitely possible uh williams says what program are you discussing uh javascript in particular react all right michael crow says you set a width on the items against uh the viewport set an absolute value for the container okay that must have been before we we did that so i think we that's in fact what we ended up doing uh williams says how can i become a developer i know the basics of programming which i studied uh in engineering um if you're very new to being a web developer check out freecodecamp.org and start to go through some of the lessons there they are very helpful and it will take you through a lot of the basics all the way into some more advanced stuff as you go on and that should give you a good idea of you know what you need to know and whether or not you even like working with uh with that kind of thing uh lenovo as how was your trip to new york city it was good so yeah let me i don't know if i said anything about my trip yet that or at least explain that much about it so last week i actually took two trips first i went to react rally in salt lake city and then i flew to new york in particular i was in williamsburg brooklyn brooklyn is a section of new york city and there was a free code camp top contributors party so uh i was was honored uh to be one of the top contributors for 2018. so went there it was really cool it was awesome to meet a lot of these people that i had contact with online and i'd never met in person so that was really cool and there are a lot of people that were doing things that i didn't even realize that they were working with free code camp and after getting to meet him and learning about what they were doing you know i was wow this is awesome you know i i know your work even though i didn't know you um yeah so i mean some of the people i met you know uh moderated the forum and some of them were editors for the medium publication or uh worked with a podcast or worked on like the actual code for free code cam so it was cool it was really cool it was a lot of fun so we just kind of hung out ate food and stuff and and the whole thing was live streamed so you can check that out the the videos available uh on this youtube channel so it was a good cool experience and then i just the rest of the time i that i was there i i just decided to walk around new york and see what it was like so i took like during the day i i walked all around brooklyn and and just checked out as much as i could i walked around until my phone died and then i charged it a bit and then that that night uh so this would be sunday night i went to manhattan and walked around manhattan for hours and hours until my phone was about to die um so that was cool so i mean i stopped at a lot of places got you know food or coffee or something i had the best ramen i've ever eaten in my life uh in manhattan it was awesome that uh tonkatsustyle ramen was so good uh but anyway yeah it was cool it was cool to just get see what it's like brooklyn and manhattan are super different um yeah it's just so so different so it's kind of cool you know like you go to new york it's not it's not just all the same not all one city like each part is definitely distinct um its own like type of people stores like architecture it's it's cool it was really cool trip and salt lake city was a cool place too uh way different from new york but um but also cool uh cool place to be so uh if anybody wants to know more about my trip or anything specific feel free to ask me in the chat here or at some other time i'd be happy to talk more about it otherwise i don't want to bore you if you're not interested uh strata says the code is so blurry so if your code is blurry i'm guessing that it might be the connection so it should be i'm streaming in uh 1080p quality so in 1080p and i think two and 720 the code shouldn't be blurry but anything lower than that it's blurry so if you're not getting a good picture right now you can wait and watch the recording and you may be able to watch in full hd if you have a good network connection you know later on the other thing it could be if you're watching on a mobile device it's really hard to watch code on a mobile device so it doesn't really matter how big i make the code it's still going to look kind of small alexi says how to master css uh work just practice work with it a lot so you can watch videos and do courses on it which is great uh but no matter what you do just practice every day or as close as you can get to every day i think that's the key to getting good at really anything so that's that's my advice for css and for pretty much everything else just try to do at least a little bit every day cardig says angular has mvc so model view controller which is not in react is it important uh it it depends on what you want to do right if if your project lends itself better to that kind of architecture the model view controller um then then go with that like if not it so i mean it's really when we're talking about let's say like angular versus react versus vue or amber or jquery whatever else you want to compare it to right uh a lot of times we want to say like and i get these questions a lot like which one's the best like like there's a best like that's the answer right but it's not that clear cut it it usually comes down to what are you trying to accomplish like let's pick the tool right trying to asking which is the best between like angular or whatever you want to ask is kind of like asking what's the best tool right hammer versus screwdriver versus wrench which is the best it depends entirely on what you're trying to do right if you're trying to hammer a nail obviously the hammer is the best all right but if you try to take a screw and drive it into a piece of wood with a hammer it's not going to be nearly as effective as if you had a screwdriver if you have a bolt right like you're going to want to wrench so think of frameworks in encoding like that right it's not that there's one thing that's better in all cases it's what is your use case and what's going to be the best thing for you you want something that's going to do what you need it to do but not come with all this extra stuff that you don't need so that it's bloated right it may take you a lot more time to set something up that has lots of extra stuff that you don't need sometimes the best thing is just to pick the most simple solution that fits your use case even if that solution in terms of total features is way less feature filled than something else right you also want to think about like on your team of developers what do they already know right learning something new even if that new thing might be better is going to take a long time is it is that better thing going to add enough value to the project uh to to make sense and like all that extra time that you're gonna need to give your developers uh to learn it right it it doesn't always pay off right sometimes it makes more sense to go with the older thing or the thing that's not doesn't have as many features if your developers already know it if you need to get that thing out quickly right because you get the product out quickly and it works then you can move on to the next product right and make a lot more money assuming that you can fulfill all your clients requirements it doesn't have to be like i'm using the absolute latest cutting edge perfect thing it's do i fulfill the requirements of the projects right and that's what should be your focus should be so for me react makes sense for a lot of things one of the big reasons is i know react right it would take me a while to learn something new but there are some cases where even react is overkill and i might say okay for this project like i'm just gonna do straight up html css if i need some interactivity i'll do vanilla javascript maybe even jquery sometimes it needs to get loaded for something else on the page anyway and in that case i'm i would just use it right uh so that's where i think we need to look at that question sorry for like the the rant on that but you know i get i get that question often enough that i think is kind of worth explaining this um that it's you know these frameworks are not it's not competition right they often borrow ideas from each other and build off of each other and they are created to solve different problems uh so i think the tool analogy is is pretty good here right you just need to find the tool that is meant for your problem right and and not think that somehow there's one tool that's going to solve everything right and and sometimes it doesn't matter if you pick the wrong thing it'll still work right like if you pound hard enough you can get a screw into a board with a hammer but it's going to take a lot more effort and it's not going to fit us perfectly but it's possible right so you know don't be afraid of am i going to pick the wrong framework just get started start working if it's really the wrong thing for you it'll you'll notice and hopefully you'll have time to switch but even if you don't you could probably still make it work uh let's see i lost my place it scrolled me down automatically uh david as his react is still an ondemand javascript library yes definitely i think i mentioned earlier i see a ton of uh jobs that are asking for react experience so um yeah so you're good if if you no react if you're gonna learn react there are jobs out there stephen says any plans for using graphql yeah we are using graphql on this project so we didn't work with it today but uh we will work with it again in the future and we have worked with it on on past streams uh schrada says how do i get this code from the start stage um i guess you'd have to look back at um some of the like the earliest commits and then view the repo at that point and uh the the link to the repos in the description somebody says don't die i would try not to die uh i guess because i mentioned i think i was getting sick earlier uh strata said is the session over sir um the coding portion is over i don't think i'm gonna do any more coding today because i'm actually going to leave the office really soon but i'm still going to do questions uh aj asks any tips uh for making a sticky footer uh any way to point me in the direction to the one you use on your current site um so a sticky footer you mean like all right so i'm not exactly sure what you mean by that do you mean that you would always be able to see the footer and it would always be visible as you scroll or or do you mean that the footer would always be at the bottom even if you were on a page that didn't have enough content to push it to the bottom so i guess if you wanted the footer to always be visible then i guess you're going to want to set it to something like uh absolute position right or i'm sorry a fixed position right and uh you're going to want to set a fixed position right like 100 oh actually michael michael creel has the answer here so um so just check out what he wrote i'll explain it for those of you who maybe can't see the live chat right now basically you would um set it at position fixed and then you would do for the value it would be you would say top right for the positioning and then you'd use calc so calc lets you do math inside of css so you would want to say 100 vh that's viewport height so that would position it with the top corner down here so you wouldn't actually be able to see it but then you would do calc minus the height of your footer right so whatever that might be and that would bump it up by the height of your footer so then the footer would always be there always visible as you scroll down right so that's that's how you would do that if that's what you mean by sticky otherwise if you just always wanted it to be at the bottom even if you didn't have enough content to push it to the bottom you would want to put your content in one container right maybe call it main or something and then make the minimum height of that container be 100 vh minus the height of the footer and then potentially if you might want to take into account the height of the header as well depending on what you have the header set at uh modina says hello from bangladesh hey how's it going thanks for uh for joining us um let's see louie or luis how do you pronounce that in france anyway says hi from france how's it going um thanks for joining us michael says it must have been nice when you introduced yourself on the stream hi i'm jesse and most of them got the reference so yeah on the if you watch the free code camp top contributor party live stream when they got around to me which was kind of when they were doing introductions i was almost the last one i got on the mic and said hey you know everyone it's jesse from live coding with jesse which is pretty close to what i say at the beginning of every stream and uh a lot of people did laugh they they got the reference so it was it was fun uh vamshi says do you use sass with jsx you can use sas with with react it's possible we're not in this particular project but we have in past projects uh if you're talking about actually having sass like in your jsx code i've never seen that happen it's usually in a separate file michael cruz says except so uh this is earlier i said there's not really one javascript library framework that solves all your problems right um that's always the best solution and uh michael cruz says except duct tape duct tape is always useful in any circumstance so duct tape is quite useful for many different things john hanson says duct tape works on everything is there a new dev platform duct tape js that's a good idea somebody better grab that domain ducttape.io or something put up like a placeholder npm package called duct tape uh mammy uh let me know if i'm pronouncing that wrong but ma'am he says uh hello jesse i listen because i see now i will not get good at this i have to see it even with the desktop too small for me and it saddens me because i want to uh legally blind oh no um hmm i'm not sure what i can do um do you think if i made the font even bigger it would help or does it not really matter what the the font size is uh i mean i could probably make it a little bit bigger than i have it right now it needs i mean there's definitely an upper limit to where we wouldn't be able to see enough on the screen to really understand anything but let me know i can definitely try to make it larger for you now bomb she says all right enough talking get to work i'm gonna get through all the questions uh alex says hello from brazil i'm not sure i saw that earlier so hey alex uh kartik says how do i get ideas for a project in react i'm not creative uh if you just check out like app ideas or something like that like if you google that you'll see there are whole lists and of and websites dedicated to ideas for for web projects so check that out and you can just pick whatever one you uh you like he says i did that footer it's just some flexbox the idea is you set display flex on your container and a min height of 100 vh then declare flex 1 on the main item oh okay cool so evidently nikki said to set this up for the footer for this site thank you nikki i that was probably one of the first things that we did so that was so long ago i i've forgotten about that but thanks for that and thanks for explaining how you did it um gnas nas i don't know if the g is supposed to be silent on that but his gnas says can you compare css animation versus javascript animation uh yeah from what i understand which maybe is limited uh if you can do animation css performance wise it's almost always better to do it in css versus javascript okay but javascript is going to allow you to do more than you can do with css right although there's a lot you can do with css right you'd be surprised at how much how much is possible with your css so uh but it as a general rule if you can do something with pure css and it's it's not going to be like ridiculously complicated and it will be supported in the browsers that you need to support then you want to try to do it with css otherwise i mean there's nothing wrong with doing it with javascript a ton of websites use javascript for animation but you might get a slight you know performance increase if you can do it with css uh alexis says do you use css modules and react components are they useful um in general basically the way you see us using css here is pretty much the way that we we always do it so we do some inline css we do css and in javascript as those objects and then we also have just regular css files that we we pull in uh just by you know putting it in that the head of our page components sorry sorry for the yawn i've been trying to hold him back so anyway that's what we do with css i haven't really messed with very much of anything else i have tried styled components um i don't really have experience using css modules though uh as as a it's easy not sure how to pronounce that let me know and i'll try to pronounce it correctly next time says hi from nigeria how's it going thanks for watching let's see all right so nikki uh posted a a link uh a github link to a sticky footer uh demo and it was held for review i just saw it and approved it now so if you scroll back up it's not too far from the bottom but you'll see nikki's link so that might help anybody who's looking to do a sticky footer with flexbox uh javascript is here hey javascript how's it going javascript jacks did you asks did you see the updates to javascript.af i have not i haven't seen in a while so um in case you wondering what that is i own the domain name javascript.af and uh some of the live stream viewers have been working on it on the side so um in particular harshit and nikki and javascripter have been working on it so i will let you know more once it's ready uh but it's basically gonna be a place where you can check out news about the coolest things that are happening in javascript and you'll be able to check out repos uh and potentially some other stuff we have some more ideas for it but anyway that's that's what javascript af is uh miami says uh so if you remember we were talking about font sizes uh for uh mammy and says uh it probably okay so a larger font probably wouldn't um what i'm pursuing pursuing is to keep learning um it says i'm i'm retired i will keep trying though uh i could finally get good with practice okay yeah um just yummy let me know if there's anything i could do you know to help and i definitely you could definitely get good with practice you know it's it's just a matter of putting in that time you know uh as a says do you see yourself using php ever we i do use some thp uh when i have to do wordpress plugins and i've done like some basic file uploaders with php before uh but mainly i want to stick with javascript uh so it php is not something i want to pursue further i'm comfortable with what i know about it right now um and i'm not i'm not really interested in learning that much more about it you know not that i don't have anything against php but that's just not the direction i want you know my my learning to go in right now oh okay michael michael reminded me that so when i say nikki nikki is rook in the chat so they're the same person so that may have been confusing cardig says how do you remember what syntax to use when coding up a project in javascript considering javascript is confusing language for many people um it's it's just practice right so uh i think any language is confusing at first some maybe more than others but if you use it all the time and you practice you're you're gonna remember things uh so i i think that's really all it is it's just you know you have the practice it's gonna be less confusing you'll remember more you'll have to look up less and when you do look things up you'll be able to find the answer a lot faster because you you'll know how to structure the questions you'll know exactly like you'll have a better idea where to look for an answer and you can only get that through using the language practice you know okay all right i've got to the the end of the chat and i'm gonna wrap things up here i'm gonna leave the office soon uh so thank you all so much for watching and i don't know i don't know if i'll be able to stream tomorrow night so i may see you all next week probably on monday uh so either way i hope you have a great day and and a great weekend uh thanks again for watching and uh i'll see you next time
