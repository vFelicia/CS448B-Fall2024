With timestamps:

00:05 - hey everybody and welcome to live coding
00:09 - with Jesse sorry I started a few minutes
00:12 - later than scheduled
00:14 - I forgot to open up OBS which is my
00:18 - streaming software and so I went to
00:21 - start the stream and realized I didn't
00:23 - even have it open so I had to open it
00:25 - and put in the youtube code and at the
00:27 - same time I was having a debate on slack
00:30 - about Star Wars with a co-worker so if
00:35 - anybody's a Star Wars fan you know how
00:37 - important that is so anyway I have we
00:43 - had a lot of news today so we've had a
00:45 - lot of pull requests I've set up what I
00:49 - think will be a helpful way to track our
00:53 - progress on this project and plan things
00:55 - out and then also I had a meeting this
00:59 - morning kind of a long meeting but the
01:01 - result was was pretty cool so I'm gonna
01:04 - share that with you because it's gonna
01:07 - be a big deal when it in terms of what
01:10 - we're gonna be working on on this dream
01:13 - you know really for the next year or
01:15 - more in developing so I don't think
01:19 - we'll be working on it every day for the
01:21 - next year or more but we're gonna it's
01:24 - going to be probably the most important
01:26 - project for at least the next year so
01:32 - let me let me get to it so I guess I'll
01:38 - just share with the project is first I
01:40 - don't want to keep you all in suspense
01:41 - and I'm pretty excited about it so I
01:44 - don't know exactly when we're gonna
01:46 - start on this but if you remember in
01:49 - projects was it - maybe project 3 so we
01:55 - were working on the main website so let
01:57 - me hear that and
02:03 - so you all remember that we were working
02:06 - well those of you who watch the stream
02:10 - out a few weeks or so ago we were
02:12 - working on this probably remember there
02:18 - we go
02:19 - I'll bring this up so you remember one
02:22 - how slow the main website is that took
02:24 - forever all right
02:26 - and how outdated it is really cluttered
02:29 - a lot of stuff going on here so this is
02:30 - the main website for the university that
02:32 - workout it gets by far more traffic than
02:35 - all our other websites combined so it's
02:40 - it's the most important site this is
02:43 - where most people see the online
02:47 - presence of University at this site and
02:49 - probably never see any of our other
02:51 - sites this is part of the the redesign
02:57 - that we are working on together they
02:59 - didn't get very far with it but
03:01 - definitely an improvement you know just
03:05 - in terms of the things we have they're
03:06 - already a big improvement for some
03:11 - reason that's interesting the side nav
03:14 - hasn't been working unless you hard
03:16 - refresh the page anyway not really the
03:19 - point so here's the point one of the
03:21 - issues that we had in making a little
03:23 - bit difficult to develop this site is
03:25 - that the backend for it is a content
03:28 - management system called Ektron that's
03:30 - based on asp.net and we don't have
03:35 - direct control or direct access to the
03:38 - database and I'm not that familiar with
03:42 - dotnet things so basically what I what's
03:49 - I'm pretty sure this is gonna happen I
03:52 - don't want to say a hundred percent sure
03:53 - because we've been talking about it for
03:55 - a long time so I'm still a little bit
03:57 - careful as to whether or not this is
03:58 - gonna happen but I think it will we're
04:04 - gonna do away with the Eckstrom system
04:06 - we're gonna rebuild it completely from
04:09 - the ground up back and front end
04:10 - database everything and as we've
04:14 - discussed in previous streams the
04:16 - is to tie this into probably a wordpress
04:22 - for the content manager WordPress
04:24 - back-end for content management system
04:26 - we're going to use graph QL to grab the
04:28 - data from wordpress like we're doing
04:30 - with this current project project 4 and
04:32 - then we're going to have multiple
04:38 - multiple droplets chris will probably be
04:41 - on this relation so multiple droplets
04:43 - running node that are low balanced to
04:47 - handle all the traffic and then the
04:49 - front end of it is going to be built
04:50 - with react and so it'll be very similar
04:55 - to what we're doing here for this site
04:56 - but on a much larger scale because the
04:58 - main website has i think it's over 3000
05:02 - pages the biggest challenges we're going
05:05 - to have though are getting all the
05:07 - content out of the current database and
05:09 - into a wordpress database in the format
05:12 - that it needs to be in for wordpress or
05:15 - if we decide to go with some other
05:17 - system you know we could do it but
05:19 - basically we need to get the data out
05:20 - we've talked about this before on the
05:22 - stream and i think we decided that the
05:24 - best way to go about this would be to
05:26 - make some sort of an api to get that
05:28 - data out so that needs to happen and
05:31 - whether that be we do that on the stream
05:34 - or try to figure it out or have to hire
05:37 - someone else to work on that because
05:39 - that's databases aren't really my my
05:41 - strong suit so obviously we have a long
05:44 - time to work on it so it's possible that
05:47 - i can learn enough to make that happen
05:48 - we'll see how it goes
05:50 - otherwise everything else is are things
05:53 - that we've already worked on another
05:54 - project so this will be just kind of
05:56 - combining everything on a much larger
06:00 - scale and doing a lot of testing there's
06:05 - gonna be a lot of different you know
06:06 - there's gonna be a lot of users so the I
06:10 - guess there's more pressure on this
06:12 - project more people were gonna see it
06:14 - it's going to be more obvious I guess if
06:16 - we mess something up so I guess there's
06:19 - pressure on me you all there's no
06:20 - pressure on you because it's all my
06:22 - responsibility but I'm excited I'm
06:26 - really excited
06:28 - like I said not sure when we're gonna
06:29 - start it but in terms of design you know
06:32 - we've already have some of the design
06:33 - finished I mean this this header is is
06:36 - nice I mean probably the link structure
06:39 - is going to change that's not really up
06:40 - to me I'll be in the meetings about that
06:43 - but it's not going to be entirely up to
06:45 - me what links are there but hey I just
06:51 - checked the live chat and my uncle is in
06:54 - the live chat hey Uncle fat also glad
06:58 - you could that you could watch okay so
07:01 - enough about that project
07:04 - you're definitely hearing more about it
07:06 - and in the upcoming weeks and so I'm
07:12 - excited so today we're gonna do two
07:16 - things the first thing I'm going to do
07:17 - is I'm going to show you how I've set up
07:20 - using a Kanban board and using github
07:23 - projects a layout so that we can all
07:26 - track this project together so that you
07:28 - know what still needs to be done and
07:29 - they're all going to be linked up to
07:31 - github issues so that it's easy for us
07:34 - to discuss them and to track them
07:37 - because until now you all just been kind
07:40 - of going by what we discussed in the
07:42 - live streams so I think this will be
07:44 - much more clear you know what we still
07:48 - have left to do it'll be nice to track
07:51 - everything and I think it's night I use
07:52 - this kind of thing for all my projects
07:54 - it it helps me organize everything so I
07:58 - know I've shown you a little bit of how
07:59 - I do this on Trello but I'm gonna try to
08:02 - do this within github and then that way
08:03 - there's not so many different places to
08:05 - go to keep track of the same project the
08:09 - second thing we're going to do is go
08:10 - over some pull requests because we've
08:11 - gotten a lot of pull requests over the
08:13 - last weekend and I didn't it was a long
08:16 - weekend for me so I wasn't in Monday or
08:19 - Tuesday so I didn't stream so I'm gonna
08:22 - save that for the second part of it so
08:25 - let me start my timer I'm gonna start
08:27 - this 25-minute Pomodoro timer and then
08:31 - that will reminding me that after 25
08:32 - minutes I need to take a break and
08:34 - answer some questions in the live chat
08:35 - this probably will end up being a
08:38 - shorter stream than normal because we're
08:39 - not going to do a lot of
08:41 - actual coding this is going to be more
08:42 - of like project planning and review code
08:45 - review so we'll see how much time it
08:51 - takes but I'm thinking maybe around an
08:53 - hour for the stream length so let me
08:55 - show you let me bring this over on this
09:00 - screen so you can see I'll bring this up
09:04 - you can see let's see I see there are
09:12 - some questions in the lab chat I will
09:13 - get to those on my first break so don't
09:16 - think I'm am ignoring them okay so
09:18 - here's what we have now on the project
09:20 - I'm gonna make this a bit bigger so you
09:22 - can see so this is our bulletin reactive
09:27 - current project that we were working on
09:29 - and I just went to the repository and
09:30 - then I clicked on this projects tab I
09:32 - just made you know one project called
09:35 - bulletin you can add a description of
09:37 - these if you want but this is the only
09:40 - one so I mean they make it a bit smaller
09:44 - just you can see kind of the big picture
09:46 - here so for a Kanban board
09:51 - this is the kind of an old way of a
09:55 - visual way to look at a project flow you
09:58 - don't even need to do this online you
09:59 - can do it with sticky notes on a wall or
10:02 - something basically all you need is
10:05 - three columns so you need you know your
10:07 - to-do column you're in progress and then
10:09 - your your done column I like to expand
10:13 - it out a little bit when I first learned
10:15 - how to do this this was the setup that I
10:18 - learned with and for me I like this
10:21 - because I usually try to put in there
10:24 - ready for development column everything
10:25 - that I think I can complete in one week
10:27 - and then it's nice to have a testing
10:30 - column not everything goes in there the
10:31 - testing column sometimes things are
10:33 - really minor changes that are so
10:35 - straightforward that you test as soon as
10:37 - you do it you see that it works doesn't
10:40 - really require a lot of testing and
10:42 - those usually can go right to the
10:43 - completed because you kind of do the
10:45 - testing step right there and then I also
10:48 - like to add this wish list and these are
10:50 - things that would be really awesome to
10:51 - add to a project but it's probably not
10:54 - going to happen
10:54 - for launch and not a project requirement
10:58 - so these are if you want to challenge
11:02 - these are probably where the most
11:04 - challenging things would be but probably
11:08 - the coolest things to work on as well so
11:10 - I've added some things I've added some
11:14 - things and you can see from setting this
11:18 - up earlier today just a few hours ago
11:20 - we've already had something moved from
11:22 - the to-do list to the completed list and
11:26 - so these when I when I add these in I
11:32 - just add them as a note and then you can
11:35 - click the drop down and you know it
11:38 - doesn't show it now because I already
11:39 - did it you can click the drop down and
11:40 - convert it to an issue and then it
11:42 - automatically goes into the issues then
11:44 - you can put more information and if you
11:46 - want code snippets or images you know
11:50 - whatever you want and there can be
11:52 - discussions so several of these issues
11:53 - have discussions back and forth with
11:56 - those of you who are you know
11:59 - contributing to the project so it's it's
12:03 - nice but I have done this with Trello
12:05 - before but it is really nice to be able
12:07 - to have it all in one place so I'm gonna
12:10 - try to make this work the only thing
12:12 - that I don't have with this that I had
12:13 - with Trello that I really liked was
12:15 - being able to track how long each one of
12:19 - these took using Pomodoro sessions so I
12:23 - was checking out some Chrome extensions
12:26 - that could maybe do that but I haven't
12:30 - found one that works exactly you know
12:32 - how it did with Trello so I'm thinking
12:36 - about I'm gonna keep looking for one if
12:38 - you know of anything like that then let
12:42 - me know otherwise I may attempt to
12:46 - create one myself I don't know when I'll
12:49 - have time to do that but it it would be
12:52 - cool to have something where you could
12:54 - attach time estimates to each one of
12:56 - these that would be that would be nice
13:01 - and then if it could also produce some
13:02 - sort of burn down chart automatically
13:06 - that would be that useful as well
13:11 - me that's actually pretty
13:15 - straightforward if anybody has questions
13:18 - about this put in a live chat I'm gonna
13:20 - keep looking over so that I can answer
13:23 - questions
13:25 - you see kinda think I'm missing
13:31 - something this seems to - easy - to
13:34 - explain
13:35 - I actually I think I think that's it con
13:43 - bonds really straightforward and it's
13:45 - simple which is why I like it so much
13:47 - you know you just you move the cards
13:50 - over okay cool so so Pat says JIRA does
14:00 - both estimates and multiple reports I
14:02 - was I was actually checking out JIRA
14:04 - before the stream started does anybody
14:06 - else use JIRA you know of that so JIRA
14:12 - seemed like it had the most features out
14:15 - of anything else I checked out in terms
14:17 - of tracking this and doing there's a lot
14:21 - of charts and reports there's so many
14:23 - cool things that could do so I might
14:27 - have to check into that more I didn't
14:29 - really have time to check into it before
14:31 - the stream as much as I think I needed
14:33 - to to do a stream on it but I'm assuming
14:36 - that there's also integrations with
14:39 - github I know there is you can link up
14:41 - Trello with github issues so I'm
14:45 - assuming you could do the same thing
14:46 - with JIRA or maybe use something like
14:48 - like zapier to link it up but that that
14:53 - seems like it would be pretty pretty
14:55 - powerful let's see okay world says this
14:59 - is more for agile type workflows yes
15:02 - so I've the Connie the context of agile
15:07 - was where I actually learned this I was
15:09 - taking a course on agile for for one so
15:14 - I was not working on a team it was more
15:17 - me working by myself but I wanted to
15:19 - incorporate as much of you
15:21 - agile project management as I could so
15:25 - that's where I learned this so anyway I
15:29 - think this will help so I may or may not
15:33 - stick with doing this and get up if I
15:36 - can find if I find that it doesn't have
15:39 - everything that I need or there's
15:41 - something better out there that I could
15:43 - work with that's great the only thing I
15:45 - would want is for you all to be able to
15:47 - have access to this to at least see it
15:49 - you don't necessarily need to be able to
15:51 - edit it I mean I could certainly take
15:54 - care of moving these cards over every
15:56 - time one of these issues is either you
16:00 - know it's solved
16:01 - so if we can find something like that
16:05 - I'm certainly open to it otherwise I'll
16:09 - maybe try to find a plug in all right so
16:16 - let me let me quickly go over one other
16:23 - thing with the Trello board before we
16:24 - actually get into some code so you'll
16:27 - notice I have some labels here if you're
16:29 - already familiar with how github issues
16:31 - work I'm sure you know what's going on
16:32 - with these labels but if you're not then
16:36 - I'm gonna try to label the issues as
16:39 - accurately as possible but the important
16:42 - labels for people who I guess are new is
16:49 - this good first issued label so if you
16:53 - don't have a lot of pull requests or
16:55 - you're looking for your first pull
16:56 - request for your github profile check
16:59 - these out I'm gonna try to put this tag
17:02 - on everything that is that I think will
17:06 - be easy for beginners so sometimes it
17:10 - may be something as simple as adding a
17:13 - little bit of documentation even
17:16 - potentially correcting a typo so I'm
17:22 - gonna make sure I do this I'm gonna
17:23 - purposely not complete some of the
17:26 - easier tasks and make them issues and
17:28 - then that way you know it can help you
17:30 - get that that first pull request I know
17:33 - it can be intimidating sometimes a lot
17:35 - of projects are really complex and not
17:38 - quite so easy to get into
17:41 - so this would be good for for some of
17:45 - the newer people and then also I'm gonna
17:47 - have some more some more complicated
17:50 - issues this I would say is a bit more
17:52 - complicated and let's see so I want to
17:57 - actually take a look at this especially
18:00 - if you're not familiar with without
18:01 - github works and we're just going to
18:03 - take a look at one of these issues the
18:05 - only other label I want to point out is
18:06 - this hack hack Tober fest issue if you
18:10 - search for hack Tober fest this is
18:12 - basically an opportunity for you to get
18:14 - a free t-shirt so if you sign up for
18:17 - this and link your github account and
18:18 - you you have four pool requests that get
18:23 - merged in the open source projects then
18:26 - you'll get a free t-shirt so check that
18:28 - out and I think it's all the way through
18:36 - October I forget what the end date is
18:37 - but it's kind of a cool a cool thing so
18:40 - that's why I added this label here just
18:42 - to let everybody know that this is you
18:45 - know this is open for issues let's see
18:47 - pad has a question says do you keep a
18:49 - backlog of items to complete right now I
18:55 - don't have a backlog well I should at
18:57 - least for this project I haven't set up
19:01 - anything I didn't I didn't even start to
19:05 - do anything on this project till a while
19:07 - an hour or two ago so I don't have
19:11 - anything yet for my some of the other
19:14 - projects that I had a more developed
19:16 - board for I did have quite a large
19:22 - backlog for some of them yeah I guess
19:25 - the to do you to do it works kind of
19:28 - like a backlog and the way I have this
19:30 - set up so I don't have a separate
19:34 - backlog so I saw with with JIRA there is
19:38 - a way to do have a separate backlog so
19:41 - basically this ends up
19:43 - the backlog my projects because it's
19:49 - usually just me working on them they're
19:51 - not really large-scale so it doesn't
19:55 - usually get too big it's pretty easy to
19:59 - handle but if you had a much larger
20:03 - project you might even want multiple
20:06 - multiple boards so I would I would say
20:12 - this setup does work well for me if it's
20:14 - for a small project a really small team
20:16 - but larger ones would probably need
20:18 - something more and actually so uncle Pat
20:24 - if we get a chance to talk I would
20:26 - really love to see how how you handle
20:31 - because I know you work on some some
20:33 - much larger projects I'd love to see how
20:35 - you handle the workflow because you know
20:41 - I just I'm just trying to figure this
20:44 - out on my own I've never had like a team
20:46 - or you know someone else to work with
20:49 - and learn from and how to do this so
20:51 - let's see if you all don't know I am so
20:56 - my uncle was here in the live stream and
20:58 - he is a software developer and has been
21:03 - for for a long time and I'm not gonna
21:06 - give like details about company or
21:08 - anything because I'm not sure if you
21:09 - want me to or not but works with I
21:12 - believe c-sharp and yeah so definitely
21:19 - has been a great help and to me and kind
21:26 - of my path to becoming a developer and
21:30 - so anyway I'm really excited that he's
21:33 - he's watching so oh okay I said I was
21:38 - gonna click this and then I get
21:39 - sidetracked all right so here's the
21:41 - issue right so if you go to look at a
21:44 - github repository you can check out you
21:47 - can get straight to the issues or if
21:49 - you're in the project view you can click
21:51 - on the issue and so
21:56 - this is basically what it isn't you can
21:59 - submit issues as well so it doesn't have
22:01 - to be me as the manager of this
22:03 - repository you can submit issues as you
22:06 - see them and you can even put in you
22:11 - know screenshots links whatever you need
22:15 - to so in this particular case I guess
22:19 - there's no discussion for this one I'll
22:20 - click another one where you add
22:21 - discussion but in this particular case
22:23 - you could ask questions you know we
22:26 - could go back and forth on you know what
22:28 - we think we could assign this to someone
22:30 - like I said since we don't really have
22:32 - it's just me working on it I usually
22:34 - don't assign but you can see how useful
22:39 - it is in being able to have a place to
22:42 - discuss each issue and then when you
22:46 - submit a pull request to complete this
22:50 - issue the issue then would get closed
22:52 - and we have a record of all the issues
22:54 - so in particular for this one let's see
23:01 - so one of the things that was done in a
23:04 - pull request over the weekend
23:06 - Harshit submitted a bunch of pull
23:08 - requests is that he got that grid
23:10 - working in terms of switching back and
23:13 - forth between the list layout and the
23:14 - grid layout but the way it's working
23:17 - there's a gap between our cards so in
23:21 - for this issue we just want to get rid
23:23 - of that gap so I have offered some
23:25 - suggestions to repurpose some code from
23:29 - a previous project and I've linked to
23:30 - that that code here I think that will
23:34 - solve the problem but it'll take some
23:37 - adjustment of the way the code is set up
23:40 - currently let's see let me just to show
23:46 - you an example let me show you this once
23:53 - we so we can have discussion back and
23:56 - forth and talk about it so anyway for
24:00 - those of you that are used to get hub I
24:01 - know this is pretty basic but I I do
24:05 - know there's a lot of you that watch
24:07 - that may not have a gate
24:09 - profile yet or you just started out so
24:11 - it can be somewhat confusing if you're
24:14 - not used to it okay I see a dual ask is
24:19 - there any chance you could share the
24:21 - link about this agile course yeah if I
24:24 - remember I can find the link if you want
24:27 - to try to look for it it's I think it's
24:30 - called agile for one and it's on
24:32 - Pluralsight so Pluralsight is has a lot
24:36 - of online courses there are a couple of
24:38 - different ways to get a free trial of
24:41 - fluoro sites you can test it out without
24:42 - having to pay for it but normally you
24:44 - have to pay for it so I think the
24:46 - Microsoft developer programmers there's
24:51 - some sort of Microsoft developer program
24:53 - that you can sign up for it it's free
24:56 - and it comes with I think a three month
24:58 - free trial to Pluralsight that's what I
25:01 - did and I just try to do as many classes
25:02 - as I could before my trial ran out so
25:05 - check that out if you want to otherwise
25:08 - after I'm done with the stream maybe
25:10 - I'll try to find the link and I'll put
25:12 - it in the video or the fire remember
25:15 - I'll put it in the live chat tomorrow
25:18 - okay one more thing I want to tell you
25:22 - about that change before we get to some
25:24 - more the code is if you're using this
25:27 - project now if you want to download this
25:29 - and run it on your own machine you need
25:32 - to be running node so nodejs
25:35 - version 7.6 or higher so we're using
25:39 - some newer JavaScript syntax and it's
25:43 - not supported in older versions so if
25:45 - you're getting an error about the async
25:48 - okay good eric says it's microsoft dev
25:51 - essentials so that's that's what it is
25:53 - check out the microsoft dev essentials
25:56 - there's other cool stuff you get for
25:58 - free with that as well so definitely
25:59 - check it out so let me show you what I'm
26:03 - talking about we have the so we now have
26:09 - a try to find a server folder and within
26:15 - the server folder we have app dot J s
26:17 - and this is harsh it did all the work
26:21 - for this
26:22 - but one of the things it does is it uses
26:26 - on this line line 11 it does use async
26:28 - so you'll get in you'll see that there's
26:30 - an error on line 11 if you don't have
26:34 - the the correct node version so that
26:38 - kind of got me at first when I try to
26:41 - run this it took me a little while to
26:43 - figure out what the problem was luckily
26:45 - I had remembered reading about newer
26:49 - node versions supporting this and then I
26:51 - finally realized what the problem was
26:53 - but other than that everything should
26:56 - work just make sure when you download
26:57 - the latest version of the repository if
26:59 - you already had it on your machine that
27:01 - you run npm install or yarn to get all
27:05 - the newest dependencies so let me go
27:08 - through it's probably going to it would
27:12 - take a while to go through everything on
27:13 - the pool request that happened so I'm
27:15 - just going to quickly go over each one
27:20 - and of course you can check out you know
27:24 - line by line what happened with each one
27:27 - in the repository so let's look at our
27:30 - close pull requests and let me go from
27:35 - [Music]
27:37 - ok so from 11 on these are things that
27:43 - are new so in this one our should added
27:48 - that grid layout that I just showed you
27:49 - all recently there are also some other
27:53 - minor changes that I'm kind of skipping
27:56 - over so but this was a significant
28:00 - amount of code it took me quite a while
28:02 - to go through everything and test it all
28:03 - before I merged it in an error handler
28:07 - so basically what happens now is when
28:11 - you go let's see if we can find it here
28:15 - so if there's no network connection
28:19 - you'll get an error instead of the the
28:22 - loading spinner just continually running
28:24 - forever you will actually get an error
28:26 - that says there's something wrong with
28:27 - the network and you can test it out I'll
28:30 - do it here briefly you can test it out
28:33 - by turning off
28:36 - the network so let me switch to offline
28:40 - and let's click I have to do this in the
28:48 - right order so let's get with your first
28:52 - all right now let's try to go offline
28:54 - and see if it'll let us do this there we
28:56 - go
28:56 - so it says Network error failed to fetch
28:59 - so they did already have this saved so
29:02 - that's why I displayed it but otherwise
29:04 - we'll get that I'll probably change this
29:06 - I don't really want to show the user you
29:08 - know the read error message I think
29:13 - it'll be nicer I want to do something I
29:16 - want to make it seem like it's not
29:19 - really that big of a deal just hey check
29:21 - your internet connection or something
29:23 - like that
29:24 - so I'm not sure how I want to word that
29:26 - or display that but really good idea at
29:30 - least to give the user some feedback
29:32 - instead of just the spinning thing
29:35 - because we'll know immediately whether
29:37 - or not there's a network connection so
29:39 - why make the user wait if if we're
29:43 - already sure that it's not going to look
29:45 - so that was a great idea thanks for that
29:49 - our should also and this is to me the
29:53 - biggest thing the server for the API and
29:57 - authentication so this is really cool so
30:00 - we're actually are going to look at this
30:01 - code for a minute because this is this
30:03 - significant this kind of goes beyond a
30:07 - lot of the basic stuff that we had been
30:09 - working on previous to this so here's
30:14 - what we're doing we're actually routing
30:18 - the the data that we're getting from
30:21 - graph QL and in WordPress and instead of
30:30 - bringing it straight into our component
30:33 - it's like client-side right we're gonna
30:36 - bring it in server-side so you can see I
30:40 - believe it's at the bottom here I think
30:45 - where we actually go
30:47 - here we go so you can see here's that
30:50 - URL that we were heading client-side
30:52 - before and now we're getting that data
30:55 - server side and then where we we would
30:59 - have gotten things see if I have it up
31:02 - here I don't think I do
31:04 - okay let's bring up graph QL Apollo
31:12 - client so whereas before we were hitting
31:15 - that wordpress site directly now we're
31:20 - calling that that back-end that server
31:23 - and grabbing the data from there and I
31:26 - think this will be important for us for
31:29 - for a couple of reasons number one it's
31:32 - going to help us to protect that that
31:38 - WordPress installation right because we
31:39 - want it to be password protected or I
31:42 - should rather not have passwords I'd
31:44 - rather have it be a pass with this login
31:46 - but I'm still working with the IT
31:48 - department to see how exactly we're
31:51 - gonna integrate this with our single
31:52 - sign-on system so now what it allows us
31:58 - to do is check for whatever kind of
32:02 - authorization we're gonna have here
32:06 - server side and only then be able to
32:12 - load that data also when we do it like
32:15 - this just kind of thinking of the
32:17 - possibilities I think this gives us a
32:21 - nice opportunity for some caching here
32:28 - like a server-side cache right because
32:31 - so I like you know client-side caching
32:35 - right and we already have because we use
32:36 - create react app to set this up we have
32:38 - a serviceworker running that's going to
32:40 - do a lot of caching so in it is a
32:44 - progressive web app in that sense that
32:47 - you can turn on and we saw this with a
32:49 - previous project when I showed you like
32:51 - on my phone right we could turn off the
32:53 - network we put it on airplane mode
32:56 - and clicked around and everything still
32:59 - worked with the exception of the forms
33:01 - you know obviously but here we'll still
33:06 - gonna have that which is awesome but if
33:09 - we had a cash that was on the server
33:12 - then it didn't matter who clicked right
33:15 - so with a client-side that's great but
33:18 - it only helps out to cut down on
33:20 - requests for that one person when you
33:25 - have this server-side cash here anybody
33:28 - that tries to to go to our site the
33:32 - request is going to stop here it's not
33:35 - set up yet but when we set it up the
33:37 - request will stop here and then press a
33:40 - request will never get sent back to our
33:42 - WordPress installation
33:45 - so that's going to significantly cut
33:47 - down on the amount of traffic that's
33:49 - going from our react site to WordPress
33:53 - so I really like that idea it's gonna
33:56 - allow us to set up WordPress on a much
34:00 - smaller server and less powerful server
34:02 - than we would need to otherwise now this
34:07 - site granted it doesn't get that much
34:10 - traffic it's an internal site you know
34:12 - it'll be less than you know 500 users so
34:15 - I'm not super worried about it but this
34:18 - is going to be really important to test
34:20 - and make sure it works for the next
34:22 - project that we will be working on for
34:24 - the main site because that's going to
34:25 - get a significant amount of traffic so
34:28 - I'd love to test this out and get it
34:30 - working here on a small scale so that
34:33 - maybe it could help later on because
34:35 - WordPress can sometimes be notorious for
34:38 - for taking a lot of resources so if we
34:42 - can cut down on the load that's gonna
34:45 - come you know back to WordPress then
34:48 - that's that's going to be a huge help so
34:55 - those are like the main the main two
34:57 - reasons why I think this is going to be
34:58 - really important and really helpful so
35:03 - if you want to you know kind of go
35:07 - through this line by line on your own
35:09 - then you know go right ahead and we'll
35:12 - be working with this more in streams so
35:15 - we'll have to go through it and add to
35:17 - it and modify it a bit but right now
35:23 - really awesome works well so really
35:27 - happy about that
35:29 - thank you harsh it I'm gonna go ahead
35:32 - and do a short five-minute break I'm
35:33 - gonna check out the live chat answer any
35:35 - questions and then we're going to come
35:36 - back and briefly go over the rest of
35:39 - these pull requests okay cool so I'm
35:45 - gonna see actually just saw so Pat says
35:48 - set up multiple caches one for the
35:51 - server for generics cool logos pictures
35:55 - etc then set up a client-side cache for
35:58 - student admin oriented cache data
36:01 - actually yeah that's a good idea
36:03 - I forget to mention this but right now
36:05 - right now the way we're using WordPress
36:08 - on our sites where we're pulling from
36:10 - the WordPress API or graph QL is that
36:13 - we're still serving all the pictures
36:16 - from WordPress so obviously that's no
36:20 - good right because it still sends a lot
36:24 - of requests back to WordPress but what
36:26 - I'd like to do is serve those images
36:30 - elsewhere so I like the idea that users
36:34 - can upload an image into WordPress right
36:37 - there when they're making a post that
36:39 - makes it easy for people who aren't
36:41 - familiar with code to edit things but
36:43 - what I would like to happen is that the
36:47 - images themselves are sent from maybe
36:52 - some sort of content delivery network so
36:55 - I have some ideas for how to implement
36:57 - that I need to test some things out but
36:59 - I think it can be done and it won't it
37:03 - shouldn't be too difficult and we should
37:05 - be able to load the images much more
37:07 - quickly and completely take the the
37:10 - strain off of WordPress from having to
37:13 - serve those to everyone so I think it's
37:17 - a great idea
37:20 - let's see okay let me scroll up and see
37:24 - if there's any questions hey everybody I
37:27 - see everybody saying hi at the beginning
37:29 - cool we have good day from Zimbabwe hey
37:32 - welcome ding ding Ghana says good day
37:37 - from Zimbabwe
37:47 - okay cool Todd says awesome I've been
37:50 - working on one for a past couple weeks
37:51 - use jQuery at first now I'm trying it
37:53 - with do you can't wait to compare with
37:56 - this yeah definitely let me know when
37:58 - you're done with with trying it out with
38:00 - you I would I would love to see the
38:02 - comparison I haven't worked with you yet
38:04 - but I've read about it and definitely
38:07 - interested in it so I'd be really
38:09 - interested to compare compare the code
38:12 - for those worlds asked when did you
38:15 - learn to code or how long ago I would
38:18 - say I've been doing I've been getting
38:23 - back into front-end development for
38:25 - about five years only the last three of
38:28 - those five years what I'd say I've been
38:29 - like seriously working on JavaScript
38:32 - development before that it was more HTML
38:35 - CSS a little bit of jQuery here and
38:37 - there when I needed it so but I started
38:42 - learning how to build websites when I
38:44 - was in high school so probably around
38:49 - 2003 maybe around there I still did a
38:54 - little bit with it later on in college
38:58 - so maybe like 2005 I worked on it took a
39:03 - class in C++ so I did a little bit with
39:08 - it here and there
39:09 - but I didn't really keep up with it too
39:11 - much
39:12 - but then I did some freelance stuff for
39:15 - a few years and then about two years ago
39:17 - I started working as a full-time
39:19 - front-end developer here at Franciscan
39:21 - University so that's about it I do have
39:24 - a video on my youtube channel
39:26 - I think it's linked in the description I
39:29 - have a video where I talk more about my
39:32 - journey to becoming a front-end
39:34 - developer so if you're interested check
39:36 - that out and you get some more some more
39:38 - info about that cool Sebastian says
39:44 - we're here to back you up awesome I
39:46 - really appreciate that you all actually
39:48 - have helped so much with making these
39:52 - projects awesome but also making me a
39:54 - much better coder by going through all
39:57 - your pull requests and
39:59 - you know getting all this advice that
40:02 - you give me in the live chat I just I've
40:05 - learned more in the last few months that
40:08 - I've been live streaming then probably
40:09 - in the last year before that so it's
40:13 - definitely awesome that's actually what
40:15 - I'm going to give a talk at the November
40:17 - conference at the end of November in
40:20 - Nashville Tennessee and my whole talk is
40:23 - going to be about how live streaming has
40:26 - been such an amazing experience for me
40:27 - and has helped me so much as a developer
40:31 - and so yeah it's it's really been
40:36 - awesome I appreciate you all okay
40:44 - Michele says I like WordPress PHP is my
40:47 - first language
40:48 - awesome awesome that's that's good maybe
40:51 - you can help out when if we have to edit
40:54 - some things in WordPress it's good to
40:56 - have a PHP person watching okay miss
41:06 - nero says oktoberfest may have something
41:09 - to do with all this pull request huh
41:10 - yeah I thought that I there's a lot of
41:14 - people trying to get that free t-shirt
41:15 - and get this pull requests in so it's
41:18 - nice to use that label all right so my
41:24 - five minutes is up I'm going to come
41:25 - back and finish up the questions but I
41:29 - do want to go through the rest of these
41:31 - pull requests at least just a nice
41:34 - outline of them so let's I tell you what
41:42 - I'm going to set this timer but I don't
41:43 - think we're going to need all this time
41:45 - so I expect to finish up before the
41:50 - twenty five minutes and let me know what
41:54 - you think about this kind of stream
41:55 - right we're not doing very much coding
41:57 - but we are kind of going over a lot that
42:02 - I think we need to go over for everyone
42:05 - try having to everyone being able to be
42:09 - on the same page with where this project
42:10 - at since it's changed so much
42:12 - since Friday so let me know if you're
42:17 - not interested in this we'll try to
42:18 - figure out some other way to keep
42:20 - everybody in the loop in terms of the
42:23 - changes and I'll just stick to trying to
42:24 - do coding but otherwise I think I would
42:31 - only do this if there's a lot of changes
42:33 - like we have today I'm I don't think I
42:35 - would do this frequently but there's a
42:38 - lot to change its kind of needed all
42:41 - right so the next the next thing that
42:45 - we're going to do actually I do want to
42:46 - say this if anybody has worked with
42:48 - different types of authentication
42:50 - especially with node let me know I'm
42:53 - very interested in you know what your
42:55 - thoughts are or if there's anything I
42:57 - should look into more like I said I
43:00 - still am not sure how things are going
43:02 - to work out with my IT department and
43:04 - trying to integrate everything with what
43:06 - they're doing that's the best-case
43:08 - scenario but I I'm definitely open to
43:12 - trying to figure out something else with
43:15 - authentication if we need to so anyway
43:18 - we do have some unit testing now so this
43:22 - is I actually I am going to show you a
43:25 - bit about what was done here so we have
43:33 - let me I always just want to show you
43:35 - some of the tests so I mean you can
43:38 - check out all the packages that were
43:39 - installed here but let me show you the
43:43 - tests I get stung further down whereas
43:53 - there we go here's some of the tests so
43:57 - a lot of these tests right now are just
43:59 - saying you know hey did it render did it
44:02 - actually render which is fine that's
44:04 - that's a good test
44:06 - so these run when you commit your code
44:10 - so you're not you won't be able to
44:12 - commit unless the code passes these
44:15 - tests which is awesome so basically you
44:20 - can see it's pretty straightforward even
44:22 - if you don't know anything about testing
44:25 - in this particular way it's not hard to
44:27 - see what's going on so we see at bar
44:31 - renders without crashing right that's
44:34 - that's it that's that's the test so so
44:39 - we just want to see if things render
44:42 - some of them we got a little bit more so
44:46 - we're actually seeing like does it
44:48 - render a category right I think we're
44:51 - doing another one where it's rendering
44:56 - something else but basically you can see
44:58 - the test could be a little bit more
45:00 - in-depth and maybe we'll get to that
45:02 - once we build things out a little bit
45:03 - more but for now at the very least it
45:06 - checks to make sure any changes hasn't
45:09 - caused part of the app to to not render
45:13 - so anyway so really useful so if you
45:17 - want to write some tests feel free
45:20 - especially if anybody's more experienced
45:22 - at writing tests as you all may know
45:25 - I've mentioned before I'm still pretty
45:28 - inexperienced with testing so I'm gonna
45:31 - be trying to understand testing and
45:33 - write some more tests I did some with
45:35 - our previous project that we had some
45:38 - testing on but that's what that's what
45:42 - we mean by by testing at least for right
45:45 - now this isn't the only way to do
45:46 - testing we certainly could add you know
45:49 - some different types of tests but this
45:51 - will we have for now
45:52 - and it's awesome that we just have you
45:54 - know some testing in there we also have
45:58 - this announcement form so
46:01 - show you so now we have a way to submit
46:06 - announcements so users can submit now
46:11 - this is not tied in at all to the
46:12 - backend so we still need this data to be
46:16 - sent to our server and then from the
46:19 - server to be sent by email to someone
46:25 - here in my department and then also an
46:27 - email back to actually we don't have a
46:30 - spot for email hmm oh you know what
46:34 - we're currently getting the users email
46:36 - so we already have the email of someone
46:39 - who's logged in so we are sending the
46:42 - email back to the user we don't have to
46:44 - get the email here in the forum because
46:46 - we already have it so assuming that we
46:48 - can still get the email address of the
46:51 - user which we should be able to do
46:54 - because I think the login will still be
46:56 - based on email and not necessarily
46:58 - username so we'll grab the email we send
47:03 - two emails one to the person who
47:05 - submitted it and one to someone here in
47:07 - my department and they can also upload
47:11 - files so we're gonna need I actually had
47:17 - another modal that popped up when you
47:19 - click this with some further
47:20 - instructions so we'll see if we want to
47:23 - do that the same way or figure out a
47:24 - better way to do that but that's that's
47:27 - in place now which is great and we had
47:35 - so let's see key there may sir if I'm
47:42 - mispronouncing the name I don't know if
47:44 - gear may is here or not in the live chat
47:48 - but the air Mesa has added some
47:52 - information to the readme basically the
47:55 - readme file was referencing some stuff
47:57 - from an old project so it wasn't this
48:00 - current project so it was and then added
48:03 - some things about using yarn so that was
48:05 - good hopefully no one got too confused
48:07 - if they had read the readme recently and
48:10 - then also added some info about that
48:13 - node
48:14 - version that I was telling you about
48:16 - earlier that we need at least version
48:18 - 7.6
48:19 - to be able to run the server so those
48:23 - are all the requests so quite a few
48:26 - requests a lot of code and let me share
48:29 - with you the contributors now so I
48:33 - haven't done this for a while but here's
48:36 - everyone that's contributed so far so
48:39 - awesome work to everyone that's
48:41 - contributed I really appreciate it and
48:44 - you can see based on commits I'm no
48:47 - longer the top contributor so I need to
48:49 - I need to get moving but anyway I really
48:55 - appreciate everything so if anyone has
48:58 - any questions about any of those commits
49:00 - about what was done or how it was done
49:02 - let me know I can certainly go back over
49:05 - them in more depth
49:07 - I'd like for us all to be able to
49:09 - understand you know what's going on so I
49:13 - mean I definitely took a lot more time
49:15 - to go through it on my own so I it may
49:18 - not be as clear in the brief overview
49:20 - that I've given but you'll see I'm going
49:26 - to be adding to these issues into our
49:28 - project so if you're interested in
49:31 - contributing but you're not sure what to
49:32 - do keep an eye on that on the issues and
49:36 - give it a shot
49:37 - I if you submit an issue and you didn't
49:41 - do it quite right I can always just give
49:42 - you some feedback and you can improve it
49:45 - so don't worry about submitting
49:46 - something wrong I'm the worst that could
49:48 - happen is I just say hey you need to
49:51 - change this or oh you know somebody
49:53 - already submitted something that fix
49:55 - that so no big deal don't be afraid to
49:58 - submit if you want to see and also if
50:03 - you notice something that's not working
50:05 - correctly with the app open up an issue
50:08 - I I certainly am NOT going to be able to
50:13 - catch everything it's always awesome to
50:16 - have you know other people fresh eyes
50:18 - looking at the project and you know I'm
50:22 - sure all of you use different operating
50:23 - systems devices browsers and you'll
50:25 - catch some things that that I just won't
50:28 - so all right I'm gonna go back to the
50:32 - live chat I'm gonna answer some more
50:34 - questions and it's okay yeah we're about
50:40 - right on track to have that our our time
50:43 - for this stream so tomorrow we'll
50:46 - definitely be doing some some coding so
50:49 - this stream is kind of just to catch up
50:52 - stream not really the norm okay let's go
50:57 - back let's see do you dilip I'm not sure
51:13 - I can't I says hey W DLC for the start
51:17 - I'm not sure what W DLC is somebody let
51:23 - me know what that means and then I'll
51:24 - answer the question
51:26 - okay Ronald says have you looked at Zen
51:29 - hub for github I actually I think that
51:38 - is what I looked at so I mentioned that
51:40 - I did see something that worked with
51:42 - github I think it was in hub so Ronald
51:47 - if you I know you you mentioned that a
51:48 - while ago so if you're still there let
51:50 - me know do you use Zen hub for github
51:53 - and if so how do you like it
51:57 - hey John Hansen's here he says hi all
52:00 - hey John thanks for joining us Oh Eric
52:06 - says bitbucket can use Trello boards now
52:08 - which is pretty cool that is cool I
52:10 - didn't realize that
52:17 - Blake says hey Jesse I'm watching the
52:19 - videos over and over watching the videos
52:22 - over again and copying the code over as
52:24 - there are a lot of PRS in there in the
52:27 - repo yeah definitely a lot of hearts
52:39 - Umberto's says yet yeah Alberto's my
52:42 - dotnet guy on the stream definitely very
52:47 - helpful whenever we were working on some
52:48 - dotnet stuff a few weeks back satya says
52:58 - yeah it's helping me awesome glad I
53:00 - could help
53:01 - thanks for watching Meriter says this
53:07 - first week is tough gonna have to watch
53:09 - your video later ciao for now okay see
53:12 - you later Umberto I'm sure you're gone
53:13 - already but thanks for watching
53:18 - Blake says if I'm building this myself
53:20 - do you think i need PRS 12 through 13
53:22 - and 15 through 22 let me check with
53:26 - those PRS were again 12
53:38 - yet not necessarily so if you don't need
53:41 - some of those features that we're being
53:44 - added then I don't think that you need
53:47 - them so for sure you can get kind of the
53:52 - basics down up to maybe around PR right
53:57 - right around PR 12 I guess would be a
53:59 - decent place I mean the air handling.i
54:01 - is is kind of nice but yeah anything
54:05 - beyond that in terms of the the server
54:08 - you may or may not want that a
54:12 - client-side API call would probably just
54:16 - fine if you had no need of
54:19 - authentication
54:23 - Sacha's has hi Jesse from India hey
54:26 - Satya
54:28 - glad you could join us from India it's
54:30 - pretty late there right it's definitely
54:32 - try think what time it would be in India
54:37 - was it like - somewhere around 2:30 in
54:41 - the morning something like that I can't
54:45 - remember the exact time but thanks for
54:47 - staying up so late
54:51 - rook says hi everyone join late hey ro
54:54 - glad you could join Pat says is there a
54:59 - formal QA / testing process that you go
55:03 - through before you go live with work how
55:06 - formal a process does your school have
55:09 - the process is actually not it's not
55:12 - really formalized so I definitely think
55:15 - we need something more formalized but
55:18 - for now the testing process is depending
55:26 - on what the project is and and how
55:28 - necessary it is it will go through more
55:31 - rigorous testing than than other
55:34 - projects but there's no basically if I
55:40 - say it's ready to go then it goes so
55:44 - everybody trusts that all of you
55:48 - thorough testing so it's
55:50 - thing is pretty much all on me and I
55:53 - just do as much as I can and usually we
55:57 - have four projects in the past done had
56:01 - groups of people here at the University
56:03 - to get early access to things and let
56:06 - them test and give me feedback so we
56:10 - have done use some of the automated
56:11 - testing in previous projects and some
56:14 - like we're doing now and then otherwise
56:17 - just try to do as much user testing as
56:20 - we can honestly there have been some
56:24 - times when we we had a date things had
56:28 - to go live and I would have rather done
56:30 - more testing but it worked for most of
56:34 - the use cases that we had and and it
56:38 - launched and then later on we just tried
56:40 - to to improve things as much as we could
56:44 - I'm usually thinking more like browsers
56:47 - like older browsers making sure it works
56:50 - then those are the things that usually
56:51 - kind of get pushed the side you know we
56:55 - try to test with the main the browsers
56:57 - that we know people are most likely to
56:59 - use and and then just wait you know that
57:04 - when we have more time for the other
57:06 - ones so I definitely have to read up
57:09 - more on testing process I'd like to have
57:13 - I'd love to have more automated testing
57:15 - that happens and and then perhaps some
57:22 - sort of formal process you know right
57:25 - now
57:27 - right now with it just being me mostly
57:30 - who makes that decision I I just have
57:34 - been putting off doing something like
57:36 - that but if we end up having more people
57:38 - working on things it's going to be
57:41 - necessary to have some sort of
57:43 - established process so if anybody has
57:46 - experience with that I'm definitely open
57:49 - to hearing your thoughts on it
57:55 - and I do run I use I forget what it's
58:02 - called but there's some sort of service
58:08 - that checks your github repositories to
58:11 - see if any of the JavaScript libraries
58:13 - are using have security issues so I do
58:17 - some testing like that as well okay all
58:28 - right rook says passport J s is a is
58:32 - great for authentication and node use it
58:35 - recently to implement a login with
58:37 - Facebook
58:38 - o auth to button it makes it really
58:43 - straightforward okay cool I'll I'll
58:46 - check that out I think I've heard about
58:49 - that before I think someone else
58:50 - mentioned a livestream to I know I
58:52 - looked at it before I actually I think I
58:57 - looked at it when I was originally
58:59 - building this bulletin last year and at
59:02 - the time I I was not gonna run a note
59:08 - back and I just didn't know enough about
59:10 - it at the time so I just kind of passed
59:12 - the passed it by but at this point I
59:16 - think I and we definitely have the
59:19 - skills to implement that so I'm gonna
59:20 - check into that thank you for the
59:22 - suggestion
59:23 - oh cool Blake says I like the break
59:28 - gives me some time to catch up on other
59:30 - videos okay cool
59:36 - Ronald says just to notice it's a
59:37 - commercial project just nope just ran
59:40 - across it okay cool thanks for for them
59:43 - you know about it and that was in
59:46 - response to what was it called I forgot
59:52 - already the github Zen hub Zen hub
60:00 - forget up alright Pat says web
60:04 - development lifecycle
60:07 - okay cool check
60:23 - okay cool I'm checking that out on my
60:26 - other screen the web development
60:29 - lifecycle cool yeah I definitely need I
60:36 - need a better process oh okay cool
60:44 - thanks uncle Pat so that was the W DLC
60:47 - comment from earlier okay let me go back
60:49 - and look at that comment now that I
60:52 - understand what it is okay so a W DLC
60:56 - for the start okay
60:57 - so obviously no I didn't I didn't use W
61:00 - DLC but now that I'm looking at it here
61:01 - on my other screen this is awesome I
61:06 - need to I need to look more into this so
61:12 - I mean obviously let me just pull this
61:14 - on this screen just to give you an
61:18 - overview in case I'm sure a lot of you
61:20 - are familiar with this already but it's
61:21 - assuming that this is an accurate
61:23 - representation it seems like these are
61:25 - just the steps for web development to
61:29 - gather information planning do with
61:32 - wireframe mock-up design content then
61:38 - coding testing review launch and then
61:41 - maintenance so these are things that
61:46 - usually happen but they don't these
61:49 - usually happen for my projects but not
61:51 - necessarily as distinct steps like this
61:54 - or mapped out and sometimes they're in a
61:56 - different order I think it wouldn't
61:58 - definitely be helpful to put this in a
62:01 - better order because I'm sure if you
62:06 - watch before a previous things sometimes
62:08 - we get out of order with this and we get
62:10 - stuck a bit in a loop where we're
62:13 - content isn't even decided on we're
62:16 - almost all the way finished with coding
62:18 - and the content in the design aren't
62:21 - even completely decided on yet some of
62:24 - this is out of my hands I don't write
62:26 - the content so sometimes we just get
62:29 - started and have to wait on the content
62:31 - otherwise we'd be waiting for a long
62:33 - time and never get it coded
62:36 - I do like this idea we should we should
62:42 - definitely follow this for the upcoming
62:46 - project because that's going to be a
62:47 - huge project in it it will require some
62:50 - some organization more so than we have
62:54 - been for these small projects we've been
62:55 - able to get away with it because the
62:57 - projects are such small scale but I
63:00 - think we definitely need something more
63:02 - formal ok it's 1 a.m. in India
63:11 - all right oh that's right I remember now
63:20 - so - 2 p.m. or I'm sorry 4 p.m. here in
63:25 - the United States Eastern time is 2:00
63:27 - a.m. in India all right I knew there was
63:33 - it was around that time
63:42 - okay Risha bass will there be a caste
63:47 - related to Jess so will I do a stream
63:50 - let's see I maybe I will
63:55 - I need to learn more about about just so
63:57 - it's a possibility I don't feel
64:01 - comfortable doing a stream on it right
64:02 - now because I know so so little about it
64:05 - so I think it would be great to do a
64:07 - stream on that and it's something that I
64:09 - should know more about anyway so I'm
64:12 - going to keep that in mind and try to do
64:15 - a stream on its in nears it says I just
64:19 - made my first pool request awesome
64:21 - congratulations did you do a pull
64:25 - request for this for this project and
64:28 - see where was it at I get up open let's
64:35 - see if it's for this one
64:41 - I don't see him for this one maybe it's
64:42 - for a different one but anyway
64:45 - congratulations on your first pull
64:46 - request let's see John B says Jessie on
64:51 - the topic of service that checks for
64:53 - JavaScript libraries that may have
64:55 - security vulnerabilities was the service
64:57 - you were thinking of called sync IO yeah
65:01 - I think it's sync is anybody else use
65:04 - sync dot IO I have it linked up to my
65:08 - github account and so it just checks all
65:11 - my repositories usually I get warnings
65:14 - sometimes about different versions of
65:16 - jQuery surprisingly a lot of different
65:20 - versions of jQuery show up as having
65:22 - some sort of security issue
65:26 - so I'm not sure I mean sites that that
65:30 - need to use jQuery I'm not sure what to
65:35 - do about it cuz sometimes you need to
65:38 - use certain versions to work with other
65:39 - things that you're using but yeah it's
65:42 - pretty useful it doesn't cover
65:44 - everything so it's not I wouldn't trust
65:47 - it a hundred percent but it's nice to
65:52 - have to have the warning there and I
65:54 - think I I'm pretty sure it comes up in
65:57 - my console I have some sort of plugin
66:05 - see if I I don't know if I have a site
66:09 - open that would give me an error right
66:11 - now but I also get a warning message in
66:13 - my console which is nice okay let's see
66:19 - all right well I've gotten to the bottom
66:22 - of the live chat and we're coming in at
66:28 - just over an hour so for once my
66:32 - estimate of how long something would
66:33 - take actually works
66:35 - I normally underestimate every time we
66:39 - do a stream so let's see okay John B
66:45 - just said I remember because the guy who
66:46 - made synced at a conference talk on
66:48 - JavaScript phone abilities that criminal
66:50 - hackers like to exploit okay cool
66:54 - that actually sounds really interesting
66:57 - talk on that I just I don't usually hear
67:00 - that much about JavaScript boner
67:02 - abilities so I would definitely
67:05 - interested in that okay cool
67:08 - so a little bit of a different stream
67:13 - today kind of it was kind of different
67:17 - it was kind of weird for me sitting I
67:19 - didn't write any code but I think
67:22 - hopefully we're all on the same page now
67:24 - we know we have some project planning in
67:29 - place and I'll be adding to that you
67:31 - feel free to add to that as well and we
67:36 - got a new project coming up that's going
67:37 - to be huge and exciting I've been I've
67:40 - been wanting to redo the main website
67:41 - here at the University since before I
67:43 - even got the job here so this is I'm
67:48 - really really excited and I'm glad now
67:50 - like everybody in my department the head
67:54 - of my department is on board and I think
67:56 - there there are people even higher up
67:58 - that are going to be on board with it so
68:00 - I think this is really gonna happen so
68:05 - I'm excited and I'll keep you up-to-date
68:08 - on anything you know before we start
68:12 - I'll keep you up-to-date on anything
68:13 - that happens that may delay it or
68:16 - different decisions about what it's
68:17 - going to look you know what exactly
68:19 - we're going to do but it'll be awesome
68:22 - it'll be it'll be a huge project and
68:25 - it'll be really cool and maybe I'm kind
68:29 - of thinking that maybe we could sneak
68:30 - somewhere in the site maybe in a console
68:32 - all the list of everybody that submitted
68:34 - pull requests just to thank you so we'll
68:37 - see I think that would be fun and then
68:41 - anybody that inspects uses the the dev
68:44 - tools will see everybody that
68:47 - contributed but all right cool so I
68:53 - guess that that's it for me today should
68:55 - be back tomorrow probably around 2:00
68:58 - p.m. and until then thanks for watching
69:02 - and have a great day

Cleaned transcript:

hey everybody and welcome to live coding with Jesse sorry I started a few minutes later than scheduled I forgot to open up OBS which is my streaming software and so I went to start the stream and realized I didn't even have it open so I had to open it and put in the youtube code and at the same time I was having a debate on slack about Star Wars with a coworker so if anybody's a Star Wars fan you know how important that is so anyway I have we had a lot of news today so we've had a lot of pull requests I've set up what I think will be a helpful way to track our progress on this project and plan things out and then also I had a meeting this morning kind of a long meeting but the result was was pretty cool so I'm gonna share that with you because it's gonna be a big deal when it in terms of what we're gonna be working on on this dream you know really for the next year or more in developing so I don't think we'll be working on it every day for the next year or more but we're gonna it's going to be probably the most important project for at least the next year so let me let me get to it so I guess I'll just share with the project is first I don't want to keep you all in suspense and I'm pretty excited about it so I don't know exactly when we're gonna start on this but if you remember in projects was it maybe project 3 so we were working on the main website so let me hear that and so you all remember that we were working well those of you who watch the stream out a few weeks or so ago we were working on this probably remember there we go I'll bring this up so you remember one how slow the main website is that took forever all right and how outdated it is really cluttered a lot of stuff going on here so this is the main website for the university that workout it gets by far more traffic than all our other websites combined so it's it's the most important site this is where most people see the online presence of University at this site and probably never see any of our other sites this is part of the the redesign that we are working on together they didn't get very far with it but definitely an improvement you know just in terms of the things we have they're already a big improvement for some reason that's interesting the side nav hasn't been working unless you hard refresh the page anyway not really the point so here's the point one of the issues that we had in making a little bit difficult to develop this site is that the backend for it is a content management system called Ektron that's based on asp.net and we don't have direct control or direct access to the database and I'm not that familiar with dotnet things so basically what I what's I'm pretty sure this is gonna happen I don't want to say a hundred percent sure because we've been talking about it for a long time so I'm still a little bit careful as to whether or not this is gonna happen but I think it will we're gonna do away with the Eckstrom system we're gonna rebuild it completely from the ground up back and front end database everything and as we've discussed in previous streams the is to tie this into probably a wordpress for the content manager WordPress backend for content management system we're going to use graph QL to grab the data from wordpress like we're doing with this current project project 4 and then we're going to have multiple multiple droplets chris will probably be on this relation so multiple droplets running node that are low balanced to handle all the traffic and then the front end of it is going to be built with react and so it'll be very similar to what we're doing here for this site but on a much larger scale because the main website has i think it's over 3000 pages the biggest challenges we're going to have though are getting all the content out of the current database and into a wordpress database in the format that it needs to be in for wordpress or if we decide to go with some other system you know we could do it but basically we need to get the data out we've talked about this before on the stream and i think we decided that the best way to go about this would be to make some sort of an api to get that data out so that needs to happen and whether that be we do that on the stream or try to figure it out or have to hire someone else to work on that because that's databases aren't really my my strong suit so obviously we have a long time to work on it so it's possible that i can learn enough to make that happen we'll see how it goes otherwise everything else is are things that we've already worked on another project so this will be just kind of combining everything on a much larger scale and doing a lot of testing there's gonna be a lot of different you know there's gonna be a lot of users so the I guess there's more pressure on this project more people were gonna see it it's going to be more obvious I guess if we mess something up so I guess there's pressure on me you all there's no pressure on you because it's all my responsibility but I'm excited I'm really excited like I said not sure when we're gonna start it but in terms of design you know we've already have some of the design finished I mean this this header is is nice I mean probably the link structure is going to change that's not really up to me I'll be in the meetings about that but it's not going to be entirely up to me what links are there but hey I just checked the live chat and my uncle is in the live chat hey Uncle fat also glad you could that you could watch okay so enough about that project you're definitely hearing more about it and in the upcoming weeks and so I'm excited so today we're gonna do two things the first thing I'm going to do is I'm going to show you how I've set up using a Kanban board and using github projects a layout so that we can all track this project together so that you know what still needs to be done and they're all going to be linked up to github issues so that it's easy for us to discuss them and to track them because until now you all just been kind of going by what we discussed in the live streams so I think this will be much more clear you know what we still have left to do it'll be nice to track everything and I think it's night I use this kind of thing for all my projects it it helps me organize everything so I know I've shown you a little bit of how I do this on Trello but I'm gonna try to do this within github and then that way there's not so many different places to go to keep track of the same project the second thing we're going to do is go over some pull requests because we've gotten a lot of pull requests over the last weekend and I didn't it was a long weekend for me so I wasn't in Monday or Tuesday so I didn't stream so I'm gonna save that for the second part of it so let me start my timer I'm gonna start this 25minute Pomodoro timer and then that will reminding me that after 25 minutes I need to take a break and answer some questions in the live chat this probably will end up being a shorter stream than normal because we're not going to do a lot of actual coding this is going to be more of like project planning and review code review so we'll see how much time it takes but I'm thinking maybe around an hour for the stream length so let me show you let me bring this over on this screen so you can see I'll bring this up you can see let's see I see there are some questions in the lab chat I will get to those on my first break so don't think I'm am ignoring them okay so here's what we have now on the project I'm gonna make this a bit bigger so you can see so this is our bulletin reactive current project that we were working on and I just went to the repository and then I clicked on this projects tab I just made you know one project called bulletin you can add a description of these if you want but this is the only one so I mean they make it a bit smaller just you can see kind of the big picture here so for a Kanban board this is the kind of an old way of a visual way to look at a project flow you don't even need to do this online you can do it with sticky notes on a wall or something basically all you need is three columns so you need you know your todo column you're in progress and then your your done column I like to expand it out a little bit when I first learned how to do this this was the setup that I learned with and for me I like this because I usually try to put in there ready for development column everything that I think I can complete in one week and then it's nice to have a testing column not everything goes in there the testing column sometimes things are really minor changes that are so straightforward that you test as soon as you do it you see that it works doesn't really require a lot of testing and those usually can go right to the completed because you kind of do the testing step right there and then I also like to add this wish list and these are things that would be really awesome to add to a project but it's probably not going to happen for launch and not a project requirement so these are if you want to challenge these are probably where the most challenging things would be but probably the coolest things to work on as well so I've added some things I've added some things and you can see from setting this up earlier today just a few hours ago we've already had something moved from the todo list to the completed list and so these when I when I add these in I just add them as a note and then you can click the drop down and you know it doesn't show it now because I already did it you can click the drop down and convert it to an issue and then it automatically goes into the issues then you can put more information and if you want code snippets or images you know whatever you want and there can be discussions so several of these issues have discussions back and forth with those of you who are you know contributing to the project so it's it's nice but I have done this with Trello before but it is really nice to be able to have it all in one place so I'm gonna try to make this work the only thing that I don't have with this that I had with Trello that I really liked was being able to track how long each one of these took using Pomodoro sessions so I was checking out some Chrome extensions that could maybe do that but I haven't found one that works exactly you know how it did with Trello so I'm thinking about I'm gonna keep looking for one if you know of anything like that then let me know otherwise I may attempt to create one myself I don't know when I'll have time to do that but it it would be cool to have something where you could attach time estimates to each one of these that would be that would be nice and then if it could also produce some sort of burn down chart automatically that would be that useful as well me that's actually pretty straightforward if anybody has questions about this put in a live chat I'm gonna keep looking over so that I can answer questions you see kinda think I'm missing something this seems to easy to explain I actually I think I think that's it con bonds really straightforward and it's simple which is why I like it so much you know you just you move the cards over okay cool so so Pat says JIRA does both estimates and multiple reports I was I was actually checking out JIRA before the stream started does anybody else use JIRA you know of that so JIRA seemed like it had the most features out of anything else I checked out in terms of tracking this and doing there's a lot of charts and reports there's so many cool things that could do so I might have to check into that more I didn't really have time to check into it before the stream as much as I think I needed to to do a stream on it but I'm assuming that there's also integrations with github I know there is you can link up Trello with github issues so I'm assuming you could do the same thing with JIRA or maybe use something like like zapier to link it up but that that seems like it would be pretty pretty powerful let's see okay world says this is more for agile type workflows yes so I've the Connie the context of agile was where I actually learned this I was taking a course on agile for for one so I was not working on a team it was more me working by myself but I wanted to incorporate as much of you agile project management as I could so that's where I learned this so anyway I think this will help so I may or may not stick with doing this and get up if I can find if I find that it doesn't have everything that I need or there's something better out there that I could work with that's great the only thing I would want is for you all to be able to have access to this to at least see it you don't necessarily need to be able to edit it I mean I could certainly take care of moving these cards over every time one of these issues is either you know it's solved so if we can find something like that I'm certainly open to it otherwise I'll maybe try to find a plug in all right so let me let me quickly go over one other thing with the Trello board before we actually get into some code so you'll notice I have some labels here if you're already familiar with how github issues work I'm sure you know what's going on with these labels but if you're not then I'm gonna try to label the issues as accurately as possible but the important labels for people who I guess are new is this good first issued label so if you don't have a lot of pull requests or you're looking for your first pull request for your github profile check these out I'm gonna try to put this tag on everything that is that I think will be easy for beginners so sometimes it may be something as simple as adding a little bit of documentation even potentially correcting a typo so I'm gonna make sure I do this I'm gonna purposely not complete some of the easier tasks and make them issues and then that way you know it can help you get that that first pull request I know it can be intimidating sometimes a lot of projects are really complex and not quite so easy to get into so this would be good for for some of the newer people and then also I'm gonna have some more some more complicated issues this I would say is a bit more complicated and let's see so I want to actually take a look at this especially if you're not familiar with without github works and we're just going to take a look at one of these issues the only other label I want to point out is this hack hack Tober fest issue if you search for hack Tober fest this is basically an opportunity for you to get a free tshirt so if you sign up for this and link your github account and you you have four pool requests that get merged in the open source projects then you'll get a free tshirt so check that out and I think it's all the way through October I forget what the end date is but it's kind of a cool a cool thing so that's why I added this label here just to let everybody know that this is you know this is open for issues let's see pad has a question says do you keep a backlog of items to complete right now I don't have a backlog well I should at least for this project I haven't set up anything I didn't I didn't even start to do anything on this project till a while an hour or two ago so I don't have anything yet for my some of the other projects that I had a more developed board for I did have quite a large backlog for some of them yeah I guess the to do you to do it works kind of like a backlog and the way I have this set up so I don't have a separate backlog so I saw with with JIRA there is a way to do have a separate backlog so basically this ends up the backlog my projects because it's usually just me working on them they're not really largescale so it doesn't usually get too big it's pretty easy to handle but if you had a much larger project you might even want multiple multiple boards so I would I would say this setup does work well for me if it's for a small project a really small team but larger ones would probably need something more and actually so uncle Pat if we get a chance to talk I would really love to see how how you handle because I know you work on some some much larger projects I'd love to see how you handle the workflow because you know I just I'm just trying to figure this out on my own I've never had like a team or you know someone else to work with and learn from and how to do this so let's see if you all don't know I am so my uncle was here in the live stream and he is a software developer and has been for for a long time and I'm not gonna give like details about company or anything because I'm not sure if you want me to or not but works with I believe csharp and yeah so definitely has been a great help and to me and kind of my path to becoming a developer and so anyway I'm really excited that he's he's watching so oh okay I said I was gonna click this and then I get sidetracked all right so here's the issue right so if you go to look at a github repository you can check out you can get straight to the issues or if you're in the project view you can click on the issue and so this is basically what it isn't you can submit issues as well so it doesn't have to be me as the manager of this repository you can submit issues as you see them and you can even put in you know screenshots links whatever you need to so in this particular case I guess there's no discussion for this one I'll click another one where you add discussion but in this particular case you could ask questions you know we could go back and forth on you know what we think we could assign this to someone like I said since we don't really have it's just me working on it I usually don't assign but you can see how useful it is in being able to have a place to discuss each issue and then when you submit a pull request to complete this issue the issue then would get closed and we have a record of all the issues so in particular for this one let's see so one of the things that was done in a pull request over the weekend Harshit submitted a bunch of pull requests is that he got that grid working in terms of switching back and forth between the list layout and the grid layout but the way it's working there's a gap between our cards so in for this issue we just want to get rid of that gap so I have offered some suggestions to repurpose some code from a previous project and I've linked to that that code here I think that will solve the problem but it'll take some adjustment of the way the code is set up currently let's see let me just to show you an example let me show you this once we so we can have discussion back and forth and talk about it so anyway for those of you that are used to get hub I know this is pretty basic but I I do know there's a lot of you that watch that may not have a gate profile yet or you just started out so it can be somewhat confusing if you're not used to it okay I see a dual ask is there any chance you could share the link about this agile course yeah if I remember I can find the link if you want to try to look for it it's I think it's called agile for one and it's on Pluralsight so Pluralsight is has a lot of online courses there are a couple of different ways to get a free trial of fluoro sites you can test it out without having to pay for it but normally you have to pay for it so I think the Microsoft developer programmers there's some sort of Microsoft developer program that you can sign up for it it's free and it comes with I think a three month free trial to Pluralsight that's what I did and I just try to do as many classes as I could before my trial ran out so check that out if you want to otherwise after I'm done with the stream maybe I'll try to find the link and I'll put it in the video or the fire remember I'll put it in the live chat tomorrow okay one more thing I want to tell you about that change before we get to some more the code is if you're using this project now if you want to download this and run it on your own machine you need to be running node so nodejs version 7.6 or higher so we're using some newer JavaScript syntax and it's not supported in older versions so if you're getting an error about the async okay good eric says it's microsoft dev essentials so that's that's what it is check out the microsoft dev essentials there's other cool stuff you get for free with that as well so definitely check it out so let me show you what I'm talking about we have the so we now have a try to find a server folder and within the server folder we have app dot J s and this is harsh it did all the work for this but one of the things it does is it uses on this line line 11 it does use async so you'll get in you'll see that there's an error on line 11 if you don't have the the correct node version so that kind of got me at first when I try to run this it took me a little while to figure out what the problem was luckily I had remembered reading about newer node versions supporting this and then I finally realized what the problem was but other than that everything should work just make sure when you download the latest version of the repository if you already had it on your machine that you run npm install or yarn to get all the newest dependencies so let me go through it's probably going to it would take a while to go through everything on the pool request that happened so I'm just going to quickly go over each one and of course you can check out you know line by line what happened with each one in the repository so let's look at our close pull requests and let me go from ok so from 11 on these are things that are new so in this one our should added that grid layout that I just showed you all recently there are also some other minor changes that I'm kind of skipping over so but this was a significant amount of code it took me quite a while to go through everything and test it all before I merged it in an error handler so basically what happens now is when you go let's see if we can find it here so if there's no network connection you'll get an error instead of the the loading spinner just continually running forever you will actually get an error that says there's something wrong with the network and you can test it out I'll do it here briefly you can test it out by turning off the network so let me switch to offline and let's click I have to do this in the right order so let's get with your first all right now let's try to go offline and see if it'll let us do this there we go so it says Network error failed to fetch so they did already have this saved so that's why I displayed it but otherwise we'll get that I'll probably change this I don't really want to show the user you know the read error message I think it'll be nicer I want to do something I want to make it seem like it's not really that big of a deal just hey check your internet connection or something like that so I'm not sure how I want to word that or display that but really good idea at least to give the user some feedback instead of just the spinning thing because we'll know immediately whether or not there's a network connection so why make the user wait if if we're already sure that it's not going to look so that was a great idea thanks for that our should also and this is to me the biggest thing the server for the API and authentication so this is really cool so we're actually are going to look at this code for a minute because this is this significant this kind of goes beyond a lot of the basic stuff that we had been working on previous to this so here's what we're doing we're actually routing the the data that we're getting from graph QL and in WordPress and instead of bringing it straight into our component it's like clientside right we're gonna bring it in serverside so you can see I believe it's at the bottom here I think where we actually go here we go so you can see here's that URL that we were heading clientside before and now we're getting that data server side and then where we we would have gotten things see if I have it up here I don't think I do okay let's bring up graph QL Apollo client so whereas before we were hitting that wordpress site directly now we're calling that that backend that server and grabbing the data from there and I think this will be important for us for for a couple of reasons number one it's going to help us to protect that that WordPress installation right because we want it to be password protected or I should rather not have passwords I'd rather have it be a pass with this login but I'm still working with the IT department to see how exactly we're gonna integrate this with our single signon system so now what it allows us to do is check for whatever kind of authorization we're gonna have here server side and only then be able to load that data also when we do it like this just kind of thinking of the possibilities I think this gives us a nice opportunity for some caching here like a serverside cache right because so I like you know clientside caching right and we already have because we use create react app to set this up we have a serviceworker running that's going to do a lot of caching so in it is a progressive web app in that sense that you can turn on and we saw this with a previous project when I showed you like on my phone right we could turn off the network we put it on airplane mode and clicked around and everything still worked with the exception of the forms you know obviously but here we'll still gonna have that which is awesome but if we had a cash that was on the server then it didn't matter who clicked right so with a clientside that's great but it only helps out to cut down on requests for that one person when you have this serverside cash here anybody that tries to to go to our site the request is going to stop here it's not set up yet but when we set it up the request will stop here and then press a request will never get sent back to our WordPress installation so that's going to significantly cut down on the amount of traffic that's going from our react site to WordPress so I really like that idea it's gonna allow us to set up WordPress on a much smaller server and less powerful server than we would need to otherwise now this site granted it doesn't get that much traffic it's an internal site you know it'll be less than you know 500 users so I'm not super worried about it but this is going to be really important to test and make sure it works for the next project that we will be working on for the main site because that's going to get a significant amount of traffic so I'd love to test this out and get it working here on a small scale so that maybe it could help later on because WordPress can sometimes be notorious for for taking a lot of resources so if we can cut down on the load that's gonna come you know back to WordPress then that's that's going to be a huge help so those are like the main the main two reasons why I think this is going to be really important and really helpful so if you want to you know kind of go through this line by line on your own then you know go right ahead and we'll be working with this more in streams so we'll have to go through it and add to it and modify it a bit but right now really awesome works well so really happy about that thank you harsh it I'm gonna go ahead and do a short fiveminute break I'm gonna check out the live chat answer any questions and then we're going to come back and briefly go over the rest of these pull requests okay cool so I'm gonna see actually just saw so Pat says set up multiple caches one for the server for generics cool logos pictures etc then set up a clientside cache for student admin oriented cache data actually yeah that's a good idea I forget to mention this but right now right now the way we're using WordPress on our sites where we're pulling from the WordPress API or graph QL is that we're still serving all the pictures from WordPress so obviously that's no good right because it still sends a lot of requests back to WordPress but what I'd like to do is serve those images elsewhere so I like the idea that users can upload an image into WordPress right there when they're making a post that makes it easy for people who aren't familiar with code to edit things but what I would like to happen is that the images themselves are sent from maybe some sort of content delivery network so I have some ideas for how to implement that I need to test some things out but I think it can be done and it won't it shouldn't be too difficult and we should be able to load the images much more quickly and completely take the the strain off of WordPress from having to serve those to everyone so I think it's a great idea let's see okay let me scroll up and see if there's any questions hey everybody I see everybody saying hi at the beginning cool we have good day from Zimbabwe hey welcome ding ding Ghana says good day from Zimbabwe okay cool Todd says awesome I've been working on one for a past couple weeks use jQuery at first now I'm trying it with do you can't wait to compare with this yeah definitely let me know when you're done with with trying it out with you I would I would love to see the comparison I haven't worked with you yet but I've read about it and definitely interested in it so I'd be really interested to compare compare the code for those worlds asked when did you learn to code or how long ago I would say I've been doing I've been getting back into frontend development for about five years only the last three of those five years what I'd say I've been like seriously working on JavaScript development before that it was more HTML CSS a little bit of jQuery here and there when I needed it so but I started learning how to build websites when I was in high school so probably around 2003 maybe around there I still did a little bit with it later on in college so maybe like 2005 I worked on it took a class in C++ so I did a little bit with it here and there but I didn't really keep up with it too much but then I did some freelance stuff for a few years and then about two years ago I started working as a fulltime frontend developer here at Franciscan University so that's about it I do have a video on my youtube channel I think it's linked in the description I have a video where I talk more about my journey to becoming a frontend developer so if you're interested check that out and you get some more some more info about that cool Sebastian says we're here to back you up awesome I really appreciate that you all actually have helped so much with making these projects awesome but also making me a much better coder by going through all your pull requests and you know getting all this advice that you give me in the live chat I just I've learned more in the last few months that I've been live streaming then probably in the last year before that so it's definitely awesome that's actually what I'm going to give a talk at the November conference at the end of November in Nashville Tennessee and my whole talk is going to be about how live streaming has been such an amazing experience for me and has helped me so much as a developer and so yeah it's it's really been awesome I appreciate you all okay Michele says I like WordPress PHP is my first language awesome awesome that's that's good maybe you can help out when if we have to edit some things in WordPress it's good to have a PHP person watching okay miss nero says oktoberfest may have something to do with all this pull request huh yeah I thought that I there's a lot of people trying to get that free tshirt and get this pull requests in so it's nice to use that label all right so my five minutes is up I'm going to come back and finish up the questions but I do want to go through the rest of these pull requests at least just a nice outline of them so let's I tell you what I'm going to set this timer but I don't think we're going to need all this time so I expect to finish up before the twenty five minutes and let me know what you think about this kind of stream right we're not doing very much coding but we are kind of going over a lot that I think we need to go over for everyone try having to everyone being able to be on the same page with where this project at since it's changed so much since Friday so let me know if you're not interested in this we'll try to figure out some other way to keep everybody in the loop in terms of the changes and I'll just stick to trying to do coding but otherwise I think I would only do this if there's a lot of changes like we have today I'm I don't think I would do this frequently but there's a lot to change its kind of needed all right so the next the next thing that we're going to do actually I do want to say this if anybody has worked with different types of authentication especially with node let me know I'm very interested in you know what your thoughts are or if there's anything I should look into more like I said I still am not sure how things are going to work out with my IT department and trying to integrate everything with what they're doing that's the bestcase scenario but I I'm definitely open to trying to figure out something else with authentication if we need to so anyway we do have some unit testing now so this is I actually I am going to show you a bit about what was done here so we have let me I always just want to show you some of the tests so I mean you can check out all the packages that were installed here but let me show you the tests I get stung further down whereas there we go here's some of the tests so a lot of these tests right now are just saying you know hey did it render did it actually render which is fine that's that's a good test so these run when you commit your code so you're not you won't be able to commit unless the code passes these tests which is awesome so basically you can see it's pretty straightforward even if you don't know anything about testing in this particular way it's not hard to see what's going on so we see at bar renders without crashing right that's that's it that's that's the test so so we just want to see if things render some of them we got a little bit more so we're actually seeing like does it render a category right I think we're doing another one where it's rendering something else but basically you can see the test could be a little bit more indepth and maybe we'll get to that once we build things out a little bit more but for now at the very least it checks to make sure any changes hasn't caused part of the app to to not render so anyway so really useful so if you want to write some tests feel free especially if anybody's more experienced at writing tests as you all may know I've mentioned before I'm still pretty inexperienced with testing so I'm gonna be trying to understand testing and write some more tests I did some with our previous project that we had some testing on but that's what that's what we mean by by testing at least for right now this isn't the only way to do testing we certainly could add you know some different types of tests but this will we have for now and it's awesome that we just have you know some testing in there we also have this announcement form so show you so now we have a way to submit announcements so users can submit now this is not tied in at all to the backend so we still need this data to be sent to our server and then from the server to be sent by email to someone here in my department and then also an email back to actually we don't have a spot for email hmm oh you know what we're currently getting the users email so we already have the email of someone who's logged in so we are sending the email back to the user we don't have to get the email here in the forum because we already have it so assuming that we can still get the email address of the user which we should be able to do because I think the login will still be based on email and not necessarily username so we'll grab the email we send two emails one to the person who submitted it and one to someone here in my department and they can also upload files so we're gonna need I actually had another modal that popped up when you click this with some further instructions so we'll see if we want to do that the same way or figure out a better way to do that but that's that's in place now which is great and we had so let's see key there may sir if I'm mispronouncing the name I don't know if gear may is here or not in the live chat but the air Mesa has added some information to the readme basically the readme file was referencing some stuff from an old project so it wasn't this current project so it was and then added some things about using yarn so that was good hopefully no one got too confused if they had read the readme recently and then also added some info about that node version that I was telling you about earlier that we need at least version 7.6 to be able to run the server so those are all the requests so quite a few requests a lot of code and let me share with you the contributors now so I haven't done this for a while but here's everyone that's contributed so far so awesome work to everyone that's contributed I really appreciate it and you can see based on commits I'm no longer the top contributor so I need to I need to get moving but anyway I really appreciate everything so if anyone has any questions about any of those commits about what was done or how it was done let me know I can certainly go back over them in more depth I'd like for us all to be able to understand you know what's going on so I mean I definitely took a lot more time to go through it on my own so I it may not be as clear in the brief overview that I've given but you'll see I'm going to be adding to these issues into our project so if you're interested in contributing but you're not sure what to do keep an eye on that on the issues and give it a shot I if you submit an issue and you didn't do it quite right I can always just give you some feedback and you can improve it so don't worry about submitting something wrong I'm the worst that could happen is I just say hey you need to change this or oh you know somebody already submitted something that fix that so no big deal don't be afraid to submit if you want to see and also if you notice something that's not working correctly with the app open up an issue I I certainly am NOT going to be able to catch everything it's always awesome to have you know other people fresh eyes looking at the project and you know I'm sure all of you use different operating systems devices browsers and you'll catch some things that that I just won't so all right I'm gonna go back to the live chat I'm gonna answer some more questions and it's okay yeah we're about right on track to have that our our time for this stream so tomorrow we'll definitely be doing some some coding so this stream is kind of just to catch up stream not really the norm okay let's go back let's see do you dilip I'm not sure I can't I says hey W DLC for the start I'm not sure what W DLC is somebody let me know what that means and then I'll answer the question okay Ronald says have you looked at Zen hub for github I actually I think that is what I looked at so I mentioned that I did see something that worked with github I think it was in hub so Ronald if you I know you you mentioned that a while ago so if you're still there let me know do you use Zen hub for github and if so how do you like it hey John Hansen's here he says hi all hey John thanks for joining us Oh Eric says bitbucket can use Trello boards now which is pretty cool that is cool I didn't realize that Blake says hey Jesse I'm watching the videos over and over watching the videos over again and copying the code over as there are a lot of PRS in there in the repo yeah definitely a lot of hearts Umberto's says yet yeah Alberto's my dotnet guy on the stream definitely very helpful whenever we were working on some dotnet stuff a few weeks back satya says yeah it's helping me awesome glad I could help thanks for watching Meriter says this first week is tough gonna have to watch your video later ciao for now okay see you later Umberto I'm sure you're gone already but thanks for watching Blake says if I'm building this myself do you think i need PRS 12 through 13 and 15 through 22 let me check with those PRS were again 12 yet not necessarily so if you don't need some of those features that we're being added then I don't think that you need them so for sure you can get kind of the basics down up to maybe around PR right right around PR 12 I guess would be a decent place I mean the air handling.i is is kind of nice but yeah anything beyond that in terms of the the server you may or may not want that a clientside API call would probably just fine if you had no need of authentication Sacha's has hi Jesse from India hey Satya glad you could join us from India it's pretty late there right it's definitely try think what time it would be in India was it like somewhere around 230 in the morning something like that I can't remember the exact time but thanks for staying up so late rook says hi everyone join late hey ro glad you could join Pat says is there a formal QA / testing process that you go through before you go live with work how formal a process does your school have the process is actually not it's not really formalized so I definitely think we need something more formalized but for now the testing process is depending on what the project is and and how necessary it is it will go through more rigorous testing than than other projects but there's no basically if I say it's ready to go then it goes so everybody trusts that all of you thorough testing so it's thing is pretty much all on me and I just do as much as I can and usually we have four projects in the past done had groups of people here at the University to get early access to things and let them test and give me feedback so we have done use some of the automated testing in previous projects and some like we're doing now and then otherwise just try to do as much user testing as we can honestly there have been some times when we we had a date things had to go live and I would have rather done more testing but it worked for most of the use cases that we had and and it launched and then later on we just tried to to improve things as much as we could I'm usually thinking more like browsers like older browsers making sure it works then those are the things that usually kind of get pushed the side you know we try to test with the main the browsers that we know people are most likely to use and and then just wait you know that when we have more time for the other ones so I definitely have to read up more on testing process I'd like to have I'd love to have more automated testing that happens and and then perhaps some sort of formal process you know right now right now with it just being me mostly who makes that decision I I just have been putting off doing something like that but if we end up having more people working on things it's going to be necessary to have some sort of established process so if anybody has experience with that I'm definitely open to hearing your thoughts on it and I do run I use I forget what it's called but there's some sort of service that checks your github repositories to see if any of the JavaScript libraries are using have security issues so I do some testing like that as well okay all right rook says passport J s is a is great for authentication and node use it recently to implement a login with Facebook o auth to button it makes it really straightforward okay cool I'll I'll check that out I think I've heard about that before I think someone else mentioned a livestream to I know I looked at it before I actually I think I looked at it when I was originally building this bulletin last year and at the time I I was not gonna run a note back and I just didn't know enough about it at the time so I just kind of passed the passed it by but at this point I think I and we definitely have the skills to implement that so I'm gonna check into that thank you for the suggestion oh cool Blake says I like the break gives me some time to catch up on other videos okay cool Ronald says just to notice it's a commercial project just nope just ran across it okay cool thanks for for them you know about it and that was in response to what was it called I forgot already the github Zen hub Zen hub forget up alright Pat says web development lifecycle okay cool check okay cool I'm checking that out on my other screen the web development lifecycle cool yeah I definitely need I need a better process oh okay cool thanks uncle Pat so that was the W DLC comment from earlier okay let me go back and look at that comment now that I understand what it is okay so a W DLC for the start okay so obviously no I didn't I didn't use W DLC but now that I'm looking at it here on my other screen this is awesome I need to I need to look more into this so I mean obviously let me just pull this on this screen just to give you an overview in case I'm sure a lot of you are familiar with this already but it's assuming that this is an accurate representation it seems like these are just the steps for web development to gather information planning do with wireframe mockup design content then coding testing review launch and then maintenance so these are things that usually happen but they don't these usually happen for my projects but not necessarily as distinct steps like this or mapped out and sometimes they're in a different order I think it wouldn't definitely be helpful to put this in a better order because I'm sure if you watch before a previous things sometimes we get out of order with this and we get stuck a bit in a loop where we're content isn't even decided on we're almost all the way finished with coding and the content in the design aren't even completely decided on yet some of this is out of my hands I don't write the content so sometimes we just get started and have to wait on the content otherwise we'd be waiting for a long time and never get it coded I do like this idea we should we should definitely follow this for the upcoming project because that's going to be a huge project in it it will require some some organization more so than we have been for these small projects we've been able to get away with it because the projects are such small scale but I think we definitely need something more formal ok it's 1 a.m. in India all right oh that's right I remember now so 2 p.m. or I'm sorry 4 p.m. here in the United States Eastern time is 200 a.m. in India all right I knew there was it was around that time okay Risha bass will there be a caste related to Jess so will I do a stream let's see I maybe I will I need to learn more about about just so it's a possibility I don't feel comfortable doing a stream on it right now because I know so so little about it so I think it would be great to do a stream on that and it's something that I should know more about anyway so I'm going to keep that in mind and try to do a stream on its in nears it says I just made my first pool request awesome congratulations did you do a pull request for this for this project and see where was it at I get up open let's see if it's for this one I don't see him for this one maybe it's for a different one but anyway congratulations on your first pull request let's see John B says Jessie on the topic of service that checks for JavaScript libraries that may have security vulnerabilities was the service you were thinking of called sync IO yeah I think it's sync is anybody else use sync dot IO I have it linked up to my github account and so it just checks all my repositories usually I get warnings sometimes about different versions of jQuery surprisingly a lot of different versions of jQuery show up as having some sort of security issue so I'm not sure I mean sites that that need to use jQuery I'm not sure what to do about it cuz sometimes you need to use certain versions to work with other things that you're using but yeah it's pretty useful it doesn't cover everything so it's not I wouldn't trust it a hundred percent but it's nice to have to have the warning there and I think I I'm pretty sure it comes up in my console I have some sort of plugin see if I I don't know if I have a site open that would give me an error right now but I also get a warning message in my console which is nice okay let's see all right well I've gotten to the bottom of the live chat and we're coming in at just over an hour so for once my estimate of how long something would take actually works I normally underestimate every time we do a stream so let's see okay John B just said I remember because the guy who made synced at a conference talk on JavaScript phone abilities that criminal hackers like to exploit okay cool that actually sounds really interesting talk on that I just I don't usually hear that much about JavaScript boner abilities so I would definitely interested in that okay cool so a little bit of a different stream today kind of it was kind of different it was kind of weird for me sitting I didn't write any code but I think hopefully we're all on the same page now we know we have some project planning in place and I'll be adding to that you feel free to add to that as well and we got a new project coming up that's going to be huge and exciting I've been I've been wanting to redo the main website here at the University since before I even got the job here so this is I'm really really excited and I'm glad now like everybody in my department the head of my department is on board and I think there there are people even higher up that are going to be on board with it so I think this is really gonna happen so I'm excited and I'll keep you uptodate on anything you know before we start I'll keep you uptodate on anything that happens that may delay it or different decisions about what it's going to look you know what exactly we're going to do but it'll be awesome it'll be it'll be a huge project and it'll be really cool and maybe I'm kind of thinking that maybe we could sneak somewhere in the site maybe in a console all the list of everybody that submitted pull requests just to thank you so we'll see I think that would be fun and then anybody that inspects uses the the dev tools will see everybody that contributed but all right cool so I guess that that's it for me today should be back tomorrow probably around 200 p.m. and until then thanks for watching and have a great day
