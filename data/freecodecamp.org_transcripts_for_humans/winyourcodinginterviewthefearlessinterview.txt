With timestamps:

00:01 - [Music]
00:02 - [Applause]
00:06 - hello
00:30 - so today i'm going to be talking about
00:33 - interviewing which is really just the
00:34 - tip of a very large iceberg which we're
00:37 - talking
00:38 - about the whole iceberg i guess
00:41 - this talk is not just for you if you're
00:43 - looking for a job but if you interview
00:45 - people
00:47 - i'm ryan lebove
00:49 - i currently work for envoy where we
00:51 - challenge the status quo of workplace
00:53 - technology it's a bay area company super
00:56 - fun
00:57 - most of the time i'm doing ember and
00:59 - node stuff but since it's a startup i do
01:02 - a little bit of everything
01:05 - this talk kind of started
01:08 - at a certain point in my career i was
01:10 - started interviewing more and more
01:12 - people as we're trying to hire
01:13 - and i would see people make the same
01:15 - like
01:16 - i don't want to say mistakes but it's
01:17 - like
01:18 - i had to look and i found really
01:20 - interesting things about people but they
01:22 - just weren't coming across in the
01:23 - interview so like i would have to do a
01:25 - lot of like
01:26 - poking in their github looking on their
01:28 - social media and asking them a lot of
01:29 - questions actually get
01:31 - kind of the best to shine through i was
01:33 - like i wish i could give a talk and kind
01:34 - of just like
01:36 - put it on the table from like my
01:37 - perspective and helped people
01:40 - get a job
01:44 - so
01:45 - given that we have 45 minutes i'm going
01:46 - to kind of lay out some goals
01:49 - i want to give you
01:51 - more or less a map to getting the job
01:53 - you want
01:55 - this is not like just your first job but
01:57 - this is like
01:58 - a career trajectory that you should be
02:00 - able to keep coming back to
02:02 - so i don't care if you're a junior dev
02:04 - or if you're like
02:05 - you have a really good job and you're
02:07 - looking for something else or if you
02:08 - have a job and you're trying to help get
02:09 - people to come work for you i think
02:11 - there's something for everybody
02:13 - the hard thing here is
02:14 - there's like thousands of pieces of
02:17 - advice i could say about this
02:19 - and
02:21 - like it's trying to distill and present
02:22 - in a way that makes sense so i'm going
02:24 - to start with the story this may seem a
02:27 - little bit unrelated to what we're
02:29 - talking about but i promise it's not
02:31 - there's this really
02:33 - indie
02:34 - kind of anime short film called the
02:36 - reward
02:37 - on vimeo and it starts off with these
02:40 - like two super ordinary dudes sitting at
02:42 - sitting in a village and this like
02:45 - completely
02:46 - crazy hero rolls through the town
02:48 - they're both like man i want to be like
02:50 - this person
02:51 - and on the way out of town the the hero
02:53 - drops this map with an x on it
02:55 - and like they fight over the map and
02:57 - they end up like let's go on the journey
02:59 - together
03:00 - and they start off in like some really
03:02 - basic places and they like find these
03:04 - magic weapons they start taking on new
03:07 - challenges
03:08 - a lot of time unsuccessfully
03:10 - a lot of time having to like bail their
03:12 - crazy friends who are like doing it with
03:14 - them over and over again
03:16 - but like eventually your friend that
03:18 - you're on the journey with like kind of
03:20 - helps you back
03:21 - and you start like having some wins
03:24 - and taking on bigger risks
03:27 - and like before you know it you're like
03:28 - riding on an ocean of lava on a fleet of
03:31 - narwhals um having completed some epic
03:34 - quest
03:35 - and like what what we see
03:37 - as the journey progresses is like in
03:39 - each frame these people kind of like
03:41 - change
03:42 - and like they don't see this but we see
03:43 - them becoming the heroes that they
03:45 - originally saw riding through their
03:46 - village
03:47 - and like they just keep fighting like
03:49 - crazy bosses and blindly charging
03:51 - towards this x
03:53 - and when they get there
03:54 - there's nothing there it's just
03:56 - literally a big x on the ground which is
03:57 - all the map advertised really but
04:00 - there's this big mirror and they kind of
04:02 - realize
04:03 - along the way it was like the journey
04:06 - the journey has made them into these
04:07 - heroes and that was like the reward
04:09 - right
04:10 - and then like
04:11 - it ends with them riding through the
04:12 - same town with like some dopey looking
04:15 - kids looking at them
04:16 - and like to these kids they're like the
04:19 - heroes now
04:20 - and these kids are like how do i how do
04:22 - i become like you and you see
04:24 - one of them slowly like slip the map out
04:26 - of the satchel with the x on it sorry
04:29 - the whole journey for them and the kids
04:30 - like repeat the same thing over again
04:34 - this is
04:34 - exactly like my journey of programming
04:37 - it's like a
04:39 - it's a little bit ridiculous for like
04:41 - the premise of this talk but
04:43 - we'll see you'll see if you don't
04:45 - already see
04:46 - uh so kind of like revisiting the goals
04:49 - for today
04:50 - given this map we have with the big x i
04:52 - want to help you see like
04:54 - where you are and like help debunk some
04:56 - of the myths of the journey
04:59 - uh to help you get the job this is all
05:01 - leading up to the fearless interview
05:04 - some anti-goals i'm not going to teach
05:06 - you computer science in 30 minutes it's
05:08 - not possible and i'm also not going to
05:10 - help you fake your way into a job
05:12 - so anyways let's get started the quest
05:15 - map
05:17 - i kind of broke it down into six six
05:19 - parts
05:20 - one is learning how to code two is
05:22 - getting your first tech job three is
05:24 - preparing to look for a new job
05:26 - four is the job hunt five what we're
05:29 - leading up to is the fearless interview
05:30 - and six is kind of a postscript of being
05:32 - at the x
05:34 - and throughout this talk i've talked to
05:36 - literally all of my friends who code and
05:38 - had them just give advice that they
05:39 - found helpful along the way so it's uh
05:42 - you'll see quotes from a lot of a lot of
05:44 - randos that i really respect
05:47 - so learning how to code
05:49 - this is your magic weapons that you find
05:51 - it's interesting i was talking with john
05:54 - moses and one of my friends and he's
05:56 - actually giving a talk
05:57 - about this in a few weeks
06:00 - so i'm not going to like try to go over
06:01 - it all he's got a great series on it and
06:03 - he's going to speak more about it in
06:04 - about a week or two or three i don't
06:06 - know
06:07 - but my tldr is like learn a language
06:10 - build internet things meet developers
06:12 - share what you build
06:13 - i personally learned how to to code on
06:16 - this this book called the ruby on rails
06:18 - tutorial where we built twitter from
06:20 - scratch
06:22 - free code camp is great
06:24 - there's another one by colt steele i
06:27 - highly recommend you build yelp from
06:29 - scratch
06:30 - that's not the point though it's just
06:31 - like
06:33 - it's a lot less important where you
06:34 - start as long as you pick something and
06:36 - finish it that's kind of my point for
06:38 - learning how to code
06:41 - after your boot camp experience this is
06:43 - where the real work begins
06:45 - you need to build something on your own
06:47 - if you don't know what to build i
06:48 - recommend starting with a blog
06:50 - because it's like really easy to like
06:53 - you know what a blog is and you can
06:55 - build a very small or very complex one
06:58 - you can ship it people can read it you
07:00 - have users you have something to talk
07:01 - about
07:03 - like my friend jordan smith says be
07:04 - honest keep learning and talk about what
07:07 - you learn
07:08 - so after you build something cool this
07:09 - is where you start
07:11 - signing up for lightning talks free code
07:12 - camp okay cjs
07:14 - the ruby group wherever you can talk you
07:17 - need to share with share what you learn
07:19 - just keep building things get as far as
07:21 - you can on projects make them dumb make
07:24 - them fun make them something you use
07:26 - there's this guy ira glass he has this
07:29 - little short story called
07:31 - the gap it's about creatives about how
07:33 - like when you start in a new field you
07:35 - like you're like i want to be a painter
07:37 - it's like i see these amazing paintings
07:38 - and then you paint this just like
07:40 - terrible thing it's like how do i get
07:42 - from here to here
07:44 - and everybody goes through this it's
07:46 - exactly the same with programming
07:49 - and his answer is do a lot of work a
07:51 - huge volume of work
07:53 - and that volume of work is what helps
07:54 - you close the gap and eventually the
07:56 - quality of your work will catch your
07:57 - ambitions
07:59 - so if you're still stuck on this
08:02 - west boss has this thing called
08:03 - javascript 30 you build 30 small things
08:05 - in javascript over 30 days
08:08 - you'll probably make it to day 13 and be
08:10 - building something really interesting
08:11 - that you like and like you'll just go
08:13 - off on this tangent that's what you want
08:14 - that's great that's like a sign that
08:16 - you're doing the right thing
08:17 - so the boss battle for learning how to
08:19 - code can you get in github
08:21 - do you have like a side project that you
08:23 - can point to that's like i built this
08:24 - thing and it's on the internet now
08:27 - i can prototype stuff in html and css i
08:30 - can solve basic coding challenges with
08:32 - javascript
08:33 - and also i understand the basic workings
08:35 - of an api
08:37 - this is like
08:39 - a pretty good start which segues into
08:42 - getting your first tech job so
08:43 - especially if you go through free code
08:45 - camp you've built some stuff on your own
08:47 - you want to get paid like you want to
08:49 - start working in tech
08:51 - and so
08:53 - before your first step tech job i
08:55 - personally felt like everything i did
08:57 - was just a string of terrible failures
08:59 - with programming
09:00 - and then somehow like as soon as you
09:02 - learn your first tech job this is where
09:03 - you feel like you're on the fleet of
09:04 - narwhals cruising through the lava sea
09:06 - it's just like i don't know it's really
09:08 - big it feels a lot like getting your big
09:10 - break
09:12 - but a question i get a lot is how do i
09:14 - know i'm ready for my first job in the
09:15 - industry
09:17 - so this is where i have to remind you
09:19 - everybody started somewhere everybody
09:21 - was a junior nobody came out just
09:22 - programming
09:25 - so
09:26 - my rule of thumb is if you can build
09:27 - something useful you're probably
09:29 - hireable to somebody
09:31 - you don't have to know everything you
09:33 - just have to be able to add value to the
09:34 - team that you're joining that's like a
09:36 - really important thing
09:38 - be very open about your current skill
09:40 - level you don't have to hire wide about
09:42 - anything but also don't undersell
09:44 - yourself like
09:45 - especially if you come from a job that
09:46 - has like a customer service background a
09:49 - lot of programmers after 10 years turn
09:51 - into like sea creatures and they like
09:53 - can't talk to people so like you bring
09:55 - very valuable skills to the table just
09:56 - by being able to engage with your
09:58 - customers it's like these are very
09:59 - valuable things that you bring to the
10:01 - team
10:02 - so
10:03 - i really like queen carmen
10:05 - says it's okay to say you don't know
10:07 - something much better than making
10:08 - something up
10:10 - specific warnings for your first job in
10:13 - tech
10:14 - you want to make sure the team you're
10:16 - joining is ready to bring on juniors
10:19 - some questions i suggest asking
10:22 - one do you have other juniors on your
10:24 - team two are there people on staff
10:27 - who were a junior but now are no longer
10:29 - juniors that are still with you
10:31 - three how do what kind of mentorship do
10:33 - you have for juniors how do you make
10:34 - sure that they continue to progress
10:36 - and four are there clear job bands how
10:39 - and how often would we reevaluate
10:41 - whether i'm still a junior
10:43 - and i'll say personally envoy this is
10:45 - something we always come back to and
10:48 - it's like
10:49 - i think it's hard for companies to get
10:51 - this right and so it's like don't feel
10:53 - bad if you're at a company it's like
10:54 - we're trying to do the mentorship
10:56 - program the important part is just to
10:58 - keep asking yourself these questions and
10:59 - trying to make sure the answer continues
11:01 - to improve
11:03 - john mosesman says
11:04 - get a friend that can get you a job
11:06 - honestly this is probably the hardest
11:08 - step in the whole process
11:09 - so harder than like getting building
11:12 - that compiler or doing weird video game
11:14 - stuff is getting your first job that's
11:15 - like
11:16 - pretty deep for somebody who's been in
11:19 - the industry probably at least 10 years
11:22 - so boss battle first tech job
11:27 - from this job you're going to want
11:28 - things on your resume
11:29 - you're going to want to launch something
11:31 - monitor actual software maintain it deal
11:33 - with customers these are all skills that
11:35 - you won't get from anywhere else
11:39 - specifically you want to make sure
11:40 - you're continuing to gain more
11:42 - experience collaborating with other
11:43 - programmers this is something that's
11:45 - very unique to actually having a
11:46 - programming job
11:48 - and at the end of this you really want
11:50 - to make sure that you no longer consider
11:51 - yourself a junior
11:54 - so
11:55 - that one leads me to my next point is
11:57 - preparing to look for a new job
12:00 - this there's a lot of overlap between
12:01 - the first job but this is where i find
12:03 - is actually
12:04 - on my personal journey was like the
12:06 - hardest point because
12:08 - i worked for a company for maybe six
12:10 - years and like at some point i felt
12:12 - really stuck
12:13 - and it took me a long time to figure out
12:15 - how to continue to ramp up my skills to
12:17 - get ready for the next stage in my
12:18 - career
12:20 - um
12:21 - and again going back to our metaphor
12:23 - like this is where you're kind of like
12:25 - i'm kind of a grizzled veteran already i
12:27 - probably don't see this if you've been
12:28 - working in a job for one to two years
12:30 - you've changed you're shipping software
12:32 - whereas before you are not this is this
12:34 - is like massive changes in you
12:36 - um so i break this down into three parts
12:39 - and i'll go over them
12:40 - one is to prove your t which we'll talk
12:43 - about because that sounds really weird
12:44 - slash r no context
12:46 - two is
12:48 - get the junior out of your title
12:50 - and three is improve your coding chops
12:53 - so
12:54 - there's this idea of t-shaped people
12:56 - somebody came up with it i don't know
12:57 - who they are but if you think about the
12:58 - letter t it's got like a horizontal long
13:02 - top with a long vertical stem
13:04 - and essentially what you're wanting to
13:06 - say is i have been experienced i have
13:08 - been exposed to a lot of things in
13:10 - programming but i'm really good at this
13:12 - one thing
13:13 - um and this is where like t-shaped
13:15 - people i will hire these people all day
13:17 - every day and so this is where you want
13:19 - to say like yeah i've made a couple apis
13:21 - i've done like some devops things and
13:24 - i've built some front ends but i really
13:26 - love amber js and that's where i spend
13:28 - most of my time contributing
13:30 - um
13:31 - and so
13:32 - really
13:33 - this is like
13:35 - being going from a junior to
13:37 - just a software engineer this is
13:39 - probably the hardest thing figure out
13:40 - what you're interested in and then work
13:42 - on developing the stem of your tea so
13:44 - let's say you're really into x how do
13:46 - you prove that
13:48 - some things that i recommend is like
13:50 - open source
13:52 - you'll probably be using tools that
13:54 - revolve around x so like if you like d3
13:57 - go sign up for the d3 repo
13:59 - look at other libraries built on d3
14:01 - start trying to contribute back to these
14:03 - things
14:04 - write an article comparing d3 to 3js i
14:07 - don't think that's actually a good
14:08 - comparison but anyways
14:10 - complete like one serious side project
14:12 - that lets that shine
14:14 - blog about this uh how do you do a
14:16 - non-trivial d3 project from scratch even
14:19 - if you feel like it's repetitive and
14:20 - people have done it it's still important
14:21 - for you to do it
14:23 - um
14:24 - and just for example
14:26 - when i was like i'm really into ember js
14:28 - i was like how do i actually prove that
14:30 - to people and then i went and looked
14:32 - this is open source i've done and
14:35 - launched projects on my own
14:36 - here's projects that i've contributed to
14:39 - actual full side projects
14:41 - articles talks
14:43 - it's just like
14:45 - if this was a court case it would be
14:46 - really easy to prove that i really like
14:48 - ember.js it's a very specific thing but
14:50 - when somebody's like i need somebody to
14:51 - do ember js and i'm like here's my
14:53 - resume they're like i want you to help
14:54 - me so like that's really what you where
14:56 - you want to get
14:59 - getting junior out of your title
15:01 - uh what's the easiest way to get junior
15:02 - out of your title stop calling yourself
15:04 - a junior
15:05 - that seems like really dumb advice but
15:07 - like after you get your first job drop
15:08 - it
15:09 - you're not a junior anymore
15:12 - you're always just a software engineer
15:15 - every organization is going to have
15:16 - different standards from junior to
15:18 - senior
15:19 - so don't try to sell yourself to
15:21 - something just like explain like i'm an
15:23 - engineer here's what i love
15:27 - some things you can do to really help
15:28 - you with this also is have a regular
15:30 - practice of learning from people and
15:32 - resources that are better than you
15:34 - and practice the things you learn
15:36 - and then focus on one thing at a time
15:38 - i'm just going to throw a couple things
15:39 - that i've historically found really
15:40 - helpful
15:41 - i'll publish these slides and you can
15:43 - refer to them later
15:44 - if you're new to computer science and
15:46 - have a non-traditional background the
15:47 - base cs podcast is amazing it breaks
15:50 - down usually like
15:52 - pomp and academic things like data
15:54 - structures and b trees and traversal of
15:56 - recursive blah blah blah as like breaks
15:58 - it down into ways it's really easy to
16:00 - understand
16:02 - you don't know js it's like a great like
16:05 - i do javascript every day and i want to
16:06 - know more about this
16:08 - eric elliott writes on on medium a lot
16:10 - his stuff's great
16:12 - there's this book called pooter which is
16:14 - practical object oriented design in ruby
16:16 - it's like there's a lot of great like
16:18 - architecture books you can start reading
16:20 - and starting and start like improving
16:22 - like different domains of your
16:23 - programming skills
16:25 - rubytopas fun fun function is a great
16:27 - javascript one there's more
16:30 - this guy's super grumpy but his
16:31 - screencasts are great
16:33 - upcase is a another one that's like
16:36 - really good this is where i stole the
16:37 - like get the junior out of your title
16:39 - it's literally like you watch really
16:41 - good programmers pair on hard problems
16:43 - and you end up learning an amazing
16:44 - amount by doing this
16:46 - and when you're comfortable enough which
16:48 - should be now
16:50 - read the open source repos you use it's
16:52 - my one soros reference i promise
16:55 - so
16:56 - open source projects are literally like
16:58 - playbooks about how to make the things
17:00 - you like so you can just like read how
17:02 - to do it and it's like oh my gosh i can
17:04 - make d3 now i don't know why i chose d3
17:06 - i never use c3
17:09 - and learn how to use a debugger i don't
17:12 - that's a hard one but it's useful and
17:14 - also learn how to do tdd same
17:17 - so and another thing is like when you're
17:18 - ready to actually start applying for
17:20 - jobs
17:21 - you need to make sure that your your
17:23 - coding chops are like up to snuff
17:25 - which is like more of a matter of
17:27 - discipline
17:28 - do an hour of hacker rank every day read
17:30 - the cracking the code interview book
17:32 - this book is amazing like nobody
17:34 - remembers all this stuff but if i had to
17:36 - look for a new job
17:37 - i would get a six-pack of red bull and
17:39 - read this every one weekend and like
17:40 - that's where i would start
17:42 - imposter's handbook is another great one
17:44 - and then interview cake again i'll post
17:46 - all these later so like if you're
17:47 - looking for specific resources reach out
17:49 - to me i'll help you match like
17:51 - what i think would make the most sense
17:53 - for your ad
17:54 - okay so
17:55 - preparing to look for a job
17:57 - you can prove to me you're interested in
17:59 - one or two very specific technical
18:01 - things this is a very important thing
18:04 - you have a consistent practice of
18:06 - learning from high quality sources like
18:08 - hour a day two hours on the weekend
18:10 - whatever it is like continue to learn
18:12 - things
18:13 - and you can also easily solve a wide
18:15 - variety of programming challenges
18:18 - okay now we're on to the job hunt
18:21 - this is all about networking positioning
18:23 - and negotiation
18:25 - i really just want to put this in my
18:26 - slides it's not really relevant to what
18:27 - we're talking about
18:28 - [Laughter]
18:31 - so
18:32 - networking heroic eric says go to meetup
18:35 - and conferences this is where i've
18:36 - gotten most of my jobs from
18:39 - alex an engineer i work with says meet
18:41 - actual engineers where you're applying
18:43 - message me and buy me coffee
18:45 - i will tell you exactly what things are
18:46 - like this is great advice like
18:49 - i actually knew somebody who the way
18:50 - that they would start applying for a job
18:52 - they would find an open source repo for
18:54 - a company they want to apply for
18:56 - start opening issues and pull requests
18:58 - against it and use that to like apply
18:59 - like what open source have you done well
19:01 - have you seen your projects you didn't
19:02 - update this and i did
19:04 - like it's an okay way to do that
19:07 - this is also extremely um opinionated
19:10 - but
19:11 - in my opinion the best jobs come from
19:14 - direct recommendations
19:16 - then applying for companies you like
19:18 - and then literally everything else
19:20 - and i'm not gonna like poo poo on
19:22 - recruiters or job boards or anything
19:24 - they're all great
19:26 - but if you have a friend who will say i
19:28 - like working at my job that's huge like
19:30 - that's somebody you want to work with
19:32 - that is like the easiest way to know
19:33 - you're getting into a situation that
19:35 - you'll like
19:36 - um so again make connections contribute
19:39 - to open source go to meetups go to
19:41 - conferences speak at meetups and
19:43 - conferences if you can
19:44 - apply for contracting positions at
19:46 - companies this is easy because if you do
19:49 - a bad job they don't have to pay you
19:50 - after a week like be like hey i'd love
19:52 - to do some consulting for you
19:53 - contracting for you
19:55 - and then twitter like a madman or mad
19:57 - person
19:59 - the last time i tweeted that i was out
20:01 - of a job i had three job offers from
20:04 - twitter just because i tweeted about
20:05 - programming stuff this is like an
20:07 - amazing thing
20:09 - um so positioning
20:11 - what kind of company do you want to work
20:12 - for
20:13 - what matters to you do you want to be
20:14 - remote does salary matter is a tech
20:17 - stack matter does your team matter
20:19 - this kind of needs to inform what type
20:21 - of jobs you start to look for
20:23 - startups big companies consultancies
20:26 - going out on your own uh do you want to
20:28 - work for like
20:29 - ou or a government thing
20:32 - when you kind of have this like if you
20:34 - want to work at macro corp like update
20:36 - your linkedin
20:37 - don't have weird stuff on social media
20:39 - buy some nice business casual clothes do
20:41 - whatever these people do like be like
20:43 - them this is the this is the job you
20:44 - want this is the lifestyle you want like
20:46 - figure out how these people work and
20:48 - just like
20:49 - like emulate them in a way that's not
20:50 - like
20:51 - i'm forgetting who i am but like these
20:53 - are the people you want to fit in with
20:54 - so like start fitting in with them now
20:57 - if you want to work at start uply like
20:59 - buy a macbook and a hoodie uh like
21:03 - but you say like start taking pictures
21:04 - of your latte and post them on instagram
21:06 - these are like these will help you fit
21:08 - in and kind of understand how these
21:09 - people think and work
21:12 - again know how to fit in know how to be
21:14 - yourself know how to stand out um
21:17 - so
21:18 - when you're applying when you're like
21:20 - working on companies you're like i want
21:21 - to apply it start uply or
21:23 - micro corp
21:24 - macro corp um
21:26 - like you need to kind of do some
21:27 - research on these companies what are
21:29 - their core values their mission
21:30 - statement
21:31 - what is their financial health key
21:33 - personnel google the company and figure
21:35 - out what what they say on their social
21:36 - media
21:38 - figure out who their competitors are and
21:40 - when you start interviewing like
21:42 - i know people know that they're
21:43 - interviewing with me at least a week
21:45 - ahead of time it's like it's really easy
21:47 - to figure out what i'm into so if you
21:49 - start like
21:50 - if you open up with like react versus
21:52 - ember joke i'll probably be like oh this
21:53 - guy's funny he knows that he's like he's
21:55 - trolling me like that's great um
21:58 - then for every company you interview to
22:01 - you need to add them to like
22:03 - i i have this like spreadsheet there's
22:05 - actually a better way to explain this it
22:07 - needs to look like this like when you're
22:08 - interviewing
22:10 - you just have like you're connecting all
22:12 - these dots and like looking at all of
22:13 - your opportunities
22:15 - so negotiation it's super hard
22:17 - but
22:18 - your salary in negotiation which
22:19 - routinely takes less than five minutes
22:21 - to conclude has an outsized influence on
22:23 - what your compensation is
22:25 - the difference in five thousand or ten
22:26 - thousand dollars to a company is chump
22:28 - change it's nothing it's an hr gimmick
22:31 - so like
22:32 - you need to do a little bit of research
22:34 - about
22:35 - what companies are offering because
22:37 - they game they game the system to give
22:39 - you as little as possible
22:41 - not everybody um
22:43 - but like you just need to you need to
22:44 - look out for yourself
22:46 - also
22:47 - like apply for a wide variety of
22:49 - positions specifically if this is one of
22:52 - your first jobs the only successful way
22:55 - to leverage your salary up higher that
22:56 - i've seen
22:58 - is to use offers from other companies it
23:00 - is not it is not playing like you're not
23:02 - playing anybody like the companies are
23:04 - playing against each other
23:06 - this this guy right here he was a
23:07 - professional poker player who turned
23:09 - into a um
23:11 - a like software engineer
23:13 - and he basically started
23:15 - getting like
23:17 - 80 000 offers and he this whole blog
23:20 - post is how eventually he ended up
23:22 - getting a 250 000
23:24 - offer from like companies playing
23:25 - against each other which i'm not saying
23:26 - like that's the rule
23:28 - i wish i had that kind of offer i don't
23:30 - um
23:30 - but like it's interesting you should
23:32 - definitely go do a little bit of
23:33 - research here
23:35 - um and again it should feel like this if
23:36 - it if it doesn't feel like this you're
23:38 - not you're not hunting for jobs right
23:40 - um
23:42 - let's see i actually don't care about
23:44 - that right now this is actually a really
23:45 - good story but um
23:47 - stephanie holbert kind of talks about
23:48 - her whole like career trajectory so go
23:51 - read this later but i'm kind of wanting
23:53 - to run out of time
23:55 - so again the job hunt this is all like
23:57 - super basic stuff have a resume
23:59 - post on social media looking for a job
24:02 - portfolio side projects and personal
24:04 - site are up to date and operational
24:06 - nothing's weird's on your social media
24:09 - network constantly and apply everywhere
24:12 - and so
24:13 - 34 minutes and we're finally to
24:16 - the fearless interview
24:19 - and it's going to be a lot like the x
24:22 - in the story
24:26 - you may be very surprised at how little
24:28 - is here why
24:29 - because your whole journey in your
24:31 - software development career is what
24:32 - allows you to have fearless interviews
24:34 - it's the side projects it's the open
24:36 - source it's the networking
24:39 - that's what prepares you to fight the
24:40 - boss battle if you're level one and
24:42 - you're trying to go against this like
24:43 - deity dude there's nothing you can do to
24:45 - prepare you just have to go kill pigs in
24:47 - the woods until you level up like
24:49 - um
24:50 - but
24:51 - that being said i will talk a little bit
24:53 - about the logistics of interview because
24:55 - i think it helps a lot
24:57 - there's usually three parts intros some
25:00 - type of challenge and then questions at
25:02 - the end
25:05 - so
25:06 - this is maybe my favorite piece of
25:08 - advice that any of my programmer friends
25:09 - gave me
25:11 - be prepared to answer or volunteer
25:14 - the what is the one thing you built that
25:16 - you're most proud of
25:18 - david said if people can answer this
25:20 - well that's the leading indicator if
25:22 - you'll hire them or not and it's never
25:24 - let him down
25:26 - specifically he looks for do you care
25:27 - about what you're building
25:29 - do you understand what you're building
25:31 - is it something that i personally can
25:32 - connect with
25:34 - um
25:36 - also on intros my little piece of
25:38 - logistical advice if you're signing up
25:40 - for a a or you're if you're trying to
25:42 - interview the company
25:44 - sign up for their service have a
25:46 - critical opinion about what they do
25:48 - understanding a little bit of business
25:49 - context can really drive the
25:50 - conversation when you're interviewing so
25:52 - if it's like an error tracking software
25:54 - sign up for them and then their
25:56 - competitor
25:57 - like one of the biggest things i've ever
25:59 - got dinged on with an interview
26:01 - is
26:02 - i applied to the place i didn't sign up
26:04 - for it and i didn't really know what
26:05 - they do and like the first thing was
26:07 - like tell me about
26:09 - why you wanted to interview with us
26:10 - specifically what did you think about
26:12 - our product
26:14 - and it's like
26:15 - you basically can't walk your way out or
26:17 - around that so like if you do this it's
26:19 - one of the like most insightful pieces
26:21 - that you can do to help prepare
26:23 - the challenge this is like
26:25 - people's most stressed out like
26:28 - if you read the title probably what you
26:30 - thought i was going to talk about is
26:31 - like 300 tips to defeat the programming
26:34 - challenge
26:35 - and the thing is like there are some
26:38 - it's like read this book and do this
26:41 - like but
26:43 - but and that's honestly what it is
26:44 - there's no tricks it's like hard work
26:46 - and then you just have to be ready
26:48 - i will tell you the challenges typically
26:49 - come in three flavors
26:52 - there's usually like the especially if
26:54 - you're doing front end stuff
26:56 - like react or ember or view it's like
26:59 - build a component like an auto complete
27:00 - or a star rating ui
27:02 - which is where things like the
27:03 - javascript 30 come in handy like
27:05 - as you're interviewing just build small
27:07 - dumb things so you're ready to do that
27:10 - the other one is like building a crud
27:11 - app so like specifically with full stack
27:14 - or back-end positions i would expect
27:16 - that you could test drive like basic
27:18 - code operations on an api like that's a
27:20 - pretty common
27:22 - common challenge
27:23 - and so like this is
27:25 - stuff like to do mvc the blog
27:28 - and then another one is explain a
27:30 - solution to hypothetical problem this is
27:33 - easily the most frustrating one because
27:34 - it's super objective no subjective
27:38 - it's like
27:40 - i don't like whiteboard we don't do
27:41 - whiteboarding in our interview process
27:43 - other than like
27:46 - like if you want to like explain a
27:47 - system with like some flow charts
27:49 - there's like a whiteboard available but
27:50 - i think whiteboard coding is
27:52 - just dumb but i mean if you use that
27:55 - it is dumb so don't use that but
27:58 - but if you're interviewing for a place
27:59 - like
28:00 - again i think i don't know if google
28:02 - still does this but like when i read
28:04 - through this it's like part of their
28:05 - coding problem is like pseudocode on the
28:07 - whiteboard so like
28:08 - if you want to work for a place and
28:09 - they're a really good company like
28:11 - sometimes their interview process just
28:12 - has this you need to be prepared for it
28:14 - it's all part it's like part of the game
28:17 - and again
28:19 - read this book cover to cover
28:22 - build dumb things and you'll be fine
28:24 - i've never
28:25 - been in a coding
28:27 - like i've never been an interview so
28:28 - first of all for your first couple of
28:30 - interviews you're gonna do a bad job
28:31 - probably i did like a lot of people do
28:34 - this is just like you don't go from like
28:36 - i learned to play guitar on youtube too
28:38 - i'm playing with celine dion in one set
28:40 - like you just have to play like you have
28:42 - to kind of have you're going to have
28:43 - some interviews you're going to have to
28:44 - kind of figure out how to do things
28:47 - but as long as you're preparing
28:49 - you'll get you'll get better every time
28:53 - yin ying
28:54 - one of my favorite interviewers says
28:56 - practice going through the problem and
28:57 - thinking out loud
28:59 - practice explaining what you're trying
29:00 - to do when you're coding or explaining
29:02 - then coding
29:04 - which is actually a good skill
29:07 - esteban who is another amazing
29:08 - interviewer says practice on things like
29:11 - kakurank be ready to solve an algorithm
29:13 - problem know the difference know how to
29:14 - explain the efficiency of what you're
29:16 - doing
29:17 - which if you want to know how to do that
29:19 - read the green book
29:22 - for me
29:23 - have your ide and program environment
29:25 - ready if you say you do ember you better
29:27 - have in brazil installed and be ready to
29:29 - go if you say you do react have create
29:31 - react app installed and ready to go
29:35 - we usually try to have like bootstrapped
29:36 - environments ready
29:38 - but there was a time when we didn't and
29:40 - there's plenty of people who don't so
29:41 - like if it's like hey i want to see you
29:42 - cuz something and react and you're not
29:44 - set up you're burning like 20 minutes of
29:46 - your interview trying to figure out how
29:47 - to get something happening just like
29:49 - it looks bad even though it shouldn't be
29:51 - bad on you it does look bad
29:53 - and then questions
29:55 - always have a physical list of questions
29:58 - you're wanting to ask the employer
30:00 - make a couple of them personal based on
30:02 - things you've read
30:03 - and make a couple of them very general
30:06 - there's usually some time when the
30:07 - interviewer goes do you have any
30:08 - questions for me
30:10 - on most of our like more senior people
30:13 - this is one of the biggest things that
30:15 - they look at when they interview people
30:16 - is what questions they ask back
30:20 - questions i usually ask which i think
30:21 - are like
30:22 - pretty good to write on your every time
30:24 - list that you can just like have ready
30:26 - is like how do your engineers sell
30:27 - disagreements
30:28 - what is your biggest concern going into
30:30 - the next quarter
30:31 - how this is this one's actually amazing
30:33 - how likely are you to recommend that one
30:35 - of your friends works here
30:37 - because like if they're like
30:39 - uh
30:40 - like if you go back to like where i
30:41 - talked about where can you get the best
30:42 - job is from your friend that you know
30:44 - likes their job
30:46 - so that kind of helps you understand
30:49 - the culture
30:50 - how does communication work here
30:52 - uh describe the company culture this is
30:55 - pretty vague but like
30:57 - if people have like dirty laundry to air
30:59 - they're going to do it here and you're
31:00 - going to know you want to know this
31:01 - ahead of time
31:02 - what's your favorite and least favorite
31:04 - thing about working here
31:05 - how do you know you're doing a good job
31:07 - at work
31:08 - um again and then like have some other
31:11 - ones like have you read that they just
31:12 - closed the big funding round
31:15 - be like house of how's closing the
31:16 - funding round change your hiring process
31:18 - like what is the morale like after you
31:20 - just close this massive series b or
31:22 - something like just be ready to talk
31:23 - about things that these people know
31:25 - about you'll make a personal connection
31:26 - with them and you'll seem like you're
31:27 - already on the team
31:30 - and finally
31:31 - if you use sublime text
31:33 - buy a license before you interview with
31:36 - me
31:38 - if you click save and the police buy
31:39 - sublime cop pops up it's just like
31:42 - losing points for no reason
31:44 - that's kind of personal preference but
31:50 - so again the fearless interview
31:52 - uh review your dossier before every
31:54 - interview that evernote file that you
31:55 - have on this company that's like you've
31:57 - done your research
31:58 - your local coding environment should be
32:00 - set up
32:01 - you've solved hundreds of algorithm
32:02 - problems and done dozens of dummy
32:04 - components and apps which just happens
32:06 - over time
32:09 - you're networking constantly at meetups
32:11 - and conferences you're regularly
32:13 - applying on job boards listing sites and
32:14 - through recruiters and everything else
32:16 - you can think of
32:17 - if you do these things you can get a job
32:19 - at whatever company you want
32:25 - so
32:26 - you're at the x
32:28 - if you're somebody who has this fantasy
32:31 - job
32:32 - i love my job and i think that i'm there
32:34 - like i'm sure like i'll think that about
32:35 - every job from here but like
32:37 - like i just love what i do now i work
32:39 - remotely i've got two kids my water
32:41 - cooler is having goldfish with my
32:43 - three-year-old
32:44 - i love ember that's like i get to work
32:46 - with my favorite technology i love my
32:48 - team
32:49 - help other people get there
32:51 - there's a lot of people that are making
32:54 - less than they're capable of right now
32:57 - getting into a program the technology
33:00 - industry can amplify their quality of
33:03 - life it can help it can be the
33:04 - difference between my family has enough
33:07 - to make it and not so like have us
33:09 - having programming jobs if you have them
33:12 - help bootstrap people to get into these
33:14 - jobs like i think that's part of our
33:15 - responsibility being
33:17 - in a good job is helping other people
33:19 - get there
33:20 - so share your journey
33:22 - there are people looking like this at
33:24 - you no matter what stage of the journey
33:26 - you're on
33:27 - encourage the future heroes
33:30 - and that's where i will end
33:32 - also if you have finished free code camp
33:36 - i will happily interview you and tell
33:37 - you what i think like just to help get
33:39 - the jitters out
33:41 - so message me on social media if there's
33:43 - a flood of people i will find other
33:45 - people to interview you don't worry
33:46 - about it like if this is this is your
33:48 - big stumbling block we can fix that
33:50 - together
33:53 - after 174 slides i'm curious does
33:56 - anybody have any questions
34:06 - me general advice
34:20 - okay so the question was if you already
34:22 - have a job in a non-tech industry it's a
34:26 - pretty good job
34:27 - any specific advice on people wanting to
34:29 - cut over to the tech career i think
34:32 - um there's basically two different
34:34 - trains of thought on this
34:36 - one
34:37 - you need to look at
34:39 - where you are now
34:41 - and where you're going to be
34:43 - in 10 years
34:45 - and if you hopped over to tech and took
34:46 - a job a pay cut
34:49 - in 10 years
34:50 - where will you be
34:52 - that's not i don't think that's a way to
34:54 - decide anything but i think it helps
34:56 - answer some questions going back to some
34:57 - of the other advice i have
34:59 - you bring something unique to the team
35:01 - so like
35:03 - can you tell me what field in general
35:05 - you're in right now for example
35:12 - so if you're doing supply chain
35:13 - management stuff there's likely tech
35:16 - opportunities in your field
35:18 - so when you add oh and i can program
35:21 - onto your current title it will likely
35:24 - give you a raise in the same industry
35:27 - i've seen a lot of people do this where
35:28 - they essentially take their current job
35:31 - they pivot into tech stuff
35:33 - and then they use that as like hey i've
35:35 - already had a tech job and now i'm
35:37 - applying for another senior position
35:39 - so
35:40 - it's a little bit of a longer path to
35:42 - the tech industry but it is a way to
35:44 - like provide like kind of that like no
35:47 - loss in
35:48 - like financial
35:50 - wellness path does that make sense
35:54 - what else
36:08 - i'm trying to think
36:12 - so
36:13 - uh somebody who was a literal author
36:16 - interviewed with me recently
36:18 - um
36:19 - which is not like there's nothing magic
36:21 - about being an author any one of us can
36:23 - go on lean pub and publish like feeding
36:25 - dogs for dummies and like weren't
36:26 - authored right but
36:28 - um
36:29 - like i was actually familiar with their
36:31 - work
36:32 - and we ended up solving some completely
36:35 - unrelated challenge
36:38 - so it's it's weird because it's like
36:41 - the people who really impress me is very
36:43 - seldom about the actual interviewing
36:45 - it's more about like the conversation
36:47 - around it
36:50 - it's a bad answer let me think again
36:53 - um
36:59 - interviewing is very hard not many
37:00 - people impress me
37:02 - that's that's the honest truth that's
37:04 - why i wrote this talk like people so
37:07 - i'll tell you i'll tell you conversely
37:10 - there have been people who have not
37:11 - impressed me in an interview who we've
37:13 - hired
37:14 - that have really impressed me in the job
37:17 - that's probably a better answer so it's
37:18 - like
37:20 - i think that's really
37:22 - we've worked a lot on our interviewing
37:23 - process to make it like we want to
37:24 - capture that
37:26 - um
37:28 - yeah
37:30 - next question
37:41 - so i think like in the green book the
37:43 - general rule of thumb is six months
37:47 - i don't have personal experience with
37:48 - that i think this is
37:50 - so like especially with places like
37:52 - google or facebook like it's pretty much
37:55 - accepted you're not going to make it the
37:57 - first pass
37:58 - so like applying again at a place is not
38:01 - bad the thing that i would tell you if
38:02 - you
38:03 - apply again you need to kind of have
38:05 - some like
38:07 - change to your story
38:08 - so like again this is why i'm a big fan
38:10 - of side projects or if you get another
38:12 - job that kind of helps like
38:15 - like change like i was here and now i'm
38:17 - here and i think i'm a much more
38:19 - compelling case to work with you
38:21 - that type of thing
38:23 - um
38:26 - yeah
38:28 - anything else
38:29 - okay
38:53 - um
39:01 - so
39:02 - this is where um
39:04 - i go and look at their social media
39:06 - this is like a big thing like i want to
39:08 - know who like
39:10 - the people
39:11 - also like you know how i said the best
39:14 - jobs come from your friends
39:15 - the best candidates also come from your
39:17 - friends
39:18 - so i think number one is like if
39:20 - somebody is like i respect bob and bob
39:22 - has recommended sally work here
39:25 - like going into that
39:27 - usually sally is going to be a better
39:29 - candidate than like rando
39:31 - so like any recommendations through
39:34 - relationships are usually very good
39:36 - specifically for
39:38 - people i feel like are gaming me
39:40 - for us in particular like um i look at
39:44 - their so if it's like a coding thing
39:46 - i'll look at their personal github
39:48 - and i actually will be like i see you
39:50 - worked on this project let's work on it
39:51 - together
39:53 - like
39:54 - when people game you they tend to be
39:55 - very good at the interview so you need
39:57 - to do something non-traditional to break
39:59 - up the interview process
40:01 - so like when you when you open an issue
40:02 - on one of their repos and you're like
40:04 - hey for our interview can you explain
40:05 - how this works to me
40:07 - that's they're going to be expecting
40:08 - like the standard challenge
40:10 - so like i think that's where you need to
40:12 - kind of like does that make sense
40:20 - are you able
40:24 - yeah so are you able to do any research
40:26 - ahead of time into your candidates
40:40 - yeah if you are concerned at all i think
40:42 - one really good thing you can do is um
40:45 - specifically if it's a like
40:48 - if you have any red flags i always opt
40:50 - for like can we contract for a while
40:51 - instead that doesn't work for everybody
40:53 - but
40:54 - it's a lot lower risk to bring on
40:55 - somebody as a contractor or consultant
40:58 - and actually get to know like
41:07 - yep and so i think also the thing like
41:10 - if
41:11 - we have a specific technical recruiter
41:13 - and she's great i think if she was here
41:15 - probably one of the things she would say
41:16 - is
41:18 - like
41:19 - going through like where are you
41:20 - sourcing these people from like you
41:22 - should also talk with the people who you
41:24 - currently work with and be like hey is
41:26 - anybody that you know looking to make a
41:27 - change or looking to get into this
41:29 - because again your best
41:31 - candidates will come from people that
41:33 - you know
41:34 - so if you if you love working with
41:36 - somebody you'll probably love working
41:38 - with their friends
41:53 - uh
42:16 - yep and so the comment was like uh
42:18 - you're not miked are you
42:20 - i'll repeat the comment then the comment
42:22 - was like
42:23 - in my experience the hiring pro a slower
42:26 - more thorough hiring process tends to
42:27 - yield higher quality candidates i would
42:30 - say this is true also
42:32 - our hiring process is
42:35 - like
42:36 - at minimum for back to back to back to
42:39 - back one hour coding challenges
42:42 - which i think is brutal like when i did
42:43 - that i was like this is insane
42:46 - but i'll tell you
42:47 - that this team that i'm working on is
42:49 - some of the best software engineers i've
42:51 - ever worked with so it's like probably
42:53 - true
43:10 - um
43:17 - sure so the question was uh like i i'm a
43:21 - pretty private person
43:22 - is it a big turn off for people trying
43:25 - to hire me if all of my social media is
43:27 - locked down
43:29 - i highly see like going back to the if
43:32 - you want to work at macro court be like
43:34 - a macro corp you want to work up startup
43:36 - lee you need to be like a startup person
43:38 - i think that
43:40 - what i would do in your case
43:41 - specifically with like twitter
43:43 - if as you're learning things and reading
43:45 - articles and like you need to treat
43:47 - twitter more as like a knowledge share
43:50 - so like if it's the case where you make
43:52 - a different twitter that's not personal
43:55 - you publish little today i learns and
43:57 - things i think that's actually really
43:58 - important because it will help your
44:00 - employer know that you're engaging with
44:01 - the community
44:03 - and so it's like
44:04 - you don't have to like put like
44:07 - any personal stuff on there like you
44:09 - know i've got kids and i very seldom
44:11 - post
44:12 - kid pictures on twitter ever
44:15 - even though they're adorable there's
44:16 - like a lot of creepy people out there
44:18 - and i don't want
44:19 - you know want to cross across those
44:20 - paths
44:21 - but i do think it's very important if
44:23 - you're trying to get a new job
44:25 - specifically
44:26 - you have to have some community presence
44:29 - and so i think
44:31 - i think about this a lot like
44:32 - if you have a house and you have like
44:35 - the massive privacy fence around the
44:37 - house every time somebody drives by
44:39 - they're gonna think it's a creepy creepy
44:41 - family creepy house even though you
44:42 - could just be valuing your privacy
44:44 - i think it's a matter of how you present
44:45 - yourself so it's like
44:47 - if you like have the nice yard and the
44:49 - nice face but the privacy fence in the
44:51 - back i think that's basically what you
44:52 - want you have to have something that
44:54 - people can see so they can get to know
44:55 - you
44:56 - i think that is pretty important but you
44:58 - don't need to do it in a way that puts
45:00 - your family at risk at all
45:03 - okay
45:15 - so the question was what social media is
45:17 - best for the tech industry
45:20 - unequivocally in my experience that
45:22 - would be twitter
45:24 - it depends on the industry like
45:26 - linkedin is very important for a lot of
45:28 - people but like nobody i know uses it
45:32 - instagram is never important unless
45:34 - you're like trying to sell products or
45:36 - wanting people to know how cool you are
45:40 - and facebook tends to be the same it's
45:41 - like usually highly personal stuff so
45:43 - like i don't know of any like i'm i'm
45:45 - friends with all of my co-workers on
45:47 - twitter but i'm not friends with any of
45:49 - my co-workers on facebook if that kind
45:51 - of explains
45:56 - any other questions
46:05 - so how would i get started on twitter
46:16 - so
46:17 - if you go on my github there's 150 open
46:21 - repos
46:22 - i open source literally everything i did
46:25 - it because i was too cheap to pay
46:27 - and it's turned out to be one of the
46:29 - biggest like recruitment
46:31 - ways that people try to recruit me
46:33 - so people literally do like
46:35 - automated searches through github on
46:37 - what you star and what you have and like
46:40 - use that to automate their recruiting
46:41 - process
46:42 - like open source as many things as
46:44 - you're comfortable with
46:45 - specifically who runs the free code camp
46:47 - twitter
46:50 - there's
46:51 - there's probably some way they could
46:53 - help you get started too if you like
46:54 - give a lightning talk then they can
46:56 - promote it and then i'll retweet it like
46:58 - it just kind of has to start like that
47:01 - so like another big thing is conferences
47:03 - if you go to conferences and meetups try
47:05 - to follow people they'll usually follow
47:06 - you back
47:08 - so like i have 700 something followers
47:12 - which has been only through like i know
47:15 - most of them
47:16 - so like you just have to go network like
47:18 - a madman
47:20 - or a mad person
47:22 - if we
47:24 - um
47:25 - any other questions
47:28 - was this helpful at all
47:30 - okay great
47:31 - i when i was like looking at this i'm
47:33 - like i feel like a little bit of false
47:34 - advertising
47:36 - since i called it the fearless interview
47:37 - but i don't i thought it was useful or
47:40 - people are just going to hate it so i'm
47:41 - glad you all enjoyed it
47:43 - cool
47:45 - [Applause]

Cleaned transcript:

hello so today i'm going to be talking about interviewing which is really just the tip of a very large iceberg which we're talking about the whole iceberg i guess this talk is not just for you if you're looking for a job but if you interview people i'm ryan lebove i currently work for envoy where we challenge the status quo of workplace technology it's a bay area company super fun most of the time i'm doing ember and node stuff but since it's a startup i do a little bit of everything this talk kind of started at a certain point in my career i was started interviewing more and more people as we're trying to hire and i would see people make the same like i don't want to say mistakes but it's like i had to look and i found really interesting things about people but they just weren't coming across in the interview so like i would have to do a lot of like poking in their github looking on their social media and asking them a lot of questions actually get kind of the best to shine through i was like i wish i could give a talk and kind of just like put it on the table from like my perspective and helped people get a job so given that we have 45 minutes i'm going to kind of lay out some goals i want to give you more or less a map to getting the job you want this is not like just your first job but this is like a career trajectory that you should be able to keep coming back to so i don't care if you're a junior dev or if you're like you have a really good job and you're looking for something else or if you have a job and you're trying to help get people to come work for you i think there's something for everybody the hard thing here is there's like thousands of pieces of advice i could say about this and like it's trying to distill and present in a way that makes sense so i'm going to start with the story this may seem a little bit unrelated to what we're talking about but i promise it's not there's this really indie kind of anime short film called the reward on vimeo and it starts off with these like two super ordinary dudes sitting at sitting in a village and this like completely crazy hero rolls through the town they're both like man i want to be like this person and on the way out of town the the hero drops this map with an x on it and like they fight over the map and they end up like let's go on the journey together and they start off in like some really basic places and they like find these magic weapons they start taking on new challenges a lot of time unsuccessfully a lot of time having to like bail their crazy friends who are like doing it with them over and over again but like eventually your friend that you're on the journey with like kind of helps you back and you start like having some wins and taking on bigger risks and like before you know it you're like riding on an ocean of lava on a fleet of narwhals um having completed some epic quest and like what what we see as the journey progresses is like in each frame these people kind of like change and like they don't see this but we see them becoming the heroes that they originally saw riding through their village and like they just keep fighting like crazy bosses and blindly charging towards this x and when they get there there's nothing there it's just literally a big x on the ground which is all the map advertised really but there's this big mirror and they kind of realize along the way it was like the journey the journey has made them into these heroes and that was like the reward right and then like it ends with them riding through the same town with like some dopey looking kids looking at them and like to these kids they're like the heroes now and these kids are like how do i how do i become like you and you see one of them slowly like slip the map out of the satchel with the x on it sorry the whole journey for them and the kids like repeat the same thing over again this is exactly like my journey of programming it's like a it's a little bit ridiculous for like the premise of this talk but we'll see you'll see if you don't already see uh so kind of like revisiting the goals for today given this map we have with the big x i want to help you see like where you are and like help debunk some of the myths of the journey uh to help you get the job this is all leading up to the fearless interview some antigoals i'm not going to teach you computer science in 30 minutes it's not possible and i'm also not going to help you fake your way into a job so anyways let's get started the quest map i kind of broke it down into six six parts one is learning how to code two is getting your first tech job three is preparing to look for a new job four is the job hunt five what we're leading up to is the fearless interview and six is kind of a postscript of being at the x and throughout this talk i've talked to literally all of my friends who code and had them just give advice that they found helpful along the way so it's uh you'll see quotes from a lot of a lot of randos that i really respect so learning how to code this is your magic weapons that you find it's interesting i was talking with john moses and one of my friends and he's actually giving a talk about this in a few weeks so i'm not going to like try to go over it all he's got a great series on it and he's going to speak more about it in about a week or two or three i don't know but my tldr is like learn a language build internet things meet developers share what you build i personally learned how to to code on this this book called the ruby on rails tutorial where we built twitter from scratch free code camp is great there's another one by colt steele i highly recommend you build yelp from scratch that's not the point though it's just like it's a lot less important where you start as long as you pick something and finish it that's kind of my point for learning how to code after your boot camp experience this is where the real work begins you need to build something on your own if you don't know what to build i recommend starting with a blog because it's like really easy to like you know what a blog is and you can build a very small or very complex one you can ship it people can read it you have users you have something to talk about like my friend jordan smith says be honest keep learning and talk about what you learn so after you build something cool this is where you start signing up for lightning talks free code camp okay cjs the ruby group wherever you can talk you need to share with share what you learn just keep building things get as far as you can on projects make them dumb make them fun make them something you use there's this guy ira glass he has this little short story called the gap it's about creatives about how like when you start in a new field you like you're like i want to be a painter it's like i see these amazing paintings and then you paint this just like terrible thing it's like how do i get from here to here and everybody goes through this it's exactly the same with programming and his answer is do a lot of work a huge volume of work and that volume of work is what helps you close the gap and eventually the quality of your work will catch your ambitions so if you're still stuck on this west boss has this thing called javascript 30 you build 30 small things in javascript over 30 days you'll probably make it to day 13 and be building something really interesting that you like and like you'll just go off on this tangent that's what you want that's great that's like a sign that you're doing the right thing so the boss battle for learning how to code can you get in github do you have like a side project that you can point to that's like i built this thing and it's on the internet now i can prototype stuff in html and css i can solve basic coding challenges with javascript and also i understand the basic workings of an api this is like a pretty good start which segues into getting your first tech job so especially if you go through free code camp you've built some stuff on your own you want to get paid like you want to start working in tech and so before your first step tech job i personally felt like everything i did was just a string of terrible failures with programming and then somehow like as soon as you learn your first tech job this is where you feel like you're on the fleet of narwhals cruising through the lava sea it's just like i don't know it's really big it feels a lot like getting your big break but a question i get a lot is how do i know i'm ready for my first job in the industry so this is where i have to remind you everybody started somewhere everybody was a junior nobody came out just programming so my rule of thumb is if you can build something useful you're probably hireable to somebody you don't have to know everything you just have to be able to add value to the team that you're joining that's like a really important thing be very open about your current skill level you don't have to hire wide about anything but also don't undersell yourself like especially if you come from a job that has like a customer service background a lot of programmers after 10 years turn into like sea creatures and they like can't talk to people so like you bring very valuable skills to the table just by being able to engage with your customers it's like these are very valuable things that you bring to the team so i really like queen carmen says it's okay to say you don't know something much better than making something up specific warnings for your first job in tech you want to make sure the team you're joining is ready to bring on juniors some questions i suggest asking one do you have other juniors on your team two are there people on staff who were a junior but now are no longer juniors that are still with you three how do what kind of mentorship do you have for juniors how do you make sure that they continue to progress and four are there clear job bands how and how often would we reevaluate whether i'm still a junior and i'll say personally envoy this is something we always come back to and it's like i think it's hard for companies to get this right and so it's like don't feel bad if you're at a company it's like we're trying to do the mentorship program the important part is just to keep asking yourself these questions and trying to make sure the answer continues to improve john mosesman says get a friend that can get you a job honestly this is probably the hardest step in the whole process so harder than like getting building that compiler or doing weird video game stuff is getting your first job that's like pretty deep for somebody who's been in the industry probably at least 10 years so boss battle first tech job from this job you're going to want things on your resume you're going to want to launch something monitor actual software maintain it deal with customers these are all skills that you won't get from anywhere else specifically you want to make sure you're continuing to gain more experience collaborating with other programmers this is something that's very unique to actually having a programming job and at the end of this you really want to make sure that you no longer consider yourself a junior so that one leads me to my next point is preparing to look for a new job this there's a lot of overlap between the first job but this is where i find is actually on my personal journey was like the hardest point because i worked for a company for maybe six years and like at some point i felt really stuck and it took me a long time to figure out how to continue to ramp up my skills to get ready for the next stage in my career um and again going back to our metaphor like this is where you're kind of like i'm kind of a grizzled veteran already i probably don't see this if you've been working in a job for one to two years you've changed you're shipping software whereas before you are not this is this is like massive changes in you um so i break this down into three parts and i'll go over them one is to prove your t which we'll talk about because that sounds really weird slash r no context two is get the junior out of your title and three is improve your coding chops so there's this idea of tshaped people somebody came up with it i don't know who they are but if you think about the letter t it's got like a horizontal long top with a long vertical stem and essentially what you're wanting to say is i have been experienced i have been exposed to a lot of things in programming but i'm really good at this one thing um and this is where like tshaped people i will hire these people all day every day and so this is where you want to say like yeah i've made a couple apis i've done like some devops things and i've built some front ends but i really love amber js and that's where i spend most of my time contributing um and so really this is like being going from a junior to just a software engineer this is probably the hardest thing figure out what you're interested in and then work on developing the stem of your tea so let's say you're really into x how do you prove that some things that i recommend is like open source you'll probably be using tools that revolve around x so like if you like d3 go sign up for the d3 repo look at other libraries built on d3 start trying to contribute back to these things write an article comparing d3 to 3js i don't think that's actually a good comparison but anyways complete like one serious side project that lets that shine blog about this uh how do you do a nontrivial d3 project from scratch even if you feel like it's repetitive and people have done it it's still important for you to do it um and just for example when i was like i'm really into ember js i was like how do i actually prove that to people and then i went and looked this is open source i've done and launched projects on my own here's projects that i've contributed to actual full side projects articles talks it's just like if this was a court case it would be really easy to prove that i really like ember.js it's a very specific thing but when somebody's like i need somebody to do ember js and i'm like here's my resume they're like i want you to help me so like that's really what you where you want to get getting junior out of your title uh what's the easiest way to get junior out of your title stop calling yourself a junior that seems like really dumb advice but like after you get your first job drop it you're not a junior anymore you're always just a software engineer every organization is going to have different standards from junior to senior so don't try to sell yourself to something just like explain like i'm an engineer here's what i love some things you can do to really help you with this also is have a regular practice of learning from people and resources that are better than you and practice the things you learn and then focus on one thing at a time i'm just going to throw a couple things that i've historically found really helpful i'll publish these slides and you can refer to them later if you're new to computer science and have a nontraditional background the base cs podcast is amazing it breaks down usually like pomp and academic things like data structures and b trees and traversal of recursive blah blah blah as like breaks it down into ways it's really easy to understand you don't know js it's like a great like i do javascript every day and i want to know more about this eric elliott writes on on medium a lot his stuff's great there's this book called pooter which is practical object oriented design in ruby it's like there's a lot of great like architecture books you can start reading and starting and start like improving like different domains of your programming skills rubytopas fun fun function is a great javascript one there's more this guy's super grumpy but his screencasts are great upcase is a another one that's like really good this is where i stole the like get the junior out of your title it's literally like you watch really good programmers pair on hard problems and you end up learning an amazing amount by doing this and when you're comfortable enough which should be now read the open source repos you use it's my one soros reference i promise so open source projects are literally like playbooks about how to make the things you like so you can just like read how to do it and it's like oh my gosh i can make d3 now i don't know why i chose d3 i never use c3 and learn how to use a debugger i don't that's a hard one but it's useful and also learn how to do tdd same so and another thing is like when you're ready to actually start applying for jobs you need to make sure that your your coding chops are like up to snuff which is like more of a matter of discipline do an hour of hacker rank every day read the cracking the code interview book this book is amazing like nobody remembers all this stuff but if i had to look for a new job i would get a sixpack of red bull and read this every one weekend and like that's where i would start imposter's handbook is another great one and then interview cake again i'll post all these later so like if you're looking for specific resources reach out to me i'll help you match like what i think would make the most sense for your ad okay so preparing to look for a job you can prove to me you're interested in one or two very specific technical things this is a very important thing you have a consistent practice of learning from high quality sources like hour a day two hours on the weekend whatever it is like continue to learn things and you can also easily solve a wide variety of programming challenges okay now we're on to the job hunt this is all about networking positioning and negotiation i really just want to put this in my slides it's not really relevant to what we're talking about [Laughter] so networking heroic eric says go to meetup and conferences this is where i've gotten most of my jobs from alex an engineer i work with says meet actual engineers where you're applying message me and buy me coffee i will tell you exactly what things are like this is great advice like i actually knew somebody who the way that they would start applying for a job they would find an open source repo for a company they want to apply for start opening issues and pull requests against it and use that to like apply like what open source have you done well have you seen your projects you didn't update this and i did like it's an okay way to do that this is also extremely um opinionated but in my opinion the best jobs come from direct recommendations then applying for companies you like and then literally everything else and i'm not gonna like poo poo on recruiters or job boards or anything they're all great but if you have a friend who will say i like working at my job that's huge like that's somebody you want to work with that is like the easiest way to know you're getting into a situation that you'll like um so again make connections contribute to open source go to meetups go to conferences speak at meetups and conferences if you can apply for contracting positions at companies this is easy because if you do a bad job they don't have to pay you after a week like be like hey i'd love to do some consulting for you contracting for you and then twitter like a madman or mad person the last time i tweeted that i was out of a job i had three job offers from twitter just because i tweeted about programming stuff this is like an amazing thing um so positioning what kind of company do you want to work for what matters to you do you want to be remote does salary matter is a tech stack matter does your team matter this kind of needs to inform what type of jobs you start to look for startups big companies consultancies going out on your own uh do you want to work for like ou or a government thing when you kind of have this like if you want to work at macro corp like update your linkedin don't have weird stuff on social media buy some nice business casual clothes do whatever these people do like be like them this is the this is the job you want this is the lifestyle you want like figure out how these people work and just like like emulate them in a way that's not like i'm forgetting who i am but like these are the people you want to fit in with so like start fitting in with them now if you want to work at start uply like buy a macbook and a hoodie uh like but you say like start taking pictures of your latte and post them on instagram these are like these will help you fit in and kind of understand how these people think and work again know how to fit in know how to be yourself know how to stand out um so when you're applying when you're like working on companies you're like i want to apply it start uply or micro corp macro corp um like you need to kind of do some research on these companies what are their core values their mission statement what is their financial health key personnel google the company and figure out what what they say on their social media figure out who their competitors are and when you start interviewing like i know people know that they're interviewing with me at least a week ahead of time it's like it's really easy to figure out what i'm into so if you start like if you open up with like react versus ember joke i'll probably be like oh this guy's funny he knows that he's like he's trolling me like that's great um then for every company you interview to you need to add them to like i i have this like spreadsheet there's actually a better way to explain this it needs to look like this like when you're interviewing you just have like you're connecting all these dots and like looking at all of your opportunities so negotiation it's super hard but your salary in negotiation which routinely takes less than five minutes to conclude has an outsized influence on what your compensation is the difference in five thousand or ten thousand dollars to a company is chump change it's nothing it's an hr gimmick so like you need to do a little bit of research about what companies are offering because they game they game the system to give you as little as possible not everybody um but like you just need to you need to look out for yourself also like apply for a wide variety of positions specifically if this is one of your first jobs the only successful way to leverage your salary up higher that i've seen is to use offers from other companies it is not it is not playing like you're not playing anybody like the companies are playing against each other this this guy right here he was a professional poker player who turned into a um a like software engineer and he basically started getting like 80 000 offers and he this whole blog post is how eventually he ended up getting a 250 000 offer from like companies playing against each other which i'm not saying like that's the rule i wish i had that kind of offer i don't um but like it's interesting you should definitely go do a little bit of research here um and again it should feel like this if it if it doesn't feel like this you're not you're not hunting for jobs right um let's see i actually don't care about that right now this is actually a really good story but um stephanie holbert kind of talks about her whole like career trajectory so go read this later but i'm kind of wanting to run out of time so again the job hunt this is all like super basic stuff have a resume post on social media looking for a job portfolio side projects and personal site are up to date and operational nothing's weird's on your social media network constantly and apply everywhere and so 34 minutes and we're finally to the fearless interview and it's going to be a lot like the x in the story you may be very surprised at how little is here why because your whole journey in your software development career is what allows you to have fearless interviews it's the side projects it's the open source it's the networking that's what prepares you to fight the boss battle if you're level one and you're trying to go against this like deity dude there's nothing you can do to prepare you just have to go kill pigs in the woods until you level up like um but that being said i will talk a little bit about the logistics of interview because i think it helps a lot there's usually three parts intros some type of challenge and then questions at the end so this is maybe my favorite piece of advice that any of my programmer friends gave me be prepared to answer or volunteer the what is the one thing you built that you're most proud of david said if people can answer this well that's the leading indicator if you'll hire them or not and it's never let him down specifically he looks for do you care about what you're building do you understand what you're building is it something that i personally can connect with um also on intros my little piece of logistical advice if you're signing up for a a or you're if you're trying to interview the company sign up for their service have a critical opinion about what they do understanding a little bit of business context can really drive the conversation when you're interviewing so if it's like an error tracking software sign up for them and then their competitor like one of the biggest things i've ever got dinged on with an interview is i applied to the place i didn't sign up for it and i didn't really know what they do and like the first thing was like tell me about why you wanted to interview with us specifically what did you think about our product and it's like you basically can't walk your way out or around that so like if you do this it's one of the like most insightful pieces that you can do to help prepare the challenge this is like people's most stressed out like if you read the title probably what you thought i was going to talk about is like 300 tips to defeat the programming challenge and the thing is like there are some it's like read this book and do this like but but and that's honestly what it is there's no tricks it's like hard work and then you just have to be ready i will tell you the challenges typically come in three flavors there's usually like the especially if you're doing front end stuff like react or ember or view it's like build a component like an auto complete or a star rating ui which is where things like the javascript 30 come in handy like as you're interviewing just build small dumb things so you're ready to do that the other one is like building a crud app so like specifically with full stack or backend positions i would expect that you could test drive like basic code operations on an api like that's a pretty common common challenge and so like this is stuff like to do mvc the blog and then another one is explain a solution to hypothetical problem this is easily the most frustrating one because it's super objective no subjective it's like i don't like whiteboard we don't do whiteboarding in our interview process other than like like if you want to like explain a system with like some flow charts there's like a whiteboard available but i think whiteboard coding is just dumb but i mean if you use that it is dumb so don't use that but but if you're interviewing for a place like again i think i don't know if google still does this but like when i read through this it's like part of their coding problem is like pseudocode on the whiteboard so like if you want to work for a place and they're a really good company like sometimes their interview process just has this you need to be prepared for it it's all part it's like part of the game and again read this book cover to cover build dumb things and you'll be fine i've never been in a coding like i've never been an interview so first of all for your first couple of interviews you're gonna do a bad job probably i did like a lot of people do this is just like you don't go from like i learned to play guitar on youtube too i'm playing with celine dion in one set like you just have to play like you have to kind of have you're going to have some interviews you're going to have to kind of figure out how to do things but as long as you're preparing you'll get you'll get better every time yin ying one of my favorite interviewers says practice going through the problem and thinking out loud practice explaining what you're trying to do when you're coding or explaining then coding which is actually a good skill esteban who is another amazing interviewer says practice on things like kakurank be ready to solve an algorithm problem know the difference know how to explain the efficiency of what you're doing which if you want to know how to do that read the green book for me have your ide and program environment ready if you say you do ember you better have in brazil installed and be ready to go if you say you do react have create react app installed and ready to go we usually try to have like bootstrapped environments ready but there was a time when we didn't and there's plenty of people who don't so like if it's like hey i want to see you cuz something and react and you're not set up you're burning like 20 minutes of your interview trying to figure out how to get something happening just like it looks bad even though it shouldn't be bad on you it does look bad and then questions always have a physical list of questions you're wanting to ask the employer make a couple of them personal based on things you've read and make a couple of them very general there's usually some time when the interviewer goes do you have any questions for me on most of our like more senior people this is one of the biggest things that they look at when they interview people is what questions they ask back questions i usually ask which i think are like pretty good to write on your every time list that you can just like have ready is like how do your engineers sell disagreements what is your biggest concern going into the next quarter how this is this one's actually amazing how likely are you to recommend that one of your friends works here because like if they're like uh like if you go back to like where i talked about where can you get the best job is from your friend that you know likes their job so that kind of helps you understand the culture how does communication work here uh describe the company culture this is pretty vague but like if people have like dirty laundry to air they're going to do it here and you're going to know you want to know this ahead of time what's your favorite and least favorite thing about working here how do you know you're doing a good job at work um again and then like have some other ones like have you read that they just closed the big funding round be like house of how's closing the funding round change your hiring process like what is the morale like after you just close this massive series b or something like just be ready to talk about things that these people know about you'll make a personal connection with them and you'll seem like you're already on the team and finally if you use sublime text buy a license before you interview with me if you click save and the police buy sublime cop pops up it's just like losing points for no reason that's kind of personal preference but so again the fearless interview uh review your dossier before every interview that evernote file that you have on this company that's like you've done your research your local coding environment should be set up you've solved hundreds of algorithm problems and done dozens of dummy components and apps which just happens over time you're networking constantly at meetups and conferences you're regularly applying on job boards listing sites and through recruiters and everything else you can think of if you do these things you can get a job at whatever company you want so you're at the x if you're somebody who has this fantasy job i love my job and i think that i'm there like i'm sure like i'll think that about every job from here but like like i just love what i do now i work remotely i've got two kids my water cooler is having goldfish with my threeyearold i love ember that's like i get to work with my favorite technology i love my team help other people get there there's a lot of people that are making less than they're capable of right now getting into a program the technology industry can amplify their quality of life it can help it can be the difference between my family has enough to make it and not so like have us having programming jobs if you have them help bootstrap people to get into these jobs like i think that's part of our responsibility being in a good job is helping other people get there so share your journey there are people looking like this at you no matter what stage of the journey you're on encourage the future heroes and that's where i will end also if you have finished free code camp i will happily interview you and tell you what i think like just to help get the jitters out so message me on social media if there's a flood of people i will find other people to interview you don't worry about it like if this is this is your big stumbling block we can fix that together after 174 slides i'm curious does anybody have any questions me general advice okay so the question was if you already have a job in a nontech industry it's a pretty good job any specific advice on people wanting to cut over to the tech career i think um there's basically two different trains of thought on this one you need to look at where you are now and where you're going to be in 10 years and if you hopped over to tech and took a job a pay cut in 10 years where will you be that's not i don't think that's a way to decide anything but i think it helps answer some questions going back to some of the other advice i have you bring something unique to the team so like can you tell me what field in general you're in right now for example so if you're doing supply chain management stuff there's likely tech opportunities in your field so when you add oh and i can program onto your current title it will likely give you a raise in the same industry i've seen a lot of people do this where they essentially take their current job they pivot into tech stuff and then they use that as like hey i've already had a tech job and now i'm applying for another senior position so it's a little bit of a longer path to the tech industry but it is a way to like provide like kind of that like no loss in like financial wellness path does that make sense what else i'm trying to think so uh somebody who was a literal author interviewed with me recently um which is not like there's nothing magic about being an author any one of us can go on lean pub and publish like feeding dogs for dummies and like weren't authored right but um like i was actually familiar with their work and we ended up solving some completely unrelated challenge so it's it's weird because it's like the people who really impress me is very seldom about the actual interviewing it's more about like the conversation around it it's a bad answer let me think again um interviewing is very hard not many people impress me that's that's the honest truth that's why i wrote this talk like people so i'll tell you i'll tell you conversely there have been people who have not impressed me in an interview who we've hired that have really impressed me in the job that's probably a better answer so it's like i think that's really we've worked a lot on our interviewing process to make it like we want to capture that um yeah next question so i think like in the green book the general rule of thumb is six months i don't have personal experience with that i think this is so like especially with places like google or facebook like it's pretty much accepted you're not going to make it the first pass so like applying again at a place is not bad the thing that i would tell you if you apply again you need to kind of have some like change to your story so like again this is why i'm a big fan of side projects or if you get another job that kind of helps like like change like i was here and now i'm here and i think i'm a much more compelling case to work with you that type of thing um yeah anything else okay um so this is where um i go and look at their social media this is like a big thing like i want to know who like the people also like you know how i said the best jobs come from your friends the best candidates also come from your friends so i think number one is like if somebody is like i respect bob and bob has recommended sally work here like going into that usually sally is going to be a better candidate than like rando so like any recommendations through relationships are usually very good specifically for people i feel like are gaming me for us in particular like um i look at their so if it's like a coding thing i'll look at their personal github and i actually will be like i see you worked on this project let's work on it together like when people game you they tend to be very good at the interview so you need to do something nontraditional to break up the interview process so like when you when you open an issue on one of their repos and you're like hey for our interview can you explain how this works to me that's they're going to be expecting like the standard challenge so like i think that's where you need to kind of like does that make sense are you able yeah so are you able to do any research ahead of time into your candidates yeah if you are concerned at all i think one really good thing you can do is um specifically if it's a like if you have any red flags i always opt for like can we contract for a while instead that doesn't work for everybody but it's a lot lower risk to bring on somebody as a contractor or consultant and actually get to know like yep and so i think also the thing like if we have a specific technical recruiter and she's great i think if she was here probably one of the things she would say is like going through like where are you sourcing these people from like you should also talk with the people who you currently work with and be like hey is anybody that you know looking to make a change or looking to get into this because again your best candidates will come from people that you know so if you if you love working with somebody you'll probably love working with their friends uh yep and so the comment was like uh you're not miked are you i'll repeat the comment then the comment was like in my experience the hiring pro a slower more thorough hiring process tends to yield higher quality candidates i would say this is true also our hiring process is like at minimum for back to back to back to back one hour coding challenges which i think is brutal like when i did that i was like this is insane but i'll tell you that this team that i'm working on is some of the best software engineers i've ever worked with so it's like probably true um sure so the question was uh like i i'm a pretty private person is it a big turn off for people trying to hire me if all of my social media is locked down i highly see like going back to the if you want to work at macro court be like a macro corp you want to work up startup lee you need to be like a startup person i think that what i would do in your case specifically with like twitter if as you're learning things and reading articles and like you need to treat twitter more as like a knowledge share so like if it's the case where you make a different twitter that's not personal you publish little today i learns and things i think that's actually really important because it will help your employer know that you're engaging with the community and so it's like you don't have to like put like any personal stuff on there like you know i've got kids and i very seldom post kid pictures on twitter ever even though they're adorable there's like a lot of creepy people out there and i don't want you know want to cross across those paths but i do think it's very important if you're trying to get a new job specifically you have to have some community presence and so i think i think about this a lot like if you have a house and you have like the massive privacy fence around the house every time somebody drives by they're gonna think it's a creepy creepy family creepy house even though you could just be valuing your privacy i think it's a matter of how you present yourself so it's like if you like have the nice yard and the nice face but the privacy fence in the back i think that's basically what you want you have to have something that people can see so they can get to know you i think that is pretty important but you don't need to do it in a way that puts your family at risk at all okay so the question was what social media is best for the tech industry unequivocally in my experience that would be twitter it depends on the industry like linkedin is very important for a lot of people but like nobody i know uses it instagram is never important unless you're like trying to sell products or wanting people to know how cool you are and facebook tends to be the same it's like usually highly personal stuff so like i don't know of any like i'm i'm friends with all of my coworkers on twitter but i'm not friends with any of my coworkers on facebook if that kind of explains any other questions so how would i get started on twitter so if you go on my github there's 150 open repos i open source literally everything i did it because i was too cheap to pay and it's turned out to be one of the biggest like recruitment ways that people try to recruit me so people literally do like automated searches through github on what you star and what you have and like use that to automate their recruiting process like open source as many things as you're comfortable with specifically who runs the free code camp twitter there's there's probably some way they could help you get started too if you like give a lightning talk then they can promote it and then i'll retweet it like it just kind of has to start like that so like another big thing is conferences if you go to conferences and meetups try to follow people they'll usually follow you back so like i have 700 something followers which has been only through like i know most of them so like you just have to go network like a madman or a mad person if we um any other questions was this helpful at all okay great i when i was like looking at this i'm like i feel like a little bit of false advertising since i called it the fearless interview but i don't i thought it was useful or people are just going to hate it so i'm glad you all enjoyed it cool
