With timestamps:

00:00 - in this video I'm going to cover random
00:02 - numbers and the parse int
00:04 - function create a random number between
00:07 - zero and one with math.random
00:11 - now this will create a number between
00:14 - zero inclusive and One exclusive meaning
00:18 - it could be zero but it could never be
00:21 - one so if you look in the console this
00:23 - is the random number that we got and if
00:25 - you run every time I run that I'm going
00:27 - get a different
00:28 - number
00:30 - now if you want to make sure it's a
00:32 - whole number up to a certain number you
00:34 - can multiply it by 20 or or any number
00:38 - and then you can round it
00:44 - down so I'm going to do math. floor and
00:48 - inside math. floor we're going to do
00:50 - math.random times 20 just going to put
00:53 - another parentheses
00:55 - there and we got seven now math. floor
00:58 - math. random time 20 is going to give us
01:00 - a number between 0 and 19 because
01:04 - remember it's always rounding down so it
01:06 - could round down to zero but you never
01:07 - going to quite get 20 so it's not going
01:09 - to it can't round down to 20 it would
01:12 - always round down to 19 so this is
01:14 - between 0 and 19 if you want to generate
01:16 - a random number that falls between two
01:19 - specific numbers and that doesn't
01:21 - necessarily start with zero you can use
01:23 - a specific formula let me show you a
01:25 - function that uses the formula okay so
01:28 - here's the random range function we're
01:30 - going to pass in a Min we're going to
01:31 - pass in a Max and then we are going to
01:34 - return this this is the formula here
01:36 - that we're going to use it starts off
01:38 - the same as what we had up here we have
01:41 - math. floor math. random and we're going
01:44 - to multiply by this thing we're going to
01:47 - multiply by Max minus Min + one and then
01:51 - to this to this whole part right here
01:54 - we're just going to add the minimum so
01:56 - right here I'm calling the random range
01:58 - function I'm passing in one and n so
02:00 - this should give us a number between one
02:02 - and n a random number between one and N
02:05 - so there's four every time I run this
02:06 - it's going to be another one six and you
02:08 - can see it's never going to give us a
02:10 - number outside of that range okay the
02:13 - next thing I want to talk about is the
02:14 - parse int function that just takes a
02:17 - string and converts it to a number as
02:20 - long as the string can be converted to a
02:22 - number so if I
02:23 - do per int and I pass in this string 007
02:28 - OR7
02:30 - it's going to convert it to just the
02:31 - number
02:32 - seven just going to run that and you can
02:35 - see at the very end here seven it's
02:38 - taking off the leading zeros and just
02:40 - converting it to a seven if the first
02:42 - character cannot be converted to a
02:44 - string like T let's see what happens
02:47 - there it's going to give us n an not a
02:49 - number so this can to be especially
02:51 - helpful when you're getting numbers from
02:53 - apis or Json that end up being a string
02:57 - you can convert them to a number now you
02:59 - can also pass in a second argument which
03:02 - would be the base of the number in the
03:03 - string so if I have 11 here but then I
03:06 - pass in the argument two we're going to
03:08 - convert this from base two to an integer
03:12 - that's in base 10 so if I run that and
03:15 - you can see three because one one in
03:18 - binary that's base two would equal three
03:22 - well thanks for watching my name is
03:23 - boars don't forget to subscribe and
03:25 - remember use your code for good

Cleaned transcript:

in this video I'm going to cover random numbers and the parse int function create a random number between zero and one with math.random now this will create a number between zero inclusive and One exclusive meaning it could be zero but it could never be one so if you look in the console this is the random number that we got and if you run every time I run that I'm going get a different number now if you want to make sure it's a whole number up to a certain number you can multiply it by 20 or or any number and then you can round it down so I'm going to do math. floor and inside math. floor we're going to do math.random times 20 just going to put another parentheses there and we got seven now math. floor math. random time 20 is going to give us a number between 0 and 19 because remember it's always rounding down so it could round down to zero but you never going to quite get 20 so it's not going to it can't round down to 20 it would always round down to 19 so this is between 0 and 19 if you want to generate a random number that falls between two specific numbers and that doesn't necessarily start with zero you can use a specific formula let me show you a function that uses the formula okay so here's the random range function we're going to pass in a Min we're going to pass in a Max and then we are going to return this this is the formula here that we're going to use it starts off the same as what we had up here we have math. floor math. random and we're going to multiply by this thing we're going to multiply by Max minus Min + one and then to this to this whole part right here we're just going to add the minimum so right here I'm calling the random range function I'm passing in one and n so this should give us a number between one and n a random number between one and N so there's four every time I run this it's going to be another one six and you can see it's never going to give us a number outside of that range okay the next thing I want to talk about is the parse int function that just takes a string and converts it to a number as long as the string can be converted to a number so if I do per int and I pass in this string 007 OR7 it's going to convert it to just the number seven just going to run that and you can see at the very end here seven it's taking off the leading zeros and just converting it to a seven if the first character cannot be converted to a string like T let's see what happens there it's going to give us n an not a number so this can to be especially helpful when you're getting numbers from apis or Json that end up being a string you can convert them to a number now you can also pass in a second argument which would be the base of the number in the string so if I have 11 here but then I pass in the argument two we're going to convert this from base two to an integer that's in base 10 so if I run that and you can see three because one one in binary that's base two would equal three well thanks for watching my name is boars don't forget to subscribe and remember use your code for good
