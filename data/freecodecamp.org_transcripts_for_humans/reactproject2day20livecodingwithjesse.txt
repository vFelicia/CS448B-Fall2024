With timestamps:

00:08 - hey everybody its Jessie and today I
00:18 - guess who will start out I want to start
00:22 - out by explaining what I've found out
00:25 - since yesterday about some of the things
00:30 - we were talking about but then also some
00:32 - of the errors that have been reported
00:34 - that others have been getting and I
00:37 - finally started getting them too and I
00:39 - think I know why so it would be
00:44 - worthwhile to go over that and then that
00:47 - way maybe we can solve the problem
00:49 - finally or at least at least work around
00:54 - it after that we're gonna work on this
01:00 - scroll kind of the scroll spy thing
01:06 - where it'll this will highlight as we
01:11 - scroll down whatever section that we're
01:13 - on we'll be able to click on one of
01:14 - these and take us to the correct section
01:20 - alright so first let's let's go over
01:24 - some of these errors and I also had said
01:27 - in the description for this video and
01:29 - for in the the tweet that we were going
01:32 - to talk specifically about property
01:36 - initializer syntax so if you want to
01:40 - check that out in the react Docs if you
01:45 - go under the handling events page about
01:50 - halfway down a little more than half way
01:52 - down they go over the property
01:53 - initializer syntax and we're using this
01:56 - in places and this is causing an error
02:00 - so basically it's instead of binding
02:06 - this and then in this case its handle
02:12 - click and then calling handle click but
02:14 - or anything you know we really want to
02:15 - call instead of doing that we're using
02:18 - an arrow fun
02:21 - which is basically automatically taken
02:25 - care of binding this and it works so
02:28 - that the pages obviously work so for
02:32 - instance on this page we're using we're
02:36 - using that several times to make this
02:38 - work we can see that it is working we
02:41 - can click around and there's no errors I
02:46 - check the console earlier and that no
02:48 - errors at all so it works the problem is
02:51 - when we're we're using standard J s to
03:03 - help keep our code nice and clean and
03:06 - always formatted the same way so that's
03:10 - where the errors are coming from it's
03:13 - it's not that it's not working it's just
03:15 - that that's an advanced the react Doc's
03:19 - say experimental it's an experimental
03:27 - feature in JavaScript so these are the
03:33 - errors that we're getting you make this
03:36 - a bit bigger and let's see so it's
03:43 - looking something like this
03:44 - so it's saying like onmouseover is not
03:48 - defined handle close is not defined
03:51 - right even we it state is not defined
03:54 - when we try to define state and kind of
03:58 - the shorthand way that we've been doing
04:00 - at at times instead of inside the
04:03 - constructor so all of these errors are
04:08 - basically the same thing it's using that
04:10 - property initializer syntax so initially
04:17 - when we first started this project and
04:20 - even in our last project I think we did
04:23 - the same thing we weren't getting errors
04:27 - at least I wasn't getting errors and
04:29 - some of you are getting errors
04:32 - I started getting errors when I upgraded
04:36 - yarn to a new newer version and a little
04:45 - before that I also upgraded NPM although
04:50 - that that didn't matter for me but
04:51 - you'll see in a minute I'll explain why
04:53 - that probably matters for some of you so
04:57 - I was using a very outdated version of
05:00 - yarn and I didn't realize that at first
05:03 - because I kept doing the auto updates
05:05 - and then it hit me like wow I'm I'm
05:08 - being asked to update this very
05:10 - frequently and so I finally checked the
05:12 - versions and realized that every time I
05:14 - did that auto update it didn't change
05:16 - anything I was still in the same version
05:17 - so I was running yarn like version 18
05:20 - and now I think I'm on 24 whatever the
05:23 - latest one is I'm on that so what I
05:27 - think happens and this is based on going
05:31 - through some issues and create react app
05:34 - and issues with es lint
05:38 - so I spent way too much time researching
05:41 - this but finally what I think happened
05:45 - is that something changed in both yarn
05:47 - and NPM so if you went from NPM for
05:51 - something you know to NPM version 5 I
05:55 - think 5 the latest it also the same
05:59 - thing happen whereas they're handling
06:01 - one of one or more of the dependencies
06:06 - differently than they were before
06:08 - at least that's I don't know technically
06:12 - how yarn and NPM do things and what
06:16 - exactly change but that seems to be the
06:19 - conclusion on that I found like I said
06:25 - from looking at the issues that other
06:27 - people have had on the github
06:29 - repositories for create react app and I
06:33 - think it was for es LAN or perhaps like
06:36 - for babel something like I can't
06:39 - remember what the other repository was
06:40 - but that was the conclusion basically
06:43 - and some of the issues had been closed
06:45 - in particular in
06:46 - correcta react app there's an issue
06:49 - basically the same thing that's
06:51 - happening to us and it's been closed and
06:53 - the solution which the workaround given
06:56 - was revert back to NPM version four you
07:00 - know for dot whatever and the reasoning
07:04 - given was you know version five there's
07:07 - there's some different stuff going on
07:08 - five we don't recommend using that in
07:10 - production and that was that was it
07:16 - so couldn't really find a solution and I
07:22 - don't really want to go back in revert
07:25 - versions right that's not a great
07:27 - solution either because not only would I
07:29 - have to revert but anybody that wanted
07:31 - to try to run this without errors would
07:34 - have to revert so that's not really a
07:36 - good solution so I think that leaves us
07:41 - with two two ways we could go the first
07:46 - way is we could just switch everything
07:48 - back to a less experimental syntax which
07:53 - has already been suggested so Matt had a
07:55 - pull request that had did that among
07:57 - other things and some of you have
08:00 - already suggested that in the live chat
08:02 - or in comments to the videos so that's
08:05 - one way that's probably the easiest way
08:07 - I mean it would be a little bit of a
08:09 - pain I guess to go back and do that and
08:12 - I know Matt's pull request had done that
08:14 - but we've we've changed something since
08:17 - then so I can't just pull that in I'd
08:19 - have to deal with the merge conflicts as
08:22 - well and the other way that we could go
08:29 - is try to really figure out what's going
08:33 - on and and fix the problem so I went
08:37 - down that path a little a little bit
08:40 - earlier so I actually did pool Matt's
08:45 - pool request and he ejected create react
08:48 - app in that pool request right so my
08:53 - thought was hey if we eject that I can
08:57 - go in and change the
08:59 - figuration of what we're doing with with
09:01 - es lint and and fix it now also what I
09:07 - had done is I pulled it in I resolve the
09:09 - merge conflicts but I purposely left in
09:12 - some of the newer syntax so whereas Matt
09:16 - had changed it back to the old version I
09:19 - wanted to test to see if we could get it
09:21 - to work so I left some of it in and I
09:26 - didn't have any success in trying to
09:28 - change configuration no I will say this
09:31 - I'm not I'm not really that experienced
09:34 - with you know dealing with configuring
09:38 - you know babble and es LAN and standard
09:42 - js2 all work together so you know maybe
09:48 - I if I worked on it more I maybe could
09:51 - get it to work but at this point I think
09:55 - I'm probably just gonna switch
09:56 - everything back so and so I do that if
10:00 - you want to submit a pull request use
10:05 - this no verify flag on the end so if you
10:09 - edit a file that doesn't have any of the
10:13 - the property initializer syntax it will
10:16 - pass the test so you can see I try to so
10:25 - I changed this glossary and home right
10:29 - and I committed that and everything
10:32 - worked that's because the standard Jas
10:37 - is only checking the files that had
10:38 - changed so the only files the change
10:41 - were these I'm not using that syntax so
10:43 - it works and this explains why it wasn't
10:48 - consistent like the errors that people
10:50 - were getting you know in particular
10:52 - these errors were not consistent so I
10:57 - committed that everything was fine but
10:59 - then a few minutes later I
11:06 - I tried to commit after changing this
11:10 - planning ijs where we are using some of
11:14 - that newer syntax and you can see I got
11:18 - the errors again all right we have
11:20 - handle next handle pre not defined so if
11:25 - you're changing something and you're not
11:27 - using that syntax you should be fine to
11:29 - commit otherwise use that know verify
11:34 - flag at the end for now I don't really
11:37 - want everyone doing that all the time
11:40 - because then you know we we won't have
11:42 - very formatting but I know that this
11:46 - actually works so I'm not super worried
11:49 - about it now so what I will do is
11:53 - convert everything I I really I'd rather
11:57 - not because I do like the the newer
11:59 - syntax better but at this point like I
12:06 - said I just I think I've already spent
12:08 - way too much time on this issue trying
12:10 - to find a better solution and if I would
12:14 - have just changed everything over a
12:15 - couple days ago then this wouldn't
12:19 - really have been a problem I wouldn't
12:23 - have even known that it was a problem so
12:27 - that's where that's at so I know some of
12:31 - you have told me that you've had these
12:33 - issues so they will be I guess not not
12:38 - really fixed but will work around them
12:40 - will avoid them by going with the older
12:43 - syntax for now all right so any any
12:53 - input you know that you'll have any any
12:56 - ideas in regard to that I'm definitely
12:58 - open open to that so probably at some
13:02 - point maybe tomorrow I'll change the
13:06 - I'll change the syntax but for now
13:16 - we're just gonna we're gonna go ahead
13:18 - and everything we do we're just gonna
13:20 - commit with that no verified flag and I
13:25 - just remembered I'm gonna take a minute
13:29 - here on my other screen to check my mic
13:32 - level I had a comment on one of the
13:35 - recent videos that someone couldn't hear
13:39 - me so I'm gonna double-check
13:54 - okay looks like the level the level it
13:58 - should be fine so my output volume is
14:01 - all the way up on for the settings for
14:05 - my Mac and also for the settings in OBS
14:08 - so I'm not exactly sure what was
14:11 - happening but I don't think there's
14:15 - anything else I can do about it on my
14:17 - end so let me know if the sounds alright
14:19 - for you all but I definitely I wanted to
14:22 - at least check it out double check and
14:25 - make sure it wasn't it wasn't anything
14:27 - that I was going wrong so let me check
14:32 - the live chat quickly just say hello to
14:34 - everyone before we get into the coding
14:37 - I'll bring over the Pomodoro timer and I
14:42 - also want to apologize yesterday I had
14:44 - said that the the secondary stream on
14:47 - Instagram would be available to view for
14:50 - 24 hours afterwards and it wasn't so I
14:53 - got some sort of error and it said that
14:55 - the stream wasn't available I think it
14:58 - was because I waited too long to hit the
15:00 - share button because it's happened to me
15:01 - at least one time before so I apologize
15:06 - for that if anybody was looking for the
15:08 - stream and couldn't find it I'll try to
15:12 - remember to hit that share button right
15:15 - away this time
15:27 - okay so Sebastian in the in the live
15:33 - chat is saying pray for Barcelona so if
15:37 - I remember correctly Sebastian your you
15:40 - are in in Spain right not correct so
15:46 - anyway yeah definitely yeah I'll keep
15:51 - keep Barcelona in my prayer is everybody
15:53 - affected by by what happened it happened
15:56 - today so I I just I read a little bit
15:58 - about it earlier so from what I
16:01 - understand correct me if I'm wrong
16:04 - someone drove a car into a group of
16:07 - people or a van so I didn't get to see
16:10 - what the if there were you know
16:13 - casualties from that I am assuming that
16:16 - at the very least there's some serious
16:18 - injuries so that's about all I know
16:22 - about it but yeah definitely I will I'll
16:27 - be praying for everybody okay cool so so
16:33 - but Sebastian is in Spain but not close
16:35 - to Barcelona so well I'm glad to hear
16:37 - that you're all right Sebastian and yeah
16:44 - so anyway so anyway everybody watching
16:47 - who who engages in prayer
16:51 - definitely definitely be good to get
16:54 - some prayers going for that situation
17:00 - alright so for same ones
17:03 - oh goodness Sebastian says that the
17:07 - reports are saying that they're anywhere
17:09 - from 1 to 13 people deceased from from
17:14 - what had happened so I'm gonna take just
17:20 - a second to pray silently for those
17:22 - people just
17:36 - all right
17:39 - okay let's see we try to go all uh I'm
17:48 - gonna get started now and I guess if
17:52 - anybody's tracking what's happening if
17:54 - there's anything like any you know
17:57 - important news or anything comes up
17:59 - about that you know keep us up-to-date
18:01 - I'm not I'm not going to be able to
18:03 - follow it while I'm doing the stream but
18:07 - just have had a few kind of basic
18:11 - questions that I'll answer now since
18:14 - they're at the top of the stream I don't
18:15 - want to lose them later on
18:18 - braxton ask Jeff see if you completed
18:20 - the free code camp course like
18:22 - everything or what parts actually no I
18:24 - haven't completed it so I haven't even
18:29 - finished the front end certificate so
18:31 - I'm slightly ashamed to say that I have
18:33 - not finished that so you know I go
18:37 - through it and you just get usually what
18:39 - happens is I get busy with with work and
18:41 - I just I don't I don't work on it like I
18:46 - should and now that I'm doing the
18:48 - Udacity course the react nanodegree I've
18:51 - been putting off the free code camp
18:53 - stuff so I don't know I don't think I
18:58 - have my free code camp profile linked
19:00 - anywhere right now I probably should do
19:02 - that and then you all can check out my
19:03 - progress I really I do intend on going
19:06 - through the rest of the free code cam at
19:08 - some point but definitely not so after
19:10 - I'm done with my react course which
19:11 - should be I think November I think the
19:15 - course ends in November so it'll be a
19:17 - little while but also okay there's
19:23 - another question but you'll cover that
19:24 - in the live chat so thank you
19:36 - yeah okay so Sebastian that says so you
19:39 - are saying the tests are failing because
19:41 - of newer he s six syntax yes it's
19:44 - actually boa it would be what are they
19:47 - calling es 6 + es 7 so I'm not really
19:50 - sure what at what stage the property
19:54 - initializer syntax is right now I was
19:58 - reading some things about the stage but
19:59 - I think some of the stuff I was reading
20:01 - was old so I'm not sure that it that
20:05 - it's still up to date but but in any
20:09 - case that's basically the the issue
20:14 - alright so for now I want to kind of
20:18 - move forward with with this and you know
20:22 - maybe maybe we'll find a better solution
20:25 - to it
20:27 - but at least for now we can work on this
20:30 - so what I've was working on and what we
20:34 - left off with yesterday was we need to
20:37 - find we need to track the scroll
20:39 - position so we need to know two things
20:44 - we need to know the the position on the
20:48 - page of each one of these there h3 tags
20:52 - so we need to know that position just in
20:57 - terms of I guess they're pixels from the
21:03 - top from the top of the page and then we
21:07 - need to track the scroll position so we
21:11 - could get the scroll position pretty
21:16 - easily so you'd see I just doing some
21:19 - things in the console here so we can do
21:22 - document dot body scroll top okay and
21:27 - this gives us I believe it's the number
21:31 - of pixels from the top that we've
21:33 - scrolled so if you could see we
21:40 - we're at the top it comes back as zero
21:43 - scroll down a bit and comes back 587 so
21:52 - we've got one covered the next thing we
21:56 - need to know is the the position of
21:59 - these elements so actually I had a
22:02 - little trouble so I assumed like hey I
22:03 - can just get the scroll top position of
22:05 - this and they kept returning zero so I
22:07 - looked into it and on mdn I was it was
22:13 - saying basically this doesn't work on
22:16 - every element so if the element is non
22:23 - scrollable or if it has no overflow its
22:29 - scroll top is always zero
22:44 - so
22:48 - I'm just I'm wondering what the kind of
22:57 - what we should do
23:08 - I kind of want to see if I could just
23:09 - change the overflow and make it work in
23:12 - here I didn't really matter I guess what
23:23 - I said it too
23:29 - now we're still getting ya are still
23:35 - getting that so maybe I need to target a
23:40 - different a different element
23:54 - yeah let me try to target a different
23:56 - element that might be the easiest thing
24:00 - to do unless I'm using that close up in
24:07 - the wrong way
24:31 - okay Matt says be careful about using a
24:34 - spy scroll for on page load if you have
24:39 - dynamic data updating the page and it
24:41 - changes the height you might get the
24:43 - wrong body height I should have this
24:51 - page should be alright just in terms of
24:55 - I don't think we'll have any dynamic
24:59 - data for this page it's this is just
25:02 - going to be pretty straightforward but
25:06 - wool I mean we'll we'll see if we have
25:09 - issues with it so let me I'm just going
25:15 - to take this ID and put it on this div
25:22 - just to see if we can get a different
25:28 - result
25:32 - no we're not I I'm wondering if I'm
25:37 - using the wrong thing if this maybe is
25:40 - not what I should be looking for I know
25:45 - I've done all this before I've done it
25:52 - all before but I I I kind of think I did
25:55 - it in jQuery before so I'm not sure that
25:57 - my my old code would be very much help
26:01 - to look it up
26:21 - basically what I'm looking for is I need
26:24 - the the Y position of an element an HTML
26:31 - element on the page
26:46 - mmm
27:11 - get boning box yeah I was each other
27:14 - let's see
27:49 - okay so this is one way to do it
28:02 - okay
28:18 - I there's got to be some way to get
28:21 - right right to this right this is what I
28:24 - want but you would think there would be
28:27 - some way that I could just get this oh
28:32 - well we can do this for now
28:59 - so let's
29:07 - let's move this back onto our h3 so it
29:14 - should work we'll double check make sure
29:18 - that it does work okay
29:23 - that's working so here's what we need to
29:26 - do on on page on component amount we're
29:39 - going to get the values we're gonna
29:44 - these values for each one of those h
29:46 - threes then on scroll we're going to get
29:55 - the user scroll position once the scroll
29:58 - position gets to this top coordinate for
30:04 - one of those sections then we'll change
30:11 - the state so that one of these will be
30:16 - highlighted so let's that's the plan so
30:25 - let's let's do that let's go over to our
30:31 - code and make it a bit bigger and
30:41 - so for now let's see
30:51 - okay so our step index
31:01 - I think our step index just gets a
31:06 - number okay so that's just zero index
31:11 - number so in this case
31:36 - I guess we could just get all the eights
31:39 - trees on the page I was thinking we'd
31:41 - have a different ID for each h3 but I
31:44 - don't know that we don't know that we
31:47 - need to do that
32:16 - oops
32:19 - okay so Matt had typed in a live chat
32:22 - try doing offset height and I had done
32:27 - that before but I kept getting 46 and
32:34 - there's no way that this is 46 pixels
32:38 - from the top so that's why I didn't go
32:41 - with that
32:44 - so maybe I'm doing wrong
32:52 - hey so anyway so aim aim highs here if
32:57 - you're it's been a while how's it going
33:00 - right now we're working on the scroll so
33:04 - we're gonna get the scroll position and
33:08 - we're gonna change basically this it's
33:12 - going to highlight this menu in the side
33:15 - based on what section we're on in the
33:17 - world so you'll be able to click on a
33:18 - section and then it'll take you right to
33:21 - that section actually we will need our
33:25 - anchor tags right because there are our
33:30 - IDs yeah so let's give these IDs
33:45 - sign ahead
33:52 - budget
34:01 - proof
34:18 - services okay
34:26 - now see if we have I don't think we yeah
34:36 - we don't have a component didn't mount
34:39 - in here yet
34:40 - so let's add that in Odin did mount and
34:55 - that's not sure if we'll need that but
35:04 - in terms of being able to access this
35:07 - but we might cements will put it in
35:09 - actually probably will because we need
35:12 - to access state let's see
35:42 - I'm trying to think of a way that I
35:47 - could get all these without having to
35:49 - manually call the get the ID so maybe
35:58 - see
36:10 - that's AG h3
36:21 - get elements by tag name okay cool so
36:39 - yeah we can get you can just get this
36:45 - and most of the ID ID something okay
37:06 - okay Alberto has given another another
37:15 - option here that we can try out and that
37:24 - might be the winner offset top that's
37:28 - what I think that's what we were looking
37:29 - for so yeah that's what we're looking
37:40 - for so that's the right value Thank You
37:42 - Alberto I knew I knew that there was
37:47 - something that would give us what we
37:49 - wanted so that's it so to get the height
37:54 - or I'm sorry to get the the position of
37:59 - an element in terms of how many pixels
38:01 - from the top it is then offset top is
38:05 - the way to go if you need more
38:12 - information just get bounding client rec
38:15 - will give you a lot of information but
38:17 - we don't need that in our case okay
38:21 - great
38:22 - so
38:27 - all right so here's what I'd like to do
38:31 - I'd like to get when within component
38:36 - did mount I'd like to get all the h3
38:40 - elements and then save see I guess we
38:49 - could save that as key value pairs with
38:55 - the ID and the whatever value we get
39:01 - from offset top and that should be all
39:07 - the information we need about those
39:11 - those age tags okay does that make sense
39:15 - if not let me let me know in the live
39:18 - chat
39:36 - okay slightly off what we're doing right
39:39 - now but so Patrick has been kind of
39:43 - giving updates on trying to replicate
39:51 - those errors we were talking about at
39:53 - the beginning of the the stream and he
39:55 - couldn't replicate it but then Patrick
39:59 - installed node version eight point four
40:02 - point zero and now the errors are
40:05 - occurring so yeah so that's that's no
40:12 - good I mean anybody that's keeping their
40:14 - stuff up to date is gonna get errors so
40:16 - that's not what we want all right so
40:20 - let's let's go with
41:08 - what's gonna console.log that the double
41:11 - check make sure that that works before
41:14 - we go forward
41:15 - cuz that's pretty important shoot and
41:20 - it's not giving us anything why not
41:50 - the
41:55 - all right either we're doing something
41:56 - wrong maybe it's not the right place to
41:58 - put it I'm I'm not even getting any
42:07 - errors the not really much I can I can
42:15 - do
42:23 - okay now Patrick went back to an earlier
42:27 - version of note he's still getting the
42:30 - heirs yeah it this is it's it's
42:34 - frustrating it was a fresh ending
42:37 - experience for me Sebastian says he's on
42:43 - note eight point two point one and not
42:46 - getting any errors so yeah it's just it
42:54 - it's really difficult to nail down
42:57 - exactly exactly what's going on I mean
43:02 - all I know is that I update and I get
43:07 - the errors and I never got them before
43:19 - all right so good thanks so am i had the
43:23 - suggestion just log a string and see if
43:26 - component did mountain is even getting
43:27 - called and no it's not what what's going
43:32 - on
43:40 - three items in my feelings
44:40 - you're not getting
44:44 - it's it's alright so I'm not seeing
44:47 - anything but I'd saying that I'm having
44:50 - items hidden by filters but I I'm not
44:55 - sure that I have anything filtered
45:13 - maybe this is who knows let's see no
45:23 - that's not all right well for some
45:28 - reason we're not we're not getting
45:33 - component did not
45:41 - see if we can get anything to show up
45:52 - that's that's really odd
46:25 - you
47:22 - all right so
47:26 - not sure
47:41 - I'm not sure why I can't get a console
47:43 - look I'm checking in the live chat now
47:45 - see what would you or thinking
48:18 - Yosef says today no thumbs down we
48:22 - really should celebrate
48:23 - ya know thumbs down yet we'll see I
48:25 - usually always get one or two
48:40 - okay let's see what's going on yeah it
48:44 - should be yeah I mean that this should
48:51 - be what we proposed only to fall whoa
49:03 - okay so that fixed it
49:13 - okay somehow I had I guess turn these
49:20 - off anyway
49:22 - Wow so it looks like this worked so
49:34 - let's see what did I change let's go
49:38 - back to what I initially had to see if
49:40 - it works
49:50 - there we go all right
49:58 - okay
50:03 - never use
50:26 - so this is what is now our we name that
50:30 - headers so we should be able to grab
50:39 - what's that again okay it's just ID so
50:42 - we can grab the ID and then with the ID
50:47 - we could get that
50:51 - what was it offset top yeah we can use
50:54 - offset top to get that value right
51:04 - now the david said it was probably a
51:06 - chrome update or something that caused
51:08 - that it's so annoying when things like
51:10 - that change actually now you say that i
51:12 - did update chrome but yesterday i think
51:16 - i updated on this computer yesterday so
51:20 - that's that's possible because I don't
51:23 - remember changing that but I do remember
51:27 - that I haven't seen any errors in the
51:28 - console for a while so that was probably
51:32 - what
51:40 - all right so now that we've gotten
51:44 - through that kind of a silly silly
51:47 - problem now let's go through us we're
51:53 - gonna do the headers
52:14 - I think with the best way to go through
52:16 - these headers would be
52:42 - we met
52:55 - I guess we could map right oh I know I
52:59 - was corrected in an earlier stream but
53:02 - we can map over an array correct that's
53:05 - the proper use of map I think I tried to
53:08 - map over an object before and that was
53:11 - not the way to do it
53:31 - so Hale says can you invite me to the
53:34 - slack chat I don't think you need an
53:37 - invite you just need the the link
53:40 - correct it should so Blake pasted a link
53:46 - in there in the live chat so if you copy
53:49 - that and then replace the asterisk with
53:52 - asterisk with a period then it should
54:00 - work let me know if that link does not
54:02 - work it says you okay so it does say you
54:04 - need an invite that's weird is anybody
54:09 - else does anyone else have that same
54:10 - issue of needing an invite
54:25 - whoa patrick said linting fixed PR
54:31 - incoming patrick if you really fixed the
54:35 - linting i'm gonna be super happy and
54:37 - like very very impressed because this
54:40 - has been what like we've been streaming
54:43 - for less than an hour and it took me
54:46 - probably fifteen minutes to explain what
54:49 - the problem is so that's very impressive
54:56 - it's like you've you've probably fix
55:00 - this issue in less time than it took me
55:02 - to explain the issue
55:17 - all right here is an invite link to join
55:22 - the slack thing I pasted it in the live
55:24 - chat try that out and let me know if
55:26 - that works alright so anyway where where
55:36 - is that I got distracted okay okay so we
55:44 - want to do
55:57 - in the States
56:02 - it is
56:39 - mmm
57:14 - okay yep I think that's what I want to
57:17 - do so we can check that out
57:19 - nope that's not gonna work all right
57:48 - wait a second
57:53 - yeah it was I I D was the I was there
57:59 - right
58:25 - see
58:58 - is this just a syntax thing did I mess
59:00 - that up at least
59:28 - No
59:35 - it's
60:00 - visited
60:18 - okay
60:39 - maybe do I need
61:02 - do I even need this
61:13 - okay
61:17 - thank you too
61:19 - maybe I didn't need that
61:43 - it's
61:54 - there's my error message this is my
61:57 - error message headers done that it's not
61:59 - a function
62:37 - and today I just can't I can't do
62:41 - anything without getting an error
62:48 - how about
63:18 - - it
63:52 - right I say my says do array is array by
63:56 - station
64:35 - let's see
65:33 - let's see
65:54 - Serio give us
66:02 - okay so thanks I'm Berto for that
66:07 - suggestion and then I don't need yeah
66:10 - correct okay just so yeah so then we
66:13 - don't really need when in here I was
66:19 - using the the ID to get that element but
66:24 - since it's returning elements anyway
66:26 - I don't need that I can just go straight
66:28 - to straight to this so
66:56 - okay so still getting this Heather's map
66:59 - that map is not a function
67:27 - I actually was I thinking I didn't want
67:31 - to set up my state like that I wanted to
67:33 - have
67:49 - let's see
67:52 - let's just loop through this in a simple
67:57 - way
68:32 - all right so I'm gonna be old-fashioned
68:35 - here for for a second
69:00 - yeah
69:30 - did I mess up in a for-loop
69:57 - I'm pretty sure I did not mess up the
69:59 - forlán
70:39 - yeah
70:46 - it's your iteration condition uh I did
70:52 - myself a for loop I'm very so good good
70:56 - look it up man I just that may be my
71:04 - most embarrassing moment on a live
71:07 - stream that I I messed up a for loop by
71:10 - putting the putting the greater than
71:15 - sign instead of the less than sign it's
71:19 - not like I haven't done that before but
71:20 - I've never done that live on YouTube
71:23 - alright I just looked over at my
71:32 - analytics for this video I was expecting
71:35 - everybody to just quit watching at this
71:36 - point but it looks like it didn't happen
71:46 - okay Matt said you might be able to use
71:48 - a for each loop instead of for loop yeah
71:50 - I figured I could use something else but
71:52 - I just thought like I'm just gonna go
71:56 - like to the simplest thing I can think
71:57 - of just to test it out so that could
72:03 - probably be refactored I'm actually I'm
72:05 - still not exactly sure why I couldn't
72:07 - get mapped to work I I don't know so
72:16 - does doesn't matter for loops are fun so
72:21 - hey look we have all the values that we
72:23 - want now we just need to put that I'm
72:27 - gonna put that in state so that we can
72:31 - can access that
72:38 - actually doing need that in state let me
72:45 - think about our next step needs to be so
72:46 - now that we can get we can get that we
72:50 - need to compare waste we need have us
72:57 - scroll handler to listen for the scrolls
73:03 - and then compare okay yes so probably
73:29 - in scroll position should also be in
73:33 - state
73:46 - and we could just start that at zero
73:50 - because that's probably where it'll be
73:53 - anyway
73:55 - okay let's get rid of a lot of this
74:57 - so I'm just thinking of trying to think
75:00 - ahead trying to think if I even need the
75:10 - the IDs to be in state
75:21 - I'm not sure if I'd I need them to be in
75:24 - stay right now
75:37 - and their positions
75:58 - okay so
76:00 - Tomer Hey welcome I don't know that I've
76:04 - seen you in the live chat before but
76:06 - welcome and also a good call so summer
76:10 - says document dog get elements by tag
76:13 - name returns an HTML collection not an
76:17 - array that probably explains why I
76:19 - couldn't use map so thank you for that
76:24 - sebastian is also saying could you do
76:27 - something like this if the scroll
76:28 - position of the first h 3 is less than X
76:33 - set step index to 1 which is the first
76:36 - step if the second H 3 is less than X
76:43 - set step index to 2 and so on
76:53 - yeah yeah Sebastian that's I think
76:59 - that's the way to go
77:01 - John also asked our props not usually
77:03 - the way to go first before using state I
77:06 - keep seeing this so I'm not sure John
77:11 - I'm actually I I frequently do you state
77:16 - just two stores store data in state and
77:20 - I don't know that I necessarily need to
77:23 - I guess I don't really know what the the
77:28 - best way to do it is but with some some
77:34 - things obviously you do want to be in
77:36 - state like if you want if you want
77:40 - things to happen when values change then
77:43 - she put it in state
77:56 - what they're doing
78:02 - [Music]
78:12 - what's the
78:22 - the new what's it called the new es6
78:25 - syntax is a spread operator can I use
78:29 - that in this case to add things on
78:49 - I just kind of freaked I forget what the
78:52 - sin let me look up the syntax on the
78:53 - other screen because it would be cool to
78:55 - use this properly in the video I was
79:03 - just I was just going over this fright
79:10 - night does it maybe like two weeks ago I
79:11 - was going over this so I don't use it
79:14 - often enough to remember how to use it
79:54 - it's something like this right it's
79:58 - really we want to combine
80:05 - combined arrays so
80:23 - I guess I could just say that and see
80:25 - I'm pretty sure that's not all that I
80:28 - need but let's see yeah
80:37 - oh yeah cuz I'm not this this is not an
80:44 - array so I guess I could just go with
80:52 - whoops that's not
81:27 - oh cool Andrew says in the official
81:34 - documentation Facebook has a great
81:36 - section on how to determine when you'll
81:37 - need state it really helped make sense
81:40 - of things for me all right good to know
81:43 - so if you're curious about when to you
81:46 - state and when not to you state check
81:48 - that out I made I should probably check
81:51 - that out as well since since I'm not
81:55 - able to really explain how I decide when
81:58 - to you state and when not to you state
82:00 - then I think I need more information on
82:05 - that I mistake he need to okay cool
82:19 - can cat-eye good thanks Sebastian that
82:29 - was exactly what I needed I was thinking
82:34 - in my head like what is it do I use push
82:36 - or pop or what you know those are things
82:41 - to handle a raise and I'm trying to
82:43 - remember what's the one that would add
82:46 - it to the end but this works this well
82:54 - yes
83:13 - loose
83:22 - what
83:24 - you know come on
83:56 - what is going on here
84:23 - this is like
84:31 - okay that's it King cab returns an array
84:39 - which does not use AIDS Day
85:22 - all right let's see I'm getting some
85:26 - some suggestions here in the live chat
85:29 - so let me go through some of these by
85:34 - Patrick says can Cat returns an array
85:36 - thereby not mutating state
85:51 - and
85:56 - you just build the array in the for loop
85:59 - and then add it to state all right cool
86:02 - I'm Barrett oh yeah that makes a lot of
86:04 - sense
86:11 - all right cool let's do that so I don't
86:17 - remember if I read America's coming out
86:19 - loud or not but I'm better just said why
86:21 - not just create the array in the loop
86:23 - and then add the array after that to
86:31 - state and that that that makes a lot of
86:34 - sense so let's do that
87:15 - way what was Sebastian say
87:23 - okay Sebastian says do do the same as in
87:30 - component we'll update next crops next
87:33 - state and then consider position from
87:37 - next state yeah you need to set the
87:41 - state outside of the loop yeah all right
87:51 - let's get this out of here
88:12 - okay
89:39 - okay sorry I'm not usually accused of
89:44 - talking too much in my streams I feel
89:46 - like I'm not really saying very much of
89:49 - all what I'm typing so anyway what so
90:02 - what I'm doing here is we have basically
90:06 - we've made an empty array here that's
90:08 - our header positions that's going to
90:09 - hold our values inside this loop we are
90:14 - pushing the values here our offset top
90:18 - values into the array so then we're
90:24 - gonna call this set state and let's see
90:32 - we don't need this anymore we need
90:35 - header positions is going to be
90:47 - their positions
91:04 - okay
91:22 - so you need to do right
91:29 - and probably don't need to initialize
91:34 - that into right let me just see what it
91:35 - says first Oh didn't get an error that's
91:41 - a good sign
92:10 - really
92:15 - sweet look at that no dang it it's not
92:19 - the right values okay but we have
92:21 - something all right so we've
92:25 - successfully put something into state
92:28 - all right man
92:33 - this is this has been rough this it's
92:38 - like every single step something goes
92:41 - wrong all right so why why is this
92:45 - happening he had a position oh because I
92:51 - put zero and I needed I alright that's
92:55 - I'm happy about that that's easy to fix
93:15 - yeah there we go
93:17 - right so here's all our positions
93:20 - wonderful so just just in case you
93:26 - didn't fall along this maybe especially
93:28 - if you're new to JavaScript the the
93:33 - error that I was having was that I I put
93:36 - 0 here which was giving me the first
93:40 - element in our headers array and then
93:44 - getting the offset top of that element
93:47 - which is why we had the same value for
93:49 - each one what I needed to do was put I
93:53 - here right and I is going to be 0 1 2 3
93:59 - 4 each time this loop goes it's gonna go
94:05 - up by 1 and that gave us the value that
94:08 - we needed ok wonderful
94:20 - are you haven't looked at the live chat
94:23 - for a few minutes and the did you tell
94:27 - someone that I'm using notepad
94:40 - yeah okay so Sebastian said doing it
94:42 - like I'm doing now I don't need this
94:44 - yeah you're right I didn't I don't need
94:47 - these and okay I figured I may have left
94:54 - the console log in there as well but I
94:56 - think I got them all out
95:08 - Oh slip slip sack no had he caught my my
95:14 - error with putting the the zero in here
95:17 - instead of the ISO thanks for catching
95:18 - that sorry I didn't look over and see it
95:20 - so you must have caught that right away
95:22 - so guess good job on that
95:37 - okay so sue sahib is saying I'm not
95:42 - understanding anything anybody who can
95:43 - help alright so I'm not I'm not exactly
95:48 - sure what your level of understanding is
95:52 - in terms of like JavaScript or react or
95:54 - anything so I'm not exactly sure where
95:58 - to start but we're using a JavaScript
96:04 - framework called react to build this so
96:07 - it's not exactly just plain JavaScript
96:09 - but within this what we're doing here is
96:14 - mostly just plain JavaScript and that
96:18 - we're just grabbing the header tags all
96:21 - of the header tags on the page we have
96:24 - this gives us an array of the the
96:27 - elements or not exactly an array but
96:32 - this gives us all our elements and then
96:35 - we're just looping through those
96:36 - elements and we want to get the position
96:39 - of each of those elements on the page in
96:41 - terms of how many pixels from the top of
96:44 - the page it is so that's where that
96:46 - offset top is so we now have an array
96:48 - called header positions it gives us the
96:51 - position from the top in pixels of each
96:54 - one of the h3 elements on our page and
96:57 - our page being this page so these are h3
97:00 - s and we have four h3 s right and then
97:06 - this is the react part of it all this
97:09 - was just regular JavaScript the react
97:11 - part is that were only set state right
97:15 - which our state is up here and we're
97:16 - going to set this portion of our state
97:20 - which is header positions we're going to
97:23 - set that equal to our header positions
97:26 - that we've put in here and this is block
97:29 - scoped right so it's not we're not going
97:33 - to be able to access this anywhere else
97:34 - in terms of this this variable but we
97:40 - will be able to access it through state
97:44 - all right so that's what we've got now
97:46 - the whole point of getting that I'm not
97:49 - sure if you've been watching the whole
97:50 - time or not so you may not have heard
97:54 - towards the beginning but the whole
97:55 - point of getting that is that we want to
97:58 - be able to track where a user is on the
98:00 - page as they scroll down and then show
98:03 - that visually by highlighting this menu
98:07 - over here which we haven't each one of
98:09 - these menu items is going to correspond
98:11 - to one of these H tags so as the user
98:14 - Scrolls the corresponding section here
98:19 - will be highlighted and they can click
98:22 - to go to whatever section they want so
98:27 - that's that's I guess where we're at so
98:29 - hopefully that made more sense of this
98:32 - for you all right
98:43 - good
98:46 - all right so I have not taken a break
98:49 - since we started well almost since we
98:53 - started to look at the live chat so I'm
98:55 - gonna do that even though I remembered
98:58 - to pull this over on my screen I never
98:59 - started it so let's take a five-minute
99:01 - break I'm gonna go to the live chat see
99:03 - if I missed any questions and to be
99:05 - honest with you I need the 5-minute
99:07 - break right now because we just I don't
99:09 - want to say we but I just struggled
99:12 - through that that was that was rough it
99:16 - was it was rough on my my mental stamina
99:21 - here so I can feel like I just need a
99:24 - small break and then we'll we'll get
99:27 - back to it
99:53 - okay going through I guess I didn't miss
99:56 - miss many questions here in the lab chat
100:00 - so that's good
100:04 - Ali asked a while ago if there are good
100:08 - resources for people who are not too new
100:18 - who are not too new with JavaScript
100:23 - sebastian recommended free code camp
100:25 - yeah that would be my recommendation to
100:27 - free code camp code Academy has some
100:31 - introductory JavaScript courses that you
100:34 - can do and then Udacity has some free
100:37 - internet introductory JavaScript courses
100:39 - as well so those would be my main
100:41 - suggestions if you like reading more
100:46 - than like the hands-on stuff then the
100:49 - book you don't know j/s is available for
100:51 - free it's all on github so you can you
100:57 - know read through that that whole book
100:59 - for free that's that's really good it's
101:01 - more like a series not just one book but
101:06 - those would be my recommendations
101:47 - okay
102:01 - okay I mentioned earlier we were talking
102:05 - about Wendy you state and when not to
102:06 - use state and I had seen so Andrew had
102:09 - said that there's a great section in the
102:11 - react documentation on that and then I
102:14 - didn't see his follow-up comment which
102:17 - was the section is called thinking in
102:19 - react so if you want to go right to that
102:22 - section
102:23 - check it out thinking and react is the
102:25 - place to go John Hanson has a question
102:36 - this is what about media queries that
102:39 - can change a component would it be
102:41 - better to associate that with props or
102:43 - state
102:51 - yes
102:55 - well I guess if we're using media
102:59 - queries then that would be in CSS so if
103:05 - it's a CSS change I don't it doesn't
103:07 - necessarily need to be in props or state
103:11 - that would that would just be handled
103:13 - with the media queries in CSS so now if
103:15 - you wanted I guess if you wanted to use
103:23 - JavaScript to check the width of the
103:26 - page and then do things based on that
103:29 - then
103:37 - I I would if if I were using javascript
103:41 - to check the width of the screen and
103:43 - then let's say every time the whiff
103:46 - changed you know it updates those values
103:53 - then I would say the the screen width
103:59 - which should be in state right the value
104:02 - of the width of screen should be in
104:03 - state it should update every time the
104:05 - window has changed the window width has
104:10 - changed I suppose I mean I guess that
104:14 - would be a lot of a lot of changes maybe
104:19 - you wouldn't want to update every time
104:27 - yeah that be
104:31 - I guess I'm just not sure I'm trying to
104:33 - think of a situation where you would
104:35 - want to do it that way instead of using
104:37 - just regular CSS media queries I'm sure
104:41 - they exist I'm just having trouble
104:43 - thinking about it a situation like that
104:45 - right on the spot
105:03 - at some point hold on I have a knock at
105:09 - the door I'll be right back
105:58 - so make sure
106:50 - okay I'm back
106:54 - sorry about the little silent few
107:00 - minutes there but when was the head of
107:04 - my department when the head of the
107:05 - department knocks on my door I kind of
107:07 - have to take that so and that was in
107:11 - regard to our last project the
107:14 - catechetical Institute site so I guess
107:17 - I'll be working on some updates to that
107:19 - starting October 1st so we'll be going
107:23 - back to that and hopefully making it
107:26 - better we'll see we'll see what the
107:30 - requested updates are okay
107:42 - see
107:53 - all right so I've just seen Sebastian
107:57 - I've seen your latest comments here
107:58 - saying when I click the link in seek
108:04 - common Markov terms for more information
108:07 - for some reason I'm scrolled in the
108:08 - middle of that page seems that depending
108:12 - on your scroll position and planning
108:13 - guide you did a different scroll
108:15 - position in glossary yeah that's that's
108:24 - not what we want and that's that's odd
108:34 - and so this that's that's really odd
108:41 - behavior I would think the default
108:43 - behavior for react router actually let's
108:53 - see if am I using the link there
108:57 - properly
109:06 - okay I am just linked to glossary all
109:09 - right you would think the default
109:12 - behavior would be to scroll up to the
109:14 - top of the page has anyone had any
109:20 - experience with this using react router
109:23 - where it does not scroll to the top of
109:27 - the page I mean an easy way to fix this
109:34 - would just be to scroll the page to the
109:37 - top automatically on component and it
109:39 - mount but there there's got to be
109:42 - something in react router about this
109:47 - let's see I'm just going to add this
110:33 - okay
111:00 - okay Matt said I ran into a similar
111:02 - issue and used window scroll top or
111:07 - window dot scroll to zero zero zero on
111:12 - route change okay cool that's what I was
111:20 - well I mean that's what I was thinking
111:22 - about doing in component did mount but
111:23 - you can do that I'll just have to look
111:25 - it up to do that on a route change like
111:31 - I'm assuming there's like a callback for
111:34 - route change where you could do that in
111:35 - with react router so mandela mandela
111:43 - effect conference asks how did some of
111:46 - you guys posting learn react for us noob
111:49 - so i guess that's not directed at me
111:51 - it's directed at you all in the end a
111:52 - live chat so let's he lets you handle
111:55 - that i think
112:06 - I think I've explained this before I'm
112:09 - sure how I've learned places where I've
112:11 - learned react from so unless you all
112:14 - have in the live chat have a turn now
112:18 - all right where we at let's see we have
112:39 - we need to get that some values in that
112:45 - side navigation the secondary navigation
112:49 - now
113:17 - okay so I guess this is where we're
113:23 - gonna do whatever we need to do so index
113:46 - okay so we still need a we need to check
113:50 - for this scroll
114:06 - all right so I have to check the
115:08 - okay so what we want to do inside
115:16 - component did mount we're gonna call
115:19 - track scroll and when we're tracking the
115:30 - scroll we want to add an event listener
116:06 - okay
116:12 - so we want to we already added this
116:19 - escape right yeah
116:43 - and how are we getting this girl
116:46 - position before was
116:55 - document.body scroll table yeah
117:03 - yes that's where we don't
117:18 - all right let's see if this works this
117:23 - state there's not as much
117:33 - see
117:55 - okay yeah matt said d balance that
117:57 - function yeah I definitely I don't want
118:00 - to leave it like this I just wanted to
118:05 - see if it worked but yeah you definitely
118:06 - don't want to run that every single time
118:12 - that there's any activity on the scroll
118:16 - so let me see
118:38 - something so inside here this is not
118:42 - this is not this it's not working so can
118:47 - I turn this
118:58 - I suppose if I use an arrow function
119:10 - then I would have access to it so we can
119:13 - change this too
119:21 - see
119:41 - oops
119:57 - okay Matt Matt's pasting in a bunch of
120:00 - stuff here so I just saw that Matt
120:01 - alright so let me let me go through
120:19 - okay sis it's a lot of stuff going on
120:22 - let me taste some of this so thank you
120:24 - bet
120:25 - alright so we had a handle scroll and
120:28 - then whoops
120:46 - here we go
120:58 - okay
120:59 - I think I got that copied over correctly
121:02 - in the right place so I guess we should
121:06 - let me check to make sure I did it right
121:08 - and it works and then we'll all explain
121:10 - what's going on
121:11 - oops I did not bring in do you sure I
121:22 - know I'm bringing this in somewhere else
121:24 - let me there we go
121:35 - okay
121:40 - great okay so let's inspect this and
121:46 - check the state and they're really
121:53 - scroll position
122:00 - okay so it's actually it's updating
122:02 - scroll while which is fine so let's get
122:05 - rid of scroll position here well we can
122:13 - why okay so that works let me explain
122:20 - what's going on alright so the first
122:24 - thing that happens and component did
122:27 - mount it calls track scroll track scroll
122:32 - then adds an event listener so that
122:35 - every time the user Scrolls this this
122:40 - happens right but then we're using D
122:43 - bounce from low - right which is a
122:45 - JavaScript library so we've imported D
122:48 - bounce from low - basically what this is
122:50 - doing is making sure that this handle
122:55 - scroll does not get called constantly so
122:59 - this is a 300 millisecond delay try
123:04 - think this there's a couple of different
123:08 - ways aside from so like there's D
123:10 - balance and I think there's throttle I
123:12 - can't remember for sure the difference
123:15 - in terms of what it when it's calling
123:18 - this but basically it's just going to
123:24 - make sure that this doesn't fire all the
123:25 - time so when handle scroll does get
123:30 - called then it's going to set the state
123:34 - and it's going to set scroll why because
123:37 - it's the Y position right to whatever is
123:41 - window dot scroll Y and we can see in
123:51 - our state
123:59 - oops
124:02 - so in our state we have the scroll wide
124:05 - position and let's see if I get these
124:09 - both on the screen at once we should be
124:11 - able to see a change as we scroll there
124:15 - we go okay so there's a scroll
124:27 - actually I don't think we want to use
124:31 - debounce
124:32 - we want to use so if I remember
124:36 - correctly now debounce
124:38 - waits until the action has been done so
124:42 - in this case it'll wait from the time I
124:45 - stop scrolling 300 milliseconds but I
124:49 - would like this to change as the scroll
124:52 - occurs so what we should do is should
124:59 - use something else so I think we can use
125:07 - throttle
125:45 - and let me I'm double checking on my
125:50 - other screen here
125:58 - yeah I think throttle is the better way
126:02 - to go so so debounce what it's going to
126:07 - do is so as I'm scrolling there's a
126:10 - bunch of actions going on it's going to
126:11 - group all those actions into one so you
126:14 - can see now that I stopped it's it's
126:16 - grouped all that it's only fire that
126:18 - once what throttle is going to do is
126:20 - it's going to make sure that it only
126:26 - fires let's say every 300 milliseconds
126:31 - but every 300 milliseconds it will check
126:34 - that scroll position so it's so I will
126:39 - get more of what we want if we're gonna
126:42 - use throttle
126:58 - so let's see
127:05 - I think we've got
127:26 - today where are we bringing the best
127:47 - does create react app come with with low
127:50 - - because I'm not seeing it
128:05 - that's
128:12 - let's see if that works yeah
128:31 - that's
128:53 - there we go all right CeCe this is
129:02 - giving us let's see if I can get it to
129:05 - do so as I'm scrolling you see it's
129:10 - updating and I'm not stopped so that's
129:15 - more what we want once we get once we
129:19 - have the changes reflected here we'll be
129:21 - able to see if we need to set in terms
129:24 - of the delay in milliseconds you know
129:29 - maybe we need to go lower to make it you
129:32 - know more smooth we'll see okay but
129:39 - basically that's if you're going to use
129:41 - D bounce or throttle that's like
129:45 - debounce is really good like if you
129:48 - wanted to like do validation on an input
129:53 - field you would want to wait until the
129:56 - user has stopped typing right see you
130:00 - know you don't want like the error
130:02 - message to pop up right in the middle of
130:04 - what they're typing right you you want
130:05 - to wait because let's say like for the
130:07 - email address for instance right if they
130:10 - haven't got to the point where they
130:11 - typed like the at and then the domain
130:13 - obviously anything is that's going to be
130:15 - invalid so it would be annoying to show
130:17 - this you want to wait until they've
130:18 - stopped let's say for 300 milliseconds
130:20 - because at that point they've you know
130:22 - they're either thinking or they're
130:24 - probably done but in the case of
130:27 - scrolling in this case of scrolling
130:30 - since we want it to be like more a fluid
130:34 - thing that it will highlight as we're
130:37 - scrolling we wanted to go with throttle
130:39 - so that we know that it'll keep firing
130:44 - so anyway so hopefully this I've kind of
130:51 - feel like that's the most intelligent
130:52 - thing I've done this entire stream is
130:54 - explain the difference between throttle
130:58 - and D valves so that also said correctly
131:04 - that we need to unbind
131:08 - or remove the eventlistener
131:11 - so let's do that as well so component
131:24 - did unmount
131:33 - nice fellow impunity okay so on
131:38 - component did unmount we want to remove
131:46 - that event listener right so we we don't
131:49 - want that if we're not on this view
131:51 - there's no reason to have that going
131:53 - right so
132:06 - let's remove that
132:17 - so
132:51 - cease what I need to put I need to put
133:13 - do I need to put the rest
133:20 - alright let let me know if I need to put
133:24 - the rest of this for it to accurately
133:28 - remove it or not
133:54 - else component will I'm not
134:02 - all right so let's see
134:14 - let's check our lifecycle methods for
134:16 - rewrites see which one we want there is
134:21 - no component did unmount yes I guess we
134:28 - just need component will unmount which
134:36 - is cool since do we have it already no
134:39 - we don't oh we have component will mount
134:45 - all right we'll we'll announce
134:58 - that was a pretty useful error message
135:01 - that are actually it said exactly what
135:03 - we needed we needed to use okay The
135:09 - Times
135:17 - all right so at this point
135:33 - yeah at this point I'm not sure if I
135:36 - want to go ahead and try to implement
135:38 - this whole thing because we've been
135:42 - going for over two hours and I'm
135:47 - starting to get pretty hungry and I've
135:49 - used up a lot of my brainpower
135:51 - struggling through all the errors I was
135:53 - getting so I suspect at this point my my
136:03 - work is going to become the quality of
136:07 - my work is going to lessen as I keep
136:10 - trying to get past this point of being
136:12 - mentally exhausted and hungry so I think
136:17 - now would be a good time to finish for
136:21 - today and I'll answer any questions I'll
136:25 - try to scroll up a bit see if there any
136:26 - questions but in terms of the code I
136:29 - think we'll finish for today all I'll
136:31 - commit this so that you all can see it
136:35 - in github and I mean we've got a
136:41 - significant way a significant portion of
136:44 - this finished the rest of the steps
136:47 - would then be you know now that we have
136:49 - this simply comparing our values you
136:53 - know our Y position our header positions
136:55 - and then changing the step index based
136:58 - on that and then once we do that then we
137:02 - can do things based on the step index
137:04 - within here those things being highlight
137:07 - the correct I'm sorry this is what
137:14 - happens when we click on it actually so
137:16 - in here this is where we would want to
137:18 - actually scroll to the place that that
137:20 - we should be scrolling to but on scroll
137:24 - depending on the comparison of our Y
137:27 - position and our header positions we're
137:31 - gonna highlight something different here
137:34 - so those are the next steps we'll get to
137:38 - that either
137:38 - I may just finish us this up tomorrow
137:41 - morning and then just show what I've
137:45 - done
137:46 - we'll see unless something comes up and
137:49 - I can't get to it then we'll just work
137:50 - on it during the stream tomorrow
137:53 - but if you don't want to stick around
137:56 - for the question/answer thanks for
137:57 - watching and thanks for all your help I
137:59 - really appreciate that I'm actually a
138:03 - decent number of years stick around to
138:06 - this point so thank you thank you for
138:08 - that it's been long and somewhat
138:13 - difficult today now so I'm gonna scroll
138:17 - up a bit so I did get most of the way
138:19 - through all right I'm gonna call them
138:26 - you see I said I don't think there's any
138:28 - question so I'm gonna take this phone
138:30 - call and I will see you all tomorrow
138:32 - thank you so much for watching

Cleaned transcript:

hey everybody its Jessie and today I guess who will start out I want to start out by explaining what I've found out since yesterday about some of the things we were talking about but then also some of the errors that have been reported that others have been getting and I finally started getting them too and I think I know why so it would be worthwhile to go over that and then that way maybe we can solve the problem finally or at least at least work around it after that we're gonna work on this scroll kind of the scroll spy thing where it'll this will highlight as we scroll down whatever section that we're on we'll be able to click on one of these and take us to the correct section alright so first let's let's go over some of these errors and I also had said in the description for this video and for in the the tweet that we were going to talk specifically about property initializer syntax so if you want to check that out in the react Docs if you go under the handling events page about halfway down a little more than half way down they go over the property initializer syntax and we're using this in places and this is causing an error so basically it's instead of binding this and then in this case its handle click and then calling handle click but or anything you know we really want to call instead of doing that we're using an arrow fun which is basically automatically taken care of binding this and it works so that the pages obviously work so for instance on this page we're using we're using that several times to make this work we can see that it is working we can click around and there's no errors I check the console earlier and that no errors at all so it works the problem is when we're we're using standard J s to help keep our code nice and clean and always formatted the same way so that's where the errors are coming from it's it's not that it's not working it's just that that's an advanced the react Doc's say experimental it's an experimental feature in JavaScript so these are the errors that we're getting you make this a bit bigger and let's see so it's looking something like this so it's saying like onmouseover is not defined handle close is not defined right even we it state is not defined when we try to define state and kind of the shorthand way that we've been doing at at times instead of inside the constructor so all of these errors are basically the same thing it's using that property initializer syntax so initially when we first started this project and even in our last project I think we did the same thing we weren't getting errors at least I wasn't getting errors and some of you are getting errors I started getting errors when I upgraded yarn to a new newer version and a little before that I also upgraded NPM although that that didn't matter for me but you'll see in a minute I'll explain why that probably matters for some of you so I was using a very outdated version of yarn and I didn't realize that at first because I kept doing the auto updates and then it hit me like wow I'm I'm being asked to update this very frequently and so I finally checked the versions and realized that every time I did that auto update it didn't change anything I was still in the same version so I was running yarn like version 18 and now I think I'm on 24 whatever the latest one is I'm on that so what I think happens and this is based on going through some issues and create react app and issues with es lint so I spent way too much time researching this but finally what I think happened is that something changed in both yarn and NPM so if you went from NPM for something you know to NPM version 5 I think 5 the latest it also the same thing happen whereas they're handling one of one or more of the dependencies differently than they were before at least that's I don't know technically how yarn and NPM do things and what exactly change but that seems to be the conclusion on that I found like I said from looking at the issues that other people have had on the github repositories for create react app and I think it was for es LAN or perhaps like for babel something like I can't remember what the other repository was but that was the conclusion basically and some of the issues had been closed in particular in correcta react app there's an issue basically the same thing that's happening to us and it's been closed and the solution which the workaround given was revert back to NPM version four you know for dot whatever and the reasoning given was you know version five there's there's some different stuff going on five we don't recommend using that in production and that was that was it so couldn't really find a solution and I don't really want to go back in revert versions right that's not a great solution either because not only would I have to revert but anybody that wanted to try to run this without errors would have to revert so that's not really a good solution so I think that leaves us with two two ways we could go the first way is we could just switch everything back to a less experimental syntax which has already been suggested so Matt had a pull request that had did that among other things and some of you have already suggested that in the live chat or in comments to the videos so that's one way that's probably the easiest way I mean it would be a little bit of a pain I guess to go back and do that and I know Matt's pull request had done that but we've we've changed something since then so I can't just pull that in I'd have to deal with the merge conflicts as well and the other way that we could go is try to really figure out what's going on and and fix the problem so I went down that path a little a little bit earlier so I actually did pool Matt's pool request and he ejected create react app in that pool request right so my thought was hey if we eject that I can go in and change the figuration of what we're doing with with es lint and and fix it now also what I had done is I pulled it in I resolve the merge conflicts but I purposely left in some of the newer syntax so whereas Matt had changed it back to the old version I wanted to test to see if we could get it to work so I left some of it in and I didn't have any success in trying to change configuration no I will say this I'm not I'm not really that experienced with you know dealing with configuring you know babble and es LAN and standard js2 all work together so you know maybe I if I worked on it more I maybe could get it to work but at this point I think I'm probably just gonna switch everything back so and so I do that if you want to submit a pull request use this no verify flag on the end so if you edit a file that doesn't have any of the the property initializer syntax it will pass the test so you can see I try to so I changed this glossary and home right and I committed that and everything worked that's because the standard Jas is only checking the files that had changed so the only files the change were these I'm not using that syntax so it works and this explains why it wasn't consistent like the errors that people were getting you know in particular these errors were not consistent so I committed that everything was fine but then a few minutes later I I tried to commit after changing this planning ijs where we are using some of that newer syntax and you can see I got the errors again all right we have handle next handle pre not defined so if you're changing something and you're not using that syntax you should be fine to commit otherwise use that know verify flag at the end for now I don't really want everyone doing that all the time because then you know we we won't have very formatting but I know that this actually works so I'm not super worried about it now so what I will do is convert everything I I really I'd rather not because I do like the the newer syntax better but at this point like I said I just I think I've already spent way too much time on this issue trying to find a better solution and if I would have just changed everything over a couple days ago then this wouldn't really have been a problem I wouldn't have even known that it was a problem so that's where that's at so I know some of you have told me that you've had these issues so they will be I guess not not really fixed but will work around them will avoid them by going with the older syntax for now all right so any any input you know that you'll have any any ideas in regard to that I'm definitely open open to that so probably at some point maybe tomorrow I'll change the I'll change the syntax but for now we're just gonna we're gonna go ahead and everything we do we're just gonna commit with that no verified flag and I just remembered I'm gonna take a minute here on my other screen to check my mic level I had a comment on one of the recent videos that someone couldn't hear me so I'm gonna doublecheck okay looks like the level the level it should be fine so my output volume is all the way up on for the settings for my Mac and also for the settings in OBS so I'm not exactly sure what was happening but I don't think there's anything else I can do about it on my end so let me know if the sounds alright for you all but I definitely I wanted to at least check it out double check and make sure it wasn't it wasn't anything that I was going wrong so let me check the live chat quickly just say hello to everyone before we get into the coding I'll bring over the Pomodoro timer and I also want to apologize yesterday I had said that the the secondary stream on Instagram would be available to view for 24 hours afterwards and it wasn't so I got some sort of error and it said that the stream wasn't available I think it was because I waited too long to hit the share button because it's happened to me at least one time before so I apologize for that if anybody was looking for the stream and couldn't find it I'll try to remember to hit that share button right away this time okay so Sebastian in the in the live chat is saying pray for Barcelona so if I remember correctly Sebastian your you are in in Spain right not correct so anyway yeah definitely yeah I'll keep keep Barcelona in my prayer is everybody affected by by what happened it happened today so I I just I read a little bit about it earlier so from what I understand correct me if I'm wrong someone drove a car into a group of people or a van so I didn't get to see what the if there were you know casualties from that I am assuming that at the very least there's some serious injuries so that's about all I know about it but yeah definitely I will I'll be praying for everybody okay cool so so but Sebastian is in Spain but not close to Barcelona so well I'm glad to hear that you're all right Sebastian and yeah so anyway so anyway everybody watching who who engages in prayer definitely definitely be good to get some prayers going for that situation alright so for same ones oh goodness Sebastian says that the reports are saying that they're anywhere from 1 to 13 people deceased from from what had happened so I'm gonna take just a second to pray silently for those people just all right okay let's see we try to go all uh I'm gonna get started now and I guess if anybody's tracking what's happening if there's anything like any you know important news or anything comes up about that you know keep us uptodate I'm not I'm not going to be able to follow it while I'm doing the stream but just have had a few kind of basic questions that I'll answer now since they're at the top of the stream I don't want to lose them later on braxton ask Jeff see if you completed the free code camp course like everything or what parts actually no I haven't completed it so I haven't even finished the front end certificate so I'm slightly ashamed to say that I have not finished that so you know I go through it and you just get usually what happens is I get busy with with work and I just I don't I don't work on it like I should and now that I'm doing the Udacity course the react nanodegree I've been putting off the free code camp stuff so I don't know I don't think I have my free code camp profile linked anywhere right now I probably should do that and then you all can check out my progress I really I do intend on going through the rest of the free code cam at some point but definitely not so after I'm done with my react course which should be I think November I think the course ends in November so it'll be a little while but also okay there's another question but you'll cover that in the live chat so thank you yeah okay so Sebastian that says so you are saying the tests are failing because of newer he s six syntax yes it's actually boa it would be what are they calling es 6 + es 7 so I'm not really sure what at what stage the property initializer syntax is right now I was reading some things about the stage but I think some of the stuff I was reading was old so I'm not sure that it that it's still up to date but but in any case that's basically the the issue alright so for now I want to kind of move forward with with this and you know maybe maybe we'll find a better solution to it but at least for now we can work on this so what I've was working on and what we left off with yesterday was we need to find we need to track the scroll position so we need to know two things we need to know the the position on the page of each one of these there h3 tags so we need to know that position just in terms of I guess they're pixels from the top from the top of the page and then we need to track the scroll position so we could get the scroll position pretty easily so you'd see I just doing some things in the console here so we can do document dot body scroll top okay and this gives us I believe it's the number of pixels from the top that we've scrolled so if you could see we we're at the top it comes back as zero scroll down a bit and comes back 587 so we've got one covered the next thing we need to know is the the position of these elements so actually I had a little trouble so I assumed like hey I can just get the scroll top position of this and they kept returning zero so I looked into it and on mdn I was it was saying basically this doesn't work on every element so if the element is non scrollable or if it has no overflow its scroll top is always zero so I'm just I'm wondering what the kind of what we should do I kind of want to see if I could just change the overflow and make it work in here I didn't really matter I guess what I said it too now we're still getting ya are still getting that so maybe I need to target a different a different element yeah let me try to target a different element that might be the easiest thing to do unless I'm using that close up in the wrong way okay Matt says be careful about using a spy scroll for on page load if you have dynamic data updating the page and it changes the height you might get the wrong body height I should have this page should be alright just in terms of I don't think we'll have any dynamic data for this page it's this is just going to be pretty straightforward but wool I mean we'll we'll see if we have issues with it so let me I'm just going to take this ID and put it on this div just to see if we can get a different result no we're not I I'm wondering if I'm using the wrong thing if this maybe is not what I should be looking for I know I've done all this before I've done it all before but I I I kind of think I did it in jQuery before so I'm not sure that my my old code would be very much help to look it up basically what I'm looking for is I need the the Y position of an element an HTML element on the page mmm get boning box yeah I was each other let's see okay so this is one way to do it okay I there's got to be some way to get right right to this right this is what I want but you would think there would be some way that I could just get this oh well we can do this for now so let's let's move this back onto our h3 so it should work we'll double check make sure that it does work okay that's working so here's what we need to do on on page on component amount we're going to get the values we're gonna these values for each one of those h threes then on scroll we're going to get the user scroll position once the scroll position gets to this top coordinate for one of those sections then we'll change the state so that one of these will be highlighted so let's that's the plan so let's let's do that let's go over to our code and make it a bit bigger and so for now let's see okay so our step index I think our step index just gets a number okay so that's just zero index number so in this case I guess we could just get all the eights trees on the page I was thinking we'd have a different ID for each h3 but I don't know that we don't know that we need to do that oops okay so Matt had typed in a live chat try doing offset height and I had done that before but I kept getting 46 and there's no way that this is 46 pixels from the top so that's why I didn't go with that so maybe I'm doing wrong hey so anyway so aim aim highs here if you're it's been a while how's it going right now we're working on the scroll so we're gonna get the scroll position and we're gonna change basically this it's going to highlight this menu in the side based on what section we're on in the world so you'll be able to click on a section and then it'll take you right to that section actually we will need our anchor tags right because there are our IDs yeah so let's give these IDs sign ahead budget proof services okay now see if we have I don't think we yeah we don't have a component didn't mount in here yet so let's add that in Odin did mount and that's not sure if we'll need that but in terms of being able to access this but we might cements will put it in actually probably will because we need to access state let's see I'm trying to think of a way that I could get all these without having to manually call the get the ID so maybe see that's AG h3 get elements by tag name okay cool so yeah we can get you can just get this and most of the ID ID something okay okay Alberto has given another another option here that we can try out and that might be the winner offset top that's what I think that's what we were looking for so yeah that's what we're looking for so that's the right value Thank You Alberto I knew I knew that there was something that would give us what we wanted so that's it so to get the height or I'm sorry to get the the position of an element in terms of how many pixels from the top it is then offset top is the way to go if you need more information just get bounding client rec will give you a lot of information but we don't need that in our case okay great so all right so here's what I'd like to do I'd like to get when within component did mount I'd like to get all the h3 elements and then save see I guess we could save that as key value pairs with the ID and the whatever value we get from offset top and that should be all the information we need about those those age tags okay does that make sense if not let me let me know in the live chat okay slightly off what we're doing right now but so Patrick has been kind of giving updates on trying to replicate those errors we were talking about at the beginning of the the stream and he couldn't replicate it but then Patrick installed node version eight point four point zero and now the errors are occurring so yeah so that's that's no good I mean anybody that's keeping their stuff up to date is gonna get errors so that's not what we want all right so let's let's go with what's gonna console.log that the double check make sure that that works before we go forward cuz that's pretty important shoot and it's not giving us anything why not the all right either we're doing something wrong maybe it's not the right place to put it I'm I'm not even getting any errors the not really much I can I can do okay now Patrick went back to an earlier version of note he's still getting the heirs yeah it this is it's it's frustrating it was a fresh ending experience for me Sebastian says he's on note eight point two point one and not getting any errors so yeah it's just it it's really difficult to nail down exactly exactly what's going on I mean all I know is that I update and I get the errors and I never got them before all right so good thanks so am i had the suggestion just log a string and see if component did mountain is even getting called and no it's not what what's going on three items in my feelings you're not getting it's it's alright so I'm not seeing anything but I'd saying that I'm having items hidden by filters but I I'm not sure that I have anything filtered maybe this is who knows let's see no that's not all right well for some reason we're not we're not getting component did not see if we can get anything to show up that's that's really odd you all right so not sure I'm not sure why I can't get a console look I'm checking in the live chat now see what would you or thinking Yosef says today no thumbs down we really should celebrate ya know thumbs down yet we'll see I usually always get one or two okay let's see what's going on yeah it should be yeah I mean that this should be what we proposed only to fall whoa okay so that fixed it okay somehow I had I guess turn these off anyway Wow so it looks like this worked so let's see what did I change let's go back to what I initially had to see if it works there we go all right okay never use so this is what is now our we name that headers so we should be able to grab what's that again okay it's just ID so we can grab the ID and then with the ID we could get that what was it offset top yeah we can use offset top to get that value right now the david said it was probably a chrome update or something that caused that it's so annoying when things like that change actually now you say that i did update chrome but yesterday i think i updated on this computer yesterday so that's that's possible because I don't remember changing that but I do remember that I haven't seen any errors in the console for a while so that was probably what all right so now that we've gotten through that kind of a silly silly problem now let's go through us we're gonna do the headers I think with the best way to go through these headers would be we met I guess we could map right oh I know I was corrected in an earlier stream but we can map over an array correct that's the proper use of map I think I tried to map over an object before and that was not the way to do it so Hale says can you invite me to the slack chat I don't think you need an invite you just need the the link correct it should so Blake pasted a link in there in the live chat so if you copy that and then replace the asterisk with asterisk with a period then it should work let me know if that link does not work it says you okay so it does say you need an invite that's weird is anybody else does anyone else have that same issue of needing an invite whoa patrick said linting fixed PR incoming patrick if you really fixed the linting i'm gonna be super happy and like very very impressed because this has been what like we've been streaming for less than an hour and it took me probably fifteen minutes to explain what the problem is so that's very impressive it's like you've you've probably fix this issue in less time than it took me to explain the issue all right here is an invite link to join the slack thing I pasted it in the live chat try that out and let me know if that works alright so anyway where where is that I got distracted okay okay so we want to do in the States it is mmm okay yep I think that's what I want to do so we can check that out nope that's not gonna work all right wait a second yeah it was I I D was the I was there right see is this just a syntax thing did I mess that up at least No it's visited okay maybe do I need do I even need this okay thank you too maybe I didn't need that it's there's my error message this is my error message headers done that it's not a function and today I just can't I can't do anything without getting an error how about it right I say my says do array is array by station let's see let's see Serio give us okay so thanks I'm Berto for that suggestion and then I don't need yeah correct okay just so yeah so then we don't really need when in here I was using the the ID to get that element but since it's returning elements anyway I don't need that I can just go straight to straight to this so okay so still getting this Heather's map that map is not a function I actually was I thinking I didn't want to set up my state like that I wanted to have let's see let's just loop through this in a simple way all right so I'm gonna be oldfashioned here for for a second yeah did I mess up in a forloop I'm pretty sure I did not mess up the forlán yeah it's your iteration condition uh I did myself a for loop I'm very so good good look it up man I just that may be my most embarrassing moment on a live stream that I I messed up a for loop by putting the putting the greater than sign instead of the less than sign it's not like I haven't done that before but I've never done that live on YouTube alright I just looked over at my analytics for this video I was expecting everybody to just quit watching at this point but it looks like it didn't happen okay Matt said you might be able to use a for each loop instead of for loop yeah I figured I could use something else but I just thought like I'm just gonna go like to the simplest thing I can think of just to test it out so that could probably be refactored I'm actually I'm still not exactly sure why I couldn't get mapped to work I I don't know so does doesn't matter for loops are fun so hey look we have all the values that we want now we just need to put that I'm gonna put that in state so that we can can access that actually doing need that in state let me think about our next step needs to be so now that we can get we can get that we need to compare waste we need have us scroll handler to listen for the scrolls and then compare okay yes so probably in scroll position should also be in state and we could just start that at zero because that's probably where it'll be anyway okay let's get rid of a lot of this so I'm just thinking of trying to think ahead trying to think if I even need the the IDs to be in state I'm not sure if I'd I need them to be in stay right now and their positions okay so Tomer Hey welcome I don't know that I've seen you in the live chat before but welcome and also a good call so summer says document dog get elements by tag name returns an HTML collection not an array that probably explains why I couldn't use map so thank you for that sebastian is also saying could you do something like this if the scroll position of the first h 3 is less than X set step index to 1 which is the first step if the second H 3 is less than X set step index to 2 and so on yeah yeah Sebastian that's I think that's the way to go John also asked our props not usually the way to go first before using state I keep seeing this so I'm not sure John I'm actually I I frequently do you state just two stores store data in state and I don't know that I necessarily need to I guess I don't really know what the the best way to do it is but with some some things obviously you do want to be in state like if you want if you want things to happen when values change then she put it in state what they're doing what's the the new what's it called the new es6 syntax is a spread operator can I use that in this case to add things on I just kind of freaked I forget what the sin let me look up the syntax on the other screen because it would be cool to use this properly in the video I was just I was just going over this fright night does it maybe like two weeks ago I was going over this so I don't use it often enough to remember how to use it it's something like this right it's really we want to combine combined arrays so I guess I could just say that and see I'm pretty sure that's not all that I need but let's see yeah oh yeah cuz I'm not this this is not an array so I guess I could just go with whoops that's not oh cool Andrew says in the official documentation Facebook has a great section on how to determine when you'll need state it really helped make sense of things for me all right good to know so if you're curious about when to you state and when not to you state check that out I made I should probably check that out as well since since I'm not able to really explain how I decide when to you state and when not to you state then I think I need more information on that I mistake he need to okay cool can cateye good thanks Sebastian that was exactly what I needed I was thinking in my head like what is it do I use push or pop or what you know those are things to handle a raise and I'm trying to remember what's the one that would add it to the end but this works this well yes loose what you know come on what is going on here this is like okay that's it King cab returns an array which does not use AIDS Day all right let's see I'm getting some some suggestions here in the live chat so let me go through some of these by Patrick says can Cat returns an array thereby not mutating state and you just build the array in the for loop and then add it to state all right cool I'm Barrett oh yeah that makes a lot of sense all right cool let's do that so I don't remember if I read America's coming out loud or not but I'm better just said why not just create the array in the loop and then add the array after that to state and that that that makes a lot of sense so let's do that way what was Sebastian say okay Sebastian says do do the same as in component we'll update next crops next state and then consider position from next state yeah you need to set the state outside of the loop yeah all right let's get this out of here okay okay sorry I'm not usually accused of talking too much in my streams I feel like I'm not really saying very much of all what I'm typing so anyway what so what I'm doing here is we have basically we've made an empty array here that's our header positions that's going to hold our values inside this loop we are pushing the values here our offset top values into the array so then we're gonna call this set state and let's see we don't need this anymore we need header positions is going to be their positions okay so you need to do right and probably don't need to initialize that into right let me just see what it says first Oh didn't get an error that's a good sign really sweet look at that no dang it it's not the right values okay but we have something all right so we've successfully put something into state all right man this is this has been rough this it's like every single step something goes wrong all right so why why is this happening he had a position oh because I put zero and I needed I alright that's I'm happy about that that's easy to fix yeah there we go right so here's all our positions wonderful so just just in case you didn't fall along this maybe especially if you're new to JavaScript the the error that I was having was that I I put 0 here which was giving me the first element in our headers array and then getting the offset top of that element which is why we had the same value for each one what I needed to do was put I here right and I is going to be 0 1 2 3 4 each time this loop goes it's gonna go up by 1 and that gave us the value that we needed ok wonderful are you haven't looked at the live chat for a few minutes and the did you tell someone that I'm using notepad yeah okay so Sebastian said doing it like I'm doing now I don't need this yeah you're right I didn't I don't need these and okay I figured I may have left the console log in there as well but I think I got them all out Oh slip slip sack no had he caught my my error with putting the the zero in here instead of the ISO thanks for catching that sorry I didn't look over and see it so you must have caught that right away so guess good job on that okay so sue sahib is saying I'm not understanding anything anybody who can help alright so I'm not I'm not exactly sure what your level of understanding is in terms of like JavaScript or react or anything so I'm not exactly sure where to start but we're using a JavaScript framework called react to build this so it's not exactly just plain JavaScript but within this what we're doing here is mostly just plain JavaScript and that we're just grabbing the header tags all of the header tags on the page we have this gives us an array of the the elements or not exactly an array but this gives us all our elements and then we're just looping through those elements and we want to get the position of each of those elements on the page in terms of how many pixels from the top of the page it is so that's where that offset top is so we now have an array called header positions it gives us the position from the top in pixels of each one of the h3 elements on our page and our page being this page so these are h3 s and we have four h3 s right and then this is the react part of it all this was just regular JavaScript the react part is that were only set state right which our state is up here and we're going to set this portion of our state which is header positions we're going to set that equal to our header positions that we've put in here and this is block scoped right so it's not we're not going to be able to access this anywhere else in terms of this this variable but we will be able to access it through state all right so that's what we've got now the whole point of getting that I'm not sure if you've been watching the whole time or not so you may not have heard towards the beginning but the whole point of getting that is that we want to be able to track where a user is on the page as they scroll down and then show that visually by highlighting this menu over here which we haven't each one of these menu items is going to correspond to one of these H tags so as the user Scrolls the corresponding section here will be highlighted and they can click to go to whatever section they want so that's that's I guess where we're at so hopefully that made more sense of this for you all right good all right so I have not taken a break since we started well almost since we started to look at the live chat so I'm gonna do that even though I remembered to pull this over on my screen I never started it so let's take a fiveminute break I'm gonna go to the live chat see if I missed any questions and to be honest with you I need the 5minute break right now because we just I don't want to say we but I just struggled through that that was that was rough it was it was rough on my my mental stamina here so I can feel like I just need a small break and then we'll we'll get back to it okay going through I guess I didn't miss miss many questions here in the lab chat so that's good Ali asked a while ago if there are good resources for people who are not too new who are not too new with JavaScript sebastian recommended free code camp yeah that would be my recommendation to free code camp code Academy has some introductory JavaScript courses that you can do and then Udacity has some free internet introductory JavaScript courses as well so those would be my main suggestions if you like reading more than like the handson stuff then the book you don't know j/s is available for free it's all on github so you can you know read through that that whole book for free that's that's really good it's more like a series not just one book but those would be my recommendations okay okay I mentioned earlier we were talking about Wendy you state and when not to use state and I had seen so Andrew had said that there's a great section in the react documentation on that and then I didn't see his followup comment which was the section is called thinking in react so if you want to go right to that section check it out thinking and react is the place to go John Hanson has a question this is what about media queries that can change a component would it be better to associate that with props or state yes well I guess if we're using media queries then that would be in CSS so if it's a CSS change I don't it doesn't necessarily need to be in props or state that would that would just be handled with the media queries in CSS so now if you wanted I guess if you wanted to use JavaScript to check the width of the page and then do things based on that then I I would if if I were using javascript to check the width of the screen and then let's say every time the whiff changed you know it updates those values then I would say the the screen width which should be in state right the value of the width of screen should be in state it should update every time the window has changed the window width has changed I suppose I mean I guess that would be a lot of a lot of changes maybe you wouldn't want to update every time yeah that be I guess I'm just not sure I'm trying to think of a situation where you would want to do it that way instead of using just regular CSS media queries I'm sure they exist I'm just having trouble thinking about it a situation like that right on the spot at some point hold on I have a knock at the door I'll be right back so make sure okay I'm back sorry about the little silent few minutes there but when was the head of my department when the head of the department knocks on my door I kind of have to take that so and that was in regard to our last project the catechetical Institute site so I guess I'll be working on some updates to that starting October 1st so we'll be going back to that and hopefully making it better we'll see we'll see what the requested updates are okay see all right so I've just seen Sebastian I've seen your latest comments here saying when I click the link in seek common Markov terms for more information for some reason I'm scrolled in the middle of that page seems that depending on your scroll position and planning guide you did a different scroll position in glossary yeah that's that's not what we want and that's that's odd and so this that's that's really odd behavior I would think the default behavior for react router actually let's see if am I using the link there properly okay I am just linked to glossary all right you would think the default behavior would be to scroll up to the top of the page has anyone had any experience with this using react router where it does not scroll to the top of the page I mean an easy way to fix this would just be to scroll the page to the top automatically on component and it mount but there there's got to be something in react router about this let's see I'm just going to add this okay okay Matt said I ran into a similar issue and used window scroll top or window dot scroll to zero zero zero on route change okay cool that's what I was well I mean that's what I was thinking about doing in component did mount but you can do that I'll just have to look it up to do that on a route change like I'm assuming there's like a callback for route change where you could do that in with react router so mandela mandela effect conference asks how did some of you guys posting learn react for us noob so i guess that's not directed at me it's directed at you all in the end a live chat so let's he lets you handle that i think I think I've explained this before I'm sure how I've learned places where I've learned react from so unless you all have in the live chat have a turn now all right where we at let's see we have we need to get that some values in that side navigation the secondary navigation now okay so I guess this is where we're gonna do whatever we need to do so index okay so we still need a we need to check for this scroll all right so I have to check the okay so what we want to do inside component did mount we're gonna call track scroll and when we're tracking the scroll we want to add an event listener okay so we want to we already added this escape right yeah and how are we getting this girl position before was document.body scroll table yeah yes that's where we don't all right let's see if this works this state there's not as much see okay yeah matt said d balance that function yeah I definitely I don't want to leave it like this I just wanted to see if it worked but yeah you definitely don't want to run that every single time that there's any activity on the scroll so let me see something so inside here this is not this is not this it's not working so can I turn this I suppose if I use an arrow function then I would have access to it so we can change this too see oops okay Matt Matt's pasting in a bunch of stuff here so I just saw that Matt alright so let me let me go through okay sis it's a lot of stuff going on let me taste some of this so thank you bet alright so we had a handle scroll and then whoops here we go okay I think I got that copied over correctly in the right place so I guess we should let me check to make sure I did it right and it works and then we'll all explain what's going on oops I did not bring in do you sure I know I'm bringing this in somewhere else let me there we go okay great okay so let's inspect this and check the state and they're really scroll position okay so it's actually it's updating scroll while which is fine so let's get rid of scroll position here well we can why okay so that works let me explain what's going on alright so the first thing that happens and component did mount it calls track scroll track scroll then adds an event listener so that every time the user Scrolls this this happens right but then we're using D bounce from low right which is a JavaScript library so we've imported D bounce from low basically what this is doing is making sure that this handle scroll does not get called constantly so this is a 300 millisecond delay try think this there's a couple of different ways aside from so like there's D balance and I think there's throttle I can't remember for sure the difference in terms of what it when it's calling this but basically it's just going to make sure that this doesn't fire all the time so when handle scroll does get called then it's going to set the state and it's going to set scroll why because it's the Y position right to whatever is window dot scroll Y and we can see in our state oops so in our state we have the scroll wide position and let's see if I get these both on the screen at once we should be able to see a change as we scroll there we go okay so there's a scroll actually I don't think we want to use debounce we want to use so if I remember correctly now debounce waits until the action has been done so in this case it'll wait from the time I stop scrolling 300 milliseconds but I would like this to change as the scroll occurs so what we should do is should use something else so I think we can use throttle and let me I'm double checking on my other screen here yeah I think throttle is the better way to go so so debounce what it's going to do is so as I'm scrolling there's a bunch of actions going on it's going to group all those actions into one so you can see now that I stopped it's it's grouped all that it's only fire that once what throttle is going to do is it's going to make sure that it only fires let's say every 300 milliseconds but every 300 milliseconds it will check that scroll position so it's so I will get more of what we want if we're gonna use throttle so let's see I think we've got today where are we bringing the best does create react app come with with low because I'm not seeing it that's let's see if that works yeah that's there we go all right CeCe this is giving us let's see if I can get it to do so as I'm scrolling you see it's updating and I'm not stopped so that's more what we want once we get once we have the changes reflected here we'll be able to see if we need to set in terms of the delay in milliseconds you know maybe we need to go lower to make it you know more smooth we'll see okay but basically that's if you're going to use D bounce or throttle that's like debounce is really good like if you wanted to like do validation on an input field you would want to wait until the user has stopped typing right see you know you don't want like the error message to pop up right in the middle of what they're typing right you you want to wait because let's say like for the email address for instance right if they haven't got to the point where they typed like the at and then the domain obviously anything is that's going to be invalid so it would be annoying to show this you want to wait until they've stopped let's say for 300 milliseconds because at that point they've you know they're either thinking or they're probably done but in the case of scrolling in this case of scrolling since we want it to be like more a fluid thing that it will highlight as we're scrolling we wanted to go with throttle so that we know that it'll keep firing so anyway so hopefully this I've kind of feel like that's the most intelligent thing I've done this entire stream is explain the difference between throttle and D valves so that also said correctly that we need to unbind or remove the eventlistener so let's do that as well so component did unmount nice fellow impunity okay so on component did unmount we want to remove that event listener right so we we don't want that if we're not on this view there's no reason to have that going right so let's remove that so cease what I need to put I need to put do I need to put the rest alright let let me know if I need to put the rest of this for it to accurately remove it or not else component will I'm not all right so let's see let's check our lifecycle methods for rewrites see which one we want there is no component did unmount yes I guess we just need component will unmount which is cool since do we have it already no we don't oh we have component will mount all right we'll we'll announce that was a pretty useful error message that are actually it said exactly what we needed we needed to use okay The Times all right so at this point yeah at this point I'm not sure if I want to go ahead and try to implement this whole thing because we've been going for over two hours and I'm starting to get pretty hungry and I've used up a lot of my brainpower struggling through all the errors I was getting so I suspect at this point my my work is going to become the quality of my work is going to lessen as I keep trying to get past this point of being mentally exhausted and hungry so I think now would be a good time to finish for today and I'll answer any questions I'll try to scroll up a bit see if there any questions but in terms of the code I think we'll finish for today all I'll commit this so that you all can see it in github and I mean we've got a significant way a significant portion of this finished the rest of the steps would then be you know now that we have this simply comparing our values you know our Y position our header positions and then changing the step index based on that and then once we do that then we can do things based on the step index within here those things being highlight the correct I'm sorry this is what happens when we click on it actually so in here this is where we would want to actually scroll to the place that that we should be scrolling to but on scroll depending on the comparison of our Y position and our header positions we're gonna highlight something different here so those are the next steps we'll get to that either I may just finish us this up tomorrow morning and then just show what I've done we'll see unless something comes up and I can't get to it then we'll just work on it during the stream tomorrow but if you don't want to stick around for the question/answer thanks for watching and thanks for all your help I really appreciate that I'm actually a decent number of years stick around to this point so thank you thank you for that it's been long and somewhat difficult today now so I'm gonna scroll up a bit so I did get most of the way through all right I'm gonna call them you see I said I don't think there's any question so I'm gonna take this phone call and I will see you all tomorrow thank you so much for watching
