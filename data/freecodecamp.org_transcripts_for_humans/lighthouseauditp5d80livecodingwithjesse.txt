With timestamps:

00:08 - hey everybody welcome to live coding
00:10 - with jesse i'm jesse
00:13 - and today
00:14 - we're going to
00:16 - look at a
00:17 - chrome dev tools lighthouse audit
00:20 - of this react project that we've been
00:22 - working on
00:25 - and i've been away for a while and i've
00:27 - been sick but i'm getting better
00:31 - so
00:32 - i'm going to try not to cough a lot uh
00:35 - during this this stream
00:38 - um but i'm still not 100
00:40 - so i'm pretty tired so if i'm if i'm a
00:43 - little off i'm gonna blame it on my
00:46 - my illness i don't really know what it
00:48 - was flu or cold or something but
00:51 - uh but i'm starting to get better now
00:55 - so
01:01 - let me
01:04 - let me start off by
01:06 - just showing you uh in dev tools
01:10 - where the audit is this is actually uh
01:13 - pretty easy to do
01:14 - uh and
01:17 - it's a good way to just kind of check
01:19 - out like what's going on with your
01:20 - website
01:21 - uh in terms of a lot of different
01:23 - factors so
01:28 - there we go
01:29 - okay
01:32 - so on the screen now this is just chrome
01:34 - devtools i'm running it in uh dark mode
01:37 - and
01:39 - i've also extended it out to take up
01:42 - um the full screen so just click that
01:46 - option there
01:48 - and you can see this is the website that
01:50 - we've run this on
01:52 - this is
01:54 - dev.franciscan.university and i updated
01:56 - this earlier today
01:57 - with the latest changes i did do a few
02:00 - more things after i updated so it's not
02:02 - exactly like what i'm running locally
02:05 - but it's it's pretty close
02:09 - so
02:16 - let me get started
02:17 - we do have a question let's answer this
02:20 - marcos asks if the recordings are
02:22 - available
02:23 - um yeah all the live coding
02:26 - uh
02:27 - sessions are all
02:29 - recorded and available
02:31 - on the free code camp youtube channel i
02:34 - also have some stuff available on my
02:36 - channel the link to that's in the
02:38 - description
02:41 - okay
02:43 - so i figure we're just going to go down
02:45 - through
02:46 - all the
02:48 - pieces of advice that
02:51 - lighthouse gives us
02:53 - and
02:54 - uh we just kind of comment on it think
02:56 - about what we can do to improve
02:58 - and uh hopefully
03:00 - it will make this site a lot better but
03:03 - also maybe give you some ideas uh for
03:05 - your own sites
03:11 - all right so
03:14 - first thing we're going to look at is
03:15 - performance so you can see here are my
03:16 - scores
03:20 - um
03:22 - the only thing i was really surprised
03:24 - about
03:27 - was this accessibility score being so
03:29 - high
03:32 - because we haven't really focused
03:35 - that much on accessibility beyond like
03:38 - the normal things
03:39 - uh so
03:41 - so that's pretty good i definitely still
03:43 - want to go through and try to get this
03:44 - number you know as high as possible
03:48 - um but
03:50 - performance was also a little bit of a
03:52 - surprise but we'll see in a second why
03:54 - it makes a lot of sense why the
03:55 - performance is bad right now
04:02 - sorry for the awning
04:05 - uh so let's go through once you run an
04:07 - audit
04:09 - you can um
04:11 - go through each category so we're going
04:12 - to start with performance which we get a
04:14 - 49 out of 100
04:17 - and it gives you a lot of useful
04:18 - information so
04:20 - uh just to let you know
04:22 - it tells you
04:24 - what were the constraints put on this
04:26 - uh so we are emulating a mobile
04:30 - uh
04:31 - a mobile phone loading this
04:34 - we could do desktop if we wanted but
04:36 - we're doing mobile and that's the
04:37 - default and it's on a 3g network with a
04:41 - slow
04:42 - cpu
04:43 - so there are a lot of different um
04:46 - well is that the only i assume there are
04:48 - different options
04:50 - it's not showing me any but
04:53 - maybe there's some way to do different
04:54 - options
04:57 - but this is pretty good to do it this
04:59 - way
05:00 - and that way for users that have better
05:02 - conditions great they're going to have a
05:04 - wonderful experience but for your users
05:06 - that don't have the optimal conditions
05:10 - then
05:11 - they'll get a good experience if that's
05:13 - what you're optimizing for
05:16 - so you minimize that portion of your
05:18 - users that
05:21 - are gonna have to wait a long time for
05:22 - your site to load
05:24 - so this is
05:25 - i think this is a good idea
05:31 - all right so the first thing we have
05:32 - these metrics it shows us what the user
05:34 - sees
05:37 - uh at various points of loading so this
05:40 - is in seconds so two point let me zoom
05:42 - in if i can it's gonna let me zoom
05:45 - no
05:46 - okay
05:47 - uh so just leave it like this
05:50 - so at 2.6 seconds we're still seeing
05:53 - white up until then
05:55 - and then we see text
05:57 - and ui elements but no image
06:01 - it's not until
06:02 - the 5.2 second mark that we see an image
06:05 - on the screen
06:06 - okay so
06:08 - at that point it's not it's not too bad
06:10 - because everything we want a user to see
06:12 - on this part of the screen is visible
06:15 - but still it took 5.2 seconds to get
06:18 - there
06:19 - so
06:20 - don't like that
06:24 - i don't really like that it took 2.6
06:26 - seconds for them to see anything at all
06:29 - so we'll see what we can do
06:32 - so this this first metric is gonna say
06:35 - first meaningful paint
06:37 - and uh now it's giving it to us in
06:39 - milliseconds but you know
06:42 - uh we're gonna say that's you know what
06:44 - about three and a half seconds here
06:50 - and if if you don't know what these mean
06:52 - they give you an explanation and they
06:54 - even give you a link to learn more
06:56 - so you could definitely
06:58 - you'll go through this even if you don't
06:59 - know that much about it and click on the
07:01 - links read through it and you have a
07:03 - pretty good idea what's going on
07:06 - uh first meaningful paint though is is
07:09 - just when there's enough content on the
07:11 - page that
07:12 - uh you know it's a website you know
07:14 - users can see like what's going on with
07:16 - um
07:19 - uh your content
07:21 - first interactive
07:24 - and saying this is in beta so
07:26 - you know we'll see
07:28 - whether or not this is
07:30 - that accurate or not
07:33 - uh but this is when the page will be
07:35 - interactive so think about like
07:37 - when we would click
07:39 - when a user would click on this uh menu
07:42 - scroll over like on this side now
07:45 - you know it
07:46 - it may not do anything before that eight
07:49 - second mark
07:51 - right so that's
07:52 - that's kind of an issue a user might
07:54 - click on that and think it's broken
08:01 - sorry
08:02 - i thought i was well enough to do the
08:03 - stream i'm so tired
08:06 - um
08:09 - and then consistently interactive we
08:10 - gotta wait for 16 seconds you see it's
08:12 - showing us even with these lines on the
08:16 - on the timeline here where that happens
08:20 - so
08:23 - you know these these i'm not not happy
08:25 - about these these metrics i would be
08:28 - upset if that was my user experience
08:30 - on the website
08:32 - so
08:33 - here's the good part the opportunities
08:36 - because now
08:37 - we figure out what can i do to change
08:40 - these
08:41 - metrics
08:43 - so first thing is off screen images and
08:46 - i love this idea
08:48 - and it's lazy loading the off screen and
08:51 - hidden images to improve your page uh
08:54 - load speed and time interactive and it
08:56 - actually gives us all the images
08:59 - that we could lazy load
09:02 - and then tells us
09:04 - you know our savings which in this case
09:06 - since we'd lazy load the image like the
09:08 - entire image
09:10 - size would be saved right so
09:14 - each one of these images could be lazy
09:16 - loaded and let's go through even on a
09:18 - desktop you can see i only see one image
09:21 - here unless you want to count this which
09:23 - um
09:25 - i think i'm loading this as an svg i
09:27 - don't remember how we did that but i
09:28 - think it is
09:29 - uh
09:30 - but anyway
09:32 - we don't even see any images
09:35 - until we scroll down a bit further this
09:37 - is a video this is the first image so
09:40 - there's no need to have all these images
09:43 - load up
09:45 - right away
09:48 - once the user starts scrolling
09:50 - then we might want to say oh hey you
09:52 - know let's start loading those images
09:54 - because we need them now
09:56 - uh but
09:58 - we could definitely save
10:00 - a bit of time
10:01 - with that normally your images are your
10:04 - your largest elements of your page
10:11 - oh hey i see a few you're saying hi in
10:13 - there hey john how's it going one asked
10:15 - about the links in the description uh
10:17 - yeah the link to my youtube channel is
10:19 - in the description so i have my own uh
10:21 - channel where i do some some tutorial
10:24 - videos and live streams as well
10:26 - in case you're interested
10:31 - so i think that's a great idea and i'm
10:33 - gonna add this i have a uh just a little
10:37 - checklist on my other screen and as we
10:38 - go through i'm gonna add some
10:40 - uh some to do's which will eventually
10:43 - turn into github issues
10:46 - and
10:47 - we'll try to work through some of those
10:49 - to get the site
10:50 - ready and fast you know faster
10:53 - than it is now
10:56 - and i've been working to cut down on the
10:58 - number of issues and
11:00 - fix some things and close them out
11:03 - so if you've been
11:05 - checking out the github repo lately
11:08 - uh you may have seen
11:10 - the
11:10 - the log issues going down but here we're
11:14 - going to say
11:24 - all right so i know you can't see my
11:26 - other screen i'm not going to switch
11:27 - over just so you can see a checklist
11:32 - i don't think that's it's really that
11:33 - exciting but basically i'm just saying
11:35 - lazy load the images especially on the
11:37 - home page
11:40 - the home page really is the most image
11:42 - heavy page that we have so far on the
11:45 - site
11:46 - so and that's the page that most users
11:48 - are going to come to
11:51 - so we want that to be
11:54 - to give we want to give the most
11:56 - attention to that page you know most of
11:59 - our users probably won't even see
12:01 - any of the interior pages
12:06 - and i'm going to make a note to maybe
12:08 - use source set for this
12:12 - which is
12:13 - like an html
12:15 - attribute where you can specify
12:17 - different images
12:23 - uh for different screen sizes
12:29 - okay
12:32 - so that's good so
12:34 - just with these two things i imagine we
12:36 - could bring our score up significantly
12:38 - but let's check out a few of the other
12:40 - things we can do
12:43 - um
12:44 - serve images in next-gen formats and
12:47 - this is interesting i've never used any
12:49 - of these formats so they're saying
12:50 - instead of using your regular paying or
12:52 - jpeg you can use jpeg 2000 jpeg xr and
12:56 - webp
12:57 - i actually have only heard of webp i
12:59 - haven't even heard of these newer forms
13:01 - of jpeg
13:03 - so that's something that i'm going to
13:04 - want to look into so i'm going to put it
13:06 - on the list
13:08 - but i need to do some research before i
13:10 - do that
13:11 - mainly i would need to know is it
13:14 - supported by browsers
13:16 - if it is supported
13:18 - then i need to figure out how to do it
13:23 - larger than it needs to be
13:27 - um so
13:30 - it looks like we can cut down this image
13:32 - significantly and potentially save 91
13:36 - percent not harrison could still be cut
13:39 - down by 59
13:41 - so we can definitely save just by
13:43 - resizing our images we could save a lot
13:46 - we're probably going to end up doing is
13:50 - um trying to do some sort of
13:56 - um
13:57 - replacement of images based on screen
13:59 - width
14:00 - so on a very large screen where we would
14:04 - want a bigger image we'll load that
14:06 - image and then on a small this is a
14:08 - large image right now so i
14:10 - probably i took this and didn't do
14:13 - anything to cut it down
14:17 - so
14:18 - you definitely want to do that even
14:20 - these images which are much smaller by
14:23 - control screen like a mobile where
14:26 - it's a waste to have a really large
14:27 - image
14:28 - then we'll only load the small one
14:31 - so
14:33 - i'm going to make a note of that as well
14:35 - to say
14:40 - now again images
14:44 - we can cut down on the size of images
14:50 - so this alumni profile image which is
14:54 - this image here
14:56 - so this one's a maybe
15:00 - um
15:05 - so i'm just going to say look into using
15:07 - uh webp
15:14 - and then we have reduced render blocking
15:16 - style sheets
15:18 - so it looks like we we have um one
15:21 - render blocking style sheet and this is
15:24 - for our font
15:26 - okay so
15:28 - we are loading our font
15:31 - in the head
15:34 - potentially we could load it lower down
15:37 - the page
15:40 - um
15:41 - you know that's something we might maybe
15:42 - we think about doing
15:49 - i will have to experiment with that one
15:51 - because
15:54 - obviously i want the font to be used
15:58 - the correct font but do we really need
16:02 - do we need that font right away if we
16:04 - could give the user something on the
16:07 - screen immediately or you know less than
16:09 - one second
16:11 - even if it's not the right font
16:13 - would that be better
16:15 - and then whenever the font
16:17 - does load it just switches over
16:21 - you know i think that would be a better
16:22 - user experience it would be a little bit
16:24 - of a change
16:26 - but at least
16:29 - they would see something on the screen
16:31 - it would appear that the page is loaded
16:33 - very quickly so i'm going to look into
16:35 - that
16:36 - i i remember seeing a talk where they
16:39 - were talking about doing just that we're
16:41 - loading a backup front first and then
16:43 - loading the other font i don't know if
16:45 - that's something that's supported right
16:47 - now or if that talk was about things
16:49 - that will be possible in the future so
16:52 - i'm gonna have to find that and uh and
16:54 - figure that out so that's gonna be
16:55 - another one where
16:57 - i'm just gonna research
17:00 - um
17:01 - hello nikki's in the chat how's it going
17:04 - um
17:07 - so
17:08 - uh the font thing i recently did on my
17:10 - blog helps a lot thanks for that retweet
17:13 - on the keyboard shortcuts by the way oh
17:15 - yeah no problem
17:24 - oh okay
17:26 - so it looks like we have some options
17:27 - there uh for that font then
17:31 - okay cool so we'll have to um
17:35 - we'll have to do that i'll i'll make an
17:36 - issue out of it and then whatever ideas
17:39 - you all have about the font you know we
17:42 - can discuss it on that github issue
17:47 - so
18:00 - all right so i've made a little note for
18:01 - me to remember to make an issue out of
18:03 - that
18:11 - oh i see and uh john says react image
18:14 - and react visibility sensor are well
18:16 - known image components for handling
18:18 - image cache and loading
18:20 - oh cool very cool
18:26 - awesome i'm definitely have to check
18:27 - that out thank you john
18:31 - all right so we only have one more here
18:32 - on
18:33 - our opportunities for uh our performance
18:37 - and
18:38 - that's to remove unused rules from style
18:41 - sheets
18:42 - so this isn't a huge deal right we're
18:44 - talking about a 10 millisecond
18:46 - improvement
18:47 - so
18:51 - 10 milliseconds is incredibly fast i'm
18:54 - not sure that
18:55 - it's worth it
18:58 - to take out this bit of code
19:02 - so i'm not gonna even worry about this
19:03 - for now
19:05 - you know there is such a thing as like
19:07 - over optimizing right
19:09 - you know we're going to take these
19:10 - things that are going to be huge
19:12 - improvements and do those for sure and
19:14 - then we'll we'll try again and we'll see
19:16 - what score we get we'll see what the
19:17 - user experience is like
19:19 - you know it may not be worth going
19:21 - through our css and removing things and
19:23 - then making sure it hasn't messed
19:25 - something else up
19:26 - just for 10 milliseconds
19:31 - all right and then we have
19:32 - diagnostics and
19:36 - so we can see
19:40 - all of our all the things that are being
19:42 - loaded
19:43 - and
19:43 - [Music]
19:45 - we see how long it takes to transfer
19:47 - those total size i mean look at this
19:50 - six and a half seconds for that one
19:52 - image right that's
19:54 - if we fix this thing up
19:56 - i mean we're
19:58 - definitely
19:59 - uh gonna increase
20:02 - the performance and decrease the load
20:04 - times
20:05 - and that's not even to talk about this
20:07 - image here which um
20:09 - i don't think has been sized properly or
20:12 - compressed at all
20:14 - so we definitely can can do some work
20:16 - with that
20:19 - all right uh so our caching policy is no
20:22 - good now this is on these uh images
20:25 - right now these images well the fonts
20:28 - are
20:29 - we don't have any control over the fonts
20:31 - for right now
20:33 - um
20:34 - because they're coming from google
20:35 - phones but this is coming from
20:36 - franciscan.edu
20:38 - so these are
20:39 - actually being served from the
20:41 - university uh from the campus they're
20:44 - one of the some of the servers that that
20:46 - are there on the campus so
20:48 - we've already switched these over
20:50 - uh all these images over to
20:53 - google cloud servers so
20:56 - i haven't switched the url that we're
20:58 - getting these from but i will switch
21:00 - that soon
21:01 - so we may be able to improve through
21:03 - each one of these
21:05 - these are getting down into like more
21:07 - details of what we're gonna do but
21:13 - you can see there's just so much
21:15 - information
21:16 - i mean i lo i prove this
21:19 - without doing anything we'll see what
21:21 - google has set
21:22 - so this could kind of be a freebie that
21:25 - will be better
21:27 - um
21:29 - critical request chains
21:31 - so
21:33 - around like
21:34 - for the last five years or something
21:36 - because
21:37 - you know i used to go to different
21:38 - websites to try to get this information
21:40 - but i could never get all of this
21:42 - information
21:43 - in such detail
21:45 - uh all together at one time
21:47 - uh this is just really amazing
21:50 - uh and then we could see all the things
21:51 - that we passed if you know if we really
21:53 - want to feel happy about it we can look
21:55 - at the things we did really well um
21:59 - so i'm not gonna look at him right now
22:00 - for time but it is kind of cool to look
22:02 - at in case you're feeling down about all
22:04 - the things that are messed up on your
22:06 - site just you know take a look down here
22:08 - and
22:09 - uh
22:10 - you know give yourself a pat on the back
22:15 - all right so
22:16 - we're gonna go we're gonna check out
22:18 - this progressive web app now oh by the
22:20 - way i think i'm i'm just gonna go
22:22 - through this and then that'll be the end
22:24 - for the stream today it's kind of late
22:26 - and
22:28 - you know i'm still not 100
22:30 - you know better yet
22:32 - um so
22:33 - in future streams we'll definitely go
22:35 - through some of this and actually do the
22:37 - work to make it better
22:39 - and then eventually we'll do another
22:41 - audit to make sure
22:43 - that we've actually improved
22:47 - um but not for today's stream
22:50 - so if anybody was did really want to see
22:52 - some coding stuff probably not going to
22:54 - see any coding today it's just going to
22:56 - be all about
22:57 - going through lighthouse uh how do we
23:00 - interpret the data we get from
23:01 - lighthouse and
23:03 - some ideas for how to act on that
23:06 - okay so if you're not sure what a
23:09 - progressive web app is i'll give you
23:10 - just a quick um overview
23:14 - a progressive web app uses um a cool
23:17 - feature in browsers now in javascript
23:20 - called a service worker
23:23 - so a service worker is a javascript file
23:26 - it runs in the the client side in the
23:29 - user's browser
23:31 - and
23:34 - it can intercept uh network requests
23:37 - so the network request normally would go
23:39 - from the user's browser and to the
23:42 - server with potentially things in
23:44 - between like uh cdns or things like that
23:46 - but
23:47 - um
23:49 - this sits in between that so uh a
23:52 - network request would go to the service
23:55 - worker first right wouldn't even you
23:57 - leave the user's computer wouldn't even
23:59 - leave their browser
24:00 - and then the service worker can
24:02 - determine what it's going to do with
24:03 - that request
24:04 - right so
24:05 - potentially let's say you cache a lot of
24:08 - data already
24:10 - the service worker could take that
24:12 - request and say hey you know what we
24:13 - already have all this data so
24:16 - we're just going to give you the data
24:17 - right away i'm not even going to send
24:19 - this request back to the server
24:21 - uh
24:22 - and imagine how fast that would be to
24:23 - get the response so a progressive web
24:26 - app
24:27 - number one is very fast but also could
24:29 - potentially enable your app to work
24:32 - offline
24:34 - so there's going to be some features of
24:35 - your app that can work without an
24:38 - internet connection and then for those
24:40 - features that need a connection
24:42 - as the connection it comes available and
24:44 - becomes better your app will
24:46 - progressively
24:48 - get more functionality
24:50 - right so that's what we're going for
24:52 - here
24:53 - now right now you can see we only have a
24:55 - score of 55 so we're not doing what we
24:57 - need to do
24:59 - uh so let's let's check out what's
25:01 - happening number one we don't register
25:03 - server workers so service workers so
25:05 - that's a big deal right
25:07 - um
25:09 - so
25:11 - we need to figure out why we're not
25:12 - registering a service worker
25:15 - and obviously we're not responding
25:18 - um
25:19 - properly when we're offline
25:22 - so we're not prompted to install the app
25:24 - so a lot of these are all basically
25:26 - because we don't have that service
25:28 - worker running
25:29 - okay but there's no um no manifest
25:37 - so
25:38 - maybe that's the best place for us to
25:40 - look for this is that if we don't have
25:43 - the correct data in our manifest we're
25:45 - not
25:46 - all of this isn't going to work
25:48 - so
25:51 - um
26:01 - so for my note for this section for this
26:03 - whole section
26:05 - i'm just going to say let's make sure
26:06 - that manifest is
26:08 - correct uh and then we can run it again
26:11 - and see how much of this is is gonna
26:14 - work
26:15 - because
26:18 - the um
26:20 - i i think
26:22 - a lot of these issues will be solved if
26:24 - we have the correct manifest okay
26:28 - if we fix a manifest and we're still
26:29 - having issues then we know it's
26:30 - something else but
26:32 - i don't want to dig too far into these
26:36 - without testing that first so that's
26:38 - going to be our first step you can see
26:40 - we did pass some things right so
26:42 - um
26:44 - we do have some content when
26:46 - javascript's not available
26:48 - uh that's probably because of our server
26:51 - side rendering
26:52 - okay which is
26:54 - uh definitely a good thing
26:56 - not just for seo we use https we
26:59 - redirect https
27:02 - our page load is fast enough on 3g which
27:05 - as slow as it is it's still fast enough
27:09 - um
27:10 - we have uh meta viewport tag and the
27:13 - content is sized correctly for the
27:15 - viewpoint right so all of these have
27:17 - nothing to do with our service workers
27:19 - so that leads me to believe even more
27:22 - that all these problems are due to our
27:26 - service worker not firing up and i think
27:31 - that stems from our manifest as well but
27:34 - we'll check that out uh in future
27:36 - streams or maybe i'll check it out you
27:39 - know on my own and then just let you
27:41 - know what what happened with that on the
27:42 - stream
27:44 - uh we do have things to manually check i
27:46 - suppose so
27:47 - site works cross browser
27:51 - oh interesting okay so it's it's saying
27:54 - you're testing other browsers which is
27:56 - definitely good
27:57 - um
27:59 - make sure page transitions don't feel
28:01 - like they block on the network
28:04 - okay
28:05 - and each page has a url
28:07 - cool we do
28:09 - this definitely
28:11 - each page does feel like it has a url
28:13 - clicking around the site this looks good
28:16 - i tell you truth i haven't tested on a
28:18 - lot of different browsers yet so that's
28:20 - something i'm definitely going to need
28:21 - to do
28:22 - we can have a lot of users test and then
28:24 - we can also use browser stack
28:27 - to
28:28 - test browsers
28:30 - all right from the same computer we can
28:32 - test in a lot of different browsers
28:35 - and operating systems even mobile
28:38 - right through our
28:41 - um
28:42 - our browser
28:43 - really useful it's a monthly service uh
28:46 - but it's definitely it's it's worth it
28:49 - you know for
28:50 - you know my organization to have that
28:52 - it's definitely worth it
28:56 - all right let me check the uh live chat
28:59 - now since we're
29:00 - i've gotten through the first two
29:03 - uh scores i'm gonna check this and just
29:05 - make sure i'm not missing anything
29:13 - uh shoe pum says get well soon thank you
29:16 - thank you i appreciate it i hope i'm
29:18 - getting well soon because i'm
29:20 - i'm taking the family on a vacation
29:24 - on friday so we're gonna i'm gonna leave
29:26 - friday night drive all through the night
29:28 - well hopefully all the kids can sleep
29:30 - and then we're gonna we're gonna end up
29:31 - in uh going to the beach in virginia so
29:35 - anybody in virginia beach area you know
29:37 - let me know
29:38 - if there's any meetups or anything going
29:40 - on
29:41 - um next week i'll be there for a whole
29:43 - week
29:44 - but if i'm still not feeling well it's
29:46 - gonna be rough to drive through the
29:47 - night
29:48 - uh
29:49 - so hopefully i'm better
29:53 - uh let's see
29:58 - oh jeff says glad i caught a little bit
30:00 - of stream today was wondering why i
30:01 - didn't see you last couple of days get
30:03 - well thanks jeff i appreciate it
30:07 - uh john says for anyone who needs to
30:09 - deal with large images on a site image
30:11 - editing uh
30:13 -  it's aggressive
30:15 - jpeg compression plus removal of
30:18 - unnecessary file code done with full
30:20 - live image view it's a monster full page
30:23 - image
30:24 - uh
30:25 - cool and i i use for editing
30:28 - uh it's a
30:29 - free
30:30 - um
30:31 - program so
30:34 - i'm definitely gonna check that out
30:39 - uh jacob asks what browser i'm using now
30:41 - i'm using chrome
30:43 - uh which is recently updated so whatever
30:45 - the latest version of chrome is for
30:48 - for mac for the latest mac operating
30:51 - system uh that's what i'm using
30:55 - nikki says this next js have a cookie
30:57 - cutter way to enable service worker
31:00 - uh create rack that react app has it
31:02 - baked in and gatsby makes it super easy
31:04 - yeah it i thought next did have it baked
31:07 - in
31:08 - so
31:10 - i'm not sure what happened with that i'm
31:12 - gonna have to double check and see maybe
31:14 - some of the custom server things we did
31:17 - messed up
31:18 - the automatic stuff or maybe i'm just
31:20 - mistaken and
31:22 - next doesn't have it automatically baked
31:24 - in
31:26 - um
31:28 - and jacob asked how i got the dark mode
31:31 - yeah so if you go into
31:33 - settings
31:35 - uh under theme so preferences and then
31:39 - appearance theme you can switch from
31:41 - dark to light
31:43 - so i always keep it on dark
31:50 - okay
31:53 - um
31:56 - oh nikki says image
31:58 - optim is good for a mac
32:01 - and jacob asks about tinypng.com
32:04 - you know i've used a lot of different
32:06 - things but what i've mainly
32:08 - used is
32:10 - on the command line
32:11 - i've used image magic and i find that's
32:15 - very powerful if you have a lot of
32:16 - images if i only have one image
32:20 - i will open it up in something like
32:23 - and edit it you know by hand
32:26 - but if i have a ton of images
32:29 - like hundreds of images
32:31 - a command line tool is way more powerful
32:34 - you can just set the parameters of
32:36 - exactly how you want the images resized
32:40 - or cropped or
32:42 - compressed
32:43 - and just batch convert all those images
32:47 - so
32:48 - there's a ton of different options
32:51 - with image magic i mean
32:54 - i found with image magic if something's
32:55 - possible to do with an image there's a
32:58 - way to do it it just takes a little bit
33:00 - of research and reading the docs which
33:02 - are extensive
33:03 - um
33:04 - but
33:05 - it's a very cool command line tool
33:08 - and since it runs on the command line
33:09 - you could even make it part of your
33:10 - build process
33:12 - uh you know if you wanted to
33:16 - so i definitely recommend that for for
33:18 - batch image processing
33:23 - all right let's check out our
33:24 - accessibility score now which as i
33:26 - mentioned earlier i was i was pleasantly
33:28 - surprised at this
33:29 - um
33:31 - i i'm definitely
33:32 - i have an uncle who is blind and
33:36 - uh is is still like
33:38 - um
33:40 - very active in terms of learning new
33:42 - things and being on the internet and
33:43 - everything so
33:46 - it's something that because of that i
33:48 - may be a little bit more aware about and
33:50 - i think about it more um
33:53 - but i still think i could do a much
33:55 - better job at making things accessible
33:58 - um
34:00 - so and accessibility isn't just about
34:02 - those who are you know completely blind
34:04 - there's there's a whole different
34:06 - there's a whole range of different
34:08 - accessibility issues but i think this is
34:10 - great that this is included in here
34:14 - um so let's check this out
34:16 - uh we have some iframe issues
34:19 - and
34:21 - the iframe doesn't have a title this is
34:23 - probably in our uh our videos
34:26 - right so
34:30 - the this youtube video is loading in an
34:33 - iframe i don't think i put any iframes
34:36 - on the page
34:38 - other than that
34:39 - so
34:40 - we can definitely fix that by adding
34:43 - uh elements to our iframes what i
34:45 - actually was thinking about doing is
34:49 - setting this up i i love that we can
34:51 - load this these videos right here and
34:53 - have them be so like available but i
34:56 - really would rather
34:57 - like try to lazy load them
34:59 - or do something because we we are
35:01 - loading all the stuff we need to play
35:03 - this video
35:05 - right away and we definitely don't need
35:07 - to so
35:09 - that's another thing that maybe i'll
35:11 - just look
35:12 - um add to our lazy loaded images
35:16 - in all ad and video
35:20 - if possible
35:24 - but then also
35:26 - let's make a
35:28 - note gonna make a note about adding
35:32 - we're gonna add uh
35:34 - say title
35:42 - so we're gonna add a title attribute to
35:44 - those iframes
35:46 - right it actually shows you the elements
35:48 - and uh if we could see the screen over
35:51 - over here when we did that
35:53 - it would it would highlight the area on
35:55 - the screen we can hover over and it'd
35:58 - show us and in fact
36:00 - those are the the two iframes are both
36:02 - the youtube iframes so
36:04 - uh that's that's what's causing the
36:06 - issue
36:07 - so
36:08 - that's nice that's an easy fix so that's
36:11 - it's good when when it's straightforward
36:13 - we know exactly what to do to fix it
36:15 - let's check out this color contrast i
36:16 - was a little bit surprised by this
36:19 - um
36:20 - but it makes sense so i'll show you the
36:23 - failing elements on the other screen but
36:25 - it says
36:26 - that there's a low contrast text it's
36:29 - difficult or impossible for many users
36:31 - to read so let's check this out
36:34 - and what the texts are talking about is
36:36 - this text
36:38 - so i was a little surprised about it but
36:40 - then once i thought about it i
36:41 - remembered you know what i have had
36:43 - people complain about this text before
36:46 - and we actually made it darker at one
36:48 - point
36:49 - but evidently we didn't make it dark
36:51 - enough and it's still hard to read so
36:53 - we're gonna have to think about
36:55 - a different color here either darkening
36:58 - the color even more or replacing it with
37:00 - a different color you know maybe this
37:02 - could be
37:03 - that that green color
37:06 - or our gold color
37:08 - um
37:10 - you know so we can switch it out for a
37:11 - different color uh in the in our color
37:14 - palette
37:17 - uh but
37:18 - you know this this color is not gonna
37:20 - work so not just here probably anywhere
37:22 - we use this throughout the site this is
37:25 - going to have to change
37:30 - and so that's like i said accessibility
37:31 - is not just about people who are blind i
37:34 - mean
37:35 - right it's about
37:37 - people just
37:38 - not everybody has the vision
37:41 - to be able to see this for me i can see
37:44 - it it looks fine
37:45 - other people might look at that and not
37:47 - be able to make out what that is
37:51 - so we're gonna make a note to change
37:53 - that yellow color everywhere
38:06 - okay
38:10 - let's say uh elements are well
38:12 - structured so in this section we're
38:13 - looking at the structure and we say here
38:15 - we we actually have a list
38:19 - so those lists do not contain only li
38:21 - elements
38:23 - and script supporting elements
38:27 - so it says screen readers have a
38:29 - specific way of announcing lists
38:31 - so we need a proper list structure it's
38:34 - going to mess up the screen reader so
38:36 - this is what it's talking about here
38:39 - this section
38:41 - so let's inspect this and see what's
38:44 - going on
38:47 - switch over to our elements here
38:52 - so
38:53 - is this where our list is
38:55 - yeah where does it start
38:57 - okay here's our ul
38:59 - so within our ul
39:01 - we shouldn't have divs
39:04 - these should all be lis
39:07 - so we've messed up something in this
39:10 - component
39:11 - and
39:12 - i expect
39:14 - i suspect that maybe
39:17 - this is not by default immaterial ui i
39:20 - would think they wouldn't do something
39:21 - like this this is probably something
39:23 - custom that that i did at some point
39:26 - uh without realizing the impact that it
39:30 - would have on accessibility
39:32 - so
39:33 - you know we have a component for this
39:35 - we'll need to just go in and check it
39:37 - out
39:38 - so
39:40 - i'm just going to make a note to say
39:42 - um
39:44 - make sure
39:45 - uh
39:47 - list component
39:57 - has proper uli structure okay so i i
40:01 - think basically if we were to just take
40:03 - all these div tags
40:04 - and make sure that they were lis instead
40:07 - of divs
40:08 - that would solve the problem
40:12 - all right let's go back to our audits
40:15 - scroll back down to where we were
40:23 - and really i mean think about if if we
40:26 - fix that
40:27 - then at least our home page potentially
40:29 - could get a 100
40:31 - score on accessibility uh which is
40:34 - awesome
40:35 - right of course we'd have to look at our
40:37 - other pages and make sure that we're
40:38 - still
40:39 - it's still accessible but
40:41 - you know that's that's pretty good
40:45 - now i'm not sure if this looked at
40:49 - our our menu our side menu or not
40:53 - so that would be something that we would
40:54 - want to make sure was definitely
40:57 - accessible that's important
41:01 - uh and you can see we we passed a lot of
41:03 - audits as well so
41:05 - uh we're using our attributes correctly
41:07 - following best practices for arya
41:10 - um
41:12 - yeah
41:14 - so that's really cool we have some
41:15 - things that
41:17 - aren't applicable so probably elements
41:20 - um
41:22 - that we didn't use
41:26 - and then there's a lot of things to
41:27 - check
41:29 - so need to go through and and either
41:31 - check these myself or have somebody else
41:33 - check these
41:34 - um you know just go through the page and
41:37 - hit the tab button and see like does
41:39 - this even make sense
41:41 - of where the tab is focusing
41:43 - right
41:46 - try to use keyboard stuff
41:50 - a lot of these have to do with the focus
41:53 - on the screen
42:00 - oh this is a good so visual order on the
42:02 - page follows dom order
42:04 - right so
42:05 - uh a screen reader is going to read
42:07 - through your dom tree
42:09 - right and if you have it all out of
42:11 - order and have used let's say like css
42:14 - to change the order on the page
42:17 - it would make sense if you're looking at
42:19 - it looking at the ui but it's not going
42:21 - to make sense of the screen readers
42:23 - going through it so keep that in mind
42:25 - and we'll have to check that out for
42:26 - this project
42:29 - headings don't skip levels
42:31 - that's a good one that's one we're gonna
42:32 - have trouble with for a lot of those
42:34 - interior pages where we've pulled over
42:36 - some badly formatted formatted content
42:39 - so we'll kind of have to slowly go
42:40 - through those and fix that
42:47 - cool
42:48 - all right the last one left is best
42:50 - practices i'm gonna check the chat again
42:52 - before we go into that because i see a
42:54 - little bit more activity in there
43:01 - okay
43:03 - john hanson says take lots of vitamin d3
43:06 - and a good multi b that will help you
43:09 - get your energy up from being sick
43:11 - okay cool i've been taking a lot of uh b
43:13 - vitamins i'll have to i have to make
43:15 - sure i'm getting d vitamins i just ran
43:17 - out of my multivitamin
43:19 - like two days ago or something so maybe
43:22 - i'll have to get some more
43:29 - hey michael creels here
43:32 - he says sorry i was taking a nap don't
43:33 - worry about it i wish i was taking a nap
43:35 - too
43:48 - john hanson says are you using css
43:50 - variables for your colors easier to
43:52 - tweak globally um yes some of them
43:56 - nikki says they're they're there
43:58 - in the jss theme
44:00 - um
44:02 - yeah so
44:05 - changing those colors will probably fix
44:07 - a lot of it there may be some places
44:09 - where i like manually put the color in
44:11 - in a style sheet somewhere so i'll have
44:14 - to double check
44:15 - that
44:17 - but i mean that that'll be as simple as
44:18 - just doing uh you know find and replace
44:21 - globally throughout the project
44:29 - michael says some of the accessibility
44:31 - rules seem weird until you actually use
44:33 - a screen reader like chromevox then you
44:35 - understand what's lacking
44:37 - yeah actually that's a great idea
44:39 - uh that might not
44:41 - maybe it'll be a good stream to try to
44:43 - do one day where we go through one of
44:45 - our projects with a screen reader and
44:48 - like listen to what it's saying
44:51 - uh just to get that that experience
44:57 - uh
44:58 - nikki says when doing accessibility work
45:00 - use the
45:02 - axe so it's
45:04 - a
45:06 - capital xe
45:07 - devtools plugin
45:09 - uh it's awesome
45:12 - all right i'll have to check that out
45:13 - i've never even heard of that
45:16 - matt dutcher says feel better b vitamins
45:18 - and airborne uh
45:21 - z cam is amazing for clothes
45:24 - all right i'll have to
45:27 - obviously check that out i haven't heard
45:28 - of that i do have airborne i need to
45:31 - take it
45:34 - and uh thank you
45:37 - all right let's get through this last
45:38 - section here
45:41 - um best practices so we got a pretty
45:43 - good score there i mean that's awesome
45:46 - uh but we failed two things
45:48 - so let's check out the manifest short
45:52 - name will be truncated when displayed on
45:54 - home screen
45:56 - so make your app's short name fewer than
45:58 - 12 characters
46:02 - okay
46:04 - um
46:05 - that seems like an easy fix right we
46:08 - just have our name is too long so
46:11 - that doesn't seem like it'll be a big
46:12 - deal
46:15 - and uh we have errors logged to the
46:18 - console
46:19 - they come from network request failures
46:24 - interesting
46:27 - all right
46:30 - it looks like
46:34 - we may have been trying to pre-fetch
46:38 - some of this
46:43 - i think probably the it was trying to
46:46 - pre-fetch these pages and then somehow
46:48 - it wasn't working properly
46:51 - um
46:52 - it may actually be tied into
46:55 - our progressive web app stuff not
46:57 - working
47:02 - everyone loading route yeah and these
47:04 - are the same things with the routes
47:08 - and then we also have some stuff with
47:10 - our manifest
47:11 - um
47:13 - so it says it failed to load it but then
47:15 - it also says that there's an unexpected
47:17 - token
47:18 - so
47:19 - i think all of these might be able to be
47:21 - fixed by fixing the our manifest uh json
47:26 - so
47:28 - that's probably gonna solve just fixing
47:30 - that is gonna solve a lot of our issues
47:33 - um
47:35 - so we may be able to get that up to a
47:37 - hundred percent just by that oops i
47:39 - forgot seo sorry i said this was the
47:41 - last one it's definitely not
47:43 - uh we passed a lot of stuff so
47:46 - i'm not gonna go through it all
47:48 - uh but you can just check some of these
47:50 - other things that they consider best
47:52 - practices
47:59 - all right this is actually cool avoid
48:01 - front-end javascript libraries with
48:02 - non-security vulnerabilities
48:04 - that's kind of a big one
48:06 - i know a lot of my older sites
48:09 - were you know you
48:10 - you check them now and it's like this
48:12 - thing is not secure right it's
48:15 - a lot of times we build sites and then
48:17 - we don't maintain them you know they may
48:19 - be maintained by someone else or they
48:21 - may never be maintained again you know
48:23 - your
48:24 - your contracts up with the client and
48:25 - you're done right and the client
48:28 - said you know well hey my site still
48:30 - works it's fine
48:31 - uh so there are a lot of front-end
48:34 - javascript libraries out there that are
48:35 - insecure that are still on sites you
48:37 - know because of that
48:40 - it's cool to see that we don't have that
48:41 - issue
48:50 - okay
48:51 - um so let's check our seo so this is
48:53 - search engine optimization
48:59 - and um
49:00 - oh nikki says is that an anti-jquery
49:03 - rule yeah i didn't want to go there i
49:05 - didn't want to call out jquery
49:06 - specifically but yeah that's what i was
49:08 - thinking of
49:09 - it seems like there are a lot of
49:11 - versions of jquery that um
49:14 - are considered insecure
49:16 - so
49:18 - yeah that's uh
49:21 - definitely something to watch out for
49:24 - uh but search engine optimization in
49:26 - case you're not familiar with that that
49:28 - has to do with how high you rank on a
49:31 - search page usually everybody worries
49:33 - about google search rightly so they're
49:35 - the largest search engine by far
49:37 - if you're okay on google search you're
49:39 - probably gonna be okay on other search
49:40 - engines
49:43 - uh
49:44 - so
49:45 - we usually want to rank as high as
49:47 - possible we want to be on that first
49:48 - page of the google search as high up as
49:51 - possible
49:52 - and so that's where the seo comes in
49:55 - that's a big part of it
49:58 - uh so let's check out what we're doing
50:00 - wrong
50:01 - so a document does not have a meta
50:02 - description
50:04 - right we we didn't include a meta
50:05 - description
50:06 - okay so
50:08 - not not really hard to fix
50:11 - we just have to make sure we include
50:12 - that
50:13 - links do not have descriptive text so we
50:15 - have one link that does not have
50:17 - descriptive text
50:19 - so we did we did a good job of putting
50:21 - this stuff in but we didn't on about our
50:24 - mission
50:26 - so
50:28 - we'll just have to put that in
50:33 - and you know what i forgot to make a
50:35 - note so let's do
50:43 - another descriptions
50:45 - [Music]
50:59 - what was that page our mission
51:07 - all right and let's see this one
51:09 - document doesn't use legible font sizes
51:12 - it says what was that 40 42.3 percent of
51:15 - text is too small and very helpfully it
51:18 - tells us exactly what is too small
51:21 - so we have some stuff at 13 pixels some
51:23 - at 14
51:25 - everything needs to be greater than or
51:27 - equal to 16. well this is was a bit
51:30 - surprising to me because i'm always
51:32 - about larger font sizes
51:34 - but let's see where we went wrong here
51:36 - so i'm thinking here
51:38 - uh mainly i never fixed this because i
51:40 - had always thought that i would redo
51:43 - this component anyway so i just kind of
51:46 - left it as is i i didn't really like it
51:50 - it looks like this font might be a bit
51:52 - small and this is another component
51:54 - where
51:56 - i didn't think i was going to keep it
51:57 - like this as well
51:59 - but it seems like
52:02 - it seems like everything else is at
52:05 - least 16.
52:07 - so
52:08 - i i expect it's probably
52:11 - almost everything within this card
52:14 - and then maybe this here
52:16 - uh which that's not a big deal because
52:19 - i was already planning on updating or
52:22 - removing some of these
52:26 - uh but i will make a note just to make
52:27 - sure that all fonts are at least 16
52:29 - pixels
52:42 - all right and let's see the things that
52:44 - we pass
52:46 - all right we get that meta viewport tag
52:49 - uh we have a title element
52:53 - stat good status codes
52:55 - we are not blocking anything from
52:56 - indexing uh believe it or not i've i've
52:59 - had clients websites where
53:01 - they
53:01 - i go in and check out their site and
53:04 - realize that they're actually blocking
53:06 - from their block from being indexed
53:09 - so whoever had built the site previously
53:11 - or worked on the site had stopped it
53:13 - from being indexed so
53:15 - uh you know they wondered why their seo
53:17 - wasn't
53:18 - you know it wasn't doing well and that's
53:21 - that's why
53:23 - uh
53:24 - canonical
53:28 - great
53:29 - so you have those here's some of the
53:30 - things to check out
53:32 - uh paige is mobile friendly right um
53:35 - definitely
53:37 - we could do this mobile friendly test
53:38 - i'm not gonna do it right now
53:40 - um
53:41 - and
53:42 - we know the site's mobile friendly we've
53:44 - been developing with that in mind all
53:46 - along but we'll probably end up doing
53:47 - this test at some point
53:49 - structured data is valid so we can we
53:53 - also use a testing tool to check out our
53:55 - structured data
54:00 - so not bad definitely want to run this
54:02 - again after we've done some more because
54:04 - you know when you have some changes to
54:05 - make on the front page
54:07 - you know
54:08 - definitely with our images and things
54:10 - with our videos our fonts
54:12 - we still have to put content down here
54:15 - you know we have our
54:16 - our bacon ipsum
54:18 - text here
54:19 - so there's going to be content here that
54:21 - will need to be checked that we haven't
54:22 - even done yet
54:24 - and i imagine we're going to have
54:26 - different content here potentially even
54:28 - more content if we set up that lazy
54:30 - loading it shouldn't be an issue though
54:33 - but this gives us a really good look
54:36 - now at this point in the development of
54:39 - what we're doing right so that we should
54:41 - keep doing it and what we need to
54:43 - improve on
54:44 - uh but overall
54:46 - you know i'm
54:48 - i'm pretty confident we can get all of
54:50 - these scores up significantly
54:52 - there's nothing in here that i'm like
54:54 - scratching my head at saying
54:56 - how are we going to do that
54:57 - uh you know everything we've got a plan
55:00 - for everything you know sometimes that
55:02 - plan is just let's do a little research
55:04 - on this uh but
55:08 - i i definitely think we can get that
55:11 - accessibility up to 100
55:13 - we can get those best practices up to
55:15 - 100.
55:16 - there's no reason why we couldn't get
55:18 - the seo up to 100 as well if we fix that
55:21 - manifest this should be a hundred the
55:23 - performance is the only thing that i'm
55:25 - saying maybe not a hundred the reason
55:28 - being uh we have those youtube embeds
55:31 - and i know every time i've used the
55:33 - youtube in bed it's been impossible to
55:35 - get up to a hundred
55:37 - so
55:38 - in unless we figure out some way to lazy
55:40 - load those i don't think we're gonna
55:42 - have a hundred percent but we'll see
55:45 - so i'm really excited to get to work on
55:48 - these and then rerun this and see it you
55:50 - know it's kind of like a little game to
55:52 - see what you can get i will say this
55:54 - though kind of just as a
55:57 - as a cautionary note
56:00 - uh be careful about getting too caught
56:02 - up into getting hundreds and everything
56:04 - right the first things you do will be
56:06 - really easy and you'll gain a lot but
56:08 - then that difference between like a 95
56:11 - and 100 is gonna take a lot of work and
56:14 - from a user standpoint they may not even
56:16 - notice the difference
56:18 - so
56:19 - while it'd be really fun to get all
56:21 - hundreds and it'd be cool when i would
56:22 - screenshot it you know uh
56:26 - nobody really cares about that your
56:28 - users don't care what your score is
56:32 - it just needs to be fast to them
56:35 - um
56:37 - and
56:38 - that's all that really matters so
56:42 - the numbers give you a good guide as to
56:44 - what you do to make it faster but at the
56:46 - end of the day like get out your phone
56:48 - test it out
56:50 - uh emulate a slow network test it out if
56:53 - it's fast
56:54 - then it's fast
56:56 - you know whether it's a 95 or 100
56:59 - it doesn't matter
57:01 - just make sure it's fast
57:05 - all right
57:07 - so i'm just gonna go back and do some
57:09 - questions and uh just talk with y'all
57:11 - for a little bit before we end the
57:12 - stream
57:14 - and uh let me know especially if you
57:16 - have any questions about anything we've
57:18 - gone over with with this audit or with
57:20 - devtools you know definitely let me know
57:22 - but also open any other questions as
57:24 - well
57:43 - all right michael creole says setting up
57:44 - a manifest json file takes a minute or
57:46 - two that's awesome that's good to hear
57:49 - that's that's going to be a huge
57:51 - improvement in our score just setting
57:52 - that up
57:57 - uh
57:58 - shubham says is there any tool which can
58:01 - uh give us a hint about all this while
58:03 - developing
58:05 - i don't know of any tool but that's a
58:07 - great idea
58:08 - like a nice um like editor plug-in or
58:11 - extension that that could do that
58:15 - i mean that would be awesome i mean some
58:17 - of it
58:20 - yeah some of it would have to be a
58:21 - browser plug-in and then some of it
58:24 - could be done with uh an editor plug-in
58:29 - but a lot of it i think could be done
58:31 - that way that's a great idea
58:42 - michael says audits are like a
58:44 - whack-a-mole game for devs yeah for sure
58:51 - uh nikki says hints while developing uh
58:53 - linting setup yeah yeah that's that's
58:56 - definitely true you could set some
58:57 - linting rules to help you make sure a
59:00 - lot of the markup stuff is correct
59:04 - so some of this stuff where
59:07 - uh you're making sure that certain
59:09 - attributes are
59:10 - are on certain elements
59:13 - that could be a linting thing for sure
59:17 - actually now that i think about now that
59:19 - we're talking about it i just want to
59:21 - check and see that manifest json i want
59:23 - to see if we have it
59:28 - so
59:30 - all right let me make this bigger i know
59:31 - that's probably way too small for
59:33 - everyone to see right now
59:42 - which
59:44 - what be in our static
59:48 - no not pages static
59:54 - would we want to put our manifest json
59:56 - in our static files or is that
59:59 - created in our build
60:05 - we have a manifest.js
60:13 - oh yeah that can't be it
60:16 - no that can't be it
60:21 - all right
60:24 - build manifest json
60:30 - that's not what i want
60:42 - pages manifest json
60:44 - so we have other types of manifest files
60:46 - but i don't think we have the
60:49 - the manifest file that we need
60:52 - so that definitely explains a lot
60:57 - i'll have to look up the format and and
60:59 - what all i need for that
61:02 - all right let's see
61:05 - uh shubham says uh can you briefly
61:08 - explain how do we do page indexing for
61:11 - seo and how it works
61:13 - um
61:14 - well the search engine will take care of
61:17 - indexing so you just want to make sure
61:18 - that your page is readable by search
61:20 - engine
61:21 - so
61:22 - if you're using something like react
61:25 - that does you know
61:26 - that could potentially do everything on
61:28 - the client side you want to make sure
61:29 - you have server-side routing as well
61:32 - so that the browser can get html that it
61:35 - can read
61:36 - instead of just some javascript because
61:38 - it won't wait around for your javascript
61:40 - to make api calls and get data back
61:42 - it'll just assume that whatever it sees
61:45 - at first is what your page is
61:47 - and so you basically it'll think you
61:50 - have a blank page or mostly blank page
61:53 - um you know make sure you have title
61:55 - tags
61:57 - um you know
61:58 - descriptions meta tags your descript
62:01 - meta descriptions
62:02 - as well
62:04 - um proper use of heading tags uh is
62:08 - important
62:10 - so there's a lot of factors that go into
62:11 - seo and it's like a whole field all on
62:14 - its own
62:15 - uh so
62:16 - you know definitely you know check into
62:18 - what the latest best practices are
62:21 - but in terms of your web development you
62:23 - just want to make sure that the search
62:25 - engine
62:27 - the search engine you know um bots the
62:30 - the crawlers right that they have going
62:32 - out there and index indexing pages
62:35 - that
62:35 - they can actually see your content
62:39 - and you know mainly through server side
62:41 - rendering that's
62:42 - that's your best way to handle that
62:46 - uh umberto says
62:48 - hi jesse do you have any advice for how
62:50 - to work with a brand whose color palette
62:53 - does not match the product
62:55 - uh specifically it is an employment
62:58 - services site and the palette is lime
63:00 - green
63:04 - do the best you can with your color
63:06 - palette and i would try to make use of
63:08 - white space
63:10 - a lot so
63:11 - you know you can
63:13 - kind of like we've done here
63:15 - if the color palette doesn't look great
63:18 - on uh on a screen which i don't think
63:21 - the franciscan color palette looks great
63:24 - so
63:25 - you know it wasn't designed
63:28 - to look good online it was designed
63:30 - before
63:31 - right there was you know the internet
63:33 - right so um
63:37 - we make use of white space a lot of
63:40 - white space
63:41 - right we have a clean theme and then we
63:44 - just use some of the colors here and
63:46 - there as highlights right
63:48 - um
63:49 - so like that gold color that we see kind
63:52 - of here and
63:54 - on the outline of things
63:56 - it doesn't look great in a huge block it
63:58 - looked kind of dingy if you have a huge
64:01 - block of it um so we only use it as a
64:04 - trim and it looks really nice
64:07 - you sparingly
64:09 - so maybe you might want to think about
64:11 - doing something like that
64:14 - um maybe using
64:17 - you know seeing how far you can play
64:20 - with the the color right and the hues
64:25 - you know that might be a good idea as
64:27 - well so it does kind of depend on how
64:30 - much leeway you you'll have to to work
64:32 - with those colors
64:34 - change them a little bit maybe
64:36 - uh
64:37 - yeah i don't i don't know exactly
64:41 - what that situation is but
64:43 - if you got some colors that aren't great
64:45 - to work with then just use white as much
64:48 - as possible
64:50 - or if you're doing a dark theme use like
64:52 - the black or really dark gray as much as
64:54 - possible
65:03 - oh nikki says use ctrl p in the editor
65:06 - to search for it that's a great idea
65:09 - wonderful
65:20 - no we don't have a manifest json
65:22 - all right cool
65:24 - definitely need to do that then
65:42 - all right michael says if we had one it
65:44 - would be in the root okay good to know
65:50 - on bears is as it looks kind of like a
65:52 - lawn care or recycling color scheme
65:57 - customer wants the colors reflected in
65:59 - the site
66:00 - all right i would
66:02 - if the customer wants the colors in the
66:03 - site then i would i would use plenty of
66:06 - white space or if you want to go dark
66:08 - themed use
66:09 - you know the dark space right but
66:12 - use the colors uh in key areas where
66:15 - they're visible but there's not a ton of
66:17 - the colors
66:18 - uh and definitely you know let
66:23 - let your client know the benefits
66:26 - of having all that white space
66:29 - you know maybe look up some statistics
66:30 - or studies if you if you need to about
66:34 - you know the the user being able to
66:36 - focus on the the text more and on the
66:39 - content of the site
66:40 - uh if you can
66:43 - uh
66:46 - try to have
66:47 - concrete evidence to back up your
66:51 - decisions right so if you if you do go
66:54 - in and say like this color is terrible
66:56 - like
66:58 - that's not gonna work but instead don't
67:00 - even talk about their color explain why
67:02 - white is so awesome and will be helpful
67:05 - right and
67:08 - uh it takes the focus away from
67:10 - something negative about their colors
67:13 - and it spins it as something positive
67:15 - and maybe you could even give examples
67:17 - of other sites
67:19 - that do well
67:21 - that utilize a lot of white
67:25 - even maybe like well-known brands who
67:27 - have well-known color schemes and if
67:28 - they still use a lot of white on their
67:30 - site like you know things like that so
67:33 - hopefully the client likes what you do
67:35 - and you don't have to do any of that but
67:37 - just be prepared to
67:39 - explain the benefits of
67:42 - you know a design
67:45 - without a lot of color
67:47 - if you need to
67:53 - and the bottom line is if the client
67:54 - really wants that color all over the
67:56 - place and it turns out ugly you know you
67:58 - can just do it get paid and don't put
68:00 - your name on it
68:02 - leave it out of your portfolio i mean i
68:04 - understand how it is sometimes you got
68:05 - to pay the bills so
68:07 - at the end of the day if the client
68:09 - really demands it even though you tell
68:11 - them it's against your
68:14 - uh you know your suggestions of what's
68:16 - best for the site then
68:18 - you know that's
68:20 - that's what you got to do now if if you
68:22 - don't need the money right now then you
68:24 - could be choosy and say okay find
68:25 - somebody else to do it
68:27 - uh but most people don't have that
68:29 - luxury and i totally understand that you
68:31 - know you
68:33 - you know you gotta get the job uh you
68:35 - gotta get it done and get paid
68:43 - uh let's see
68:45 - michael says i talked to nikki about
68:47 - this but i'm having problems with the
68:49 - lack of motivation so i like watching
68:51 - your streams to try to get it back
68:53 - three weeks and counting now uh maybe
68:56 - why i bugged you earlier oh don't worry
68:58 - about bugging me that was i was cool i'm
68:59 - like i was happy that that you were
69:02 - you know checking in on me
69:05 - so yeah i definitely understand about
69:07 - lack of motivation
69:09 - uh i struggle with that too and the
69:11 - streams help me as well
69:14 - um
69:15 - you know i
69:17 - i don't want to come on a stream every
69:19 - day and have nothing done from the
69:21 - previous stream right i i want to get
69:23 - things done and be able to you know have
69:25 - progress in the project and have new
69:28 - things to talk about with you all
69:31 - so i totally understand that
69:33 - motivation can be hard sometimes
69:38 - i don't know the best thing is
69:41 - you just get a project that you're
69:43 - excited about you know some or
69:46 - you know some new thing you're learning
69:47 - that you're really into
69:48 - uh and that seems to help me get
69:51 - motivated
69:52 - and um
69:54 - you know sometimes exercise helps
69:57 - for me like caffeine helps
69:59 - um
70:01 - sometimes people react differently to
70:02 - caffeine so that might not work for
70:04 - everybody and um
70:08 - you know
70:09 - sometimes
70:12 - sometimes you just
70:15 - you just gotta do it like there are some
70:16 - things that it wouldn't doesn't exactly
70:19 - get you excited or really that motivated
70:21 - but it'll help you to just get the job
70:22 - done like
70:24 - you know i i need to do this because i
70:26 - need to get paid i'm not gonna be able
70:28 - to pay my bills or if i don't do this my
70:30 - boss is gonna be upset with me
70:32 - or you know so anything like that
70:34 - it's not like positive reinforcement but
70:38 - if it if it gets you
70:40 - to get the work done
70:41 - it's still good
70:44 - you know you don't want to always have
70:46 - that
70:46 - you know to rely on but
70:48 - it's a nice backup plan like all right
70:50 - well if i can't get myself motivated all
70:52 - these nice ways
70:54 - at least i'll be afraid to mess up and
70:56 - that'll be my motivation
70:59 - so that can help
71:06 - now i know for some people like
71:08 - giving updates on social media about
71:11 - their progress helps because it's like
71:13 - if i tell people i'm gonna do this and
71:15 - then i don't do it then you know that
71:18 - everybody's gonna know i didn't do it
71:19 - that can help some people as well
71:25 - it could probably hurt some people too i
71:27 - mean if people struggle with anxiety
71:29 - that may not be the best thing to do but
71:31 - uh it does work for some
71:36 - uh nikki says
71:41 - i couldn't help a lot here sadly also in
71:44 - general it's super easy to get
71:45 - overwhelmed
71:46 - yeah it is
71:48 - it is i've yeah there are a couple times
71:51 - recently where i felt overwhelmed with
71:52 - just the amount of work that
71:55 - still needs to be done on this project
71:57 - and i'm working on another project um
72:01 - um
72:02 - so i don't know if y'all have ever been
72:03 - to the site balance.io it's like a
72:06 - crypto wallet site
72:08 - um
72:09 - they're coming out with an app
72:11 - and they're using react native to build
72:13 - it so i've been working on that
72:15 - and uh so
72:17 - you know it's like on top of all the
72:18 - other things i have this which is really
72:21 - fun and i like working on it
72:23 - uh but it's just one other thing to be
72:25 - kind of overwhelmed about so
72:28 - uh
72:30 - the best thing that that i can do when i
72:32 - feel overwhelmed is just like have a
72:34 - to-do list and just say
72:36 - i'm gonna do this one thing
72:39 - and then i get focused
72:41 - and i do one thing and i get it done and
72:43 - it feels good to get that done
72:45 - and then i move on and i move on right i
72:47 - get to just chip away it forces me to
72:49 - stop looking at the big picture and
72:51 - focus on something little and manageable
72:54 - and uh usually i can start to get my
72:57 - mind focused where it needs to be
72:59 - and that overwhelming feeling goes away
73:08 - okay
73:10 - all right well i'm done with the
73:11 - questions for the stream also i forgot
73:13 - to mention earlier and maybe i'll bring
73:15 - it up on another stream as well since
73:17 - there's not that many people watching
73:19 - right now but uh i was uh one of the
73:22 - individuals selected as a top
73:25 - contributor for free code cam
73:27 - so i'm really honored about that and um
73:31 - so they're having several like
73:34 - i don't know parties for the top
73:35 - contributors
73:37 - uh so i think around august
73:40 - 18th
73:42 - august or somewhere around august 18th
73:44 - i'll be in new york city so if anybody
73:46 - is in new york um
73:49 - you know maybe i'll get to hang out but
73:51 - just want to throw that out there in
73:52 - case anybody is
73:55 - anybody's interested
73:57 - and
73:59 - and meeting up or anything like that
74:02 - so
74:05 - uh oh thanks john john said
74:06 - congratulations
74:08 - yeah thank you it was really awesome uh
74:10 - to be
74:12 - selected uh
74:16 - all right cool so
74:18 - yeah i'll i'll try to stream tomorrow
74:21 - um
74:22 - i know it's gonna be busy trying to get
74:24 - everything
74:26 - ready to go for vacation and get
74:28 - everything make sure i have everything
74:29 - done that i need to get done
74:31 - at the office before i leave but i'm
74:33 - definitely gonna try to stream because i
74:35 - most likely won't stream during vacation
74:38 - um so in case something happens and i
74:41 - can't stream the rest of the week
74:42 - um
74:44 - i'll see you all
74:45 - the week after next
74:47 - uh and you know i'll be on social media
74:50 - and stuff so if y'all need anything just
74:53 - want to say what's up you know i'll be
74:55 - there but uh won't be around for streams
74:58 - but anyway thanks for uh for coding with
75:00 - me or well
75:02 - doing the audit stuff with me today i
75:05 - had a good time
75:07 - and um
75:09 - yeah hopefully i'll be back soon
75:11 - and uh till then have a great day

Cleaned transcript:

hey everybody welcome to live coding with jesse i'm jesse and today we're going to look at a chrome dev tools lighthouse audit of this react project that we've been working on and i've been away for a while and i've been sick but i'm getting better so i'm going to try not to cough a lot uh during this this stream um but i'm still not 100 so i'm pretty tired so if i'm if i'm a little off i'm gonna blame it on my my illness i don't really know what it was flu or cold or something but uh but i'm starting to get better now so let me let me start off by just showing you uh in dev tools where the audit is this is actually uh pretty easy to do uh and it's a good way to just kind of check out like what's going on with your website uh in terms of a lot of different factors so there we go okay so on the screen now this is just chrome devtools i'm running it in uh dark mode and i've also extended it out to take up um the full screen so just click that option there and you can see this is the website that we've run this on this is dev.franciscan.university and i updated this earlier today with the latest changes i did do a few more things after i updated so it's not exactly like what i'm running locally but it's it's pretty close so let me get started we do have a question let's answer this marcos asks if the recordings are available um yeah all the live coding uh sessions are all recorded and available on the free code camp youtube channel i also have some stuff available on my channel the link to that's in the description okay so i figure we're just going to go down through all the pieces of advice that lighthouse gives us and uh we just kind of comment on it think about what we can do to improve and uh hopefully it will make this site a lot better but also maybe give you some ideas uh for your own sites all right so first thing we're going to look at is performance so you can see here are my scores um the only thing i was really surprised about was this accessibility score being so high because we haven't really focused that much on accessibility beyond like the normal things uh so so that's pretty good i definitely still want to go through and try to get this number you know as high as possible um but performance was also a little bit of a surprise but we'll see in a second why it makes a lot of sense why the performance is bad right now sorry for the awning uh so let's go through once you run an audit you can um go through each category so we're going to start with performance which we get a 49 out of 100 and it gives you a lot of useful information so uh just to let you know it tells you what were the constraints put on this uh so we are emulating a mobile uh a mobile phone loading this we could do desktop if we wanted but we're doing mobile and that's the default and it's on a 3g network with a slow cpu so there are a lot of different um well is that the only i assume there are different options it's not showing me any but maybe there's some way to do different options but this is pretty good to do it this way and that way for users that have better conditions great they're going to have a wonderful experience but for your users that don't have the optimal conditions then they'll get a good experience if that's what you're optimizing for so you minimize that portion of your users that are gonna have to wait a long time for your site to load so this is i think this is a good idea all right so the first thing we have these metrics it shows us what the user sees uh at various points of loading so this is in seconds so two point let me zoom in if i can it's gonna let me zoom no okay uh so just leave it like this so at 2.6 seconds we're still seeing white up until then and then we see text and ui elements but no image it's not until the 5.2 second mark that we see an image on the screen okay so at that point it's not it's not too bad because everything we want a user to see on this part of the screen is visible but still it took 5.2 seconds to get there so don't like that i don't really like that it took 2.6 seconds for them to see anything at all so we'll see what we can do so this this first metric is gonna say first meaningful paint and uh now it's giving it to us in milliseconds but you know uh we're gonna say that's you know what about three and a half seconds here and if if you don't know what these mean they give you an explanation and they even give you a link to learn more so you could definitely you'll go through this even if you don't know that much about it and click on the links read through it and you have a pretty good idea what's going on uh first meaningful paint though is is just when there's enough content on the page that uh you know it's a website you know users can see like what's going on with um uh your content first interactive and saying this is in beta so you know we'll see whether or not this is that accurate or not uh but this is when the page will be interactive so think about like when we would click when a user would click on this uh menu scroll over like on this side now you know it it may not do anything before that eight second mark right so that's that's kind of an issue a user might click on that and think it's broken sorry i thought i was well enough to do the stream i'm so tired um and then consistently interactive we gotta wait for 16 seconds you see it's showing us even with these lines on the on the timeline here where that happens so you know these these i'm not not happy about these these metrics i would be upset if that was my user experience on the website so here's the good part the opportunities because now we figure out what can i do to change these metrics so first thing is off screen images and i love this idea and it's lazy loading the off screen and hidden images to improve your page uh load speed and time interactive and it actually gives us all the images that we could lazy load and then tells us you know our savings which in this case since we'd lazy load the image like the entire image size would be saved right so each one of these images could be lazy loaded and let's go through even on a desktop you can see i only see one image here unless you want to count this which um i think i'm loading this as an svg i don't remember how we did that but i think it is uh but anyway we don't even see any images until we scroll down a bit further this is a video this is the first image so there's no need to have all these images load up right away once the user starts scrolling then we might want to say oh hey you know let's start loading those images because we need them now uh but we could definitely save a bit of time with that normally your images are your your largest elements of your page oh hey i see a few you're saying hi in there hey john how's it going one asked about the links in the description uh yeah the link to my youtube channel is in the description so i have my own uh channel where i do some some tutorial videos and live streams as well in case you're interested so i think that's a great idea and i'm gonna add this i have a uh just a little checklist on my other screen and as we go through i'm gonna add some uh some to do's which will eventually turn into github issues and we'll try to work through some of those to get the site ready and fast you know faster than it is now and i've been working to cut down on the number of issues and fix some things and close them out so if you've been checking out the github repo lately uh you may have seen the the log issues going down but here we're going to say all right so i know you can't see my other screen i'm not going to switch over just so you can see a checklist i don't think that's it's really that exciting but basically i'm just saying lazy load the images especially on the home page the home page really is the most image heavy page that we have so far on the site so and that's the page that most users are going to come to so we want that to be to give we want to give the most attention to that page you know most of our users probably won't even see any of the interior pages and i'm going to make a note to maybe use source set for this which is like an html attribute where you can specify different images uh for different screen sizes okay so that's good so just with these two things i imagine we could bring our score up significantly but let's check out a few of the other things we can do um serve images in nextgen formats and this is interesting i've never used any of these formats so they're saying instead of using your regular paying or jpeg you can use jpeg 2000 jpeg xr and webp i actually have only heard of webp i haven't even heard of these newer forms of jpeg so that's something that i'm going to want to look into so i'm going to put it on the list but i need to do some research before i do that mainly i would need to know is it supported by browsers if it is supported then i need to figure out how to do it larger than it needs to be um so it looks like we can cut down this image significantly and potentially save 91 percent not harrison could still be cut down by 59 so we can definitely save just by resizing our images we could save a lot we're probably going to end up doing is um trying to do some sort of um replacement of images based on screen width so on a very large screen where we would want a bigger image we'll load that image and then on a small this is a large image right now so i probably i took this and didn't do anything to cut it down so you definitely want to do that even these images which are much smaller by control screen like a mobile where it's a waste to have a really large image then we'll only load the small one so i'm going to make a note of that as well to say now again images we can cut down on the size of images so this alumni profile image which is this image here so this one's a maybe um so i'm just going to say look into using uh webp and then we have reduced render blocking style sheets so it looks like we we have um one render blocking style sheet and this is for our font okay so we are loading our font in the head potentially we could load it lower down the page um you know that's something we might maybe we think about doing i will have to experiment with that one because obviously i want the font to be used the correct font but do we really need do we need that font right away if we could give the user something on the screen immediately or you know less than one second even if it's not the right font would that be better and then whenever the font does load it just switches over you know i think that would be a better user experience it would be a little bit of a change but at least they would see something on the screen it would appear that the page is loaded very quickly so i'm going to look into that i i remember seeing a talk where they were talking about doing just that we're loading a backup front first and then loading the other font i don't know if that's something that's supported right now or if that talk was about things that will be possible in the future so i'm gonna have to find that and uh and figure that out so that's gonna be another one where i'm just gonna research um hello nikki's in the chat how's it going um so uh the font thing i recently did on my blog helps a lot thanks for that retweet on the keyboard shortcuts by the way oh yeah no problem oh okay so it looks like we have some options there uh for that font then okay cool so we'll have to um we'll have to do that i'll i'll make an issue out of it and then whatever ideas you all have about the font you know we can discuss it on that github issue so all right so i've made a little note for me to remember to make an issue out of that oh i see and uh john says react image and react visibility sensor are well known image components for handling image cache and loading oh cool very cool awesome i'm definitely have to check that out thank you john all right so we only have one more here on our opportunities for uh our performance and that's to remove unused rules from style sheets so this isn't a huge deal right we're talking about a 10 millisecond improvement so 10 milliseconds is incredibly fast i'm not sure that it's worth it to take out this bit of code so i'm not gonna even worry about this for now you know there is such a thing as like over optimizing right you know we're going to take these things that are going to be huge improvements and do those for sure and then we'll we'll try again and we'll see what score we get we'll see what the user experience is like you know it may not be worth going through our css and removing things and then making sure it hasn't messed something else up just for 10 milliseconds all right and then we have diagnostics and so we can see all of our all the things that are being loaded and we see how long it takes to transfer those total size i mean look at this six and a half seconds for that one image right that's if we fix this thing up i mean we're definitely uh gonna increase the performance and decrease the load times and that's not even to talk about this image here which um i don't think has been sized properly or compressed at all so we definitely can can do some work with that all right uh so our caching policy is no good now this is on these uh images right now these images well the fonts are we don't have any control over the fonts for right now um because they're coming from google phones but this is coming from franciscan.edu so these are actually being served from the university uh from the campus they're one of the some of the servers that that are there on the campus so we've already switched these over uh all these images over to google cloud servers so i haven't switched the url that we're getting these from but i will switch that soon so we may be able to improve through each one of these these are getting down into like more details of what we're gonna do but you can see there's just so much information i mean i lo i prove this without doing anything we'll see what google has set so this could kind of be a freebie that will be better um critical request chains so around like for the last five years or something because you know i used to go to different websites to try to get this information but i could never get all of this information in such detail uh all together at one time uh this is just really amazing uh and then we could see all the things that we passed if you know if we really want to feel happy about it we can look at the things we did really well um so i'm not gonna look at him right now for time but it is kind of cool to look at in case you're feeling down about all the things that are messed up on your site just you know take a look down here and uh you know give yourself a pat on the back all right so we're gonna go we're gonna check out this progressive web app now oh by the way i think i'm i'm just gonna go through this and then that'll be the end for the stream today it's kind of late and you know i'm still not 100 you know better yet um so in future streams we'll definitely go through some of this and actually do the work to make it better and then eventually we'll do another audit to make sure that we've actually improved um but not for today's stream so if anybody was did really want to see some coding stuff probably not going to see any coding today it's just going to be all about going through lighthouse uh how do we interpret the data we get from lighthouse and some ideas for how to act on that okay so if you're not sure what a progressive web app is i'll give you just a quick um overview a progressive web app uses um a cool feature in browsers now in javascript called a service worker so a service worker is a javascript file it runs in the the client side in the user's browser and it can intercept uh network requests so the network request normally would go from the user's browser and to the server with potentially things in between like uh cdns or things like that but um this sits in between that so uh a network request would go to the service worker first right wouldn't even you leave the user's computer wouldn't even leave their browser and then the service worker can determine what it's going to do with that request right so potentially let's say you cache a lot of data already the service worker could take that request and say hey you know what we already have all this data so we're just going to give you the data right away i'm not even going to send this request back to the server uh and imagine how fast that would be to get the response so a progressive web app number one is very fast but also could potentially enable your app to work offline so there's going to be some features of your app that can work without an internet connection and then for those features that need a connection as the connection it comes available and becomes better your app will progressively get more functionality right so that's what we're going for here now right now you can see we only have a score of 55 so we're not doing what we need to do uh so let's let's check out what's happening number one we don't register server workers so service workers so that's a big deal right um so we need to figure out why we're not registering a service worker and obviously we're not responding um properly when we're offline so we're not prompted to install the app so a lot of these are all basically because we don't have that service worker running okay but there's no um no manifest so maybe that's the best place for us to look for this is that if we don't have the correct data in our manifest we're not all of this isn't going to work so um so for my note for this section for this whole section i'm just going to say let's make sure that manifest is correct uh and then we can run it again and see how much of this is is gonna work because the um i i think a lot of these issues will be solved if we have the correct manifest okay if we fix a manifest and we're still having issues then we know it's something else but i don't want to dig too far into these without testing that first so that's going to be our first step you can see we did pass some things right so um we do have some content when javascript's not available uh that's probably because of our server side rendering okay which is uh definitely a good thing not just for seo we use https we redirect https our page load is fast enough on 3g which as slow as it is it's still fast enough um we have uh meta viewport tag and the content is sized correctly for the viewpoint right so all of these have nothing to do with our service workers so that leads me to believe even more that all these problems are due to our service worker not firing up and i think that stems from our manifest as well but we'll check that out uh in future streams or maybe i'll check it out you know on my own and then just let you know what what happened with that on the stream uh we do have things to manually check i suppose so site works cross browser oh interesting okay so it's it's saying you're testing other browsers which is definitely good um make sure page transitions don't feel like they block on the network okay and each page has a url cool we do this definitely each page does feel like it has a url clicking around the site this looks good i tell you truth i haven't tested on a lot of different browsers yet so that's something i'm definitely going to need to do we can have a lot of users test and then we can also use browser stack to test browsers all right from the same computer we can test in a lot of different browsers and operating systems even mobile right through our um our browser really useful it's a monthly service uh but it's definitely it's it's worth it you know for you know my organization to have that it's definitely worth it all right let me check the uh live chat now since we're i've gotten through the first two uh scores i'm gonna check this and just make sure i'm not missing anything uh shoe pum says get well soon thank you thank you i appreciate it i hope i'm getting well soon because i'm i'm taking the family on a vacation on friday so we're gonna i'm gonna leave friday night drive all through the night well hopefully all the kids can sleep and then we're gonna we're gonna end up in uh going to the beach in virginia so anybody in virginia beach area you know let me know if there's any meetups or anything going on um next week i'll be there for a whole week but if i'm still not feeling well it's gonna be rough to drive through the night uh so hopefully i'm better uh let's see oh jeff says glad i caught a little bit of stream today was wondering why i didn't see you last couple of days get well thanks jeff i appreciate it uh john says for anyone who needs to deal with large images on a site image editing uh it's aggressive jpeg compression plus removal of unnecessary file code done with full live image view it's a monster full page image uh cool and i i use for editing uh it's a free um program so i'm definitely gonna check that out uh jacob asks what browser i'm using now i'm using chrome uh which is recently updated so whatever the latest version of chrome is for for mac for the latest mac operating system uh that's what i'm using nikki says this next js have a cookie cutter way to enable service worker uh create rack that react app has it baked in and gatsby makes it super easy yeah it i thought next did have it baked in so i'm not sure what happened with that i'm gonna have to double check and see maybe some of the custom server things we did messed up the automatic stuff or maybe i'm just mistaken and next doesn't have it automatically baked in um and jacob asked how i got the dark mode yeah so if you go into settings uh under theme so preferences and then appearance theme you can switch from dark to light so i always keep it on dark okay um oh nikki says image optim is good for a mac and jacob asks about tinypng.com you know i've used a lot of different things but what i've mainly used is on the command line i've used image magic and i find that's very powerful if you have a lot of images if i only have one image i will open it up in something like and edit it you know by hand but if i have a ton of images like hundreds of images a command line tool is way more powerful you can just set the parameters of exactly how you want the images resized or cropped or compressed and just batch convert all those images so there's a ton of different options with image magic i mean i found with image magic if something's possible to do with an image there's a way to do it it just takes a little bit of research and reading the docs which are extensive um but it's a very cool command line tool and since it runs on the command line you could even make it part of your build process uh you know if you wanted to so i definitely recommend that for for batch image processing all right let's check out our accessibility score now which as i mentioned earlier i was i was pleasantly surprised at this um i i'm definitely i have an uncle who is blind and uh is is still like um very active in terms of learning new things and being on the internet and everything so it's something that because of that i may be a little bit more aware about and i think about it more um but i still think i could do a much better job at making things accessible um so and accessibility isn't just about those who are you know completely blind there's there's a whole different there's a whole range of different accessibility issues but i think this is great that this is included in here um so let's check this out uh we have some iframe issues and the iframe doesn't have a title this is probably in our uh our videos right so the this youtube video is loading in an iframe i don't think i put any iframes on the page other than that so we can definitely fix that by adding uh elements to our iframes what i actually was thinking about doing is setting this up i i love that we can load this these videos right here and have them be so like available but i really would rather like try to lazy load them or do something because we we are loading all the stuff we need to play this video right away and we definitely don't need to so that's another thing that maybe i'll just look um add to our lazy loaded images in all ad and video if possible but then also let's make a note gonna make a note about adding we're gonna add uh say title so we're gonna add a title attribute to those iframes right it actually shows you the elements and uh if we could see the screen over over here when we did that it would it would highlight the area on the screen we can hover over and it'd show us and in fact those are the the two iframes are both the youtube iframes so uh that's that's what's causing the issue so that's nice that's an easy fix so that's it's good when when it's straightforward we know exactly what to do to fix it let's check out this color contrast i was a little bit surprised by this um but it makes sense so i'll show you the failing elements on the other screen but it says that there's a low contrast text it's difficult or impossible for many users to read so let's check this out and what the texts are talking about is this text so i was a little surprised about it but then once i thought about it i remembered you know what i have had people complain about this text before and we actually made it darker at one point but evidently we didn't make it dark enough and it's still hard to read so we're gonna have to think about a different color here either darkening the color even more or replacing it with a different color you know maybe this could be that that green color or our gold color um you know so we can switch it out for a different color uh in the in our color palette uh but you know this this color is not gonna work so not just here probably anywhere we use this throughout the site this is going to have to change and so that's like i said accessibility is not just about people who are blind i mean right it's about people just not everybody has the vision to be able to see this for me i can see it it looks fine other people might look at that and not be able to make out what that is so we're gonna make a note to change that yellow color everywhere okay let's say uh elements are well structured so in this section we're looking at the structure and we say here we we actually have a list so those lists do not contain only li elements and script supporting elements so it says screen readers have a specific way of announcing lists so we need a proper list structure it's going to mess up the screen reader so this is what it's talking about here this section so let's inspect this and see what's going on switch over to our elements here so is this where our list is yeah where does it start okay here's our ul so within our ul we shouldn't have divs these should all be lis so we've messed up something in this component and i expect i suspect that maybe this is not by default immaterial ui i would think they wouldn't do something like this this is probably something custom that that i did at some point uh without realizing the impact that it would have on accessibility so you know we have a component for this we'll need to just go in and check it out so i'm just going to make a note to say um make sure uh list component has proper uli structure okay so i i think basically if we were to just take all these div tags and make sure that they were lis instead of divs that would solve the problem all right let's go back to our audits scroll back down to where we were and really i mean think about if if we fix that then at least our home page potentially could get a 100 score on accessibility uh which is awesome right of course we'd have to look at our other pages and make sure that we're still it's still accessible but you know that's that's pretty good now i'm not sure if this looked at our our menu our side menu or not so that would be something that we would want to make sure was definitely accessible that's important uh and you can see we we passed a lot of audits as well so uh we're using our attributes correctly following best practices for arya um yeah so that's really cool we have some things that aren't applicable so probably elements um that we didn't use and then there's a lot of things to check so need to go through and and either check these myself or have somebody else check these um you know just go through the page and hit the tab button and see like does this even make sense of where the tab is focusing right try to use keyboard stuff a lot of these have to do with the focus on the screen oh this is a good so visual order on the page follows dom order right so uh a screen reader is going to read through your dom tree right and if you have it all out of order and have used let's say like css to change the order on the page it would make sense if you're looking at it looking at the ui but it's not going to make sense of the screen readers going through it so keep that in mind and we'll have to check that out for this project headings don't skip levels that's a good one that's one we're gonna have trouble with for a lot of those interior pages where we've pulled over some badly formatted formatted content so we'll kind of have to slowly go through those and fix that cool all right the last one left is best practices i'm gonna check the chat again before we go into that because i see a little bit more activity in there okay john hanson says take lots of vitamin d3 and a good multi b that will help you get your energy up from being sick okay cool i've been taking a lot of uh b vitamins i'll have to i have to make sure i'm getting d vitamins i just ran out of my multivitamin like two days ago or something so maybe i'll have to get some more hey michael creels here he says sorry i was taking a nap don't worry about it i wish i was taking a nap too john hanson says are you using css variables for your colors easier to tweak globally um yes some of them nikki says they're they're there in the jss theme um yeah so changing those colors will probably fix a lot of it there may be some places where i like manually put the color in in a style sheet somewhere so i'll have to double check that but i mean that that'll be as simple as just doing uh you know find and replace globally throughout the project michael says some of the accessibility rules seem weird until you actually use a screen reader like chromevox then you understand what's lacking yeah actually that's a great idea uh that might not maybe it'll be a good stream to try to do one day where we go through one of our projects with a screen reader and like listen to what it's saying uh just to get that that experience uh nikki says when doing accessibility work use the axe so it's a capital xe devtools plugin uh it's awesome all right i'll have to check that out i've never even heard of that matt dutcher says feel better b vitamins and airborne uh z cam is amazing for clothes all right i'll have to obviously check that out i haven't heard of that i do have airborne i need to take it and uh thank you all right let's get through this last section here um best practices so we got a pretty good score there i mean that's awesome uh but we failed two things so let's check out the manifest short name will be truncated when displayed on home screen so make your app's short name fewer than 12 characters okay um that seems like an easy fix right we just have our name is too long so that doesn't seem like it'll be a big deal and uh we have errors logged to the console they come from network request failures interesting all right it looks like we may have been trying to prefetch some of this i think probably the it was trying to prefetch these pages and then somehow it wasn't working properly um it may actually be tied into our progressive web app stuff not working everyone loading route yeah and these are the same things with the routes and then we also have some stuff with our manifest um so it says it failed to load it but then it also says that there's an unexpected token so i think all of these might be able to be fixed by fixing the our manifest uh json so that's probably gonna solve just fixing that is gonna solve a lot of our issues um so we may be able to get that up to a hundred percent just by that oops i forgot seo sorry i said this was the last one it's definitely not uh we passed a lot of stuff so i'm not gonna go through it all uh but you can just check some of these other things that they consider best practices all right this is actually cool avoid frontend javascript libraries with nonsecurity vulnerabilities that's kind of a big one i know a lot of my older sites were you know you you check them now and it's like this thing is not secure right it's a lot of times we build sites and then we don't maintain them you know they may be maintained by someone else or they may never be maintained again you know your your contracts up with the client and you're done right and the client said you know well hey my site still works it's fine uh so there are a lot of frontend javascript libraries out there that are insecure that are still on sites you know because of that it's cool to see that we don't have that issue okay um so let's check our seo so this is search engine optimization and um oh nikki says is that an antijquery rule yeah i didn't want to go there i didn't want to call out jquery specifically but yeah that's what i was thinking of it seems like there are a lot of versions of jquery that um are considered insecure so yeah that's uh definitely something to watch out for uh but search engine optimization in case you're not familiar with that that has to do with how high you rank on a search page usually everybody worries about google search rightly so they're the largest search engine by far if you're okay on google search you're probably gonna be okay on other search engines uh so we usually want to rank as high as possible we want to be on that first page of the google search as high up as possible and so that's where the seo comes in that's a big part of it uh so let's check out what we're doing wrong so a document does not have a meta description right we we didn't include a meta description okay so not not really hard to fix we just have to make sure we include that links do not have descriptive text so we have one link that does not have descriptive text so we did we did a good job of putting this stuff in but we didn't on about our mission so we'll just have to put that in and you know what i forgot to make a note so let's do another descriptions what was that page our mission all right and let's see this one document doesn't use legible font sizes it says what was that 40 42.3 percent of text is too small and very helpfully it tells us exactly what is too small so we have some stuff at 13 pixels some at 14 everything needs to be greater than or equal to 16. well this is was a bit surprising to me because i'm always about larger font sizes but let's see where we went wrong here so i'm thinking here uh mainly i never fixed this because i had always thought that i would redo this component anyway so i just kind of left it as is i i didn't really like it it looks like this font might be a bit small and this is another component where i didn't think i was going to keep it like this as well but it seems like it seems like everything else is at least 16. so i i expect it's probably almost everything within this card and then maybe this here uh which that's not a big deal because i was already planning on updating or removing some of these uh but i will make a note just to make sure that all fonts are at least 16 pixels all right and let's see the things that we pass all right we get that meta viewport tag uh we have a title element stat good status codes we are not blocking anything from indexing uh believe it or not i've i've had clients websites where they i go in and check out their site and realize that they're actually blocking from their block from being indexed so whoever had built the site previously or worked on the site had stopped it from being indexed so uh you know they wondered why their seo wasn't you know it wasn't doing well and that's that's why uh canonical great so you have those here's some of the things to check out uh paige is mobile friendly right um definitely we could do this mobile friendly test i'm not gonna do it right now um and we know the site's mobile friendly we've been developing with that in mind all along but we'll probably end up doing this test at some point structured data is valid so we can we also use a testing tool to check out our structured data so not bad definitely want to run this again after we've done some more because you know when you have some changes to make on the front page you know definitely with our images and things with our videos our fonts we still have to put content down here you know we have our our bacon ipsum text here so there's going to be content here that will need to be checked that we haven't even done yet and i imagine we're going to have different content here potentially even more content if we set up that lazy loading it shouldn't be an issue though but this gives us a really good look now at this point in the development of what we're doing right so that we should keep doing it and what we need to improve on uh but overall you know i'm i'm pretty confident we can get all of these scores up significantly there's nothing in here that i'm like scratching my head at saying how are we going to do that uh you know everything we've got a plan for everything you know sometimes that plan is just let's do a little research on this uh but i i definitely think we can get that accessibility up to 100 we can get those best practices up to 100. there's no reason why we couldn't get the seo up to 100 as well if we fix that manifest this should be a hundred the performance is the only thing that i'm saying maybe not a hundred the reason being uh we have those youtube embeds and i know every time i've used the youtube in bed it's been impossible to get up to a hundred so in unless we figure out some way to lazy load those i don't think we're gonna have a hundred percent but we'll see so i'm really excited to get to work on these and then rerun this and see it you know it's kind of like a little game to see what you can get i will say this though kind of just as a as a cautionary note uh be careful about getting too caught up into getting hundreds and everything right the first things you do will be really easy and you'll gain a lot but then that difference between like a 95 and 100 is gonna take a lot of work and from a user standpoint they may not even notice the difference so while it'd be really fun to get all hundreds and it'd be cool when i would screenshot it you know uh nobody really cares about that your users don't care what your score is it just needs to be fast to them um and that's all that really matters so the numbers give you a good guide as to what you do to make it faster but at the end of the day like get out your phone test it out uh emulate a slow network test it out if it's fast then it's fast you know whether it's a 95 or 100 it doesn't matter just make sure it's fast all right so i'm just gonna go back and do some questions and uh just talk with y'all for a little bit before we end the stream and uh let me know especially if you have any questions about anything we've gone over with with this audit or with devtools you know definitely let me know but also open any other questions as well all right michael creole says setting up a manifest json file takes a minute or two that's awesome that's good to hear that's that's going to be a huge improvement in our score just setting that up uh shubham says is there any tool which can uh give us a hint about all this while developing i don't know of any tool but that's a great idea like a nice um like editor plugin or extension that that could do that i mean that would be awesome i mean some of it yeah some of it would have to be a browser plugin and then some of it could be done with uh an editor plugin but a lot of it i think could be done that way that's a great idea michael says audits are like a whackamole game for devs yeah for sure uh nikki says hints while developing uh linting setup yeah yeah that's that's definitely true you could set some linting rules to help you make sure a lot of the markup stuff is correct so some of this stuff where uh you're making sure that certain attributes are are on certain elements that could be a linting thing for sure actually now that i think about now that we're talking about it i just want to check and see that manifest json i want to see if we have it so all right let me make this bigger i know that's probably way too small for everyone to see right now which what be in our static no not pages static would we want to put our manifest json in our static files or is that created in our build we have a manifest.js oh yeah that can't be it no that can't be it all right build manifest json that's not what i want pages manifest json so we have other types of manifest files but i don't think we have the the manifest file that we need so that definitely explains a lot i'll have to look up the format and and what all i need for that all right let's see uh shubham says uh can you briefly explain how do we do page indexing for seo and how it works um well the search engine will take care of indexing so you just want to make sure that your page is readable by search engine so if you're using something like react that does you know that could potentially do everything on the client side you want to make sure you have serverside routing as well so that the browser can get html that it can read instead of just some javascript because it won't wait around for your javascript to make api calls and get data back it'll just assume that whatever it sees at first is what your page is and so you basically it'll think you have a blank page or mostly blank page um you know make sure you have title tags um you know descriptions meta tags your descript meta descriptions as well um proper use of heading tags uh is important so there's a lot of factors that go into seo and it's like a whole field all on its own uh so you know definitely you know check into what the latest best practices are but in terms of your web development you just want to make sure that the search engine the search engine you know um bots the the crawlers right that they have going out there and index indexing pages that they can actually see your content and you know mainly through server side rendering that's that's your best way to handle that uh umberto says hi jesse do you have any advice for how to work with a brand whose color palette does not match the product uh specifically it is an employment services site and the palette is lime green do the best you can with your color palette and i would try to make use of white space a lot so you know you can kind of like we've done here if the color palette doesn't look great on uh on a screen which i don't think the franciscan color palette looks great so you know it wasn't designed to look good online it was designed before right there was you know the internet right so um we make use of white space a lot of white space right we have a clean theme and then we just use some of the colors here and there as highlights right um so like that gold color that we see kind of here and on the outline of things it doesn't look great in a huge block it looked kind of dingy if you have a huge block of it um so we only use it as a trim and it looks really nice you sparingly so maybe you might want to think about doing something like that um maybe using you know seeing how far you can play with the the color right and the hues you know that might be a good idea as well so it does kind of depend on how much leeway you you'll have to to work with those colors change them a little bit maybe uh yeah i don't i don't know exactly what that situation is but if you got some colors that aren't great to work with then just use white as much as possible or if you're doing a dark theme use like the black or really dark gray as much as possible oh nikki says use ctrl p in the editor to search for it that's a great idea wonderful no we don't have a manifest json all right cool definitely need to do that then all right michael says if we had one it would be in the root okay good to know on bears is as it looks kind of like a lawn care or recycling color scheme customer wants the colors reflected in the site all right i would if the customer wants the colors in the site then i would i would use plenty of white space or if you want to go dark themed use you know the dark space right but use the colors uh in key areas where they're visible but there's not a ton of the colors uh and definitely you know let let your client know the benefits of having all that white space you know maybe look up some statistics or studies if you if you need to about you know the the user being able to focus on the the text more and on the content of the site uh if you can uh try to have concrete evidence to back up your decisions right so if you if you do go in and say like this color is terrible like that's not gonna work but instead don't even talk about their color explain why white is so awesome and will be helpful right and uh it takes the focus away from something negative about their colors and it spins it as something positive and maybe you could even give examples of other sites that do well that utilize a lot of white even maybe like wellknown brands who have wellknown color schemes and if they still use a lot of white on their site like you know things like that so hopefully the client likes what you do and you don't have to do any of that but just be prepared to explain the benefits of you know a design without a lot of color if you need to and the bottom line is if the client really wants that color all over the place and it turns out ugly you know you can just do it get paid and don't put your name on it leave it out of your portfolio i mean i understand how it is sometimes you got to pay the bills so at the end of the day if the client really demands it even though you tell them it's against your uh you know your suggestions of what's best for the site then you know that's that's what you got to do now if if you don't need the money right now then you could be choosy and say okay find somebody else to do it uh but most people don't have that luxury and i totally understand that you know you you know you gotta get the job uh you gotta get it done and get paid uh let's see michael says i talked to nikki about this but i'm having problems with the lack of motivation so i like watching your streams to try to get it back three weeks and counting now uh maybe why i bugged you earlier oh don't worry about bugging me that was i was cool i'm like i was happy that that you were you know checking in on me so yeah i definitely understand about lack of motivation uh i struggle with that too and the streams help me as well um you know i i don't want to come on a stream every day and have nothing done from the previous stream right i i want to get things done and be able to you know have progress in the project and have new things to talk about with you all so i totally understand that motivation can be hard sometimes i don't know the best thing is you just get a project that you're excited about you know some or you know some new thing you're learning that you're really into uh and that seems to help me get motivated and um you know sometimes exercise helps for me like caffeine helps um sometimes people react differently to caffeine so that might not work for everybody and um you know sometimes sometimes you just you just gotta do it like there are some things that it wouldn't doesn't exactly get you excited or really that motivated but it'll help you to just get the job done like you know i i need to do this because i need to get paid i'm not gonna be able to pay my bills or if i don't do this my boss is gonna be upset with me or you know so anything like that it's not like positive reinforcement but if it if it gets you to get the work done it's still good you know you don't want to always have that you know to rely on but it's a nice backup plan like all right well if i can't get myself motivated all these nice ways at least i'll be afraid to mess up and that'll be my motivation so that can help now i know for some people like giving updates on social media about their progress helps because it's like if i tell people i'm gonna do this and then i don't do it then you know that everybody's gonna know i didn't do it that can help some people as well it could probably hurt some people too i mean if people struggle with anxiety that may not be the best thing to do but uh it does work for some uh nikki says i couldn't help a lot here sadly also in general it's super easy to get overwhelmed yeah it is it is i've yeah there are a couple times recently where i felt overwhelmed with just the amount of work that still needs to be done on this project and i'm working on another project um um so i don't know if y'all have ever been to the site balance.io it's like a crypto wallet site um they're coming out with an app and they're using react native to build it so i've been working on that and uh so you know it's like on top of all the other things i have this which is really fun and i like working on it uh but it's just one other thing to be kind of overwhelmed about so uh the best thing that that i can do when i feel overwhelmed is just like have a todo list and just say i'm gonna do this one thing and then i get focused and i do one thing and i get it done and it feels good to get that done and then i move on and i move on right i get to just chip away it forces me to stop looking at the big picture and focus on something little and manageable and uh usually i can start to get my mind focused where it needs to be and that overwhelming feeling goes away okay all right well i'm done with the questions for the stream also i forgot to mention earlier and maybe i'll bring it up on another stream as well since there's not that many people watching right now but uh i was uh one of the individuals selected as a top contributor for free code cam so i'm really honored about that and um so they're having several like i don't know parties for the top contributors uh so i think around august 18th august or somewhere around august 18th i'll be in new york city so if anybody is in new york um you know maybe i'll get to hang out but just want to throw that out there in case anybody is anybody's interested and and meeting up or anything like that so uh oh thanks john john said congratulations yeah thank you it was really awesome uh to be selected uh all right cool so yeah i'll i'll try to stream tomorrow um i know it's gonna be busy trying to get everything ready to go for vacation and get everything make sure i have everything done that i need to get done at the office before i leave but i'm definitely gonna try to stream because i most likely won't stream during vacation um so in case something happens and i can't stream the rest of the week um i'll see you all the week after next uh and you know i'll be on social media and stuff so if y'all need anything just want to say what's up you know i'll be there but uh won't be around for streams but anyway thanks for uh for coding with me or well doing the audit stuff with me today i had a good time and um yeah hopefully i'll be back soon and uh till then have a great day
