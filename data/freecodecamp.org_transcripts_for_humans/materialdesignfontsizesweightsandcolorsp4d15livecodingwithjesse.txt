With timestamps:

00:08 - hey everybody welcome to live coding
00:10 - with jesse
00:12 - today we're going to do
00:15 - some work on our fonts so i mentioned a
00:18 - few times
00:20 - that at some point
00:22 - i was going to change
00:24 - change our fonts
00:26 - kind of mess around a little bit with
00:28 - font sizes font colors font weights
00:32 - and uh
00:33 - try to find something that that really
00:35 - works with this layout
00:39 - so that's we're going to work on today
00:41 - i just want to take a minute to show
00:44 - some of the pull requests that we've got
00:46 - uh and so we're on the same page uh with
00:49 - where we're at here
00:51 - the um
00:52 - let's see so sebastian and harshit both
00:56 - submitted pull requests sebastian
00:59 - did some
01:00 - work with the padding here
01:03 - at the bottom of the card so that's a
01:05 - lot nicer also with the colors we had
01:07 - several different colors
01:09 - for our click effects here now it's it's
01:12 - all gray
01:14 - so at least it's consistent i'm still
01:16 - considering maybe changing the color
01:19 - but the consistency is a big improvement
01:23 - and
01:24 - sorry if i'm missing something uh
01:26 - sebastian something else in the pull
01:28 - request there were
01:29 - several things uh kind of lumped
01:31 - together in there
01:32 - uh
01:33 - now a harshit's pull request is is
01:35 - interesting
01:37 - so this is a filter
01:42 - filter and you could filter by
01:45 - my month year
01:47 - so let's let's take a look at how it
01:49 - works so we're going to go to the
01:50 - current bulletin so we have everything
01:52 - up here
01:53 - and here's the thing about the filter
01:55 - though right now
01:57 - see if i can grab
01:59 - i want to try to get it to a date that
02:01 - will actually work so let's try this
02:04 - um
02:06 - what is that april
02:09 - may
02:10 - uh may
02:12 - 2016.
02:14 - let's go may
02:17 - 2016.
02:20 - okay great so see all these posts are
02:23 - from may of 2016.
02:25 - awesome
02:28 - um
02:30 - let's go
02:32 - and then you can actually go back if you
02:34 - want to and submit
02:37 - and then you get
02:39 - everything
02:42 - uh but here's what i note i i did notice
02:44 - one uh slight bug so i don't know if
02:47 - anybody caught that when i went back and
02:49 - um selected none for these and submitted
02:53 - i'm
02:54 - let's see actually i gotta let me go
02:56 - back to the category here
02:59 - let me just
03:00 - demonstrate this again so we're gonna
03:02 - search for february stuff okay nothing
03:04 - in february now if we want to go back
03:06 - and submit we get everything even though
03:08 - we're on category 2 and if i click
03:10 - category 3 i still have everything still
03:12 - of everything uncategorized of
03:14 - everything if i click
03:16 - see i got to actually click all and then
03:18 - back
03:19 - so that is potentially an unlikely bug
03:22 - someone would have to first pick a
03:24 - category and then want to filter by date
03:26 - within that category and then
03:28 - select none
03:30 - and submit again
03:33 - but
03:34 - at that point potentially it could be
03:36 - confusing so
03:38 - i'm going to say that it's definitely a
03:40 - bug but it's not a very likely bug
03:44 - uh for for anyone to encounter
03:48 - um but
03:49 - uh
03:50 - you know it's something to think about
03:52 - maybe we'll we'll work on that i
03:53 - definitely put that in a list of maybe
03:55 - things that
03:57 - would be nice to have before we launch
03:59 - but not 100 necessary
04:02 - um
04:04 - unless somebody really wants to do that
04:06 - then that's that's great uh
04:09 - something that maybe i'd like i'm
04:11 - i'm wondering about the button here
04:13 - i don't know
04:17 - i don't really know how i feel about
04:20 - having a button in the side
04:22 - the side nav
04:24 - uh just from like a look perspective um
04:28 - the alternative would be maybe try to go
04:30 - with a different style button see if
04:31 - that looks a little bit nicer
04:33 - or uh potentially just have the search
04:37 - happen
04:38 - on change
04:40 - um
04:45 - i think it could be
04:47 - reasonable that someone would want to
04:48 - search an entire year but not reasonable
04:51 - that someone would want to search every
04:53 - let's say february no matter what year
04:55 - it is
04:56 - i don't know what do you think about
04:58 - that
05:00 - um
05:02 - so
05:05 - we'll see
05:07 - my thought is basically you could have a
05:10 - check so in the live site where i'm
05:12 - doing this
05:13 - basically it just checks to make sure
05:15 - that these are selected and then it only
05:18 - does the search if you select the month
05:20 - and the year although as we get further
05:22 - along i could see the value in wanting
05:24 - to select only the year and make that an
05:26 - option
05:28 - right now
05:31 - i guess we're coming up on 2018 so
05:34 - you know potentially that's that's more
05:36 - legitimate than when i first made it
05:38 - uh so anyway there's just a few things
05:40 - to think about maybe to customize this a
05:42 - bit
05:43 - so i welcome your um your opinions on
05:46 - that
05:48 - and uh maybe i'll try to get some user
05:50 - data
05:53 - for
05:55 - for some of the some of the real users
05:57 - and see like have they been using this
06:00 - i actually had a user call earlier today
06:03 - and asked me how to find something from
06:06 - a previous
06:08 - bulletin so previous month
06:10 - and
06:12 - so it was actually helpful although i
06:14 - rec
06:15 - really the search function would have
06:16 - been the most helpful in that use case
06:18 - but um
06:21 - there was
06:23 - there was a desire to be able to search
06:24 - by date so anyway
06:28 - good work car ship
06:31 - um
06:33 - yeah definitely helpful and uh like i
06:36 - said so i have that kind of minor minor
06:38 - bug but i went ahead and merged it in
06:40 - any way because it it fits the
06:42 - functionality of of what we wanted and
06:45 - like i said i i don't even know that
06:47 - that
06:48 - the odds of that even ever happening uh
06:51 - are probably small so
06:53 - i think it's good to go uh merchant to
06:55 - master and
06:58 - you know then every you know we can all
06:59 - work from that so
07:02 - let me check the live chat quickly
07:04 - before we get started with our fonts
07:23 - oh okay
07:24 - uh harsh it's saying uh recommending do
07:27 - not use uh material ui
07:30 - and further projects
07:32 - it was a nightmare i was almost gonna
07:34 - lose my mind
07:37 - all right i mean i'm i'm open to other
07:39 - things we just need to find a material
07:41 - design framework that has what we want
07:44 - and what we need
07:46 - so
07:47 - i mean within material ui we have two
07:49 - options we have the older one and then
07:51 - the newer beta
07:54 - and then potentially there's others out
07:56 - there it's just a few projects ago when
07:58 - we were checking around
08:00 - material ui was
08:03 - let's say the most complete
08:05 - solution that we found out there maybe
08:07 - things have changed
08:08 - so if anybody else is using a material
08:11 - design
08:13 - component library for react
08:16 - let me know
08:17 - let me know what you think about it
08:21 - um
08:22 - harsh has been having a rough time i i
08:24 - don't know i i there are some minor
08:26 - annoyances with it um
08:29 - but i don't think i'm
08:31 - i haven't used it enough to make a a
08:33 - good judgment i i would think i would
08:35 - need to
08:38 - really learn how it works a little bit
08:40 - more
08:41 - before i make a judgment about
08:43 - the beta version of material ui
08:48 - i know i have had to kind of adjust some
08:50 - things here and there because i didn't
08:52 - quite like how things worked
08:54 - but um
08:56 - so far it has served its purpose but
08:58 - like i said i am open to trying other
09:01 - things
09:06 - okay
09:09 - oh that's right sebastian also changed
09:12 - the print view so now the close icon has
09:15 - moved to the right
09:18 - i'll probably just a few things about
09:20 - the print view um i'll probably end up
09:24 - taking out these uh horizontal lines uh
09:28 - because in in the print view
09:31 - i think
09:33 - it's it breaks it up
09:35 - on first glance it seems like this is
09:37 - supposed to break up between posts but
09:39 - it's really not it's between this is all
09:42 - one post with a line in the middle so
09:45 - either we'd remove the lines completely
09:49 - or we'd have to move the line below
09:51 - attachment
09:53 - also i think i'd like to have some
09:56 - some padding on the sides
09:58 - i think that would be good and then
10:00 - potentially i would maybe want this
10:02 - clothes icon to line up more with how we
10:05 - have the menu icon so in terms of of
10:09 - positioning
10:11 - but otherwise
10:14 - the print view is i mean even now at
10:16 - this point the print view is fulfilling
10:17 - its function
10:19 - uh you know these are just kind of small
10:21 - details that i would like to see
10:24 - so
10:25 - i'll either work on that at another time
10:28 - or
10:29 - another stream or anyone else can work
10:30 - on it if they'd like
10:47 - um
11:10 - okay um
11:12 - i think so shashank uh saying i believe
11:16 - about the print view that each post in a
11:18 - tile
11:19 - uh well the the idea here with the print
11:21 - view is to be as minimalist as possible
11:24 - um but we want to optimize it for print
11:27 - so the less we have to print
11:30 - um
11:31 - the the better
11:33 - so i'm kind of leaning towards just
11:35 - completely removing this and instead
11:37 - making sure that there's a reasonable
11:39 - amount of padding between each post
11:43 - you know for instance we would tighten
11:45 - this up so that the attachment
11:48 - name was
11:50 - really close to this
11:52 - maybe you know no more than 8 pixels
11:54 - between the attachments and the
11:56 - attachment name you know but between the
11:58 - posts
12:00 - no less than 16 pixels
12:02 - uh you know possibly more we'd have to
12:04 - see so
12:06 - uh you know i'm just kind of thinking
12:09 - it adds up if somebody's printing this
12:11 - out
12:13 - maybe a lot of posts every week
12:16 - you know all these lines take ink right
12:19 - so anyway so in this case
12:21 - really the way it looks on the web is is
12:24 - entirely secondary to the way it would
12:26 - print out
12:27 - so that's what
12:28 - i want to keep in mind
12:31 - for that
12:33 - okay
12:34 - well let's get started
12:36 - i'll come back to the live chat and go
12:38 - over anything if i i've missed anything
12:40 - uh but we're pretty
12:41 - about 15 minutes into the stream and and
12:44 - we haven't gotten to uh we've
12:46 - i mean we had to get caught up on some
12:48 - of the changes obviously uh but now i'd
12:51 - like to start my pomodoro clock we're
12:53 - gonna do 25 minutes of in of coding in
12:56 - this case we're going to be
12:58 - you know mainly working with css and
13:00 - some of the built-in features of
13:02 - material
13:04 - ui
13:06 - okay
13:10 - so
13:12 - first thing i want to do is work on this
13:15 - this by far is going to be the
13:18 - the font that is seen and used
13:21 - throughout the site more than any other
13:23 - font okay so we're going to work on this
13:25 - but then we're also going to visit this
13:27 - sidebar
13:28 - uh we're going to we're going to look at
13:30 - you know the heading headings depending
13:32 - on how much time we have and how long it
13:34 - takes we're going to look at every bit
13:35 - of font on this site
13:37 - but first let's deal with this because
13:39 - if we only get one thing done today this
13:42 - is going to have the biggest impact
13:44 - so
13:45 - here's what i'd like to see
13:50 - i would definitely like that font to be
13:52 - bigger
13:55 - and
13:57 - i i kind of
13:59 - i'm not a huge fan of the font weight
14:02 - so
14:04 - let's just play with it a little bit i
14:05 - know in a previous um
14:08 - in a previous stream
14:11 - we had worked with what was built in
14:13 - with material ui in terms of font styles
14:15 - but i i really think i'd like to
14:17 - customize it exactly how how i want it
14:21 - it's nice that material ui has those
14:23 - built in but
14:26 - it's really not that big of a deal to
14:28 - change some fonts with css so
14:31 - uh some font sizes and weights so i
14:34 - think in this case uh
14:36 - we'll get a better result if we just
14:38 - customize it
14:39 - uh ourselves
14:42 - so let's go into
14:44 - dev tools and uh we'll just play around
14:47 - a little bit with the fonts now i've
14:49 - also had the idea of bringing in
14:53 - that responsive font from materialize
14:56 - css that we've used on previous projects
15:00 - so that's still an option
15:04 - i'm a little afraid that it might be too
15:07 - big
15:08 - people are used to
15:11 - a font that's somewhere in between this
15:13 - and what we're using um when we use that
15:16 - responsive font from materialize
15:19 - so
15:22 - we'll see
15:27 - oh that's interesting
15:29 - why is that in an aside tag
15:35 - really interesting
15:39 - okay well
15:43 - let's
15:45 - bring this up so we can see what's going
15:46 - on here
15:47 - and
15:48 - let's take that font size
15:51 - and i want it to be at least 16 pixels i
15:54 - don't want to have any fonts that are
15:58 - smaller than 16 pixels
16:01 - um let's go with font weight
16:04 - let's try 400 yeah i like that a lot
16:07 - better do you see that that difference
16:10 - um we'll be able to you know side by
16:12 - side see the difference but already
16:15 - i think this is let me zoom in here
16:20 - i don't know about you but
16:22 - at least on my screen already i see a
16:24 - big difference in terms of readability
16:27 - uh this just seems
16:29 - a lot nicer
16:31 - uh so let's
16:33 - let's keep going with this
16:35 - um
16:37 - i do want to check what do we have a
16:38 - color okay i like that color we have
16:40 - that um
16:42 - this is the correct way to do color with
16:44 - material design on the web
16:46 - um black
16:48 - uh with uh some transparency
16:52 - uh particularly 0.87
16:56 - for your primary text
16:58 - okay
17:02 - all right that's not bad
17:03 - let's try to bring this up though let's
17:05 - see if if it will still be reasonable
17:07 - and i'm going to zoom out
17:09 - so that we see what it's really like
17:11 - would it be reasonable to go up to let's
17:13 - say 18.
17:21 - i think 18
17:23 - i think 18 looks nice
17:29 - all right let me go back let me see the
17:31 - live chat what do you all think um
17:34 - i
17:36 - i don't think 18 looks
17:38 - too large at all
17:44 - hmm
17:52 - okay who say john hanson says uh lighter
17:54 - font weight i find much easier on my
17:57 - eyes especially my old eyes
18:00 - yeah
18:01 - that's i mean that's what i'm going for
18:03 - really um
18:05 - you know for somebody who's
18:08 - i i mean for somebody that has perfect
18:10 - vision right it's
18:13 - who cares the font size doesn't really
18:14 - matter they're going to deal with font
18:16 - size no matter what but i'm more worried
18:18 - about
18:20 - you know there's going to be a lot of
18:22 - older people reading this we we
18:24 - certainly have
18:26 - especially among the faculty here
18:29 - you know there there are some some older
18:31 - uh professors that i want to make sure
18:34 - that they're able to read this so um i
18:37 - kind of want to go beyond
18:40 - you know just the normal use case
18:48 - okay
18:50 - all right uh shashank thinks actually
18:52 - that the 18 uh pixel font is um
18:57 - uh
18:58 - a little bit it's clogging
19:01 - actually i would like to see
19:03 - um
19:06 - maybe
19:07 - let me apply this 18 pixels and then see
19:10 - how it all lays out because right now
19:12 - you know we're doing this within the
19:13 - card so you see it's kind of going over
19:16 - we really aren't going to know until we
19:18 - see everything like that so let's go
19:20 - ahead and try this
19:24 - and
19:28 - yeah we'll try this let me see
19:30 - okay so this is not
19:33 - this is really interesting i would have
19:34 - assumed that this was somehow in a
19:37 - paragraph tag
19:38 - and not an aside
19:44 - that's interesting does anyone know
19:47 - should this be in an aside is there any
19:49 - benefit to that and is there any way we
19:52 - can change that
19:54 - since you know we're not actually
19:55 - creating this tag directly it's it's
19:58 - being created
19:59 - by mature ui
20:08 - hmm
20:11 - let's see how i want to
20:13 - select this
20:24 - mui card content
20:26 - see all the uh the classes are
20:30 - they're not helping me right now i guess
20:32 - i could just do all the sides
20:36 - um okay brett says aside is good
20:39 - semantically okay cool i just
20:42 - i really haven't used the side very much
20:44 - so i just wanted to make sure that
20:47 - you know it was
20:48 - the right way to use it i'm glad that it
20:50 - works i wasn't really looking forward to
20:52 - digging into that component and trying
20:54 - to change it okay so let's go with that
20:56 - let's um
20:59 - let's go to our just our index.css
21:02 - i would like these styles to apply
21:04 - um
21:05 - over a wide range of things so this is i
21:08 - i think the the proper place
21:12 - um
21:13 - let's see
21:22 - let's go with
21:24 - p
21:26 - and
21:27 - aside
21:30 - and we'll add this in
21:33 - let's save that
21:35 - and
21:36 - the wrong way
21:38 - i guess we'll need to refresh ourselves
21:46 - okay
21:47 - uh i suppose we're getting overwritten
21:49 - here let's see what's going on
21:53 - yep we are so we're gonna have to i
21:55 - really hate to use important on
21:58 - something that's this kind of global
22:01 - in our styles but
22:05 - i really also don't want to have to go
22:07 - into every place
22:09 - and
22:10 - put these things in so
22:15 - let's see
22:23 - let's see
22:24 - all right so harsh it's saying use
22:26 - style.js
22:29 - um
22:32 - all right let's check out our style.js
22:37 - i mean at this point we're pretty much
22:38 - still testing it out as well so
22:43 - um i'm all for putting things in the
22:45 - right place but
22:47 - we're almost like
22:48 - designing
22:50 - as we code so
22:53 - i guess i could just do it in devtools
22:57 - i guess i don't have style.js open
22:59 - currently so let's grab it from here
23:05 - some styles
23:20 - okay
23:42 - let's see what
23:47 - yes
23:48 - i'm just wondering what
23:50 - is there a class already being applied
23:52 - that we could just
23:55 - add on to
23:57 - see these are all have these numbers
23:59 - added
24:15 - okay
24:25 - okay i should say an open post preview
24:27 - alright we'll check it out
24:36 - okay so at least it's being applied here
24:39 - which is nice
24:41 - um
24:45 - it's not bad actually in post preview we
24:47 - have quite a bit of space we could
24:49 - probably go larger if we really wanted
24:51 - to
24:56 - i think this is fine for now but uh we
24:58 - definitely have that opportunity
25:00 - um
25:08 - okay
25:18 - all right i'm i think i'm
25:20 - yeah i'm okay with that for now
25:22 - let's go back to this view and we also
25:25 - do want to make sure that we don't
25:28 - forget to check this view as well
25:34 - all right so let's check out what we
25:36 - have going on here
25:44 - um
25:49 - i guess i could check into the
25:52 - um
25:56 - let's see
25:59 - okay should i you keep saying i mean the
26:01 - js file oh okay
26:04 - um the component post preview
26:07 - okay so not the sorry i thought you
26:10 - meant
26:11 - go to the post preview and not the
26:14 - components
26:16 - um
26:17 - oh yeah
26:23 - post preview
26:54 - okay
27:15 - says see their card content
27:20 - yeah do we did we have card content
27:41 - okay
27:58 - there we go
28:00 - okay so here's where we're pulling in
28:02 - that that content
28:07 - okay
28:14 - uh so
28:25 - i don't know i'm
28:27 - i'm thinking here
28:42 - since we haven't found a uh typography
28:46 - type
28:47 - that we like
28:49 - for this should we even be using
28:51 - typography
28:53 - um
28:54 - could we get
29:00 - i mean ought we to just use uh a
29:03 - paragraph tag
29:06 - um
29:07 - our is support
29:09 - did you really submit a pull request
29:11 - already on this
29:13 - um
29:19 - are you saying check the pull request
29:22 - when we did this
29:31 - so i'm actually interested to see
29:38 - we would have to switch it up because we
29:40 - can't just pop content um well i suppose
29:44 - we could
29:49 - because we've already sanitized it so we
29:50 - could put it like that
29:53 - um
29:55 - let's see
30:04 - we could
30:05 - type
30:08 - last name
30:10 - i mean we could just add a class on it
30:24 - are we already using classes content
30:48 - okay actually hardship has submitted a
30:50 - pull request basically doing
30:53 - what we were doing here so
30:55 - um
30:57 - where are we at so what we're doing here
30:59 - now is we're going to keep the
31:01 - typography
31:03 - and we're going to add a class
31:06 - okay
31:09 - then
31:11 - up here
31:12 - where we have all our classes here
31:16 - then we can just add that class in and
31:18 - we'll put in our
31:20 - our css
31:22 - as if
31:23 - as a an array
31:25 - or i'm sorry as an object so you can see
31:29 - there are several ways to do styles and
31:31 - react all right we're we're using a
31:34 - mixture so we're doing some some normal
31:38 - css here right uh this is should be very
31:41 - familiar
31:43 - which works in react
31:44 - it's it's it's totally fine it works
31:48 - but
31:49 - there are some other ways this being one
31:51 - of the ways
31:52 - uh where we're actually making an object
31:57 - and
31:59 - we're using that
32:01 - within our uh within our components so
32:06 - this kind of allows you to
32:10 - have a much more self-contained
32:11 - component if you have all the styles for
32:14 - your component
32:16 - and in the actually in the component
32:18 - it's much easier to just take that
32:19 - component and reuse it anywhere
32:22 - right but if we put all our styles here
32:24 - in index.css well number one they're all
32:26 - global
32:29 - which
32:30 - which
32:31 - i mean global styles aren't in
32:33 - themselves bad but it can be bad there
32:35 - can be conflicts it can be difficult to
32:37 - manage
32:41 - so
32:42 - anyway depending on what you
32:44 - what project you're doing and you know
32:47 - how you want to organize it you may want
32:48 - to do these there might there are other
32:50 - ways as well these aren't the only ways
32:53 - to do it
32:54 - okay
32:56 - um i will say this though
32:58 - if you do it this way i find it easier
33:02 - to transition to react native
33:05 - uh because this is the way you'll you'll
33:07 - most likely want to do this in react
33:09 - native uh
33:10 - with slight differences but
33:13 - uh we did a stream on react native if
33:15 - you want to know more about those
33:16 - differences but
33:18 - it's a much easier transition so if you
33:20 - just kind of start learning it this way
33:22 - it's a little bit weird at first to get
33:24 - used to making it as an object and there
33:26 - are ways to actually
33:28 - put real css in here in terms of syntax
33:32 - as well
33:33 - if you really want want to do it like
33:35 - that
33:36 - but anyway that's we're going to do so
33:39 - i know we kind of almost had it done
33:41 - here but i don't want harshet's work to
33:43 - go to waste so i'm going to bring in his
33:45 - pull request just really quickly
33:48 - and get rid of what i was doing here and
33:53 - just so that i don't have to deal with
33:55 - any merged stuff right now
33:58 - oops
34:00 - there we go
34:01 - i'm going to get rid of everything that
34:03 - we've done
34:05 - and
34:07 - here we go
34:08 - so let's just double check
34:12 - hit status no
34:14 - index.css has changed what did i change
34:24 - there we go
34:26 - all right is that better now
34:28 - it's probably just indentation
34:33 - um
34:36 - actually that's really weird why do i
34:37 - have that indented like that i never
34:39 - indent things like that
34:44 - this is really weird indentation
34:55 - okay
34:56 - anyway let's just
34:59 - uh
35:01 - i guess it doesn't matter now
35:11 - i messed it all up
35:13 - all right let's go with this
35:15 - p tag again
35:16 - uh since i do want this to apply to all
35:19 - paragraphs no matter what anyway
35:23 - uh we use a mix here both
35:25 - both ways
35:26 - uh what was it
35:28 - fonts
35:30 - size 18
35:35 - and font
35:37 - weight
35:39 - 400
35:41 - and i may end up
35:43 - changing this as well
35:45 - i'm thinking it might not be a bad idea
35:47 - to do the responsive font for
35:49 - the paragraph tags and then go with the
35:52 - standard font for that post preview the
35:55 - cards
35:56 - so that's probably what i'm gonna end up
35:58 - doing i doubt i have time on this
36:00 - pomodoro session maybe on the next
36:02 - session we'll do that um but anyway
36:04 - let's just
36:10 - let's just commit this quickly
36:13 - and
36:18 - um
36:22 - let's this be a little bit more
36:23 - descriptive
36:38 - there we go
36:51 - okay
36:55 - so i had blocked my live chat
36:57 - um
37:08 - let's see
37:20 - okay harshit uh thanks for that i always
37:23 - forget that uh you could just if i
37:25 - wanted to just revert everything without
37:26 - manually doing it uh i could have just
37:29 - done uh get checkout and then um
37:34 - a dot
37:35 - so
37:37 - that would have been faster thanks
37:40 - um let me check my time okay
37:43 - perfect timing we'll um
37:48 - just finish this up
37:56 - and
37:57 - now i can merge
38:01 - great and
38:05 - awesome so now we have all of harsha's
38:07 - stuff we're gonna see it now great okay
38:10 - so here's what it looks like with the
38:12 - size 18 font
38:17 - i
38:18 - something needs something could be
38:20 - better
38:21 - maybe it's the line heights
38:28 - maybe line i know we can we can do
38:30 - better it just seems something's off
38:34 - um
38:36 - all right let's let me take five minutes
38:38 - now and go through the um
38:42 - uh the live chat answer any questions
38:44 - you have then we'll do another uh
38:45 - session
38:46 - and uh i think i'm gonna
38:50 - i'm gonna check out some previous
38:53 - work that we've done
38:55 - and just compare what we're doing in
38:57 - terms of uh line height
39:01 - because that may be
39:02 - that may be what seems off to me here
39:06 - okay so let me scroll up
39:09 - and i'll try to get through as much as i
39:10 - can in these five minutes
39:19 - okay so red 23 has a question uh do you
39:22 - think that html is easier than python
39:26 - um
39:27 - yeah for somebody who has no experience
39:30 - in any type of com
39:32 - coding at all or web development i i do
39:36 - think html would be easier to learn
39:39 - now if you already have a background in
39:42 - programming like
39:44 - let's say another programming language
39:46 - you know maybe you're into java or some
39:48 - form of c
39:50 - um
39:52 - it it actually
39:54 - this may sound weird but i think it
39:56 - actually might be easier
39:58 - to go with python than to learn html and
40:01 - i wouldn't normally think this except i
40:03 - i i do know
40:05 - i've i've talked to
40:06 - at least one programmer who
40:09 - was always used to doing just strictly
40:12 - um like software development uh with
40:15 - with c sharp
40:17 - and
40:19 - trying to learn more front-end stuff
40:22 - like html uh it was actually somewhat
40:26 - challenging because it's a whole
40:28 - different mindset
40:30 - so
40:32 - you know it's hard to to measure you
40:35 - know what what's easier not easier you
40:37 - know what unit of measurement is there
40:39 - for that
40:42 - but
40:43 - i would say the majority of the time
40:46 - html is easier
40:48 - but it somewhat depends on
40:51 - what background you're coming from in
40:53 - terms of of your knowledge base
41:46 - uh
41:51 - okay
41:52 - not really a lot of questions going on
41:54 - so sorry for the long pause i'm just
41:57 - trying to read through and see
41:59 - um
42:01 - see if i uh need to answer anything so
42:05 - um oh harsh it says uh node 8 is now an
42:08 - lts so yeah um if
42:12 - if you uh haven't upgraded your version
42:14 - of node for a while now might be a good
42:16 - time to go up to node 8. i know in
42:19 - particular for
42:21 - this project
42:23 - it will not work
42:25 - unless you have
42:27 - at least node
42:28 - 7 4 i think
42:31 - so 7.4
42:33 - so
42:34 - not a bad time
42:36 - to upgrade
42:44 - oh good good question joseph asks if
42:47 - there's a print view for individual
42:48 - posts and uh yes there is
42:51 - um
42:53 - so if we click an individual post
42:57 - and then hit print view
42:58 - we we have our print view here so
43:02 - um
43:04 - actually now that i think about it
43:09 - i don't think this is a really important
43:12 - uh you know it's not a priority but you
43:14 - know it's possible that we could do a
43:15 - little bit with with this section here
43:18 - to make it more printer friendly
43:20 - um so like obviously i wouldn't want any
43:23 - color
43:25 - uh in the the print view because most
43:27 - likely it's going to be printed black
43:28 - and white anyway
43:30 - um
43:33 - yeah we'll see i mean i i think this is
43:34 - acceptable as as is but
43:38 - well um
43:40 - maybe we'll come back to that at some
43:42 - point but anyway good question
43:53 - okay
44:03 - uh
44:04 - denon j says um
44:07 - learning uh in stanford online cs 101
44:10 - course
44:12 - um
44:14 - says is it is it worth learning
44:18 - um
44:21 - yeah i i i think having a basic
44:23 - knowledge of computer science is is very
44:26 - useful
44:27 - um
44:28 - even even just if you're doing web
44:30 - development is it necessary for web
44:32 - development no not it's not necessary
44:36 - but i think it it could definitely be
44:38 - helpful
44:39 - um
44:40 - and it makes it easier for you to kind
44:42 - of branch out and maybe go into
44:44 - different things if you don't want to
44:45 - stick with web development because you
44:46 - have that background kind of a
44:49 - a better view of the big picture
44:52 - uh in terms of all of you know the
44:54 - computer science realm
44:57 - so
44:58 - um
44:59 - i think that's awesome i haven't uh
45:01 - checked out that stanford 101 course
45:05 - i have done a bit of the
45:08 - harvard
45:09 - cs50
45:10 - course and i thought that was very
45:13 - interesting if i have time i'd love to
45:15 - finish that
45:16 - um
45:17 - just got got busy with other projects
45:21 - um
45:22 - but no i i think it's
45:25 - if you have the time to do it it's it's
45:27 - worthwhile
45:29 - all right
45:35 - let's go back
45:45 - okay let me go back and let's start our
45:47 - pomodoro session and um we're going to
45:51 - um
45:52 - let's
45:54 - let's go ahead oh okay now i remember
45:56 - what we were gonna do uh we were gonna
45:58 - check out
46:01 - this spacing there's just something
46:03 - about this that's
46:05 - that i don't like right now uh screen
46:07 - check that out oh okay harsha mentioned
46:09 - it i i had said i thought it was 7.4
46:12 - for the node version we actually need
46:14 - 7.6
46:16 - and that's because we're using async
46:17 - await
46:18 - on the server
46:20 - so we need at least 7.6 so if you try to
46:23 - i believe we have this in the
46:25 - documentation for the project
46:28 - so
46:29 - i i think it is in there
46:31 - but in case you you didn't read that
46:34 - and you're having trouble getting the
46:35 - project to work on your own machine
46:37 - make sure you have the correct node
46:39 - version
46:46 - okay
46:50 - all right let me check out
46:52 - actually i want to check this out
46:54 - on the current bulletin
47:00 - so i'm on my other screen i'm just going
47:01 - to bring up dev tools just to check
47:03 - quickly what
47:04 - what kind of styles were we have here on
47:07 - our and and the current bulletin these
47:10 - are
47:10 - in paragraph tags
47:12 - but um
47:14 - okay so our font
47:18 - is that
47:19 - line height
47:21 - uh where's our line height coming from
47:22 - 1.5 all right let's check our line out
47:24 - here now
47:40 - hmm
47:42 - that's a
47:44 - line high 24.
47:48 - where are we getting this from
47:50 - yeah
47:52 - all right let's try some some different
47:54 - things with line height
47:57 - so i'm
47:59 - basically running 1.5 is the line height
48:03 - and let's see what that changed it to
48:05 - okay
48:06 - so let's see the difference
48:12 - actually i really like that
48:14 - i don't i don't know about you all but
48:16 - that just
48:17 - at least for my eyes seeing this that
48:19 - just made a big difference
48:29 - not bad so i mean it was only a few
48:31 - pixels different so we're going from 24
48:34 - pixels in line height to
48:36 - 27 pixels
48:38 - but i
48:41 - i think that makes a big difference
48:46 - all right let's throw that in so there's
48:47 - two places where i want to change this
48:49 - right now
48:50 - because
48:51 - i think i'd like to apply it to
48:53 - paragraphs as well
48:55 - so i'm going to try to
48:56 - keep using the setup i have now for the
48:58 - paragraph tags although i still might
49:01 - change it to use a responsive font and
49:03 - by that i mean
49:04 - if you're not familiar with a responsive
49:06 - font
49:07 - the font size will actually change based
49:09 - on the screen width
49:11 - so it'll be a more optimal viewing
49:13 - experience
49:17 - basically the idea is to keep the words
49:20 - big enough to be readable and not only
49:22 - that but the amount of words per line
49:26 - in that sweet spot which is which i
49:28 - think what it was i can't remember for
49:30 - sure the with the optimal amount of
49:32 - words per line is um
49:35 - it's easy to google and see if anybody
49:37 - remembers what that is uh please let me
49:40 - know in the live chat
49:41 - um but there there is actually an
49:44 - optimum amount
49:46 - if you want people to uh be able to read
49:48 - things easily on your site
49:51 - and it's hard when you have multiple
49:53 - like different size screens to actually
49:55 - get that a responsive font can help you
49:57 - stay within that range
50:00 - um so it doesn't always work it's not
50:02 - perfect but you have a much better shot
50:04 - at staying within that range if you if
50:06 - you do it like that
50:08 - um so what i just do line
50:10 - heights 1.5
50:14 - and we're also going to do it here
50:18 - so where's our
50:24 - area card class
50:29 - line height
50:34 - and
50:35 - 1.5
50:40 - okay
50:43 - so
50:44 - whoops this should give us
50:46 - an auto refresh
50:48 - and
50:50 - let's double check to make sure this is
50:52 - being applied it definitely should be
50:54 - yep it is wonderful and we can check in
50:58 - here
50:58 - make sure it's applied as well
51:01 - and
51:03 - nope did i forget to save it
51:05 - it's possible
51:13 - all right let's give it a refresh
51:23 - oh there we go okay
51:25 - awesome
51:33 - all right so this is acceptable right
51:35 - now
51:36 - um
51:38 - if we have time later on we want to keep
51:39 - messing with it we certainly can
51:41 - let's go to this side nav because
51:45 - aside from the titles which right now i
51:47 - think are acceptable i i i may want to
51:50 - work on them a bit
51:52 - but aside from that i just want to make
51:54 - sure that everything we're doing here in
51:56 - the side nav is
52:03 - it's all you know as readable as it can
52:05 - be so i'm not we may not have to do much
52:08 - but i just want to
52:10 - double check a few things
52:13 - and um
52:16 - make sure so the first thing i want to
52:18 - check is the font size
52:21 - we're 14. i don't want to be at 14. so
52:25 - uh let's bump this up now
52:28 - to
52:31 - let's see
52:32 - what is this category three yeah let's
52:34 - bump this up
52:38 - and we're gonna go
52:40 - font
52:41 - font size 16 pixels
52:45 - okay
52:47 - yeah i think that's much better it
52:48 - doesn't look like we're in any danger of
52:50 - having you know something be too long
52:54 - everything's short enough here that it
52:56 - should work
52:57 - all right so let's go ahead and do that
52:59 - um
53:01 - i think this is this component is called
53:03 - the drawer
53:05 - so let's find that
53:08 - we add
53:09 - drawer
53:11 - and
53:13 - here
53:17 - list item
53:22 - yeah here so we're gonna have these uh
53:25 - these list items and
53:41 - i guess we could put it right on the the
53:43 - link we say we already have a class
53:46 - classes link on here so let's edit that
53:48 - where's it at are we doing this down to
53:50 - the bottom
53:54 - there's our classes
53:58 - oh
53:59 - okay we're are we passing in
54:02 - clash
54:10 - i guess we're passing it in
54:34 - hmm
54:36 - okay
54:44 - index
54:56 - central
55:10 - sidebar okay
55:12 - that's what we're calling it we're
55:13 - calling this sidebar why are we bringing
55:15 - this in
55:17 - uh sidebar for
55:20 - let's let's change this to be consistent
55:23 - with our naming so i'm going to change
55:26 - this
55:27 - to drawer
55:31 - um
55:34 - so
55:35 - anyway i guess this is good so i don't i
55:37 - mean i don't know if there's some reason
55:39 - for doing it differently but i think
55:41 - it's less confusing if in general we um
55:45 - we keep our component names the same as
55:48 - the file names for our components
55:51 - so that was throwing me a little bit i
55:52 - was looking for a component called draw
55:55 - but instead it was it was sidebar so
55:59 - we're gonna have to have some sort of
56:01 - standard um like guide for contributing
56:04 - a style guide or something like that so
56:08 - um
56:11 - anyway so if you're
56:13 - if you're submitting pull requests just
56:15 - keep that in mind uh otherwise
56:19 - you know it can get a bit confusing
56:22 - but yeah we didn't really have any type
56:24 - of formal
56:25 - you know guidelines about that so we'll
56:27 - have to add that in somewhere
56:29 - uh i think i think we have a
56:31 - contributing file for this repo i'm not
56:34 - positive though
56:36 - but perhaps we should just have some
56:37 - sort of global
56:40 - style guide um
56:44 - that that would probably help things out
56:46 - um
56:48 - yeah it's classes this cross class okay
56:50 - so we're bringing in
56:53 - okay harsha says we're pulling that in
56:54 - from style.js
56:58 - all right so let's grab that
57:01 - we're at stylus
57:04 - right here right next to it okay
57:07 - um
57:08 - let's bring this in
57:23 - good thinking so he said he um
57:28 - um
57:29 - harsh it name so harsha ended up naming
57:32 - that component sidebar instead of drawer
57:35 - because he didn't want it to be confused
57:38 - with the drawer component
57:40 - um that is is brought in from
57:44 - uh mature ui
57:46 - actually that makes a lot of sense
57:48 - uh let me see
57:53 - i'll be pulling in the drawer
58:04 - okay it doesn't look over pulling it in
58:06 - anywhere else so okay so how about this
58:09 - let's do
58:12 - like i said we'll have to type this up
58:13 - and kind of do it formally but
58:16 - um
58:20 - how about if there could be some
58:23 - conflict where you have we're using a
58:25 - library that has the same component name
58:28 - as the one that we're trying to create
58:31 - our custom one can have the normal name
58:33 - so in this case drawer and then if we do
58:36 - want to use the library's version
58:40 - elsewhere
58:41 - or potentially even in the same
58:44 - file
58:46 - we just prefix it
58:47 - so instead of drawer it would be mui
58:50 - drawer
58:51 - uh then that way
58:54 - uh we can just
58:56 - keep using both
58:58 - if we need to and there will be no
58:59 - confusion about where that component
59:01 - comes from because we're calling it mui
59:04 - drawer
59:05 - so
59:07 - can we do that would that be
59:09 - doable and
59:13 - easy or is that going to be should we do
59:15 - it the opposite way and somehow prefix
59:17 - our component to maybe say custom drawer
59:20 - let me know what you think would be
59:21 - easier
59:22 - or more reasonable to do i'm open to
59:24 - either one but it'd just be cool if we
59:26 - could decide on one way and then
59:29 - be consistent with it
59:33 - later on so
59:34 - i mean i'm sure most of you can
59:36 - understand and handle the distinction
59:37 - but you know potentially if we get newer
59:40 - people who are just learning react
59:42 - i'd like to try to make it um
59:45 - as easy of an experience as possible if
59:48 - they're either looking through our code
59:49 - or trying to contribute
59:52 - and then potentially if i get any
59:53 - student workers here at the university
59:55 - that are dealing with this
59:57 - they're likely going to be new to react
59:59 - so
60:00 - anyway you all you understand
60:04 - uh okay so where
60:06 - sorry i just lost my train of thought
60:09 - oh okay i was trying to find where
60:15 - what styles i need to bring in
60:17 - oh sorry
60:20 - so we have a drawer here
60:22 - class we're passing this props classes
60:40 - okay so basically i should be fine to
60:42 - add a class here and then it'll just go
60:45 - straight down
60:46 - right
60:50 - okay awesome harshit i'm gonna i'm gonna
60:52 - grab your comment here
60:55 - and um
60:58 - let's see
61:00 - uh i'm gonna put it up here quickly just
61:02 - so everybody can see it
61:04 - let me make sure
61:06 - no it's blocked
61:08 - um
61:09 - let's put it up higher
61:15 - okay so this is pretty much this is what
61:17 - we want to do
61:19 - so
61:20 - uh up here it might be hard to see
61:22 - because it's gray
61:24 - but basically we're we're running um
61:27 - let's take this up so we're going to do
61:29 - import drawer
61:30 - as
61:32 - uh mui drawer so in this case material
61:35 - ui drawer but we could really prefix it
61:37 - with different things depending on what
61:39 - library we're using
61:41 - and then it'll be of course from
61:43 - material ui slash drawer
61:46 - so
61:46 - excellent
61:53 - cool i figured there was a way to do it
61:59 - okay uh so let me see
62:02 - george is
62:04 - uh see the class name
62:07 - andrew oh okay so let's just pass it
62:10 - down let's find out where our other
62:11 - drawer classes are just group them
62:13 - together so we have drawer paper drawer
62:16 - header let's throw in
62:18 - um drawer item
62:33 - yeah let's go draw item and then
62:35 - we're going to say fonts
62:39 - size
62:42 - 16.
62:44 - um
62:48 - 16 pixels
62:50 - and let's not forget that
62:52 - comma
62:54 - i've gotten so many errors from
62:56 - forgetting commas in this it's like
62:59 - it's so silly but it's it's easy to
63:02 - forget that little comma
63:04 - okay uh now let's go back in our
63:06 - drawer.js
63:08 - let's go back down to our list
63:10 - classes link oh okay we already had a
63:13 - class shoot let me find that class
63:18 - link
63:20 - and click link
63:21 - i'm not seeing it
63:25 - there we go
63:28 - none color not
63:31 - oh okay
63:38 - you know what for now i'm going to keep
63:40 - this separate uh i don't want to put the
63:43 - because i assume this link color is
63:45 - being could potentially be used in other
63:48 - things
63:49 - and not necessarily the side side nav so
63:53 - so i'm just going to apply both styles
63:54 - here
63:56 - so i'm thinking later on if in fact we
63:59 - do a responsive font i don't want to
64:02 - risk conflicting
64:04 - uh so i would potentially have all of
64:06 - the font one size and then
64:09 - somehow have a link
64:11 - a different size
64:13 - so
64:14 - anyway
64:16 - uh let's do
64:19 - are we at drawer
64:20 - uh so let's go class name classes link
64:25 - how are we gonna how do we do this
64:27 - um
64:31 - actually it says use class name package
64:34 - to combine styles
64:40 - okay how do how do we do that i was just
64:42 - going to pass both styles in
64:45 - so i'm i'm interested in this uh so
64:48 - harsh it's saying we can use class name
64:50 - package to combine styles
64:54 - but i am unfamiliar with this
64:59 - oh okay
65:08 - okay interesting i think uh i've never
65:10 - done it like that before i've done like
65:12 - uh
65:13 - like an array
65:14 - uh within here of uh
65:18 - of classes i think that's how i did it i
65:20 - think it was an array cd it says see at
65:22 - bar okay
65:24 - um so
65:26 - class names classes flex last time
65:28 - awesome
65:30 - that look i actually i like i prefer
65:33 - this way to some ways i've done it
65:35 - previously
65:36 - that's really nice now i'm not going to
65:38 - do it on this one but i am actually just
65:40 - curious
65:41 - what if we wanted to do class names like
65:43 - this but then in addition do some uh oh
65:46 - no we wouldn't want to right
65:48 - because this is the class name it's not
65:52 - direct styles right
65:57 - okay never mind
65:59 - never mind i was uh just thinking about
66:02 - the way i did things um on that react
66:04 - native app that i uh completed i don't
66:07 - know like two weeks ago
66:09 - um but i suppose that was a different
66:11 - use case now that i think about it so
66:14 - please disregard that question um let's
66:17 - see so class names
66:19 - did we have to bring that in
66:22 - no
66:23 - yes okay
66:24 - let's import class names here
66:28 - it might already be imported we'll see
66:35 - nope all right let's bring that in
66:37 - import class names and
66:41 - um
66:45 - now i lost that link
66:51 - there we go
66:52 - um class names
66:56 - so we have class names and
67:00 - then
67:01 - actually let me see did you have to put
67:06 - that bar sorry
67:08 - okay so we we
67:11 - do we have to keep okay so we do have to
67:13 - keep um
67:15 - doing classes dot okay that's fine
67:18 - just wanted to double check
67:27 - we call that
67:30 - drawer item
67:33 - okay
67:39 - let's check this out now
67:43 - whoa
67:45 - let's let's give it a refresh
67:47 - see what's going on
67:49 - hmm
67:51 - i messed something up let's see what did
67:53 - i do
67:54 - um
67:56 - let me oops there it is
68:08 - all
68:08 - right
68:10 - okay so this is this is pretty
68:12 - interesting so let me uh let me share
68:13 - this with you all so harshit is saying
68:17 - um
68:18 - quickly i'm just gonna confirm
68:22 - that we have the right fonts
68:25 - no not yet
68:27 - it's not working yet let me uh
68:29 - let me go back
68:32 - okay so class is for item
68:34 - let's make sure this is what i'm doing
68:40 - item
68:42 - font size 16 pixels
68:46 - interesting
68:47 - um
68:52 - item
69:16 - yeah it looks like it's exactly the same
69:25 - looks the same
69:27 - and
69:28 - let's make sure
69:30 - we are bringing in class names
69:32 - okay let's check it out again
69:37 - let's just do a
69:40 - hard refresh
69:42 - now huh
69:43 - all right let's see what's going on here
69:46 - category
69:58 - there we go that's what's going on okay
70:02 - all right so here's what's happening
70:04 - we are in fact getting this font size
70:07 - uh but it's it's
70:08 - it's on the a tag
70:11 - um and
70:13 - somewhere along the line
70:15 - it's being overridden
70:17 - by this
70:21 - so
70:22 - whoa
70:25 - that was unintentional
70:27 - [Music]
70:30 - all right let's see
70:38 - shoot
70:52 - hmm
71:01 - uh all right
71:03 - is there any way to do
71:09 - there is the link component
71:15 - we are
71:16 - not creating that right yeah that's
71:18 - react router
71:19 - um
71:30 - we need to put this lower down
71:34 - on the list item text
71:36 - so that was my mistake i should have
71:38 - never put it on the link
71:40 - so let's go
71:42 - class name
71:49 - classes dot
71:51 - drawer item
71:53 - and then now
71:56 - we don't need this anymore
72:01 - and we don't need this
72:06 - save that and see if that gets us down
72:10 - low enough
72:14 - oh
72:15 - it doesn't look like it let's see where
72:17 - it get applied
72:19 - not
72:20 - there uh
72:23 - here we're so close
72:25 - um
72:27 - yeah i list items
72:42 - and
72:44 - um
72:49 - okay
72:53 - i don't know how we're gonna get further
72:55 - down than that okay so
72:57 - what i need to do
73:03 - is check out the material ui
73:05 - documentation
73:12 - to see if there's some built-in way that
73:14 - i can get at that interior
73:17 - paragraph tag or overwrite it or
73:20 - something
73:23 - so let me do that i know my timer is up
73:25 - but i we're so close
73:27 - i don't want to lose my train of thought
73:28 - here so
73:30 - let's do this and then i'll go to the
73:33 - to the live chat so where are we at
73:38 - wait what was it
73:40 - list
73:43 - item
73:46 - text
73:48 - okay
73:51 - that's actually really helpful
73:55 - i don't know if you saw that
73:57 - uh
73:58 - i really like that feature
74:01 - that'd be cool to implement something
74:03 - like this in some of our projects so
74:05 - just keep keep that in mind you can go
74:07 - on the wish list
74:08 - all right so let's see let's item text
74:11 - let's see
74:13 - um
74:15 - i'm going to disable
74:17 - the children won't be wrapped by
74:18 - typography content
74:22 - oh is that what's happening
74:24 - typography
74:54 - okay um
75:00 - all right so let's try
75:05 - did we already have this on let's see
75:07 - really
75:17 - disable typography
75:19 - see if that does it
75:25 - no
75:26 - it's actually worse
75:29 - interesting and so it changed it to a
75:31 - div
75:32 - it still didn't do what we want
75:35 - oh wait a second
75:41 - yeah that's not what we wanted at all
75:43 - all right let's take that out
75:46 - and instead
75:52 - let's check i'm interested in this uh
75:54 - root
75:56 - here
76:11 - what's up
76:28 - hmm
76:54 - maybe you have to do an override
77:23 - okay
77:24 - um
77:27 - let's see
77:32 - all right these inline style approach
77:34 - everything for style property
77:41 - see how this thing
78:07 - maybe
78:07 - we can do it like this
78:24 - yeah
78:27 - let's try that
78:29 - sorry that text was probably really
78:30 - small i apologize
78:33 - so anyway i'm thinking something like
78:35 - this would let us get it the root
78:36 - component
78:38 - uh so in this case we're going to want
78:40 - to say
78:42 - classes
78:56 - i'm gonna try it like this first i'm not
78:58 - sure it'll work but
79:00 - always worth it to try a simple thing
79:06 - all right yeah that does not look like
79:08 - it's the font size we want
79:11 - see if anything happened
79:16 - wow we're still getting it there
79:19 - i wanna
79:22 - refresh
79:37 - hmm
79:55 - hmm
80:10 - okay
80:12 - i'm not sure what the material ui way
80:16 - of doing this is supposed to be
80:30 - so
80:32 - let's
80:34 - she says if you've written a better way
80:35 - to do it it's using line css directly
80:37 - component
80:38 - um so john hanson says uh it's it's
80:41 - seeming to suggest that uh styles need
80:43 - to be overwritten directly in the
80:45 - component with css the problem is
80:48 - it seems like i can't get any any deeper
80:51 - in than this div
80:54 - anything within that i can't touch so
80:56 - here's what i'm going to do
80:58 - i'm certainly open to finding a better
81:00 - way to doing this at some point but i
81:01 - think this will work
81:03 - so
81:04 - let's go with um
81:09 - let's get rid of
81:12 - this going to do a class name and let's
81:16 - see if we can
81:18 - class name equals
81:23 - um
81:26 - draw item
81:34 - oops
81:35 - keep going the wrong way
81:37 - all right
81:42 - there we go so we got a classic draw
81:44 - item on here now
81:49 - let's just put
82:00 - drawer item p
82:04 - and we'll do font
82:06 - size
82:09 - 16 pixels
82:11 - important
82:18 - now
82:23 - great that works so
82:25 - uh it didn't apply everywhere because we
82:27 - need to put that class on these places
82:29 - but you can see this works so we are
82:32 - able to get down to it so
82:34 - um
82:35 - is there a way to do that in material ui
82:38 - or within that
82:40 - javascript object where you had a bunch
82:41 - of styles in potentially i don't really
82:44 - know but
82:45 - um
82:46 - good old normal css
82:49 - has done the
82:50 - job uh so
82:57 - yeah and
83:00 - i i gave a
83:02 - disclaimer a warning about using
83:04 - important on a previous stream so i'm
83:06 - not going to do it again but
83:07 - just the short version is don't use
83:10 - important unless you really really have
83:11 - to
83:13 - uh
83:14 - all right cool so let's just add this
83:16 - class on so it applies you know across
83:18 - the board here and
83:20 - then i will get to the live chat
83:23 - um all right so
83:26 - let's take this
83:29 - class name
83:31 - to
83:38 - so we want this on all
83:41 - we also want this on
83:48 - let's see how did we do this
83:53 - categories
84:26 - there we go
84:31 - and
84:33 - what do we got pull this item
84:38 - categories
84:39 - sucker
84:48 - um
85:00 - i'm going to take out classic mode now
85:02 - because
85:03 - i don't think i'm going to add classic
85:04 - mode
85:06 - i don't think it's necessary
85:07 - i am going to keep the help page which
85:10 - we'll do at some point
85:15 - all right i think that's it that should
85:17 - be all the places
85:26 - uh didn't work on
85:29 - this one
85:30 - i thought we got that one
85:33 - what's going on here
85:41 - ah because it's a div
85:45 - let's update our styles so we want
85:47 - drawer item p and
85:52 - we want your item
85:54 - div
86:00 - now let's give it a refresh
86:03 - no still not
86:07 - interesting
86:09 - oh actually
86:10 - oh i see so in fact drawer item did get
86:13 - placed right here on that route so
86:16 - um we didn't need droid mdiv what we
86:19 - needed was just simply
86:22 - drawer item
86:28 - there we go now it works
86:31 - okay so we got it here
86:33 - there there
86:35 - take action is the only one that's
86:36 - looking
86:38 - still the old size
86:40 - so what do we have here
86:41 - sure
86:55 - all right perhaps i did not
86:57 - get that on there
87:00 - um
87:01 - let's find where that's at
87:03 - up here a bit
87:05 - uh yeah which one was that take action
87:10 - yep i did not catch that one
87:13 - oops
87:15 - let's grab this class name
87:19 - right on
87:23 - there we are
87:25 - and that should be it
87:29 - yep all right who would have thought it
87:33 - would have been that time consuming to
87:35 - change the font size
87:37 - of these
87:39 - um
87:40 - once again
87:42 - sometimes
87:43 - react makes
87:44 - complicated things simple and simple
87:47 - things complicated
87:50 - i don't want to blame react completely
87:52 - here we were trying to do it the
87:53 - material ui way we went through all the
87:56 - steps before we decided to you know kind
87:59 - of come up with our own solution so
88:02 - um
88:03 - don't want to blame
88:06 - um
88:09 - don't want to blame uh react completely
88:12 - for that um okay so
88:17 - that actually
88:20 - that might be really worthwhile
88:24 - i mean to be honest with you like it's
88:26 - not like we we had to be geniuses to
88:29 - come up with that workaround that's like
88:31 - pretty simple it just seemed like there
88:33 - would be some other way with material ui
88:36 - i think that might be worthwhile as a
88:40 - some sort of pull request to material ui
88:42 - to
88:44 - come up with
88:47 - a better way
88:49 - a better way to do that
88:53 - i'm not sure
88:55 - but um
88:59 - at least a more consistent way right
89:01 - um
89:04 - because for most of the things there's
89:07 - a certain prop or a way that you would
89:10 - do things like that and you wouldn't go
89:11 - directly to the css and add your own
89:14 - classes
89:15 - but then in this case that seemed to be
89:17 - the only way that it would work so i
89:20 - would i think it would just be nice to
89:21 - have some consistency one way or another
89:24 - either go
89:25 - with
89:26 - everything is just
89:28 - your own css
89:30 - or
89:32 - you know uses normal css classes your
89:34 - own css or
89:36 - everything has a uh a specific prop
89:41 - in the mature ui way i mean i don't know
89:43 - does that make sense
89:45 - i kind of like to lean towards the idea
89:48 - of
89:50 - let let's just use our own css for a lot
89:53 - of it right they can they can have
89:54 - classes
89:56 - that are built in
89:57 - but then it would be very simple to just
89:59 - say okay we're going to
90:02 - be able to uh edit this in override
90:04 - classes i mean i just
90:06 - i don't know maybe this is not the case
90:08 - but it seems to me if you're building
90:09 - things with react
90:11 - you're probably at the point where you
90:13 - can certainly manage your own css
90:16 - and if you want to use what's built in
90:18 - for them wonderful but then
90:20 - make it
90:22 - the standard way to change things up
90:24 - should be
90:26 - the same way you would change things up
90:28 - in any type of website which would be
90:30 - write some css
90:33 - anyway
90:35 - i'm not involved with that project so
90:37 - maybe there is some really good reason
90:39 - why it's not like that
90:41 - that i'm overlooking it's entirely
90:43 - possible
90:44 - i don't want to be overly critical of
90:46 - the team that works on material ui it's
90:49 - certainly been very helpful for some of
90:51 - my projects so i really appreciate that
90:57 - all right
90:58 - so now
91:00 - let me answer some questions here in the
91:02 - live chat
91:06 - um
91:09 - let's see
91:23 - okay i scrolled
91:25 - back way up towards the top because
91:27 - that's where you left off at uh and we
91:30 - were talking about optimal font sizes
91:32 - john hanson says that his base font size
91:35 - is 18 pixels so
91:39 - um
91:40 - yeah i like that like i said my bass is
91:43 - usually 16 well i shouldn't say my base
91:46 - my absolute minimum is 16. so if someone
91:49 - wants to have like some small text down
91:51 - in the footer or something like that
91:53 - minimum 16
91:54 - but the normal text
91:57 - is usually more than 16 pixels
92:02 - um
92:04 - but
92:05 - i don't know if you all have run into
92:06 - this issue but i have people that i make
92:09 - the sites for here you know people in
92:10 - other departments they seem to be
92:12 - opposed to this larger font size and
92:15 - they want it smaller the reason being
92:17 - they want to fit in as much text as
92:19 - possible
92:20 - and
92:22 - i've gotten
92:24 - some pushback on the larger font size
92:26 - and i mean i
92:27 - just explain every time that this is
92:29 - much more readable i don't know what
92:31 - experience you've had with your clients
92:34 - uh you know with things like that but
92:36 - um also i usually explain that
92:39 - users aren't likely to read all that
92:41 - text if even if you make the text small
92:44 - and fit in a bunch of stuff odds are
92:46 - nobody's going to read all that it's
92:47 - much better to just get to the point
92:49 - only put what's really important in
92:51 - there and then have it readable
92:53 - then people may actually read it all
92:59 - so i don't know i mean i've seen some
93:01 - studies and statistics that
93:04 - um seem to suggest that that that i am
93:06 - taking the correct approach to it but i
93:08 - would like to hear what you all think
93:10 - about it as well
93:11 - um i'm always open to changing up the
93:13 - way i do things if there is some proof
93:16 - that there's a better way
93:24 - rook says a lot of people just do
93:26 - control plus on all sites to read better
93:28 - yeah that's
93:29 - i i often do control plus
93:32 - depending on the site and certainly
93:35 - while i'm streaming i control plus
93:36 - everything otherwise you'll never be
93:38 - able to see it
93:42 - but the thing that i worry about is
93:46 - some users are just very very averse to
93:49 - any type of technology
93:51 - and
93:54 - i don't know that they necessarily even
93:55 - know that they can control plus and
93:58 - increase the size
94:00 - so
94:02 - i i am very much opposed to the mindset
94:05 - of thinking as your users as
94:08 - as less intelligent
94:10 - i i don't like that at all
94:12 - i think we should respect our users and
94:14 - try to make things as easy as possible
94:17 - so i like the idea of assuming that if
94:20 - there's some easy work around the user
94:23 - may not know about it
94:24 - because they're not really into
94:26 - computers
94:27 - i think that's perfectly acceptable to
94:29 - assume that
94:31 - um so anyway i just
94:34 - i like i i would like to make that
94:36 - distinction that assuming that a user
94:38 - doesn't know how to control plus is not
94:39 - the same thing as assuming that they're
94:41 - not intelligent
94:42 - uh they could be very intelligent and
94:45 - just have invested their time in
94:47 - learning other things not related to a
94:50 - browser
94:51 - so
94:52 - anyway that's kind of like it always
94:54 - bugs me gets on my nerves when i hear
94:55 - people talk about users or clients in a
94:58 - derogatory way like they don't know what
95:00 - they're doing i mean i'm i'm frustrated
95:02 - with clients and users frequently but
95:06 - no need to
95:08 - belittle them in any way
95:22 - okay
95:28 - i'm reading down through
95:30 - um if if you can't if you can see the
95:32 - live chat you know what i'm talking
95:33 - about but if you can't see the live chat
95:35 - i sort of mentioned so harshit who i
95:37 - mentioned frequently because he's helped
95:39 - out
95:40 - so much with the projects
95:42 - when uh
95:44 - sorry i need
95:47 - ah some of my throat
95:53 - okay
95:55 - uh logged out of salesforce okay
95:57 - um
95:59 - when i'm coding and harsha's trying to
96:01 - get my attention it's just like all caps
96:04 - so they're like sections within the live
96:06 - chat where it's just
96:08 - no with like a ton of o's all caps and
96:15 - so
96:16 - it's it's amusing i i know sometimes i
96:19 - get into what i'm doing and i forget to
96:20 - check uh the live chat so
96:24 - um
96:26 - sorry about that harshit i appreciate
96:28 - you not giving up on me and continuing
96:30 - to try to get my attention
96:54 - uh okay good there's a good question
96:56 - here so um not sure so uh yashuu asked
96:59 - this not sure if you're still with us
97:01 - yeshu um but
97:04 - the question is
97:05 - if we have a separate language for
97:07 - styling why do you use css in javascript
97:12 - that's that's a very good question and a
97:14 - legit question i can totally understand
97:16 - that um
97:20 - css and javascript is weird
97:23 - it's not necessary in react but i
97:25 - believe i mentioned this earlier but
97:28 - i'm going to say it again um because i
97:30 - think this this is to me
97:33 - the answer to why you would do css and
97:35 - javascript
97:36 - um
97:38 - to have a self-contained react component
97:41 - so that number one you could take that
97:43 - component and use it elsewhere and you'd
97:45 - have everything you need just plug in
97:47 - your data
97:48 - and you're good
97:50 - number two it also makes it super easy
97:53 - for someone to look at your code look at
97:55 - your component and see the big the whole
97:57 - picture
97:58 - of how everything's gonna look
98:01 - when you have
98:03 - your styles in your markup
98:06 - all right there and your logic because
98:08 - javascript
98:10 - all right there
98:12 - so that's the benefit of it
98:14 - i will say there's other potential
98:16 - benefits depending on
98:18 - exactly how you're putting the css into
98:21 - your component
98:22 - so i know on react native
98:25 - um
98:27 - when i use
98:28 - create react native app there was
98:30 - something
98:31 - i believe it was built in to create
98:33 - react native app i don't know that it's
98:35 - built in
98:36 - to react native itself i'm not sure
98:40 - um
98:41 - but there was something that if you used
98:44 - if you put the css in a certain way
98:49 - within
98:51 - your react component
98:53 - it actually gave you a performance a
98:55 - slight performance benefit because of
98:58 - behind the scenes how those eventually
99:00 - got applied
99:02 - so
99:03 - i don't know enough about how that
99:05 - javascript gets transferred and becomes
99:08 - java or swift or whatever
99:11 - to know exactly why there's a
99:13 - performance increase
99:14 - but
99:15 - i do know from from that udacity
99:17 - nanodegree that i did that
99:21 - there is a performance increase so
99:24 - i don't know if there's any similar
99:26 - thing with regular react that could be
99:28 - done but
99:30 - it's potentially i mean it's possible
99:39 - okay john hanson says a nice thing is to
99:41 - style the text to flow in columns as
99:44 - when the width of a single card view
99:46 - gets too wide it's harder to read
99:48 - oh
99:51 - i have never thought of that
99:54 - that's that's interesting
100:00 - that's really interesting
100:03 - i'm going to keep that in mind
100:07 - i'm not sure if i want to change things
100:09 - up in this project because
100:12 - the users already have an expectation
100:18 - but that's really interesting uh we do
100:20 - have some upcoming projects within the
100:22 - next few months that that may come in
100:25 - handy
100:26 - i really like that idea
100:38 - let's see
100:41 - okay yes you also asked why don't you
100:44 - use sas or scss over css
100:48 - to be honest with you i much prefer scss
100:52 - uh i actually really like sas
100:54 - um you know plain sass
100:57 - but um the only reason i don't use it is
101:00 - because you can't copy in normal css and
101:03 - have it work if it weren't for that i'd
101:04 - be using that because i i really like
101:06 - just the indentation style you can
101:10 - that's the fastest i can write
101:13 - css is by using sas
101:16 - but anyway i end up using scss
101:19 - because it kind of gives you a little
101:21 - bit of both worlds the css and the fcss
101:25 - or and the sas
101:27 - this is tongue twister trying to get all
101:29 - those letters off anyway
101:32 - um
101:33 - i do love to use it we just haven't set
101:35 - it up on this project to use it but in
101:37 - previous project we we have
101:40 - um so
101:43 - whenever possible i do like to use sas
101:46 - instead if you're not familiar with sas
101:49 - or scss
101:51 - it's a css preprocessor it lets you do
101:53 - some cool things with nesting
101:56 - of
101:58 - css
101:59 - so
102:01 - i guess a good example
102:04 - if i have a good example here
102:09 - so instead of doing this
102:12 - where i have this comma so draw item p
102:14 - and then draw item i could potentially
102:17 - do something like this
102:20 - no it wouldn't
102:21 - that's not a good example never mind uh
102:24 - media prints
102:30 - shoot i don't have a good example here
102:32 - i'll just have to make one up so in
102:35 - regular css we could do something like
102:38 - this or i would say
102:40 - um
102:43 - let's just go
102:44 - body
102:45 - uh a for all the a tags and then i would
102:49 - put a css
102:51 - something
102:53 - and then
102:59 - so let's just put that in there just so
103:00 - we have something and then i i would
103:03 - need to do in css
103:07 - let's say i wanted to do body
103:09 - p
103:10 - right
103:11 - so instead of this
103:14 - with
103:15 - sass
103:16 - i could write
103:18 - body
103:22 - a
103:28 - uh um
103:29 - obviously this something is not real css
103:32 - so if you're new to css please don't try
103:34 - to type this in it won't work
103:36 - um and then you could write p
103:42 - right
103:43 - and then
103:44 - whenever it was all processed um
103:48 - it would end up looking like this
103:52 - but you saved yourself a little bit
103:55 - i'm being able to do this so it doesn't
103:57 - really seem like as much of a savings
103:59 - this probably takes up the same amount
104:00 - of lines
104:02 - but it can be very useful if you get a
104:05 - little bit deeper and generally you
104:06 - don't want to nest too deeply
104:08 - um maybe just three levels or so
104:11 - uh but
104:13 - you could do this so that's the very
104:15 - basic thing you can also do things like
104:17 - have variables so you could make a sas
104:20 - variable
104:22 - and then
104:24 - so let's say we made this a color
104:26 - variable then throughout everything we
104:28 - could just say like this is our primary
104:30 - color
104:31 - we defined it in one place if later on
104:33 - we wanted to change our color scheme all
104:35 - we'd have to do is change that variable
104:37 - and it would change throughout so
104:38 - there's really cool things there's other
104:40 - things you do with like calculations
104:42 - it's almost like a blend of
104:44 - a programming language and css
104:48 - so anyway that's
104:50 - a brief overview of uh sas
104:53 - or css
104:55 - scss i mean so this is scss syntax
104:59 - there's another syntax called sas
105:05 - that is is different
105:07 - but you can do a lot of the same things
105:09 - with it
105:16 - okay harsha so harshit before the stream
105:18 - sent me a coupon for digitalocean
105:20 - um
105:21 - harshit i tried to use the coupon code
105:24 - and it told me that it wasn't valid so
105:26 - it ended up not working for me so i
105:28 - don't know what the problem is but um
105:30 - thank you for sending that i that was
105:32 - that was really nice of you
105:36 - uh joseph uh whittington asked so anyone
105:39 - can join this project
105:41 - definitely
105:42 - anybody is welcome to submit a pull
105:44 - request to this project or point out any
105:46 - issues or anything like that
105:48 - um
105:49 - of course i review all pull requests i
105:51 - may or may not pull it into the project
105:53 - but i i do my best to pull in everything
105:55 - that i can so i may ask you to adjust
105:58 - some things first and then i'll pull it
106:01 - in
106:02 - but
106:04 - i welcome anybody especially people who
106:06 - are new if you'd like to get some
106:07 - experience with pull requests i know
106:09 - sometimes it can be intimidating to try
106:11 - to get a pull request submitted to a
106:13 - larger repository and not everybody is
106:16 - friendly whenever you submit a pull
106:17 - request sometimes
106:19 - people are frustrated having a bad day
106:21 - and you know i've had that happen before
106:23 - you submit a pull request and the
106:25 - maintainers just aren't very polite
106:28 - uh if let's say it wasn't exactly what
106:30 - they wanted
106:32 - so i'm not going to do that to anybody
106:35 - so if you're a little bit apprehensive
106:37 - about submitting pull requests this is a
106:39 - great place to get a start i'll do my
106:42 - best to
106:43 - uh to try to work with you and and get
106:45 - your pull request
106:48 - merged in
106:58 - let's see joseph also says how difficult
107:01 - do you think it would be trying to learn
107:02 - react coming from angular 4 background
107:06 - um i don't know myself
107:08 - because i'm not super familiar with
107:10 - angular 4. i only worked with uh the
107:13 - very you know first version of angular
107:16 - uh you know back in the day so
107:18 - i don't know for sure but i would
107:20 - imagine if someone had the intelligence
107:22 - to be able to learn angular 4 they
107:25 - certainly have the intelligence to learn
107:26 - react it may be um
107:29 - you have to change how you think about
107:31 - certain things
107:32 - but i would have
107:34 - no doubt there's no doubt in my mind
107:36 - that somebody is certainly capable of
107:38 - learning react if they know angular
108:01 - um
108:02 - yes you ask is it worth it to use
108:04 - node.js against gulp
108:07 - um
108:09 - i'm i'm not entirely sure
108:15 - i can scope
108:19 - all right so i'm not entirely sure what
108:20 - you're asking i'm gonna um
108:23 - rephrase the question and see if this is
108:25 - really what you're asking please correct
108:26 - me if i'm wrong um but are you saying to
108:29 - use like npm scripts instead of
108:32 - uh gulp
108:34 - um so it would just be kind of directly
108:36 - using the npm scripts that you that come
108:39 - with node.js
108:43 - is it worth it
108:49 - i don't it depends
108:51 - if you're really used to using gulp and
108:53 - you have a nice setup and you really
108:54 - like it
108:57 - i
108:58 - you could certainly do fine just
109:00 - sticking with that
109:02 - uh if you're really worried about um
109:06 - the speed and up you know optimization
109:08 - of your your
109:10 - development process your build process
109:13 - i'd say give npm
109:15 - scripts a try
109:17 - they're pretty straightforward
109:19 - um
109:20 - i've always kind of wanted to set up npm
109:22 - scripts i have in small projects before
109:25 - but i always just kept going back to my
109:27 - gulp setup because
109:29 - it was it already worked um
109:32 - so
109:35 - i don't know like i said it does kind of
109:37 - depend
109:40 - on you know how many if you plan on like
109:42 - reusing it for a ton of different
109:44 - projects then yeah it's it's definitely
109:46 - worth it it'll save you time you know
109:49 - potentially in the long run
109:51 - um but
109:54 - i i think that's more of a personal
109:55 - choice that in terms of the end result
109:59 - you can probably get the same end result
110:02 - with npm scripts or with gold
110:10 - arson says you know you're a number
110:11 - three and contributors uh for the
110:14 - bulletin i didn't realize i had fallen
110:16 - to number three so
110:18 - uh thanks for letting me know
110:20 - um
110:21 - yeah so
110:23 - i really only work on the bulletin
110:25 - whenever i'm streaming
110:28 - uh so
110:30 - i have other projects that i need to
110:32 - work on
110:33 - when i'm not streaming so
110:36 - that's why my contributions are low
110:41 - i appreciate everybody else contributing
110:43 - though it's
110:44 - it's really amazing
110:50 - all right cool john hanson earlier i was
110:52 - talking about the optimal uh amount of
110:54 - words per line for for readability and
110:57 - john hanson says it's 80 characters per
111:01 - line
111:02 - so uh not not where i'm sorry that i uh
111:05 - mistakenly said words you're right john
111:07 - it is characters um so 80 characters is
111:11 - you know give or take if you but that's
111:14 - the right spot that you want to be in so
111:18 - um
111:19 - if you if you try for that
111:21 - then it's
111:23 - more likely that users will read your
111:26 - content
111:30 - joseph asks does google have a style
111:33 - guide for react
111:35 - um not that i know of
111:38 - not that i know of so
111:40 - that actually might be good to look into
111:44 - perhaps instead of creating our own
111:46 - style guide from scratch for our react
111:48 - projects we could
111:50 - see if there's a style guide out there
111:52 - that already kind of fits with what
111:54 - we're used to using
111:56 - potentially you can adapt it if we want
111:57 - to but if anybody knows of a good react
112:00 - style guide please
112:02 - please let me know
112:03 - and i could check it out
112:46 - all right
112:48 - all right so i think i'm
112:51 - almost to the bottom of the live chat so
112:53 - if you have a question you haven't uh
112:55 - put it in there yet in the chat please
112:57 - put it in there now
112:58 - because i'm nearing the end
113:16 - okay humber umberto says uh looking for
113:20 - sis admin about to go solo
113:24 - a server boss
113:26 - uh
113:28 - so moving from iis uh from a 2008
113:32 - machine to a
113:34 - 2012 machine
113:36 - uh with a separate web ser websphere
113:39 - server
113:40 - okay so i don't know anything about iis
113:44 - uh servers so i shouldn't say that i
113:46 - know very little about iis servers so
113:48 - i've worked with them
113:50 - i've never worked with them directly
113:52 - only kind of in a
113:55 - research type of way of uh helping out
113:58 - other people so
114:00 - if anybody else
114:02 - can help out with that please let
114:04 - umberto know
114:18 - john hanson says
114:20 - react is so complex to get keyboard
114:22 - events like arrow left and arrow right
114:24 - to iterate through an array of images as
114:26 - in a slideshow i'm about to give up on
114:28 - that ui function
114:31 - interesting i actually have never
114:34 - done that i don't think i've ever
114:35 - attempted to get
114:37 - arrow keyboard events to work with react
114:40 - so um i'll take your word for it that
114:42 - it's a pain
114:45 - actually i
114:48 - let me tell you about a project i've
114:49 - been discussing with one of my
114:51 - co-workers here because it's really fun
114:54 - and you all please let me know if any of
114:55 - you are interested in maybe helping out
114:57 - with it so this would be a longer term
114:59 - project
115:00 - uh but
115:02 - we thought it would be really cool
115:05 - for um students who are interested in
115:07 - the university to be able to
115:10 - get kind of a virtual tour of campus but
115:12 - it would not be like a normal virtual
115:14 - tour the idea is to create a game an
115:18 - html game right that can play in the
115:20 - browser or potentially be ported to
115:22 - mobile on react native
115:24 - uh but the idea that it would be like an
115:26 - old school 8-bit game right
115:29 - so possibly like top-down view like the
115:32 - original zelda game
115:33 - and uh we would recreate things on
115:36 - campus
115:38 - and they would have a little guy that
115:39 - could walk around and see everything
115:43 - so just a basic thing but but we thought
115:46 - uh it would be cool to do it in react
115:48 - because
115:50 - my colleague really wants to learn react
115:53 - so he needs to get some projects using
115:55 - react like that so he would actually be
115:58 - more of the lead but i could help out
116:00 - work with it too and we could
116:01 - potentially work on it during the stream
116:04 - um
116:06 - i don't know i thought it would be fun
116:08 - to do i've always kind of wanted to try
116:10 - to do a
116:12 - javascript game i think my kids would
116:15 - really enjoy something like that so
116:17 - anyway if anybody thinks that sounds
116:19 - cool or interesting let me know then
116:21 - maybe i can move forward with that
116:23 - project
116:24 - um but if nobody's interested then i'm
116:26 - not gonna you know try to put it on the
116:28 - stream i'd rather do some things that
116:30 - that you are more interested in
116:32 - uh you know if possible so anyway
116:36 - i just thought i'd bring it up
116:49 - let's see
116:52 - harshit has reminded me to commit this
116:54 - did i
116:58 - um let's see get
117:15 - thanks for reminding me uh i don't want
117:18 - you all if you if you want to
117:20 - clone the repo or you know or fork i
117:23 - don't want you to have the uh
117:26 - older versions unless you have the
117:27 - latest one
117:31 - great okay uh so inn is here hey anna
117:34 - how's it going
117:35 - um
117:36 - and it says what accomplishment are you
117:38 - most proud of
117:41 - well
117:43 - aside from all my kids and uh getting
117:46 - married to my wife
117:48 - um
117:50 - in terms of
117:53 - what i do with
117:55 - you know with web development
118:01 - hmm
118:05 - i want to say like whatever my latest
118:07 - thing i come out with is always what i'm
118:09 - most proud of right so
118:12 - i've been really proud of like the
118:14 - resource center i was really proud of
118:16 - when i first made it
118:18 - and um i got a lot of great positive
118:20 - feedback um
118:23 - but then now when i look at the original
118:25 - resource center that i made i just see
118:27 - like
118:29 - uh all that mess of code so
118:33 - it's kind of a hard question to answer
118:34 - with projects like this
118:36 - you know like we do because
118:38 - they get old you know and you can see
118:40 - the mistakes as they get old so it's
118:42 - hard to stay as proud of them as as you
118:45 - know i was
118:47 - initially
118:48 - um
118:53 - but i would i would say
118:58 - i i did the first react site that i did
119:01 - for a paying client so it was on the
119:02 - side it wasn't for the university
119:05 - uh that was the first site i think that
119:07 - i ever
119:09 - that i ever launched that i didn't react
119:11 - i used next.js for it server-side
119:14 - rendering i was pulling in data from the
119:16 - wordpress api
119:17 - it was very similar to what we did with
119:19 - catechetical institute
119:21 - i was really proud of that i worked on
119:24 - it
119:25 - just so much
119:27 - that was one of my biggest
119:29 - projects for a client
119:34 - that was
119:36 - that that may have been the project that
119:38 - i'm most proud of currently
119:40 - uh it was great and then it provided a
119:43 - lot of you know extra income for my
119:45 - family
119:46 - uh i got to uh use a lot of that money
119:50 - to um
119:51 - i bring my wife on a trip that i was i
119:53 - was going to a conference
119:55 - and it was our 10-year anniversary so we
119:57 - were able to
119:58 - um
119:59 - pretend like we were rich for a couple
120:01 - of days and go to really nice
120:03 - restaurants and things so
120:06 - uh she really really
120:07 - liked that so that was cool that that
120:09 - product the project itself i learned so
120:13 - much on and i worked through so many
120:15 - things that just made me want to like
120:17 - quit being a web developer altogether
120:19 - and just move to a cabin with no
120:20 - electricity
120:22 - um but i worked through it all
120:24 - and uh so
120:27 - i was just so relieved and excited and
120:29 - then the the result you know the the
120:32 - reward for the work was was awesome and
120:35 - uh let me do some nice things for my
120:37 - family too so anyway sorry i went on a
120:40 - little bit about that but i never really
120:42 - thought of it until you asked the
120:44 - question so i
120:45 - i
120:47 - i wanted to give you a good answer
120:50 - but anyway that's that's my most
120:53 - the accomplishment that i am most proud
120:55 - of
120:57 - at least from what i can think up right
120:58 - now on the spot
121:06 - okay harshit mentions that stylus is
121:09 - even faster to write than sass
121:12 - interesting i i never tried to use
121:13 - stylus
121:15 - um it seemed to me stylus was always
121:17 - like um not as widely used um
121:22 - on on projects than sas that seemed to
121:25 - be the front runner
121:26 - has anyone else used stylus what are
121:28 - your thoughts on it
121:37 - john hanson says in the react project
121:39 - i'm doing i did switch from
121:41 - i switched to scss from sas you're right
121:46 - so easy to cut and paste
121:48 - style components work very much like
121:50 - scss and js uh strings
121:53 - um
121:55 - as in like nested so awesome
121:58 - yeah so i mean
121:59 - like it's just um
122:03 - it's nice to have the freedom to pull in
122:06 - css from previous projects or from other
122:09 - frameworks and things and just have it
122:10 - work and not have to convert it
122:13 - um so yeah s that that outweighs the
122:17 - ease of typing
122:19 - in my mind
122:20 - uh and that pushed me to use scss
122:23 - instead of sas so
122:28 - let's see
122:34 - harsh it says i like the the and the
122:36 - ampersand the most in sas
122:39 - cool
122:40 - yeah sas has some really cool features
122:42 - like i only i i don't even use most of
122:45 - the cool features really i i don't think
122:47 - i utilize it as much as i could
122:50 - um
122:51 - but it's really cool
122:57 - uh rook says would using some oh i'm
123:00 - sorry i skipped the question um
123:02 - ein
123:03 - ein bischen
123:06 - uh sorry if i'm mispronouncing that says
123:08 - can you tell me the advantage of using
123:11 - graphql or why you would need it
123:13 - okay so for graphql
123:16 - in previous projects we used the
123:18 - wordpress api
123:20 - which is a rest api and that worked well
123:23 - the problem was
123:26 - sometimes we had we had to choose there
123:28 - was a trade-off we could either make
123:31 - multiple api calls and get exactly the
123:33 - data that we wanted with those api calls
123:36 - or
123:37 - we could make one api call and get a lot
123:40 - like more data than we needed
123:43 - with graphql you don't have that problem
123:45 - in graphql there are not preset
123:48 - endpoints that you just get all the data
123:50 - from
123:51 - you tell the api exactly what you need
123:55 - and it gives you just that data that you
123:57 - need
123:58 - so
123:59 - you can be more efficient in terms of
124:01 - both the amount of api calls you make
124:03 - and the amount of data sent
124:05 - on those calls
124:07 - so that's why we switched up in this
124:09 - project to using graphql
124:12 - i do think that it is better than a
124:15 - normal rest api
124:18 - i suspect that
124:20 - in time
124:22 - it will kind of overtake the rest apis
124:25 - um
124:27 - i mean clearly i think it is it is
124:29 - better uh so
124:33 - it's i it's just a matter of time before
124:35 - more people adopt it
124:38 - okay so rook's question is would using
124:40 - something like normalize css be
124:42 - beneficial to this project might just
124:44 - try and do that
124:46 - to mess around with the get things i
124:48 - learned
124:49 - um
124:58 - i don't know
125:01 - i'm not sure if normalized css would be
125:04 - beneficial or if
125:09 - essentially maybe uh if materialize or
125:13 - i'm sorry material ui is already taking
125:16 - care of some of that stuff
125:18 - it does anybody know or has worked with
125:21 - material ui to know whether or not that
125:23 - is
125:24 - kind of taken care of
125:26 - uh i'm not opposed to bringing into the
125:28 - project if there's some benefit to it uh
125:31 - but if it wouldn't be necessary then
125:33 - it'd probably be better to not have it
125:36 - in the project
125:38 - so i don't know offhand i'd have to you
125:40 - know check out
125:42 - check that out maybe
125:45 - somebody's probably had a similar uh
125:49 - thought before so i'm sure that the
125:51 - answers out there
125:55 - let's see
125:56 - harshit says you should upgrade
126:00 - from node 8.5 to node 8.9 lts
126:03 - yeah maybe i'll upgrade it um at some
126:06 - point
126:07 - i really
126:09 - i really want to get that um
126:12 - that application that we were working on
126:14 - um the styles for that done that
126:16 - salesforce one
126:18 - so
126:20 - i'm probably going to take the rest of
126:21 - the day and and really work on that
126:24 - i did have some positive feedback from
126:27 - some people higher up at the university
126:29 - on it but they did notice some of those
126:30 - things that that we had noticed that i
126:32 - didn't complete yet so i told him i was
126:35 - working on it so i
126:36 - i'd really kind of like to get it done
126:38 - as soon as possible but yeah i would
126:40 - like to stay up to date on that so
126:42 - um
126:43 - i will try to get that done
126:46 - soon
126:47 - okay harshit says the airbnb guide
126:50 - is the best so we were talking about
126:53 - style guys
126:54 - it forces you to write good code if you
126:57 - have lansing in editor cool rook also
127:00 - agrees about the airbnb guide and um
127:04 - uh it says with minimal adjustment you
127:06 - can make it fit your preferences
127:09 - okay i'm gonna have to check that out
127:11 - the the using the airbnb guide
127:13 - um yeah so there are some adjustments
127:16 - that i would like to make depending on
127:18 - what's already in the guide i i tell you
127:20 - truth i looked at it
127:23 - a long time ago i don't remember
127:25 - anything from it
127:26 - um so i'm gonna have to look at it again
127:30 - but yeah we should we definitely should
127:32 - that would be a good practice
127:34 - for people to get used to using a guide
127:35 - because potentially
127:38 - you might need to use it
127:40 - i guess i get a decent amount of people
127:42 - who are looking for work
127:44 - and they're in here just you know trying
127:45 - to get some experience submit a few pull
127:47 - requests
127:48 - so it'd be good for them to get used to
127:50 - that because they may need to use it on
127:52 - their job so that's a great reason and
127:54 - then just in general it would help keep
127:56 - our cl our code
127:58 - better and i like harshet's idea they're
128:00 - saying it forces you to write good code
128:05 - um
128:06 - let's see
128:08 - ein ambition says uh games are too much
128:12 - work
128:14 - yeah um
128:15 - i agree with you there this would
128:17 - definitely be if we were to do a game
128:20 - it would be a long-term project i'm
128:21 - talking like maybe we want to have it
128:23 - done by next year around this time
128:26 - so we'd certainly have a lot of time to
128:28 - work on it
128:31 - um
128:34 - so yeah uh
128:36 - we'll see oh it's not
128:38 - i'm not convinced yet that we will do it
128:42 - just a possibility like i said i think
128:44 - it would be really cool
128:46 - for the students
128:48 - um and it might be fun for us to make
128:51 - uh so
128:52 - anyway i appreciate the input though
128:55 - um
128:57 - so anyway if anybody else has any
128:58 - opinions on that please let me know
129:01 - um harshad says we might use canvas yeah
129:04 - um oh harsha's asking me so do do you
129:07 - what do you want to be done this weekend
129:09 - in this project
129:10 - um okay so in the bulletin project
129:14 - let's see what do we need done still
129:19 - i just saw something
129:24 - okay
129:25 - here's something that
129:27 - should be done but it's it's on the wish
129:30 - list so here's something that doesn't
129:31 - absolutely need to be done but it would
129:32 - be awesome if it could get done
129:35 - this is something that i wanted to do
129:36 - with the bulletin since i first launched
129:38 - it last over a year ago
129:40 - um
129:42 - i think it would be really cool if
129:45 - so right we already have a user we have
129:47 - their email address right so it would be
129:50 - awesome if based on their email address
129:53 - we could display
129:56 - like potentially up in the corner have a
129:58 - little circular
130:00 - icon with potentially maybe just their
130:03 - initials
130:04 - or if they happen to have their
130:08 - email address linked up with something
130:11 - like gravatar we could pull in their
130:13 - data from there
130:14 - um
130:15 - display their picture
130:18 - i'm thinking like
130:20 - you know how google does when you're
130:21 - logged into google some of google stuff
130:23 - you have your picture there and then
130:24 - when they click on that
130:26 - they could bring up let's say their
130:28 - profile in their profile they could if
130:30 - they wanted to
130:32 - add in
130:33 - their preferred name
130:35 - and potentially their preferences
130:38 - so whether or not they want by default
130:41 - the grid layout or the list layout
130:44 - um
130:46 - if they would like
130:50 - trying to think i i would love to have a
130:52 - way to personalize like what they see
130:54 - i'd i'll still want control of like the
130:57 - very top area in case there's some
130:59 - emergency announcement that we need to
131:00 - put there but um
131:03 - maybe what categories they like to see
131:06 - and
131:11 - yeah
131:13 - i think
131:16 - you know there's so many things we could
131:18 - do with that like potentially a history
131:21 - of all the bulletin announcements that
131:23 - they've submitted
131:25 - uh it would be cool to be able to see
131:26 - that so
131:30 - certainly that that's definitely on the
131:32 - wish list it may be complex if you're
131:35 - interested in taking a shot at something
131:37 - like that
131:38 - feel free but otherwise
131:41 - there's really only some small things
131:43 - that need change and it's mainly um
131:47 - just like ui stuff just kind of the look
131:50 - style changes
131:52 - so
131:55 - i don't know that's all i have and i'm
131:57 - definitely open to suggestions of what
131:59 - other what functionality should this
132:01 - have is there something obvious that you
132:03 - would expect it to have that it doesn't
132:05 - have something i'm missing
132:07 - uh or maybe something less obvious
132:09 - that's just cool
132:10 - just to reiterate for those of you who
132:13 - who haven't heard this already the goal
132:15 - of this is internal bulletin so it's for
132:18 - university employees only
132:21 - there they just get announcements about
132:24 - schedules so any events that are
132:26 - happening on campus any announcements
132:29 - about uh holidays coming up or new
132:33 - employees
132:34 - or
132:35 - if an employee had a baby
132:37 - um or if there was um and one of the
132:40 - employees relatives passed away
132:43 - uh you know they'll put like funeral
132:45 - arrangement stuff in there
132:47 - announcements from the president
132:49 - uh of the university so things like that
132:52 - go in here
132:55 - so
132:55 - given that given what the audience is
132:58 - and the content is
133:01 - i'm open to suggestions so
133:04 - um
133:07 - anyway so i know that's not like super
133:08 - specific harsh it uh so it may be
133:11 - uh
133:13 - at this point if anybody wants to
133:14 - contribute to this project it's it's
133:16 - kind of like
133:18 - imagination time right uh i'm open to
133:22 - other features
133:25 - all right anna says thanks for answering
133:27 - oh you're welcome no problem that was a
133:30 - really fun question so i i like that
133:32 - question thanks for asking it
133:36 - okay so tara incognita
133:38 - says
133:40 - i'm not sure for my current skill am i
133:43 - really able to work efficiently on the
133:46 - oh i'm sorry i think i read that wrong
133:48 - i'm not sure from my current skill
133:52 - i'm not sure that i'm really able to
133:53 - work efficiently on the game project
133:56 - from my current skill i just rephrased
133:58 - that a bit
133:59 - it was easier for me to say
134:01 - um but on a on details of that project
134:05 - uh might make me confirmed about
134:07 - contributing on um okay so
134:11 - yeah we can
134:14 - if there's some interest in the project
134:16 - i could get more so like some detailed
134:18 - stuff on exactly
134:19 - how we would be doing it and
134:22 - um
134:23 - so
134:25 - yeah i'll have to think about that maybe
134:26 - next week sometime i can devote a little
134:28 - bit of time in the question and answer
134:30 - to really getting in more details of
134:32 - what we would want
134:36 - uh harshad said stylus is great it even
134:38 - gets rid of
134:40 - uh
134:41 - colons and has many great mix-ins built
134:44 - in that's cool
134:48 - oh our says view beautify is the
134:51 - material design framework for vue in its
134:53 - building stylus that's cool
134:55 - hardship also says material ui should
134:58 - have a reset like like normalize okay
135:00 - cool
135:01 - so that's good to know
135:03 - um
135:06 - let's see
135:10 - ein bishon says there's no guide that
135:12 - allows not ending in semicolons
135:15 - oh man
135:17 - that's gonna be a problem then um
135:20 - i've gotten so used to not putting
135:21 - semicolons in
135:23 - uh rook says you can modify the rule
135:25 - well that's good
135:27 - that's good
135:28 - um
135:31 - definitely would um
135:34 - if we can change that then i'm i'm in
135:37 - yeah
135:40 - let's see
135:44 - uh i'm mission says how would you store
135:47 - users history on the word on the
135:49 - wordpress server or locally
135:51 - um
135:52 - okay so
135:54 - i'm thinking uh let me let me show you
135:58 - where's my code so let's check out our
136:00 - server for a second here
136:08 - so
136:11 - so like we've already got this you know
136:14 -  store going right this is mongodb
136:17 - so i'm thinking
136:19 - we would store the data there
136:22 - uh and since we're already checking it
136:24 - to make sure that the user's like really
136:27 - uh supposed to be there logged in
136:30 - it shouldn't be too much more of a
136:32 - stretch to grab
136:34 - all the user data
136:36 - at the same time
136:39 - so that was my thought if i were going
136:41 - to do it
136:42 - that's where i would start out at is
136:45 - well let's store all the user data in
136:46 - the same place
136:49 - and then
136:50 - pull it all
136:52 - from there
136:54 - so
136:55 - if there are better ways to do that i'm
136:57 - definitely open to that but that was
136:59 - those were were my thoughts
137:02 - and we certainly could store things in
137:04 - local storage
137:06 - um
137:08 - and then just update as needed
137:10 - i think that's kind of a good good
137:12 - practice as well
137:17 - let's see
137:18 - uh sat tinder says don't be lazy because
137:23 - of a few viewers bro
137:25 - um
137:27 - i'm not exactly sure what that was in
137:29 - response that was at 3 45.
137:33 - so that's a couple minutes ago
137:35 - um i don't remember what i was talking
137:37 - about so anyway so tinder if you could
137:40 - uh let me know what that was what i was
137:42 - talking about
137:45 - let me scroll back and see if i can
137:48 - remember
137:58 - uh fabio says
138:00 - um awesome hi from brazil thanks for
138:03 - sharing the gold with us i'm trying to
138:05 - follow the subject i'm a back end
138:06 - developer back in only developer try to
138:08 - use react in both sides front and back
138:10 - is my new challenge awesome that's
138:13 - really cool i i really enjoy uh talking
138:16 - with people that
138:17 - um
138:19 - can't come from back end so like i'm i'm
138:22 - coming from front end and trying to
138:23 - learn more back end
138:25 - uh and i think it's just an interesting
138:27 - flow of
138:29 - realizing like what's
138:32 - what's hard about front end for people
138:34 - who are normally backend and coming into
138:36 - it
138:38 - that's kind of cool uh and then like
138:40 - what what strengths and weaknesses do
138:42 - people bring from both sides so anyway
138:44 - i'm glad to have you here please feel
138:46 - free to add your your input and your
138:48 - suggestions
138:50 - i'm lacking in the back end experience
138:52 - i'm getting much better than i was with
138:54 - back end even a few months ago but
138:56 - that's certainly not i wouldn't call
138:57 - that my strong point now much more front
138:59 - end oriented so i definitely welcome you
139:02 - know your expertise
139:04 - uh so thanks for uh thanks for saying hi
139:06 - in the live chat
139:08 - uh ryan says good afternoon hey how's it
139:10 - going
139:12 - um
139:13 - let's see harsha says i'm back my laptop
139:16 - battery died oh okay cool
139:19 - uh glad you're back
139:21 - and
139:22 - let's see
139:27 - oh okay you picked it up on the phone
139:28 - harshit says okay so horseshit learn
139:31 - back in first as well
139:32 - that explains why uh your expertise then
139:35 - with with back end so that's awesome
139:37 - [Music]
139:39 - yeah i like i said i it's always crazy
139:42 - like there are things that front end
139:43 - people seem
139:45 - are like oh that's so easy
139:47 - but then you talk to a back-end person
139:49 - and they're like no way i don't mess
139:51 - with that
139:52 - and then vice versa there's stuff that
139:53 - to a background person a back-end person
139:55 - is like oh yeah no problem but a
139:57 - front-end person like me will just stare
139:59 - at that like i have no idea what's going
140:01 - on here so um
140:04 - anyway it's cool i think it's great to
140:05 - have people of all uh different
140:08 - backgrounds and skill sets it just makes
140:10 - our projects so much better and being
140:12 - able to share all that knowledge is
140:14 - it's really cool i don't know of
140:16 - anywhere else
140:18 - where this kind of thing is happening
140:19 - where we have such a large diverse
140:22 - community
140:23 - all working on projects together
140:26 - i know it happens on github but like in
140:28 - terms of the live stream and being able
140:31 - live to to work with each other on this
140:34 - i haven't seen anything like it before i
140:35 - think it's awesome
140:42 - and see ryan says i'm learning how to do
140:44 - react from working with php in my sql uh
140:47 - development on a on a programming career
140:50 - okay cool
140:51 - i'm really glad that we have uh someone
140:54 - with php my sql knowledge because we're
140:56 - definitely we're running wordpress
140:58 - um for for several different sites
141:01 - and um
141:03 - it's awesome that you're here and i you
141:05 - know
141:06 - please feel free to when we work on php
141:09 - stuff which we do occasionally feel free
141:12 - to let me know how i could do it better
141:16 - ambition says back end is way more open
141:18 - front end is all just javascript
141:21 - yeah yeah you're right about that
141:24 - that's a good and a bad thing if you
141:26 - want to do front end there's no
141:27 - confusion about what language to learn
141:30 - javascript is it but at the same time if
141:32 - you don't really like javascript you're
141:34 - stuck with it
141:38 - uh gleb says hello from moscow hey how's
141:41 - it going thanks for joining us what time
141:43 - is it in moscow right now it's got to be
141:46 - pretty getting pretty late right
141:58 - okay terry incarnation sorry about the
142:00 - missing words in my last comment thanks
142:01 - for replying oh don't worry about it i
142:03 - mean i'm like
142:05 - not a problem uh it was more just me
142:08 - trying to read it too fast it was
142:10 - confusing
142:11 - um so i'll follow the updates that's
142:13 - coming soon and i'm definitely
142:15 - interested in working with this current
142:16 - project all right great great i'm
142:19 - looking forward to uh to you working on
142:21 - this so um
142:23 - awesome
142:25 - uh ryan says i've been trying to follow
142:26 - your videos on react and learn more from
142:28 - end frameworks cool
142:31 - hopefully they've been helpful to you
142:34 - let me know if there's anything i'm not
142:35 - going over that you'd like to know about
142:37 - or somehow i could improve
142:39 - uh the experience
142:42 - so
142:43 - i actually don't often get suggestions
142:45 - on how i do these things the only
142:46 - suggestion that i i used to get
142:48 - consistently was you talk too much code
142:51 - more
142:51 - um and then i've tried to do that
142:55 - um but i want to make this
142:57 - as good as i can
142:59 - in terms of my contribution to the
143:01 - stream so
143:02 - suggestions are welcome
143:07 - robert says i learned something new
143:09 - every live stream thanks oh awesome i'm
143:11 - so happy to hear that i'm really like
143:13 - that's what keeps me going as long as i
143:15 - know that there's some benefit for you
143:17 - all from this stream i will keep going
143:19 - it definitely benefits me
143:22 - but
143:23 - if it benefits you all and it benefits
143:25 - free code camp
143:27 - i'm going to keep going for as long as
143:28 - my boss will let me do this
143:31 - um
143:32 - even then if my boss says you're not
143:34 - allowed to stream from work anymore
143:36 - i'm going to try to figure out some way
143:38 - to keep doing it
143:40 - outside of work or somehow because
143:42 - um i think this is a really cool thing
143:44 - we have going here
143:48 - all right gleb says yeah it's 11 p.m
143:50 - here okay cool thanks for staying up
143:53 - late to watch this i i mean 11 may or
143:56 - may not seem late depending on whether
143:57 - you're a night person or not but
144:00 - um
144:02 - i don't know i have a little kid so 11
144:03 - seems late to me now
144:06 - uh
144:07 - jimmy says hi uh are you gonna make
144:11 - um a tutorial on angular
144:15 - i don't have any plans to do an angular
144:17 - tutorial right now i certainly don't
144:19 - feel confident enough in my angular
144:20 - skills which are pretty much
144:21 - non-existent to be able to teach other
144:23 - people
144:25 - but free code camp does have someone
144:27 - that's doing an angular project right
144:29 - now so
144:32 - i think last week at some point that
144:34 - video was published so just check back a
144:37 - little bit in the in the videos
144:39 - and
144:40 - um uh in the list of free code camp
144:43 - videos and you'll see one that's at the
144:45 - beginning of an angular tutorial so i
144:48 - haven't watched it yet um but
144:52 - i'm assuming that it's good quality i
144:54 - mean everybody
144:55 - is really knowledgeable and does a great
144:57 - job here on on this channel
144:59 - um
145:01 - i don't know if i want to include myself
145:02 - in that category you all see how many
145:04 - times i mess up on my stream but all the
145:07 - other people are really knowledgeable so
145:09 - uh so check that out
145:11 - um
145:12 - says it's 1 25 a.m uh where he's at uh
145:15 - yeah i figured uh that it was it was
145:18 - even later there
145:20 - so i usually don't ask how late it is
145:22 - over there because i i have so many
145:23 - people from that area of the world that
145:25 - i've like
145:26 - i can usually always figure out what
145:28 - time it is there
145:30 - um
145:32 - just from
145:33 - from hearing it so much in the live
145:34 - stream
145:36 - all right ryan says i'm looking at using
145:39 - react and redux for building an
145:40 - e-commerce store i have a client that
145:42 - would like one built on the framework
145:44 - react
145:48 - that's really
145:51 - i'm cool to think i
145:55 - i kind of remember somebody
145:57 - doing something similar and telling me
146:00 - about it recently
146:02 - but i cannot remember who it was if
146:04 - anybody watching now was the person that
146:06 - recently built
146:08 - some ecommerce stuff with react let me
146:10 - know
146:12 - it's possible i may have just seen
146:14 - somebody on twitter talk about it and
146:16 - then i i viewed it so it may not have
146:18 - been directly to me
146:20 - man i really wish that i could remember
146:22 - what that was so i could give you a link
146:24 - to it now that would help out but that's
146:26 - really awesome
146:27 - um
146:29 - i i'm interested in seeing uh what you
146:31 - come up with so
146:33 - i don't know if this is possible but if
146:35 - you're allowed to have the code on
146:36 - github available like publicly available
146:39 - i'd love to see that
146:41 - uh that repository and if i have time i
146:44 - i may even help out with it and and
146:47 - submit a pull request
146:48 - um but
146:50 - let let me know if it's possible
146:52 - then please send me the link and i think
146:55 - that'd be really cool
146:59 - harshit says to do the e-commerce thing
147:01 - use gatsby maybe uh flipkart uses gatsby
147:05 - react uh which is
147:07 - as it's as large as amazon here okay
147:11 - awesome
147:19 - okay cool
147:20 - all right well i've gotten to the bottom
147:22 - of the live chat and it's getting
147:26 - nearly time for me to uh
147:28 - uh to
147:30 - wrap things up here and go home for the
147:32 - weekend so
147:34 - uh thank you so much uh for all your
147:37 - your help in this stream
147:40 - and i i hope i hope you'll learn
147:42 - something from it uh i know i did
147:46 - and i will be back
147:49 - i should be back monday i have to go see
147:51 - a doctor about getting surgery uh done
147:54 - on my wrist
147:55 - but that's in the morning on monday
147:57 - hopefully my appointment isn't really
147:59 - long
148:00 - so i should be okay to stream
148:03 - um
148:04 - again on monday
148:06 - and uh
148:07 - yeah so
148:09 - everybody have a great weekend and i'll
148:11 - see you all next week

Cleaned transcript:

hey everybody welcome to live coding with jesse today we're going to do some work on our fonts so i mentioned a few times that at some point i was going to change change our fonts kind of mess around a little bit with font sizes font colors font weights and uh try to find something that that really works with this layout so that's we're going to work on today i just want to take a minute to show some of the pull requests that we've got uh and so we're on the same page uh with where we're at here the um let's see so sebastian and harshit both submitted pull requests sebastian did some work with the padding here at the bottom of the card so that's a lot nicer also with the colors we had several different colors for our click effects here now it's it's all gray so at least it's consistent i'm still considering maybe changing the color but the consistency is a big improvement and sorry if i'm missing something uh sebastian something else in the pull request there were several things uh kind of lumped together in there uh now a harshit's pull request is is interesting so this is a filter filter and you could filter by my month year so let's let's take a look at how it works so we're going to go to the current bulletin so we have everything up here and here's the thing about the filter though right now see if i can grab i want to try to get it to a date that will actually work so let's try this um what is that april may uh may 2016. let's go may 2016. okay great so see all these posts are from may of 2016. awesome um let's go and then you can actually go back if you want to and submit and then you get everything uh but here's what i note i i did notice one uh slight bug so i don't know if anybody caught that when i went back and um selected none for these and submitted i'm let's see actually i gotta let me go back to the category here let me just demonstrate this again so we're gonna search for february stuff okay nothing in february now if we want to go back and submit we get everything even though we're on category 2 and if i click category 3 i still have everything still of everything uncategorized of everything if i click see i got to actually click all and then back so that is potentially an unlikely bug someone would have to first pick a category and then want to filter by date within that category and then select none and submit again but at that point potentially it could be confusing so i'm going to say that it's definitely a bug but it's not a very likely bug uh for for anyone to encounter um but uh you know it's something to think about maybe we'll we'll work on that i definitely put that in a list of maybe things that would be nice to have before we launch but not 100 necessary um unless somebody really wants to do that then that's that's great uh something that maybe i'd like i'm i'm wondering about the button here i don't know i don't really know how i feel about having a button in the side the side nav uh just from like a look perspective um the alternative would be maybe try to go with a different style button see if that looks a little bit nicer or uh potentially just have the search happen on change um i think it could be reasonable that someone would want to search an entire year but not reasonable that someone would want to search every let's say february no matter what year it is i don't know what do you think about that um so we'll see my thought is basically you could have a check so in the live site where i'm doing this basically it just checks to make sure that these are selected and then it only does the search if you select the month and the year although as we get further along i could see the value in wanting to select only the year and make that an option right now i guess we're coming up on 2018 so you know potentially that's that's more legitimate than when i first made it uh so anyway there's just a few things to think about maybe to customize this a bit so i welcome your um your opinions on that and uh maybe i'll try to get some user data for for some of the some of the real users and see like have they been using this i actually had a user call earlier today and asked me how to find something from a previous bulletin so previous month and so it was actually helpful although i rec really the search function would have been the most helpful in that use case but um there was there was a desire to be able to search by date so anyway good work car ship um yeah definitely helpful and uh like i said so i have that kind of minor minor bug but i went ahead and merged it in any way because it it fits the functionality of of what we wanted and like i said i i don't even know that that the odds of that even ever happening uh are probably small so i think it's good to go uh merchant to master and you know then every you know we can all work from that so let me check the live chat quickly before we get started with our fonts oh okay uh harsh it's saying uh recommending do not use uh material ui and further projects it was a nightmare i was almost gonna lose my mind all right i mean i'm i'm open to other things we just need to find a material design framework that has what we want and what we need so i mean within material ui we have two options we have the older one and then the newer beta and then potentially there's others out there it's just a few projects ago when we were checking around material ui was let's say the most complete solution that we found out there maybe things have changed so if anybody else is using a material design component library for react let me know let me know what you think about it um harsh has been having a rough time i i don't know i i there are some minor annoyances with it um but i don't think i'm i haven't used it enough to make a a good judgment i i would think i would need to really learn how it works a little bit more before i make a judgment about the beta version of material ui i know i have had to kind of adjust some things here and there because i didn't quite like how things worked but um so far it has served its purpose but like i said i am open to trying other things okay oh that's right sebastian also changed the print view so now the close icon has moved to the right i'll probably just a few things about the print view um i'll probably end up taking out these uh horizontal lines uh because in in the print view i think it's it breaks it up on first glance it seems like this is supposed to break up between posts but it's really not it's between this is all one post with a line in the middle so either we'd remove the lines completely or we'd have to move the line below attachment also i think i'd like to have some some padding on the sides i think that would be good and then potentially i would maybe want this clothes icon to line up more with how we have the menu icon so in terms of of positioning but otherwise the print view is i mean even now at this point the print view is fulfilling its function uh you know these are just kind of small details that i would like to see so i'll either work on that at another time or another stream or anyone else can work on it if they'd like um okay um i think so shashank uh saying i believe about the print view that each post in a tile uh well the the idea here with the print view is to be as minimalist as possible um but we want to optimize it for print so the less we have to print um the the better so i'm kind of leaning towards just completely removing this and instead making sure that there's a reasonable amount of padding between each post you know for instance we would tighten this up so that the attachment name was really close to this maybe you know no more than 8 pixels between the attachments and the attachment name you know but between the posts no less than 16 pixels uh you know possibly more we'd have to see so uh you know i'm just kind of thinking it adds up if somebody's printing this out maybe a lot of posts every week you know all these lines take ink right so anyway so in this case really the way it looks on the web is is entirely secondary to the way it would print out so that's what i want to keep in mind for that okay well let's get started i'll come back to the live chat and go over anything if i i've missed anything uh but we're pretty about 15 minutes into the stream and and we haven't gotten to uh we've i mean we had to get caught up on some of the changes obviously uh but now i'd like to start my pomodoro clock we're gonna do 25 minutes of in of coding in this case we're going to be you know mainly working with css and some of the builtin features of material ui okay so first thing i want to do is work on this this by far is going to be the the font that is seen and used throughout the site more than any other font okay so we're going to work on this but then we're also going to visit this sidebar uh we're going to we're going to look at you know the heading headings depending on how much time we have and how long it takes we're going to look at every bit of font on this site but first let's deal with this because if we only get one thing done today this is going to have the biggest impact so here's what i'd like to see i would definitely like that font to be bigger and i i kind of i'm not a huge fan of the font weight so let's just play with it a little bit i know in a previous um in a previous stream we had worked with what was built in with material ui in terms of font styles but i i really think i'd like to customize it exactly how how i want it it's nice that material ui has those built in but it's really not that big of a deal to change some fonts with css so uh some font sizes and weights so i think in this case uh we'll get a better result if we just customize it uh ourselves so let's go into dev tools and uh we'll just play around a little bit with the fonts now i've also had the idea of bringing in that responsive font from materialize css that we've used on previous projects so that's still an option i'm a little afraid that it might be too big people are used to a font that's somewhere in between this and what we're using um when we use that responsive font from materialize so we'll see oh that's interesting why is that in an aside tag really interesting okay well let's bring this up so we can see what's going on here and let's take that font size and i want it to be at least 16 pixels i don't want to have any fonts that are smaller than 16 pixels um let's go with font weight let's try 400 yeah i like that a lot better do you see that that difference um we'll be able to you know side by side see the difference but already i think this is let me zoom in here i don't know about you but at least on my screen already i see a big difference in terms of readability uh this just seems a lot nicer uh so let's let's keep going with this um i do want to check what do we have a color okay i like that color we have that um this is the correct way to do color with material design on the web um black uh with uh some transparency uh particularly 0.87 for your primary text okay all right that's not bad let's try to bring this up though let's see if if it will still be reasonable and i'm going to zoom out so that we see what it's really like would it be reasonable to go up to let's say 18. i think 18 i think 18 looks nice all right let me go back let me see the live chat what do you all think um i i don't think 18 looks too large at all hmm okay who say john hanson says uh lighter font weight i find much easier on my eyes especially my old eyes yeah that's i mean that's what i'm going for really um you know for somebody who's i i mean for somebody that has perfect vision right it's who cares the font size doesn't really matter they're going to deal with font size no matter what but i'm more worried about you know there's going to be a lot of older people reading this we we certainly have especially among the faculty here you know there there are some some older uh professors that i want to make sure that they're able to read this so um i kind of want to go beyond you know just the normal use case okay all right uh shashank thinks actually that the 18 uh pixel font is um uh a little bit it's clogging actually i would like to see um maybe let me apply this 18 pixels and then see how it all lays out because right now you know we're doing this within the card so you see it's kind of going over we really aren't going to know until we see everything like that so let's go ahead and try this and yeah we'll try this let me see okay so this is not this is really interesting i would have assumed that this was somehow in a paragraph tag and not an aside that's interesting does anyone know should this be in an aside is there any benefit to that and is there any way we can change that since you know we're not actually creating this tag directly it's it's being created by mature ui hmm let's see how i want to select this mui card content see all the uh the classes are they're not helping me right now i guess i could just do all the sides um okay brett says aside is good semantically okay cool i just i really haven't used the side very much so i just wanted to make sure that you know it was the right way to use it i'm glad that it works i wasn't really looking forward to digging into that component and trying to change it okay so let's go with that let's um let's go to our just our index.css i would like these styles to apply um over a wide range of things so this is i i think the the proper place um let's see let's go with p and aside and we'll add this in let's save that and the wrong way i guess we'll need to refresh ourselves okay uh i suppose we're getting overwritten here let's see what's going on yep we are so we're gonna have to i really hate to use important on something that's this kind of global in our styles but i really also don't want to have to go into every place and put these things in so let's see let's see all right so harsh it's saying use style.js um all right let's check out our style.js i mean at this point we're pretty much still testing it out as well so um i'm all for putting things in the right place but we're almost like designing as we code so i guess i could just do it in devtools i guess i don't have style.js open currently so let's grab it from here some styles okay let's see what yes i'm just wondering what is there a class already being applied that we could just add on to see these are all have these numbers added okay okay i should say an open post preview alright we'll check it out okay so at least it's being applied here which is nice um it's not bad actually in post preview we have quite a bit of space we could probably go larger if we really wanted to i think this is fine for now but uh we definitely have that opportunity um okay all right i'm i think i'm yeah i'm okay with that for now let's go back to this view and we also do want to make sure that we don't forget to check this view as well all right so let's check out what we have going on here um i guess i could check into the um let's see okay should i you keep saying i mean the js file oh okay um the component post preview okay so not the sorry i thought you meant go to the post preview and not the components um oh yeah post preview okay says see their card content yeah do we did we have card content okay there we go okay so here's where we're pulling in that that content okay uh so i don't know i'm i'm thinking here since we haven't found a uh typography type that we like for this should we even be using typography um could we get i mean ought we to just use uh a paragraph tag um our is support did you really submit a pull request already on this um are you saying check the pull request when we did this so i'm actually interested to see we would have to switch it up because we can't just pop content um well i suppose we could because we've already sanitized it so we could put it like that um let's see we could type last name i mean we could just add a class on it are we already using classes content okay actually hardship has submitted a pull request basically doing what we were doing here so um where are we at so what we're doing here now is we're going to keep the typography and we're going to add a class okay then up here where we have all our classes here then we can just add that class in and we'll put in our our css as if as a an array or i'm sorry as an object so you can see there are several ways to do styles and react all right we're we're using a mixture so we're doing some some normal css here right uh this is should be very familiar which works in react it's it's it's totally fine it works but there are some other ways this being one of the ways uh where we're actually making an object and we're using that within our uh within our components so this kind of allows you to have a much more selfcontained component if you have all the styles for your component and in the actually in the component it's much easier to just take that component and reuse it anywhere right but if we put all our styles here in index.css well number one they're all global which which i mean global styles aren't in themselves bad but it can be bad there can be conflicts it can be difficult to manage so anyway depending on what you what project you're doing and you know how you want to organize it you may want to do these there might there are other ways as well these aren't the only ways to do it okay um i will say this though if you do it this way i find it easier to transition to react native uh because this is the way you'll you'll most likely want to do this in react native uh with slight differences but uh we did a stream on react native if you want to know more about those differences but it's a much easier transition so if you just kind of start learning it this way it's a little bit weird at first to get used to making it as an object and there are ways to actually put real css in here in terms of syntax as well if you really want want to do it like that but anyway that's we're going to do so i know we kind of almost had it done here but i don't want harshet's work to go to waste so i'm going to bring in his pull request just really quickly and get rid of what i was doing here and just so that i don't have to deal with any merged stuff right now oops there we go i'm going to get rid of everything that we've done and here we go so let's just double check hit status no index.css has changed what did i change there we go all right is that better now it's probably just indentation um actually that's really weird why do i have that indented like that i never indent things like that this is really weird indentation okay anyway let's just uh i guess it doesn't matter now i messed it all up all right let's go with this p tag again uh since i do want this to apply to all paragraphs no matter what anyway uh we use a mix here both both ways uh what was it fonts size 18 and font weight 400 and i may end up changing this as well i'm thinking it might not be a bad idea to do the responsive font for the paragraph tags and then go with the standard font for that post preview the cards so that's probably what i'm gonna end up doing i doubt i have time on this pomodoro session maybe on the next session we'll do that um but anyway let's just let's just commit this quickly and um let's this be a little bit more descriptive there we go okay so i had blocked my live chat um let's see okay harshit uh thanks for that i always forget that uh you could just if i wanted to just revert everything without manually doing it uh i could have just done uh get checkout and then um a dot so that would have been faster thanks um let me check my time okay perfect timing we'll um just finish this up and now i can merge great and awesome so now we have all of harsha's stuff we're gonna see it now great okay so here's what it looks like with the size 18 font i something needs something could be better maybe it's the line heights maybe line i know we can we can do better it just seems something's off um all right let's let me take five minutes now and go through the um uh the live chat answer any questions you have then we'll do another uh session and uh i think i'm gonna i'm gonna check out some previous work that we've done and just compare what we're doing in terms of uh line height because that may be that may be what seems off to me here okay so let me scroll up and i'll try to get through as much as i can in these five minutes okay so red 23 has a question uh do you think that html is easier than python um yeah for somebody who has no experience in any type of com coding at all or web development i i do think html would be easier to learn now if you already have a background in programming like let's say another programming language you know maybe you're into java or some form of c um it it actually this may sound weird but i think it actually might be easier to go with python than to learn html and i wouldn't normally think this except i i i do know i've i've talked to at least one programmer who was always used to doing just strictly um like software development uh with with c sharp and trying to learn more frontend stuff like html uh it was actually somewhat challenging because it's a whole different mindset so you know it's hard to to measure you know what what's easier not easier you know what unit of measurement is there for that but i would say the majority of the time html is easier but it somewhat depends on what background you're coming from in terms of of your knowledge base uh okay not really a lot of questions going on so sorry for the long pause i'm just trying to read through and see um see if i uh need to answer anything so um oh harsh it says uh node 8 is now an lts so yeah um if if you uh haven't upgraded your version of node for a while now might be a good time to go up to node 8. i know in particular for this project it will not work unless you have at least node 7 4 i think so 7.4 so not a bad time to upgrade oh good good question joseph asks if there's a print view for individual posts and uh yes there is um so if we click an individual post and then hit print view we we have our print view here so um actually now that i think about it i don't think this is a really important uh you know it's not a priority but you know it's possible that we could do a little bit with with this section here to make it more printer friendly um so like obviously i wouldn't want any color uh in the the print view because most likely it's going to be printed black and white anyway um yeah we'll see i mean i i think this is acceptable as as is but well um maybe we'll come back to that at some point but anyway good question okay uh denon j says um learning uh in stanford online cs 101 course um says is it is it worth learning um yeah i i i think having a basic knowledge of computer science is is very useful um even even just if you're doing web development is it necessary for web development no not it's not necessary but i think it it could definitely be helpful um and it makes it easier for you to kind of branch out and maybe go into different things if you don't want to stick with web development because you have that background kind of a a better view of the big picture uh in terms of all of you know the computer science realm so um i think that's awesome i haven't uh checked out that stanford 101 course i have done a bit of the harvard cs50 course and i thought that was very interesting if i have time i'd love to finish that um just got got busy with other projects um but no i i think it's if you have the time to do it it's it's worthwhile all right let's go back okay let me go back and let's start our pomodoro session and um we're going to um let's let's go ahead oh okay now i remember what we were gonna do uh we were gonna check out this spacing there's just something about this that's that i don't like right now uh screen check that out oh okay harsha mentioned it i i had said i thought it was 7.4 for the node version we actually need 7.6 and that's because we're using async await on the server so we need at least 7.6 so if you try to i believe we have this in the documentation for the project so i i think it is in there but in case you you didn't read that and you're having trouble getting the project to work on your own machine make sure you have the correct node version okay all right let me check out actually i want to check this out on the current bulletin so i'm on my other screen i'm just going to bring up dev tools just to check quickly what what kind of styles were we have here on our and and the current bulletin these are in paragraph tags but um okay so our font is that line height uh where's our line height coming from 1.5 all right let's check our line out here now hmm that's a line high 24. where are we getting this from yeah all right let's try some some different things with line height so i'm basically running 1.5 is the line height and let's see what that changed it to okay so let's see the difference actually i really like that i don't i don't know about you all but that just at least for my eyes seeing this that just made a big difference not bad so i mean it was only a few pixels different so we're going from 24 pixels in line height to 27 pixels but i i think that makes a big difference all right let's throw that in so there's two places where i want to change this right now because i think i'd like to apply it to paragraphs as well so i'm going to try to keep using the setup i have now for the paragraph tags although i still might change it to use a responsive font and by that i mean if you're not familiar with a responsive font the font size will actually change based on the screen width so it'll be a more optimal viewing experience basically the idea is to keep the words big enough to be readable and not only that but the amount of words per line in that sweet spot which is which i think what it was i can't remember for sure the with the optimal amount of words per line is um it's easy to google and see if anybody remembers what that is uh please let me know in the live chat um but there there is actually an optimum amount if you want people to uh be able to read things easily on your site and it's hard when you have multiple like different size screens to actually get that a responsive font can help you stay within that range um so it doesn't always work it's not perfect but you have a much better shot at staying within that range if you if you do it like that um so what i just do line heights 1.5 and we're also going to do it here so where's our area card class line height and 1.5 okay so whoops this should give us an auto refresh and let's double check to make sure this is being applied it definitely should be yep it is wonderful and we can check in here make sure it's applied as well and nope did i forget to save it it's possible all right let's give it a refresh oh there we go okay awesome all right so this is acceptable right now um if we have time later on we want to keep messing with it we certainly can let's go to this side nav because aside from the titles which right now i think are acceptable i i i may want to work on them a bit but aside from that i just want to make sure that everything we're doing here in the side nav is it's all you know as readable as it can be so i'm not we may not have to do much but i just want to double check a few things and um make sure so the first thing i want to check is the font size we're 14. i don't want to be at 14. so uh let's bump this up now to let's see what is this category three yeah let's bump this up and we're gonna go font font size 16 pixels okay yeah i think that's much better it doesn't look like we're in any danger of having you know something be too long everything's short enough here that it should work all right so let's go ahead and do that um i think this is this component is called the drawer so let's find that we add drawer and here list item yeah here so we're gonna have these uh these list items and i guess we could put it right on the the link we say we already have a class classes link on here so let's edit that where's it at are we doing this down to the bottom there's our classes oh okay we're are we passing in clash i guess we're passing it in hmm okay index central sidebar okay that's what we're calling it we're calling this sidebar why are we bringing this in uh sidebar for let's let's change this to be consistent with our naming so i'm going to change this to drawer um so anyway i guess this is good so i don't i mean i don't know if there's some reason for doing it differently but i think it's less confusing if in general we um we keep our component names the same as the file names for our components so that was throwing me a little bit i was looking for a component called draw but instead it was it was sidebar so we're gonna have to have some sort of standard um like guide for contributing a style guide or something like that so um anyway so if you're if you're submitting pull requests just keep that in mind uh otherwise you know it can get a bit confusing but yeah we didn't really have any type of formal you know guidelines about that so we'll have to add that in somewhere uh i think i think we have a contributing file for this repo i'm not positive though but perhaps we should just have some sort of global style guide um that that would probably help things out um yeah it's classes this cross class okay so we're bringing in okay harsha says we're pulling that in from style.js all right so let's grab that we're at stylus right here right next to it okay um let's bring this in good thinking so he said he um um harsh it name so harsha ended up naming that component sidebar instead of drawer because he didn't want it to be confused with the drawer component um that is is brought in from uh mature ui actually that makes a lot of sense uh let me see i'll be pulling in the drawer okay it doesn't look over pulling it in anywhere else so okay so how about this let's do like i said we'll have to type this up and kind of do it formally but um how about if there could be some conflict where you have we're using a library that has the same component name as the one that we're trying to create our custom one can have the normal name so in this case drawer and then if we do want to use the library's version elsewhere or potentially even in the same file we just prefix it so instead of drawer it would be mui drawer uh then that way uh we can just keep using both if we need to and there will be no confusion about where that component comes from because we're calling it mui drawer so can we do that would that be doable and easy or is that going to be should we do it the opposite way and somehow prefix our component to maybe say custom drawer let me know what you think would be easier or more reasonable to do i'm open to either one but it'd just be cool if we could decide on one way and then be consistent with it later on so i mean i'm sure most of you can understand and handle the distinction but you know potentially if we get newer people who are just learning react i'd like to try to make it um as easy of an experience as possible if they're either looking through our code or trying to contribute and then potentially if i get any student workers here at the university that are dealing with this they're likely going to be new to react so anyway you all you understand uh okay so where sorry i just lost my train of thought oh okay i was trying to find where what styles i need to bring in oh sorry so we have a drawer here class we're passing this props classes okay so basically i should be fine to add a class here and then it'll just go straight down right okay awesome harshit i'm gonna i'm gonna grab your comment here and um let's see uh i'm gonna put it up here quickly just so everybody can see it let me make sure no it's blocked um let's put it up higher okay so this is pretty much this is what we want to do so uh up here it might be hard to see because it's gray but basically we're we're running um let's take this up so we're going to do import drawer as uh mui drawer so in this case material ui drawer but we could really prefix it with different things depending on what library we're using and then it'll be of course from material ui slash drawer so excellent cool i figured there was a way to do it okay uh so let me see george is uh see the class name andrew oh okay so let's just pass it down let's find out where our other drawer classes are just group them together so we have drawer paper drawer header let's throw in um drawer item yeah let's go draw item and then we're going to say fonts size 16. um 16 pixels and let's not forget that comma i've gotten so many errors from forgetting commas in this it's like it's so silly but it's it's easy to forget that little comma okay uh now let's go back in our drawer.js let's go back down to our list classes link oh okay we already had a class shoot let me find that class link and click link i'm not seeing it there we go none color not oh okay you know what for now i'm going to keep this separate uh i don't want to put the because i assume this link color is being could potentially be used in other things and not necessarily the side side nav so so i'm just going to apply both styles here so i'm thinking later on if in fact we do a responsive font i don't want to risk conflicting uh so i would potentially have all of the font one size and then somehow have a link a different size so anyway uh let's do are we at drawer uh so let's go class name classes link how are we gonna how do we do this um actually it says use class name package to combine styles okay how do how do we do that i was just going to pass both styles in so i'm i'm interested in this uh so harsh it's saying we can use class name package to combine styles but i am unfamiliar with this oh okay okay interesting i think uh i've never done it like that before i've done like uh like an array uh within here of uh of classes i think that's how i did it i think it was an array cd it says see at bar okay um so class names classes flex last time awesome that look i actually i like i prefer this way to some ways i've done it previously that's really nice now i'm not going to do it on this one but i am actually just curious what if we wanted to do class names like this but then in addition do some uh oh no we wouldn't want to right because this is the class name it's not direct styles right okay never mind never mind i was uh just thinking about the way i did things um on that react native app that i uh completed i don't know like two weeks ago um but i suppose that was a different use case now that i think about it so please disregard that question um let's see so class names did we have to bring that in no yes okay let's import class names here it might already be imported we'll see nope all right let's bring that in import class names and um now i lost that link there we go um class names so we have class names and then actually let me see did you have to put that bar sorry okay so we we do we have to keep okay so we do have to keep um doing classes dot okay that's fine just wanted to double check we call that drawer item okay let's check this out now whoa let's let's give it a refresh see what's going on hmm i messed something up let's see what did i do um let me oops there it is all right okay so this is this is pretty interesting so let me uh let me share this with you all so harshit is saying um quickly i'm just gonna confirm that we have the right fonts no not yet it's not working yet let me uh let me go back okay so class is for item let's make sure this is what i'm doing item font size 16 pixels interesting um item yeah it looks like it's exactly the same looks the same and let's make sure we are bringing in class names okay let's check it out again let's just do a hard refresh now huh all right let's see what's going on here category there we go that's what's going on okay all right so here's what's happening we are in fact getting this font size uh but it's it's it's on the a tag um and somewhere along the line it's being overridden by this so whoa that was unintentional all right let's see shoot hmm uh all right is there any way to do there is the link component we are not creating that right yeah that's react router um we need to put this lower down on the list item text so that was my mistake i should have never put it on the link so let's go class name classes dot drawer item and then now we don't need this anymore and we don't need this save that and see if that gets us down low enough oh it doesn't look like it let's see where it get applied not there uh here we're so close um yeah i list items and um okay i don't know how we're gonna get further down than that okay so what i need to do is check out the material ui documentation to see if there's some builtin way that i can get at that interior paragraph tag or overwrite it or something so let me do that i know my timer is up but i we're so close i don't want to lose my train of thought here so let's do this and then i'll go to the to the live chat so where are we at wait what was it list item text okay that's actually really helpful i don't know if you saw that uh i really like that feature that'd be cool to implement something like this in some of our projects so just keep keep that in mind you can go on the wish list all right so let's see let's item text let's see um i'm going to disable the children won't be wrapped by typography content oh is that what's happening typography okay um all right so let's try did we already have this on let's see really disable typography see if that does it no it's actually worse interesting and so it changed it to a div it still didn't do what we want oh wait a second yeah that's not what we wanted at all all right let's take that out and instead let's check i'm interested in this uh root here what's up hmm maybe you have to do an override okay um let's see all right these inline style approach everything for style property see how this thing maybe we can do it like this yeah let's try that sorry that text was probably really small i apologize so anyway i'm thinking something like this would let us get it the root component uh so in this case we're going to want to say classes i'm gonna try it like this first i'm not sure it'll work but always worth it to try a simple thing all right yeah that does not look like it's the font size we want see if anything happened wow we're still getting it there i wanna refresh hmm hmm okay i'm not sure what the material ui way of doing this is supposed to be so let's she says if you've written a better way to do it it's using line css directly component um so john hanson says uh it's it's seeming to suggest that uh styles need to be overwritten directly in the component with css the problem is it seems like i can't get any any deeper in than this div anything within that i can't touch so here's what i'm going to do i'm certainly open to finding a better way to doing this at some point but i think this will work so let's go with um let's get rid of this going to do a class name and let's see if we can class name equals um draw item oops keep going the wrong way all right there we go so we got a classic draw item on here now let's just put drawer item p and we'll do font size 16 pixels important now great that works so uh it didn't apply everywhere because we need to put that class on these places but you can see this works so we are able to get down to it so um is there a way to do that in material ui or within that javascript object where you had a bunch of styles in potentially i don't really know but um good old normal css has done the job uh so yeah and i i gave a disclaimer a warning about using important on a previous stream so i'm not going to do it again but just the short version is don't use important unless you really really have to uh all right cool so let's just add this class on so it applies you know across the board here and then i will get to the live chat um all right so let's take this class name to so we want this on all we also want this on let's see how did we do this categories there we go and what do we got pull this item categories sucker um i'm going to take out classic mode now because i don't think i'm going to add classic mode i don't think it's necessary i am going to keep the help page which we'll do at some point all right i think that's it that should be all the places uh didn't work on this one i thought we got that one what's going on here ah because it's a div let's update our styles so we want drawer item p and we want your item div now let's give it a refresh no still not interesting oh actually oh i see so in fact drawer item did get placed right here on that route so um we didn't need droid mdiv what we needed was just simply drawer item there we go now it works okay so we got it here there there take action is the only one that's looking still the old size so what do we have here sure all right perhaps i did not get that on there um let's find where that's at up here a bit uh yeah which one was that take action yep i did not catch that one oops let's grab this class name right on there we are and that should be it yep all right who would have thought it would have been that time consuming to change the font size of these um once again sometimes react makes complicated things simple and simple things complicated i don't want to blame react completely here we were trying to do it the material ui way we went through all the steps before we decided to you know kind of come up with our own solution so um don't want to blame um don't want to blame uh react completely for that um okay so that actually that might be really worthwhile i mean to be honest with you like it's not like we we had to be geniuses to come up with that workaround that's like pretty simple it just seemed like there would be some other way with material ui i think that might be worthwhile as a some sort of pull request to material ui to come up with a better way a better way to do that i'm not sure but um at least a more consistent way right um because for most of the things there's a certain prop or a way that you would do things like that and you wouldn't go directly to the css and add your own classes but then in this case that seemed to be the only way that it would work so i would i think it would just be nice to have some consistency one way or another either go with everything is just your own css or you know uses normal css classes your own css or everything has a uh a specific prop in the mature ui way i mean i don't know does that make sense i kind of like to lean towards the idea of let let's just use our own css for a lot of it right they can they can have classes that are built in but then it would be very simple to just say okay we're going to be able to uh edit this in override classes i mean i just i don't know maybe this is not the case but it seems to me if you're building things with react you're probably at the point where you can certainly manage your own css and if you want to use what's built in for them wonderful but then make it the standard way to change things up should be the same way you would change things up in any type of website which would be write some css anyway i'm not involved with that project so maybe there is some really good reason why it's not like that that i'm overlooking it's entirely possible i don't want to be overly critical of the team that works on material ui it's certainly been very helpful for some of my projects so i really appreciate that all right so now let me answer some questions here in the live chat um let's see okay i scrolled back way up towards the top because that's where you left off at uh and we were talking about optimal font sizes john hanson says that his base font size is 18 pixels so um yeah i like that like i said my bass is usually 16 well i shouldn't say my base my absolute minimum is 16. so if someone wants to have like some small text down in the footer or something like that minimum 16 but the normal text is usually more than 16 pixels um but i don't know if you all have run into this issue but i have people that i make the sites for here you know people in other departments they seem to be opposed to this larger font size and they want it smaller the reason being they want to fit in as much text as possible and i've gotten some pushback on the larger font size and i mean i just explain every time that this is much more readable i don't know what experience you've had with your clients uh you know with things like that but um also i usually explain that users aren't likely to read all that text if even if you make the text small and fit in a bunch of stuff odds are nobody's going to read all that it's much better to just get to the point only put what's really important in there and then have it readable then people may actually read it all so i don't know i mean i've seen some studies and statistics that um seem to suggest that that that i am taking the correct approach to it but i would like to hear what you all think about it as well um i'm always open to changing up the way i do things if there is some proof that there's a better way rook says a lot of people just do control plus on all sites to read better yeah that's i i often do control plus depending on the site and certainly while i'm streaming i control plus everything otherwise you'll never be able to see it but the thing that i worry about is some users are just very very averse to any type of technology and i don't know that they necessarily even know that they can control plus and increase the size so i i am very much opposed to the mindset of thinking as your users as as less intelligent i i don't like that at all i think we should respect our users and try to make things as easy as possible so i like the idea of assuming that if there's some easy work around the user may not know about it because they're not really into computers i think that's perfectly acceptable to assume that um so anyway i just i like i i would like to make that distinction that assuming that a user doesn't know how to control plus is not the same thing as assuming that they're not intelligent uh they could be very intelligent and just have invested their time in learning other things not related to a browser so anyway that's kind of like it always bugs me gets on my nerves when i hear people talk about users or clients in a derogatory way like they don't know what they're doing i mean i'm i'm frustrated with clients and users frequently but no need to belittle them in any way okay i'm reading down through um if if you can't if you can see the live chat you know what i'm talking about but if you can't see the live chat i sort of mentioned so harshit who i mentioned frequently because he's helped out so much with the projects when uh sorry i need ah some of my throat okay uh logged out of salesforce okay um when i'm coding and harsha's trying to get my attention it's just like all caps so they're like sections within the live chat where it's just no with like a ton of o's all caps and so it's it's amusing i i know sometimes i get into what i'm doing and i forget to check uh the live chat so um sorry about that harshit i appreciate you not giving up on me and continuing to try to get my attention uh okay good there's a good question here so um not sure so uh yashuu asked this not sure if you're still with us yeshu um but the question is if we have a separate language for styling why do you use css in javascript that's that's a very good question and a legit question i can totally understand that um css and javascript is weird it's not necessary in react but i believe i mentioned this earlier but i'm going to say it again um because i think this this is to me the answer to why you would do css and javascript um to have a selfcontained react component so that number one you could take that component and use it elsewhere and you'd have everything you need just plug in your data and you're good number two it also makes it super easy for someone to look at your code look at your component and see the big the whole picture of how everything's gonna look when you have your styles in your markup all right there and your logic because javascript all right there so that's the benefit of it i will say there's other potential benefits depending on exactly how you're putting the css into your component so i know on react native um when i use create react native app there was something i believe it was built in to create react native app i don't know that it's built in to react native itself i'm not sure um but there was something that if you used if you put the css in a certain way within your react component it actually gave you a performance a slight performance benefit because of behind the scenes how those eventually got applied so i don't know enough about how that javascript gets transferred and becomes java or swift or whatever to know exactly why there's a performance increase but i do know from from that udacity nanodegree that i did that there is a performance increase so i don't know if there's any similar thing with regular react that could be done but it's potentially i mean it's possible okay john hanson says a nice thing is to style the text to flow in columns as when the width of a single card view gets too wide it's harder to read oh i have never thought of that that's that's interesting that's really interesting i'm going to keep that in mind i'm not sure if i want to change things up in this project because the users already have an expectation but that's really interesting uh we do have some upcoming projects within the next few months that that may come in handy i really like that idea let's see okay yes you also asked why don't you use sas or scss over css to be honest with you i much prefer scss uh i actually really like sas um you know plain sass but um the only reason i don't use it is because you can't copy in normal css and have it work if it weren't for that i'd be using that because i i really like just the indentation style you can that's the fastest i can write css is by using sas but anyway i end up using scss because it kind of gives you a little bit of both worlds the css and the fcss or and the sas this is tongue twister trying to get all those letters off anyway um i do love to use it we just haven't set it up on this project to use it but in previous project we we have um so whenever possible i do like to use sas instead if you're not familiar with sas or scss it's a css preprocessor it lets you do some cool things with nesting of css so i guess a good example if i have a good example here so instead of doing this where i have this comma so draw item p and then draw item i could potentially do something like this no it wouldn't that's not a good example never mind uh media prints shoot i don't have a good example here i'll just have to make one up so in regular css we could do something like this or i would say um let's just go body uh a for all the a tags and then i would put a css something and then so let's just put that in there just so we have something and then i i would need to do in css let's say i wanted to do body p right so instead of this with sass i could write body a uh um obviously this something is not real css so if you're new to css please don't try to type this in it won't work um and then you could write p right and then whenever it was all processed um it would end up looking like this but you saved yourself a little bit i'm being able to do this so it doesn't really seem like as much of a savings this probably takes up the same amount of lines but it can be very useful if you get a little bit deeper and generally you don't want to nest too deeply um maybe just three levels or so uh but you could do this so that's the very basic thing you can also do things like have variables so you could make a sas variable and then so let's say we made this a color variable then throughout everything we could just say like this is our primary color we defined it in one place if later on we wanted to change our color scheme all we'd have to do is change that variable and it would change throughout so there's really cool things there's other things you do with like calculations it's almost like a blend of a programming language and css so anyway that's a brief overview of uh sas or css scss i mean so this is scss syntax there's another syntax called sas that is is different but you can do a lot of the same things with it okay harsha so harshit before the stream sent me a coupon for digitalocean um harshit i tried to use the coupon code and it told me that it wasn't valid so it ended up not working for me so i don't know what the problem is but um thank you for sending that i that was that was really nice of you uh joseph uh whittington asked so anyone can join this project definitely anybody is welcome to submit a pull request to this project or point out any issues or anything like that um of course i review all pull requests i may or may not pull it into the project but i i do my best to pull in everything that i can so i may ask you to adjust some things first and then i'll pull it in but i welcome anybody especially people who are new if you'd like to get some experience with pull requests i know sometimes it can be intimidating to try to get a pull request submitted to a larger repository and not everybody is friendly whenever you submit a pull request sometimes people are frustrated having a bad day and you know i've had that happen before you submit a pull request and the maintainers just aren't very polite uh if let's say it wasn't exactly what they wanted so i'm not going to do that to anybody so if you're a little bit apprehensive about submitting pull requests this is a great place to get a start i'll do my best to uh to try to work with you and and get your pull request merged in let's see joseph also says how difficult do you think it would be trying to learn react coming from angular 4 background um i don't know myself because i'm not super familiar with angular 4. i only worked with uh the very you know first version of angular uh you know back in the day so i don't know for sure but i would imagine if someone had the intelligence to be able to learn angular 4 they certainly have the intelligence to learn react it may be um you have to change how you think about certain things but i would have no doubt there's no doubt in my mind that somebody is certainly capable of learning react if they know angular um yes you ask is it worth it to use node.js against gulp um i'm i'm not entirely sure i can scope all right so i'm not entirely sure what you're asking i'm gonna um rephrase the question and see if this is really what you're asking please correct me if i'm wrong um but are you saying to use like npm scripts instead of uh gulp um so it would just be kind of directly using the npm scripts that you that come with node.js is it worth it i don't it depends if you're really used to using gulp and you have a nice setup and you really like it i you could certainly do fine just sticking with that uh if you're really worried about um the speed and up you know optimization of your your development process your build process i'd say give npm scripts a try they're pretty straightforward um i've always kind of wanted to set up npm scripts i have in small projects before but i always just kept going back to my gulp setup because it was it already worked um so i don't know like i said it does kind of depend on you know how many if you plan on like reusing it for a ton of different projects then yeah it's it's definitely worth it it'll save you time you know potentially in the long run um but i i think that's more of a personal choice that in terms of the end result you can probably get the same end result with npm scripts or with gold arson says you know you're a number three and contributors uh for the bulletin i didn't realize i had fallen to number three so uh thanks for letting me know um yeah so i really only work on the bulletin whenever i'm streaming uh so i have other projects that i need to work on when i'm not streaming so that's why my contributions are low i appreciate everybody else contributing though it's it's really amazing all right cool john hanson earlier i was talking about the optimal uh amount of words per line for for readability and john hanson says it's 80 characters per line so uh not not where i'm sorry that i uh mistakenly said words you're right john it is characters um so 80 characters is you know give or take if you but that's the right spot that you want to be in so um if you if you try for that then it's more likely that users will read your content joseph asks does google have a style guide for react um not that i know of not that i know of so that actually might be good to look into perhaps instead of creating our own style guide from scratch for our react projects we could see if there's a style guide out there that already kind of fits with what we're used to using potentially you can adapt it if we want to but if anybody knows of a good react style guide please please let me know and i could check it out all right all right so i think i'm almost to the bottom of the live chat so if you have a question you haven't uh put it in there yet in the chat please put it in there now because i'm nearing the end okay humber umberto says uh looking for sis admin about to go solo a server boss uh so moving from iis uh from a 2008 machine to a 2012 machine uh with a separate web ser websphere server okay so i don't know anything about iis uh servers so i shouldn't say that i know very little about iis servers so i've worked with them i've never worked with them directly only kind of in a research type of way of uh helping out other people so if anybody else can help out with that please let umberto know john hanson says react is so complex to get keyboard events like arrow left and arrow right to iterate through an array of images as in a slideshow i'm about to give up on that ui function interesting i actually have never done that i don't think i've ever attempted to get arrow keyboard events to work with react so um i'll take your word for it that it's a pain actually i let me tell you about a project i've been discussing with one of my coworkers here because it's really fun and you all please let me know if any of you are interested in maybe helping out with it so this would be a longer term project uh but we thought it would be really cool for um students who are interested in the university to be able to get kind of a virtual tour of campus but it would not be like a normal virtual tour the idea is to create a game an html game right that can play in the browser or potentially be ported to mobile on react native uh but the idea that it would be like an old school 8bit game right so possibly like topdown view like the original zelda game and uh we would recreate things on campus and they would have a little guy that could walk around and see everything so just a basic thing but but we thought uh it would be cool to do it in react because my colleague really wants to learn react so he needs to get some projects using react like that so he would actually be more of the lead but i could help out work with it too and we could potentially work on it during the stream um i don't know i thought it would be fun to do i've always kind of wanted to try to do a javascript game i think my kids would really enjoy something like that so anyway if anybody thinks that sounds cool or interesting let me know then maybe i can move forward with that project um but if nobody's interested then i'm not gonna you know try to put it on the stream i'd rather do some things that that you are more interested in uh you know if possible so anyway i just thought i'd bring it up let's see harshit has reminded me to commit this did i um let's see get thanks for reminding me uh i don't want you all if you if you want to clone the repo or you know or fork i don't want you to have the uh older versions unless you have the latest one great okay uh so inn is here hey anna how's it going um and it says what accomplishment are you most proud of well aside from all my kids and uh getting married to my wife um in terms of what i do with you know with web development hmm i want to say like whatever my latest thing i come out with is always what i'm most proud of right so i've been really proud of like the resource center i was really proud of when i first made it and um i got a lot of great positive feedback um but then now when i look at the original resource center that i made i just see like uh all that mess of code so it's kind of a hard question to answer with projects like this you know like we do because they get old you know and you can see the mistakes as they get old so it's hard to stay as proud of them as as you know i was initially um but i would i would say i i did the first react site that i did for a paying client so it was on the side it wasn't for the university uh that was the first site i think that i ever that i ever launched that i didn't react i used next.js for it serverside rendering i was pulling in data from the wordpress api it was very similar to what we did with catechetical institute i was really proud of that i worked on it just so much that was one of my biggest projects for a client that was that that may have been the project that i'm most proud of currently uh it was great and then it provided a lot of you know extra income for my family uh i got to uh use a lot of that money to um i bring my wife on a trip that i was i was going to a conference and it was our 10year anniversary so we were able to um pretend like we were rich for a couple of days and go to really nice restaurants and things so uh she really really liked that so that was cool that that product the project itself i learned so much on and i worked through so many things that just made me want to like quit being a web developer altogether and just move to a cabin with no electricity um but i worked through it all and uh so i was just so relieved and excited and then the the result you know the the reward for the work was was awesome and uh let me do some nice things for my family too so anyway sorry i went on a little bit about that but i never really thought of it until you asked the question so i i i wanted to give you a good answer but anyway that's that's my most the accomplishment that i am most proud of at least from what i can think up right now on the spot okay harshit mentions that stylus is even faster to write than sass interesting i i never tried to use stylus um it seemed to me stylus was always like um not as widely used um on on projects than sas that seemed to be the front runner has anyone else used stylus what are your thoughts on it john hanson says in the react project i'm doing i did switch from i switched to scss from sas you're right so easy to cut and paste style components work very much like scss and js uh strings um as in like nested so awesome yeah so i mean like it's just um it's nice to have the freedom to pull in css from previous projects or from other frameworks and things and just have it work and not have to convert it um so yeah s that that outweighs the ease of typing in my mind uh and that pushed me to use scss instead of sas so let's see harsh it says i like the the and the ampersand the most in sas cool yeah sas has some really cool features like i only i i don't even use most of the cool features really i i don't think i utilize it as much as i could um but it's really cool uh rook says would using some oh i'm sorry i skipped the question um ein ein bischen uh sorry if i'm mispronouncing that says can you tell me the advantage of using graphql or why you would need it okay so for graphql in previous projects we used the wordpress api which is a rest api and that worked well the problem was sometimes we had we had to choose there was a tradeoff we could either make multiple api calls and get exactly the data that we wanted with those api calls or we could make one api call and get a lot like more data than we needed with graphql you don't have that problem in graphql there are not preset endpoints that you just get all the data from you tell the api exactly what you need and it gives you just that data that you need so you can be more efficient in terms of both the amount of api calls you make and the amount of data sent on those calls so that's why we switched up in this project to using graphql i do think that it is better than a normal rest api i suspect that in time it will kind of overtake the rest apis um i mean clearly i think it is it is better uh so it's i it's just a matter of time before more people adopt it okay so rook's question is would using something like normalize css be beneficial to this project might just try and do that to mess around with the get things i learned um i don't know i'm not sure if normalized css would be beneficial or if essentially maybe uh if materialize or i'm sorry material ui is already taking care of some of that stuff it does anybody know or has worked with material ui to know whether or not that is kind of taken care of uh i'm not opposed to bringing into the project if there's some benefit to it uh but if it wouldn't be necessary then it'd probably be better to not have it in the project so i don't know offhand i'd have to you know check out check that out maybe somebody's probably had a similar uh thought before so i'm sure that the answers out there let's see harshit says you should upgrade from node 8.5 to node 8.9 lts yeah maybe i'll upgrade it um at some point i really i really want to get that um that application that we were working on um the styles for that done that salesforce one so i'm probably going to take the rest of the day and and really work on that i did have some positive feedback from some people higher up at the university on it but they did notice some of those things that that we had noticed that i didn't complete yet so i told him i was working on it so i i'd really kind of like to get it done as soon as possible but yeah i would like to stay up to date on that so um i will try to get that done soon okay harshit says the airbnb guide is the best so we were talking about style guys it forces you to write good code if you have lansing in editor cool rook also agrees about the airbnb guide and um uh it says with minimal adjustment you can make it fit your preferences okay i'm gonna have to check that out the the using the airbnb guide um yeah so there are some adjustments that i would like to make depending on what's already in the guide i i tell you truth i looked at it a long time ago i don't remember anything from it um so i'm gonna have to look at it again but yeah we should we definitely should that would be a good practice for people to get used to using a guide because potentially you might need to use it i guess i get a decent amount of people who are looking for work and they're in here just you know trying to get some experience submit a few pull requests so it'd be good for them to get used to that because they may need to use it on their job so that's a great reason and then just in general it would help keep our cl our code better and i like harshet's idea they're saying it forces you to write good code um let's see ein ambition says uh games are too much work yeah um i agree with you there this would definitely be if we were to do a game it would be a longterm project i'm talking like maybe we want to have it done by next year around this time so we'd certainly have a lot of time to work on it um so yeah uh we'll see oh it's not i'm not convinced yet that we will do it just a possibility like i said i think it would be really cool for the students um and it might be fun for us to make uh so anyway i appreciate the input though um so anyway if anybody else has any opinions on that please let me know um harshad says we might use canvas yeah um oh harsha's asking me so do do you what do you want to be done this weekend in this project um okay so in the bulletin project let's see what do we need done still i just saw something okay here's something that should be done but it's it's on the wish list so here's something that doesn't absolutely need to be done but it would be awesome if it could get done this is something that i wanted to do with the bulletin since i first launched it last over a year ago um i think it would be really cool if so right we already have a user we have their email address right so it would be awesome if based on their email address we could display like potentially up in the corner have a little circular icon with potentially maybe just their initials or if they happen to have their email address linked up with something like gravatar we could pull in their data from there um display their picture i'm thinking like you know how google does when you're logged into google some of google stuff you have your picture there and then when they click on that they could bring up let's say their profile in their profile they could if they wanted to add in their preferred name and potentially their preferences so whether or not they want by default the grid layout or the list layout um if they would like trying to think i i would love to have a way to personalize like what they see i'd i'll still want control of like the very top area in case there's some emergency announcement that we need to put there but um maybe what categories they like to see and yeah i think you know there's so many things we could do with that like potentially a history of all the bulletin announcements that they've submitted uh it would be cool to be able to see that so certainly that that's definitely on the wish list it may be complex if you're interested in taking a shot at something like that feel free but otherwise there's really only some small things that need change and it's mainly um just like ui stuff just kind of the look style changes so i don't know that's all i have and i'm definitely open to suggestions of what other what functionality should this have is there something obvious that you would expect it to have that it doesn't have something i'm missing uh or maybe something less obvious that's just cool just to reiterate for those of you who who haven't heard this already the goal of this is internal bulletin so it's for university employees only there they just get announcements about schedules so any events that are happening on campus any announcements about uh holidays coming up or new employees or if an employee had a baby um or if there was um and one of the employees relatives passed away uh you know they'll put like funeral arrangement stuff in there announcements from the president uh of the university so things like that go in here so given that given what the audience is and the content is i'm open to suggestions so um anyway so i know that's not like super specific harsh it uh so it may be uh at this point if anybody wants to contribute to this project it's it's kind of like imagination time right uh i'm open to other features all right anna says thanks for answering oh you're welcome no problem that was a really fun question so i i like that question thanks for asking it okay so tara incognita says i'm not sure for my current skill am i really able to work efficiently on the oh i'm sorry i think i read that wrong i'm not sure from my current skill i'm not sure that i'm really able to work efficiently on the game project from my current skill i just rephrased that a bit it was easier for me to say um but on a on details of that project uh might make me confirmed about contributing on um okay so yeah we can if there's some interest in the project i could get more so like some detailed stuff on exactly how we would be doing it and um so yeah i'll have to think about that maybe next week sometime i can devote a little bit of time in the question and answer to really getting in more details of what we would want uh harshad said stylus is great it even gets rid of uh colons and has many great mixins built in that's cool oh our says view beautify is the material design framework for vue in its building stylus that's cool hardship also says material ui should have a reset like like normalize okay cool so that's good to know um let's see ein bishon says there's no guide that allows not ending in semicolons oh man that's gonna be a problem then um i've gotten so used to not putting semicolons in uh rook says you can modify the rule well that's good that's good um definitely would um if we can change that then i'm i'm in yeah let's see uh i'm mission says how would you store users history on the word on the wordpress server or locally um okay so i'm thinking uh let me let me show you where's my code so let's check out our server for a second here so so like we've already got this you know store going right this is mongodb so i'm thinking we would store the data there uh and since we're already checking it to make sure that the user's like really uh supposed to be there logged in it shouldn't be too much more of a stretch to grab all the user data at the same time so that was my thought if i were going to do it that's where i would start out at is well let's store all the user data in the same place and then pull it all from there so if there are better ways to do that i'm definitely open to that but that was those were were my thoughts and we certainly could store things in local storage um and then just update as needed i think that's kind of a good good practice as well let's see uh sat tinder says don't be lazy because of a few viewers bro um i'm not exactly sure what that was in response that was at 3 45. so that's a couple minutes ago um i don't remember what i was talking about so anyway so tinder if you could uh let me know what that was what i was talking about let me scroll back and see if i can remember uh fabio says um awesome hi from brazil thanks for sharing the gold with us i'm trying to follow the subject i'm a back end developer back in only developer try to use react in both sides front and back is my new challenge awesome that's really cool i i really enjoy uh talking with people that um can't come from back end so like i'm i'm coming from front end and trying to learn more back end uh and i think it's just an interesting flow of realizing like what's what's hard about front end for people who are normally backend and coming into it that's kind of cool uh and then like what what strengths and weaknesses do people bring from both sides so anyway i'm glad to have you here please feel free to add your your input and your suggestions i'm lacking in the back end experience i'm getting much better than i was with back end even a few months ago but that's certainly not i wouldn't call that my strong point now much more front end oriented so i definitely welcome you know your expertise uh so thanks for uh thanks for saying hi in the live chat uh ryan says good afternoon hey how's it going um let's see harsha says i'm back my laptop battery died oh okay cool uh glad you're back and let's see oh okay you picked it up on the phone harshit says okay so horseshit learn back in first as well that explains why uh your expertise then with with back end so that's awesome yeah i like i said i it's always crazy like there are things that front end people seem are like oh that's so easy but then you talk to a backend person and they're like no way i don't mess with that and then vice versa there's stuff that to a background person a backend person is like oh yeah no problem but a frontend person like me will just stare at that like i have no idea what's going on here so um anyway it's cool i think it's great to have people of all uh different backgrounds and skill sets it just makes our projects so much better and being able to share all that knowledge is it's really cool i don't know of anywhere else where this kind of thing is happening where we have such a large diverse community all working on projects together i know it happens on github but like in terms of the live stream and being able live to to work with each other on this i haven't seen anything like it before i think it's awesome and see ryan says i'm learning how to do react from working with php in my sql uh development on a on a programming career okay cool i'm really glad that we have uh someone with php my sql knowledge because we're definitely we're running wordpress um for for several different sites and um it's awesome that you're here and i you know please feel free to when we work on php stuff which we do occasionally feel free to let me know how i could do it better ambition says back end is way more open front end is all just javascript yeah yeah you're right about that that's a good and a bad thing if you want to do front end there's no confusion about what language to learn javascript is it but at the same time if you don't really like javascript you're stuck with it uh gleb says hello from moscow hey how's it going thanks for joining us what time is it in moscow right now it's got to be pretty getting pretty late right okay terry incarnation sorry about the missing words in my last comment thanks for replying oh don't worry about it i mean i'm like not a problem uh it was more just me trying to read it too fast it was confusing um so i'll follow the updates that's coming soon and i'm definitely interested in working with this current project all right great great i'm looking forward to uh to you working on this so um awesome uh ryan says i've been trying to follow your videos on react and learn more from end frameworks cool hopefully they've been helpful to you let me know if there's anything i'm not going over that you'd like to know about or somehow i could improve uh the experience so i actually don't often get suggestions on how i do these things the only suggestion that i i used to get consistently was you talk too much code more um and then i've tried to do that um but i want to make this as good as i can in terms of my contribution to the stream so suggestions are welcome robert says i learned something new every live stream thanks oh awesome i'm so happy to hear that i'm really like that's what keeps me going as long as i know that there's some benefit for you all from this stream i will keep going it definitely benefits me but if it benefits you all and it benefits free code camp i'm going to keep going for as long as my boss will let me do this um even then if my boss says you're not allowed to stream from work anymore i'm going to try to figure out some way to keep doing it outside of work or somehow because um i think this is a really cool thing we have going here all right gleb says yeah it's 11 p.m here okay cool thanks for staying up late to watch this i i mean 11 may or may not seem late depending on whether you're a night person or not but um i don't know i have a little kid so 11 seems late to me now uh jimmy says hi uh are you gonna make um a tutorial on angular i don't have any plans to do an angular tutorial right now i certainly don't feel confident enough in my angular skills which are pretty much nonexistent to be able to teach other people but free code camp does have someone that's doing an angular project right now so i think last week at some point that video was published so just check back a little bit in the in the videos and um uh in the list of free code camp videos and you'll see one that's at the beginning of an angular tutorial so i haven't watched it yet um but i'm assuming that it's good quality i mean everybody is really knowledgeable and does a great job here on on this channel um i don't know if i want to include myself in that category you all see how many times i mess up on my stream but all the other people are really knowledgeable so uh so check that out um says it's 1 25 a.m uh where he's at uh yeah i figured uh that it was it was even later there so i usually don't ask how late it is over there because i i have so many people from that area of the world that i've like i can usually always figure out what time it is there um just from from hearing it so much in the live stream all right ryan says i'm looking at using react and redux for building an ecommerce store i have a client that would like one built on the framework react that's really i'm cool to think i i kind of remember somebody doing something similar and telling me about it recently but i cannot remember who it was if anybody watching now was the person that recently built some ecommerce stuff with react let me know it's possible i may have just seen somebody on twitter talk about it and then i i viewed it so it may not have been directly to me man i really wish that i could remember what that was so i could give you a link to it now that would help out but that's really awesome um i i'm interested in seeing uh what you come up with so i don't know if this is possible but if you're allowed to have the code on github available like publicly available i'd love to see that uh that repository and if i have time i i may even help out with it and and submit a pull request um but let let me know if it's possible then please send me the link and i think that'd be really cool harshit says to do the ecommerce thing use gatsby maybe uh flipkart uses gatsby react uh which is as it's as large as amazon here okay awesome okay cool all right well i've gotten to the bottom of the live chat and it's getting nearly time for me to uh uh to wrap things up here and go home for the weekend so uh thank you so much uh for all your your help in this stream and i i hope i hope you'll learn something from it uh i know i did and i will be back i should be back monday i have to go see a doctor about getting surgery uh done on my wrist but that's in the morning on monday hopefully my appointment isn't really long so i should be okay to stream um again on monday and uh yeah so everybody have a great weekend and i'll see you all next week
