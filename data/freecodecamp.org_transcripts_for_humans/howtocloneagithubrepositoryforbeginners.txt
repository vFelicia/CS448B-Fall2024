With timestamps:

00:01 - hey everyone it's jesse
00:03 - and today i'm going to walk through how
00:06 - to clone a github repository
00:09 - so i'm going to start
00:11 - way at the beginning by installing node
00:15 - and with that is going to come npm
00:19 - node package manager
00:21 - we're going to go over how to install
00:23 - git
00:24 - on your local machine
00:26 - and then we're going to actually take a
00:29 - repository
00:30 - from github we're going to clone it onto
00:32 - our machine
00:33 - and we're going to install all the
00:35 - packages that we need
00:37 - and then start it up so that we could
00:39 - actually see the project
00:42 - on our local machine and make changes if
00:45 - we want
00:46 - so let's get started
00:49 - you can see i have a command line
00:51 - terminal open
00:53 - so
00:54 - i use item and i have some
00:57 - custom colors here so if your terminal
00:59 - doesn't look like mine don't worry about
01:01 - it it'll still work so whether you're on
01:05 - windows mac or linux you know this
01:08 - should work pretty much the same way
01:11 - i'm on a mac
01:12 - so my commands will match up with the
01:14 - linux commands there may be some slight
01:16 - differences on windows so if some of
01:18 - these commands aren't working check on
01:20 - what the
01:21 - windows equivalent of these mac commands
01:24 - are so the first thing you want to do is
01:28 - install
01:29 - node okay this is nodejs it allows you
01:32 - to run server-side code
01:35 - server-side javascript code okay
01:39 - you can go to the nodejs website
01:42 - and the the download page
01:44 - will
01:45 - recommend downloads depending on your
01:47 - system
01:48 - so the safest bet is to go with the lts
01:52 - if you like to live on the edge and be
01:55 - you'll have the newest features you you
01:56 - could try to do the the current one
01:59 - but you know
02:01 - you can download this now there are
02:02 - other ways to download note on your
02:04 - machine i'm going over one way to do it
02:08 - so if you see a different tutorial that
02:09 - says something different then
02:11 - it doesn't mean it's wrong
02:13 - there there are just a variety of ways
02:15 - to do it
02:18 - when we download node this will also
02:21 - come with node package manager
02:24 - so i'm not going to download node again
02:27 - but just to test to make sure that we do
02:29 - have node on our system we can run node
02:32 - dash v
02:33 - and it tells me the version number of
02:36 - node
02:38 - so i know i have node to make sure i
02:40 - have npm node package manager in my
02:43 - system i can also run npm-v
02:48 - i'm sorry it's hyphen it's not a it's
02:49 - not a dash it's hyphen v
02:51 - okay and i have npm as well
02:55 - okay so after you go through that
02:57 - process which which may take a while
03:00 - okay now you're ready to go on to get
03:04 - now at any point
03:06 - during this process
03:08 - you if you're on a mac you may be
03:10 - prompted to download xcode
03:14 - download xcode
03:16 - it might take a while but you're going
03:17 - to need xcode you're also going to want
03:19 - to make sure you have the
03:21 - administrator access to your machine
03:24 - if you don't have admin access
03:27 - a lot of this probably will not work so
03:29 - you're going to have to figure out you
03:31 - know a way to get
03:32 - administrator access
03:34 - somehow
03:36 - on a machine
03:38 - so there are also a variety of ways to
03:40 - install git locally
03:42 - for me
03:43 - the way i usually use it seems to be the
03:46 - easiest is to download the github
03:49 - desktop app
03:51 - and then all your command line tools for
03:53 - git will also be installed
03:58 - it's really easy this is like download
04:01 - you you click it and it
04:03 - it's nice so you don't really have to
04:04 - have a lot of command line experience so
04:07 - that's why i like it
04:10 - if you want and you're not really
04:12 - comfortable with the command line you
04:14 - can even use this desktop app to do a
04:16 - lot of the things and get that we're
04:18 - going to do here on the command line so
04:21 - it's entirely up to you i've never used
04:23 - the desktop app
04:25 - but
04:26 - the result will be the same whether you
04:28 - use the command line or the desktop app
04:30 - so go ahead and download that
04:32 - when that's finished you can also check
04:35 - to make sure you have get installed by
04:37 - saying git v
04:39 - oops
04:40 - okay so the v doesn't work oh you
04:43 - actually have to type version
04:46 - okay
04:47 - so we have get installed
04:52 - now
04:53 - we can get a
04:55 - repository
04:58 - so let's go to github
05:02 - if you have a github account you'll see
05:03 - a screen like this i happen to be using
05:05 - the dark theme for github
05:08 - so
05:09 - by default you it won't look like this
05:11 - it'll be a lot lighter it won't have the
05:13 - black background and everything uh don't
05:16 - worry it you know works the same way no
05:18 - matter what the colors are
05:21 - if you don't have an account you may see
05:24 - a little bit of a different screen
05:27 - but what we want to do is navigate to an
05:29 - actual repository so i've already
05:31 - selected a repository
05:33 - uh that i've done and this is one i i
05:36 - finished up a week or two ago
05:40 - and
05:43 - you'll see here is a
05:46 - clone or download button
05:48 - that's where we want to be
05:50 - all right we want to go to the cloner
05:51 - download button
05:53 - a good repository will have some
05:55 - instructions
05:56 - so
05:57 - this one happens to have instructions
06:02 - to walk you through
06:04 - how to clone and install it so that can
06:06 - be very helpful you won't always see
06:09 - that in a repository though
06:15 - so what you
06:17 - should do first is click on this cloner
06:19 - download button
06:21 - and you want to grab
06:23 - this
06:25 - pass uh
06:26 - sorry not password uh address that's
06:29 - what i'm thinking of you want to get
06:31 - this address so you can copy it to your
06:33 - clipboard
06:34 - now you have to have ssh keys set up for
06:37 - this to work if you haven't done that
06:40 - you can just use this link
06:43 - the https link
06:46 - uh now we're not going to use these ways
06:49 - but if you'd like to use that desktop
06:51 - version you can just open it up right in
06:53 - the desktop version like this or you can
06:56 - download the zip file
06:58 - so we're going to use
07:01 - the ssh version of this
07:04 - on the command line
07:07 - so let's go back here to our command
07:09 - line by default your terminal will put
07:10 - you in your
07:12 - your home directory i don't like to
07:15 - clone repositories right to my home
07:17 - directory it makes things too messy so i
07:20 - create a directory called projects so
07:22 - let's go into that so i'm going to cd
07:25 - all right to change directory
07:27 - and i'm going to type projects okay
07:30 - if
07:31 - if you're new to the command line
07:33 - you'll notice that i didn't type the
07:34 - whole thing out a nice trick is just to
07:37 - type the first few letters of the
07:39 - directory or file you're looking for and
07:41 - then hit the tab key and it'll auto
07:44 - complete the rest of it
07:47 - so let's hit enter now i'm in the
07:48 - projects folder
07:50 - if i do ls it'll show me all the folders
07:53 - in
07:54 - this projects folder so you can see i
07:56 - have a lot of stuff going on in here
07:58 - uh so you can see how messy it would get
08:01 - if i put all of that in my home
08:03 - directory so
08:04 - that's why i like to separate it out
08:08 - so what we want to do now remember we've
08:10 - copied this so we still have that copy
08:13 - to our clipboard so we want to use that
08:15 - git command so we're going to say git
08:18 - space clone
08:20 - i'm going to put another space in there
08:22 - and then we're going to paste in
08:25 - that link that we just copied on github
08:28 - when we hit enter
08:31 - that whole project now has been saved
08:34 - so
08:36 - if we do an ls again we can see that we
08:39 - now have a folder
08:41 - and that folder is called react seating
08:43 - manager
08:44 - so the folder name matches
08:47 - the project name
08:49 - so if you want to do anything with the
08:51 - project we have to remember to actually
08:53 - go into that folder
08:55 - i've often made the mistake of starting
08:57 - to work
08:58 - in this projects folder
09:00 - and not
09:02 - realizing why nothing is working
09:05 - because i'm not i didn't actually go
09:06 - into that folder i actually made that
09:08 - mistake
09:10 - uh yesterday
09:11 - so
09:13 - it's very common don't worry if it
09:14 - happens but you want to make sure you cd
09:18 - right into that
09:20 - folder so you can see it's not i'm
09:23 - trying to hit tab and it's not auto
09:25 - completing because i have so many things
09:27 - that start with react
09:29 - it doesn't know which one i want so i
09:31 - have to type a little bit more
09:35 - there we are
09:36 - now let's go into there and
09:39 - if we hit ls
09:41 - and then give it a flag
09:43 - which means we're going to say hyphen
09:45 - and then put a letter in this case a
09:49 - we can see even the hidden files in this
09:52 - repository so we're seeing everything
09:53 - now and we see this dot get
09:56 - which anything with a dot in front is
09:57 - normally hidden
09:59 - but that tells us that this is a git
10:01 - repository
10:02 - which we should expect because we just
10:04 - got it from github
10:06 - all right but
10:07 - we also have this package json file and
10:10 - that's an important file so let's take a
10:13 - look at it before we do anything else
10:16 - and that package package.json file is
10:18 - going to show us a lot of what's going
10:19 - to go on
10:20 - uh when we go to install and then run
10:24 - the code that's here
10:26 - so
10:27 - i'm going to open up this project in
10:29 - visual studio code you can open it up in
10:33 - whatever editor you like to use adam is
10:36 - also another good editor it's open
10:38 - source from
10:40 - github visual studio code is also free
10:43 - there are some other paid editors like
10:45 - sublime
10:47 - which which are very good
10:49 - but no matter what editor you use it'll
10:51 - still
10:52 - get the job done
10:54 - so
10:55 - i'm going to type code
10:56 - space and then a period and that's going
10:59 - to open up this whole directory in
11:02 - visual studio code and let's maximize
11:05 - this so we have a little bit more space
11:08 - and go to that package json
11:10 - and now i'm going to make some more
11:12 - space for us here and we can see the
11:15 - package.json file is like instructions
11:19 - to the computer
11:20 - and to us as the the developers
11:24 - uh about what this project is built from
11:27 - and what it can do
11:30 - so
11:31 - obviously we have name version right
11:34 - home page which is nice
11:36 - for this particular project you you
11:38 - could go and see an action at the home
11:40 - page
11:41 - we have the dependencies
11:44 - now these tell
11:46 - the computer
11:49 - in this case the node package manager
11:53 - it tells the node package manager what
11:55 - packages need to be installed
11:58 - for this project to run properly
12:01 - and so
12:02 - this is great this is what allows us to
12:05 - run
12:07 - projects on our machine and be confident
12:11 - that they're most likely going to work
12:13 - because we're getting all the same
12:15 - packages in all the same versions
12:21 - we don't
12:23 - actually store all the code for all
12:25 - those packages in our repository on
12:27 - github that's why we're able to
12:30 - push code to github and download code
12:32 - from github so quickly because the bulk
12:34 - of the project
12:36 - code is going to be here in these
12:38 - dependencies right so by simply
12:41 - including this package.json file we're
12:43 - giving all the instructions that uh
12:46 - npm needs to rebuild this on someone
12:49 - else's computer so the packages here the
12:53 - the node modules live
12:56 - on my computer and if you download it
12:58 - they'll live on your computer but
13:00 - they'll never go up to github
13:05 - we also have our scripts now our scripts
13:07 - are going to tell us
13:09 - what commands we need to use to run this
13:12 - project
13:13 - so it
13:14 - in this project
13:16 - we do have
13:18 - oops where we at
13:20 - here we go
13:22 - in this project we do have
13:24 - a readme that gives instructions on how
13:26 - to run the project but you won't always
13:28 - have that sometimes
13:30 - the maintainers or repository may not
13:33 - have instructions written out like that
13:35 - so in that case
13:38 - we can look here and see what kind of
13:40 - scripts we have so pre-deploy we're not
13:42 - ready for deployment yet right we just
13:44 - download this
13:45 - but we can try this
13:47 - to start right and this will run react
13:50 - scripts start
13:52 - our build is going to get ready for
13:54 - deployment
13:55 - we don't want to run tests yet and we
13:57 - don't want to eject
13:59 - so
14:00 - pretty safe to assume if we want to run
14:02 - this locally for development purposes
14:05 - we're going to use start okay and in
14:07 - fact that's what it does say in the
14:08 - readme to use
14:10 - so
14:11 - let's
14:12 - run
14:14 - the start command
14:16 - to start script
14:18 - and see what happens
14:22 - whoops before we do that
14:25 - let's install our packages right
14:28 - i guess we could try the start script
14:29 - first let's see what happens when we do
14:31 - that so we could run npm run start
14:35 - on newer versions of npm you can leave
14:37 - the run out
14:38 - so i i believe that's optional in newer
14:41 - versions
14:43 - see look what happened we got all kind
14:45 - of errors it's looking for all these
14:47 - packages and we don't have them
14:49 - all right so now let's run
14:52 - uh you can run npm
14:55 - install
14:57 - okay so npm install will download all
14:59 - those packages
15:02 - there's an alternative to npm called
15:04 - yarn i happen to be using yarn on this
15:07 - project if you're interested in yarn you
15:10 - can read more about it and choose to
15:12 - download it if you want it does the same
15:14 - thing as npm
15:17 - so i'm gonna run yarn
15:21 - you can run npm install if you're
15:24 - following along and it'll do the same
15:26 - thing for us
15:29 - so when we hit enter
15:31 - it's going to get all those packages
15:35 - and install them
15:37 - and depending on how large the project
15:39 - is and how many packages you know this
15:41 - could take a while you know also if
15:44 - you have a slow internet connection or
15:46 - you're running this on an old computer
15:48 - you know you may have time to go get a
15:50 - cup of coffee
15:52 - but in this case it's a small project on
15:55 - a fast computer with a fast connection
15:57 - so it's done already
15:59 - let's go back now
16:01 - and look
16:03 - at what's new
16:05 - so we can see our folder tree here
16:08 - and look we have this node modules
16:11 - folder that was not there before if we
16:13 - take a peek in here
16:15 - here's
16:16 - a bunch of packages
16:19 - it's huge right
16:21 - let's close that thing up
16:24 - because each one of these packages also
16:27 - has a package json file
16:29 - with more packages
16:31 - right
16:32 - so
16:32 - our
16:33 - the bulk of our project's code is in
16:36 - this node modules folder okay so
16:40 - that's why we have this git ignore file
16:42 - and this tells says these are all the
16:45 - files that i want get to ignore and i
16:48 - don't want these saved to github
16:51 - uh so node modules is there
16:54 - because that would be a whole lot to
16:56 - push up to github right
17:00 - so now that we have that let's try to
17:02 - run our start script again
17:04 - and see what happens this time
17:07 - so i'm going to hit the up arrow key and
17:09 - that's going to let me just run through
17:11 - all the commands that i've recently
17:13 - typed so this is a big time saver so i'm
17:16 - going to go back up to npm run start
17:19 - hit enter
17:20 - and let's see what happens all right so
17:23 - it's telling me something is already
17:25 - running on port 3000 i happen to have
17:27 - another project running
17:30 - but that's not a big deal we can just
17:32 - run on a different port so i'm going to
17:34 - hit y
17:35 - and hit enter
17:36 - to run on a different port
17:38 - now
17:40 - on my other screen
17:42 - this just opened
17:44 - okay
17:45 - so this will pop up in your default
17:48 - browser
17:49 - at localhost 3001
17:52 - so
17:53 - for you if you don't have any other
17:55 - projects running it'll probably be
17:57 - localhost 3000
18:00 - but we now have this react seating
18:03 - manager
18:05 - project
18:06 - and
18:08 - you know we can
18:10 - we can run it it works it works just
18:12 - like as if it was on
18:16 - online so if you went to that url that's
18:19 - in our package json file
18:21 - you would see the same thing so this is
18:24 - running it's working
18:26 - but
18:27 - it's running off of our code here
18:31 - and now we can make changes
18:34 - so if we go to our our file let's just
18:36 - change something very obvious
18:39 - uh where's our
18:43 - title
18:51 - there we are
18:52 - let's go
18:53 - i'm really excited about this so let's
18:56 - add three exclamation points
19:00 - i think it's always a good idea we're
19:02 - gonna save to use either one exclamation
19:05 - point or three
19:06 - for some reason two just bothers me and
19:08 - here you are see we've changed the code
19:10 - we've changed the program and we see an
19:12 - automatic change there not every project
19:15 - is going to automatically change like
19:16 - that it depends on how the repository
19:18 - owner
19:20 - set up the project
19:22 - but in this case
19:24 - it automatically updates
19:27 - so
19:28 - that's it that's all you need to know to
19:30 - download a project
19:33 - now there are some projects that aren't
19:35 - javascript based
19:37 - you may need some other things for that
19:40 - but
19:42 - a lot of projects on github are
19:44 - javascript race so if you're a web
19:46 - developer you're most likely going to be
19:48 - doing something similar to this
19:51 - maybe in another video we'll cover what
19:54 - to do next like i may change is now what
19:57 - okay
19:58 - but for now
20:00 - you should know everything you need to
20:01 - know to pull down a repository quick
20:04 - recap before we before we go
20:07 - step one make sure you have node
20:09 - installed on your machine
20:12 - step two
20:13 - uh and also node comes with npm so it's
20:16 - not a separate install step two
20:18 - make sure you have get installed on your
20:20 - machine
20:21 - right we used github desktop
20:24 - app to kind of do the installation for
20:27 - us
20:28 - and then
20:30 - step three
20:32 - is find a repository on github
20:35 - and get that clone
20:38 - link
20:40 - okay when you do that you can run git
20:42 - clone paste the link in and now you have
20:44 - the repository
20:46 - if there are instructions in the readme
20:49 - read over those first and follow those
20:52 - a project may have some extra steps you
20:54 - need to do so
20:56 - if a project readme varies from what
20:58 - i've said in this video go with that
21:00 - particular uh project's instructions
21:03 - so let me know if this video was helpful
21:06 - uh if i messed up anything or there's
21:08 - something else that you'd like me to to
21:10 - cover
21:12 - if if this is helpful to you i'd love to
21:14 - do more videos so uh please
21:17 - let me know
21:19 - if you like it that's awesome if you
21:20 - know you could like the video but really
21:22 - i love feedback so you know let me know
21:25 - in the comments uh what you think
21:28 - and hopefully i'll be back soon uh with
21:30 - another video and be sure to check out
21:32 - my live streams on the free code camp
21:34 - youtube channel as well
21:36 - uh have a great day i'll see you

Cleaned transcript:

hey everyone it's jesse and today i'm going to walk through how to clone a github repository so i'm going to start way at the beginning by installing node and with that is going to come npm node package manager we're going to go over how to install git on your local machine and then we're going to actually take a repository from github we're going to clone it onto our machine and we're going to install all the packages that we need and then start it up so that we could actually see the project on our local machine and make changes if we want so let's get started you can see i have a command line terminal open so i use item and i have some custom colors here so if your terminal doesn't look like mine don't worry about it it'll still work so whether you're on windows mac or linux you know this should work pretty much the same way i'm on a mac so my commands will match up with the linux commands there may be some slight differences on windows so if some of these commands aren't working check on what the windows equivalent of these mac commands are so the first thing you want to do is install node okay this is nodejs it allows you to run serverside code serverside javascript code okay you can go to the nodejs website and the the download page will recommend downloads depending on your system so the safest bet is to go with the lts if you like to live on the edge and be you'll have the newest features you you could try to do the the current one but you know you can download this now there are other ways to download note on your machine i'm going over one way to do it so if you see a different tutorial that says something different then it doesn't mean it's wrong there there are just a variety of ways to do it when we download node this will also come with node package manager so i'm not going to download node again but just to test to make sure that we do have node on our system we can run node dash v and it tells me the version number of node so i know i have node to make sure i have npm node package manager in my system i can also run npmv i'm sorry it's hyphen it's not a it's not a dash it's hyphen v okay and i have npm as well okay so after you go through that process which which may take a while okay now you're ready to go on to get now at any point during this process you if you're on a mac you may be prompted to download xcode download xcode it might take a while but you're going to need xcode you're also going to want to make sure you have the administrator access to your machine if you don't have admin access a lot of this probably will not work so you're going to have to figure out you know a way to get administrator access somehow on a machine so there are also a variety of ways to install git locally for me the way i usually use it seems to be the easiest is to download the github desktop app and then all your command line tools for git will also be installed it's really easy this is like download you you click it and it it's nice so you don't really have to have a lot of command line experience so that's why i like it if you want and you're not really comfortable with the command line you can even use this desktop app to do a lot of the things and get that we're going to do here on the command line so it's entirely up to you i've never used the desktop app but the result will be the same whether you use the command line or the desktop app so go ahead and download that when that's finished you can also check to make sure you have get installed by saying git v oops okay so the v doesn't work oh you actually have to type version okay so we have get installed now we can get a repository so let's go to github if you have a github account you'll see a screen like this i happen to be using the dark theme for github so by default you it won't look like this it'll be a lot lighter it won't have the black background and everything uh don't worry it you know works the same way no matter what the colors are if you don't have an account you may see a little bit of a different screen but what we want to do is navigate to an actual repository so i've already selected a repository uh that i've done and this is one i i finished up a week or two ago and you'll see here is a clone or download button that's where we want to be all right we want to go to the cloner download button a good repository will have some instructions so this one happens to have instructions to walk you through how to clone and install it so that can be very helpful you won't always see that in a repository though so what you should do first is click on this cloner download button and you want to grab this pass uh sorry not password uh address that's what i'm thinking of you want to get this address so you can copy it to your clipboard now you have to have ssh keys set up for this to work if you haven't done that you can just use this link the https link uh now we're not going to use these ways but if you'd like to use that desktop version you can just open it up right in the desktop version like this or you can download the zip file so we're going to use the ssh version of this on the command line so let's go back here to our command line by default your terminal will put you in your your home directory i don't like to clone repositories right to my home directory it makes things too messy so i create a directory called projects so let's go into that so i'm going to cd all right to change directory and i'm going to type projects okay if if you're new to the command line you'll notice that i didn't type the whole thing out a nice trick is just to type the first few letters of the directory or file you're looking for and then hit the tab key and it'll auto complete the rest of it so let's hit enter now i'm in the projects folder if i do ls it'll show me all the folders in this projects folder so you can see i have a lot of stuff going on in here uh so you can see how messy it would get if i put all of that in my home directory so that's why i like to separate it out so what we want to do now remember we've copied this so we still have that copy to our clipboard so we want to use that git command so we're going to say git space clone i'm going to put another space in there and then we're going to paste in that link that we just copied on github when we hit enter that whole project now has been saved so if we do an ls again we can see that we now have a folder and that folder is called react seating manager so the folder name matches the project name so if you want to do anything with the project we have to remember to actually go into that folder i've often made the mistake of starting to work in this projects folder and not realizing why nothing is working because i'm not i didn't actually go into that folder i actually made that mistake uh yesterday so it's very common don't worry if it happens but you want to make sure you cd right into that folder so you can see it's not i'm trying to hit tab and it's not auto completing because i have so many things that start with react it doesn't know which one i want so i have to type a little bit more there we are now let's go into there and if we hit ls and then give it a flag which means we're going to say hyphen and then put a letter in this case a we can see even the hidden files in this repository so we're seeing everything now and we see this dot get which anything with a dot in front is normally hidden but that tells us that this is a git repository which we should expect because we just got it from github all right but we also have this package json file and that's an important file so let's take a look at it before we do anything else and that package package.json file is going to show us a lot of what's going to go on uh when we go to install and then run the code that's here so i'm going to open up this project in visual studio code you can open it up in whatever editor you like to use adam is also another good editor it's open source from github visual studio code is also free there are some other paid editors like sublime which which are very good but no matter what editor you use it'll still get the job done so i'm going to type code space and then a period and that's going to open up this whole directory in visual studio code and let's maximize this so we have a little bit more space and go to that package json and now i'm going to make some more space for us here and we can see the package.json file is like instructions to the computer and to us as the the developers uh about what this project is built from and what it can do so obviously we have name version right home page which is nice for this particular project you you could go and see an action at the home page we have the dependencies now these tell the computer in this case the node package manager it tells the node package manager what packages need to be installed for this project to run properly and so this is great this is what allows us to run projects on our machine and be confident that they're most likely going to work because we're getting all the same packages in all the same versions we don't actually store all the code for all those packages in our repository on github that's why we're able to push code to github and download code from github so quickly because the bulk of the project code is going to be here in these dependencies right so by simply including this package.json file we're giving all the instructions that uh npm needs to rebuild this on someone else's computer so the packages here the the node modules live on my computer and if you download it they'll live on your computer but they'll never go up to github we also have our scripts now our scripts are going to tell us what commands we need to use to run this project so it in this project we do have oops where we at here we go in this project we do have a readme that gives instructions on how to run the project but you won't always have that sometimes the maintainers or repository may not have instructions written out like that so in that case we can look here and see what kind of scripts we have so predeploy we're not ready for deployment yet right we just download this but we can try this to start right and this will run react scripts start our build is going to get ready for deployment we don't want to run tests yet and we don't want to eject so pretty safe to assume if we want to run this locally for development purposes we're going to use start okay and in fact that's what it does say in the readme to use so let's run the start command to start script and see what happens whoops before we do that let's install our packages right i guess we could try the start script first let's see what happens when we do that so we could run npm run start on newer versions of npm you can leave the run out so i i believe that's optional in newer versions see look what happened we got all kind of errors it's looking for all these packages and we don't have them all right so now let's run uh you can run npm install okay so npm install will download all those packages there's an alternative to npm called yarn i happen to be using yarn on this project if you're interested in yarn you can read more about it and choose to download it if you want it does the same thing as npm so i'm gonna run yarn you can run npm install if you're following along and it'll do the same thing for us so when we hit enter it's going to get all those packages and install them and depending on how large the project is and how many packages you know this could take a while you know also if you have a slow internet connection or you're running this on an old computer you know you may have time to go get a cup of coffee but in this case it's a small project on a fast computer with a fast connection so it's done already let's go back now and look at what's new so we can see our folder tree here and look we have this node modules folder that was not there before if we take a peek in here here's a bunch of packages it's huge right let's close that thing up because each one of these packages also has a package json file with more packages right so our the bulk of our project's code is in this node modules folder okay so that's why we have this git ignore file and this tells says these are all the files that i want get to ignore and i don't want these saved to github uh so node modules is there because that would be a whole lot to push up to github right so now that we have that let's try to run our start script again and see what happens this time so i'm going to hit the up arrow key and that's going to let me just run through all the commands that i've recently typed so this is a big time saver so i'm going to go back up to npm run start hit enter and let's see what happens all right so it's telling me something is already running on port 3000 i happen to have another project running but that's not a big deal we can just run on a different port so i'm going to hit y and hit enter to run on a different port now on my other screen this just opened okay so this will pop up in your default browser at localhost 3001 so for you if you don't have any other projects running it'll probably be localhost 3000 but we now have this react seating manager project and you know we can we can run it it works it works just like as if it was on online so if you went to that url that's in our package json file you would see the same thing so this is running it's working but it's running off of our code here and now we can make changes so if we go to our our file let's just change something very obvious uh where's our title there we are let's go i'm really excited about this so let's add three exclamation points i think it's always a good idea we're gonna save to use either one exclamation point or three for some reason two just bothers me and here you are see we've changed the code we've changed the program and we see an automatic change there not every project is going to automatically change like that it depends on how the repository owner set up the project but in this case it automatically updates so that's it that's all you need to know to download a project now there are some projects that aren't javascript based you may need some other things for that but a lot of projects on github are javascript race so if you're a web developer you're most likely going to be doing something similar to this maybe in another video we'll cover what to do next like i may change is now what okay but for now you should know everything you need to know to pull down a repository quick recap before we before we go step one make sure you have node installed on your machine step two uh and also node comes with npm so it's not a separate install step two make sure you have get installed on your machine right we used github desktop app to kind of do the installation for us and then step three is find a repository on github and get that clone link okay when you do that you can run git clone paste the link in and now you have the repository if there are instructions in the readme read over those first and follow those a project may have some extra steps you need to do so if a project readme varies from what i've said in this video go with that particular uh project's instructions so let me know if this video was helpful uh if i messed up anything or there's something else that you'd like me to to cover if if this is helpful to you i'd love to do more videos so uh please let me know if you like it that's awesome if you know you could like the video but really i love feedback so you know let me know in the comments uh what you think and hopefully i'll be back soon uh with another video and be sure to check out my live streams on the free code camp youtube channel as well uh have a great day i'll see you
