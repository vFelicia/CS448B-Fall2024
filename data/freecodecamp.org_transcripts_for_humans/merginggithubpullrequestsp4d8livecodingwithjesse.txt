With timestamps:

00:09 - hey everybody welcome to live coding
00:11 - with Jessie today we're going to review
00:15 - some pull requests and merge them and
00:17 - we'll fix any merge conflicts that might
00:19 - come up hopefully we don't get too many
00:23 - but it would be cool to have some just
00:25 - to show how to deal with it on the
00:29 - stream before we get started I have
00:34 - something just for fun so somebody that
00:39 - I work with sent me this link earlier
00:41 - and I thought it'd be cool just to show
00:46 - it check this website out but good look
00:51 - at how amazing this thing is it's just
00:57 - like I I don't even know what to say if
01:08 - as netscape 3.0 I think it's just I mean
01:17 - obviously this was made as a joke but I
01:21 - thought it was pretty funny
01:23 - so anyway alright so let me let me take
01:32 - the live chat quickly and say hi to
01:34 - everyone and then we can we can get
01:36 - started so since we are going to be
01:39 - checking out the pull request if you
01:40 - want to go to the repo you'll be able to
01:42 - follow along with the pull request and
01:44 - check them out for yourself we're gonna
01:46 - start out with pool request number five
01:49 - so the link to the repo is in the
01:52 - description I'm also going to get this
01:56 - end rock server running so that we can
02:01 - all see the website together so I'm
02:06 - pasting that in the live chat now and
02:12 - all right let's see hey see lot of
02:15 - people saying hey hey everyone
02:36 - sebastian says i should use this design
02:39 - for the next project uh-huh yeah so
02:44 - anyway I just
02:48 - it's amazing website if you view the
02:50 - source code it's actually kind of it's
02:52 - nice like there's not that many requests
02:54 - Network requests everything's right
02:58 - there in line so I admire oh and it
03:03 - loads so quickly I don't know that
03:06 - there's that much else to admire but at
03:08 - least I can admire that now I'm I'm like
03:12 - 90% sure that that website was built as
03:15 - a joke and they purposely made it look
03:17 - like that so that's kind of fun all
03:22 - right so let me bring over have a pull
03:24 - request open on my other screen let's
03:27 - bring it over so we can take a look at
03:29 - it and let me make this bigger and
03:33 - increase the font size okay let me know
03:41 - if it needs to be larger font size but
03:46 - okay so we have this pull request from
03:49 - Sebastian I think in correct me if I'm
03:52 - wrong Sebastian I think this is the pour
03:54 - request that was submitted before the
03:56 - stream yesterday and I had hoped that we
04:00 - would be able to make the pull request
04:04 - that we'd be able to merge the pull
04:06 - request on the stream but it didn't
04:08 - happen so the the cool thing is I
04:12 - thought they were going to be merge
04:14 - conflicts but it looks like Sebastian
04:17 - after the stream went in and fixed the
04:21 - merge conflicts so in this commit here
04:25 - so we shouldn't have merged conflicts
04:29 - I'll probably we're gonna check out some
04:33 - of the files that have changed and then
04:37 - we'll pull down a test branch just to
04:39 - double-check I've already looked at some
04:43 - of the codes so I I don't think there's
04:45 - going to be any problems at all but it
04:47 - would be cool to
04:47 - go through I know I've done it before on
04:49 - the stream but we'll just go through it
04:52 - quickly and just do the test and then we
05:00 - can merge it right there in the command
05:02 - line so I think last time I didn't merge
05:04 - it from the command line I think we did
05:07 - it from inside the the green button the
05:10 - big green button and github okay so
05:14 - there's a lot of stuff changed in the
05:16 - readme which is awesome so we had the
05:19 - default read me from create react app
05:21 - and now the readme is more specific to a
05:24 - project so that's that's really great
05:27 - that's one of those things that it's
05:28 - like you always know you need to do and
05:30 - you just keep putting it off so thank
05:33 - you Sebastian for that and a lot of this
05:37 - is just refactoring so we're not we're
05:39 - not gonna see like new features involved
05:43 - here but but if you can see I mean
05:45 - there's significant saving of space
05:49 - right a lot of these are going from
05:52 - using the class-based components to the
05:55 - functional components so definitely
05:59 - saving some space there and let's also
06:03 - just okay so the routes have been moved
06:06 - into a separate file which is nice and
06:13 - yeah this is a lot of a lot of switch in
06:17 - the components to the functional
06:21 - and they have says oh okay awesome
06:28 - so not sure if you all notice this but
06:31 - the background color was a different
06:35 - color but it was just in this little
06:37 - rectangle it didn't cover the whole
06:38 - screen so there was this rectangle
06:40 - towards the top of the screen that was a
06:43 - gray a really light gray color so you
06:48 - almost couldn't even see it if you
06:50 - weren't really like paying attention to
06:51 - it but it was annoying me and I I never
06:55 - I went in in dev tools and figured out
07:00 - where it was but I never went in to see
07:04 - what part of the material UI theme it
07:06 - was in so thanks Sebastian that was that
07:10 - was actually annoying me quite a bit so
07:12 - that's awesome
07:13 - and let's see okay it looks like there's
07:20 - a Styles folder so this got moved into a
07:25 - Styles folder that's great and logo I'm
07:33 - not sure what happened with the logo
07:34 - here so maybe we have a new logo or has
07:39 - it been to leave you completely I don't
07:40 - know we'll see whenever we test it out
07:45 - let's see
07:55 - yeah this looks like a lot of just
07:57 - refactoring the functional components
07:59 - okay so now that we've gone through and
08:01 - I obviously I skimmed through that I
08:05 - looked at it a little bit more closely
08:06 - before but really what I'm looking for
08:10 - in a pull request are I mean anything
08:14 - that stands out that's really major like
08:16 - what happened there but also just to
08:18 - double-check like is there anything
08:20 - really weird in here that shouldn't be
08:23 - in here
08:24 - so now obviously Sebastian's been
08:27 - submitting pull requests for a while so
08:30 - okay I see Sebastian said the logo thing
08:33 - that was the react logo so Sebastian
08:35 - deleted the react logo so awesome that's
08:38 - another one of those things when you use
08:40 - create react app that you always end up
08:41 - doing at some point but it's just kind
08:44 - of if you don't do it right away it just
08:46 - kind of stays around there until you
08:48 - remember to do it but anyway if you have
08:53 - a lot of people contributing to the
08:55 - project you don't you don't always know
08:58 - their intentions right so you would
09:00 - think everybody would want to contribute
09:02 - positively because I mean that's there
09:04 - it's public you know that that if they
09:09 - were to contribute some code that was
09:11 - terrible or even malicious then you know
09:15 - there'd be a record of it but it could
09:19 - happen so I always do try to check like
09:22 - I said now with Sebastian I'm not really
09:24 - worried about anything like that but you
09:27 - know since this is for you know my my
09:30 - workplace I think I have a
09:33 - responsibility to be able to check that
09:35 - out if anybody ever asks me about it you
09:38 - know I want to be able to honestly say
09:40 - I've looked at every line of code before
09:42 - I merged it to be confident you know
09:47 - about that so I do try to look at every
09:51 - line and make sure that it's all you
09:55 - know it all works so I I think it's not
09:57 - enough just to test the branch and see
10:00 - if it looks okay you know in terms of
10:03 - the front end I you got to look at the
10:07 - lines of code
10:08 - so that's easier with smaller pull
10:10 - requests but the risk at least to me the
10:17 - the risk of something getting in there
10:19 - that shouldn't be in there is just too
10:21 - high if it was a side project that I I
10:24 - wouldn't really worry about it that much
10:26 - but what I said for that since this is
10:28 - for you know the university that work
10:30 - for I'm a little bit more careful with
10:32 - it so that's why I always go through it
10:36 - now and I think we did this yesterday we
10:43 - did this at some point within the last
10:45 - week I think so this will be a little
10:48 - review for those who who watched it if
10:49 - you haven't watched it I'll explain this
10:51 - as I'm going through and I forgot to
10:53 - start my timer all right so we've
10:57 - already taken in 12 minutes all right
11:00 - I'm gonna do the 10 minute timer and
11:03 - that'll put us right around 25 minutes
11:06 - and then we'll do our first break for
11:09 - questions if you're not familiar with
11:12 - how we do the stream I do 25 minutes of
11:15 - coding and then 5 minutes of question
11:17 - and answer and then another 25 minutes
11:19 - of coding after that we usually just do
11:21 - the rest of the show as question and
11:23 - answer but sometimes we do do some more
11:26 - coding today we'll probably just do the
11:28 - two sessions of coding so if you ask any
11:31 - questions and I'm not answering a
11:33 - question right away that's because I'm
11:35 - gonna wait and answer during that
11:37 - question-and-answer session so please
11:39 - stick around if you don't have time you
11:41 - can always watch the recording of this
11:43 - video that's available on this YouTube
11:45 - channel and I'll answer your question
11:48 - whether whether you're here or not I'll
11:49 - still do my best to answer the question
11:52 - okay so let's do it first let's do a get
12:00 - pool just to be sure we have everything
12:01 - from our repo so that's always a good a
12:04 - good move even if you're the only one
12:06 - working on the project I have had this
12:08 - happen before where I've done some some
12:13 - work on a project from home or you know
12:16 - from somewhere else and
12:18 - gotten about it and then I go to work on
12:21 - that project again later on and I don't
12:23 - realize that I don't have all the the
12:25 - changes so I don't have all the updates
12:26 - so then I start making updates and try
12:28 - to push it and then I have conflicts so
12:31 - no matter what you should always start
12:33 - the day off with a good pool all right I
12:36 - happen to be up to date so we're good
12:39 - and let's see and then on the other end
12:44 - of things it's always great to if you
12:46 - you know end the day with a push that
12:50 - way anybody else working on the project
12:51 - or if you have to work on the projects
12:53 - from another location you have all the
12:55 - code you need really you should be
12:58 - pushing multiple times throughout the
12:59 - day but at the very least you should end
13:02 - the day with a push so let's do a get
13:05 - fetch and we're gonna fetch origin the
13:12 - pool request number five we're gonna get
13:17 - the head and we're gonna call this s
13:23 - refactor and let's see if we can do two
13:28 - I don't think I have a branch like name
13:29 - like this so for me this is just my
13:32 - little naming thing you could you know
13:33 - do whatever you want here but I'm saying
13:35 - s for Sebastian and then this is mainly
13:37 - a refactor and this is the second time
13:40 - you submitted to refactor pool requests
13:41 - so that keeps it straight for me in my
13:43 - head but you can name things whatever
13:47 - you want okay cool so we have this now
13:51 - let's check out if you're not really
13:54 - familiar with it you can have multiple
13:56 - versions of your projects existing at
14:00 - one time and they're they're called
14:03 - branches so right now we're on the
14:05 - master branch so this is one version of
14:08 - our project we're going to switch now to
14:10 - the branch that we just created and all
14:14 - the code is going to switch over and
14:15 - we'll be able to immediately see and
14:18 - start working on this alternate version
14:20 - and if we want we can combine versions
14:24 - or we could go back in time to a
14:26 - previous version so it's really helpful
14:29 - for that it lets you kind of
14:31 - I have the freedom to do whatever you
14:32 - want and test different things without
14:34 - worrying about messing up your project
14:37 - beyond repair alright so let's do
14:40 - refactor - okay awesome
14:45 - when I die I test the pull request it's
14:50 - a good idea to do yarn or NPM install in
14:56 - case there are some packages now for
14:58 - this pull request there aren't any new
14:59 - packages but I'm just going to do it
15:01 - just for demonstration that's weird it's
15:07 - taking longer than normal okay so
15:09 - there's no packages but if the person
15:12 - who submitted the requests happen to
15:13 - load a new NPM package and you didn't do
15:16 - that then it probably wouldn't work it
15:19 - would seem like the pull request is
15:20 - broken when it's really not so that's
15:24 - another good you know generally a good
15:27 - thing to do
15:28 - okay now you should already be able to
15:32 - see this with an grukk if you've clicked
15:35 - on that link and let me see I'm gonna
15:39 - share that link again in case some of
15:42 - you weren't here when I shared it the
15:44 - first time you're getting the same error
15:55 - okay it looks like there's some air
15:57 - going on so let's check this out where's
16:01 - my
16:09 - is it here no I don't need this up
16:12 - anymore I can't find where we had our
16:18 - there it is I was on the screen already
16:27 - okay so we're still getting that weird
16:30 - error or at least I'm getting it here on
16:34 - locally for me that I get that weird
16:38 - error at first but then if i refresh it
16:40 - it goes away so the next time that
16:44 - happens let's take a look at that error
16:46 - message and try to get that fixed I was
16:48 - ignoring it yesterday but it's it is
16:52 - getting kind of annoying so it'd be
16:54 - better if we could get that fixed
16:58 - all right so oh yeah
17:02 - we're on the home page and let's bring
17:05 - up our console just to check for errors
17:11 - what do we have here
17:20 - we're getting some sort of post error
17:27 - for a three
17:33 - I mean we're still getting our data so
17:40 - let's do a refresh I'm gonna see huh
17:47 - okay it looks like maybe that's where
17:49 - the errors are coming from anyway let's
17:51 - um it is let's do a check where is this
18:01 - the layout the drawer let's just fix
18:03 - this problem right now so it doesn't
18:04 - bother us for the rest of the stream I'm
18:07 - gonna do a check for to see if this
18:11 - exists before we try to map through it
18:16 - that way we won't get an error all right
18:22 - George yes 54
18:25 - okay so where a drawer all right cool
18:28 - I'm already in this 54 all right we're
18:31 - right here awesome okay so we want to
18:35 - look for to see if data categories
18:43 - exists so if data dot loading is false
18:49 - and dated our categories exists then
18:53 - we'll try to look for this let's see if
18:55 - that does it okay not bad we didn't get
19:03 - an error it's not exactly loading
19:06 - everything but that's better than an
19:08 - error now let's test it again with a
19:15 - refresh and see what happens okay yeah
19:17 - it's still I don't know if it's
19:20 - happening on the end rot let's see I
19:24 - guess I could check right now and see
19:31 - let's get a little refresh okay yeah it
19:35 - doesn't seem to be happening there so
19:41 - I'm not sure at least we got rid of the
19:43 - error message so I could work on that
19:47 - later but for right now we're just kind
19:49 - of testing things out so we're at the
19:51 - category one page here and hmm okay this
20:02 - is not working let's see if we do a hard
20:06 - refresh if it works no it does not all
20:16 - right
20:18 - so we do have a problem okay so this was
20:27 - working so quickly I'm going to switch
20:30 - back to the master branch and see if
20:32 - it's not working on the master branch if
20:34 - it's not working on either branch then
20:36 - maybe it's the WordPress installation
20:38 - that's having the problem so I want to
20:41 - rule that out right off the bat before
20:43 - we start changing our code so check
20:47 - master oops I mean oh yeah I did make
20:52 - changes okay
21:10 - I'm not gonna push that yet okay all
21:18 - right so now we have master
21:31 - Oh
21:34 - okay so let's say that is working and
21:41 - we're still getting these four or threes
21:46 - but this is not working okay so all
21:56 - right so this is all right this is a
21:59 - good reason why you know we test things
22:01 - out before we merge so let's go back and
22:05 - look at the the diff so first place I'm
22:10 - gonna look is in the category J S
22:12 - component right because we did get the
22:14 - homepage to load on that other branch
22:16 - but not the category pages so I'm gonna
22:21 - look there because the homepage shares
22:22 - some of the other components so the
22:24 - problems shouldn't be in those so let's
22:26 - check it out
22:28 - we'll look there first and if we can't
22:30 - find it there then we'll look at that
22:33 - particular piece of code that's getting
22:37 - the data for that component J s or that
22:42 - category J s component so we should have
22:46 - this open and we do oops let me I didn't
22:51 - want to look there I wanted to look here
22:52 - so let's find if anything changed in
22:55 - category which I believe it did
23:08 - ergo category all right now we're going
23:10 - to go through this particular file a
23:13 - little bit kind of more slowly and pay
23:18 - attention to what's going on here
23:20 - okay so we've just done some refactoring
23:24 - she's fine this should work render cat
24:09 - all right so far that looks identical at
24:17 - least that render categories part let me
24:20 - go up here and see
24:36 - all right let me check the live chat see
24:38 - if you all saw anything
24:47 - okay I don't see anything right now
25:07 - all right I want to do this entire thing
25:14 - and walk through this
25:25 - alright let's go back to our back to our
25:32 - other branch so we're gonna go back to
25:41 - other branch and we'll let this load now
25:46 - we've taken care of the error message
25:48 - which is good that we did that because
25:49 - now we'll be able to inspect and see a
25:53 - little bit behind the scenes so what's
25:55 - going on so let's go into react right
25:59 - now and see what kind of props we have
26:05 - category here all right so there's some
26:09 - error
26:18 - okay so it looks like our data so we're
26:26 - not even getting the proper data we're
26:30 - getting an error message back
26:49 - Oh
26:55 - okay Sebastian has a thought here about
26:59 - the the URL so maybe somehow the URLs
27:04 - didn't get let me try to get back if you
27:15 - might be onto something I let's think
27:19 - I don't remember what it was but yep
27:24 - that's it I but I think this is it all
27:27 - right right so somehow probably when you
27:32 - were handling the merge conflicts
27:34 - somehow the previous way that we handle
27:37 - these got mixed in so if you remember at
27:40 - the end of yesterday stream we were able
27:43 - to use the category slug instead of the
27:47 - ID so right now we're still using the ID
27:50 - here so the IDS getting passed in but
27:53 - the graph QL API is expecting the the
27:59 - slug so it's returning nothing because
28:02 - we're not giving it a slug we're giving
28:04 - it an ID all right so that's that's not
28:07 - a big deal that's a pretty easy fix so
28:10 - in this case I'm not going to throw out
28:12 - the pool request because of this right
28:15 - let's get the fix test it and then if
28:18 - that's the only thing that's wrong then
28:19 - the rest of the pool request is
28:20 - perfectly fine and we can just merge it
28:24 - in so let's go in here to probably it'll
28:31 - be our routes right so that was the we
28:35 - have our routes file somewhere else now
28:39 - where is it
28:48 - routes here we go okay so here's our
28:51 - routes okay so it does say slug here so
28:56 - that's fine let's go back to our
29:01 - category then maybe it's here at the
29:02 - bottom that's firm slug no we are we are
29:08 - giving the slug in here let me up let me
29:11 - double check and make sure
29:26 - ok let's check our drawer and see there
29:33 - it is that's what we need to change so
29:37 - this node ID needs to be node slug ok
29:48 - let's see you know what I want to double
30:00 - check to make sure this is the latest
30:02 - version occasionally when I switch
30:04 - branches it doesn't update an atom right
30:06 - away so let's make sure we have the
30:09 - right one
30:13 - and now let's check this out okay so
30:18 - instead of ID let's put slug and this
30:21 - should fix everything so go back to the
30:28 - home page
30:34 - let's refresh all right now when we
30:39 - click on category one good we have the
30:41 - right great thing in URL here category
30:45 - two wonderful that way three awesome
30:51 - oops
30:54 - actually this shouldn't be worries
30:58 - yeah let's take out this link because we
31:00 - don't need this to be a link this is
31:01 - just a section header so I'm gonna take
31:06 - that out right now while we're we're
31:07 - already here so categories is not gonna
31:11 - be a link it's just gonna be a list item
31:14 - and
31:23 - let's see what that that looks like
31:48 - okay it still looks like you can click
31:50 - on it but you can't for now what we'll
31:52 - need to do is we'll go in and change
31:55 - this up so it doesn't have these styles
31:57 - like a button at some point I'm not
31:59 - worried about that right now
32:01 - we'll take care of that whenever we get
32:03 - you know everything in here and then
32:05 - we'll really start to style this exactly
32:07 - how we want it but it's not really a
32:09 - point in trying to style it now and so
32:11 - we have it all filled out with with what
32:13 - we want okay awesome
32:19 - all right cool Sebastian says glad you
32:22 - found that issue this is why you always
32:24 - review and test PRS before merging yeah
32:26 - definitely I'm actually I'm really glad
32:28 - that that happened for two reasons one
32:33 - it was awesome just to show like hey it
32:35 - it was good that we were taking our time
32:38 - with this pull request because we caught
32:39 - this before it got merged into master I
32:41 - mean can you imagine if this was a
32:43 - production application right and we
32:48 - didn't test it thoroughly and we pushed
32:50 - that out to production right immediately
32:52 - we would have users getting errors so
32:56 - right now the stakes are pretty low
32:58 - because it's still just you know kind of
33:00 - local here but you know in a more mature
33:05 - project that's actually live it could
33:07 - have been disastrous the second reason
33:09 - why I like this and I hope Sebastian
33:13 - won't get mad at me for saying this is
33:15 - I'm really used to me being the one that
33:18 - messes up that makes a mistake so so at
33:23 - this time it was it happened to be
33:25 - Sebastian just missed that one little
33:30 - thing which I hope you don't mind that I
33:33 - was just kind of making fun of you a bit
33:35 - Sebastian but you've been here with the
33:39 - live in in the streams and everything
33:41 - for a long enough time that I think
33:43 - we're ok to do that also
33:46 - realistically Sebastian did a lot of
33:49 - really good stuff in that pool request
33:51 - the fact that he was able to do all that
33:52 - and only have one tiny little mistake I
33:56 - mean literally that's it right I mean
34:00 - that's huge because the
34:01 - the fixing all those merge conflicts was
34:06 - probably a big deal I was not looking
34:08 - forward to have to do having to do all
34:10 - that I was really happy when I saw that
34:12 - Sebastian did that so anyway so I'm just
34:16 - messing with you a little bit I know how
34:18 - hard it is to go through and get all
34:20 - those merge conflicts sorted out all
34:24 - right awesome
34:25 - so now really quickly I'm just going to
34:29 - click around just to make sure that we
34:31 - hit every view all right this didn't
34:34 - have a an image right let's click one
34:39 - that did Evan M is just double check
34:44 - okay cool and that's it we don't really
34:50 - have a lot of views yet so that should
34:51 - be as we've tested our category view we
34:53 - tested our home view and our post
34:55 - detailed view that's it that's all we
34:57 - have and it looks like for some reason
35:01 - we're still getting four or threes let
35:04 - me clear this out and do a refresh let
35:09 - me do a hard refresh because you know
35:11 - how for some reason we're getting that's
35:16 - really weird
35:30 - mmm single post detail query variables
35:37 - ID
35:44 - okay so I mean we're sending what we're
35:46 - supposed to be sending let me check my
35:55 - time oh I knew I had to be out of time
35:58 - okay
35:59 - and again for some reason I'm not
36:01 - getting the the beat usually I get I
36:03 - hear a beep I got it working for a few
36:08 - days and I'll quit again okay let me
36:10 - take now five minutes and go through the
36:14 - live chat and answer some questions then
36:16 - we'll come back and merge this in I
36:18 - think I'm gonna have to double check in
36:21 - the slack channel for our WP graph QL
36:24 - plug-in I think someone else was getting
36:27 - four or threes but basically I'm not
36:30 - like I said I'm have to double check but
36:32 - from what I remember I think even though
36:35 - it's sending four or threes it's also
36:38 - sending the data that we need so it's
36:40 - working it's just the errors are coming
36:43 - through so I'm not that worried about it
36:45 - right now I do want to double check but
36:47 - I think it shouldn't affect us you know
36:51 - other than having those errors in the
36:53 - console but it shouldn't affect us right
36:55 - now we'll be safe to you know move on
36:58 - with the rest of the development of our
37:01 - app all right short break five minutes
37:04 - I'm gonna scroll to the top and get
37:07 - through as many questions as I can again
37:14 - I see a lot of a lot of you saying hi so
37:16 - hey everyone hey I'm a I would love to
37:19 - be able to go through everyone's name
37:20 - and say how do you all personally but
37:22 - the stream would probably be really long
37:23 - if I did that but I do I do read them
37:27 - all I see all of your name so I
37:29 - appreciate it
37:33 - denaun J says asks how how are you says
37:38 - how are you buddy
37:40 - actually I'm really good now once the
37:42 - stream started I'm really good but to
37:44 - tell you the truth all day I was super
37:46 - distracted and just felt like no
37:49 - motivation at all I had to work with
37:52 - some other people's code from another
37:53 - company that we're contracting out too
37:57 - do some stuff and it was said it made me
38:01 - want to cry really it was an angular
38:03 - application and that wasn't the problem
38:07 - the problem was like they were loading
38:10 - so many different things they didn't
38:11 - need it was like 72 Network requests for
38:15 - one page that had minimal stuff on it
38:20 - I'm it just had a couple of links it was
38:23 - insane
38:24 - and I was trying to change the styles
38:27 - and they had stuff in style sheets that
38:29 - were LinkedIn they had stuff in style
38:31 - tags in the head
38:32 - they had inline Styles it was just all
38:36 - over the place and trying to get
38:39 - everything to override what it needed to
38:41 - it took way longer than I hoped it would
38:44 - take and that's like not even it's not
38:48 - even one of my official projects it's
38:50 - just some other thing that I was helping
38:52 - out with because because I care how the
38:56 - university sites look even if they're
38:58 - not ones that I built anyway so that's a
39:04 - little bit about how I'm doing but the
39:06 - streams always cheer me up and break me
39:08 - out of whatever weird mood I'm in
39:19 - ego says I should not have looked at
39:22 - that link in the chat now I'm hungry so
39:25 - Eva looked at the site and so the
39:30 - delicious looking meat so as long as
39:33 - you're not a vegetarian that I would
39:35 - probably be tasty it will probably look
39:38 - tasty tea oh cool so coup de quash a
39:48 - sorry if I'm mispronouncing that but I
39:51 - think it's coup de quoi Shay says hey
39:54 - Jesse what's up
39:55 - this is coup de casa all the way from
39:57 - Zimbabwe awesome thanks for joining us
40:00 - I don't know if you've been in previous
40:02 - streams or not if I've seen that but if
40:04 - not welcome and I'm not sure I don't
40:09 - know if we've had anyone from Zimbabwe
40:10 - so far I mean we may have and they just
40:13 - didn't say they were from Zimbabwe but
40:15 - welcome
40:23 - that's it
40:30 - Blake says I'm watching the force
40:32 - awakens' cool I just watched the trailer
40:35 - for the new Star Wars is anybody in the
40:37 - live-chat a Star Wars fan so I I wasn't
40:41 - gonna watch the new trailer because I
40:42 - was afraid it would give away too much I
40:44 - just wanted to be surprised but then I
40:46 - talked to the head of my department is a
40:47 - big star Wars fan and she she was
40:51 - telling me that she was really excited
40:53 - after watching the trailer and she
40:55 - assured me that there weren't any bad
40:57 - spoilers so I decided to watch it so it
41:03 - was cool it got me excited I didn't get
41:07 - goosebumps like the force awakens
41:08 - trailers gave me goosebumps when I first
41:10 - saw them but so I didn't get that level
41:12 - but it was still good I'm so excited for
41:17 - it
41:24 - okay so ref says I think it's better to
41:27 - do small working logical commits so it's
41:29 - easier to for someone to review it and
41:32 - he doesn't like to read a thousand lines
41:34 - of code okay I agree yeah so I think I
41:42 - mentioned this at some point this week I
41:45 - do prefer that so being on this side of
41:49 - things and having to review pool
41:52 - requests I definitely realize like what
41:54 - what makes the pull request easier to to
41:59 - handle so if you're submitting so be
42:03 - honest with you if you all take the time
42:05 - to submit I'm gonna review a pull
42:07 - request no matter what and do my best to
42:10 - make it work because I really appreciate
42:13 - your time you know and volunteering that
42:15 - but if you're submitting to other
42:17 - repositories and you really want to get
42:20 - your pull request merged then try to
42:22 - make it small and really to the point
42:24 - like just change one thing think about
42:27 - it like when you're making a react
42:28 - component you want that component to
42:31 - just do one thing ideally right and you
42:34 - break your site up into all these little
42:35 - chunks think the same way when you're
42:38 - doing your pull requests is that you
42:41 - want your pull request to do one
42:42 - specific thing that you can clearly say
42:45 - this is what it does succinctly and
42:49 - someone could go through and easily see
42:52 - what changes were made in just a minute
42:55 - or two you're much more likely to get
42:57 - your pull requests merged if you do that
43:01 - because the maintainer x' will be able
43:04 - to get through it quickly and be sure
43:06 - that it's not going to mess anything up
43:07 - so that's my I'm certainly no expert if
43:12 - you look at my github repo I haven't
43:13 - gotten a lot of pull requests merged
43:15 - probably the number one reason is I'm a
43:19 - little bit overwhelmed with my workload
43:21 - right now not just here at work but in
43:24 - the courses that I'm taking on the side
43:27 - and before I had a course I had a client
43:29 - that was had a big project so at some
43:34 - point when I get through this course I'd
43:35 - really love to try to give back
43:37 - some of those repositories that you know
43:39 - I've used and benefited from so I'd love
43:43 - to be able to do that so recognize I'm
43:45 - not really an expert but I do review
43:48 - pool requests and I know what's easy and
43:50 - what's difficult all right so I'm done
43:53 - with my five minutes of
43:55 - question-and-answer so I'm gonna
43:58 - remember where I left off at and and
44:06 - I'll come back to there after we get
44:08 - done with our next 25-minute
44:10 - coding session oh those says the audio
44:15 - is too loud it's clipping let me know if
44:18 - anybody else is hearing some distortion
44:22 - in the audio or something let me know I
44:24 - did remember to move my phone farther
44:26 - away but I have it connected to my
44:29 - computer and the cord is somewhat close
44:32 - to the mic so maybe that's interfering
44:35 - so let me know because I don't want okay
44:41 - it looks like audio is okay all right so
44:44 - whatever it was it's I guess it's not
44:46 - happening anymore
44:49 - also I noticed my audio is kind of off
44:51 - so at the beginning of the video it's
44:54 - okay but towards the end of the at least
44:56 - of the recordings the audio is not
44:58 - synched with my mouth so I don't know if
45:02 - it's like that during the stream or not
45:03 - I guess you all have to let me know but
45:06 - it's it's somewhat annoying well I've
45:08 - been going back and watching a little
45:10 - bit of the stream the previous streams
45:13 - I'm not really sure what I can do about
45:15 - that though I'll have to look it up if
45:17 - anybody's familiar with OBS and uses it
45:21 - let me know how you fix the issue of
45:24 - everything getting out of sync okay all
45:30 - right let's go we're gonna get we're
45:32 - gonna get this pull request merged in
45:34 - and we have another pull request that's
45:38 - much smaller so it shouldn't be quite as
45:42 - much work to go through the code and
45:44 - let's see oops what I'm looking for my
45:50 - terminal
45:51 - where I'm going here okay okay so we did
45:57 - modify this what did we do here
46:02 - okay we had to change that that's right
46:04 - I didn't realize we hadn't committed
46:06 - that yet okay so if you're not familiar
46:11 - with yet what I just did there was I did
46:14 - a status to see if we had anything that
46:16 - had changed that we didn't commit yet
46:18 - and we did and I couldn't remember what
46:20 - I changed so I did it get diff and then
46:22 - that shows us what's changed our layout
46:25 - our drawer j/s component and it'll
46:29 - actually show me so the red is things
46:33 - that have been deleted right and the
46:36 - green is what has been added so we can
46:40 - see right here in our console what has
46:44 - changed so now I know what's changed and
46:47 - I got out of that by pressing Q now I
46:51 - can commit this since I know what it was
46:53 - this changed
46:54 - so we're gonna do a git commit the a
46:58 - flag means we're gonna add and commit at
47:01 - the same time we're combining two steps
47:03 - the M means we're going to put a message
47:06 - in line here so our commit message will
47:10 - be use
47:23 - all right so you slug instead of ID for
47:26 - category links there we go alright so
47:32 - now I'm not gonna push this right away
47:34 - I'm gonna merge first and then just push
47:36 - it all up right to the master branch so
47:41 - what I always like to do first and it
47:43 - shouldn't we shouldn't have any merge
47:45 - conflicts because they've already been
47:47 - taken care of by Sebastian but what I do
47:50 - like to do first is do a git merge
47:53 - master
47:54 - so I'm merging master into our current
47:58 - branch or s refactor to branch and then
48:01 - that way if there are a bunch of
48:03 - conflicts we haven't messed up our
48:05 - master branch and kind of locked it up
48:08 - we'll lock up this branch and then we
48:11 - can always switch to master right
48:12 - because what we want to avoid is a
48:14 - situation where we try to merge
48:16 - something in a master there's all these
48:18 - merge conflicts we're starting to work
48:19 - through it we're halfway through all
48:22 - these merge conflicts and then we get an
48:23 - emergency and we need to change
48:26 - something on master right away and push
48:28 - it up to production well now what are we
48:30 - going to do right it's it's going to be
48:32 - much more difficult there you know there
48:34 - are ways to stop that to cancel a merge
48:37 - right but it you see how it could get a
48:40 - little bit messy but if we do it like
48:42 - this if that happens all we have to do
48:44 - then is just switch back to our master
48:48 - branch we can even commit some of the
48:51 - stuff that we've done all right we can
48:53 - cancel our merge what you do whatever
48:54 - you want with it because it doesn't
48:56 - matter it's a side branch right so we
48:59 - can go back to master make our changes
49:01 - come back to our other branch and then
49:04 - merge those new changes back in and then
49:07 - once we're satisfied with everything and
49:08 - there's no conflicts then we take it
49:10 - back to master so hopefully that makes
49:12 - sense but so I said with this project
49:18 - it's still small its local probably not
49:22 - an issue but it's good to have you know
49:24 - the good habits even on the small
49:28 - projects and then you'll remember it
49:29 - when you have the the bigger projects
49:33 - okay so now we're gonna go back to
49:36 - master and we're going to merge this
49:43 - into master so from our master branch
49:45 - we're gonna do get merge and we're gonna
49:52 - merge in that branch we were just on
49:54 - there we go so now we get our message it
49:57 - just gives us a little summary of what's
50:01 - been done right so it'll say in the case
50:05 - of like the readme right we've deleted
50:07 - quite a few lines by we I mean Sebastian
50:10 - has deleted go ahead a few lines and add
50:13 - it a bit right so we get a little
50:15 - summary I usually don't look at this too
50:17 - much because at this point I've already
50:19 - reviewed all those lines right this
50:22 - shouldn't be the first time you're
50:23 - looking at the lines right because you
50:26 - review before you merge but this should
50:30 - work so again let's check out
50:45 - okay in my back now it looks like
50:48 - alright awesome back on I don't know
50:51 - what happened well it seems like my
50:53 - internet cut out the weird thing was you
50:57 - know my icon seemed like it was you know
51:01 - the network was fine just really weird
51:14 - okay
51:21 - okay
51:32 - hey we just got an error report from
51:35 - something that we made so maybe if we
51:39 - get this other pool crest merged in
51:41 - quickly maybe let's take a look and and
51:44 - check out this error report from the
51:48 - resource center one of the forms on the
51:51 - research center that we just did that
51:54 - was projects - so that might be cool to
51:57 - check out alright so for now let's make
52:08 - sure that this works okay it works it
52:11 - was definitely just my connection that
52:12 - was causing the problem and all right so
52:21 - if you see on our our pool requests oops
52:32 - let me go back to the main one our pull
52:36 - request oh we didn't push it back up
52:38 - sorry
52:39 - so let's go get push origin master this
52:45 - will push everything up to get up now
52:48 - what we should see is it's merged see so
52:56 - everything's merged and grid
53:12 - okay cool so we have that merged in
53:14 - let's check out our next pool request
53:16 - and let's see so not really an
53:22 - explanation yet right because it's
53:24 - really small but Sebastian has pointed
53:29 - something out here so let's check it out
53:38 - all right that's a really good point
53:41 - so smashing noticed if we have our our
53:50 - drawer basically on large screen sizes
53:58 - we own our drawer to be open
53:59 - automatically with the do you want the
54:02 - option to shut it or we know we remove
54:04 - the option to shut it so on smaller
54:08 - screens the drawer is going to be closed
54:11 - but we do have somewhat of a problem if
54:14 - we make the screen larger so let me
54:17 - demonstrate this now we should be able
54:20 - to demonstrate this problem Oh actually
54:23 - I thought we removed this maybe I
54:28 - removed it at some point and then it
54:32 - didn't get merged in right anyway let's
54:38 - let's pretend like we don't have this
54:40 - here because I'm pretty sure we had
54:42 - decided we're gonna remove it so we're
54:46 - on a small screen and we make it bigger
54:50 - do we have no we do we have that button
55:01 - we still can do it alright let's um I
55:07 - guess the problem is nut is the other
55:10 - way right now when we go to a smaller
55:14 - screen if we didn't have this button
55:16 - which we probably won't to close it it's
55:19 - really unusable so we would need you
55:24 - know something to handle that the only
55:26 - time this would really come into play I
55:29 - would imagine is in you know the
55:33 - potentially rare case that someone has a
55:35 - large smartphone and they're in
55:39 - landscape mode when they load the site
55:42 - and then they flip it to portrait mode
55:48 - that's probably the only case that I
55:51 - would think that someone would that that
55:54 - would happen that we would need to worry
55:57 - about now I mean obviously we need to
56:04 - have something and that's what Sebastian
56:08 - let's check out what Sebastian's
56:12 - solution was so there's a responsive
56:14 - drawer with material UI and it looks
56:17 - like looks like harsh it's gonna handle
56:25 - that so
56:35 - this pool requests
56:56 - okay so it's I think what's going on
57:00 - here and let me know
57:03 - I don't think our shoots watching but
57:04 - Sebastian let me know I think what
57:06 - happens is the the change that you had
57:10 - talked about here has not been
57:12 - implemented yet is that correct if so
57:15 - maybe we'll hold off on merging this in
57:17 - because it seems like hardship was
57:20 - planning on doing that so maybe I'll
57:23 - just give it another day and I'm fine
57:28 - doing it as well but in fact I would
57:32 - probably do it on the stream right now
57:33 - if I didn't get this error report in
57:36 - okay cool
57:38 - so let's let's put this on hold and
57:43 - since this is kind of still in process
57:45 - here we'll give it we'll give it another
57:48 - day maybe tomorrow to be ready let me
57:52 - check my time okay ten minutes all right
57:58 - so we have another ten minutes or so of
58:00 - coding time I just got an error report
58:03 - from someone who works with me here in
58:07 - our project number two so let's check
58:10 - this out if if you don't know already
58:15 - this stream is just me doing my daily
58:17 - work so while I try to have a certain
58:19 - topic and stick to that sometimes things
58:21 - come up and I have to deal with it so in
58:24 - this case this is one of those times we
58:27 - have people who are trying to submit
58:29 - things through the Resource Center and
58:32 - they're getting an error message and
58:34 - they're not able to submit so at first I
58:39 - thought maybe you know they're being
58:43 - thrown off by this button being disabled
58:46 - maybe they haven't filled out all the
58:48 - required fields but I've just got
58:50 - confirmation now that that's not the
58:53 - case what's happening is users are
58:57 - trying to upload more than one file on
59:01 - the file upload and it's not letting
59:03 - them which is a bit weird
59:05 - so the
59:07 - the test case that I'm I got tried to
59:11 - upload two PDFs so let's first try to
59:16 - recreate this so the test case was done
59:20 - on a Mac on Chrome so we should be good
59:23 - to recreate it here so let's try to find
59:26 - two PDFs
59:30 - let's see it says okay cool
59:40 - and I know I just showed you all my
59:42 - address and phone number I don't care if
59:45 - you call I don't answer my phone I let
59:47 - everything go to voicemail so if I don't
59:49 - answer leave a message and I don't care
59:53 - about my dress being out there too
59:55 - because when I was a freelancer my
59:57 - business was listed at my home address
59:59 - so all it takes is a Google search to
60:02 - find it let's see let's try to find I'm
60:11 - gonna try to recreate this as closely as
60:13 - possible
60:14 - so let's find PDFs I think I should have
60:19 - some PDFs in my downloads I actually
60:22 - might make my documents PDF budget codes
60:29 - and okay so I'm gonna grab this bulletin
60:35 - and this budget code PDF
60:44 - and let's open those and we'll try to
60:47 - upload them okay
60:51 - well that didn't work all right I'm
61:00 - gonna try this now I've noticed Kevin
61:13 - notes notes watt note solo says hey you
61:18 - are crazy I'm heading straight to your
61:20 - huh
61:21 - I really don't think it takes that much
61:24 - effort to find out someone's address
61:25 - right
61:26 - like people are listed in phone books
61:28 - it's really I don't know it's such a
61:37 - minor inconvenience I don't worry about
61:39 - it like to be honest with you I have an
61:41 - alarm system so I live out in the
61:48 - country all my neighbors have guns like
61:51 - it's not really a huge it's not like I'm
61:57 - really afraid that much of people coming
61:59 - out so let's see okay I do want to know
62:09 - it I did I noticed in the file upload
62:11 - here they had some spaces in the name
62:24 - Crona says can I go chill with you for a
62:27 - bit around 7:00 p.m. I'll be putting my
62:32 - kids to sleep around 7:00 p.m. so you
62:35 - can come chill and just hang out until
62:37 - I'm done putting the kids to sleep
62:41 - actually what's the date today oh it's
62:44 - the 12th tomorrow the new season of
62:46 - Voltron comes out on Netflix so I'll be
62:49 - watching that with my kids at 7 p.m.
62:50 - tomorrow I'm checking to get the hmm
63:02 - okay here we go I should have got that
63:04 - request all right so it did go through I
63:08 - got confirmation by email that that
63:10 - request went through I'm gonna
63:12 - double-check now that it went to our
63:13 - project management system I'm doing this
63:17 - on my other screen just in case there's
63:19 - any projects that are like shouldn't be
63:23 - released yet that I don't want to put it
63:26 - on YouTube
63:40 - okay yep the files did come through
63:46 - harnesses I don't get shot that yeah
63:49 - yeah if somebody if you come to my house
63:52 - and you want to hang out and you don't
63:54 - want to get shot then maybe just call me
63:58 - ahead of time or send me a message let
64:01 - me know don't let come banging on my
64:03 - door at one o'clock in the morning cuz
64:05 - I'll be freaked out other than that it
64:10 - should be okay you know I don't wear
64:13 - like a ski mask and creep around in my
64:16 - yard as long as you don't do that you
64:19 - should be fun I actually did I had a
64:21 - neighbor once that came through they
64:25 - came in like I was already asleep and he
64:27 - was banging on the door and then he went
64:31 - around to the back door surveying on the
64:33 - back door so I got up and I'm like he
64:35 - was trying to get in my house so I
64:36 - grabbed the gun and I'm going to the
64:39 - door and it's the neighbor so I realized
64:43 - it was a neighbor I put it behind my
64:44 - back so I didn't freak him out but I
64:46 - mean we had recently moved into the
64:49 - house and I wasn't sure like about the
64:51 - neighborhood or anything so I was pretty
64:53 - freaked out but I I definitely would not
65:04 - shoot first though so I'll give you a
65:07 - chance to explain yourself I'm not sure
65:13 - how to recreate this I don't think I
65:17 - don't think I'm gonna be able to
65:19 - recreate this here on the stream I'm
65:21 - gonna need to go to I'm just gonna go to
65:26 - this person's computer because she's
65:29 - like three offices down for me so after
65:33 - I end the stream I'm gonna go check it
65:34 - out she's also taunting me in the slack
65:39 - channel by saying there pumpkin cookies
65:41 - and they're not gonna be any left by the
65:43 - time I finished streaming so I okay so
65:49 - here's what we would do
65:51 - I know we have two minutes left or so
65:54 - but we're just going to start the
65:56 - question answer session a little bit
65:58 - sooner
65:58 - I had hoped we'd be able to figure this
66:00 - out but I mean if you've ever tried to
66:02 - replicate issues you know sometimes it
66:04 - can take a while so I don't want to just
66:10 - you know keep trying a bunch of things
66:12 - and come up empty
66:13 - on the stream if I find the issue though
66:16 - I'll let you all know tomorrow if I
66:18 - forget and you're interested just remind
66:20 - me in the stream tomorrow and we can go
66:22 - over what the problem was
66:24 - let's see let me go back to where I left
66:27 - off in the live chat okay
66:51 - oh cool rook says while that branch
66:54 - change did update the code incredibly
66:56 - quickly time to learn more about get
66:58 - yeah for sure
67:00 - get as get is awesome I can't believe I
67:05 - don't even remember what I did before I
67:07 - used to get definitely changed the way
67:12 - that I worked for the better if you do
67:18 - want to you to learn get I recommend you
67:22 - dasa d has a free get in github course
67:25 - that's excellent and there are some
67:30 - videos on on this channel the free code
67:34 - camp Channel about get I didn't do them
67:39 - but I haven't really watched the free
67:43 - code camp once so I can't personally say
67:46 - talk about their quality but I mean
67:49 - usually free code can't videos are are
67:51 - pretty good quality so I'm confident
67:55 - about that and then code Academy has a
67:59 - free get course as well if I out of the
68:02 - three for me like I said I didn't watch
68:07 - the videos but the most helpful was the
68:09 - Udacity get course
68:20 - okay Blake says yes is there a weight
68:23 - and eat the way to easily fetch data
68:26 - from a wordpress site and render it on a
68:28 - plain HTML site yeah definitely here's
68:33 - what I would do you have a plain HTML
68:37 - site you want to use you can either use
68:42 - fetch which I recommend using you maybe
68:45 - have to use a polyfill if you want to
68:47 - support older browsers if you're already
68:50 - loading jQuery you could use Ajax but
68:56 - one of those two I'd recommend using and
68:58 - then you can just basically when the
69:03 - page loads or on click or something like
69:05 - that you can use the WordPress REST API
69:13 - the rest api would probably be the
69:15 - simplest so you use the rest api make
69:19 - your api call so you would just send a I
69:24 - think it's a get request with the word
69:29 - to the REST API you'll get the data back
69:31 - and you can render out however you want
69:33 - on the page just using some some
69:37 - JavaScript and like I said if you
69:40 - already need to load jQuery for
69:41 - something it makes it even easier but
69:43 - you certainly don't need to have it so
69:46 - that's how I would do it if you want to
69:48 - know more about doing it trying to think
69:51 - if I have any public repos where I do
69:53 - that
70:00 - actually I do I'm pretty sure I do let
70:03 - me let me find the repo right now at
70:06 - least you can have an example the
70:08 - example might be a bit outdated I don't
70:10 - know that if I'm using fetch or not I
70:11 - might be using Ajax let's see
70:32 - okay I think it's this one so this one
70:34 - called WP API isotope this was just kind
70:38 - of like my first one of my first
70:41 - attempts to use the WP API so I wanted
70:44 - to use isotope which basically gives you
70:48 - a nice masonry layout I wanted to get
70:50 - posts from the WordPress API and display
70:52 - them in that masonry layout using
70:54 - isotope so this is what I came up with
70:56 - and you can see in the app das file
71:03 - I do have let me find there we go okay
71:16 - so here okay I am using Ajax so in this
71:18 - case I'm getting all the categories and
71:21 - so I have jQuery I'm using Ajax I put in
71:25 - the base URL is actually this demo site
71:30 - that we're using for our project now and
71:32 - then I tag on WP - JSON / WP / v2 and
71:37 - then in this case / categories and then
71:40 - I'm also adding per page 100 so I get
71:44 - you know more than just the base
71:45 - categories by default you'll get 20 that
71:49 - would be sufficient for now we don't
71:50 - have a lot of data on the demo site but
71:52 - if we had more you know we want to get
71:55 - more so I'm getting that and then I'm
72:01 - taking that data which is and I'm
72:07 - filtering
72:08 - I'm sorry not filter I'm iterating over
72:10 - that data and I'm appending it so I'm
72:17 - appending it to my Dom element with a
72:22 - class of filters I'm appending these
72:24 - options I'm using a template literally
72:28 - or to make it you know more simple but
72:30 - basically I'm just popping in that data
72:33 - in a similar way that we would do it in
72:36 - a react component so I'm mixing in the
72:41 - HTML markup and the JavaScript
72:45 - using the template literal and that's
72:48 - how we would add it into the DOM and
72:50 - display it right so I'm doing a similar
72:52 - thing with the tags here and I'm doing a
72:57 - similar thing with a post as well so I
73:02 - have some different options in here but
73:04 - if you want to check that out that'll
73:07 - let you know at least using jQuery how
73:09 - to do it it wouldn't be that much of a
73:13 - stretch to look at this and figure out
73:16 - how to do it in vennett with vanilla
73:18 - JavaScript and fetch but anyway
73:21 - hopefully that helps
73:31 - all right Eric says this is really great
73:34 - info I've been beginning these alerts
73:38 - for live streams from free code camp for
73:41 - a while and wish I would have watched
73:42 - more I'll certainly keep up with these
73:44 - awesome glad you decided to watch and
73:47 - I'm glad you liked it
73:48 - so thanks for saying that and thanks for
73:51 - watching hopefully we'll see you in here
73:52 - for some future streams
73:55 - all right Sergio says hey Jesse thank
73:58 - you for your live videos you're welcome
74:01 - thanks for watching and oh cool Sergio
74:06 - says I'm working on the readable Udacity
74:08 - project
74:08 - oh okay awesome yeah let me know how
74:13 - that's going the readable one I just
74:19 - finished that one recently that was a
74:22 - tough one I think that's the redux one
74:25 - where you make like a blog with Redux
74:28 - and you can do voting I should I should
74:30 - you all in a live stream a week or two
74:32 - ago it was the real like retro-looking
74:35 - one anything he said Star Wars for Life
74:45 - OK JH k k JH K says what is github okay
74:53 - Anthony answered it's a powerful tool
74:54 - for code collaboration and version
74:56 - control yeah yeah so git is the version
75:02 - control system that you can use on your
75:06 - local machine and then github is a
75:10 - website where you can store your git
75:13 - repositories which is all your code and
75:15 - the different versions of your code in
75:17 - the history of all the updates to your
75:19 - code and it also allows you to code with
75:24 - other people so other people can
75:26 - collaborate easily on your project and
75:28 - you can still have control over what
75:31 - code you allow into your project from
75:33 - other people so very very useful
75:39 - now Sergio says got guts stacked many
75:42 - times but it's an awesome react Redux
75:44 - app to learn from got stuck though it's
75:46 - been a few days and I totally understand
75:50 - how that goes I was stuck like so many
75:53 - so many times I get stuck and frustrated
75:57 - but keep at it keep at it and if you
76:02 - haven't already make use of the live the
76:06 - live chat feature so if anybody is
76:08 - taking a course from Udacity a paid
76:10 - course there's a live chat feature and
76:12 - that can be really helpful so if you've
76:15 - been stuck for a while you know use that
76:18 - and they'll they'll definitely help you
76:22 - out and get you over you know whatever's
76:24 - giving you trouble there and even if if
76:28 - you get to the point where you're like
76:29 - almost finished and you're not sure you
76:32 - can always submit the project get the
76:33 - feedback and then try again that's
76:36 - that's really helpful
76:53 - okay scar says which server are you
76:55 - using node yeah I'm yeah so it's node is
77:03 - is what we're running everything from so
77:06 - I mean right now it's local and then I'm
77:07 - using something called a service called
77:09 - end rock so that everybody can check it
77:12 - out on their own machines and then once
77:14 - we go live it'll be running on a
77:19 - digitalocean droplet with Ubuntu and
77:22 - nginx set up as a reverse proxy and then
77:25 - node with Express will be what's you
77:29 - know what's actually running the bat
77:38 - okay so the the chubs to the Maxis is
77:43 - there a file upload size yeah actually I
77:48 - should check that I am gonna check
77:51 - whenever I go check with my colleague
77:54 - about this issue as soon as I'm done
77:56 - with the stream I'm gonna check her file
77:58 - sizes and see if that could be the issue
78:02 - if they're just really big files and
78:04 - then maybe we can increase the file size
78:07 - I can't remember for sure if we set that
78:09 - or what we set it at Sebastian says
78:17 - she's not using Internet Explorer right
78:19 - no she knows better than that all right
78:30 - Robert also asked if there are any file
78:32 - size limits so I'm definitely gonna
78:35 - check on that that's a good idea
78:47 - abdul-aziz says is it possible to have
78:50 - two profiles in both github and code pen
78:54 - I guess so I mean you just need an email
78:58 - address for those right so if you had a
78:59 - different email address you could have
79:01 - multiple profiles okay Blake says the
79:09 - the free code camp get videos are pretty
79:14 - good but not in depth though okay that's
79:17 - good to know
79:17 - the Udacity course does get in-depth and
79:20 - that you actually have like test
79:22 - projects that you clone onto your
79:24 - machine and you submit pull requests and
79:26 - things so if you want to get it more
79:29 - into that and handling like merge
79:32 - conflicts and stuff then I recommend
79:34 - that course Blake says when I'm using a
79:39 - CDN should I use magnified or standard I
79:41 - would always use minified if I'm using a
79:44 - CDN because there's no need for you to
79:48 - read that code you're not going to be
79:49 - able to edit it right because it's on
79:51 - the CDN if you were using a local copy
79:53 - and wanted to make changes to it then
79:56 - you know go with the standard but
79:59 - otherwise I don't really know of a
80:01 - reason why you'd want to use manuf ID
80:02 - unless you're just curious and wanted to
80:04 - learn more about how things are done
80:12 - okay Sebastian sent a form from the
80:16 - resource center let me do let me check
80:18 - it out now to see if I received that
80:20 - that form so let me check
80:40 - I did not get it yeah I didn't get
80:46 - anything
80:55 - let me yep
81:00 - I did not get it oh you mean that one
81:06 - okay not now yeah actually I did so it's
81:10 - about Sebastian I did get that and it
81:12 - had some of the exploits and I i fixed
81:15 - that so I used an NPM package that will
81:22 - strip out all of that stuff so thank you
81:26 - for for sending that so that was base
81:30 - the day I found out that they they
81:31 - actually would only run under certain
81:33 - circumstances so if you happen to open
81:41 - it in a browser based email client a
81:44 - particular browser-based email client
81:47 - and then hit reply you could get a
81:49 - script tag to run so it was a very
81:52 - specific case when it would happen but
81:54 - it was still possible so now it strips
81:58 - out you know any script tags as well as
82:02 - it helps protect against some other
82:04 - things too so if you're interested in
82:06 - that you can check out the repo for that
82:08 - project that's the the Resource Center
82:11 - project and see you know some of the
82:17 - later commits will have that that in
82:20 - there I can't remember for sure if it
82:22 - was the last commit but it's close to it
82:32 - okay Blake ass what's the difference
82:35 - between the minified and the non
82:37 - minified code and sebastian answer says
82:40 - minified it removes all spaces and the
82:42 - code is basically two long lines and the
82:45 - standard way it's it's a readable code
82:47 - yeah so you'll see I mean literally
82:51 - everything there'll be no spaces it will
82:52 - be a huge long mine a lot of times the
82:55 - variable names will get changed to just
82:57 - letters so it'll be like ABCD so it's
83:01 - really hard to read and figure out
83:02 - what's going on that's why I say use
83:08 - minified if you're going into production
83:09 - and you don't need to read it you just
83:12 - want it to load faster because it's a
83:14 - smaller file size otherwise you standard
83:17 - if you need to be able to read it and
83:19 - figure out what's going on
83:29 - okay all right so I've reached the
83:31 - bottom of the live chat and I'm gonna go
83:35 - now because I really want to figure out
83:38 - what's going with going on with this
83:40 - error and fix it so I'll be back what's
83:47 - today's yeah it's Morris Friday well so
83:50 - I should be back tomorrow I'll I'll
83:54 - tweet about when I'm gonna stream and
83:56 - also schedule it so you should get a
83:58 - notification if you're subscribed to
83:59 - this channel thank you so much for all
84:03 - your help this was a pretty nice stream
84:05 - I didn't really do that much in this
84:07 - stream but it was it was nice it was
84:12 - kind of a relaxing the stream hopefully
84:14 - you all learned something about git and
84:17 - github and I had a great time so thank
84:22 - you all for for being involved in the
84:24 - live chat for watching and until
84:28 - tomorrow have a great day

Cleaned transcript:

hey everybody welcome to live coding with Jessie today we're going to review some pull requests and merge them and we'll fix any merge conflicts that might come up hopefully we don't get too many but it would be cool to have some just to show how to deal with it on the stream before we get started I have something just for fun so somebody that I work with sent me this link earlier and I thought it'd be cool just to show it check this website out but good look at how amazing this thing is it's just like I I don't even know what to say if as netscape 3.0 I think it's just I mean obviously this was made as a joke but I thought it was pretty funny so anyway alright so let me let me take the live chat quickly and say hi to everyone and then we can we can get started so since we are going to be checking out the pull request if you want to go to the repo you'll be able to follow along with the pull request and check them out for yourself we're gonna start out with pool request number five so the link to the repo is in the description I'm also going to get this end rock server running so that we can all see the website together so I'm pasting that in the live chat now and all right let's see hey see lot of people saying hey hey everyone sebastian says i should use this design for the next project uhhuh yeah so anyway I just it's amazing website if you view the source code it's actually kind of it's nice like there's not that many requests Network requests everything's right there in line so I admire oh and it loads so quickly I don't know that there's that much else to admire but at least I can admire that now I'm I'm like 90% sure that that website was built as a joke and they purposely made it look like that so that's kind of fun all right so let me bring over have a pull request open on my other screen let's bring it over so we can take a look at it and let me make this bigger and increase the font size okay let me know if it needs to be larger font size but okay so we have this pull request from Sebastian I think in correct me if I'm wrong Sebastian I think this is the pour request that was submitted before the stream yesterday and I had hoped that we would be able to make the pull request that we'd be able to merge the pull request on the stream but it didn't happen so the the cool thing is I thought they were going to be merge conflicts but it looks like Sebastian after the stream went in and fixed the merge conflicts so in this commit here so we shouldn't have merged conflicts I'll probably we're gonna check out some of the files that have changed and then we'll pull down a test branch just to doublecheck I've already looked at some of the codes so I I don't think there's going to be any problems at all but it would be cool to go through I know I've done it before on the stream but we'll just go through it quickly and just do the test and then we can merge it right there in the command line so I think last time I didn't merge it from the command line I think we did it from inside the the green button the big green button and github okay so there's a lot of stuff changed in the readme which is awesome so we had the default read me from create react app and now the readme is more specific to a project so that's that's really great that's one of those things that it's like you always know you need to do and you just keep putting it off so thank you Sebastian for that and a lot of this is just refactoring so we're not we're not gonna see like new features involved here but but if you can see I mean there's significant saving of space right a lot of these are going from using the classbased components to the functional components so definitely saving some space there and let's also just okay so the routes have been moved into a separate file which is nice and yeah this is a lot of a lot of switch in the components to the functional and they have says oh okay awesome so not sure if you all notice this but the background color was a different color but it was just in this little rectangle it didn't cover the whole screen so there was this rectangle towards the top of the screen that was a gray a really light gray color so you almost couldn't even see it if you weren't really like paying attention to it but it was annoying me and I I never I went in in dev tools and figured out where it was but I never went in to see what part of the material UI theme it was in so thanks Sebastian that was that was actually annoying me quite a bit so that's awesome and let's see okay it looks like there's a Styles folder so this got moved into a Styles folder that's great and logo I'm not sure what happened with the logo here so maybe we have a new logo or has it been to leave you completely I don't know we'll see whenever we test it out let's see yeah this looks like a lot of just refactoring the functional components okay so now that we've gone through and I obviously I skimmed through that I looked at it a little bit more closely before but really what I'm looking for in a pull request are I mean anything that stands out that's really major like what happened there but also just to doublecheck like is there anything really weird in here that shouldn't be in here so now obviously Sebastian's been submitting pull requests for a while so okay I see Sebastian said the logo thing that was the react logo so Sebastian deleted the react logo so awesome that's another one of those things when you use create react app that you always end up doing at some point but it's just kind of if you don't do it right away it just kind of stays around there until you remember to do it but anyway if you have a lot of people contributing to the project you don't you don't always know their intentions right so you would think everybody would want to contribute positively because I mean that's there it's public you know that that if they were to contribute some code that was terrible or even malicious then you know there'd be a record of it but it could happen so I always do try to check like I said now with Sebastian I'm not really worried about anything like that but you know since this is for you know my my workplace I think I have a responsibility to be able to check that out if anybody ever asks me about it you know I want to be able to honestly say I've looked at every line of code before I merged it to be confident you know about that so I do try to look at every line and make sure that it's all you know it all works so I I think it's not enough just to test the branch and see if it looks okay you know in terms of the front end I you got to look at the lines of code so that's easier with smaller pull requests but the risk at least to me the the risk of something getting in there that shouldn't be in there is just too high if it was a side project that I I wouldn't really worry about it that much but what I said for that since this is for you know the university that work for I'm a little bit more careful with it so that's why I always go through it now and I think we did this yesterday we did this at some point within the last week I think so this will be a little review for those who who watched it if you haven't watched it I'll explain this as I'm going through and I forgot to start my timer all right so we've already taken in 12 minutes all right I'm gonna do the 10 minute timer and that'll put us right around 25 minutes and then we'll do our first break for questions if you're not familiar with how we do the stream I do 25 minutes of coding and then 5 minutes of question and answer and then another 25 minutes of coding after that we usually just do the rest of the show as question and answer but sometimes we do do some more coding today we'll probably just do the two sessions of coding so if you ask any questions and I'm not answering a question right away that's because I'm gonna wait and answer during that questionandanswer session so please stick around if you don't have time you can always watch the recording of this video that's available on this YouTube channel and I'll answer your question whether whether you're here or not I'll still do my best to answer the question okay so let's do it first let's do a get pool just to be sure we have everything from our repo so that's always a good a good move even if you're the only one working on the project I have had this happen before where I've done some some work on a project from home or you know from somewhere else and gotten about it and then I go to work on that project again later on and I don't realize that I don't have all the the changes so I don't have all the updates so then I start making updates and try to push it and then I have conflicts so no matter what you should always start the day off with a good pool all right I happen to be up to date so we're good and let's see and then on the other end of things it's always great to if you you know end the day with a push that way anybody else working on the project or if you have to work on the projects from another location you have all the code you need really you should be pushing multiple times throughout the day but at the very least you should end the day with a push so let's do a get fetch and we're gonna fetch origin the pool request number five we're gonna get the head and we're gonna call this s refactor and let's see if we can do two I don't think I have a branch like name like this so for me this is just my little naming thing you could you know do whatever you want here but I'm saying s for Sebastian and then this is mainly a refactor and this is the second time you submitted to refactor pool requests so that keeps it straight for me in my head but you can name things whatever you want okay cool so we have this now let's check out if you're not really familiar with it you can have multiple versions of your projects existing at one time and they're they're called branches so right now we're on the master branch so this is one version of our project we're going to switch now to the branch that we just created and all the code is going to switch over and we'll be able to immediately see and start working on this alternate version and if we want we can combine versions or we could go back in time to a previous version so it's really helpful for that it lets you kind of I have the freedom to do whatever you want and test different things without worrying about messing up your project beyond repair alright so let's do refactor okay awesome when I die I test the pull request it's a good idea to do yarn or NPM install in case there are some packages now for this pull request there aren't any new packages but I'm just going to do it just for demonstration that's weird it's taking longer than normal okay so there's no packages but if the person who submitted the requests happen to load a new NPM package and you didn't do that then it probably wouldn't work it would seem like the pull request is broken when it's really not so that's another good you know generally a good thing to do okay now you should already be able to see this with an grukk if you've clicked on that link and let me see I'm gonna share that link again in case some of you weren't here when I shared it the first time you're getting the same error okay it looks like there's some air going on so let's check this out where's my is it here no I don't need this up anymore I can't find where we had our there it is I was on the screen already okay so we're still getting that weird error or at least I'm getting it here on locally for me that I get that weird error at first but then if i refresh it it goes away so the next time that happens let's take a look at that error message and try to get that fixed I was ignoring it yesterday but it's it is getting kind of annoying so it'd be better if we could get that fixed all right so oh yeah we're on the home page and let's bring up our console just to check for errors what do we have here we're getting some sort of post error for a three I mean we're still getting our data so let's do a refresh I'm gonna see huh okay it looks like maybe that's where the errors are coming from anyway let's um it is let's do a check where is this the layout the drawer let's just fix this problem right now so it doesn't bother us for the rest of the stream I'm gonna do a check for to see if this exists before we try to map through it that way we won't get an error all right George yes 54 okay so where a drawer all right cool I'm already in this 54 all right we're right here awesome okay so we want to look for to see if data categories exists so if data dot loading is false and dated our categories exists then we'll try to look for this let's see if that does it okay not bad we didn't get an error it's not exactly loading everything but that's better than an error now let's test it again with a refresh and see what happens okay yeah it's still I don't know if it's happening on the end rot let's see I guess I could check right now and see let's get a little refresh okay yeah it doesn't seem to be happening there so I'm not sure at least we got rid of the error message so I could work on that later but for right now we're just kind of testing things out so we're at the category one page here and hmm okay this is not working let's see if we do a hard refresh if it works no it does not all right so we do have a problem okay so this was working so quickly I'm going to switch back to the master branch and see if it's not working on the master branch if it's not working on either branch then maybe it's the WordPress installation that's having the problem so I want to rule that out right off the bat before we start changing our code so check master oops I mean oh yeah I did make changes okay I'm not gonna push that yet okay all right so now we have master Oh okay so let's say that is working and we're still getting these four or threes but this is not working okay so all right so this is all right this is a good reason why you know we test things out before we merge so let's go back and look at the the diff so first place I'm gonna look is in the category J S component right because we did get the homepage to load on that other branch but not the category pages so I'm gonna look there because the homepage shares some of the other components so the problems shouldn't be in those so let's check it out we'll look there first and if we can't find it there then we'll look at that particular piece of code that's getting the data for that component J s or that category J s component so we should have this open and we do oops let me I didn't want to look there I wanted to look here so let's find if anything changed in category which I believe it did ergo category all right now we're going to go through this particular file a little bit kind of more slowly and pay attention to what's going on here okay so we've just done some refactoring she's fine this should work render cat all right so far that looks identical at least that render categories part let me go up here and see all right let me check the live chat see if you all saw anything okay I don't see anything right now all right I want to do this entire thing and walk through this alright let's go back to our back to our other branch so we're gonna go back to other branch and we'll let this load now we've taken care of the error message which is good that we did that because now we'll be able to inspect and see a little bit behind the scenes so what's going on so let's go into react right now and see what kind of props we have category here all right so there's some error okay so it looks like our data so we're not even getting the proper data we're getting an error message back Oh okay Sebastian has a thought here about the the URL so maybe somehow the URLs didn't get let me try to get back if you might be onto something I let's think I don't remember what it was but yep that's it I but I think this is it all right right so somehow probably when you were handling the merge conflicts somehow the previous way that we handle these got mixed in so if you remember at the end of yesterday stream we were able to use the category slug instead of the ID so right now we're still using the ID here so the IDS getting passed in but the graph QL API is expecting the the slug so it's returning nothing because we're not giving it a slug we're giving it an ID all right so that's that's not a big deal that's a pretty easy fix so in this case I'm not going to throw out the pool request because of this right let's get the fix test it and then if that's the only thing that's wrong then the rest of the pool request is perfectly fine and we can just merge it in so let's go in here to probably it'll be our routes right so that was the we have our routes file somewhere else now where is it routes here we go okay so here's our routes okay so it does say slug here so that's fine let's go back to our category then maybe it's here at the bottom that's firm slug no we are we are giving the slug in here let me up let me double check and make sure ok let's check our drawer and see there it is that's what we need to change so this node ID needs to be node slug ok let's see you know what I want to double check to make sure this is the latest version occasionally when I switch branches it doesn't update an atom right away so let's make sure we have the right one and now let's check this out okay so instead of ID let's put slug and this should fix everything so go back to the home page let's refresh all right now when we click on category one good we have the right great thing in URL here category two wonderful that way three awesome oops actually this shouldn't be worries yeah let's take out this link because we don't need this to be a link this is just a section header so I'm gonna take that out right now while we're we're already here so categories is not gonna be a link it's just gonna be a list item and let's see what that that looks like okay it still looks like you can click on it but you can't for now what we'll need to do is we'll go in and change this up so it doesn't have these styles like a button at some point I'm not worried about that right now we'll take care of that whenever we get you know everything in here and then we'll really start to style this exactly how we want it but it's not really a point in trying to style it now and so we have it all filled out with with what we want okay awesome all right cool Sebastian says glad you found that issue this is why you always review and test PRS before merging yeah definitely I'm actually I'm really glad that that happened for two reasons one it was awesome just to show like hey it it was good that we were taking our time with this pull request because we caught this before it got merged into master I mean can you imagine if this was a production application right and we didn't test it thoroughly and we pushed that out to production right immediately we would have users getting errors so right now the stakes are pretty low because it's still just you know kind of local here but you know in a more mature project that's actually live it could have been disastrous the second reason why I like this and I hope Sebastian won't get mad at me for saying this is I'm really used to me being the one that messes up that makes a mistake so so at this time it was it happened to be Sebastian just missed that one little thing which I hope you don't mind that I was just kind of making fun of you a bit Sebastian but you've been here with the live in in the streams and everything for a long enough time that I think we're ok to do that also realistically Sebastian did a lot of really good stuff in that pool request the fact that he was able to do all that and only have one tiny little mistake I mean literally that's it right I mean that's huge because the the fixing all those merge conflicts was probably a big deal I was not looking forward to have to do having to do all that I was really happy when I saw that Sebastian did that so anyway so I'm just messing with you a little bit I know how hard it is to go through and get all those merge conflicts sorted out all right awesome so now really quickly I'm just going to click around just to make sure that we hit every view all right this didn't have a an image right let's click one that did Evan M is just double check okay cool and that's it we don't really have a lot of views yet so that should be as we've tested our category view we tested our home view and our post detailed view that's it that's all we have and it looks like for some reason we're still getting four or threes let me clear this out and do a refresh let me do a hard refresh because you know how for some reason we're getting that's really weird mmm single post detail query variables ID okay so I mean we're sending what we're supposed to be sending let me check my time oh I knew I had to be out of time okay and again for some reason I'm not getting the the beat usually I get I hear a beep I got it working for a few days and I'll quit again okay let me take now five minutes and go through the live chat and answer some questions then we'll come back and merge this in I think I'm gonna have to double check in the slack channel for our WP graph QL plugin I think someone else was getting four or threes but basically I'm not like I said I'm have to double check but from what I remember I think even though it's sending four or threes it's also sending the data that we need so it's working it's just the errors are coming through so I'm not that worried about it right now I do want to double check but I think it shouldn't affect us you know other than having those errors in the console but it shouldn't affect us right now we'll be safe to you know move on with the rest of the development of our app all right short break five minutes I'm gonna scroll to the top and get through as many questions as I can again I see a lot of a lot of you saying hi so hey everyone hey I'm a I would love to be able to go through everyone's name and say how do you all personally but the stream would probably be really long if I did that but I do I do read them all I see all of your name so I appreciate it denaun J says asks how how are you says how are you buddy actually I'm really good now once the stream started I'm really good but to tell you the truth all day I was super distracted and just felt like no motivation at all I had to work with some other people's code from another company that we're contracting out too do some stuff and it was said it made me want to cry really it was an angular application and that wasn't the problem the problem was like they were loading so many different things they didn't need it was like 72 Network requests for one page that had minimal stuff on it I'm it just had a couple of links it was insane and I was trying to change the styles and they had stuff in style sheets that were LinkedIn they had stuff in style tags in the head they had inline Styles it was just all over the place and trying to get everything to override what it needed to it took way longer than I hoped it would take and that's like not even it's not even one of my official projects it's just some other thing that I was helping out with because because I care how the university sites look even if they're not ones that I built anyway so that's a little bit about how I'm doing but the streams always cheer me up and break me out of whatever weird mood I'm in ego says I should not have looked at that link in the chat now I'm hungry so Eva looked at the site and so the delicious looking meat so as long as you're not a vegetarian that I would probably be tasty it will probably look tasty tea oh cool so coup de quash a sorry if I'm mispronouncing that but I think it's coup de quoi Shay says hey Jesse what's up this is coup de casa all the way from Zimbabwe awesome thanks for joining us I don't know if you've been in previous streams or not if I've seen that but if not welcome and I'm not sure I don't know if we've had anyone from Zimbabwe so far I mean we may have and they just didn't say they were from Zimbabwe but welcome that's it Blake says I'm watching the force awakens' cool I just watched the trailer for the new Star Wars is anybody in the livechat a Star Wars fan so I I wasn't gonna watch the new trailer because I was afraid it would give away too much I just wanted to be surprised but then I talked to the head of my department is a big star Wars fan and she she was telling me that she was really excited after watching the trailer and she assured me that there weren't any bad spoilers so I decided to watch it so it was cool it got me excited I didn't get goosebumps like the force awakens trailers gave me goosebumps when I first saw them but so I didn't get that level but it was still good I'm so excited for it okay so ref says I think it's better to do small working logical commits so it's easier to for someone to review it and he doesn't like to read a thousand lines of code okay I agree yeah so I think I mentioned this at some point this week I do prefer that so being on this side of things and having to review pool requests I definitely realize like what what makes the pull request easier to to handle so if you're submitting so be honest with you if you all take the time to submit I'm gonna review a pull request no matter what and do my best to make it work because I really appreciate your time you know and volunteering that but if you're submitting to other repositories and you really want to get your pull request merged then try to make it small and really to the point like just change one thing think about it like when you're making a react component you want that component to just do one thing ideally right and you break your site up into all these little chunks think the same way when you're doing your pull requests is that you want your pull request to do one specific thing that you can clearly say this is what it does succinctly and someone could go through and easily see what changes were made in just a minute or two you're much more likely to get your pull requests merged if you do that because the maintainer x' will be able to get through it quickly and be sure that it's not going to mess anything up so that's my I'm certainly no expert if you look at my github repo I haven't gotten a lot of pull requests merged probably the number one reason is I'm a little bit overwhelmed with my workload right now not just here at work but in the courses that I'm taking on the side and before I had a course I had a client that was had a big project so at some point when I get through this course I'd really love to try to give back some of those repositories that you know I've used and benefited from so I'd love to be able to do that so recognize I'm not really an expert but I do review pool requests and I know what's easy and what's difficult all right so I'm done with my five minutes of questionandanswer so I'm gonna remember where I left off at and and I'll come back to there after we get done with our next 25minute coding session oh those says the audio is too loud it's clipping let me know if anybody else is hearing some distortion in the audio or something let me know I did remember to move my phone farther away but I have it connected to my computer and the cord is somewhat close to the mic so maybe that's interfering so let me know because I don't want okay it looks like audio is okay all right so whatever it was it's I guess it's not happening anymore also I noticed my audio is kind of off so at the beginning of the video it's okay but towards the end of the at least of the recordings the audio is not synched with my mouth so I don't know if it's like that during the stream or not I guess you all have to let me know but it's it's somewhat annoying well I've been going back and watching a little bit of the stream the previous streams I'm not really sure what I can do about that though I'll have to look it up if anybody's familiar with OBS and uses it let me know how you fix the issue of everything getting out of sync okay all right let's go we're gonna get we're gonna get this pull request merged in and we have another pull request that's much smaller so it shouldn't be quite as much work to go through the code and let's see oops what I'm looking for my terminal where I'm going here okay okay so we did modify this what did we do here okay we had to change that that's right I didn't realize we hadn't committed that yet okay so if you're not familiar with yet what I just did there was I did a status to see if we had anything that had changed that we didn't commit yet and we did and I couldn't remember what I changed so I did it get diff and then that shows us what's changed our layout our drawer j/s component and it'll actually show me so the red is things that have been deleted right and the green is what has been added so we can see right here in our console what has changed so now I know what's changed and I got out of that by pressing Q now I can commit this since I know what it was this changed so we're gonna do a git commit the a flag means we're gonna add and commit at the same time we're combining two steps the M means we're going to put a message in line here so our commit message will be use all right so you slug instead of ID for category links there we go alright so now I'm not gonna push this right away I'm gonna merge first and then just push it all up right to the master branch so what I always like to do first and it shouldn't we shouldn't have any merge conflicts because they've already been taken care of by Sebastian but what I do like to do first is do a git merge master so I'm merging master into our current branch or s refactor to branch and then that way if there are a bunch of conflicts we haven't messed up our master branch and kind of locked it up we'll lock up this branch and then we can always switch to master right because what we want to avoid is a situation where we try to merge something in a master there's all these merge conflicts we're starting to work through it we're halfway through all these merge conflicts and then we get an emergency and we need to change something on master right away and push it up to production well now what are we going to do right it's it's going to be much more difficult there you know there are ways to stop that to cancel a merge right but it you see how it could get a little bit messy but if we do it like this if that happens all we have to do then is just switch back to our master branch we can even commit some of the stuff that we've done all right we can cancel our merge what you do whatever you want with it because it doesn't matter it's a side branch right so we can go back to master make our changes come back to our other branch and then merge those new changes back in and then once we're satisfied with everything and there's no conflicts then we take it back to master so hopefully that makes sense but so I said with this project it's still small its local probably not an issue but it's good to have you know the good habits even on the small projects and then you'll remember it when you have the the bigger projects okay so now we're gonna go back to master and we're going to merge this into master so from our master branch we're gonna do get merge and we're gonna merge in that branch we were just on there we go so now we get our message it just gives us a little summary of what's been done right so it'll say in the case of like the readme right we've deleted quite a few lines by we I mean Sebastian has deleted go ahead a few lines and add it a bit right so we get a little summary I usually don't look at this too much because at this point I've already reviewed all those lines right this shouldn't be the first time you're looking at the lines right because you review before you merge but this should work so again let's check out okay in my back now it looks like alright awesome back on I don't know what happened well it seems like my internet cut out the weird thing was you know my icon seemed like it was you know the network was fine just really weird okay okay hey we just got an error report from something that we made so maybe if we get this other pool crest merged in quickly maybe let's take a look and and check out this error report from the resource center one of the forms on the research center that we just did that was projects so that might be cool to check out alright so for now let's make sure that this works okay it works it was definitely just my connection that was causing the problem and all right so if you see on our our pool requests oops let me go back to the main one our pull request oh we didn't push it back up sorry so let's go get push origin master this will push everything up to get up now what we should see is it's merged see so everything's merged and grid okay cool so we have that merged in let's check out our next pool request and let's see so not really an explanation yet right because it's really small but Sebastian has pointed something out here so let's check it out all right that's a really good point so smashing noticed if we have our our drawer basically on large screen sizes we own our drawer to be open automatically with the do you want the option to shut it or we know we remove the option to shut it so on smaller screens the drawer is going to be closed but we do have somewhat of a problem if we make the screen larger so let me demonstrate this now we should be able to demonstrate this problem Oh actually I thought we removed this maybe I removed it at some point and then it didn't get merged in right anyway let's let's pretend like we don't have this here because I'm pretty sure we had decided we're gonna remove it so we're on a small screen and we make it bigger do we have no we do we have that button we still can do it alright let's um I guess the problem is nut is the other way right now when we go to a smaller screen if we didn't have this button which we probably won't to close it it's really unusable so we would need you know something to handle that the only time this would really come into play I would imagine is in you know the potentially rare case that someone has a large smartphone and they're in landscape mode when they load the site and then they flip it to portrait mode that's probably the only case that I would think that someone would that that would happen that we would need to worry about now I mean obviously we need to have something and that's what Sebastian let's check out what Sebastian's solution was so there's a responsive drawer with material UI and it looks like looks like harsh it's gonna handle that so this pool requests okay so it's I think what's going on here and let me know I don't think our shoots watching but Sebastian let me know I think what happens is the the change that you had talked about here has not been implemented yet is that correct if so maybe we'll hold off on merging this in because it seems like hardship was planning on doing that so maybe I'll just give it another day and I'm fine doing it as well but in fact I would probably do it on the stream right now if I didn't get this error report in okay cool so let's let's put this on hold and since this is kind of still in process here we'll give it we'll give it another day maybe tomorrow to be ready let me check my time okay ten minutes all right so we have another ten minutes or so of coding time I just got an error report from someone who works with me here in our project number two so let's check this out if if you don't know already this stream is just me doing my daily work so while I try to have a certain topic and stick to that sometimes things come up and I have to deal with it so in this case this is one of those times we have people who are trying to submit things through the Resource Center and they're getting an error message and they're not able to submit so at first I thought maybe you know they're being thrown off by this button being disabled maybe they haven't filled out all the required fields but I've just got confirmation now that that's not the case what's happening is users are trying to upload more than one file on the file upload and it's not letting them which is a bit weird so the the test case that I'm I got tried to upload two PDFs so let's first try to recreate this so the test case was done on a Mac on Chrome so we should be good to recreate it here so let's try to find two PDFs let's see it says okay cool and I know I just showed you all my address and phone number I don't care if you call I don't answer my phone I let everything go to voicemail so if I don't answer leave a message and I don't care about my dress being out there too because when I was a freelancer my business was listed at my home address so all it takes is a Google search to find it let's see let's try to find I'm gonna try to recreate this as closely as possible so let's find PDFs I think I should have some PDFs in my downloads I actually might make my documents PDF budget codes and okay so I'm gonna grab this bulletin and this budget code PDF and let's open those and we'll try to upload them okay well that didn't work all right I'm gonna try this now I've noticed Kevin notes notes watt note solo says hey you are crazy I'm heading straight to your huh I really don't think it takes that much effort to find out someone's address right like people are listed in phone books it's really I don't know it's such a minor inconvenience I don't worry about it like to be honest with you I have an alarm system so I live out in the country all my neighbors have guns like it's not really a huge it's not like I'm really afraid that much of people coming out so let's see okay I do want to know it I did I noticed in the file upload here they had some spaces in the name Crona says can I go chill with you for a bit around 700 p.m. I'll be putting my kids to sleep around 700 p.m. so you can come chill and just hang out until I'm done putting the kids to sleep actually what's the date today oh it's the 12th tomorrow the new season of Voltron comes out on Netflix so I'll be watching that with my kids at 7 p.m. tomorrow I'm checking to get the hmm okay here we go I should have got that request all right so it did go through I got confirmation by email that that request went through I'm gonna doublecheck now that it went to our project management system I'm doing this on my other screen just in case there's any projects that are like shouldn't be released yet that I don't want to put it on YouTube okay yep the files did come through harnesses I don't get shot that yeah yeah if somebody if you come to my house and you want to hang out and you don't want to get shot then maybe just call me ahead of time or send me a message let me know don't let come banging on my door at one o'clock in the morning cuz I'll be freaked out other than that it should be okay you know I don't wear like a ski mask and creep around in my yard as long as you don't do that you should be fun I actually did I had a neighbor once that came through they came in like I was already asleep and he was banging on the door and then he went around to the back door surveying on the back door so I got up and I'm like he was trying to get in my house so I grabbed the gun and I'm going to the door and it's the neighbor so I realized it was a neighbor I put it behind my back so I didn't freak him out but I mean we had recently moved into the house and I wasn't sure like about the neighborhood or anything so I was pretty freaked out but I I definitely would not shoot first though so I'll give you a chance to explain yourself I'm not sure how to recreate this I don't think I don't think I'm gonna be able to recreate this here on the stream I'm gonna need to go to I'm just gonna go to this person's computer because she's like three offices down for me so after I end the stream I'm gonna go check it out she's also taunting me in the slack channel by saying there pumpkin cookies and they're not gonna be any left by the time I finished streaming so I okay so here's what we would do I know we have two minutes left or so but we're just going to start the question answer session a little bit sooner I had hoped we'd be able to figure this out but I mean if you've ever tried to replicate issues you know sometimes it can take a while so I don't want to just you know keep trying a bunch of things and come up empty on the stream if I find the issue though I'll let you all know tomorrow if I forget and you're interested just remind me in the stream tomorrow and we can go over what the problem was let's see let me go back to where I left off in the live chat okay oh cool rook says while that branch change did update the code incredibly quickly time to learn more about get yeah for sure get as get is awesome I can't believe I don't even remember what I did before I used to get definitely changed the way that I worked for the better if you do want to you to learn get I recommend you dasa d has a free get in github course that's excellent and there are some videos on on this channel the free code camp Channel about get I didn't do them but I haven't really watched the free code camp once so I can't personally say talk about their quality but I mean usually free code can't videos are are pretty good quality so I'm confident about that and then code Academy has a free get course as well if I out of the three for me like I said I didn't watch the videos but the most helpful was the Udacity get course okay Blake says yes is there a weight and eat the way to easily fetch data from a wordpress site and render it on a plain HTML site yeah definitely here's what I would do you have a plain HTML site you want to use you can either use fetch which I recommend using you maybe have to use a polyfill if you want to support older browsers if you're already loading jQuery you could use Ajax but one of those two I'd recommend using and then you can just basically when the page loads or on click or something like that you can use the WordPress REST API the rest api would probably be the simplest so you use the rest api make your api call so you would just send a I think it's a get request with the word to the REST API you'll get the data back and you can render out however you want on the page just using some some JavaScript and like I said if you already need to load jQuery for something it makes it even easier but you certainly don't need to have it so that's how I would do it if you want to know more about doing it trying to think if I have any public repos where I do that actually I do I'm pretty sure I do let me let me find the repo right now at least you can have an example the example might be a bit outdated I don't know that if I'm using fetch or not I might be using Ajax let's see okay I think it's this one so this one called WP API isotope this was just kind of like my first one of my first attempts to use the WP API so I wanted to use isotope which basically gives you a nice masonry layout I wanted to get posts from the WordPress API and display them in that masonry layout using isotope so this is what I came up with and you can see in the app das file I do have let me find there we go okay so here okay I am using Ajax so in this case I'm getting all the categories and so I have jQuery I'm using Ajax I put in the base URL is actually this demo site that we're using for our project now and then I tag on WP JSON / WP / v2 and then in this case / categories and then I'm also adding per page 100 so I get you know more than just the base categories by default you'll get 20 that would be sufficient for now we don't have a lot of data on the demo site but if we had more you know we want to get more so I'm getting that and then I'm taking that data which is and I'm filtering I'm sorry not filter I'm iterating over that data and I'm appending it so I'm appending it to my Dom element with a class of filters I'm appending these options I'm using a template literally or to make it you know more simple but basically I'm just popping in that data in a similar way that we would do it in a react component so I'm mixing in the HTML markup and the JavaScript using the template literal and that's how we would add it into the DOM and display it right so I'm doing a similar thing with the tags here and I'm doing a similar thing with a post as well so I have some different options in here but if you want to check that out that'll let you know at least using jQuery how to do it it wouldn't be that much of a stretch to look at this and figure out how to do it in vennett with vanilla JavaScript and fetch but anyway hopefully that helps all right Eric says this is really great info I've been beginning these alerts for live streams from free code camp for a while and wish I would have watched more I'll certainly keep up with these awesome glad you decided to watch and I'm glad you liked it so thanks for saying that and thanks for watching hopefully we'll see you in here for some future streams all right Sergio says hey Jesse thank you for your live videos you're welcome thanks for watching and oh cool Sergio says I'm working on the readable Udacity project oh okay awesome yeah let me know how that's going the readable one I just finished that one recently that was a tough one I think that's the redux one where you make like a blog with Redux and you can do voting I should I should you all in a live stream a week or two ago it was the real like retrolooking one anything he said Star Wars for Life OK JH k k JH K says what is github okay Anthony answered it's a powerful tool for code collaboration and version control yeah yeah so git is the version control system that you can use on your local machine and then github is a website where you can store your git repositories which is all your code and the different versions of your code in the history of all the updates to your code and it also allows you to code with other people so other people can collaborate easily on your project and you can still have control over what code you allow into your project from other people so very very useful now Sergio says got guts stacked many times but it's an awesome react Redux app to learn from got stuck though it's been a few days and I totally understand how that goes I was stuck like so many so many times I get stuck and frustrated but keep at it keep at it and if you haven't already make use of the live the live chat feature so if anybody is taking a course from Udacity a paid course there's a live chat feature and that can be really helpful so if you've been stuck for a while you know use that and they'll they'll definitely help you out and get you over you know whatever's giving you trouble there and even if if you get to the point where you're like almost finished and you're not sure you can always submit the project get the feedback and then try again that's that's really helpful okay scar says which server are you using node yeah I'm yeah so it's node is is what we're running everything from so I mean right now it's local and then I'm using something called a service called end rock so that everybody can check it out on their own machines and then once we go live it'll be running on a digitalocean droplet with Ubuntu and nginx set up as a reverse proxy and then node with Express will be what's you know what's actually running the bat okay so the the chubs to the Maxis is there a file upload size yeah actually I should check that I am gonna check whenever I go check with my colleague about this issue as soon as I'm done with the stream I'm gonna check her file sizes and see if that could be the issue if they're just really big files and then maybe we can increase the file size I can't remember for sure if we set that or what we set it at Sebastian says she's not using Internet Explorer right no she knows better than that all right Robert also asked if there are any file size limits so I'm definitely gonna check on that that's a good idea abdulaziz says is it possible to have two profiles in both github and code pen I guess so I mean you just need an email address for those right so if you had a different email address you could have multiple profiles okay Blake says the the free code camp get videos are pretty good but not in depth though okay that's good to know the Udacity course does get indepth and that you actually have like test projects that you clone onto your machine and you submit pull requests and things so if you want to get it more into that and handling like merge conflicts and stuff then I recommend that course Blake says when I'm using a CDN should I use magnified or standard I would always use minified if I'm using a CDN because there's no need for you to read that code you're not going to be able to edit it right because it's on the CDN if you were using a local copy and wanted to make changes to it then you know go with the standard but otherwise I don't really know of a reason why you'd want to use manuf ID unless you're just curious and wanted to learn more about how things are done okay Sebastian sent a form from the resource center let me do let me check it out now to see if I received that that form so let me check I did not get it yeah I didn't get anything let me yep I did not get it oh you mean that one okay not now yeah actually I did so it's about Sebastian I did get that and it had some of the exploits and I i fixed that so I used an NPM package that will strip out all of that stuff so thank you for for sending that so that was base the day I found out that they they actually would only run under certain circumstances so if you happen to open it in a browser based email client a particular browserbased email client and then hit reply you could get a script tag to run so it was a very specific case when it would happen but it was still possible so now it strips out you know any script tags as well as it helps protect against some other things too so if you're interested in that you can check out the repo for that project that's the the Resource Center project and see you know some of the later commits will have that that in there I can't remember for sure if it was the last commit but it's close to it okay Blake ass what's the difference between the minified and the non minified code and sebastian answer says minified it removes all spaces and the code is basically two long lines and the standard way it's it's a readable code yeah so you'll see I mean literally everything there'll be no spaces it will be a huge long mine a lot of times the variable names will get changed to just letters so it'll be like ABCD so it's really hard to read and figure out what's going on that's why I say use minified if you're going into production and you don't need to read it you just want it to load faster because it's a smaller file size otherwise you standard if you need to be able to read it and figure out what's going on okay all right so I've reached the bottom of the live chat and I'm gonna go now because I really want to figure out what's going with going on with this error and fix it so I'll be back what's today's yeah it's Morris Friday well so I should be back tomorrow I'll I'll tweet about when I'm gonna stream and also schedule it so you should get a notification if you're subscribed to this channel thank you so much for all your help this was a pretty nice stream I didn't really do that much in this stream but it was it was nice it was kind of a relaxing the stream hopefully you all learned something about git and github and I had a great time so thank you all for for being involved in the live chat for watching and until tomorrow have a great day
