With timestamps:

00:00 - what's up guys and welcome back to
00:01 - another video so in today's video we
00:03 - will go through the bat plot live
00:05 - library of Python and this is a super
00:07 - useful library for all things data
00:09 - visualization in Python so the video
00:12 - will start off with going through the
00:14 - matplotlib basics so as you see on the
00:16 - screen will be creating like line graphs
00:18 - such as the one you see here you'll
00:20 - learn how to format these lines in
00:22 - different ways you'll be able to add a
00:24 - title you'll be able to add labels to
00:26 - your x and y-axes format your tick marks
00:30 - properly add a legend etc so all the
00:33 - kind of basic matplotlib things you want
00:35 - to know then we'll move into other types
00:37 - of graphs such as bar charts and we'll
00:40 - finish this video off with going through
00:42 - all sorts of like real world examples
00:44 - where you can kind of combine your data
00:46 - science skills that you might have using
00:49 - like pandas library and if you haven't
00:51 - learned anything about the pandas
00:52 - library I recommend you watch my video
00:53 - on that so with that the kind of real
00:57 - world examples will do stuff such as
00:59 - like plot the USA versus Canada gas
01:01 - prices off of data that we have a little
01:04 - link to in a CSV we'll do some histogram
01:07 - stuff we'll do some pie chart stuff and
01:10 - we will do some box and whiskers chart
01:13 - stuff I can't get through every type of
01:16 - graph in this one video but if there's
01:18 - certain things that I didn't cover and
01:19 - you really want me to cover it let me
01:21 - know in the comments that would be super
01:23 - duper yeah that's all I got to start
01:27 - this video let's just jump into it all
01:30 - right let's start out by loading in the
01:32 - libraries that we need for this tutorial
01:33 - so we're an import and map plot live as
01:35 - our dot pie plot as peel of T we're
01:41 - gonna import numpy as NP and we're gonna
01:45 - for the later examples import pandas as
01:47 - PD and run that and so if you have all
01:51 - these us like already installed you
01:53 - won't get any errors if you do get these
01:55 - get an error when you're trying to run
01:56 - them onto these you find need to install
01:58 - it so you can either do a pip install
01:59 - matplotlib pip install numpy pip install
02:03 - pandas or you could install a Python
02:05 - distribution that already has these
02:06 - packages such as anaconda I'll link to
02:09 - how to do this
02:09 - the description okay so now we have our
02:12 - libraries loaded let's now build our
02:14 - basic graph so I just think it's kind of
02:25 - the hardest part about anything with
02:27 - Python in general is starting with that
02:29 - blank blank space so what I recommend
02:33 - for matplotlib is always start at the
02:35 - documentation so I have a link for this
02:38 - in the description but here is the home
02:41 - page of the matplotlib pipe lot
02:43 - documentation and what I recommend is
02:45 - like whenever we're trying to do
02:46 - something new just do a ctrl F and like
02:49 - look for it so if we look for plot here
02:51 - that's like we're just trying to get a
02:53 - line graph on the on the screen box
02:56 - plots not only one we don't want it been
02:58 - plot okay this looks good plot y versus
03:01 - X as lines or markers so this is what
03:03 - we'll start off by doing as you can see
03:06 - right here and the examples it gives
03:07 - gives plot X comma y so that's the
03:10 - command will F the run to make this work
03:13 - and just to know what x and y are if we
03:16 - go down to parameters they tell us that
03:19 - commonly these parameters are 1d arrays
03:21 - so we know we need to pass in 1d array
03:24 - to the plot function so if we do plot 1
03:28 - 2 3 that's gonna be our x + 2 4 6 will
03:36 - be our Y I can't type and run that plot
03:41 - is not defined so we imported pipe lot
03:44 - as plot so when we run this function we
03:47 - actually have to do P love T dot plot
03:49 - and then this is our X and the second
03:53 - array is our Y so let's see what happens
03:55 - there yay we got a graph and to clean
03:58 - this up a little bit I recommend moving
04:02 - our variables into removing our arrays
04:05 - into variables so X is 1 2 3 and Y is 2
04:11 - 4 6 and we can change now this to X Y
04:18 - and one thing that's annoying with the
04:20 - matplotlib if you're doing this in
04:21 - Jupiter notebook by default is you have
04:23 - this annoying little line here so you
04:25 - want to get rid of that you can just
04:26 - actually call plot dot show and that's
04:30 - the correct way to actually show this
04:31 - graph okay now that we have just a line
04:38 - on the screen let's start adding a
04:40 - little bit more to our graph so to do
04:43 - this let's go back to our documentation
04:45 - and go back to just the pie plot so I
04:49 - think this is a good spot to start
04:50 - because you always can kind of just ctrl
04:52 - F and find something you're looking for
04:54 - so let's say we wanted to add a title to
04:56 - our graph if I type in title it points
05:00 - me right to a couple different places
05:01 - that I probably want to look at and
05:03 - right here is what we're looking for so
05:05 - set a title for the axes click that and
05:09 - this tells me all sorts of stuff about
05:12 - how I call this so it looks like I use
05:15 - do pie plot title so I can do plot title
05:22 - and let's just do our first graph and
05:31 - run that as you can see our title is now
05:35 - there and same thing for a lot of the
05:40 - different parameters so going back to
05:43 - the documentation if I want an X level
05:46 - on a while label I just type in right I
05:49 - guess I knew that but let's just say Y
05:53 - label nothing comes up Y or just even
05:57 - label C label label a contour plot
06:00 - that's none of us the fig labels no pie
06:03 - no title no X label Y label let's how we
06:09 - get there so you can keep doing this and
06:12 - really easily find what you're looking
06:15 - for I think it's a good place to go if
06:18 - you kind of just if you forget things
06:20 - because I always forget things in that
06:22 - plot lid okay so adding a label to x and
06:25 - y plot an X label
06:29 - x-axes and I guess I'm getting really
06:33 - enthusiastic because we keep adding
06:34 - exclamation points to all of my stuff
06:37 - y-axes yay
06:40 - see what happens yeah and I want to just
06:44 - get rid of these recommendations I don't
06:45 - need them okay so now we have a graph
06:48 - and we have a title and we have y axis x
06:52 - axis in a real graph we would label
06:55 - these properly but for the sake of this
06:57 - example we're just kind of getting a
06:59 - feel for how we add these alright so now
07:02 - that we have our title and labels one
07:04 - thing we might want to do to them is
07:05 - resize them so if we look at the the
07:10 - documentation for title one thing you'll
07:12 - notice is that you can use you can pass
07:15 - in this font dictionary and it gives you
07:18 - a little bit of details about the font
07:19 - dictionary here but basically there's
07:22 - all sorts of options that we can do and
07:24 - like play around with our font so let's
07:26 - say I wanted to change the font of our
07:29 - title a new font dict equals and I can
07:32 - pass in a font name and let's say I my
07:37 - good old trusty reliable comic sans ms
07:41 - will be our new font and if you look at
07:45 - that we got a nice new font on a graph
07:49 - and if you can't see it well then in
07:52 - that case I'll change the font size to
07:55 - be something like 20 now you should
07:59 - definitely be able to tell that I've
08:01 - changed the font type and in the
08:05 - description I listed I put a link to all
08:08 - the known matplotlib fonts that you can
08:11 - use and if you look through the
08:13 - documentation you kind of find some
08:14 - different options you can do with this
08:16 - and you can also do the same thing with
08:19 - the labels I could do like font dict
08:23 - equals let's say I wanted to make this
08:27 - font
08:28 - arielle and that obviously might be the
08:31 - default but if I did it like Comic Sans
08:34 - as well
08:37 - you can tell that x-axis now has changed
08:41 - but I wouldn't just leave that this be
08:43 - for now okay so we did labels all right
08:49 - so that one thing that's bothering me is
08:51 - the tick marks I want to let's say I
08:53 - just want to do integer numbers and I'm
08:56 - gonna add a couple more values to our
08:58 - graph so I'm gonna go to five I'm gonna
09:00 - start at zero and Y would go from Y is
09:05 - always going to be two times X so it's
09:09 - gonna look like that oh I would
09:12 - magically did it for us
09:13 - at that case I don't want it to
09:18 - magically do it for us okay let's say we
09:20 - went to four and we wanted just the
09:23 - integer values we didn't want any
09:25 - decimal value so how do we change our
09:27 - ticks so we can do that by doing plot X
09:32 - ticks and our X ticks will do 0 0 1 2 3
09:38 - and I also just found remember this
09:40 - command by using the documentation and
09:42 - our wide ticks will be I have a 0 to 10
09:48 - every 2 so it was 0 2 4 6 oh my gosh 10
10:00 - as you can see that now we have the tick
10:04 - marks working properly and maybe I
10:06 - wanted to add 4 as well so now we
10:09 - labeled our ticks differently and one
10:12 - thing that's cool to know is that the
10:13 - graph will automatically resize based on
10:15 - how we set this so if I set one tick to
10:18 - a thousand well now our graph kind of
10:22 - looks like not too good but it's nice
10:26 - that you can easily do that 4 is better
10:30 - but and you can do the same thing with y
10:33 - I'd say when do they make the last one
10:35 - 100 as you can see it changes up the
10:40 - sizing of the graph one thing that's
10:42 - also cool though is find it even if I
10:44 - didn't even lis space these out if I did
10:46 - like 7 he
10:47 - and then 7.5 as you can see it properly
10:51 - puts those at the right spot in the
10:54 - graph I'll leave it like this I'll leave
10:58 - it a little bit weird but yeah that
11:01 - looks good to me okay so we have our
11:03 - first graph let's add a legend and make
11:06 - this line a little bit more exciting
11:08 - color wise so if we wanted to add a
11:11 - legend we can do and I'm gonna actually
11:14 - kind of like showing how the
11:16 - documentation is helpful if I looked up
11:20 - legend
11:21 - Figg legends that might be work just
11:25 - this legend place a legend on the axes
11:28 - like by looking up legend I I've figured
11:30 - out that the call is just legend and it
11:33 - gives me some examples so I always like
11:35 - to refer to this documentation okay so
11:39 - PLT legend and what happens when I do
11:42 - that no handles with labels fans put in
11:46 - legends so it's complaining because we
11:48 - don't have anything to label what it's
11:50 - saying is how do we label this line and
11:53 - the way we do that is by passing in a
11:56 - label to our plot function so in this
11:59 - case our X&Y we plotted X to be or Y to
12:04 - be 2 times X so I'm going to call the
12:06 - label here 2x and as you can see we get
12:11 - 2x right there
12:13 - okay let's say now that we wanted to
12:15 - change up the color of this line maybe
12:18 - make it thicker do some other things to
12:21 - it if we go to plot
12:30 - whereas plot we'll see all sorts of
12:34 - properties that we can do and plot so
12:37 - what I'm seeing right here is you can
12:39 - pass in all these different parameters
12:42 - to our plot and it probably lists off
12:46 - what we can put maybe not it's not super
12:48 - specific but if you look hard enough you
12:52 - can see all these properties that you
12:53 - can pass into the plot function so one
12:57 - thing we could plot pass in is color so
13:02 - if I passed in color equals red will
13:09 - work and it will know well I think the
13:11 - common color so if I did yellow if I did
13:15 - like yellow which is not a color it's
13:17 - gonna yell at me might even work with y
13:20 - yeah cool and we also can pass in
13:23 - hexadecimal colors so I could do like a
13:25 - B a B a B and we got like a grayish
13:27 - color you get this is helpful because
13:31 - you can pick use like a color picker
13:33 - tool and pick pretty much any color you
13:35 - want here but we'll stay with red for no
13:39 - the other parameters I could pass into
13:41 - that let's see what else we had I could
13:46 - do I think line size equals let's say 12
13:50 - oh that is not a print parameter not
13:56 - remembered either go back to Maya
13:58 - documentation size marker size maybe
14:05 - that's a marker size oh I also see you
14:08 - line width here so line width equals 2
14:17 - ohmygosh line with equals 12 makes this
14:20 - big line maybe two it's a bit bigger
14:24 - than I think what we had we can also do
14:27 - we can label a marker so let's say I
14:30 - wanted to add dots into this as you can
14:34 - see you can't really see it too too well
14:37 - but maybe I made the marker size a
14:38 - little bit bigger and I'm just kind of
14:41 - passing this in so you could kind of see
14:43 - what you can do
14:44 - oh that didn't work let's say 10 yeah as
14:47 - you can see nicely big dots on our graph
14:49 - I can also do marker edge color there's
14:58 - all sorts of properties I'm just like
15:00 - continually passing these in but now you
15:02 - see a different type of dot and whatnot
15:05 - so this is pretty cool that we can have
15:08 - all this customization it sometimes
15:10 - takes a little while to get what we want
15:12 - but it's usually it just is nice to have
15:15 - this power and one final thing I'll pass
15:18 - in is line style
15:30 - so there's all sorts of line styles we
15:32 - can pass it and you can read all into
15:35 - the different ways you can do this in
15:37 - the documentation one thing that's
15:42 - pretty cool
15:43 - is that instead of listing all of these
15:45 - keyword arguments sometimes we just want
15:47 - to make a different type of line quickly
15:48 - so there's actually a shorthand that you
15:51 - can use to kind of do pretty much the
15:53 - same thing
15:54 - so I comment this out real quick we have
15:56 - no graph what you can do is there's a
16:00 - shorthand notation that allows you to
16:03 - kind of have a pretty good amount of
16:04 - customization quickly so the shorthand
16:09 - notation is color marker line style I
16:12 - guess so if we go and copy this line
16:15 - from above let's say we just passed in
16:22 - this now what we can do is before we add
16:31 - our label we can pass in the shorthand
16:34 - notation so I can do color will say read
16:38 - it I think just accepts letters you can
16:40 - look into the documentation see exactly
16:41 - what it does
16:42 - marker will do a dot and then line will
16:45 - do a dash so watch what happens when I
16:48 - do this gives us a nice line with dots
16:52 - in it if I do two dashes gives us a
16:56 - dotted line if I do like a different
16:59 - type of marker you can pass in like a
17:01 - carat like that gives us a line with
17:04 - carrots in it it's kind of cool that you
17:06 - can do this shorthand notation and get
17:08 - different types of lines very easily
17:11 - just to follow up on the whole shorthand
17:14 - notation pulling in the docs for the
17:18 - plot function it shows all the different
17:21 - markers you can use and the different
17:23 - line Styles supported and the different
17:25 - colors supported so check out the plot
17:29 - documentation to see all that all right
17:33 - let's move on to our next thing and that
17:35 - will be I guess let's just add another
17:38 - line
17:39 - quick to our graph so we have our first
17:41 - line let's add line number two and this
17:49 - one will make a little bit more
17:50 - interesting and the thing is like here
17:54 - we had a very straightforward like you
17:56 - have X any other Y but this is not
17:59 - always easy to do especially if you have
18:00 - like a function like sign where you want
18:03 - to plot it at like a bunch of values but
18:06 - those values are all like you know crazy
18:08 - decimals so I'm going to show you how
18:10 - you can handle something like that so
18:12 - this is where we use numpy so nobody
18:16 - call this x2 I'm going to say that x2
18:18 - equals NP a range 0 to 4 and we'll go by
18:25 - 0.5 as our tick so if I print out x2
18:28 - real quick you see that this gives us a
18:33 - numpy array with zero zero point 5 1 1.5
18:37 - to 2 point 5 3 to 3.5 I'll actually make
18:40 - it good a 4 point 5 so it goes at the
18:42 - same spot as our other graph because
18:45 - this is a exclusive here so we have that
18:47 - so that's gonna be our XS and so what I
18:54 - can do here is I can go ahead and plot
18:59 - that and I'm going to plot the square
19:02 - function for it so I'm gonna pass in x2
19:05 - and then instead of passing in a why I'm
19:07 - just gonna do x2 and I'm gonna do
19:09 - squared what happens here so now you see
19:13 - we get x2 squared
19:16 - it goes a little bit higher than our
19:18 - original axis was set so I'm going to
19:20 - change up the ticks or maybe I'll just
19:22 - kind of comment this out and see what
19:24 - happens for a tick marks yeah I'm fine
19:26 - with just leaving the default that it
19:28 - gave us looks good to me
19:30 - and now we have two blue colors so let's
19:33 - make this a different color maybe you
19:36 - make it red we want to give it a label
19:39 - as well so I'm going to do red and I'm
19:42 - going to say the label is equal to x
19:47 - squared
19:49 - and one thing that's cool is that it
19:51 - automatically moved this legend to the
19:54 - top left because the positioning was
19:55 - better now that this goes up to the top
19:58 - right okay so we have two two lines up
20:01 - there and from the original image I
20:04 - showed there's some stuff that's still
20:05 - different one thing that's kind of cool
20:08 - that you could do is let's say you had a
20:11 - graph that stopped but you wanted to
20:13 - kind of show the projection of it not in
20:15 - the future so what I did to show that
20:18 - type of a phenomenon is I did like X to
20:21 - take the first four values here it'll
20:28 - plot that what did I do
20:30 - oh shoot first four so what I want I
20:39 - think that will work take the first
20:45 - floor and plot that and then for the
20:47 - last values so from let's say five or
20:59 - three all right let's make this a little
21:01 - bigger like this six or five bear with
21:12 - me here from four onward we'll make it a
21:18 - dash line and I had a little bit of
21:19 - overlap because I think it'll look
21:21 - better you'll see in a sec four - make
21:26 - this still the same function but this
21:28 - time we're gonna make it a dashed line
21:30 - so there you see and I'm going to
21:33 - actually make this a little bit
21:34 - different
21:43 - there you see like maybe something ended
21:46 - here and then you make it - the rest of
21:48 - the way you could do something like that
21:50 - using the format I just showed all right
21:54 - what else do we have probably clean this
21:56 - code up a little bit
21:58 - another thing that I showed in the
22:00 - original graph that I showed when I was
22:03 - a introducing this video was a resize so
22:07 - let's say we wanted to resize our graph
22:08 - well we should do that by near the top
22:11 - of our graph so I'm going to go ahead
22:14 - and do resize your graph I'm going to go
22:24 - ahead and do plot dot figure pass in fix
22:27 - size and we're going to say let's make
22:30 - the dimensions 5 by 3 it's kind of an
22:34 - arbitrary 5 by 3 that will give you kind
22:37 - of the ratio of your X to Y or Y but to
22:41 - specify how many pixels it is you're
22:43 - gonna want to pass in a second parameter
22:45 - which is dpi which basically is pixels
22:48 - per inch so I recommend using a value of
22:51 - around 300 here if you do smaller values
22:55 - you'll have more pixelated graphs so if
22:58 - you can afford having a bigger image
23:00 - having a bigger dpi is often nice so in
23:04 - this case we have pixels per inch of 300
23:07 - so this is going to actually be 5 inches
23:09 - by 3 inches so that Tolle pixels will be
23:12 - 1500 by 900 here in this graph so now
23:16 - it's much much bigger maybe that's a
23:19 - little bit too big I didn't I'm going to
23:24 - be blocking this graph so I'm gonna make
23:27 - it a little bit smaller but you get the
23:31 - idea then here so we'll make it like two
23:35 - by 1.5 that's not a good dimensions now
23:41 - though
23:42 - [Music]
23:45 - I mean just play around with this the
23:49 - the biggest issue I have right now is
23:50 - the graph looks so big because I have my
23:54 - screen super high resolution or super
23:58 - the view is like very up close because I
24:01 - want to make sure you guys can see my
24:02 - code but yeah this would be at 1500 by
24:06 - 900 graph I'm gonna just for the sake of
24:10 - the graph decrease the DPI and make it
24:14 - more reasonable that the issue you can't
24:18 - really tell from this image but if you
24:19 - really zoom into the graph and maybe if
24:21 - you like printed the graph out it would
24:24 - look maybe a little bit pixelated with a
24:26 - dpi of 100 so probably try to keep this
24:30 - value higher if possible and then
24:34 - another thing you want to do is you'll
24:40 - want to save your graph so to say we can
24:43 - do plot dot savefig and when you do say
24:56 - buy graph dot PNG and one thing that's
25:00 - nice too is like I pass in the DPI
25:03 - parameter here as well so let's say when
25:07 - I actually see if my graph wanted to be
25:09 - bigger but for the sake of being able to
25:10 - show you guys in a smaller format I
25:13 - wanted the 100 above I can still go
25:16 - ahead and save it with 300 and then kind
25:19 - of solves both of my problems and so
25:22 - this then my graph dot PNG will save in
25:25 - the current directory that this MATLAB
25:27 - matplotlib tutorial is in it was yeah
25:31 - well saving that current the current
25:32 - director whatever fought whatever
25:34 - directory of your file not pot Lib
25:35 - tutorial is in this graph will also save
25:38 - there when we run this cool now we have
25:41 - that saved all right let me clean this
25:46 - up a little bit
26:05 - and just to note the reason I did this
26:07 - is because this is exclusive the six
26:10 - here so when I do five onwards it picks
26:13 - up this actually ends at five because it
26:16 - doesn't include six so it actually
26:18 - covers everything here
26:48 - all right now that we've shown line
26:50 - graphs a bit let's go and do quickly do
26:53 - bar charts and after bar charts I think
26:56 - we're going to just end this video short
26:58 - and I'll do the real-world examples in a
27:00 - video that I'll post next week I just
27:02 - think this video might get a bit too
27:04 - long if I include everything in just one
27:06 - video so all right so I want to do bar
27:09 - chart
27:16 - okay so bar charts are pretty
27:19 - straightforward as well
27:20 - let's say we had some labels a a B and C
27:31 - and some values that say 1 4 & 2
27:37 - well if we wanted to do a bar chart we
27:39 - can just do plot dot bar of labels comma
27:44 - values at Friday they're wrong its
27:46 - values comma labels and we get not what
27:54 - I was looking for okay let's see it is
27:59 - actually labels first then values ABC
28:07 - cool so that was pretty straightforward
28:09 - and I can do the plot dot show we're
28:14 - going to do all the adding of titles and
28:17 - whatnot the same way as before in the
28:19 - line graph example let's skip over that
28:23 - for now
28:24 - it could also resize it let's say so I
28:27 - could do plot figure fig size equals
28:32 - it's a six by four it's gonna use
28:36 - whatever the default dpi is and then one
28:40 - thing that it's cool that you can do
28:41 - with bar charts is you could add
28:45 - different patterns to these so to do
28:48 - that and you can you can really play
28:51 - around with the documentation do all
28:53 - sorts of different things I do some kind
28:55 - of following the graphs that I was
28:58 - showing the inner intro
28:59 - video so I wanted to just show kind of
29:01 - what different hatch values look like so
29:07 - I can make first one have I'm gonna say
29:12 - bars equal plug up ours there you go now
29:16 - I do bars zero set hatch that's gonna
29:19 - give me the lines that you see down here
29:22 - I can do the same thing with the second
29:25 - value let's make this circles and you
29:32 - can find out the hatch values and the
29:35 - documentation as well let's do the third
29:38 - value we'll do stars so now you get kind
29:42 - of a cool little bar chart I can also
29:45 - add a legend to this very easily and
29:47 - this will tell me right away we have a B
29:49 - and C but I mean their label right here
29:51 - some legends probably not necessary in
29:53 - this case all right let's see what else
29:57 - does I want to do with this and then if
29:59 - you wanted to make this a little bit
30:00 - neater if you had like many more I might
30:02 - get tiring to do this so you could do
30:05 - something like patterns equals /o and
30:13 - star and you could do instead of this
30:17 - notation you could do ya for a bar and
30:23 - bars bar dot set hatch guess we want an
30:33 - index as well
30:38 - we'll just do actually patterns dot pop
30:42 - first item off so this would get us our
30:46 - right one for each one should yeah look
30:48 - at that if I didn't pop regularly I
30:53 - think it would take off the last so this
30:54 - will be stars instead of yep look at
30:58 - that yeah so basically what it did is it
31:00 - just popped off the first item for the
31:02 - first bar popped up the second item for
31:03 - the second bar and then popped off the
31:05 - final item for the third bar as you can
31:08 - see there
31:13 - in this video we're going to build off
31:14 - of what we didn't in the last video
31:16 - which was kind of an introductory video
31:17 - to Matt pot Lib library of Python so in
31:21 - this video specifically we're going to
31:22 - be kind of doing some real world type
31:24 - examples so basically combining our
31:26 - knowledge of the pandas library with the
31:29 - matplotlib library to create all sorts
31:31 - of different plots based on CSV style
31:34 - data so we'll start out with a
31:38 - spreadsheet that all provided my github
31:40 - page link in the description to gas
31:45 - prices over time for different countries
31:48 - so with that data sheet will build
31:51 - charts such as the one you see here then
31:54 - the second data set that I provided is a
31:57 - list of all the game the video game
32:00 - FIFA's player stats so if you're not
32:03 - familiar with that and basically all of
32:05 - the soccer players or I guess if you're
32:07 - an international viewer watching this
32:08 - all the football players in the game
32:09 - FIFA provided all their like overall
32:12 - stats in the game and will build grab
32:14 - all sorts of charts off of that so we'll
32:18 - do like histogram stuff with players
32:20 - overall rating in FIFA some pie chart
32:24 - stuff more pie chart stuff a little bit
32:27 - more complex and then finally some box
32:30 - and whisker chart stuff based off the
32:33 - FIFA data and if we have time maybe one
32:35 - or two more graphs before we begin
32:38 - couple quick I guess announcements first
32:42 - is if you've enjoyed any of my videos
32:44 - it'd mean a lot to me if you can
32:45 - subscribe and also along the same lines
32:48 - if you don't mind also following my
32:50 - Instagram and Twitter
32:52 - basically the more followers I get on
32:55 - all my social media platforms the more
32:58 - content the more serious that I'll take
33:01 - this and the more content that I'll
33:04 - produce all right we'll start this video
33:05 - off the same way we started the last
33:07 - video make sure you load up the
33:08 - necessary libraries I'll be editing with
33:11 - Jupiter notebook using Python 3 but you
33:13 - can
33:14 - using other IDs and text editors as well
33:17 - so we're importing these three libraries
33:19 - matplotlib numpy and pandas then the
33:23 - next step will be to download the data
33:25 - that I provided for this so to do that
33:28 - go to my github which is in the
33:30 - description and we want to download two
33:32 - different files so that files the first
33:35 - file we want to download is this gas
33:37 - prices so the easiest way to think to
33:39 - download this is go to the raw and then
33:42 - just do save as you can and you want to
33:47 - save it wherever you have your code so
33:51 - my code these Jupiter notebooks for me
33:54 - are in this map pot Lib tutorial
33:56 - directory so I would save this value
33:59 - here as you see I already saved it and
34:01 - then for the the other data file the
34:04 - FIFA dataset we're gonna want to do the
34:06 - same thing so go back to the main file
34:08 - in the github click on FIFA data this
34:11 - one you can't even preview but just
34:13 - click view raw right click and save as
34:17 - you want to save it as a CSV file so a
34:21 - comma separated values file and you'll
34:24 - also want to save this in the same
34:25 - directory that you have the file that
34:27 - you're writing your code in okay so now
34:32 - that we've saved the data let's start
34:34 - playing around with it and if you
34:36 - remember from my pandas video the way
34:38 - that we can look at a CSV file with
34:41 - pandas is we can do something like will
34:44 - call this CS or will our data gasps
34:46 - equals PD read CSV then we need to type
34:51 - in the name of the file we want to read
34:53 - we've saved it as gas prices dot CSV and
34:56 - we should be luron that no issues and we
35:00 - saved this file in the same directory
35:02 - that this map pot the editorial file is
35:04 - in so that's why this worked if you save
35:07 - this file in a different directory you
35:09 - can specify where you save it so if you
35:12 - save it in like a data folder you would
35:15 - specify it so it's with this type of
35:17 - syntax okay yes so now what we can do is
35:21 - look what to see what's in our
35:23 - this data file so if I just do gas and
35:27 - this works in Jupiter notebook but in
35:30 - another if you're just using like
35:33 - sublime text you'd have to like print
35:34 - gas or you could just be looking at the
35:38 - actual CSV file and like excel so gasps
35:43 - we have year and then we have all these
35:46 - different countries and their price and
35:48 - US dollars per gallon for gas that year
35:51 - so the way I look at this we're gonna
35:54 - have year as our x input so ah stop
36:00 - texting me so based on the year each
36:03 - country has a different gas price so the
36:08 - way we can access that is we can do
36:10 - something like PLT dot plot and so our X
36:16 - data is going to be gas a year our Y
36:21 - data is gonna be let's say we start with
36:23 - USA so USA is all caps here so I have to
36:27 - follow that same syntax when I'm
36:29 - accessing that gas that USA and then I
36:33 - can do a plot dot show and I think
36:36 - already there we'll have a basic graph
36:37 - up and running so as you can see yep
36:40 - this is the basic graph for our data and
36:46 - we could also add another country we can
36:48 - do plot plot let's add Canada year gas
36:54 - Canada I think yeah as you can see now
37:00 - we have two different graphs and as you
37:02 - can see from this it's easy to see more
37:05 - easily than just reading the CSV that oh
37:07 - okay
37:07 - every year gas and Canada is
37:10 - consistently higher than in the USA but
37:14 - we have some problems with this graph so
37:16 - like one thing that I see that's an
37:18 - issue is all these years like I don't
37:21 - know I think it just makes more sense to
37:22 - be looking at the exact year especially
37:25 - since this data wasn't like broken up by
37:27 - month so like I don't like the x axis
37:29 - labels we have no title we have no real
37:33 - good indicator of
37:35 - these values mean up here here on the
37:37 - y-axis so we need to start fixing some
37:39 - things up and quickly to know if you
37:42 - have like a multi-word name this format
37:45 - of dot year probably won't work so you
37:47 - could also do bracket notation to access
37:52 - that field as you see it still works so
37:55 - if we had something with two names and I
37:57 - don't remember let me look at the data
37:59 - again see if any countries have that
38:04 - South Korea for example like we would
38:07 - have to use this syntax so I'll actually
38:10 - plot South Korea's gas in this list
38:14 - their gas prices so plot plot gas year
38:24 - gas South Korea wouldn't work maybe
38:28 - actually it would work with the
38:29 - underlines I'm not sure yeah
38:30 - South Korea's having issues so what we
38:33 - can do is south space Korea now we have
38:39 - three lines and Wow
38:40 - yeah the gas in South Korea is even more
38:42 - expensive okay it's just kind of
38:44 - bothering me mixing these different ways
38:46 - to do this so I'm going to change this
38:48 - back to here change this back to year
38:51 - and only leave the South Korea like that
38:54 - because it has to be like that okay so
38:55 - now we have some plots let's make this
38:58 - graph overall better though so to start
39:01 - let's add a title so to add a title if
39:04 - you remember from my last video and feel
39:07 - free to review that again we can just
39:09 - use peel detail I can label this like
39:14 - gas prices over time and US dollars and
39:26 - so it still doesn't make too much sense
39:27 - because you see all these lines but you
39:31 - don't know what they represent I mean we
39:32 - only know that what they represent
39:34 - because we see the code here but we
39:36 - should add a legend and so to add a
39:38 - legend we're not to first give these
39:41 - plots labels because if I don't give
39:43 - these labels watch what happens plot dot
39:45 - legend
39:47 - oh wow it worked I was not actually
39:53 - expecting that to work try to think why
39:59 - that is that it worked
40:00 - whatever it worked without needing to
40:03 - add the labels specifically so that's
40:06 - kind of nice for us I guess due to the
40:08 - fact that we're reading this in and we
40:11 - kind of from a nice CSV that already has
40:14 - headers it probably worked but in our
40:16 - last video you had to add label so I
40:21 - could actually change the label if I
40:23 - wanted to if I wanted this to just say
40:24 - United States see that change it like
40:29 - that so you can add this optional label
40:32 - parameter if things aren't working for
40:33 - you properly but for us it just kind of
40:36 - magically did the trick okay so this is
40:39 - looking already a little bit better I
40:41 - might make the graph a little bit bigger
40:43 - let's do that I can do plot dot figure
40:48 - big size equals say 8 by 5 so now that's
40:55 - a nicer sizing it's more easy to see
40:58 - everything the legend is a more
41:00 - reasonable size and comparison of
41:03 - everything in there so that's bit better
41:06 - what else can we do to this well we
41:09 - don't have any labels for axes so we
41:11 - should definitely do that also I really
41:13 - don't like that these tick marks are not
41:14 - exact years so I think the next thing
41:17 - I'm going to do is change up the ticks
41:19 - so x ticks what we can pass in is just
41:25 - the year here so now it will have a tick
41:28 - for every year that we have data for Wow
41:33 - and that looks absolutely fantastic yeah
41:36 - obviously issues with this - squished
41:39 - together so what can work well is if I
41:43 - print out gas that year you see we have
41:48 - part of a panda's data frame but we have
41:51 - over one of these years if we remember
41:54 - you know some good old list
41:57 - comprehension
42:00 - this comprehension the list iterating
42:03 - syntax maybe that will be the word but
42:06 - you know when you want to get certain
42:08 - items like the first five items on a
42:09 - list you go zero to five or you could
42:13 - even just do five what we want to do is
42:15 - iterate you know maybe take every three
42:18 - years so what we could do to do that is
42:20 - we don't care where we start it so we're
42:22 - gonna start at the beginning we want to
42:23 - end at the end but we want to skip every
42:26 - three years so now we get all the years
42:29 - in a we get every third year which will
42:34 - probably be better when we graph it down
42:36 - here so I'm going to do that now so
42:38 - guess year tick tick three colon colon
42:42 - three cool that looks pretty good all
42:47 - right
42:49 - I also kind of would like to have exact
42:53 - values here kind of show exactly where
42:56 - we're plotting the points so to do that
42:58 - if you remember the shorthand notation
43:01 - from the last video we can do stuff like
43:05 - will make us a blue dot - so blue is the
43:14 - color and we want a dot - we want dot
43:19 - markers and a dash a straight line
43:21 - basically we're saying cool so now we
43:25 - have every third year but we have points
43:27 - for every time we actually have a data
43:30 - point so that looks good we do the same
43:32 - thing for the other ones red - and
43:38 - what's cool - is you see that the legend
43:41 - changes as we do that
43:42 - South Korea let's say green dot - cool I
43:51 - like the look of this still we need to
43:54 - do some more modifications let's add
43:56 - labels to our X and y-axis so X label
44:02 - will be year that's pretty
44:04 - self-explanatory then the Y label
44:11 - we'll be US dollars cool so now you can
44:25 - see you know okay and year 2008 South
44:29 - Korea paid approximately $6 per gallon
44:35 - of gas we're all translating all these
44:37 - values to US dollars while Canada paid
44:40 - about four dollars and the u.s. played
44:46 - about three dollars so that looks pretty
44:50 - good to me and we can easily add some
44:53 - more countries here so I could like add
45:00 - Australia for example and we'll make
45:05 - them ah I don't know what color to use I
45:09 - don't know that anymore I got a yellow
45:12 - shirt it might be ugly color yeah it's
45:16 - not too bad
45:16 - but yeah and there we have Australia
45:18 - looks like they're missing maybe a data
45:20 - value for 1990 I'm not positive but yeah
45:24 - we can easily do this for all of our
45:25 - different graphs and we could even do
45:27 - something like let's comment this out
45:30 - temporarily let me do something like for
45:34 - country in gas let's see what happens at
45:40 - that print country yeah cool this is
45:46 - giving us all the different countries we
45:49 - don't want year so I'm going to say in
45:52 - gas one onwards now we have Oh No
46:05 - close close close okay I'm gonna be a
46:08 - little bit hacky here if country is not
46:12 - equal to Year print country now we get
46:19 - all of the countries and so what we
46:21 - could do with this now is you know
46:24 - that's probable need of a way to do this
46:25 - then if country is not equal to year but
46:29 - I'm just trying to show you how like we
46:31 - can do this very quick and efficient
46:32 - like dude gas that year and then country
46:36 - and we'll let it self select the colors
46:39 - but we could if we wanted to specify
46:42 - marker equals dot and think the line
46:46 - style will be fine already
46:47 - oh no unrecognized character and oh okay
46:56 - can't just do country we need to do gas
47:00 - country look at that now we've got all
47:05 - the different all the different
47:09 - countries in our graph and you could
47:12 - move there's ways within matplotlib to
47:15 - like move the legend outside of the
47:18 - graph I'm not going to go into that
47:20 - right now but another I guess comment
47:22 - that I have is whenever you're doing
47:24 - anything with matplotlib or anything
47:26 - with python in general is like quickly
47:29 - do a google search like how to move
47:30 - legend outside of matplotlib graph and
47:33 - you'll find probably on Stack Overflow
47:36 - within the first three searches someone
47:38 - that had the same problem as you and
47:40 - found an answer to it so I always
47:42 - recommend doing that but this is kind of
47:44 - cool that we were able to quickly graph
47:47 - all these different lines for all the
47:49 - different countries and if you wanted to
47:51 - you could like create a list like
47:54 - countries to look at maybe not the best
48:00 - name and you could choose exactly which
48:02 - ones you wanted to include and then you
48:05 - would do if not equals a year and we
48:08 - actually you could just do if country in
48:10 - countries to look at you'll do this real
48:15 - quick
48:25 - if country in countries to look at so
48:35 - you see this is another way we can graph
48:36 - specific things cool cool cool all right
48:40 - I'm gonna comment this out temporarily
48:42 - and just leave I'll leave it I'll push
48:48 - it to the github when we're done with
48:49 - this video and it will uncon with this
48:57 - again cool and yeah you can play around
49:04 - with this style you can use the
49:06 - shorthand notation or you can use the
49:08 - long hand notation that we kind of used
49:10 - here but you also can reference the
49:13 - first video I posted on matplotlib to
49:15 - really play around with your line graph
49:17 - styles
49:17 - alright we're pretty much known of this
49:19 - graph but a lot of a couple final things
49:21 - before I move on to the FIFA data and
49:23 - doing some other graphs so the first
49:25 - thing is changing up the font size I
49:28 - mentioned this in the previous map plot
49:30 - lib video I did but I thought I was
49:33 - worth mentioning again so we can add a
49:35 - font stick to our title and actually we
49:37 - can add this to any text based label so
49:39 - you also add it to the X label ony label
49:42 - and we can do all sorts of different
49:44 - tweaks to our font I put a list in the
49:48 - description to all the different fonts
49:49 - you can use here if you wanted to change
49:51 - up the actual font type but I'm going to
49:54 - keep the font type the same I'm going to
49:57 - change the font weight I'm gonna make it
49:59 - bold so you see it now it's not bold but
50:03 - if I do this watch what happens now it's
50:06 - bold and let's say I also wanted to
50:08 - change the font size I would say font
50:10 - size and let's say it's size 22 so now
50:14 - we have a larger font maybe 18 is a
50:18 - better value so we can do that you can
50:22 - do that for any of your your labels
50:25 - another thing we might want to do is
50:27 - in the when I showed this graph
50:28 - originally I also had of the year 2011
50:31 - we don't have values for 2011 but maybe
50:34 - you wanted to allow for the ability of
50:37 - that showing up and maybe project where
50:39 - they're going you could do Plus you take
50:43 - your ticks and plus 2011 ah that did not
50:48 - work so this is a litter this is a data
50:52 - frame so you can't just directly add
50:54 - 2011 so we need to make it a list still
50:59 - didn't work and the problem is the data
51:01 - frame is kind of weird when you add just
51:03 - a direct list so you can do dot to list
51:05 - and now do this now you see 2011 is
51:09 - there and then if you wanted to actually
51:12 - save this graph remember we can do plot
51:15 - dot save fig we can give it a name so
51:19 - gas price figure sure and remember when
51:23 - we're saving if you change the DPI
51:26 - you'll get a higher resolution image so
51:29 - 300 is a good value this is gonna make a
51:31 - pretty big image it's going to make a
51:33 - 300 times eight which is 24 hundred by
51:36 - 1500 image but so really you can play
51:40 - around with this video but the higher
51:42 - the resolution or higher dpi the higher
51:45 - resolution image you're going to get so
51:46 - whoo I want to say this is a PNG so if I
51:51 - went into that folder that I had as you
51:55 - can see where did it go refresh oh I
52:00 - don't know where I'm saving this just
52:03 - propose figure where are you alright
52:06 - sorry I tipped us in wrong savefig and
52:10 - you always just you can refresh and look
52:12 - at the documentation I'm gonna have
52:13 - government yeah I got an error here I
52:15 - should have noticed that before but yeah
52:17 - say fig one word do that now if I go to
52:20 - the folder that I have these files in we
52:24 - got gas price figure and if I bring that
52:28 - in you see the figure there saves nicely
52:33 - as a PNG all right let's move on to the
52:37 - FIFA data now that we're done with the
52:39 - gas price
52:40 - stuff let's move on to using our FIFA
52:42 - data so we're gonna first gonna have to
52:44 - load it in so in if you didn't save the
52:49 - FIFA data maybe skipped around this
52:52 - video it's on my github page and the
52:56 - link to that is in the description and
52:58 - you want to save it in the same
52:59 - directory of the file that you're using
53:01 - to produce these graphs Lou I'm mixing
53:05 - my words load FIFA data ok so to do that
53:09 - we'll just call FIFA equals PD not read
53:14 - CSV and I believe we called this FIFA
53:18 - data dot CSV and that's just check make
53:22 - sure it's loaded in properly cool and
53:25 - this is actually shoot it shouldn't have
53:26 - loaded at all ok it's still a preview
53:29 - but you could do something if you only
53:30 - wanted to see like the first 5 rows you
53:32 - can do FIFA dot head five all right so
53:36 - so you can get a feel for what's in this
53:38 - data you got like the name of the player
53:41 - and you should probably recognize some
53:43 - of these guys names Leo Messi Ronaldo
53:46 - Neymar all very good players I think
53:51 - it's right now sorted probably by their
53:53 - overall but yet all the stats from the
53:56 - game FIFA for these guys and I think it
53:58 - just provides a good set of data to work
54:02 - from and also I took this data from a
54:05 - cat goal challenge I'm gonna link to the
54:07 - original source of the data as well down
54:10 - the description ok so what can we do
54:12 - with this so to start off let's do some
54:16 - histogram stuff
54:24 - okay so what I think is cool first thing
54:27 - to do is plot the overall skill level
54:29 - here that you see on the right just
54:33 - figure out in the game like how many
54:34 - people have above a 90 how many people
54:37 - have between an 80 and 90 etc so what we
54:40 - can do to do that is we have our data
54:42 - already loaded I don't have to reload a
54:44 - 10 but I can go ahead and do let's see
54:51 - plot and the way that I remember these
54:56 - commands is like I showed in the last
54:58 - video you can kind of use the PI plot
55:02 - documentation as your kind of your
55:04 - starting point and then if you're
55:07 - looking to try to do a histogram lookup
55:09 - histogram within that documentation the
55:11 - link to the documentation is in the
55:12 - description and you'll find the command
55:15 - hist so what I can pass into history to
55:20 - set we're going to pass in the overall
55:23 - skill level as my input and let's see
55:30 - what happened going to do that and then
55:32 - I'll do a plot Dutch show so I don't get
55:35 - all this random stuff okay that looks
55:38 - pretty good it's already starting to get
55:40 - there what would probably be more
55:43 - helpful is if this kind of these tick
55:48 - marks were centered for each bin that we
55:50 - have and I'll do that in a sec all right
55:55 - we're gonna set the bins every 10
55:58 - overall skill level points so like the
56:01 - highest you would be and the FIFA game
56:03 - is 100 the lowest you could be as a zero
56:05 - so we'll do our bins at intervals of 10
56:09 - up to from zero to a hundred so the
56:12 - first bin that we have will be all
56:14 - players that have a skill level between
56:16 - 0 and 10 and it's counting that number
56:19 - 50 60 70 80 90 and then finally 100 cool
56:27 - so oh I didn't do anything yet now we
56:31 - can set the bins parameter of the
56:35 - the histogram to our bins now we got a
56:39 - nice a little bit nicer of a graph now
56:43 - the next thing I'm going to do is set
56:45 - our X ticks to be the bins as well so
56:49 - now it's nicely labeled each interval
56:53 - corresponds exactly with what we have
56:55 - here but it looks like we have some
56:57 - unnecessary data so it looks like
57:01 - there's very little players over here so
57:05 - maybe I'll limit this start at 40 and go
57:09 - up to 100 and what's kind of crazy is
57:15 - you know the players that are over a 90
57:18 - are really a rarity because you can't
57:21 - even see that bar from the 90 to 100
57:23 - range there so let's do a little bit
57:31 - you're not a title the same way as
57:33 - before got a while a ball so I'll do a
57:36 - wide labor real quick number of players
57:40 - and the X label would be the skill level
57:49 - and we could have a title that would be
57:51 - like distribution of player skills in in
58:00 - FIFA
58:01 - I think it's FIFA 2018 might be 2019 not
58:05 - positive so that's a cool little
58:09 - visualization and you can get more into
58:13 - details like to actually see that there
58:15 - are some values there you could do you
58:21 - change up your white X to be let's say 0
58:27 - to 100 okay that didn't work
58:43 - yeah yes it's kind of tough with all of
58:48 - these players but if we did move it from
58:50 - like 80 to 100 you see that yeah there
58:54 - are actually players that are above a 90
58:56 - is just very very few compared to the
58:58 - amount of players in the game another
59:00 - thing you could potentially do is maybe
59:02 - break it up use the data and only look
59:07 - at the stats of players and certain
59:08 - teams and then you wouldn't get all the
59:10 - noise I guess in the lower skill levels
59:14 - that I put all the people in here one
59:18 - little modification we can make to this
59:20 - is let's say we wanted to change the
59:22 - color of our bar I could set this you
59:26 - know I could set it to red usually like
59:27 - that or I could set it to a hexadecimal
59:30 - value very easily and what I recommend
59:35 - whatever you want a certain color what
59:38 - you can do is just like do a google
59:40 - search for a color picker as you see
59:43 - here I can just move this bar around and
59:48 - no matter what color I want so let's say
59:50 - I want this greenish color I copy that
59:52 - hex code hide this paste in the hex code
59:57 - now I get that green color I kind of
60:01 - like the bluish color so I'm gonna go
60:04 - with that but yeah you can play around
60:05 - and get any color you want with that pot
60:07 - lid all right let's do pie chart snacks
60:09 - and just to start off I kind of
60:13 - mentioned this the histograms but to
60:16 - like figure out how to do a pie chart I
60:17 - usually just start at this documentation
60:20 - lookup pie plot a pie chart is right
60:24 - there and then with this page I can kind
60:28 - of get all the details of what I can
60:31 - pass in and what are the parameters that
60:34 - I can play around with yeah a lot of
60:40 - good stuff here okay so the wedge sizes
60:44 - are
60:45 - so that's what we're gonna input here so
60:47 - what does that look like okay so I want
60:49 - to just output some of our data again
60:51 - and what I think we're gonna do for this
60:56 - first chart is one of the components of
60:59 - this I guess we can't see it here but if
61:03 - you open up the full I can't see all of
61:08 - it if you opened up the full file within
61:10 - like Excel you'd see that one of the
61:13 - parameters we can have is preferred foot
61:20 - so if I look up that you see that left
61:25 - or right
61:25 - it's what whether you play left you're
61:27 - ready in soccer so what I'm thinking
61:29 - would be interesting to do a pie chart
61:31 - on is the percentage of people that play
61:35 - with their left foot versus their right
61:36 - foot so how would we do something like
61:38 - that well we can count the number of
61:43 - people that play with our left foot by
61:45 - doing the following and this plays into
61:47 - the stuff that I taught in the that we
61:50 - went through in the pandas video but we
61:54 - can use the dot lok to kind of like look
61:56 - up the data set and kind of filter the
61:59 - data set by specific condition in this
62:02 - case for left we want to the condition
62:05 - to be apologize one sec when the
62:09 - condition to be if the preferred foot
62:13 - column is equal to left then we want
62:20 - only the data that this condition holds
62:23 - and because we're going to need to pass
62:25 - this into a pie chart what we'll want to
62:29 - do is get the count of that I believe
62:32 - this count gives us an array I can
62:36 - probably check so let's see what is the
62:38 - left yeah it's like an array here so if
62:44 - we do count 0 we'll actually get a
62:48 - number
62:48 - as you can see 4211 players prefer their
62:53 - left foot and so we can do the same
62:56 - thing with right FIFA
62:59 - FIFA bird foot equals equals right get
63:09 - the count of that and then because this
63:11 - returns a data frame we have to take the
63:13 - we'll just take the first element which
63:15 - it will be a number and let's see how
63:18 - much you like right okay so considerably
63:20 - more people preference their right foot
63:22 - than they left that makes sense okay so
63:25 - now how do I do the pie chart we can do
63:27 - plot pie this is from the documentation
63:30 - and I guess I kind of jumped ahead but
63:33 - you might like think maybe I can just go
63:35 - ahead and do FIFA preferred I can't even
63:40 - spell of course I like foot and like
63:43 - figure that it might just plot the pie
63:45 - chart while doing that but it it gets
63:48 - messed up when you don't pass it numbers
63:52 - so what we need to do is passing a list
63:55 - of numbers so what we can do is left
63:59 - comma right so now we have two values
64:04 - and I'll make a part pie chart out of
64:06 - these values look at that cool and I'll
64:10 - do plot dot show one thing I'm noticing
64:13 - is these colors are really ugly and also
64:16 - nothing is labeled right now so going
64:18 - back to the documentation you can see
64:24 - labels is list sequence of strings
64:28 - providing the labels for each wedge we
64:29 - need to pass in that we can also change
64:31 - up the colors with a writ list as well
64:33 - so let's do that so labels will do
64:38 - equals left and right and we'll pass
64:46 - those into our pie chart do labels
64:51 - equals labels cool so now at least we
64:57 - have like relative percentages I mean we
64:59 - don't know the exact percentages but you
65:02 - have an idea just based off the graph if
65:05 - we added in colors we can change this
65:08 - ugly orange from
65:09 - there she could pass in two colors let's
65:12 - say like we're gonna just use some
65:15 - hexadecimal values we're just typing in
65:17 - these in randomly and now I have to pass
65:24 - some colors here cool now that looks
65:30 - alright maybe you'd want a little bit
65:31 - more contrast but it doesn't really
65:34 - matter too too much you can be the judge
65:36 - of that
65:37 - I do Auto percentage this should forget
65:43 - exactly how to format this I'll have to
65:45 - check so others percentage format
65:53 - percent
65:57 - so we can use percent notation here so
66:01 - we can do % point 2f and basically
66:05 - they'll just fill in whatever value is
66:07 - for the percentage with 0.2 two decimals
66:11 - of floats and I guess I screwed that up
66:14 - probably also be a string cool so now it
66:23 - actually gives us our percentages so
66:24 - twenty three point one nine percent of
66:26 - the people in the FIFA game prefer their
66:28 - left foot over their right foot and if
66:30 - you want to actually see percent on that
66:33 - it's a little bit weird and just do
66:34 - percent percent basically if you just
66:37 - did percent I think it would bug out
66:39 - because it's expecting specific notation
66:42 - basically by doing two percentage points
66:45 - in this notation it knows you actually
66:48 - do want that percentage sign all right
66:50 - and then we can add a label the title as
66:53 - we've done in the past preference foot
67:01 - preference of FIFA players
67:07 - cool and there's a basic pie chart I'm
67:10 - trying to think of there's other things
67:11 - I should add to this well we'll get into
67:15 - a little bit more complicated stuff and
67:17 - the next pie chart that we'll build so
67:20 - this is a pretty simple pie chart let's
67:22 - make another pie chart
67:23 - all right pie chart number two so in
67:26 - this one what we're gonna do is look at
67:29 - the breakdown of the weights of the FIFA
67:33 - players and we'll plot it as a pie chart
67:36 - so I mean okay let's look at what the
67:41 - weights look like so I'm going to print
67:43 - out wait here okay so we have a list of
67:48 - all these weights what we can see is
67:50 - that there and note that they're in
67:53 - pounds they're not into kilograms as
67:55 - many of you guys might expect and pounds
67:59 - but you could initial step you could do
68:01 - to this pie chart would be to convert
68:03 - all these values to kilograms that'd be
68:05 - a fun little exercise but okay we have
68:08 - all these pounds and one thing I
68:11 - immediately noticed is if we're trying
68:12 - to count ranges of these pounds it's
68:14 - gonna be tough with this pounds string
68:17 - attached is there anything else I notice
68:20 - here no it's mostly just that but okay
68:24 - so basically what I want to do is reset
68:28 - the weight category to not include these
68:31 - pounds and just be the number so this is
68:35 - going to be a string right now and we
68:37 - just want this converted to an integer
68:39 - so let's try to do that okay so we're
68:45 - going to reset the weight column and
68:49 - what we're gonna want to do is strip off
68:52 - so X here I'm going to do X for X in
68:56 - FIFA eight so X in this case is going to
69:01 - be a string so we can do strip lbs so
69:06 - that will give us just this part of the
69:08 - string
69:09 - perhaps in FIFA wait let's see if that
69:11 - works
69:13 - float object has no attribute strip and
69:16 - I mixed I was expecting that all these
69:20 - would be strings start to start with but
69:27 - because they're not what we can add is
69:29 - an if statement within our list
69:30 - comprehension I'm going to just say if
69:33 - type x equals equals strain I'm guessing
69:36 - maybe there's a couple of empty values
69:37 - or something so we're just gonna kind of
69:39 - ignore those and then else X so if type
69:51 - x equals equals string we're gonna do
69:53 - this else just leave it as is that's
69:58 - what we're saying here let's see if this
70:01 - works
70:03 - now we print out FIFA eight cool cool
70:11 - and I'm gonna take the first value real
70:16 - quick and notice it's still a string so
70:19 - what we're actually going to want to do
70:20 - to this line is surround it with the int
70:24 - block which will convert it to an end
70:25 - now if I look at this FIFA dot we 0 we
70:31 - get it as a integer value I don't know
70:35 - why it's giving a decimal here but
70:37 - should be an actual value and you notice
70:40 - because the point 0 we know that it
70:41 - probably is being read as a value ok so
70:43 - now we have these values set right so
70:46 - let's start counting things so we're
70:48 - gonna start with light players and we'll
70:50 - say light players I have a weight under
70:53 - this is kind of arbitrary of a rest say
70:55 - that they have a weight under 125 pounds
71:00 - and then we're gonna count that just
71:04 - like we did in the last example then the
71:08 - next condition we'll do is I guess
71:11 - medium light players that would be above
71:18 - 125 greater than or equal to 125 then we
71:22 - need an and condition the end condition
71:24 - and the way we're going to format this
71:26 - with our Panda
71:27 - notation is like that and this is
71:30 - probably review a bit if you did watch
71:34 - watch through the pandas video that I
71:36 - did and FIFA 8 is less than 150 let's
71:42 - say so now we're getting only the rows
71:47 - that have both of these conditions true
71:49 - we're going to count that 0 keep doing
71:55 - this I'll price peed this up when I edit
71:58 - the video I'm going to just get three
72:01 - more categories
72:17 - all right cool so we have five different
72:20 - weight categories and I can like print
72:22 - these out I don't know invalid syntax
72:26 - what do they do
72:27 - Oh didn't end up 369 heavy people medium
72:33 - heavy let's see if this is a valid
72:36 - number 4000 so yeah it makes sense that
72:39 - there's more between 170 and 200 then
72:42 - there are people over 200 in the league
72:44 - it's kind of tough to be a soccer player
72:45 - or 200 pounds okay so let's now plot
72:50 - this so what we want to plot will be our
72:55 - weights and I'll make this an array
72:59 - light weights
73:02 - medium medium medium heavy and heavy our
73:11 - labels yeah can't type today
73:16 - all right so plot dot pie weights let's
73:20 - see what this looks like cool it looks
73:23 - pretty good but it has no labels right
73:28 - now now I'm gonna do a plot touch show
73:31 - so we need to add some labels so under
73:38 - 125 it's the first one 125 to 150 is the
73:45 - second 150 to 175 is the third and 175
73:54 - to 200 its fourth and finally over
73:58 - 200 is the last and it will pass these
74:02 - in with our pipe chart okay cool so now
74:09 - we have all these labels one thing I
74:11 - don't like and this is a good little
74:13 - thing to know is you couldn't I don't
74:16 - like the default color scheme and
74:17 - instead of passing in all five of my own
74:19 - colors one thing you can actually do is
74:23 - I don't know what I just typed in I
74:26 - didn't mean to do that I'm getting ahead
74:28 - of myself
74:29 - is there's a plot style and so instead
74:33 - of the default which is currently set
74:36 - aside as you can see it stays the same
74:38 - when I do that we're going to use the
74:40 - style of ggplot and I'll link a list of
74:44 - these different styles in the
74:45 - description so I personally like this
74:48 - color scheme a lot more when I change
74:50 - the style of our plot okay so that's
74:54 - pretty good
74:55 - we can also add the auto percentage as
74:58 - we did with the last example so
75:00 - percentage point 2f percentage is a
75:03 - percentage percentage cool but things
75:07 - are a little bit ugly in this case the
75:10 - things are squished together so how can
75:12 - we resolve this problem and really if
75:15 - you go into the documentation you'll see
75:17 - there's a lot of these weird names and
75:20 - you might not know what everyone means
75:22 - but if you kind of look up like if you
75:26 - did a google search like pie chart
75:28 - Python numbers getting in the way of
75:31 - each other you probably find some
75:32 - different solutions so one solution we
75:34 - could go ahead and try would be setting
75:38 - the percentage distance so the
75:40 - percentage distance is the percentage
75:42 - distance from the center of the graph so
75:44 - if I did centage equals percentage
75:47 - distance equals zero you'd see
75:51 - everything's right there so instead of
75:53 - that we'll do like 0.8 so this comes
75:56 - zero to one is within the chart and you
75:59 - could even do if you want it to like 1.5
76:01 - and that would be values outside the
76:03 - truck but 0.8 was a good value that I
76:06 - thought okay so this baby makes it a
76:09 - little bit better these numbers right
76:10 - here that I'm highlighting aren't as
76:12 - squished but they're still not great so
76:15 - the other thing we can actually do is
76:16 - use this explode property and what
76:22 - explode does it breaks the graph apart a
76:25 - bit and so let's see what that does so
76:28 - we need a list that's as big as our yeah
76:34 - this could be a list it can be too full
76:36 - I'm going to say that was a tuple that's
76:38 - what I did when I was playing around
76:39 - with this doesn't shouldn't matter
76:41 - 0e 0.4 I'm gonna these are the values I
76:46 - want to get to but we'll start with
76:48 - doing them all point one and I'll reason
76:52 - to why I got to the values that I got -
76:54 - okay so explode equals explode so this
76:57 - is gonna split the graph apart so it's
76:59 - not actually touching so you see that so
77:03 - that's cool but really we don't need
77:05 - everything exploded we really just need
77:07 - these values that are very close
77:09 - together to explode a bit so what we can
77:12 - do to that is all right so we want under
77:15 - 125 and over 200 to be exploded a bit
77:18 - more as you can see those correspond to
77:22 - our labels here we don't really need 150
77:25 - to 175 to explode it off because that's
77:28 - pretty set we don't really need 175 to
77:33 - 200 explode
77:34 - so what does this look like now and
77:36 - we'll have this explode a little bit
77:38 - this is this 12.6 1% cool and I think
77:43 - that this looks decently good now you
77:46 - can more easily see the different
77:50 - slivers and
77:50 - I guess it's tough because this sliver
77:53 - is so small the under one under 125 but
77:55 - think that you can more easily read this
77:58 - then you could win all of them or
78:01 - compact together and as in the other
78:05 - examples we can also add a title so
78:10 - weight distribution of FIFA players and
78:17 - we would want to spay that this is in
78:19 - pounds cool and also as you notice
78:23 - because I changed the style the header
78:25 - actually changed too so that's one thing
78:27 - to be a little bit careful with with the
78:29 - Styles but sometimes they can be very
78:31 - helpful all right because this video is
78:33 - getting kind of long we're gonna end it
78:35 - with one more graph but if there's other
78:37 - types of graphs that I didn't cover in
78:39 - this video or my previous video that you
78:41 - want to see let me know in the comments
78:43 - so we're gonna do a box and whiskers
78:45 - chart and really the question we're
78:47 - trying to ask here is how can we compare
78:51 - teams like the
78:53 - how good two different teams are in our
78:55 - set so looking back at our FIFA chart
78:59 - let's print that out so you can see that
79:03 - all these players have a club so we're
79:07 - trying to compare the relative strengths
79:09 - of different clubs and so there I
79:14 - thought that a good way to do that would
79:17 - be this to use this box and whiskers
79:19 - chart which shows shows your highest
79:22 - player or it shows your highest score if
79:25 - you have a box and whiskers chart it
79:27 - will show like the max it'll show the
79:30 - mean and then I'll show a box around
79:32 - where the middle 50% of scores or values
79:35 - were I think that's a good way to
79:37 - compare a team where you can kind of see
79:39 - okay where's the best player at where's
79:42 - their worst player at if everyone got
79:44 - injured and then the the middle box is
79:47 - kind of like the core of the team like
79:49 - how good are they so I think it's a good
79:52 - way to potentially compare two different
79:54 - teams maybe you can disagree with me and
79:56 - maybe there's a different way you would
79:58 - recommend but well that's what we're
79:59 - going to do in this example so to start
80:03 - let's uh take a couple teams and count
80:07 - their their overall scores for that club
80:13 - so we'll start with I was a good team to
80:16 - start with go up top we'll start with FC
80:20 - Barcelona so we're gonna do Barcelona
80:23 - equals FIFA Lok so we're going to filter
80:27 - out all the rows that have people from
80:30 - Barcelona so we can do FIFA club equals
80:34 - equals FC Barcelona yeah cool and let's
80:42 - see and then we want when we do our
80:45 - averaging we're gonna want to take their
80:48 - overall score so we can just filter by
80:52 - that too so now if we print out
80:56 - Barcelona because we're comparing the
80:59 - overall scores I think that's the most
81:00 - useful metric you see we just have a
81:03 - list of all the players on Barstow
81:05 - their relative their overall performance
81:10 - in FIFA cool then we could do that with
81:14 - another team let's say we do Real Madrid
81:21 - FIFA Club echoes equals Real Madrid and
81:27 - when you want to take their overall
81:28 - values as well cool so this is two
81:33 - different values we can see Madrid here
81:35 - and all those values okay so now let's
81:38 - plot a box and whiskers chart for that
81:40 - so to do that we do lot dot fox plot we
81:46 - pass in Barcelona and it will pass in
81:49 - Madrid so these are the all the values
81:53 - for Barcelona and all the values for
81:55 - Madrid and correspondent so what we see
81:57 - here so it will know this function will
82:00 - know that it needs to make a boxplot off
82:02 - of that so what does that look like okay
82:11 - one thing I noticed too this is also a
82:15 - residual effect of changing the style in
82:18 - one cell style is still changed I'm
82:20 - going to change the style of here back
82:23 - to our default style so default style
82:28 - looks like this graph doesn't really
82:30 - tell us too much right now but we'll get
82:32 - it to look a little better in a second
82:36 - and I want to do plot dot show so all
82:39 - this stuff is not there okay cool so
82:42 - this is a comparison of the two teams
82:44 - relatively you can see they're pretty
82:46 - dang even I'd say Barcelona has a slight
82:50 - advantage it seems like it's boxes a
82:53 - little bit higher than Real Madrid's but
82:57 - and also their best player is ranked
83:00 - better than really Madrid's best player
83:02 - but it's kind of annoying when it's just
83:05 - as one and two down here so let's add
83:06 - our labels
83:13 - so it's a list FC Barcelona and Real
83:19 - Madrid and then we can go into our box
83:22 - plot it has a labels property and you
83:25 - can double check the documentation to
83:27 - see this labels label is cool so now we
83:29 - have our two different box plots and so
83:35 - these two teams with this comparison I
83:38 - would just say that they look pretty
83:40 - similarly matched like they could go
83:42 - ahead to head probably be a pretty good
83:43 - game where you really see kind of the
83:46 - coolness of visualizing this data with a
83:50 - box and plot and like comparing two
83:51 - teams is when you take a team that's not
83:54 - as strong so my local team here in
83:58 - Boston is the New England Revolution
83:59 - they're an MLS soccer organization so I
84:03 - also pass in some scores for them and
84:07 - they're short tend names the revs so I'm
84:11 - gonna just call them that instead of
84:12 - typing out the whole New England
84:16 - Revolution every time and yeah I wonder
84:24 - which I say the England Revolution and
84:30 - we're going to take their overall and
84:33 - you could look at all the different
84:34 - teams in the datasheet and get like a
84:36 - certain team that you wanted to look at
84:37 - pretty easy yeah you just have to be
84:40 - careful that you type in everything
84:42 - properly and apparently I did something
84:44 - wrong
84:45 - oh okay yeah we also have passing the
84:50 - ribs here cool so now we have three
84:55 - teams and you can see that the New
84:57 - England Revolution is significantly
84:58 - worse than Real Madrid or Barcelona
85:00 - which is what we were wanting to show
85:03 - let's add a title here and we'll add
85:06 - some style to this chart as well
85:09 - professional soccer team comparison and
85:15 - because I'm from the States I call it
85:16 - soccer yeah you probably call football
85:19 - but that is besides the point
85:23 - FIFA over
85:25 - all reading over all hitting is our
85:30 - y-axis and we have our teams down here
85:34 - in the x-axis that looks pretty good to
85:36 - me okay what we could also change up
85:43 - potentially would be our tick marks okay
85:51 - or we could change the figure size maybe
85:53 - it would look better if it stretched out
85:55 - a bit more along the y-axis so we'll
85:58 - change our figure size a bit plot dot
86:02 - figure fig size equals we'll have the Y
86:06 - dimension be greater than the X and as
86:09 - you can see now it looks like this and
86:11 - this gives us a little bit more detail
86:13 - in the actual scores among the two teams
86:15 - but you can still see the New England
86:18 - Revolution is not as good and also this
86:21 - name is kind of running into each other
86:24 - so I'm gonna shorten New England
86:25 - Revolution to any revolution just kind
86:30 - of make it a little neater cool all
86:32 - right so the final thing we're gonna do
86:33 - is add a little bit of style to this
86:36 - graph so it looks a little bit better
86:37 - and you also if you wanted to yeah feel
86:40 - free to add more teams to this and like
86:43 - really see the differences between
86:44 - soccer teams and FIFA but we will add
86:49 - some color around the perimeters of
86:50 - these boxes maybe make this line a
86:52 - little thicker that represents this
86:54 - represents the median the orange line
86:57 - okay
86:58 - so what I found to be the best way to do
87:00 - this is I'm gonna save boxes as the
87:04 - result of this plot and then basically
87:06 - what we can do is this will store the
87:10 - three different values we've plotted
87:11 - here so it will help us style each
87:14 - individual box a little easier so for
87:19 - blocks in boxes boxes so you're getting
87:27 - the box parameter from what was saved
87:29 - here we want to set the color and then
87:36 - this also kind of shows you
87:37 - there's different ways to do these
87:39 - things like I could have passed color in
87:40 - here
87:41 - the problem with passing color within
87:44 - here is it would make everything the
87:46 - same color so if you wanted like go
87:48 - ahead and change a specific box I can
87:52 - have a list of colors it's easier or I
87:57 - guess maybe colors is not the best
87:59 - example because color is probably would
88:00 - allow you to pass in an array but for
88:03 - certain properties it's hard to set just
88:06 - one value at a time so I want to go
88:09 - ahead and set the color here so now you
88:20 - see that we have a different color
88:22 - around our box and they're similar to
88:25 - boxes here there's another parameter for
88:28 - like the longest strike here and the
88:31 - long strike here the whiskers of the box
88:33 - and whiskers plot but I think it could
88:37 - use to be a little thicker here and so
88:42 - to do that we're gonna do line width
88:46 - equals two and all these parameters I'm
88:48 - finding from the from the documentation
88:56 - okay cool so set edge color basically
89:01 - and let's say we wanted to change the
89:06 - fill color so change fill color and you
89:13 - could as I said before like you could
89:15 - iterate through these and through a list
89:18 - and like each time set a different color
89:21 - for each of these change filler color we
89:23 - can do something like set a face color
89:25 - we could all do this in one line as well
89:28 - but kind of just showing different ways
89:30 - you can go about things face color is
89:33 - another property this actually changes
89:35 - the inside of the box so what happens
89:37 - when I do easier easier or easier this
89:39 - is a grayish color unknown property face
89:43 - color this was something that I found
89:46 - super annoying when I was trying to do
89:47 - this so if you're trying to set the fee
89:51 - a box-and-whisker chart doesn't
89:53 - recognize I can't like recognize this
89:56 - property face color for whatever reason
89:58 - by default see actually if I set this
90:00 - patch artists property to true to allow
90:04 - you to change the face color so now we
90:05 - have these graphs I think that looks a
90:08 - bit better we could also change up the
90:13 - median line so you could do it within
90:15 - this format or another way we can do it
90:18 - is one of the properties of boxplot is
90:21 - median props so you can also pass in
90:24 - like a dictionary of median props and so
90:27 - we could pass in a line width here too
90:29 - so let's say we wanted this line to have
90:31 - the same thickness as the outline pass
90:36 - that in and there we go
90:38 - a lot of the styling stuff it's really a
90:43 - matter of google searching really like
90:47 - you can look at the documentation find
90:48 - some things from the documentation but I
90:50 - find is sometimes quicker is to say how
90:53 - do I change the outline color in a box
90:55 - and whiskers chart Google search that
90:58 - find a Stack Overflow post and then like
91:00 - from there figure out I can do this type
91:03 - of technique that's what works usually
91:05 - well for me all right so yeah now we
91:09 - have these three teams being compared
91:13 - I'm going to strengthen graph a little
91:14 - bit so you can see better I think this
91:16 - is a kind of a cool way to visualize how
91:18 - teams compare in FIFA all right I'm
91:21 - gonna end the video here hopefully these
91:23 - graphs were helpful hopefully it is
91:24 - helpful to combine the pandas and like
91:27 - the CSV is with the matplotlib library
91:29 - if you found this video useful make sure
91:32 - to throw it a big thumbs up and also
91:34 - don't forget to subscribe because I'll
91:36 - be posting a lot of videos in the near
91:39 - future

Cleaned transcript:

what's up guys and welcome back to another video so in today's video we will go through the bat plot live library of Python and this is a super useful library for all things data visualization in Python so the video will start off with going through the matplotlib basics so as you see on the screen will be creating like line graphs such as the one you see here you'll learn how to format these lines in different ways you'll be able to add a title you'll be able to add labels to your x and yaxes format your tick marks properly add a legend etc so all the kind of basic matplotlib things you want to know then we'll move into other types of graphs such as bar charts and we'll finish this video off with going through all sorts of like real world examples where you can kind of combine your data science skills that you might have using like pandas library and if you haven't learned anything about the pandas library I recommend you watch my video on that so with that the kind of real world examples will do stuff such as like plot the USA versus Canada gas prices off of data that we have a little link to in a CSV we'll do some histogram stuff we'll do some pie chart stuff and we will do some box and whiskers chart stuff I can't get through every type of graph in this one video but if there's certain things that I didn't cover and you really want me to cover it let me know in the comments that would be super duper yeah that's all I got to start this video let's just jump into it all right let's start out by loading in the libraries that we need for this tutorial so we're an import and map plot live as our dot pie plot as peel of T we're gonna import numpy as NP and we're gonna for the later examples import pandas as PD and run that and so if you have all these us like already installed you won't get any errors if you do get these get an error when you're trying to run them onto these you find need to install it so you can either do a pip install matplotlib pip install numpy pip install pandas or you could install a Python distribution that already has these packages such as anaconda I'll link to how to do this the description okay so now we have our libraries loaded let's now build our basic graph so I just think it's kind of the hardest part about anything with Python in general is starting with that blank blank space so what I recommend for matplotlib is always start at the documentation so I have a link for this in the description but here is the home page of the matplotlib pipe lot documentation and what I recommend is like whenever we're trying to do something new just do a ctrl F and like look for it so if we look for plot here that's like we're just trying to get a line graph on the on the screen box plots not only one we don't want it been plot okay this looks good plot y versus X as lines or markers so this is what we'll start off by doing as you can see right here and the examples it gives gives plot X comma y so that's the command will F the run to make this work and just to know what x and y are if we go down to parameters they tell us that commonly these parameters are 1d arrays so we know we need to pass in 1d array to the plot function so if we do plot 1 2 3 that's gonna be our x + 2 4 6 will be our Y I can't type and run that plot is not defined so we imported pipe lot as plot so when we run this function we actually have to do P love T dot plot and then this is our X and the second array is our Y so let's see what happens there yay we got a graph and to clean this up a little bit I recommend moving our variables into removing our arrays into variables so X is 1 2 3 and Y is 2 4 6 and we can change now this to X Y and one thing that's annoying with the matplotlib if you're doing this in Jupiter notebook by default is you have this annoying little line here so you want to get rid of that you can just actually call plot dot show and that's the correct way to actually show this graph okay now that we have just a line on the screen let's start adding a little bit more to our graph so to do this let's go back to our documentation and go back to just the pie plot so I think this is a good spot to start because you always can kind of just ctrl F and find something you're looking for so let's say we wanted to add a title to our graph if I type in title it points me right to a couple different places that I probably want to look at and right here is what we're looking for so set a title for the axes click that and this tells me all sorts of stuff about how I call this so it looks like I use do pie plot title so I can do plot title and let's just do our first graph and run that as you can see our title is now there and same thing for a lot of the different parameters so going back to the documentation if I want an X level on a while label I just type in right I guess I knew that but let's just say Y label nothing comes up Y or just even label C label label a contour plot that's none of us the fig labels no pie no title no X label Y label let's how we get there so you can keep doing this and really easily find what you're looking for I think it's a good place to go if you kind of just if you forget things because I always forget things in that plot lid okay so adding a label to x and y plot an X label xaxes and I guess I'm getting really enthusiastic because we keep adding exclamation points to all of my stuff yaxes yay see what happens yeah and I want to just get rid of these recommendations I don't need them okay so now we have a graph and we have a title and we have y axis x axis in a real graph we would label these properly but for the sake of this example we're just kind of getting a feel for how we add these alright so now that we have our title and labels one thing we might want to do to them is resize them so if we look at the the documentation for title one thing you'll notice is that you can use you can pass in this font dictionary and it gives you a little bit of details about the font dictionary here but basically there's all sorts of options that we can do and like play around with our font so let's say I wanted to change the font of our title a new font dict equals and I can pass in a font name and let's say I my good old trusty reliable comic sans ms will be our new font and if you look at that we got a nice new font on a graph and if you can't see it well then in that case I'll change the font size to be something like 20 now you should definitely be able to tell that I've changed the font type and in the description I listed I put a link to all the known matplotlib fonts that you can use and if you look through the documentation you kind of find some different options you can do with this and you can also do the same thing with the labels I could do like font dict equals let's say I wanted to make this font arielle and that obviously might be the default but if I did it like Comic Sans as well you can tell that xaxis now has changed but I wouldn't just leave that this be for now okay so we did labels all right so that one thing that's bothering me is the tick marks I want to let's say I just want to do integer numbers and I'm gonna add a couple more values to our graph so I'm gonna go to five I'm gonna start at zero and Y would go from Y is always going to be two times X so it's gonna look like that oh I would magically did it for us at that case I don't want it to magically do it for us okay let's say we went to four and we wanted just the integer values we didn't want any decimal value so how do we change our ticks so we can do that by doing plot X ticks and our X ticks will do 0 0 1 2 3 and I also just found remember this command by using the documentation and our wide ticks will be I have a 0 to 10 every 2 so it was 0 2 4 6 oh my gosh 10 as you can see that now we have the tick marks working properly and maybe I wanted to add 4 as well so now we labeled our ticks differently and one thing that's cool to know is that the graph will automatically resize based on how we set this so if I set one tick to a thousand well now our graph kind of looks like not too good but it's nice that you can easily do that 4 is better but and you can do the same thing with y I'd say when do they make the last one 100 as you can see it changes up the sizing of the graph one thing that's also cool though is find it even if I didn't even lis space these out if I did like 7 he and then 7.5 as you can see it properly puts those at the right spot in the graph I'll leave it like this I'll leave it a little bit weird but yeah that looks good to me okay so we have our first graph let's add a legend and make this line a little bit more exciting color wise so if we wanted to add a legend we can do and I'm gonna actually kind of like showing how the documentation is helpful if I looked up legend Figg legends that might be work just this legend place a legend on the axes like by looking up legend I I've figured out that the call is just legend and it gives me some examples so I always like to refer to this documentation okay so PLT legend and what happens when I do that no handles with labels fans put in legends so it's complaining because we don't have anything to label what it's saying is how do we label this line and the way we do that is by passing in a label to our plot function so in this case our X&Y we plotted X to be or Y to be 2 times X so I'm going to call the label here 2x and as you can see we get 2x right there okay let's say now that we wanted to change up the color of this line maybe make it thicker do some other things to it if we go to plot whereas plot we'll see all sorts of properties that we can do and plot so what I'm seeing right here is you can pass in all these different parameters to our plot and it probably lists off what we can put maybe not it's not super specific but if you look hard enough you can see all these properties that you can pass into the plot function so one thing we could plot pass in is color so if I passed in color equals red will work and it will know well I think the common color so if I did yellow if I did like yellow which is not a color it's gonna yell at me might even work with y yeah cool and we also can pass in hexadecimal colors so I could do like a B a B a B and we got like a grayish color you get this is helpful because you can pick use like a color picker tool and pick pretty much any color you want here but we'll stay with red for no the other parameters I could pass into that let's see what else we had I could do I think line size equals let's say 12 oh that is not a print parameter not remembered either go back to Maya documentation size marker size maybe that's a marker size oh I also see you line width here so line width equals 2 ohmygosh line with equals 12 makes this big line maybe two it's a bit bigger than I think what we had we can also do we can label a marker so let's say I wanted to add dots into this as you can see you can't really see it too too well but maybe I made the marker size a little bit bigger and I'm just kind of passing this in so you could kind of see what you can do oh that didn't work let's say 10 yeah as you can see nicely big dots on our graph I can also do marker edge color there's all sorts of properties I'm just like continually passing these in but now you see a different type of dot and whatnot so this is pretty cool that we can have all this customization it sometimes takes a little while to get what we want but it's usually it just is nice to have this power and one final thing I'll pass in is line style so there's all sorts of line styles we can pass it and you can read all into the different ways you can do this in the documentation one thing that's pretty cool is that instead of listing all of these keyword arguments sometimes we just want to make a different type of line quickly so there's actually a shorthand that you can use to kind of do pretty much the same thing so I comment this out real quick we have no graph what you can do is there's a shorthand notation that allows you to kind of have a pretty good amount of customization quickly so the shorthand notation is color marker line style I guess so if we go and copy this line from above let's say we just passed in this now what we can do is before we add our label we can pass in the shorthand notation so I can do color will say read it I think just accepts letters you can look into the documentation see exactly what it does marker will do a dot and then line will do a dash so watch what happens when I do this gives us a nice line with dots in it if I do two dashes gives us a dotted line if I do like a different type of marker you can pass in like a carat like that gives us a line with carrots in it it's kind of cool that you can do this shorthand notation and get different types of lines very easily just to follow up on the whole shorthand notation pulling in the docs for the plot function it shows all the different markers you can use and the different line Styles supported and the different colors supported so check out the plot documentation to see all that all right let's move on to our next thing and that will be I guess let's just add another line quick to our graph so we have our first line let's add line number two and this one will make a little bit more interesting and the thing is like here we had a very straightforward like you have X any other Y but this is not always easy to do especially if you have like a function like sign where you want to plot it at like a bunch of values but those values are all like you know crazy decimals so I'm going to show you how you can handle something like that so this is where we use numpy so nobody call this x2 I'm going to say that x2 equals NP a range 0 to 4 and we'll go by 0.5 as our tick so if I print out x2 real quick you see that this gives us a numpy array with zero zero point 5 1 1.5 to 2 point 5 3 to 3.5 I'll actually make it good a 4 point 5 so it goes at the same spot as our other graph because this is a exclusive here so we have that so that's gonna be our XS and so what I can do here is I can go ahead and plot that and I'm going to plot the square function for it so I'm gonna pass in x2 and then instead of passing in a why I'm just gonna do x2 and I'm gonna do squared what happens here so now you see we get x2 squared it goes a little bit higher than our original axis was set so I'm going to change up the ticks or maybe I'll just kind of comment this out and see what happens for a tick marks yeah I'm fine with just leaving the default that it gave us looks good to me and now we have two blue colors so let's make this a different color maybe you make it red we want to give it a label as well so I'm going to do red and I'm going to say the label is equal to x squared and one thing that's cool is that it automatically moved this legend to the top left because the positioning was better now that this goes up to the top right okay so we have two two lines up there and from the original image I showed there's some stuff that's still different one thing that's kind of cool that you could do is let's say you had a graph that stopped but you wanted to kind of show the projection of it not in the future so what I did to show that type of a phenomenon is I did like X to take the first four values here it'll plot that what did I do oh shoot first four so what I want I think that will work take the first floor and plot that and then for the last values so from let's say five or three all right let's make this a little bigger like this six or five bear with me here from four onward we'll make it a dash line and I had a little bit of overlap because I think it'll look better you'll see in a sec four make this still the same function but this time we're gonna make it a dashed line so there you see and I'm going to actually make this a little bit different there you see like maybe something ended here and then you make it the rest of the way you could do something like that using the format I just showed all right what else do we have probably clean this code up a little bit another thing that I showed in the original graph that I showed when I was a introducing this video was a resize so let's say we wanted to resize our graph well we should do that by near the top of our graph so I'm going to go ahead and do resize your graph I'm going to go ahead and do plot dot figure pass in fix size and we're going to say let's make the dimensions 5 by 3 it's kind of an arbitrary 5 by 3 that will give you kind of the ratio of your X to Y or Y but to specify how many pixels it is you're gonna want to pass in a second parameter which is dpi which basically is pixels per inch so I recommend using a value of around 300 here if you do smaller values you'll have more pixelated graphs so if you can afford having a bigger image having a bigger dpi is often nice so in this case we have pixels per inch of 300 so this is going to actually be 5 inches by 3 inches so that Tolle pixels will be 1500 by 900 here in this graph so now it's much much bigger maybe that's a little bit too big I didn't I'm going to be blocking this graph so I'm gonna make it a little bit smaller but you get the idea then here so we'll make it like two by 1.5 that's not a good dimensions now though I mean just play around with this the the biggest issue I have right now is the graph looks so big because I have my screen super high resolution or super the view is like very up close because I want to make sure you guys can see my code but yeah this would be at 1500 by 900 graph I'm gonna just for the sake of the graph decrease the DPI and make it more reasonable that the issue you can't really tell from this image but if you really zoom into the graph and maybe if you like printed the graph out it would look maybe a little bit pixelated with a dpi of 100 so probably try to keep this value higher if possible and then another thing you want to do is you'll want to save your graph so to say we can do plot dot savefig and when you do say buy graph dot PNG and one thing that's nice too is like I pass in the DPI parameter here as well so let's say when I actually see if my graph wanted to be bigger but for the sake of being able to show you guys in a smaller format I wanted the 100 above I can still go ahead and save it with 300 and then kind of solves both of my problems and so this then my graph dot PNG will save in the current directory that this MATLAB matplotlib tutorial is in it was yeah well saving that current the current director whatever fought whatever directory of your file not pot Lib tutorial is in this graph will also save there when we run this cool now we have that saved all right let me clean this up a little bit and just to note the reason I did this is because this is exclusive the six here so when I do five onwards it picks up this actually ends at five because it doesn't include six so it actually covers everything here all right now that we've shown line graphs a bit let's go and do quickly do bar charts and after bar charts I think we're going to just end this video short and I'll do the realworld examples in a video that I'll post next week I just think this video might get a bit too long if I include everything in just one video so all right so I want to do bar chart okay so bar charts are pretty straightforward as well let's say we had some labels a a B and C and some values that say 1 4 & 2 well if we wanted to do a bar chart we can just do plot dot bar of labels comma values at Friday they're wrong its values comma labels and we get not what I was looking for okay let's see it is actually labels first then values ABC cool so that was pretty straightforward and I can do the plot dot show we're going to do all the adding of titles and whatnot the same way as before in the line graph example let's skip over that for now it could also resize it let's say so I could do plot figure fig size equals it's a six by four it's gonna use whatever the default dpi is and then one thing that it's cool that you can do with bar charts is you could add different patterns to these so to do that and you can you can really play around with the documentation do all sorts of different things I do some kind of following the graphs that I was showing the inner intro video so I wanted to just show kind of what different hatch values look like so I can make first one have I'm gonna say bars equal plug up ours there you go now I do bars zero set hatch that's gonna give me the lines that you see down here I can do the same thing with the second value let's make this circles and you can find out the hatch values and the documentation as well let's do the third value we'll do stars so now you get kind of a cool little bar chart I can also add a legend to this very easily and this will tell me right away we have a B and C but I mean their label right here some legends probably not necessary in this case all right let's see what else does I want to do with this and then if you wanted to make this a little bit neater if you had like many more I might get tiring to do this so you could do something like patterns equals /o and star and you could do instead of this notation you could do ya for a bar and bars bar dot set hatch guess we want an index as well we'll just do actually patterns dot pop first item off so this would get us our right one for each one should yeah look at that if I didn't pop regularly I think it would take off the last so this will be stars instead of yep look at that yeah so basically what it did is it just popped off the first item for the first bar popped up the second item for the second bar and then popped off the final item for the third bar as you can see there in this video we're going to build off of what we didn't in the last video which was kind of an introductory video to Matt pot Lib library of Python so in this video specifically we're going to be kind of doing some real world type examples so basically combining our knowledge of the pandas library with the matplotlib library to create all sorts of different plots based on CSV style data so we'll start out with a spreadsheet that all provided my github page link in the description to gas prices over time for different countries so with that data sheet will build charts such as the one you see here then the second data set that I provided is a list of all the game the video game FIFA's player stats so if you're not familiar with that and basically all of the soccer players or I guess if you're an international viewer watching this all the football players in the game FIFA provided all their like overall stats in the game and will build grab all sorts of charts off of that so we'll do like histogram stuff with players overall rating in FIFA some pie chart stuff more pie chart stuff a little bit more complex and then finally some box and whisker chart stuff based off the FIFA data and if we have time maybe one or two more graphs before we begin couple quick I guess announcements first is if you've enjoyed any of my videos it'd mean a lot to me if you can subscribe and also along the same lines if you don't mind also following my Instagram and Twitter basically the more followers I get on all my social media platforms the more content the more serious that I'll take this and the more content that I'll produce all right we'll start this video off the same way we started the last video make sure you load up the necessary libraries I'll be editing with Jupiter notebook using Python 3 but you can using other IDs and text editors as well so we're importing these three libraries matplotlib numpy and pandas then the next step will be to download the data that I provided for this so to do that go to my github which is in the description and we want to download two different files so that files the first file we want to download is this gas prices so the easiest way to think to download this is go to the raw and then just do save as you can and you want to save it wherever you have your code so my code these Jupiter notebooks for me are in this map pot Lib tutorial directory so I would save this value here as you see I already saved it and then for the the other data file the FIFA dataset we're gonna want to do the same thing so go back to the main file in the github click on FIFA data this one you can't even preview but just click view raw right click and save as you want to save it as a CSV file so a comma separated values file and you'll also want to save this in the same directory that you have the file that you're writing your code in okay so now that we've saved the data let's start playing around with it and if you remember from my pandas video the way that we can look at a CSV file with pandas is we can do something like will call this CS or will our data gasps equals PD read CSV then we need to type in the name of the file we want to read we've saved it as gas prices dot CSV and we should be luron that no issues and we saved this file in the same directory that this map pot the editorial file is in so that's why this worked if you save this file in a different directory you can specify where you save it so if you save it in like a data folder you would specify it so it's with this type of syntax okay yes so now what we can do is look what to see what's in our this data file so if I just do gas and this works in Jupiter notebook but in another if you're just using like sublime text you'd have to like print gas or you could just be looking at the actual CSV file and like excel so gasps we have year and then we have all these different countries and their price and US dollars per gallon for gas that year so the way I look at this we're gonna have year as our x input so ah stop texting me so based on the year each country has a different gas price so the way we can access that is we can do something like PLT dot plot and so our X data is going to be gas a year our Y data is gonna be let's say we start with USA so USA is all caps here so I have to follow that same syntax when I'm accessing that gas that USA and then I can do a plot dot show and I think already there we'll have a basic graph up and running so as you can see yep this is the basic graph for our data and we could also add another country we can do plot plot let's add Canada year gas Canada I think yeah as you can see now we have two different graphs and as you can see from this it's easy to see more easily than just reading the CSV that oh okay every year gas and Canada is consistently higher than in the USA but we have some problems with this graph so like one thing that I see that's an issue is all these years like I don't know I think it just makes more sense to be looking at the exact year especially since this data wasn't like broken up by month so like I don't like the x axis labels we have no title we have no real good indicator of these values mean up here here on the yaxis so we need to start fixing some things up and quickly to know if you have like a multiword name this format of dot year probably won't work so you could also do bracket notation to access that field as you see it still works so if we had something with two names and I don't remember let me look at the data again see if any countries have that South Korea for example like we would have to use this syntax so I'll actually plot South Korea's gas in this list their gas prices so plot plot gas year gas South Korea wouldn't work maybe actually it would work with the underlines I'm not sure yeah South Korea's having issues so what we can do is south space Korea now we have three lines and Wow yeah the gas in South Korea is even more expensive okay it's just kind of bothering me mixing these different ways to do this so I'm going to change this back to here change this back to year and only leave the South Korea like that because it has to be like that okay so now we have some plots let's make this graph overall better though so to start let's add a title so to add a title if you remember from my last video and feel free to review that again we can just use peel detail I can label this like gas prices over time and US dollars and so it still doesn't make too much sense because you see all these lines but you don't know what they represent I mean we only know that what they represent because we see the code here but we should add a legend and so to add a legend we're not to first give these plots labels because if I don't give these labels watch what happens plot dot legend oh wow it worked I was not actually expecting that to work try to think why that is that it worked whatever it worked without needing to add the labels specifically so that's kind of nice for us I guess due to the fact that we're reading this in and we kind of from a nice CSV that already has headers it probably worked but in our last video you had to add label so I could actually change the label if I wanted to if I wanted this to just say United States see that change it like that so you can add this optional label parameter if things aren't working for you properly but for us it just kind of magically did the trick okay so this is looking already a little bit better I might make the graph a little bit bigger let's do that I can do plot dot figure big size equals say 8 by 5 so now that's a nicer sizing it's more easy to see everything the legend is a more reasonable size and comparison of everything in there so that's bit better what else can we do to this well we don't have any labels for axes so we should definitely do that also I really don't like that these tick marks are not exact years so I think the next thing I'm going to do is change up the ticks so x ticks what we can pass in is just the year here so now it will have a tick for every year that we have data for Wow and that looks absolutely fantastic yeah obviously issues with this squished together so what can work well is if I print out gas that year you see we have part of a panda's data frame but we have over one of these years if we remember you know some good old list comprehension this comprehension the list iterating syntax maybe that will be the word but you know when you want to get certain items like the first five items on a list you go zero to five or you could even just do five what we want to do is iterate you know maybe take every three years so what we could do to do that is we don't care where we start it so we're gonna start at the beginning we want to end at the end but we want to skip every three years so now we get all the years in a we get every third year which will probably be better when we graph it down here so I'm going to do that now so guess year tick tick three colon colon three cool that looks pretty good all right I also kind of would like to have exact values here kind of show exactly where we're plotting the points so to do that if you remember the shorthand notation from the last video we can do stuff like will make us a blue dot so blue is the color and we want a dot we want dot markers and a dash a straight line basically we're saying cool so now we have every third year but we have points for every time we actually have a data point so that looks good we do the same thing for the other ones red and what's cool is you see that the legend changes as we do that South Korea let's say green dot cool I like the look of this still we need to do some more modifications let's add labels to our X and yaxis so X label will be year that's pretty selfexplanatory then the Y label we'll be US dollars cool so now you can see you know okay and year 2008 South Korea paid approximately $6 per gallon of gas we're all translating all these values to US dollars while Canada paid about four dollars and the u.s. played about three dollars so that looks pretty good to me and we can easily add some more countries here so I could like add Australia for example and we'll make them ah I don't know what color to use I don't know that anymore I got a yellow shirt it might be ugly color yeah it's not too bad but yeah and there we have Australia looks like they're missing maybe a data value for 1990 I'm not positive but yeah we can easily do this for all of our different graphs and we could even do something like let's comment this out temporarily let me do something like for country in gas let's see what happens at that print country yeah cool this is giving us all the different countries we don't want year so I'm going to say in gas one onwards now we have Oh No close close close okay I'm gonna be a little bit hacky here if country is not equal to Year print country now we get all of the countries and so what we could do with this now is you know that's probable need of a way to do this then if country is not equal to year but I'm just trying to show you how like we can do this very quick and efficient like dude gas that year and then country and we'll let it self select the colors but we could if we wanted to specify marker equals dot and think the line style will be fine already oh no unrecognized character and oh okay can't just do country we need to do gas country look at that now we've got all the different all the different countries in our graph and you could move there's ways within matplotlib to like move the legend outside of the graph I'm not going to go into that right now but another I guess comment that I have is whenever you're doing anything with matplotlib or anything with python in general is like quickly do a google search like how to move legend outside of matplotlib graph and you'll find probably on Stack Overflow within the first three searches someone that had the same problem as you and found an answer to it so I always recommend doing that but this is kind of cool that we were able to quickly graph all these different lines for all the different countries and if you wanted to you could like create a list like countries to look at maybe not the best name and you could choose exactly which ones you wanted to include and then you would do if not equals a year and we actually you could just do if country in countries to look at you'll do this real quick if country in countries to look at so you see this is another way we can graph specific things cool cool cool all right I'm gonna comment this out temporarily and just leave I'll leave it I'll push it to the github when we're done with this video and it will uncon with this again cool and yeah you can play around with this style you can use the shorthand notation or you can use the long hand notation that we kind of used here but you also can reference the first video I posted on matplotlib to really play around with your line graph styles alright we're pretty much known of this graph but a lot of a couple final things before I move on to the FIFA data and doing some other graphs so the first thing is changing up the font size I mentioned this in the previous map plot lib video I did but I thought I was worth mentioning again so we can add a font stick to our title and actually we can add this to any text based label so you also add it to the X label ony label and we can do all sorts of different tweaks to our font I put a list in the description to all the different fonts you can use here if you wanted to change up the actual font type but I'm going to keep the font type the same I'm going to change the font weight I'm gonna make it bold so you see it now it's not bold but if I do this watch what happens now it's bold and let's say I also wanted to change the font size I would say font size and let's say it's size 22 so now we have a larger font maybe 18 is a better value so we can do that you can do that for any of your your labels another thing we might want to do is in the when I showed this graph originally I also had of the year 2011 we don't have values for 2011 but maybe you wanted to allow for the ability of that showing up and maybe project where they're going you could do Plus you take your ticks and plus 2011 ah that did not work so this is a litter this is a data frame so you can't just directly add 2011 so we need to make it a list still didn't work and the problem is the data frame is kind of weird when you add just a direct list so you can do dot to list and now do this now you see 2011 is there and then if you wanted to actually save this graph remember we can do plot dot save fig we can give it a name so gas price figure sure and remember when we're saving if you change the DPI you'll get a higher resolution image so 300 is a good value this is gonna make a pretty big image it's going to make a 300 times eight which is 24 hundred by 1500 image but so really you can play around with this video but the higher the resolution or higher dpi the higher resolution image you're going to get so whoo I want to say this is a PNG so if I went into that folder that I had as you can see where did it go refresh oh I don't know where I'm saving this just propose figure where are you alright sorry I tipped us in wrong savefig and you always just you can refresh and look at the documentation I'm gonna have government yeah I got an error here I should have noticed that before but yeah say fig one word do that now if I go to the folder that I have these files in we got gas price figure and if I bring that in you see the figure there saves nicely as a PNG all right let's move on to the FIFA data now that we're done with the gas price stuff let's move on to using our FIFA data so we're gonna first gonna have to load it in so in if you didn't save the FIFA data maybe skipped around this video it's on my github page and the link to that is in the description and you want to save it in the same directory of the file that you're using to produce these graphs Lou I'm mixing my words load FIFA data ok so to do that we'll just call FIFA equals PD not read CSV and I believe we called this FIFA data dot CSV and that's just check make sure it's loaded in properly cool and this is actually shoot it shouldn't have loaded at all ok it's still a preview but you could do something if you only wanted to see like the first 5 rows you can do FIFA dot head five all right so so you can get a feel for what's in this data you got like the name of the player and you should probably recognize some of these guys names Leo Messi Ronaldo Neymar all very good players I think it's right now sorted probably by their overall but yet all the stats from the game FIFA for these guys and I think it just provides a good set of data to work from and also I took this data from a cat goal challenge I'm gonna link to the original source of the data as well down the description ok so what can we do with this so to start off let's do some histogram stuff okay so what I think is cool first thing to do is plot the overall skill level here that you see on the right just figure out in the game like how many people have above a 90 how many people have between an 80 and 90 etc so what we can do to do that is we have our data already loaded I don't have to reload a 10 but I can go ahead and do let's see plot and the way that I remember these commands is like I showed in the last video you can kind of use the PI plot documentation as your kind of your starting point and then if you're looking to try to do a histogram lookup histogram within that documentation the link to the documentation is in the description and you'll find the command hist so what I can pass into history to set we're going to pass in the overall skill level as my input and let's see what happened going to do that and then I'll do a plot Dutch show so I don't get all this random stuff okay that looks pretty good it's already starting to get there what would probably be more helpful is if this kind of these tick marks were centered for each bin that we have and I'll do that in a sec all right we're gonna set the bins every 10 overall skill level points so like the highest you would be and the FIFA game is 100 the lowest you could be as a zero so we'll do our bins at intervals of 10 up to from zero to a hundred so the first bin that we have will be all players that have a skill level between 0 and 10 and it's counting that number 50 60 70 80 90 and then finally 100 cool so oh I didn't do anything yet now we can set the bins parameter of the the histogram to our bins now we got a nice a little bit nicer of a graph now the next thing I'm going to do is set our X ticks to be the bins as well so now it's nicely labeled each interval corresponds exactly with what we have here but it looks like we have some unnecessary data so it looks like there's very little players over here so maybe I'll limit this start at 40 and go up to 100 and what's kind of crazy is you know the players that are over a 90 are really a rarity because you can't even see that bar from the 90 to 100 range there so let's do a little bit you're not a title the same way as before got a while a ball so I'll do a wide labor real quick number of players and the X label would be the skill level and we could have a title that would be like distribution of player skills in in FIFA I think it's FIFA 2018 might be 2019 not positive so that's a cool little visualization and you can get more into details like to actually see that there are some values there you could do you change up your white X to be let's say 0 to 100 okay that didn't work yeah yes it's kind of tough with all of these players but if we did move it from like 80 to 100 you see that yeah there are actually players that are above a 90 is just very very few compared to the amount of players in the game another thing you could potentially do is maybe break it up use the data and only look at the stats of players and certain teams and then you wouldn't get all the noise I guess in the lower skill levels that I put all the people in here one little modification we can make to this is let's say we wanted to change the color of our bar I could set this you know I could set it to red usually like that or I could set it to a hexadecimal value very easily and what I recommend whatever you want a certain color what you can do is just like do a google search for a color picker as you see here I can just move this bar around and no matter what color I want so let's say I want this greenish color I copy that hex code hide this paste in the hex code now I get that green color I kind of like the bluish color so I'm gonna go with that but yeah you can play around and get any color you want with that pot lid all right let's do pie chart snacks and just to start off I kind of mentioned this the histograms but to like figure out how to do a pie chart I usually just start at this documentation lookup pie plot a pie chart is right there and then with this page I can kind of get all the details of what I can pass in and what are the parameters that I can play around with yeah a lot of good stuff here okay so the wedge sizes are so that's what we're gonna input here so what does that look like okay so I want to just output some of our data again and what I think we're gonna do for this first chart is one of the components of this I guess we can't see it here but if you open up the full I can't see all of it if you opened up the full file within like Excel you'd see that one of the parameters we can have is preferred foot so if I look up that you see that left or right it's what whether you play left you're ready in soccer so what I'm thinking would be interesting to do a pie chart on is the percentage of people that play with their left foot versus their right foot so how would we do something like that well we can count the number of people that play with our left foot by doing the following and this plays into the stuff that I taught in the that we went through in the pandas video but we can use the dot lok to kind of like look up the data set and kind of filter the data set by specific condition in this case for left we want to the condition to be apologize one sec when the condition to be if the preferred foot column is equal to left then we want only the data that this condition holds and because we're going to need to pass this into a pie chart what we'll want to do is get the count of that I believe this count gives us an array I can probably check so let's see what is the left yeah it's like an array here so if we do count 0 we'll actually get a number as you can see 4211 players prefer their left foot and so we can do the same thing with right FIFA FIFA bird foot equals equals right get the count of that and then because this returns a data frame we have to take the we'll just take the first element which it will be a number and let's see how much you like right okay so considerably more people preference their right foot than they left that makes sense okay so now how do I do the pie chart we can do plot pie this is from the documentation and I guess I kind of jumped ahead but you might like think maybe I can just go ahead and do FIFA preferred I can't even spell of course I like foot and like figure that it might just plot the pie chart while doing that but it it gets messed up when you don't pass it numbers so what we need to do is passing a list of numbers so what we can do is left comma right so now we have two values and I'll make a part pie chart out of these values look at that cool and I'll do plot dot show one thing I'm noticing is these colors are really ugly and also nothing is labeled right now so going back to the documentation you can see labels is list sequence of strings providing the labels for each wedge we need to pass in that we can also change up the colors with a writ list as well so let's do that so labels will do equals left and right and we'll pass those into our pie chart do labels equals labels cool so now at least we have like relative percentages I mean we don't know the exact percentages but you have an idea just based off the graph if we added in colors we can change this ugly orange from there she could pass in two colors let's say like we're gonna just use some hexadecimal values we're just typing in these in randomly and now I have to pass some colors here cool now that looks alright maybe you'd want a little bit more contrast but it doesn't really matter too too much you can be the judge of that I do Auto percentage this should forget exactly how to format this I'll have to check so others percentage format percent so we can use percent notation here so we can do % point 2f and basically they'll just fill in whatever value is for the percentage with 0.2 two decimals of floats and I guess I screwed that up probably also be a string cool so now it actually gives us our percentages so twenty three point one nine percent of the people in the FIFA game prefer their left foot over their right foot and if you want to actually see percent on that it's a little bit weird and just do percent percent basically if you just did percent I think it would bug out because it's expecting specific notation basically by doing two percentage points in this notation it knows you actually do want that percentage sign all right and then we can add a label the title as we've done in the past preference foot preference of FIFA players cool and there's a basic pie chart I'm trying to think of there's other things I should add to this well we'll get into a little bit more complicated stuff and the next pie chart that we'll build so this is a pretty simple pie chart let's make another pie chart all right pie chart number two so in this one what we're gonna do is look at the breakdown of the weights of the FIFA players and we'll plot it as a pie chart so I mean okay let's look at what the weights look like so I'm going to print out wait here okay so we have a list of all these weights what we can see is that there and note that they're in pounds they're not into kilograms as many of you guys might expect and pounds but you could initial step you could do to this pie chart would be to convert all these values to kilograms that'd be a fun little exercise but okay we have all these pounds and one thing I immediately noticed is if we're trying to count ranges of these pounds it's gonna be tough with this pounds string attached is there anything else I notice here no it's mostly just that but okay so basically what I want to do is reset the weight category to not include these pounds and just be the number so this is going to be a string right now and we just want this converted to an integer so let's try to do that okay so we're going to reset the weight column and what we're gonna want to do is strip off so X here I'm going to do X for X in FIFA eight so X in this case is going to be a string so we can do strip lbs so that will give us just this part of the string perhaps in FIFA wait let's see if that works float object has no attribute strip and I mixed I was expecting that all these would be strings start to start with but because they're not what we can add is an if statement within our list comprehension I'm going to just say if type x equals equals strain I'm guessing maybe there's a couple of empty values or something so we're just gonna kind of ignore those and then else X so if type x equals equals string we're gonna do this else just leave it as is that's what we're saying here let's see if this works now we print out FIFA eight cool cool and I'm gonna take the first value real quick and notice it's still a string so what we're actually going to want to do to this line is surround it with the int block which will convert it to an end now if I look at this FIFA dot we 0 we get it as a integer value I don't know why it's giving a decimal here but should be an actual value and you notice because the point 0 we know that it probably is being read as a value ok so now we have these values set right so let's start counting things so we're gonna start with light players and we'll say light players I have a weight under this is kind of arbitrary of a rest say that they have a weight under 125 pounds and then we're gonna count that just like we did in the last example then the next condition we'll do is I guess medium light players that would be above 125 greater than or equal to 125 then we need an and condition the end condition and the way we're going to format this with our Panda notation is like that and this is probably review a bit if you did watch watch through the pandas video that I did and FIFA 8 is less than 150 let's say so now we're getting only the rows that have both of these conditions true we're going to count that 0 keep doing this I'll price peed this up when I edit the video I'm going to just get three more categories all right cool so we have five different weight categories and I can like print these out I don't know invalid syntax what do they do Oh didn't end up 369 heavy people medium heavy let's see if this is a valid number 4000 so yeah it makes sense that there's more between 170 and 200 then there are people over 200 in the league it's kind of tough to be a soccer player or 200 pounds okay so let's now plot this so what we want to plot will be our weights and I'll make this an array light weights medium medium medium heavy and heavy our labels yeah can't type today all right so plot dot pie weights let's see what this looks like cool it looks pretty good but it has no labels right now now I'm gonna do a plot touch show so we need to add some labels so under 125 it's the first one 125 to 150 is the second 150 to 175 is the third and 175 to 200 its fourth and finally over 200 is the last and it will pass these in with our pipe chart okay cool so now we have all these labels one thing I don't like and this is a good little thing to know is you couldn't I don't like the default color scheme and instead of passing in all five of my own colors one thing you can actually do is I don't know what I just typed in I didn't mean to do that I'm getting ahead of myself is there's a plot style and so instead of the default which is currently set aside as you can see it stays the same when I do that we're going to use the style of ggplot and I'll link a list of these different styles in the description so I personally like this color scheme a lot more when I change the style of our plot okay so that's pretty good we can also add the auto percentage as we did with the last example so percentage point 2f percentage is a percentage percentage cool but things are a little bit ugly in this case the things are squished together so how can we resolve this problem and really if you go into the documentation you'll see there's a lot of these weird names and you might not know what everyone means but if you kind of look up like if you did a google search like pie chart Python numbers getting in the way of each other you probably find some different solutions so one solution we could go ahead and try would be setting the percentage distance so the percentage distance is the percentage distance from the center of the graph so if I did centage equals percentage distance equals zero you'd see everything's right there so instead of that we'll do like 0.8 so this comes zero to one is within the chart and you could even do if you want it to like 1.5 and that would be values outside the truck but 0.8 was a good value that I thought okay so this baby makes it a little bit better these numbers right here that I'm highlighting aren't as squished but they're still not great so the other thing we can actually do is use this explode property and what explode does it breaks the graph apart a bit and so let's see what that does so we need a list that's as big as our yeah this could be a list it can be too full I'm going to say that was a tuple that's what I did when I was playing around with this doesn't shouldn't matter 0e 0.4 I'm gonna these are the values I want to get to but we'll start with doing them all point one and I'll reason to why I got to the values that I got okay so explode equals explode so this is gonna split the graph apart so it's not actually touching so you see that so that's cool but really we don't need everything exploded we really just need these values that are very close together to explode a bit so what we can do to that is all right so we want under 125 and over 200 to be exploded a bit more as you can see those correspond to our labels here we don't really need 150 to 175 to explode it off because that's pretty set we don't really need 175 to 200 explode so what does this look like now and we'll have this explode a little bit this is this 12.6 1% cool and I think that this looks decently good now you can more easily see the different slivers and I guess it's tough because this sliver is so small the under one under 125 but think that you can more easily read this then you could win all of them or compact together and as in the other examples we can also add a title so weight distribution of FIFA players and we would want to spay that this is in pounds cool and also as you notice because I changed the style the header actually changed too so that's one thing to be a little bit careful with with the Styles but sometimes they can be very helpful all right because this video is getting kind of long we're gonna end it with one more graph but if there's other types of graphs that I didn't cover in this video or my previous video that you want to see let me know in the comments so we're gonna do a box and whiskers chart and really the question we're trying to ask here is how can we compare teams like the how good two different teams are in our set so looking back at our FIFA chart let's print that out so you can see that all these players have a club so we're trying to compare the relative strengths of different clubs and so there I thought that a good way to do that would be this to use this box and whiskers chart which shows shows your highest player or it shows your highest score if you have a box and whiskers chart it will show like the max it'll show the mean and then I'll show a box around where the middle 50% of scores or values were I think that's a good way to compare a team where you can kind of see okay where's the best player at where's their worst player at if everyone got injured and then the the middle box is kind of like the core of the team like how good are they so I think it's a good way to potentially compare two different teams maybe you can disagree with me and maybe there's a different way you would recommend but well that's what we're going to do in this example so to start let's uh take a couple teams and count their their overall scores for that club so we'll start with I was a good team to start with go up top we'll start with FC Barcelona so we're gonna do Barcelona equals FIFA Lok so we're going to filter out all the rows that have people from Barcelona so we can do FIFA club equals equals FC Barcelona yeah cool and let's see and then we want when we do our averaging we're gonna want to take their overall score so we can just filter by that too so now if we print out Barcelona because we're comparing the overall scores I think that's the most useful metric you see we just have a list of all the players on Barstow their relative their overall performance in FIFA cool then we could do that with another team let's say we do Real Madrid FIFA Club echoes equals Real Madrid and when you want to take their overall values as well cool so this is two different values we can see Madrid here and all those values okay so now let's plot a box and whiskers chart for that so to do that we do lot dot fox plot we pass in Barcelona and it will pass in Madrid so these are the all the values for Barcelona and all the values for Madrid and correspondent so what we see here so it will know this function will know that it needs to make a boxplot off of that so what does that look like okay one thing I noticed too this is also a residual effect of changing the style in one cell style is still changed I'm going to change the style of here back to our default style so default style looks like this graph doesn't really tell us too much right now but we'll get it to look a little better in a second and I want to do plot dot show so all this stuff is not there okay cool so this is a comparison of the two teams relatively you can see they're pretty dang even I'd say Barcelona has a slight advantage it seems like it's boxes a little bit higher than Real Madrid's but and also their best player is ranked better than really Madrid's best player but it's kind of annoying when it's just as one and two down here so let's add our labels so it's a list FC Barcelona and Real Madrid and then we can go into our box plot it has a labels property and you can double check the documentation to see this labels label is cool so now we have our two different box plots and so these two teams with this comparison I would just say that they look pretty similarly matched like they could go ahead to head probably be a pretty good game where you really see kind of the coolness of visualizing this data with a box and plot and like comparing two teams is when you take a team that's not as strong so my local team here in Boston is the New England Revolution they're an MLS soccer organization so I also pass in some scores for them and they're short tend names the revs so I'm gonna just call them that instead of typing out the whole New England Revolution every time and yeah I wonder which I say the England Revolution and we're going to take their overall and you could look at all the different teams in the datasheet and get like a certain team that you wanted to look at pretty easy yeah you just have to be careful that you type in everything properly and apparently I did something wrong oh okay yeah we also have passing the ribs here cool so now we have three teams and you can see that the New England Revolution is significantly worse than Real Madrid or Barcelona which is what we were wanting to show let's add a title here and we'll add some style to this chart as well professional soccer team comparison and because I'm from the States I call it soccer yeah you probably call football but that is besides the point FIFA over all reading over all hitting is our yaxis and we have our teams down here in the xaxis that looks pretty good to me okay what we could also change up potentially would be our tick marks okay or we could change the figure size maybe it would look better if it stretched out a bit more along the yaxis so we'll change our figure size a bit plot dot figure fig size equals we'll have the Y dimension be greater than the X and as you can see now it looks like this and this gives us a little bit more detail in the actual scores among the two teams but you can still see the New England Revolution is not as good and also this name is kind of running into each other so I'm gonna shorten New England Revolution to any revolution just kind of make it a little neater cool all right so the final thing we're gonna do is add a little bit of style to this graph so it looks a little bit better and you also if you wanted to yeah feel free to add more teams to this and like really see the differences between soccer teams and FIFA but we will add some color around the perimeters of these boxes maybe make this line a little thicker that represents this represents the median the orange line okay so what I found to be the best way to do this is I'm gonna save boxes as the result of this plot and then basically what we can do is this will store the three different values we've plotted here so it will help us style each individual box a little easier so for blocks in boxes boxes so you're getting the box parameter from what was saved here we want to set the color and then this also kind of shows you there's different ways to do these things like I could have passed color in here the problem with passing color within here is it would make everything the same color so if you wanted like go ahead and change a specific box I can have a list of colors it's easier or I guess maybe colors is not the best example because color is probably would allow you to pass in an array but for certain properties it's hard to set just one value at a time so I want to go ahead and set the color here so now you see that we have a different color around our box and they're similar to boxes here there's another parameter for like the longest strike here and the long strike here the whiskers of the box and whiskers plot but I think it could use to be a little thicker here and so to do that we're gonna do line width equals two and all these parameters I'm finding from the from the documentation okay cool so set edge color basically and let's say we wanted to change the fill color so change fill color and you could as I said before like you could iterate through these and through a list and like each time set a different color for each of these change filler color we can do something like set a face color we could all do this in one line as well but kind of just showing different ways you can go about things face color is another property this actually changes the inside of the box so what happens when I do easier easier or easier this is a grayish color unknown property face color this was something that I found super annoying when I was trying to do this so if you're trying to set the fee a boxandwhisker chart doesn't recognize I can't like recognize this property face color for whatever reason by default see actually if I set this patch artists property to true to allow you to change the face color so now we have these graphs I think that looks a bit better we could also change up the median line so you could do it within this format or another way we can do it is one of the properties of boxplot is median props so you can also pass in like a dictionary of median props and so we could pass in a line width here too so let's say we wanted this line to have the same thickness as the outline pass that in and there we go a lot of the styling stuff it's really a matter of google searching really like you can look at the documentation find some things from the documentation but I find is sometimes quicker is to say how do I change the outline color in a box and whiskers chart Google search that find a Stack Overflow post and then like from there figure out I can do this type of technique that's what works usually well for me all right so yeah now we have these three teams being compared I'm going to strengthen graph a little bit so you can see better I think this is a kind of a cool way to visualize how teams compare in FIFA all right I'm gonna end the video here hopefully these graphs were helpful hopefully it is helpful to combine the pandas and like the CSV is with the matplotlib library if you found this video useful make sure to throw it a big thumbs up and also don't forget to subscribe because I'll be posting a lot of videos in the near future
