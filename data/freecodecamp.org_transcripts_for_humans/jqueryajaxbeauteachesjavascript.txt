With timestamps:

00:00 - ajax allows you to exchange data from a
00:02 - server without reloading the entire page
00:05 - the jquery ajax methods can be used to
00:08 - request or send text html xml or json
00:12 - from a remote server
00:14 - different browsers have different syntax
00:16 - for ajax implementation but jquery makes
00:19 - it simple to use ajax that works with
00:21 - all browsers with a single line of code
00:23 - now this is how you use ajax with
00:27 - vanilla javascript
00:29 - and you can see there's quite a few
00:30 - lines of code here
00:32 - i'm going to show you how to change this
00:34 - all to one line of code using jquery
00:38 - before i tell you that i want to show
00:40 - you this line right here so we are
00:42 - getting data from another website and
00:45 - this is the actual website we're getting
00:47 - the data from uh http colon slash
00:49 - cars.cc slash code slash ajax
00:52 - example.txt
00:53 - we have to add this part because of a
00:56 - coors error and because of getting data
00:58 - from a insecure website from a secure
01:02 - website
01:03 - this is just a course proxy
01:05 - that you can use in development if
01:08 - you're having trouble getting data from
01:09 - another website
01:11 - in a live situation you would want both
01:13 - websites to be secure and then you would
01:15 - have to add some specific headers but
01:18 - this proxy will be good enough for now
01:20 - to get this data so i'm going to comment
01:23 - out all of this
01:24 - and then we're just going to put one
01:26 - line at the beginning
01:29 - first we are going to select what which
01:32 - element we are going to load the ajax
01:34 - data into so we are going to use the
01:37 - demo element
01:38 - with the id demo up there
01:41 - and then dot load
01:43 - so
01:44 - pretty much all this code is being
01:46 - replaced with dot load i'm just going to
01:49 - copy this website address this is the
01:51 - website we're loading the data from
01:55 - and that's the whole line so i'm going
01:56 - to run this code let's test it out i'm
01:58 - going to click change content
02:00 - and it changes subscribe to the free
02:02 - codecamp youtube channel
02:04 - that those words aren't anywhere on here
02:06 - that's getting loaded from this website
02:09 - right here so you can see that ajax can
02:11 - really help you simplify your code with
02:13 - this load method you can also pass a
02:16 - callback which just means a function to
02:18 - run as soon as we get the data
02:21 - okay i just pasted in this here okay
02:23 - we're going to load the text as we did
02:25 - before but now afterwards we're going to
02:27 - run this callback function in the
02:30 - callback function we have the response
02:31 - text status text and the xh arc
02:35 - so if the status text equals success
02:39 - that just means we've successfully got
02:41 - in the data
02:42 - and then we can
02:44 - alert external content loaded
02:46 - successfully
02:47 - if the status text equals air we can
02:50 - alert
02:51 - what the error was you're always going
02:52 - to get some kind of response after you
02:55 - try to do an ajax call a lot of things
02:57 - can go wrong with ajax so you usually
03:00 - want to set up something that will
03:01 - happen if there's an error like we do
03:03 - here let's see an example of that
03:09 - so it's going to say external content
03:10 - loaded successfully and it's going to
03:12 - load the content now if i change this
03:14 - website
03:15 - to something that doesn't exist i'm just
03:17 - going to add a 1 in here and now let's
03:19 - see what happens when i click the button
03:21 - error 404 not found
03:23 - so that's what we're getting this error
03:25 - message down here
03:27 - okay i'm going to comment all this out
03:29 - again and we're going to add another
03:31 - line at the top
03:33 - here i'm going to show you something
03:34 - similar to the ajx load command but this
03:37 - is get
03:38 - just like the load method
03:40 - get is going to get data from a server
03:43 - the main difference is that load is
03:45 - going to load the data directly into an
03:48 - element and git is not necessarily going
03:51 - to load that data into an element
03:53 - here we have the get method it's just
03:55 - dollar sign dot get
03:58 - and then we're going to pass in what
04:01 - we're going to get
04:02 - so the same website from before
04:05 - and then we have the callback function
04:07 - this text is not loaded anywhere so in
04:10 - the callback function we're going to
04:13 - have to say what's going to happen to
04:14 - the text in this case we're just going
04:16 - to console.log
04:18 - so you can see in the callback function
04:20 - we have the data and the status we're
04:22 - showing that right here the data is
04:24 - going to equal the data and status is
04:26 - the status so let's see what happens
04:27 - there
04:28 - let me open up the console here
04:30 - you can see in the bottom corner
04:32 - click change content
04:34 - and the data is subscribed to the free
04:36 - codecamp youtube channel status is
04:38 - success so if you're getting data that's
04:41 - not text or data that has to be
04:42 - processed you're going to want to use
04:44 - the get method instead of the load
04:46 - method now the last one i want to tell
04:48 - you about is the post method so instead
04:50 - of get you can post
04:53 - now post is a way to send the data to a
04:56 - server
04:56 - i do not have my website set up to send
04:59 - data to it so i'm just going to show you
05:01 - how it works here so it's going to be
05:03 - similar where you're going to have the
05:05 - website that you're going to access this
05:07 - time you're going to be sending data to
05:09 - the server
05:10 - and then you also are going to have the
05:12 - callback function but the difference is
05:15 - you're going to pass in one more
05:16 - parameter
05:18 - so here's other parameter the second
05:21 - parameter is the data that you're trying
05:23 - to send
05:24 - so this is just some json data
05:27 - and then
05:28 - the callback function is going to happen
05:31 - after the data is sent so after you send
05:33 - the data the server can send back
05:36 - something it could process the data and
05:38 - send something back or really it could
05:40 - be anything that could come back from
05:41 - the server and then you can run this
05:43 - callback function and you're going to
05:45 - receive data back from the server like i
05:47 - said i can't show you an example because
05:49 - the the server isn't set up to receive
05:51 - data but that's ajax and jquery thanks
05:55 - for watching my name is beau carnes
05:56 - don't forget to subscribe and remember
05:58 - use your code for good

Cleaned transcript:

ajax allows you to exchange data from a server without reloading the entire page the jquery ajax methods can be used to request or send text html xml or json from a remote server different browsers have different syntax for ajax implementation but jquery makes it simple to use ajax that works with all browsers with a single line of code now this is how you use ajax with vanilla javascript and you can see there's quite a few lines of code here i'm going to show you how to change this all to one line of code using jquery before i tell you that i want to show you this line right here so we are getting data from another website and this is the actual website we're getting the data from uh http colon slash cars.cc slash code slash ajax example.txt we have to add this part because of a coors error and because of getting data from a insecure website from a secure website this is just a course proxy that you can use in development if you're having trouble getting data from another website in a live situation you would want both websites to be secure and then you would have to add some specific headers but this proxy will be good enough for now to get this data so i'm going to comment out all of this and then we're just going to put one line at the beginning first we are going to select what which element we are going to load the ajax data into so we are going to use the demo element with the id demo up there and then dot load so pretty much all this code is being replaced with dot load i'm just going to copy this website address this is the website we're loading the data from and that's the whole line so i'm going to run this code let's test it out i'm going to click change content and it changes subscribe to the free codecamp youtube channel that those words aren't anywhere on here that's getting loaded from this website right here so you can see that ajax can really help you simplify your code with this load method you can also pass a callback which just means a function to run as soon as we get the data okay i just pasted in this here okay we're going to load the text as we did before but now afterwards we're going to run this callback function in the callback function we have the response text status text and the xh arc so if the status text equals success that just means we've successfully got in the data and then we can alert external content loaded successfully if the status text equals air we can alert what the error was you're always going to get some kind of response after you try to do an ajax call a lot of things can go wrong with ajax so you usually want to set up something that will happen if there's an error like we do here let's see an example of that so it's going to say external content loaded successfully and it's going to load the content now if i change this website to something that doesn't exist i'm just going to add a 1 in here and now let's see what happens when i click the button error 404 not found so that's what we're getting this error message down here okay i'm going to comment all this out again and we're going to add another line at the top here i'm going to show you something similar to the ajx load command but this is get just like the load method get is going to get data from a server the main difference is that load is going to load the data directly into an element and git is not necessarily going to load that data into an element here we have the get method it's just dollar sign dot get and then we're going to pass in what we're going to get so the same website from before and then we have the callback function this text is not loaded anywhere so in the callback function we're going to have to say what's going to happen to the text in this case we're just going to console.log so you can see in the callback function we have the data and the status we're showing that right here the data is going to equal the data and status is the status so let's see what happens there let me open up the console here you can see in the bottom corner click change content and the data is subscribed to the free codecamp youtube channel status is success so if you're getting data that's not text or data that has to be processed you're going to want to use the get method instead of the load method now the last one i want to tell you about is the post method so instead of get you can post now post is a way to send the data to a server i do not have my website set up to send data to it so i'm just going to show you how it works here so it's going to be similar where you're going to have the website that you're going to access this time you're going to be sending data to the server and then you also are going to have the callback function but the difference is you're going to pass in one more parameter so here's other parameter the second parameter is the data that you're trying to send so this is just some json data and then the callback function is going to happen after the data is sent so after you send the data the server can send back something it could process the data and send something back or really it could be anything that could come back from the server and then you can run this callback function and you're going to receive data back from the server like i said i can't show you an example because the the server isn't set up to receive data but that's ajax and jquery thanks for watching my name is beau carnes don't forget to subscribe and remember use your code for good
