With timestamps:

00:00 - hey welcome to draft academy my name is
00:02 - mike in this course i'm going to teach
00:03 - you everything that you need to know to
00:05 - get started using gatsby js a gatsby js
00:09 - is a relatively new static site
00:11 - generator that's built on top of node.js
00:13 - and it uses react in order to help you
00:16 - build an awesome fast and scalable
00:18 - static website one of the things i love
00:20 - about gatsby is that you build your
00:21 - static sites using react and so you have
00:24 - all of the power modularity and
00:27 - scalability of react while still being
00:29 - able to generate static web pages which
00:31 - can be served extremely fast on your web
00:33 - server so you write all of your pages in
00:35 - react and you can access data and you
00:37 - can make your pages interactive and do
00:39 - all sorts of cool things and then you
00:41 - just generate a bunch of static pages
00:42 - and serve them up on your web server in
00:44 - this course we're going to talk about
00:46 - the basics so we're going to get into
00:47 - installing gatsby building your first
00:49 - gatsby site fleshing out all the pages
00:52 - on your site and then we're going to get
00:53 - a little more advanced so we're going to
00:54 - talk about making your pages interactive
00:56 - and we're going to look at how you can
00:58 - use graphql in order to access different
01:01 - types of data about your site so we're
01:03 - going to be able to access
01:04 - metadata about the site we'll be able to
01:07 - access information about the different
01:08 - files and we'll also be able to parse
01:11 - through markdown files on our site and
01:13 - display them in an awesome way so if
01:14 - you're looking for a static site
01:16 - generator you might want to consider
01:17 - using gatsby not only is it backed by
01:19 - the awesome power of react but it's also
01:21 - a new project which means it's
01:23 - constantly being added to and developed
01:25 - gatsby's not going anywhere and
01:26 - therefore you can feel safe investing
01:28 - some of your web infrastructure in it
01:30 - check out this draft academy course
01:31 - we're going to give you everything you
01:32 - need to know to get started and i'm
01:34 - excited to see what you guys
01:38 - learn in this tutorial i'm going to show
01:41 - you everything that you need to do to
01:42 - get gatsby up and running on your
01:44 - computer now one of the cool things
01:46 - about gatsby is the way you install it
01:48 - on windows and mac is actually the same
01:50 - so gatsby relies on this program called
01:53 - node.js so all we have to do is install
01:55 - node.js on your windows or our mac
01:58 - computer and then
01:59 - using node.js and something called the
02:01 - node package manager we can install
02:04 - gatsby and get it up and running and
02:06 - ready to go so if you already have
02:08 - node.js and the node package manager
02:10 - installed on your computer then all you
02:12 - have to do is just skip to the end of
02:13 - the video and you'll see the part where
02:14 - i actually install gatsby
02:17 - but if you don't have node.js installed
02:19 - on your computer i'm going to show you
02:20 - exactly how to do that right now so all
02:22 - you want to do is go over to this
02:24 - website here it's nodejs.org
02:27 - forward slash en forward slash download
02:30 - and there's three options here that we
02:32 - can click for our download windows mac
02:35 - or the source code so you just want to
02:37 - pick whichever operating you're
02:39 - whichever operating system you're on i'm
02:41 - on mac so i'm just going to click mac
02:43 - and once that's downloaded i'm just
02:45 - going to go over to my downloads folder
02:49 - and i'm just gonna
02:50 - double click on this and what this
02:51 - should do is open up this node.js
02:53 - installer so all we want to do here is
02:56 - just click continue and accept anything
02:58 - we need to accept
03:00 - and then we can install node.js on our
03:03 - computer
03:04 - so once that's done installing we want
03:07 - to check and just make sure that
03:08 - everything's installed correctly so
03:10 - i'm going to open up a terminal and i
03:13 - just want to type in the following code
03:15 - we're just going to type
03:17 - node
03:18 - dash dash
03:21 - version
03:22 - and that should spit out a version and
03:23 - then we can also type npm
03:25 - dash dash version
03:28 - and that should spit out another version
03:29 - so we're using node.js and then in order
03:32 - to install gatsby we're going to use npm
03:34 - which is the node package manager and
03:37 - that's basically just a program that we
03:38 - can use to install other programs so
03:41 - we're going to use it to install gatsby
03:44 - so once you've validated that node is
03:46 - installed correctly on your computer we
03:48 - just have to use this node package
03:50 - manager to install it so i'm just going
03:51 - to type npm
03:53 - install dash dash global
03:56 - and then i just want to type gatsby
03:59 - hyphen cli and that just stands for
04:01 - gatsby command line interface so this is
04:04 - how we're going to communicate with
04:06 - gatsby we're going to use this command
04:07 - line interface and we'll be able to give
04:09 - gatsby commands and tell it to do
04:11 - different things for us so i'm just
04:12 - going to click enter and this should go
04:14 - off and start installing everything that
04:16 - we need for gatsby
04:19 - and you can see here that it installed
04:21 - everything we needed
04:23 - and it's just a bunch of different files
04:25 - so
04:26 - in order to just validate that
04:28 - everything's installed correctly we can
04:29 - just type
04:31 - gatsby dash dash
04:33 - version
04:34 - and this should spit out a version of
04:36 - gatsby so as long as you can get that
04:38 - version to come out like this then
04:40 - gatsby is officially installed on your
04:42 - computer and you're ready to start
04:44 - building your first gatsby website
04:49 - in this tutorial we're going to talk
04:51 - about creating your first gatsby site so
04:54 - we're going to create our gatsby site
04:56 - and then we're going to look at some of
04:57 - the default folders and files that
05:00 - gatsby creates for us when we make that
05:02 - new site and then we're going to serve
05:03 - our site onto the internet and we'll be
05:05 - able to see our site running on our
05:07 - local server so
05:09 - let's get started this is going to be an
05:10 - awesome tutorial first thing i want to
05:12 - do to create my gatsby site is open up a
05:14 - new terminal window in my case i just
05:17 - have one down here in my text editor
05:19 - and in order to create our gatsby site
05:22 - we need to enter in some commands into
05:24 - this terminal so
05:26 - i just want to type
05:28 - gatsby
05:29 - new
05:30 - and now i want to type in the name of
05:32 - the website that i want to create so
05:33 - this will be like the name of your
05:35 - gatsby site my case will just do ga
05:38 - underscore site for draft academy site
05:41 - and now
05:42 - what we want to do is enter in the
05:44 - address of a project template that we
05:46 - can use so gatsby actually has a sort of
05:49 - like a hello world
05:50 - introductory project setup on github and
05:54 - all we have to do to access that is just
05:57 - type in this
05:58 - url so it's github.com forward slash
06:01 - gatsby js
06:03 - forward slash gatsby starter hello world
06:06 - so
06:07 - just enter this in after that um gatsby
06:10 - nuke or yeah that gatsby new command and
06:12 - we'll be able to get that
06:15 - gatsby starter project uh that we can
06:17 - use and that's what i'm gonna be using
06:18 - in this tutorial so i'm just going to
06:20 - click enter
06:21 - and gatsby should go out and
06:24 - basically go out to github get that
06:26 - project template and then start
06:27 - installing it onto our machine so this
06:30 - could take anywhere from like one to
06:31 - three minutes it really just depends but
06:33 - it's probably not going to be like super
06:35 - fast
06:36 - so that's done installing and for me it
06:38 - took about a minute for that to install
06:40 - everything that it needed to install and
06:42 - once that's done if we come up here into
06:44 - our file explorer you'll notice that i
06:47 - have this new folder that was created
06:49 - inside my documents folder called ga
06:51 - site so this is the folder that gatsby
06:54 - created for our project so i'm just
06:56 - going to open this up and i want to sort
06:58 - of talk you through
07:00 - what all of these different things are
07:01 - inside of here it might be a little
07:03 - intimidating if you haven't worked with
07:05 - something that looks like this before i
07:06 - do that though i just want to show you
07:07 - how we can actually build our site and
07:10 - see it online so the way that we can do
07:12 - that is
07:13 - by coming back down here into our
07:15 - terminal and i want to type the
07:17 - following commands well first off i just
07:19 - want to change directory into that new
07:21 - site and then i want to type npm run
07:26 - develop and what this is going to do is
07:28 - it's going to start up a gatsby
07:29 - development server
07:31 - on our local host that we can test our
07:34 - website out and sort of use it to
07:35 - develop so this is
07:36 - like mostly what you're going to be
07:38 - using when you're testing your site so
07:40 - that's finis running and you'll see that
07:41 - we get all these success messages i do
07:43 - just want to point out some of the stuff
07:45 - down here you'll notice that um
07:48 - this site is running it localhost 8000.
07:51 - so localhost is like a local web server
07:53 - that's on your computer so if we go over
07:55 - to localhost 8000 we should be able to
07:58 - see our website up and running and i
08:00 - just have
08:01 - this open here in my web browser so i'm
08:03 - just going to refresh and you'll see
08:06 - logos 8000 is now hosting our site it's
08:08 - a really simple site it just says hello
08:10 - world so this isn't like anything crazy
08:12 - but
08:13 - this is actually our site running and so
08:15 - any changes that we make to our site
08:17 - will show up here on this development
08:19 - server as long as that server is running
08:22 - so back over in the text editor again i
08:24 - just want to talk you guys through sort
08:26 - of the default files that you'll see
08:29 - now there are a couple things in here
08:31 - related to node.js and one of those
08:32 - things is this node modules folder and
08:35 - you'll notice if you click down in this
08:37 - folder there's like a bunch of other
08:38 - folders inside of here this is just
08:40 - something that's used for node.js you're
08:42 - really not going to have to worry about
08:43 - this too much now you're going to need
08:45 - it so you don't want to delete it but
08:46 - you know as far as like having to modify
08:48 - anything in there you
08:50 - probably most likely won't have to
08:52 - next we have this public folder and
08:54 - you'll notice that there's really not
08:56 - too much stuff here in this public
08:57 - folder and this public folder is
09:00 - basically the folder that represents
09:02 - like your finished static website so
09:04 - you'll see later in this course we can
09:06 - build our website which means we can
09:07 - compile all of the gatsby pages that we
09:10 - write together into our finished static
09:12 - site that we can set that we can then
09:14 - serve onto the web
09:16 - and all of your like static web pages
09:18 - and your finished static site is going
09:20 - to go inside of this public folder so
09:22 - this is basically just what our site
09:24 - would look like now and we could put
09:26 - these files on a web server and it would
09:28 - be our site
09:29 - the next folder is probably the most
09:32 - important folder and it's the folder
09:33 - that you're going to be using the most
09:35 - it's this source folder and this is
09:37 - where we're going to store all of the
09:38 - pages for our website so if you're
09:40 - building like a blog site you'd store
09:42 - all of your blog pages in here if you're
09:44 - building a normal website all again all
09:46 - your pages are going to go in here and
09:47 - you'll see we have this pages folder by
09:49 - default
09:50 - and then we have this
09:51 - index.js file now because gatsby is
09:54 - built on node.js and more specifically
09:57 - gatsby uses react.js
09:59 - all of our files are actually just going
10:01 - to be javascript files so the content
10:03 - files that we write and a lot of like
10:06 - the files we write for our components
10:07 - are going to be javascript you can also
10:09 - use other formats like markdown and
10:11 - stuff like that too but for now in this
10:13 - default structure we just have this
10:15 - pages folder and then we have this
10:17 - index.js
10:18 - file
10:20 - so really the source folder like i said
10:22 - is is the most important folder and it's
10:24 - going to it's going to be where you're
10:25 - spending most of your time
10:27 - there's also some other files down here
10:28 - this dot get ignore file this is just a
10:31 - file that's used with git
10:33 - and then we have these
10:34 - package.json files and this is another
10:37 - file that's used with nodejs and there
10:39 - will be a couple instances where we're
10:41 - going to have to modify this but for the
10:43 - most part the package.json file
10:45 - basically just manages all the
10:47 - dependencies and all sort of like the
10:48 - overall settings of your node.js app
10:51 - which is what we have right here so
10:54 - package.js
10:56 - package.json file is important but
10:59 - for like the normal use cases you
11:00 - probably won't have to touch it that
11:02 - much so like i said for the most part
11:04 - this source folder is going to be really
11:06 - important so that's a basic overview of
11:08 - the folder structure in gatsby and we
11:09 - also got our site up and running on that
11:11 - local host so
11:13 - now you're ready to go out and start
11:14 - adding content to your site and really
11:16 - start digging deep into gatsby
11:22 - in this tutorial we're going to talk
11:23 - about adding content to your gatsby
11:26 - files so basically we're just going to
11:28 - take that default
11:30 - index file that gatsby gives us and
11:32 - we're going to add in some different
11:33 - html elements so we're going to talk
11:34 - about how you can start building your
11:37 - pages
11:38 - so over here i just have this basic
11:40 - gatsby default layout and inside the
11:43 - source folder in pages we have this
11:46 - index.js file and if you look over here
11:49 - on my website i'm actually viewing this
11:52 - index file so this index.js file is like
11:55 - the root directory it's like the home
11:56 - page of our website
11:58 - and you'll see in here that there's a
12:00 - bunch of react code actually it's
12:02 - javascript but it's using react and so
12:05 - if this doesn't look
12:07 - super familiar to you it's actually um
12:10 - basically just using this framework
12:11 - called react js and you don't need to
12:13 - know too much about react to use gatsby
12:16 - but it does help to be like a little bit
12:17 - familiar with it but for now just know
12:19 - that like all this fancy code over here
12:21 - is um javascript and it's for this react
12:23 - framework what you can see here is we
12:25 - have a bunch of stuff that looks like
12:27 - html and
12:28 - and it's very similar to uh html and it
12:30 - works the same way so we just have this
12:32 - div and then inside of it we have hello
12:35 - world and what's cool is that
12:38 - by default gatsby is a hot reloading
12:41 - framework so if i make a change over
12:44 - here to this div it'll automatically get
12:46 - updated over here on our website so i
12:48 - can say like hello world
12:50 - it's me
12:52 - and when i save this page
12:55 - it automatically gets updated so without
12:57 - me having to refresh the browser
13:00 - it will automatically save over here so
13:03 - kind of makes it really easy for you to
13:06 - develop your site you know it really
13:07 - makes the development cycle a lot
13:09 - quicker you don't have to like go over
13:10 - and physically refresh the page every
13:12 - time whenever you make a change it's
13:14 - just automatically appearing over here
13:16 - so
13:16 - that's just like a little thing that
13:18 - makes gatsby pretty cool in addition to
13:21 - having like for example a div we could
13:23 - also have other html elements so i could
13:26 - put like
13:28 - a header in here right we could say like
13:32 - here's a header
13:34 - and then i could have maybe like a
13:36 - paragraph as well
13:38 - and when that loads up you'll see it
13:39 - loads up just like normal html now one
13:42 - thing that you need to keep in mind when
13:43 - you're writing content inside of these
13:45 - files
13:47 - is you can't have two html elements that
13:50 - are at the same level so if i was to
13:52 - come over here and create a paragraph
13:57 - and i created this paragraph
14:00 - um at the same level of this div so i
14:02 - have these are like what are called
14:03 - sibling elements when i save the page
14:06 - you'll notice that i get an error and
14:07 - that's because um
14:09 - it says you have adjacent jsx elements
14:12 - and so
14:13 - really although this looks like we're
14:15 - writing in html we're actually writing
14:17 - in a special javascript html like hybrid
14:20 - language called jsx and it's basically
14:22 - like
14:23 - a way that you can write html inside of
14:26 - a javascript file but one of the rules
14:28 - is that you can't have two
14:30 - sibling elements just like this so
14:32 - everything has to be wrapped
14:34 - inside of like a single element like if
14:37 - i put this inside of this div then this
14:39 - air should go away and it should just
14:40 - show up so
14:42 - that's just something to keep in mind
14:43 - when you're writing content inside of
14:45 - something like this
14:47 - and inside of this jsx we can also
14:50 - make some styling so i could like style
14:52 - this div
14:53 - and the way that we would
14:55 - style this would be
14:57 - style and then equals and then inside
14:58 - these double curly brackets we can put
15:01 - um some css so i could say like color
15:05 - and i could do a colon and then i need
15:07 - to put this inside of quotation marks
15:09 - but i could say like
15:10 - blue and now this will change all of the
15:13 - text to blue or i could change it to
15:17 - tomato
15:19 - and it would change it to tomato so you
15:21 - can use um
15:23 - css
15:24 - sort of in line just like this and if i
15:26 - wanted to add for example like another
15:28 - attribute here so i could say like
15:31 - background
15:32 - color
15:34 - we could set this equal to
15:38 - blue and it'll set the background to
15:41 - blue so you can add in different css
15:44 - stylings inside of these jsx elements
15:47 - just very similar to how you would in
15:49 - html if you're familiar with css
15:52 - then you'll notice that this is a little
15:53 - bit different but the same concepts
15:55 - apply
15:56 - another thing we could do would be
15:58 - link to an image so i could say like
16:02 - img
16:04 - and
16:05 - i just have this image of this cute cat
16:08 - because we're on the internet
16:11 - so i'll paste this in here
16:13 - and then we can just close off this
16:15 - image tag and now this image should show
16:17 - up
16:18 - in our website so yeah there's the image
16:20 - of the cat it's like way too big
16:23 - but you can see that it shows up
16:25 - nonetheless so that's kind of like the
16:26 - basics of you know adding in content
16:29 - into these
16:30 - uh javascript files and you can see that
16:32 - it's actually pretty easy
16:35 - and it's very similar to just writing
16:36 - normal html and so if you're not
16:38 - familiar with jsx and how that works and
16:41 - how it kind of um is used in react then
16:44 - you might want to look that up but for
16:46 - the most part you know as long as you're
16:47 - just writing normal html you're pretty
16:49 - much safe and it's probably going to
16:50 - work like 90 of the time but yeah so
16:53 - that's kind of the basics of adding
16:55 - content to these files and
16:57 - any of these js files that we store over
17:00 - here in this pages folder you can
17:01 - basically do this with so you can just
17:03 - put all your sort of html text and html
17:06 - tags over here and it'll just display on
17:08 - the website normally
17:13 - in this tutorial we're going to talk
17:15 - about linking between the pages on our
17:17 - website in gatsby so up to this point in
17:20 - the tutorial we just have this one page
17:22 - which is index.js but in any good
17:25 - website you're going to have more than
17:26 - one page so eventually you're going to
17:28 - want to be able to link between the
17:30 - different pages on your website so i'm
17:32 - going to show you exactly how to do that
17:34 - the first thing we want to do if we're
17:36 - going to link between pages on our site
17:38 - is we want to go up here and we want to
17:40 - add in another import statement so i'm
17:42 - just going to say import
17:43 - and instead of saying react we'll say
17:45 - link from
17:47 - and then inside of uh quotation marks
17:50 - we're just going to type
17:51 - gatsby hyphen link what this is going to
17:54 - do is it's going to allow us to use a
17:57 - react component and that react component
17:59 - is called link and basically all you
18:01 - need to know is that we can use the link
18:04 - component or the link tag in order to
18:07 - create a link between the pages on our
18:09 - site
18:10 - so i want to come down here into
18:13 - this
18:15 - html and i'm just going to
18:17 - use this link tag so now that we
18:19 - imported it we can use a tag called link
18:22 - and then i'm going to say link to
18:24 - and then i need i want to type the
18:26 - address of the page that i want to link
18:28 - to if you're familiar with normal html
18:32 - then you'll know about the
18:33 - like a normal link which is just the a
18:35 - tag and normally
18:37 - we would just type like a and then href
18:41 - and then inside of here we would put
18:44 - the path of the page that we wanted to
18:45 - visit but since this is gatsby and since
18:47 - we're using react we have to do it this
18:49 - way so we can use this link and then
18:51 - inside here i'm just going to put um
18:53 - this will link to like page two
18:56 - and
18:57 - then i can
18:59 - put some text in here so we'll say like
19:01 - page two
19:03 - and then we can close off this link just
19:05 - like that so what this will do is create
19:08 - a link to
19:09 - page two on our website so now if i head
19:12 - over here you'll see that we have this
19:14 - link and when i click this link
19:16 - you'll notice that we get this
19:17 - development 404 page so basically 404
19:20 - page not found right this page
19:22 - isn't on our website and that's kind of
19:24 - a problem so
19:25 - let's come over here into this pages
19:27 - folder and we'll make a new file and i'm
19:30 - just going to call it
19:32 - page hyphen 2
19:34 - dot js so this is going to be another
19:36 - javascript file
19:38 - and i want to just
19:40 - actually i'm just going to go back here
19:41 - we don't get this red screen of death
19:44 - i want to come over here to this index
19:47 - and i'm just going to copy all of the
19:48 - code
19:49 - from in here and i'll just paste it into
19:52 - this new page that way we don't have to
19:53 - write it out we can just have it
19:56 - and i'm just going to get rid of some of
19:58 - this stuff
20:00 - and
20:01 - on this new page we'll just say that
20:02 - this is page
20:04 - 2. and so now our link should actually
20:08 - work so when i click this page to link
20:10 - it'll bring me to
20:11 - this page on our website you'll see that
20:13 - it does
20:14 - another thing we could do would be
20:15 - create another link on this page and
20:18 - we'll link back to the home page so i'm
20:20 - gonna copy the link that we have over
20:21 - here
20:22 - and i'll bring it here into page two
20:25 - and now instead of linking to page two
20:28 - we can just link to the home page which
20:30 - is just a forward slash and we can say
20:34 - go home
20:36 - so now we have this go home link and we
20:38 - can link back to the home page so these
20:40 - links are now
20:41 - operational and we can link between the
20:43 - pages on our site so you could i mean if
20:45 - you created like a bunch of different
20:47 - pages on your site then you could create
20:49 - the links for them
20:50 - another thing i want to point out is we
20:52 - can also put pages inside of sub
20:54 - directories so if i created a folder
20:56 - let's call this folder
20:57 - der1
20:59 - and inside of dir 1 we'll make a new
21:02 - file and we'll just call it page hyphen
21:04 - 3
21:06 - and that's going to be another
21:06 - javascript file
21:08 - and again i'm just going to copy
21:10 - this code and we'll put it inside of
21:12 - page 3.
21:14 - and so
21:15 - from the home page now we can also in
21:17 - addition to linking to page two
21:20 - we can link to page three
21:22 - except now when we put our path we're
21:24 - going to want to put
21:26 - dir one forward slash
21:28 - page three
21:32 - and this should link us to page three so
21:37 - you know organizing your content inside
21:39 - of this pages directory is something
21:41 - that you wanna you know actually do and
21:43 - really the pages directory is kind of
21:45 - like the root directory of your web
21:46 - server and so you know
21:49 - index.js and page two are both at the
21:51 - root directory right and then page three
21:53 - is inside of this subdirectory dur one
21:56 - so you really wanna pay attention to how
21:57 - you're ordering your content and that's
21:59 - kind of how you can do it in
22:02 - gatsby
22:06 - in this tutorial we're going to talk
22:08 - about making your gatsby pages
22:10 - interactive one of the cool things about
22:12 - gatsby is it's built using this
22:15 - framework called react.js and react.js
22:17 - was built by facebook and so you know
22:19 - it's like a powerhouse framework one of
22:21 - the cool things about react is that it
22:23 - allows us to make our websites really
22:25 - interactive so the user can actually
22:27 - like interact with the website and the
22:29 - website will respond to the user
22:32 - and i'm going to show you how we can
22:33 - build a page that just implements like a
22:35 - simple little counter so you'll press
22:37 - like a plus button and the counter will
22:39 - increment and then you'll plus
22:40 - you'll press a minus button and the
22:42 - counter will decrement so the first
22:44 - thing i want to do is come over here
22:46 - into this pages folder and i'm going to
22:48 - create a new file
22:50 - we're just going to call this counter.js
22:54 - so inside of this counter file we are
22:56 - going to
22:57 - make our counter
22:59 - and then in our index file i just want
23:01 - to
23:02 - create a link so that we can easily get
23:04 - to this counter page
23:05 - and so this will just link us to the
23:08 - counter
23:10 - so
23:12 - actually i'm gonna put a break in here
23:16 - so now when we click this link it'll
23:18 - bring us over to our counter page now
23:21 - there is some like default code that i
23:23 - want to
23:24 - put inside this counter.js file and i'm
23:27 - just going to paste it in and then i'm
23:28 - going to explain what the code is doing
23:30 - and then you can just copy it in on your
23:32 - own and that way you can practice kind
23:34 - of like writing this stuff out so you'll
23:35 - notice
23:36 - i just pasted in a bunch of code and
23:38 - this code actually looks a little bit
23:40 - different than the code that we had in
23:42 - our index.js file and that's because
23:44 - this code is different so again this is
23:46 - just javascript code and it's a code
23:49 - that's for the react framework and i'll
23:52 - just kind of walk you through what's in
23:54 - here so up here we're just importing
23:55 - react
23:57 - and now we're creating a class called
23:59 - counter
24:00 - and it's extending the react dot
24:04 - component so basically this is going to
24:05 - be a react component which is basically
24:08 - just like
24:10 - a little component inside of react that
24:12 - can do certain things so
24:14 - and then we have this render function
24:16 - right here and basically anything that
24:18 - goes inside of this
24:19 - render function is going to get
24:20 - displayed on the page and so
24:22 - here we're returning all of the stuff
24:24 - that's going to get displayed so we're
24:26 - just returning whatever is in here and
24:28 - so inside of this class we can put a
24:31 - bunch of code that's gonna help to make
24:33 - our
24:35 - react component dynamic so it'll help to
24:37 - make our page dynamic and so now on this
24:40 - counter page
24:41 - we just have
24:43 - basically just a div that says that it's
24:46 - the class component
24:48 - and now i want to start adding in some
24:50 - code so the first thing i'm going to do
24:51 - is add in some
24:53 - uh
24:54 - html elements and this will kind of like
24:58 - be the setup for our counter so
25:01 - inside of these divs i'm just gonna
25:03 - paste in this code
25:05 - and you'll notice here we have
25:07 - a bunch of code
25:09 - so we have a header that says counter we
25:11 - have a paragraph that says the current
25:13 - count which is zero and then we have two
25:15 - buttons a plus button and a minus button
25:18 - so eventually what we want to happen is
25:20 - when the user clicks this plus button we
25:22 - want this counter to increment and when
25:24 - the user clicks this minus button we
25:26 - want the counter to decrement so over
25:28 - here on our page we just have the plus
25:30 - and minus buttons and you'll notice that
25:32 - nothing happens right now but all we
25:34 - have to do is just add in a little bit
25:36 - of logic into this
25:39 - react class into this
25:41 - gatsby class and it'll start working so
25:43 - the first thing i'm going to do is
25:45 - add in what's called a constructor so up
25:48 - here
25:49 - i'm just going to paste in some more
25:51 - code
25:53 - so
25:54 - it's going to look like this and
25:56 - actually this isn't
25:57 - formatted very well
25:59 - but this is a constructor function so
26:02 - basically what this is doing is that
26:04 - this gets called whenever we create this
26:06 - class or whenever we like reload the
26:08 - page
26:09 - and it's setting this variable called
26:12 - state and so state is a variable that
26:15 - basically represents the state of the
26:17 - component and i'm not going to get too
26:18 - much into what state does but for all
26:21 - you need to know for now is just that
26:23 - inside of this state variable we can
26:24 - store a variable called count so
26:27 - basically we can store
26:29 - the current count inside of this state
26:32 - object so
26:34 - we can store the count right there
26:36 - and then i also want to add in some
26:38 - other code
26:40 - and it's actually going to go
26:42 - in the counter and so i'm just going to
26:44 - put this right here
26:47 - and you'll notice that now instead of
26:50 - just having 0 here when we're trying to
26:52 - access the current count we have
26:54 - something that says this dot state dot
26:56 - count what this is doing is it's
26:58 - accessing
26:59 - this state variable up here so basically
27:02 - instead of just displaying 0 we want to
27:04 - display the value of the count
27:07 - inside of the state
27:09 - and then there's one more thing we need
27:11 - to do which is get the buttons working
27:13 - right in other words we want something
27:15 - to happen when we click the buttons
27:17 - because right now when we click these
27:18 - buttons nothing happens right if i click
27:20 - the plus button and the minus button the
27:23 - count just stays where it is so what we
27:25 - need to do is add in a little function
27:28 - in here to this button tag
27:31 - and again i'm just going to paste it in
27:32 - and then i'll show you what it's doing
27:34 - so what it looks like here is we have
27:36 - button and then it says on click
27:40 - equals
27:41 - and then we have these open curly
27:42 - brackets and then two parenthesis
27:45 - and what we're doing here is we're
27:46 - setting the state so it says this dot
27:48 - set state
27:50 - and then inside of here it just says
27:52 - count and so basically what this is
27:54 - doing is it's decrementing the
27:57 - counter right so it's subtracting one
28:00 - from the counter and actually i think i
28:03 - could probably format this a little bit
28:05 - better so you guys can see it right so
28:07 - this is
28:08 - basically just what it's going to look
28:10 - like
28:11 - right here and actually this should be
28:12 - the minus button because we're
28:14 - decrementing so then i can take this
28:16 - same type of code and use it for the
28:18 - plus button
28:20 - but instead of
28:21 - decrementing it so instead of
28:23 - subtracting one over here we can just
28:25 - add one so i'm gonna do the same thing
28:28 - and i'm just gonna paste it in here and
28:30 - so now when i refresh this page
28:34 - what should happen is when i click the
28:35 - minus button the current couch should
28:37 - decrement and when i click the plus
28:38 - button the current account should
28:39 - increment and you'll see i'm clicking
28:41 - the plus button and the counter is
28:42 - incrementing and i'm clicking the minus
28:44 - button and it's decrementing so
28:47 - that's kind of how you can make your
28:49 - pages dynamic and so basically i'm just
28:52 - using this on click function down here
28:54 - and it's setting the state variable
28:56 - which we set up here in the constructor
28:59 - and it's either incrementing that count
29:01 - or it's decrementing that count and
29:03 - that's kind of how yeah that's one way
29:05 - that you can make your pages interactive
29:06 - obviously the more you learn about
29:08 - react.js the more you'll be able to use
29:12 - these react components to make your
29:14 - website
29:15 - more interactive and more dynamic
29:21 - in this tutorial i'm going to show you
29:22 - how you can build your gatsby website so
29:25 - let's say that you have a bunch of
29:27 - different files and folders and
29:29 - resources on your website and now you
29:31 - want to serve it up on a web server
29:34 - right well how can we access all of
29:36 - those files in other words up until now
29:38 - we've been testing our website on this
29:40 - local host development server but what
29:43 - happens when you want to take those
29:44 - files and put them up on a server of
29:45 - your own well we can actually use a
29:48 - build command in order to build our
29:50 - gatsby website so basically we can
29:52 - execute a certain command and then
29:54 - gatsby will go out and build all of our
29:56 - pages together into static pages that we
29:59 - can then copy and paste or ftp or
30:01 - whatever over onto our web server so i'm
30:04 - just going to show you how to do that
30:05 - really quick
30:06 - so
30:07 - i just want to
30:08 - cd into
30:10 - my directory and once i'm inside of my
30:12 - project directory i can run a simple
30:14 - command which is just npm
30:17 - run
30:18 - build and basically this is just going
30:20 - to tell gatsby like hey we want to build
30:22 - our site so i'm going to click enter
30:25 - and this is going to go off and do a
30:26 - bunch of stuff it's going to build up
30:28 - our entire website
30:30 - so once that's done building i want to
30:33 - head over to my file tree you'll see
30:36 - here we have this folder called public
30:38 - and this is where
30:40 - gatsby spit out all of our static files
30:42 - so inside of this public folder i'm
30:44 - going to open it up and you'll notice
30:45 - that there's a bunch of files and
30:47 - there's a bunch of like javascript files
30:49 - in here and stuff like that but
30:50 - basically this is our entire site so
30:54 - there's actually a lot of these
30:55 - different files and that's kind of what
30:57 - it's going to be like but you'll also
30:58 - notice up here we have like directory
31:00 - one and then there's this page three and
31:02 - page 2
31:04 - and there's this static folder and this
31:06 - counter folder so
31:08 - this is actually all of the resources
31:10 - that we need to include on our web
31:12 - server if we want to run our site so all
31:15 - i would have to do would be like copy
31:17 - and paste this stuff onto my web server
31:19 - and it would start working or you could
31:21 - serve up all of this stuff using like
31:23 - some sort of a deployment app like
31:26 - netlifier or something like that
31:28 - but basically all you need to know is
31:29 - that this public folder has all the
31:32 - files that you need for your website so
31:34 - anytime that you make a change to your
31:36 - website and you want to regenerate the
31:38 - files you can actually just run that
31:41 - npm run build command again and it'll
31:44 - build all these files and it'll sort of
31:46 - like overwrite overwrite the public
31:48 - folder and do everything that you need
31:50 - it to do inside of there
31:55 - in this tutorial i'm just going to give
31:56 - you a quick overview of using components
31:59 - in react
32:00 - now i could make an entire course just
32:03 - talking about using components in react
32:05 - and if you're not familiar with how
32:07 - react works and how components work then
32:10 - this will just kind of give you a brief
32:11 - overview of how these components work
32:13 - and really just sort of help you to wrap
32:15 - your mind around what we're doing here
32:17 - so a component in react is basically
32:19 - just
32:20 - a collection of jsx or a collection of
32:23 - html
32:25 - that has maybe some styling maybe some
32:27 - logic and it's sort of contained in this
32:29 - one class or this one
32:32 - container
32:33 - and what we can do then is import that
32:37 - into other
32:38 - files on our website and sort of use it
32:40 - and
32:41 - the best way for me to explain this is
32:42 - just to kind of show you so earlier in
32:44 - this tutorial we created this
32:47 - counter.js class and if i go over here
32:50 - my website i can click and you'll see
32:52 - this is the counter and basically all it
32:53 - does is
32:55 - just increments and decrements a counter
32:58 - when you click these buttons now this is
33:00 - what's called a react component and so
33:03 - you'll notice that the whole component
33:05 - is just
33:06 - this thing right here and it has some
33:08 - some of this jsx some of this html style
33:11 - stuff in here right and then it also has
33:13 - this constructor function up here
33:16 - and it has these functions like this on
33:19 - click function inside of this button so
33:21 - there's a lot going on inside of this
33:22 - component now imagine that i wanted to
33:25 - take this counter and i wanted to insert
33:28 - it on another page in my website right
33:30 - so
33:30 - here on the home page how about instead
33:33 - of
33:34 - just linking to counter so instead of
33:35 - just having this counter link imagine i
33:37 - wanted to actually physically put the
33:39 - counter on the page
33:41 - well the way that we can do that is by
33:43 - inserting our
33:44 - component or including our component
33:47 - inside of our index file
33:49 - and i'll show you how we can do that
33:51 - first thing we want to do is come up
33:53 - here and i'm just going to type import
33:55 - and then i want to type the name of the
33:57 - react component that i want to import so
33:59 - in our case it's going to be counter and
34:01 - then i'm going to say from and here we
34:03 - just want to put the path to the file
34:06 - and this is going to be the path of the
34:07 - file starting at the root directory of
34:09 - our website so it's going to be dot
34:11 - slash
34:12 - and then it's just called counter dot js
34:16 - and actually i don't think we need the
34:17 - js
34:18 - so we've imported this counter and now
34:22 - we can actually use it so i can come
34:24 - down here in my jsx and let's say that
34:27 - instead of
34:29 - just linking we want to now actually
34:31 - include the counter so i'll get rid of
34:33 - this
34:34 - and i'm going to add in
34:36 - this counter tag so this is the name of
34:38 - the component so we're going to refer to
34:39 - it just like this and then i can just do
34:41 - a forward slash and we'll close off this
34:43 - tag and so now when we save this page
34:46 - the counter shows up over here and so
34:48 - instead of just having that counter on
34:50 - its own page right so if we go over to
34:52 - this counter page the counter is here
34:55 - but now we can just include that counter
34:57 - on our own page
34:59 - and that's
35:00 - basically how you're going to be
35:02 - building your pages using in in gatsby
35:05 - right you want to be using these
35:06 - components and it takes a little while
35:08 - to kind of get used to using these
35:10 - components but it's a really great way
35:12 - to develop and that's basically the
35:13 - whole point of react is to break up your
35:15 - website into these different components
35:17 - now there's another thing that you can
35:19 - do with
35:20 - these react components and you can
35:22 - actually pass them information so
35:25 - in here i could pass this counter for
35:27 - example like a color so i could say
35:29 - color is equal to and we'll just pass in
35:33 - blue
35:34 - and i can actually access this color
35:37 - variable from inside
35:38 - my component so i'm here in my counter
35:41 - component
35:43 - and if i wanted to access the color i
35:45 - could basically just
35:48 - type out something like this so
35:50 - i can do open and close curly brackets
35:53 - and then i can type this dot props and
35:56 - then i want to type the name of the
35:57 - variable that we passed in so it's just
35:58 - going to be color in our case and this
36:00 - will print out the color so over here
36:03 - you can see it's printing out blue
36:06 - and
36:08 - i can actually use this color to style
36:10 - this component so i could come up here
36:12 - to this div
36:14 - and we could make a style and then
36:16 - inside these style tags i could say
36:19 - color
36:20 - and i could set it equal to
36:23 - this.props.color so now
36:25 - this
36:26 - component is going to be colored blue
36:28 - what's cool is i can change the color of
36:30 - this
36:31 - from in this file so if i wanted to make
36:33 - this like green for example i could just
36:36 - pass in green
36:37 - and now the counter is going to be green
36:39 - so
36:40 - that's kind of how you can use these
36:42 - components to make your website more
36:43 - powerful and obviously you can create
36:45 - more than just a counter so i could
36:46 - create you know a couple dozen of these
36:48 - components and add them in on my website
36:50 - like i could create a component for
36:53 - like a navigation list i could create a
36:55 - component for the header of my website i
36:57 - could create a component for a button
36:59 - really doesn't matter you can create
37:00 - components for anything
37:02 - and then you can sort of just use them
37:04 - on your web pages in order to build your
37:06 - user interface
37:11 - in this tutorial i want to talk to you
37:12 - about using plugins in gatsby one of the
37:15 - cool things about gatsby is it allows
37:18 - you to install and use external plugins
37:21 - inside of your project and these
37:22 - external plugins can do a bunch of cool
37:24 - things they can add elements to your
37:26 - website or they can make your website
37:28 - more powerful so you definitely want to
37:30 - consider using plugins if you're
37:32 - building a gatsby site i'm over here in
37:35 - my web browser on this page right here
37:37 - it's gatsby js.org forward slash docs
37:40 - forward slash plugins and this is sort
37:42 - of like the official plugins page for
37:45 - gatsby and so if we just scroll down on
37:47 - this page you'll see there's this huge
37:49 - list of official gatsby plugins that you
37:52 - can use and a lot of these plugins were
37:54 - just developed by gatsby and there's
37:57 - also a bunch of plugins that were
37:58 - developed by the community
38:01 - and these plugins do a wide variety of
38:04 - things you know all sorts of stuff
38:06 - and they can really just make your
38:07 - website a lot more powerful so what you
38:09 - should do is just kind of click through
38:11 - these plugins and see if any catch your
38:13 - eye see if any you know you might be
38:15 - useful on your website for example
38:17 - here's one for google analytics and for
38:20 - a lot of these um plugins the ones that
38:24 - are official plugins there's like a
38:26 - they have their own page on gatsby's
38:28 - website so you'll see like this plugin
38:30 - has its own page and there's like
38:31 - installation instructions and it tells
38:33 - you how to use them a lot of these
38:35 - plugins will require like a little bit
38:37 - of configuration to really get them
38:39 - going
38:40 - and then a lot of these community
38:42 - plugins will just link you to a github
38:44 - page and you can you know same thing
38:46 - just read the readme.markdown file and
38:48 - they give you the installation
38:49 - instructions and stuff like that
38:52 - so i want to talk to you in this video
38:53 - about
38:54 - you know in downloading and installing
38:56 - your own plugin and in this video we're
38:58 - actually going to install a plugin for
39:00 - typography.js and typography.js is like
39:02 - a css
39:04 - framework that we can use inside of our
39:05 - website to kind of just make it look
39:08 - better and style it a little bit better
39:09 - by default so imagine something like
39:11 - bootstrap which you know styles your
39:13 - website that's kind of
39:15 - like the plugin that we're going to be
39:16 - using
39:17 - so
39:18 - the way that you install these plugins
39:20 - and the first thing you always have to
39:21 - do is install the plugin using the
39:23 - node package manager so i'm just going
39:25 - to go down in my terminal and
39:28 - i'm just going to type out
39:30 - the following
39:31 - command i'm just going to type npm
39:33 - install
39:34 - dash dash save and the plugin that i'm
39:37 - going to be installing is this gatsby
39:39 - plugin typography
39:41 - and what this will do is it'll install
39:43 - everything we need to run that
39:45 - typography.js on our gatsby website so
39:47 - i'm just going to click enter and node
39:49 - package manager will go out and do its
39:51 - thing and get everything it needs to run
39:53 - typography once that's finished running
39:56 - and you get a success
39:58 - then there's one more thing that we have
40:00 - to do which is we basically just have to
40:02 - tell gatsby that we want to use
40:05 - that plugin so we have to let gatsby
40:07 - know like hey we installed this plugin
40:08 - and we want to use it on our website the
40:10 - way we can do that is by
40:12 - telling gatsby inside of this
40:15 - gatsbyconfig.js file now this isn't a
40:17 - file that's going to be inside of your
40:20 - directory by default and so you want to
40:22 - create this file you want to create this
40:24 - file at the root directory of your site
40:26 - so in my case it would be inside of this
40:27 - ga site folder so
40:30 - this gatsby config file should be
40:33 - you know in the same directory as the
40:34 - source folder in the public folder
40:37 - inside of this
40:38 - gatsby config.js file we want to type a
40:41 - few things the first thing we're just
40:43 - going to type is module
40:46 - dot
40:47 - exports and this is going to be equal to
40:50 - two curly brackets and then inside of
40:52 - here i just wanna make an array so it's
40:55 - gonna be plugins
40:58 - and inside of this plugins array we're
41:00 - just gonna type out all the plugins that
41:02 - we wanna use so in my case i'm using
41:05 - the
41:07 - gatsby
41:09 - plug-in
41:10 - typography once you have this in here
41:11 - basically this is just telling gatsby
41:13 - like hey we want to
41:15 - use this plug-in and this gatsby's going
41:17 - to read this config file every time it
41:19 - builds your site
41:20 - so what we want to do is just restart
41:22 - our website so restart our web server
41:25 - and i just have it running
41:28 - down here so i'm just going to gatsby
41:30 - develop
41:31 - and we'll restart our web server and
41:33 - actually i think i spelled module wrong
41:36 - yes that's why that's not working so now
41:38 - that that's finished running i want to
41:40 - go over to my website
41:42 - and right here you'll notice that the
41:44 - text has actually changed style so
41:46 - before the text was like not really
41:48 - styled very well and now it actually
41:50 - looks pretty good and so what actually
41:52 - happened was this typography
41:54 - plug-in got used by
41:57 - gatsby and it changed the way that our
41:59 - text looked right so the typography is
42:01 - like a css framework so it's changing
42:03 - the look and the feel of our site and if
42:05 - i inspect this page
42:09 - and i go up here in the head of our
42:10 - website you'll see that there's this new
42:12 - element here it's this style tag and it
42:15 - says id is typography.js and so actually
42:18 - what happened was
42:20 - gatsby used that typography plugin to
42:23 - add this typography code inside of our
42:26 - gatsby site so all we had to do was just
42:28 - configure the plugin and our website is
42:30 - automatically styled with this cool
42:32 - typography theme so
42:34 - you know what you should do is go over
42:36 - to this plugins website and play around
42:38 - with different plugins you know see how
42:40 - they work on your website see if you
42:42 - like them see if you don't like them and
42:43 - you know just basically use them to make
42:45 - your site better any way that you can
42:51 - in this tutorial i want to talk to you
42:53 - about using the layouts in gatsby
42:56 - layouts are basically special types of
42:58 - files
42:59 - that will act as a template for all the
43:01 - pages on our website so
43:03 - imagine there was a scenario where we
43:05 - were creating a website and for every
43:07 - single page on the website we wanted to
43:09 - have like the same layout right so on
43:11 - every page we wanted to have the same
43:13 - header and we wanted to have the same
43:14 - footer maybe we wanted to have like the
43:16 - same navigational list and we wanted it
43:19 - to be the same for all the pages on our
43:21 - website now one way we could do that
43:22 - would just be to copy and paste that
43:25 - header footer
43:26 - code onto every single page in our
43:28 - website right so if we had 100 pages we
43:30 - would copy and paste it a hundred times
43:32 - onto all those pages but a better way to
43:35 - do that would be to just define some
43:38 - overall layout for our site and then
43:41 - have all the pages on our site inherit
43:43 - from that layout so all the pages on our
43:45 - site would use that layout as their
43:47 - template or as their skeleton of html
43:50 - code and then they could just whatever
43:52 - content is inside that given page would
43:54 - just be inserted inside that layout so
43:56 - i'm going to show you how to build
43:57 - layouts inside of gatsby the way that we
44:00 - do that is by first coming over to this
44:03 - source folder
44:04 - and i want to create a new folder inside
44:06 - of here and i'm just going to call it
44:08 - layouts
44:11 - and then inside of this layouts folder
44:13 - we can create a new file and we'll just
44:15 - call this
44:16 - index.js
44:19 - and index.js is going to be the default
44:21 - layout that all of the pages on our site
44:23 - are going to use
44:25 - so in here i'm just going to
44:26 - paste in some code
44:28 - and i'll talk about what we have here so
44:30 - i just have import react from react
44:33 - and then export default
44:35 - and then you need this parentheses with
44:37 - curly brackets inside and children
44:40 - and then here we have the actual layout
44:43 - of our website so as long as you have
44:45 - something that looks like this then you
44:47 - should be able to implement this layout
44:48 - now there's this special tag right here
44:51 - it's children
44:52 - it's basically like a children function
44:54 - that it's calling and it's inside of
44:55 - these curly brackets
44:58 - and what this will represent is the
45:00 - content
45:01 - of the page that we're currently on so
45:04 - just to demonstrate this i will type out
45:06 - some text so we're going to say layout
45:09 - and we'll say layout and when i go over
45:11 - to my website
45:12 - and actually before we do that whenever
45:14 - you make a new layout you need to
45:17 - restart your development server so i'm
45:19 - going to restart my gatsby server
45:21 - just like that and once that's done
45:23 - restarting when i refresh this page
45:26 - you'll notice that now instead of just
45:27 - having hello world and this is a
45:28 - paragraph we have
45:30 - these layouts up here and so
45:34 - layout is surrounding the content of my
45:36 - page and i actually have a couple other
45:38 - pages here i also have
45:40 - page two and i have a page three so if i
45:43 - go over to
45:45 - forward slash page two
45:47 - it's the same thing so on this page too
45:49 - it's using the same layout that our home
45:52 - page used and if i go to page three it's
45:55 - the same thing so page three is also
45:56 - using this layout so by default all the
45:59 - pages on our website are going to be
46:01 - using this layout and these layouts are
46:03 - awesome because over here for example i
46:05 - could define like a header for my page
46:08 - and this will just be a really simple
46:09 - header and then i can also define like a
46:12 - footer down here and that header and
46:14 - that footer are going to show up on
46:16 - every single page inside of our website
46:18 - so
46:20 - this makes it really easy to define a
46:22 - layout for all the pages on your site so
46:24 - you could have your header up here and
46:26 - your footer down there and whenever you
46:28 - want to change the way that the header
46:30 - or the footer looks you only have to
46:32 - change it right here on this layouts
46:34 - page or on this index
46:36 - file inside the layouts folder you don't
46:38 - have to change it on any of the other
46:39 - pages and that just makes your site more
46:41 - modular and more scalable so
46:44 - play around with these layouts and you
46:46 - know you can basically just structure
46:48 - your whole site inside of this layout
46:49 - and then all of your content will just
46:51 - get injected into the layout from this
46:53 - children function
46:57 - in this tutorial i'm going to talk to
46:59 - you about using data in gatsby and this
47:02 - is just going to be like a quick
47:03 - introduction into how we can store some
47:05 - external data about our website and then
47:08 - access that data inside of our pages so
47:11 - imagine that i wanted to store some
47:12 - information about my site maybe i wanted
47:14 - to store like the title of my website
47:16 - and the author of the website and i
47:18 - wanted to be able to access that
47:20 - information inside of multiple pages on
47:22 - my site well one way i could do that
47:24 - would be to just write out that
47:26 - information in each one of my pages so i
47:28 - could create a header and each page and
47:30 - put in the site title right but here's
47:32 - the problem if i want to then change
47:34 - that title i would have to go through to
47:36 - every single page on my site and
47:38 - manually change the title i'd have to do
47:40 - some sort of like a find replace and
47:42 - that could be really messy and it could
47:44 - be potentially dangerous if not
47:46 - everything is like spelled the same or
47:47 - whatever
47:48 - an easier way would
47:50 - just be to store the title of my website
47:52 - inside of a variable somewhere
47:54 - and then have all of my pages fetch that
47:57 - data and use that variable right
48:01 - that way if i wanted to change the title
48:03 - i would only have to change it in one
48:04 - spot and it would automatically update
48:07 - on all the pages in my site so in this
48:09 - tutorial i'm going to show you how you
48:11 - can do something exactly like that in
48:13 - gatsby we want to open up this gatsby
48:16 - config javascript file
48:19 - and if you don't have this file it's
48:21 - located at the root directory of your
48:22 - project so
48:24 - in my case it's right here in this ga
48:26 - site folder and if you don't have it you
48:27 - can just create it so this is basically
48:30 - like the main settings configuration for
48:34 - our gatsby app so in here you can put
48:36 - all sorts of important things that will
48:38 - help gatsby to configure itself and to
48:41 - just do what it has to do so
48:44 - inside of this module.exports
48:47 - function and or object you want to add
48:50 - this in we're going to put a an
48:52 - attribute it's going to be called site
48:53 - metadata
48:55 - and this is going to be an object and
48:57 - inside of this site metadata object we
49:00 - can put any variables that we want to
49:01 - access about our site so
49:03 - i could put like title
49:05 - and we could give our website a title so
49:07 - we could say like
49:09 - draft academy's
49:11 - website
49:12 - i could also give this something maybe
49:14 - like an author and we can just say the
49:17 - author's me mike
49:19 - so
49:20 - obviously this is just some very simple
49:22 - data but i'm storing it about my website
49:25 - now what i can do is i can configure
49:27 - each one of my pages to go out and grab
49:31 - this information and so my pages will be
49:34 - able to display the website title and
49:35 - the website author
49:37 - and
49:38 - if i ever want to change those i only
49:40 - have to change them in this config file
49:42 - i don't have to touch the pages that are
49:45 - pulling this data
49:47 - so
49:48 - i'm going to head over to
49:49 - one of my pages we'll just go to
49:51 - index.js this is the home page and in
49:54 - here what i want to do is make some
49:56 - simple modifications which will allow me
49:58 - to grab the data that is coming from
50:02 - this
50:03 - gatsbyconfig.js file
50:05 - so the first thing i want to do is add
50:08 - what's called a graphql query and
50:10 - graphql is a querying language that was
50:13 - developed by facebook and it was
50:15 - designed to be used with react and
50:17 - basically you can use graphql
50:19 - in order to grab information from
50:21 - external sources in our case we are
50:24 - grabbing information from this gatsby
50:26 - config.js file so graphql is a querying
50:30 - language a lot like sql if you've ever
50:32 - used sql before we can use graphql to
50:35 - write queries to get information and
50:37 - that's what i'm going to do down here i
50:39 - actually have some code that i'm going
50:41 - to paste in here and then i'm going to
50:43 - explain what it does
50:44 - so this code that i just pasted in is
50:46 - actually a graphql query and what this
50:50 - is doing is it's going out to that
50:52 - config file and it's grabbing the title
50:55 - and the author so you can see it's just
50:57 - export const query is equal to graphql
51:00 - and then we have this
51:02 - single quote and then there's another
51:04 - single quote down here and then we have
51:06 - the query which is just
51:08 - the name of the query up here and then
51:11 - we want to grab information about the
51:12 - site and the site metadata and the title
51:15 - and the author so what you want to do is
51:17 - just paste this down into your
51:20 - file so any files that you want to
51:21 - access the site metadata you want to
51:24 - paste one of these graphed ql queries
51:26 - into there
51:27 - and as long as you have this graphql
51:29 - query in here
51:31 - we'll actually be able to access the
51:33 - information that's inside the site
51:35 - metadata so once you have this query
51:38 - inside of your file
51:40 - you want to come up here and i'm here at
51:42 - this export default and inside of these
51:44 - parentheses you just want to put two
51:46 - curly brackets
51:48 - and we're just going to type out data
51:50 - and what this is going to do is it's
51:51 - going to inject the data from this query
51:55 - into our jsx and so now we can actually
51:59 - access the data from the query inside of
52:02 - our
52:03 - jsx code here so
52:06 - if i wanted to do that i could just come
52:08 - over here and we could actually print
52:10 - out either the website title or the
52:13 - author so why don't we do that inside of
52:16 - this
52:17 - header one instead of saying hello world
52:19 - why don't we print out the title of the
52:20 - website so
52:22 - inside of some curly brackets i'm just
52:23 - going to type out data
52:25 - dot site
52:27 - dot
52:28 - site
52:30 - metadata and then i want to type out the
52:33 - name of the variable that i want to
52:35 - access the name of the attribute that i
52:36 - want to access so it's just going to be
52:38 - title so if i save this page
52:41 - and just a quick note whenever you
52:43 - modify your gatsby config file you have
52:46 - to restart your gatsby development
52:48 - servers and you can see that the text
52:51 - over here is updated so now instead of
52:52 - saying hello world it says draft
52:55 - academy's website
52:57 - and i can also access the author so
52:59 - let's put the author down here in this
53:01 - paragraph we'll just say and now we
53:03 - should be able to see the author of the
53:05 - page which is mike so
53:07 - basically what we did was we stored
53:09 - information about our website some
53:12 - global variables inside of this
53:14 - config gatsby file so we stored a title
53:17 - and an author and then we were able to
53:19 - access that title and that author by
53:21 - running this graphql query okay
53:25 - and then
53:27 - that graphql query grabbed the data for
53:29 - us and injected it into our
53:32 - react
53:33 - function here and then we were able to
53:35 - access them inside of the jsx so that's
53:38 - sort of the flow of the data
53:41 - there's one more thing i want to show
53:42 - you which is a really cool feature that
53:44 - we can use with gatsby which is called
53:47 - graft iql and graph iql is something
53:50 - that i have open right here and the way
53:52 - you access it is by going to logo host
53:54 - 8000 forward slash three underscores and
53:58 - then graphql and you actually don't need
54:01 - this query part right here
54:03 - and this is a sort of a user interface a
54:06 - gui for testing out graphql queries so
54:10 - inside of here you could test out and
54:13 - write different queries that you might
54:14 - be writing obviously the query that we
54:17 - wrote over here this is a pretty simple
54:18 - query but if you have more complex
54:21 - queries then you're going to want to be
54:22 - able to test them out so
54:24 - if i wanted to i could actually test out
54:27 - a query here so i could say
54:30 - like
54:31 - we could test out the query that we're
54:32 - writing on this page so i could say site
54:35 - and then
54:36 - site metadata
54:38 - and then inside of here i could try to
54:40 - access the title and the author and
54:42 - you'll notice what i wrote here is
54:44 - basically just
54:46 - what i have
54:47 - down here
54:48 - so i'm testing out this query and then i
54:50 - can run it and we'll see
54:52 - what returns back so without actually
54:54 - putting this inside my website i can
54:56 - test out the query and make sure that
54:58 - i'm getting the correct data back so
55:01 - this graft iql
55:04 - feature of gatsby can be really useful
55:06 - for helping you to test out your queries
55:08 - and really just
55:09 - supercharging your workflow
55:14 - in this tutorial i want to talk to you
55:16 - about using data in gatsby now in the
55:19 - last tutorial if you're following along
55:21 - with the course
55:22 - we looked at grabbing data about the
55:25 - site so
55:26 - inside of our
55:28 - gatsbyconfig.js file we had this site
55:31 - metadata in here and we stored two
55:33 - values about our website title and
55:35 - author and then on this index.js page we
55:38 - ran a graphql query
55:40 - and then we were able to access that
55:42 - information from inside of our jsx so
55:45 - over here we have this website that's
55:48 - pulling the title of the website and
55:50 - it's pulling the author of the website
55:52 - this is a great way to
55:55 - use data and store data about your
55:56 - website but
55:58 - it's kind of limited right in other
55:59 - words you're only able to pull the data
56:02 - that you can store inside of this site
56:04 - metadata
56:05 - object so
56:07 - using gatsby we can actually access
56:09 - other types of data and one type of data
56:11 - that we can access is data about the
56:14 - files in our website so one thing that
56:16 - you might be curious if you're building
56:18 - a website is what are the other pages
56:20 - like how can we get information about
56:23 - all of the pages on our site in this
56:25 - tutorial i'm going to show you exactly
56:27 - how you can do that we'll be able to use
56:29 - graphql queries to figure out
56:32 - information about the different pages on
56:34 - our site therefore using that you can
56:36 - build things like directories or you can
56:38 - figure out you know what pages are in
56:40 - what directories and what pages are
56:42 - doing what
56:43 - it's really powerful so the first thing
56:45 - we want to do in order to do something
56:47 - like that is we need to install a gatsby
56:50 - plug-in and
56:52 - this plug-in is
56:54 - called
56:55 - gatsby source file system and basically
56:58 - what this plugin is going to do is it's
57:00 - going to allow us to access information
57:02 - about our file system so i'm just going
57:04 - to paste this in down here into my
57:06 - terminal and you can go ahead and copy
57:08 - this it's just npm install dash dash
57:11 - save gatsby hyphen source hyphen file
57:14 - system so we want to run that and we're
57:17 - going to let node package manager
57:18 - install that onto our computer once
57:20 - that's installed now we just have to
57:22 - tell gatsby about it so i'm going to
57:24 - come over here into my gatsby config.js
57:27 - file and inside of here
57:30 - i want to create a new attribute in here
57:33 - and you might already have something
57:35 - like this but it's going to be plugins
57:37 - and so it's just going to say plugins
57:39 - colon and then this is going to be an
57:41 - array and so this is just an array of
57:43 - the different plugins on our site and i
57:45 - want to add in the plugin that we just
57:48 - installed so you want to put this code
57:50 - in here and it's basically just saying
57:53 - that we want to use the gatsby source
57:54 - file system and then we're passing it
57:57 - some different options so we're passing
57:59 - it the name is source and then we're
58:01 - passing it the directory name forward
58:03 - slash source so this is basically just
58:04 - telling gatsby where all of the files on
58:08 - our website are located and then it can
58:10 - go there and you know figure out what we
58:12 - have available
58:13 - once you update your gatsby config js
58:16 - file you want to restart your
58:18 - development server so i'm just going to
58:20 - do that and now that this is restarted
58:22 - we can actually start using this gatsby
58:25 - source file system so i'm going to come
58:27 - over here into my web browser and i'm
58:29 - going to open up this graftql
58:32 - url so it's localhost
58:35 - 80 or 8000 forward slash three
58:38 - underscores and then graph ql and this
58:40 - is called graph iql and it's basically
58:42 - just a user interface for uh
58:45 - running graphql queries so we can test
58:47 - out graphql queries inside of here
58:50 - what i want to type out is just open and
58:52 - close curly brackets and
58:54 - if you type in um like start typing in a
58:58 - then you should see this all file
59:00 - attribute should come up and if you type
59:02 - in f you should see that file come up
59:04 - comes up so this file and this all file
59:07 - these both have to do with the
59:11 - sort that with the plugin that we just
59:12 - installed and so
59:13 - because we installed that plugin we're
59:15 - now able to see these two guys so i'm
59:19 - just going to click on all file
59:21 - and then what you can actually do is
59:23 - just click if you're on a mac you can
59:25 - click command enter if you're on windows
59:26 - you can click control enter and that's
59:28 - going to automatically fill out this
59:30 - query for us and so you can see it's all
59:32 - file edges node and then right here
59:36 - we're looking at id so right now what
59:38 - we're doing is this query is grabbing
59:41 - the id of all the pages on our website
59:43 - so if we look over here you can see that
59:46 - it's
59:47 - pretty much doing that so the id is
59:48 - basically just the path so we have this
59:51 - index.js file
59:53 - we have this counter.js file
59:55 - we have this other index.js file
59:59 - this page to file
60:01 - and page three and those are all the
60:03 - pages that i have
60:04 - over here on my website so this is just
60:07 - looping through the file system for my
60:10 - website and just printing it out and in
60:12 - addition to printing out the id so you
60:14 - can print out id here and you can also
60:16 - print out a bunch of other stuff so if
60:18 - you just click control space
60:20 - then this will give you an option for
60:22 - it'll give you like a drop down with all
60:24 - the the the options so we could search
60:26 - for the parent children pages
60:30 - internal source instance name absolute
60:32 - path relative path extension so why
60:34 - don't we search for extension and we'll
60:36 - search for relative path so this will
60:39 - give us the extension of all the files
60:40 - and the relative path of all the files
60:43 - and i'll run this query
60:45 - and you can see that
60:47 - most of these are like js files and then
60:49 - we have the relative paths for all the
60:51 - pages
60:52 - so a query like this can be really
60:54 - useful because not only does it allow us
60:56 - to loop through all the pages on our
60:58 - site but it allows us to access
60:59 - different information about all the
61:01 - pages on our site like you can see we
61:03 - have all these things here so
61:05 - if you were building like a breadcrumbs
61:07 - navigation for example you could use
61:08 - this parent or this children attribute
61:11 - in order to do that you can use these
61:13 - absolute and relative paths to build
61:15 - links so you can build like a table of
61:17 - contents or something like that
61:19 - so using these
61:20 - all file queries is a really great way
61:23 - to you know make your website more
61:25 - powerful so i'm actually going to give
61:26 - you a demonstration of building
61:28 - something like a
61:30 - navigation list i'm going to go over
61:32 - here to my index.js file and this is
61:34 - just like the home page of my website
61:36 - and i'm going to be kind of pasting some
61:38 - different code in here so you can just
61:40 - kind of follow along with what i'm doing
61:41 - and then sort of implement your own
61:43 - version of this so the first thing i
61:45 - want to do is just make sure that i have
61:46 - this data attribute set up here so i
61:49 - want to pass the data into my website
61:52 - and i'm just going to get rid of these
61:54 - two guys and i want to change up this
61:56 - query so right now this query is
61:58 - accessing the title and the author of
62:00 - the site metadata but we want to change
62:02 - it up so we actually want it to be the
62:05 - query that or similar to the query that
62:08 - we ran over here
62:09 - and the query i'm going to be using is
62:12 - going to look like this so i'm just
62:13 - going to paste this in
62:15 - and you can see
62:16 - it's just what we did over there in that
62:18 - eye in that graphql
62:21 - but now we're accessing relative path
62:23 - pretty size extension
62:25 - and birth time so this will give us some
62:28 - interesting information about all the
62:29 - pages on our site and then up here in
62:32 - our jsx we can actually grab that
62:34 - information and use it so once again i'm
62:36 - just going to be pasting some code in
62:38 - here
62:39 - and i'm going to go ahead and do that
62:41 - and basically what i pasted was a table
62:44 - and this is just a basic sort of jsx
62:47 - table up here i have the table head and
62:49 - we have these table headers which are
62:51 - basically just displaying all of those
62:54 - attributes and then inside the table i'm
62:56 - accessing
62:58 - all of these attributes so i'm actually
62:59 - what i'm doing is i'm looping through
63:02 - the results of the all files query so
63:04 - that all files query if we look over
63:07 - here on the graphql
63:09 - you'll notice that it returned an array
63:11 - so returned in an array of all the
63:13 - different pages on our website so what
63:16 - i'm doing over here is i'm
63:19 - looping through all of the elements in
63:21 - that array
63:22 - and i'm mapping them to
63:25 - basically table rows so rolls row rows
63:28 - in the table so each one of these like
63:30 - no dot relative path each time through
63:32 - the loop that's going to represent a
63:34 - different relative path of a different
63:36 - page on the website so
63:39 - if i save this file and i head back over
63:41 - here to my normal website you'll notice
63:44 - that we have a table that's just listing
63:47 - out all of the pages in our website and
63:49 - this isn't formatted perfectly but
63:51 - you kind of get the idea right it's
63:53 - giving the relative path of each of the
63:54 - pages on our website
63:56 - the extension how long ago it was made
63:59 - and then the pretty size so basically
64:01 - like how big the file is
64:03 - and this is just one example of being
64:05 - able to
64:06 - loop through all of
64:08 - these pages so when you're able to
64:11 - access all of this information about the
64:12 - pages on your file system it really
64:15 - makes it a lot easier to build out
64:17 - certain navigational elements of your
64:19 - website and also just to have
64:21 - information about the different pages on
64:24 - your website
64:28 - in this tutorial i want to talk to you
64:30 - about accessing markdown data in gatsby
64:33 - now if you've been following along with
64:35 - this course you'll know that we've been
64:36 - learning how to grab data and bring it
64:39 - into our
64:40 - gatsby files so
64:42 - i can go out and i can grab information
64:44 - about the gatsby website and i can also
64:47 - get information about the overall file
64:50 - system that we're using so if you look
64:52 - over here on this
64:54 - page right here i'm basically have a
64:56 - table that's listing out all of the
64:58 - pages that are inside of my website
65:01 - but here's a question like
65:03 - imagine that instead of just listing out
65:05 - pages you actually wanted to access
65:07 - information inside of those pages so
65:09 - this is all information about the pages
65:11 - right we have the relative path the size
65:13 - the extension when it was created but
65:16 - this isn't actually giving us it's only
65:18 - giving us information about the page
65:19 - it's not giving us like what's inside of
65:22 - the page itself
65:23 - and if you're trying to build like a
65:25 - blog or something
65:27 - and or especially if you're trying to
65:29 - work with markdown you're going to want
65:31 - to be able to access more information
65:33 - about the page you're going to want to
65:34 - be able to like figure out okay what
65:36 - information is actually inside of these
65:38 - markdown files that i'm creating and be
65:40 - able to use that information to display
65:42 - those pages better so in order to do
65:44 - that
65:45 - we need to actually install another
65:47 - plugin and before i install the plugin i
65:49 - just want to make a new markdown file so
65:52 - inside of my pages directory i'm just
65:54 - going to make a markdown file called my
65:57 - first post
66:00 - and this will just sort of represent
66:01 - like a markdown file post that we can
66:04 - access and inside of this post i want to
66:08 - start by writing something called front
66:09 - matter and front matter is basically
66:12 - information that you can
66:14 - write about the different pages or the
66:16 - different markdown pages on your website
66:18 - so up here in between these three dashes
66:21 - i can actually write some variables so i
66:23 - could define a title
66:26 - and we can just say that this is like my
66:28 - and then i could also define something
66:30 - else like an author so i could
66:32 - you know define like who's writing this
66:34 - so you could just say it's me
66:36 - so this is called front matter and this
66:37 - is basically just data that you're
66:39 - defining about the data in this file so
66:42 - it's metadata and then we can just put
66:44 - some content so this is the content in
66:47 - my markdown
66:48 - so what i want to be able to do is run a
66:51 - query to be able to access this markdown
66:54 - and first thing i'll point out is if you
66:56 - notice over here
66:57 - the
66:59 - table that we're looking at here is
67:00 - actually updated and so now it's
67:02 - including my first post out markdown and
67:05 - over here i'm using the
67:07 - source file system plugin in order to
67:10 - display this stuff and so automatically
67:12 - when i create this new markdown file it
67:13 - gets added into our table here
67:17 - but instead of just being able to figure
67:18 - out that we have a markdown file i
67:20 - actually want to be able to access the
67:22 - information inside of this file so i
67:24 - want to be able to access the actual
67:26 - markdown content right here and then i
67:28 - want to be able to access these front
67:30 - matter variables up here and if i can do
67:32 - that then i can create a listing on my
67:35 - page that will list out all of these
67:37 - files
67:38 - or all these markdown files and the way
67:40 - that i do that is opening up my terminal
67:43 - and i actually want to install something
67:46 - and this is going to be a another gatsby
67:48 - plugin
67:49 - and i'm just going to paste this down
67:51 - here
67:52 - and you'll notice it's just npm
67:55 - install
67:57 - dash dash save gatsby transformer remark
68:01 - so this is going to be a plugin that's
68:03 - going to allow us to do some stuff with
68:06 - those markdown files i'm just going to
68:07 - click enter
68:09 - and npm is going to go off and do its
68:10 - thing and once that's done running we
68:12 - can actually go over to our gatsby
68:15 - config file and tell gatsby that we want
68:17 - to use it so over in this gatsby config
68:20 - file down here inside of this plugins
68:22 - array i'm just going to add another
68:24 - entry and we're just going to type out
68:27 - the name of the plugin that we just
68:29 - downloaded so
68:31 - it's just going to be gatsby transformer
68:33 - remark just like that so once we have
68:35 - that in here i just want to restart my
68:38 - gatsby development server and now that
68:40 - this is running i want to head over to
68:43 - this graph iql user interface
68:46 - and we can start trying to access the
68:49 - information in this markdown file since
68:51 - you just added that new plugin we should
68:54 - now have access to a couple new
68:56 - attributes inside of this graphql
68:58 - and
68:59 - you want to just start typing out all
69:01 - and what you should see is all markdown
69:04 - remark and you can also just start
69:06 - typing markdown and you'll see that
69:09 - these two new options have appeared so
69:10 - markdown remark and all markdown remark
69:13 - and these are now
69:15 - things that we can use to query the
69:16 - markdown files in our file system so i'm
69:19 - just going to do all markdown remark and
69:21 - i'm just going to click control enter or
69:23 - command enter
69:25 - and this will start up a default query
69:28 - for us so this is just going to query
69:30 - through all of the markdown files on our
69:32 - site
69:33 - so if i play this query you'll notice
69:35 - over here
69:36 - we have
69:37 - the basically like the id of the path so
69:40 - it's just pages myfirstpost.markdown
69:44 - and if i added in some other markdown
69:46 - files then more entries would show up
69:48 - here so let's do that let's add another
69:50 - markdown file we'll just call it
69:52 - markdown two
69:54 - i can give this some front matter as
69:56 - well
69:57 - so we'll just give this a title
70:04 - so over here now when i replay this the
70:07 - new markdown file should show up and so
70:10 - here we have that markdown 2 file
70:12 - showing up
70:13 - in addition to just accessing the id
70:15 - there's also a lot of other things we
70:17 - can access so if you click control space
70:19 - then this list is going to pop up and
70:21 - this will give you everything that you
70:22 - can access about the markdown file so
70:24 - one cool thing is this html right here
70:26 - and this html will basically just spit
70:28 - out the actual html of the markdown file
70:33 - so you can use this html attribute in
70:35 - order to insert the content of the
70:37 - markdown file into
70:39 - one of your web pages we can also access
70:42 - that information that was inside of the
70:43 - front matter so if i just type out front
70:46 - matter
70:47 - you'll notice by default it's trying to
70:50 - query for date and parent
70:52 - but since we only have title we want to
70:55 - just query for the title and you'll
70:56 - notice that it's giving us the title of
70:59 - both of these
71:01 - uh front matter or both of these
71:03 - markdown pages
71:04 - so you can use these
71:06 - markdown queries in order to access
71:08 - information about the markdown files
71:10 - that are in your site hey thanks for
71:12 - watching if you enjoyed the video please
71:14 - leave a like and subscribe

Cleaned transcript:

hey welcome to draft academy my name is mike in this course i'm going to teach you everything that you need to know to get started using gatsby js a gatsby js is a relatively new static site generator that's built on top of node.js and it uses react in order to help you build an awesome fast and scalable static website one of the things i love about gatsby is that you build your static sites using react and so you have all of the power modularity and scalability of react while still being able to generate static web pages which can be served extremely fast on your web server so you write all of your pages in react and you can access data and you can make your pages interactive and do all sorts of cool things and then you just generate a bunch of static pages and serve them up on your web server in this course we're going to talk about the basics so we're going to get into installing gatsby building your first gatsby site fleshing out all the pages on your site and then we're going to get a little more advanced so we're going to talk about making your pages interactive and we're going to look at how you can use graphql in order to access different types of data about your site so we're going to be able to access metadata about the site we'll be able to access information about the different files and we'll also be able to parse through markdown files on our site and display them in an awesome way so if you're looking for a static site generator you might want to consider using gatsby not only is it backed by the awesome power of react but it's also a new project which means it's constantly being added to and developed gatsby's not going anywhere and therefore you can feel safe investing some of your web infrastructure in it check out this draft academy course we're going to give you everything you need to know to get started and i'm excited to see what you guys learn in this tutorial i'm going to show you everything that you need to do to get gatsby up and running on your computer now one of the cool things about gatsby is the way you install it on windows and mac is actually the same so gatsby relies on this program called node.js so all we have to do is install node.js on your windows or our mac computer and then using node.js and something called the node package manager we can install gatsby and get it up and running and ready to go so if you already have node.js and the node package manager installed on your computer then all you have to do is just skip to the end of the video and you'll see the part where i actually install gatsby but if you don't have node.js installed on your computer i'm going to show you exactly how to do that right now so all you want to do is go over to this website here it's nodejs.org forward slash en forward slash download and there's three options here that we can click for our download windows mac or the source code so you just want to pick whichever operating you're whichever operating system you're on i'm on mac so i'm just going to click mac and once that's downloaded i'm just going to go over to my downloads folder and i'm just gonna double click on this and what this should do is open up this node.js installer so all we want to do here is just click continue and accept anything we need to accept and then we can install node.js on our computer so once that's done installing we want to check and just make sure that everything's installed correctly so i'm going to open up a terminal and i just want to type in the following code we're just going to type node dash dash version and that should spit out a version and then we can also type npm dash dash version and that should spit out another version so we're using node.js and then in order to install gatsby we're going to use npm which is the node package manager and that's basically just a program that we can use to install other programs so we're going to use it to install gatsby so once you've validated that node is installed correctly on your computer we just have to use this node package manager to install it so i'm just going to type npm install dash dash global and then i just want to type gatsby hyphen cli and that just stands for gatsby command line interface so this is how we're going to communicate with gatsby we're going to use this command line interface and we'll be able to give gatsby commands and tell it to do different things for us so i'm just going to click enter and this should go off and start installing everything that we need for gatsby and you can see here that it installed everything we needed and it's just a bunch of different files so in order to just validate that everything's installed correctly we can just type gatsby dash dash version and this should spit out a version of gatsby so as long as you can get that version to come out like this then gatsby is officially installed on your computer and you're ready to start building your first gatsby website in this tutorial we're going to talk about creating your first gatsby site so we're going to create our gatsby site and then we're going to look at some of the default folders and files that gatsby creates for us when we make that new site and then we're going to serve our site onto the internet and we'll be able to see our site running on our local server so let's get started this is going to be an awesome tutorial first thing i want to do to create my gatsby site is open up a new terminal window in my case i just have one down here in my text editor and in order to create our gatsby site we need to enter in some commands into this terminal so i just want to type gatsby new and now i want to type in the name of the website that i want to create so this will be like the name of your gatsby site my case will just do ga underscore site for draft academy site and now what we want to do is enter in the address of a project template that we can use so gatsby actually has a sort of like a hello world introductory project setup on github and all we have to do to access that is just type in this url so it's github.com forward slash gatsby js forward slash gatsby starter hello world so just enter this in after that um gatsby nuke or yeah that gatsby new command and we'll be able to get that gatsby starter project uh that we can use and that's what i'm gonna be using in this tutorial so i'm just going to click enter and gatsby should go out and basically go out to github get that project template and then start installing it onto our machine so this could take anywhere from like one to three minutes it really just depends but it's probably not going to be like super fast so that's done installing and for me it took about a minute for that to install everything that it needed to install and once that's done if we come up here into our file explorer you'll notice that i have this new folder that was created inside my documents folder called ga site so this is the folder that gatsby created for our project so i'm just going to open this up and i want to sort of talk you through what all of these different things are inside of here it might be a little intimidating if you haven't worked with something that looks like this before i do that though i just want to show you how we can actually build our site and see it online so the way that we can do that is by coming back down here into our terminal and i want to type the following commands well first off i just want to change directory into that new site and then i want to type npm run develop and what this is going to do is it's going to start up a gatsby development server on our local host that we can test our website out and sort of use it to develop so this is like mostly what you're going to be using when you're testing your site so that's finis running and you'll see that we get all these success messages i do just want to point out some of the stuff down here you'll notice that um this site is running it localhost 8000. so localhost is like a local web server that's on your computer so if we go over to localhost 8000 we should be able to see our website up and running and i just have this open here in my web browser so i'm just going to refresh and you'll see logos 8000 is now hosting our site it's a really simple site it just says hello world so this isn't like anything crazy but this is actually our site running and so any changes that we make to our site will show up here on this development server as long as that server is running so back over in the text editor again i just want to talk you guys through sort of the default files that you'll see now there are a couple things in here related to node.js and one of those things is this node modules folder and you'll notice if you click down in this folder there's like a bunch of other folders inside of here this is just something that's used for node.js you're really not going to have to worry about this too much now you're going to need it so you don't want to delete it but you know as far as like having to modify anything in there you probably most likely won't have to next we have this public folder and you'll notice that there's really not too much stuff here in this public folder and this public folder is basically the folder that represents like your finished static website so you'll see later in this course we can build our website which means we can compile all of the gatsby pages that we write together into our finished static site that we can set that we can then serve onto the web and all of your like static web pages and your finished static site is going to go inside of this public folder so this is basically just what our site would look like now and we could put these files on a web server and it would be our site the next folder is probably the most important folder and it's the folder that you're going to be using the most it's this source folder and this is where we're going to store all of the pages for our website so if you're building like a blog site you'd store all of your blog pages in here if you're building a normal website all again all your pages are going to go in here and you'll see we have this pages folder by default and then we have this index.js file now because gatsby is built on node.js and more specifically gatsby uses react.js all of our files are actually just going to be javascript files so the content files that we write and a lot of like the files we write for our components are going to be javascript you can also use other formats like markdown and stuff like that too but for now in this default structure we just have this pages folder and then we have this index.js file so really the source folder like i said is is the most important folder and it's going to it's going to be where you're spending most of your time there's also some other files down here this dot get ignore file this is just a file that's used with git and then we have these package.json files and this is another file that's used with nodejs and there will be a couple instances where we're going to have to modify this but for the most part the package.json file basically just manages all the dependencies and all sort of like the overall settings of your node.js app which is what we have right here so package.js package.json file is important but for like the normal use cases you probably won't have to touch it that much so like i said for the most part this source folder is going to be really important so that's a basic overview of the folder structure in gatsby and we also got our site up and running on that local host so now you're ready to go out and start adding content to your site and really start digging deep into gatsby in this tutorial we're going to talk about adding content to your gatsby files so basically we're just going to take that default index file that gatsby gives us and we're going to add in some different html elements so we're going to talk about how you can start building your pages so over here i just have this basic gatsby default layout and inside the source folder in pages we have this index.js file and if you look over here on my website i'm actually viewing this index file so this index.js file is like the root directory it's like the home page of our website and you'll see in here that there's a bunch of react code actually it's javascript but it's using react and so if this doesn't look super familiar to you it's actually um basically just using this framework called react js and you don't need to know too much about react to use gatsby but it does help to be like a little bit familiar with it but for now just know that like all this fancy code over here is um javascript and it's for this react framework what you can see here is we have a bunch of stuff that looks like html and and it's very similar to uh html and it works the same way so we just have this div and then inside of it we have hello world and what's cool is that by default gatsby is a hot reloading framework so if i make a change over here to this div it'll automatically get updated over here on our website so i can say like hello world it's me and when i save this page it automatically gets updated so without me having to refresh the browser it will automatically save over here so kind of makes it really easy for you to develop your site you know it really makes the development cycle a lot quicker you don't have to like go over and physically refresh the page every time whenever you make a change it's just automatically appearing over here so that's just like a little thing that makes gatsby pretty cool in addition to having like for example a div we could also have other html elements so i could put like a header in here right we could say like here's a header and then i could have maybe like a paragraph as well and when that loads up you'll see it loads up just like normal html now one thing that you need to keep in mind when you're writing content inside of these files is you can't have two html elements that are at the same level so if i was to come over here and create a paragraph and i created this paragraph um at the same level of this div so i have these are like what are called sibling elements when i save the page you'll notice that i get an error and that's because um it says you have adjacent jsx elements and so really although this looks like we're writing in html we're actually writing in a special javascript html like hybrid language called jsx and it's basically like a way that you can write html inside of a javascript file but one of the rules is that you can't have two sibling elements just like this so everything has to be wrapped inside of like a single element like if i put this inside of this div then this air should go away and it should just show up so that's just something to keep in mind when you're writing content inside of something like this and inside of this jsx we can also make some styling so i could like style this div and the way that we would style this would be style and then equals and then inside these double curly brackets we can put um some css so i could say like color and i could do a colon and then i need to put this inside of quotation marks but i could say like blue and now this will change all of the text to blue or i could change it to tomato and it would change it to tomato so you can use um css sort of in line just like this and if i wanted to add for example like another attribute here so i could say like background color we could set this equal to blue and it'll set the background to blue so you can add in different css stylings inside of these jsx elements just very similar to how you would in html if you're familiar with css then you'll notice that this is a little bit different but the same concepts apply another thing we could do would be link to an image so i could say like img and i just have this image of this cute cat because we're on the internet so i'll paste this in here and then we can just close off this image tag and now this image should show up in our website so yeah there's the image of the cat it's like way too big but you can see that it shows up nonetheless so that's kind of like the basics of you know adding in content into these uh javascript files and you can see that it's actually pretty easy and it's very similar to just writing normal html and so if you're not familiar with jsx and how that works and how it kind of um is used in react then you might want to look that up but for the most part you know as long as you're just writing normal html you're pretty much safe and it's probably going to work like 90 of the time but yeah so that's kind of the basics of adding content to these files and any of these js files that we store over here in this pages folder you can basically do this with so you can just put all your sort of html text and html tags over here and it'll just display on the website normally in this tutorial we're going to talk about linking between the pages on our website in gatsby so up to this point in the tutorial we just have this one page which is index.js but in any good website you're going to have more than one page so eventually you're going to want to be able to link between the different pages on your website so i'm going to show you exactly how to do that the first thing we want to do if we're going to link between pages on our site is we want to go up here and we want to add in another import statement so i'm just going to say import and instead of saying react we'll say link from and then inside of uh quotation marks we're just going to type gatsby hyphen link what this is going to do is it's going to allow us to use a react component and that react component is called link and basically all you need to know is that we can use the link component or the link tag in order to create a link between the pages on our site so i want to come down here into this html and i'm just going to use this link tag so now that we imported it we can use a tag called link and then i'm going to say link to and then i need i want to type the address of the page that i want to link to if you're familiar with normal html then you'll know about the like a normal link which is just the a tag and normally we would just type like a and then href and then inside of here we would put the path of the page that we wanted to visit but since this is gatsby and since we're using react we have to do it this way so we can use this link and then inside here i'm just going to put um this will link to like page two and then i can put some text in here so we'll say like page two and then we can close off this link just like that so what this will do is create a link to page two on our website so now if i head over here you'll see that we have this link and when i click this link you'll notice that we get this development 404 page so basically 404 page not found right this page isn't on our website and that's kind of a problem so let's come over here into this pages folder and we'll make a new file and i'm just going to call it page hyphen 2 dot js so this is going to be another javascript file and i want to just actually i'm just going to go back here we don't get this red screen of death i want to come over here to this index and i'm just going to copy all of the code from in here and i'll just paste it into this new page that way we don't have to write it out we can just have it and i'm just going to get rid of some of this stuff and on this new page we'll just say that this is page 2. and so now our link should actually work so when i click this page to link it'll bring me to this page on our website you'll see that it does another thing we could do would be create another link on this page and we'll link back to the home page so i'm gonna copy the link that we have over here and i'll bring it here into page two and now instead of linking to page two we can just link to the home page which is just a forward slash and we can say go home so now we have this go home link and we can link back to the home page so these links are now operational and we can link between the pages on our site so you could i mean if you created like a bunch of different pages on your site then you could create the links for them another thing i want to point out is we can also put pages inside of sub directories so if i created a folder let's call this folder der1 and inside of dir 1 we'll make a new file and we'll just call it page hyphen 3 and that's going to be another javascript file and again i'm just going to copy this code and we'll put it inside of page 3. and so from the home page now we can also in addition to linking to page two we can link to page three except now when we put our path we're going to want to put dir one forward slash page three and this should link us to page three so you know organizing your content inside of this pages directory is something that you wanna you know actually do and really the pages directory is kind of like the root directory of your web server and so you know index.js and page two are both at the root directory right and then page three is inside of this subdirectory dur one so you really wanna pay attention to how you're ordering your content and that's kind of how you can do it in gatsby in this tutorial we're going to talk about making your gatsby pages interactive one of the cool things about gatsby is it's built using this framework called react.js and react.js was built by facebook and so you know it's like a powerhouse framework one of the cool things about react is that it allows us to make our websites really interactive so the user can actually like interact with the website and the website will respond to the user and i'm going to show you how we can build a page that just implements like a simple little counter so you'll press like a plus button and the counter will increment and then you'll plus you'll press a minus button and the counter will decrement so the first thing i want to do is come over here into this pages folder and i'm going to create a new file we're just going to call this counter.js so inside of this counter file we are going to make our counter and then in our index file i just want to create a link so that we can easily get to this counter page and so this will just link us to the counter so actually i'm gonna put a break in here so now when we click this link it'll bring us over to our counter page now there is some like default code that i want to put inside this counter.js file and i'm just going to paste it in and then i'm going to explain what the code is doing and then you can just copy it in on your own and that way you can practice kind of like writing this stuff out so you'll notice i just pasted in a bunch of code and this code actually looks a little bit different than the code that we had in our index.js file and that's because this code is different so again this is just javascript code and it's a code that's for the react framework and i'll just kind of walk you through what's in here so up here we're just importing react and now we're creating a class called counter and it's extending the react dot component so basically this is going to be a react component which is basically just like a little component inside of react that can do certain things so and then we have this render function right here and basically anything that goes inside of this render function is going to get displayed on the page and so here we're returning all of the stuff that's going to get displayed so we're just returning whatever is in here and so inside of this class we can put a bunch of code that's gonna help to make our react component dynamic so it'll help to make our page dynamic and so now on this counter page we just have basically just a div that says that it's the class component and now i want to start adding in some code so the first thing i'm going to do is add in some uh html elements and this will kind of like be the setup for our counter so inside of these divs i'm just gonna paste in this code and you'll notice here we have a bunch of code so we have a header that says counter we have a paragraph that says the current count which is zero and then we have two buttons a plus button and a minus button so eventually what we want to happen is when the user clicks this plus button we want this counter to increment and when the user clicks this minus button we want the counter to decrement so over here on our page we just have the plus and minus buttons and you'll notice that nothing happens right now but all we have to do is just add in a little bit of logic into this react class into this gatsby class and it'll start working so the first thing i'm going to do is add in what's called a constructor so up here i'm just going to paste in some more code so it's going to look like this and actually this isn't formatted very well but this is a constructor function so basically what this is doing is that this gets called whenever we create this class or whenever we like reload the page and it's setting this variable called state and so state is a variable that basically represents the state of the component and i'm not going to get too much into what state does but for all you need to know for now is just that inside of this state variable we can store a variable called count so basically we can store the current count inside of this state object so we can store the count right there and then i also want to add in some other code and it's actually going to go in the counter and so i'm just going to put this right here and you'll notice that now instead of just having 0 here when we're trying to access the current count we have something that says this dot state dot count what this is doing is it's accessing this state variable up here so basically instead of just displaying 0 we want to display the value of the count inside of the state and then there's one more thing we need to do which is get the buttons working right in other words we want something to happen when we click the buttons because right now when we click these buttons nothing happens right if i click the plus button and the minus button the count just stays where it is so what we need to do is add in a little function in here to this button tag and again i'm just going to paste it in and then i'll show you what it's doing so what it looks like here is we have button and then it says on click equals and then we have these open curly brackets and then two parenthesis and what we're doing here is we're setting the state so it says this dot set state and then inside of here it just says count and so basically what this is doing is it's decrementing the counter right so it's subtracting one from the counter and actually i think i could probably format this a little bit better so you guys can see it right so this is basically just what it's going to look like right here and actually this should be the minus button because we're decrementing so then i can take this same type of code and use it for the plus button but instead of decrementing it so instead of subtracting one over here we can just add one so i'm gonna do the same thing and i'm just gonna paste it in here and so now when i refresh this page what should happen is when i click the minus button the current couch should decrement and when i click the plus button the current account should increment and you'll see i'm clicking the plus button and the counter is incrementing and i'm clicking the minus button and it's decrementing so that's kind of how you can make your pages dynamic and so basically i'm just using this on click function down here and it's setting the state variable which we set up here in the constructor and it's either incrementing that count or it's decrementing that count and that's kind of how yeah that's one way that you can make your pages interactive obviously the more you learn about react.js the more you'll be able to use these react components to make your website more interactive and more dynamic in this tutorial i'm going to show you how you can build your gatsby website so let's say that you have a bunch of different files and folders and resources on your website and now you want to serve it up on a web server right well how can we access all of those files in other words up until now we've been testing our website on this local host development server but what happens when you want to take those files and put them up on a server of your own well we can actually use a build command in order to build our gatsby website so basically we can execute a certain command and then gatsby will go out and build all of our pages together into static pages that we can then copy and paste or ftp or whatever over onto our web server so i'm just going to show you how to do that really quick so i just want to cd into my directory and once i'm inside of my project directory i can run a simple command which is just npm run build and basically this is just going to tell gatsby like hey we want to build our site so i'm going to click enter and this is going to go off and do a bunch of stuff it's going to build up our entire website so once that's done building i want to head over to my file tree you'll see here we have this folder called public and this is where gatsby spit out all of our static files so inside of this public folder i'm going to open it up and you'll notice that there's a bunch of files and there's a bunch of like javascript files in here and stuff like that but basically this is our entire site so there's actually a lot of these different files and that's kind of what it's going to be like but you'll also notice up here we have like directory one and then there's this page three and page 2 and there's this static folder and this counter folder so this is actually all of the resources that we need to include on our web server if we want to run our site so all i would have to do would be like copy and paste this stuff onto my web server and it would start working or you could serve up all of this stuff using like some sort of a deployment app like netlifier or something like that but basically all you need to know is that this public folder has all the files that you need for your website so anytime that you make a change to your website and you want to regenerate the files you can actually just run that npm run build command again and it'll build all these files and it'll sort of like overwrite overwrite the public folder and do everything that you need it to do inside of there in this tutorial i'm just going to give you a quick overview of using components in react now i could make an entire course just talking about using components in react and if you're not familiar with how react works and how components work then this will just kind of give you a brief overview of how these components work and really just sort of help you to wrap your mind around what we're doing here so a component in react is basically just a collection of jsx or a collection of html that has maybe some styling maybe some logic and it's sort of contained in this one class or this one container and what we can do then is import that into other files on our website and sort of use it and the best way for me to explain this is just to kind of show you so earlier in this tutorial we created this counter.js class and if i go over here my website i can click and you'll see this is the counter and basically all it does is just increments and decrements a counter when you click these buttons now this is what's called a react component and so you'll notice that the whole component is just this thing right here and it has some some of this jsx some of this html style stuff in here right and then it also has this constructor function up here and it has these functions like this on click function inside of this button so there's a lot going on inside of this component now imagine that i wanted to take this counter and i wanted to insert it on another page in my website right so here on the home page how about instead of just linking to counter so instead of just having this counter link imagine i wanted to actually physically put the counter on the page well the way that we can do that is by inserting our component or including our component inside of our index file and i'll show you how we can do that first thing we want to do is come up here and i'm just going to type import and then i want to type the name of the react component that i want to import so in our case it's going to be counter and then i'm going to say from and here we just want to put the path to the file and this is going to be the path of the file starting at the root directory of our website so it's going to be dot slash and then it's just called counter dot js and actually i don't think we need the js so we've imported this counter and now we can actually use it so i can come down here in my jsx and let's say that instead of just linking we want to now actually include the counter so i'll get rid of this and i'm going to add in this counter tag so this is the name of the component so we're going to refer to it just like this and then i can just do a forward slash and we'll close off this tag and so now when we save this page the counter shows up over here and so instead of just having that counter on its own page right so if we go over to this counter page the counter is here but now we can just include that counter on our own page and that's basically how you're going to be building your pages using in in gatsby right you want to be using these components and it takes a little while to kind of get used to using these components but it's a really great way to develop and that's basically the whole point of react is to break up your website into these different components now there's another thing that you can do with these react components and you can actually pass them information so in here i could pass this counter for example like a color so i could say color is equal to and we'll just pass in blue and i can actually access this color variable from inside my component so i'm here in my counter component and if i wanted to access the color i could basically just type out something like this so i can do open and close curly brackets and then i can type this dot props and then i want to type the name of the variable that we passed in so it's just going to be color in our case and this will print out the color so over here you can see it's printing out blue and i can actually use this color to style this component so i could come up here to this div and we could make a style and then inside these style tags i could say color and i could set it equal to this.props.color so now this component is going to be colored blue what's cool is i can change the color of this from in this file so if i wanted to make this like green for example i could just pass in green and now the counter is going to be green so that's kind of how you can use these components to make your website more powerful and obviously you can create more than just a counter so i could create you know a couple dozen of these components and add them in on my website like i could create a component for like a navigation list i could create a component for the header of my website i could create a component for a button really doesn't matter you can create components for anything and then you can sort of just use them on your web pages in order to build your user interface in this tutorial i want to talk to you about using plugins in gatsby one of the cool things about gatsby is it allows you to install and use external plugins inside of your project and these external plugins can do a bunch of cool things they can add elements to your website or they can make your website more powerful so you definitely want to consider using plugins if you're building a gatsby site i'm over here in my web browser on this page right here it's gatsby js.org forward slash docs forward slash plugins and this is sort of like the official plugins page for gatsby and so if we just scroll down on this page you'll see there's this huge list of official gatsby plugins that you can use and a lot of these plugins were just developed by gatsby and there's also a bunch of plugins that were developed by the community and these plugins do a wide variety of things you know all sorts of stuff and they can really just make your website a lot more powerful so what you should do is just kind of click through these plugins and see if any catch your eye see if any you know you might be useful on your website for example here's one for google analytics and for a lot of these um plugins the ones that are official plugins there's like a they have their own page on gatsby's website so you'll see like this plugin has its own page and there's like installation instructions and it tells you how to use them a lot of these plugins will require like a little bit of configuration to really get them going and then a lot of these community plugins will just link you to a github page and you can you know same thing just read the readme.markdown file and they give you the installation instructions and stuff like that so i want to talk to you in this video about you know in downloading and installing your own plugin and in this video we're actually going to install a plugin for typography.js and typography.js is like a css framework that we can use inside of our website to kind of just make it look better and style it a little bit better by default so imagine something like bootstrap which you know styles your website that's kind of like the plugin that we're going to be using so the way that you install these plugins and the first thing you always have to do is install the plugin using the node package manager so i'm just going to go down in my terminal and i'm just going to type out the following command i'm just going to type npm install dash dash save and the plugin that i'm going to be installing is this gatsby plugin typography and what this will do is it'll install everything we need to run that typography.js on our gatsby website so i'm just going to click enter and node package manager will go out and do its thing and get everything it needs to run typography once that's finished running and you get a success then there's one more thing that we have to do which is we basically just have to tell gatsby that we want to use that plugin so we have to let gatsby know like hey we installed this plugin and we want to use it on our website the way we can do that is by telling gatsby inside of this gatsbyconfig.js file now this isn't a file that's going to be inside of your directory by default and so you want to create this file you want to create this file at the root directory of your site so in my case it would be inside of this ga site folder so this gatsby config file should be you know in the same directory as the source folder in the public folder inside of this gatsby config.js file we want to type a few things the first thing we're just going to type is module dot exports and this is going to be equal to two curly brackets and then inside of here i just wanna make an array so it's gonna be plugins and inside of this plugins array we're just gonna type out all the plugins that we wanna use so in my case i'm using the gatsby plugin typography once you have this in here basically this is just telling gatsby like hey we want to use this plugin and this gatsby's going to read this config file every time it builds your site so what we want to do is just restart our website so restart our web server and i just have it running down here so i'm just going to gatsby develop and we'll restart our web server and actually i think i spelled module wrong yes that's why that's not working so now that that's finished running i want to go over to my website and right here you'll notice that the text has actually changed style so before the text was like not really styled very well and now it actually looks pretty good and so what actually happened was this typography plugin got used by gatsby and it changed the way that our text looked right so the typography is like a css framework so it's changing the look and the feel of our site and if i inspect this page and i go up here in the head of our website you'll see that there's this new element here it's this style tag and it says id is typography.js and so actually what happened was gatsby used that typography plugin to add this typography code inside of our gatsby site so all we had to do was just configure the plugin and our website is automatically styled with this cool typography theme so you know what you should do is go over to this plugins website and play around with different plugins you know see how they work on your website see if you like them see if you don't like them and you know just basically use them to make your site better any way that you can in this tutorial i want to talk to you about using the layouts in gatsby layouts are basically special types of files that will act as a template for all the pages on our website so imagine there was a scenario where we were creating a website and for every single page on the website we wanted to have like the same layout right so on every page we wanted to have the same header and we wanted to have the same footer maybe we wanted to have like the same navigational list and we wanted it to be the same for all the pages on our website now one way we could do that would just be to copy and paste that header footer code onto every single page in our website right so if we had 100 pages we would copy and paste it a hundred times onto all those pages but a better way to do that would be to just define some overall layout for our site and then have all the pages on our site inherit from that layout so all the pages on our site would use that layout as their template or as their skeleton of html code and then they could just whatever content is inside that given page would just be inserted inside that layout so i'm going to show you how to build layouts inside of gatsby the way that we do that is by first coming over to this source folder and i want to create a new folder inside of here and i'm just going to call it layouts and then inside of this layouts folder we can create a new file and we'll just call this index.js and index.js is going to be the default layout that all of the pages on our site are going to use so in here i'm just going to paste in some code and i'll talk about what we have here so i just have import react from react and then export default and then you need this parentheses with curly brackets inside and children and then here we have the actual layout of our website so as long as you have something that looks like this then you should be able to implement this layout now there's this special tag right here it's children it's basically like a children function that it's calling and it's inside of these curly brackets and what this will represent is the content of the page that we're currently on so just to demonstrate this i will type out some text so we're going to say layout and we'll say layout and when i go over to my website and actually before we do that whenever you make a new layout you need to restart your development server so i'm going to restart my gatsby server just like that and once that's done restarting when i refresh this page you'll notice that now instead of just having hello world and this is a paragraph we have these layouts up here and so layout is surrounding the content of my page and i actually have a couple other pages here i also have page two and i have a page three so if i go over to forward slash page two it's the same thing so on this page too it's using the same layout that our home page used and if i go to page three it's the same thing so page three is also using this layout so by default all the pages on our website are going to be using this layout and these layouts are awesome because over here for example i could define like a header for my page and this will just be a really simple header and then i can also define like a footer down here and that header and that footer are going to show up on every single page inside of our website so this makes it really easy to define a layout for all the pages on your site so you could have your header up here and your footer down there and whenever you want to change the way that the header or the footer looks you only have to change it right here on this layouts page or on this index file inside the layouts folder you don't have to change it on any of the other pages and that just makes your site more modular and more scalable so play around with these layouts and you know you can basically just structure your whole site inside of this layout and then all of your content will just get injected into the layout from this children function in this tutorial i'm going to talk to you about using data in gatsby and this is just going to be like a quick introduction into how we can store some external data about our website and then access that data inside of our pages so imagine that i wanted to store some information about my site maybe i wanted to store like the title of my website and the author of the website and i wanted to be able to access that information inside of multiple pages on my site well one way i could do that would be to just write out that information in each one of my pages so i could create a header and each page and put in the site title right but here's the problem if i want to then change that title i would have to go through to every single page on my site and manually change the title i'd have to do some sort of like a find replace and that could be really messy and it could be potentially dangerous if not everything is like spelled the same or whatever an easier way would just be to store the title of my website inside of a variable somewhere and then have all of my pages fetch that data and use that variable right that way if i wanted to change the title i would only have to change it in one spot and it would automatically update on all the pages in my site so in this tutorial i'm going to show you how you can do something exactly like that in gatsby we want to open up this gatsby config javascript file and if you don't have this file it's located at the root directory of your project so in my case it's right here in this ga site folder and if you don't have it you can just create it so this is basically like the main settings configuration for our gatsby app so in here you can put all sorts of important things that will help gatsby to configure itself and to just do what it has to do so inside of this module.exports function and or object you want to add this in we're going to put a an attribute it's going to be called site metadata and this is going to be an object and inside of this site metadata object we can put any variables that we want to access about our site so i could put like title and we could give our website a title so we could say like draft academy's website i could also give this something maybe like an author and we can just say the author's me mike so obviously this is just some very simple data but i'm storing it about my website now what i can do is i can configure each one of my pages to go out and grab this information and so my pages will be able to display the website title and the website author and if i ever want to change those i only have to change them in this config file i don't have to touch the pages that are pulling this data so i'm going to head over to one of my pages we'll just go to index.js this is the home page and in here what i want to do is make some simple modifications which will allow me to grab the data that is coming from this gatsbyconfig.js file so the first thing i want to do is add what's called a graphql query and graphql is a querying language that was developed by facebook and it was designed to be used with react and basically you can use graphql in order to grab information from external sources in our case we are grabbing information from this gatsby config.js file so graphql is a querying language a lot like sql if you've ever used sql before we can use graphql to write queries to get information and that's what i'm going to do down here i actually have some code that i'm going to paste in here and then i'm going to explain what it does so this code that i just pasted in is actually a graphql query and what this is doing is it's going out to that config file and it's grabbing the title and the author so you can see it's just export const query is equal to graphql and then we have this single quote and then there's another single quote down here and then we have the query which is just the name of the query up here and then we want to grab information about the site and the site metadata and the title and the author so what you want to do is just paste this down into your file so any files that you want to access the site metadata you want to paste one of these graphed ql queries into there and as long as you have this graphql query in here we'll actually be able to access the information that's inside the site metadata so once you have this query inside of your file you want to come up here and i'm here at this export default and inside of these parentheses you just want to put two curly brackets and we're just going to type out data and what this is going to do is it's going to inject the data from this query into our jsx and so now we can actually access the data from the query inside of our jsx code here so if i wanted to do that i could just come over here and we could actually print out either the website title or the author so why don't we do that inside of this header one instead of saying hello world why don't we print out the title of the website so inside of some curly brackets i'm just going to type out data dot site dot site metadata and then i want to type out the name of the variable that i want to access the name of the attribute that i want to access so it's just going to be title so if i save this page and just a quick note whenever you modify your gatsby config file you have to restart your gatsby development servers and you can see that the text over here is updated so now instead of saying hello world it says draft academy's website and i can also access the author so let's put the author down here in this paragraph we'll just say and now we should be able to see the author of the page which is mike so basically what we did was we stored information about our website some global variables inside of this config gatsby file so we stored a title and an author and then we were able to access that title and that author by running this graphql query okay and then that graphql query grabbed the data for us and injected it into our react function here and then we were able to access them inside of the jsx so that's sort of the flow of the data there's one more thing i want to show you which is a really cool feature that we can use with gatsby which is called graft iql and graph iql is something that i have open right here and the way you access it is by going to logo host 8000 forward slash three underscores and then graphql and you actually don't need this query part right here and this is a sort of a user interface a gui for testing out graphql queries so inside of here you could test out and write different queries that you might be writing obviously the query that we wrote over here this is a pretty simple query but if you have more complex queries then you're going to want to be able to test them out so if i wanted to i could actually test out a query here so i could say like we could test out the query that we're writing on this page so i could say site and then site metadata and then inside of here i could try to access the title and the author and you'll notice what i wrote here is basically just what i have down here so i'm testing out this query and then i can run it and we'll see what returns back so without actually putting this inside my website i can test out the query and make sure that i'm getting the correct data back so this graft iql feature of gatsby can be really useful for helping you to test out your queries and really just supercharging your workflow in this tutorial i want to talk to you about using data in gatsby now in the last tutorial if you're following along with the course we looked at grabbing data about the site so inside of our gatsbyconfig.js file we had this site metadata in here and we stored two values about our website title and author and then on this index.js page we ran a graphql query and then we were able to access that information from inside of our jsx so over here we have this website that's pulling the title of the website and it's pulling the author of the website this is a great way to use data and store data about your website but it's kind of limited right in other words you're only able to pull the data that you can store inside of this site metadata object so using gatsby we can actually access other types of data and one type of data that we can access is data about the files in our website so one thing that you might be curious if you're building a website is what are the other pages like how can we get information about all of the pages on our site in this tutorial i'm going to show you exactly how you can do that we'll be able to use graphql queries to figure out information about the different pages on our site therefore using that you can build things like directories or you can figure out you know what pages are in what directories and what pages are doing what it's really powerful so the first thing we want to do in order to do something like that is we need to install a gatsby plugin and this plugin is called gatsby source file system and basically what this plugin is going to do is it's going to allow us to access information about our file system so i'm just going to paste this in down here into my terminal and you can go ahead and copy this it's just npm install dash dash save gatsby hyphen source hyphen file system so we want to run that and we're going to let node package manager install that onto our computer once that's installed now we just have to tell gatsby about it so i'm going to come over here into my gatsby config.js file and inside of here i want to create a new attribute in here and you might already have something like this but it's going to be plugins and so it's just going to say plugins colon and then this is going to be an array and so this is just an array of the different plugins on our site and i want to add in the plugin that we just installed so you want to put this code in here and it's basically just saying that we want to use the gatsby source file system and then we're passing it some different options so we're passing it the name is source and then we're passing it the directory name forward slash source so this is basically just telling gatsby where all of the files on our website are located and then it can go there and you know figure out what we have available once you update your gatsby config js file you want to restart your development server so i'm just going to do that and now that this is restarted we can actually start using this gatsby source file system so i'm going to come over here into my web browser and i'm going to open up this graftql url so it's localhost 80 or 8000 forward slash three underscores and then graph ql and this is called graph iql and it's basically just a user interface for uh running graphql queries so we can test out graphql queries inside of here what i want to type out is just open and close curly brackets and if you type in um like start typing in a then you should see this all file attribute should come up and if you type in f you should see that file come up comes up so this file and this all file these both have to do with the sort that with the plugin that we just installed and so because we installed that plugin we're now able to see these two guys so i'm just going to click on all file and then what you can actually do is just click if you're on a mac you can click command enter if you're on windows you can click control enter and that's going to automatically fill out this query for us and so you can see it's all file edges node and then right here we're looking at id so right now what we're doing is this query is grabbing the id of all the pages on our website so if we look over here you can see that it's pretty much doing that so the id is basically just the path so we have this index.js file we have this counter.js file we have this other index.js file this page to file and page three and those are all the pages that i have over here on my website so this is just looping through the file system for my website and just printing it out and in addition to printing out the id so you can print out id here and you can also print out a bunch of other stuff so if you just click control space then this will give you an option for it'll give you like a drop down with all the the the options so we could search for the parent children pages internal source instance name absolute path relative path extension so why don't we search for extension and we'll search for relative path so this will give us the extension of all the files and the relative path of all the files and i'll run this query and you can see that most of these are like js files and then we have the relative paths for all the pages so a query like this can be really useful because not only does it allow us to loop through all the pages on our site but it allows us to access different information about all the pages on our site like you can see we have all these things here so if you were building like a breadcrumbs navigation for example you could use this parent or this children attribute in order to do that you can use these absolute and relative paths to build links so you can build like a table of contents or something like that so using these all file queries is a really great way to you know make your website more powerful so i'm actually going to give you a demonstration of building something like a navigation list i'm going to go over here to my index.js file and this is just like the home page of my website and i'm going to be kind of pasting some different code in here so you can just kind of follow along with what i'm doing and then sort of implement your own version of this so the first thing i want to do is just make sure that i have this data attribute set up here so i want to pass the data into my website and i'm just going to get rid of these two guys and i want to change up this query so right now this query is accessing the title and the author of the site metadata but we want to change it up so we actually want it to be the query that or similar to the query that we ran over here and the query i'm going to be using is going to look like this so i'm just going to paste this in and you can see it's just what we did over there in that eye in that graphql but now we're accessing relative path pretty size extension and birth time so this will give us some interesting information about all the pages on our site and then up here in our jsx we can actually grab that information and use it so once again i'm just going to be pasting some code in here and i'm going to go ahead and do that and basically what i pasted was a table and this is just a basic sort of jsx table up here i have the table head and we have these table headers which are basically just displaying all of those attributes and then inside the table i'm accessing all of these attributes so i'm actually what i'm doing is i'm looping through the results of the all files query so that all files query if we look over here on the graphql you'll notice that it returned an array so returned in an array of all the different pages on our website so what i'm doing over here is i'm looping through all of the elements in that array and i'm mapping them to basically table rows so rolls row rows in the table so each one of these like no dot relative path each time through the loop that's going to represent a different relative path of a different page on the website so if i save this file and i head back over here to my normal website you'll notice that we have a table that's just listing out all of the pages in our website and this isn't formatted perfectly but you kind of get the idea right it's giving the relative path of each of the pages on our website the extension how long ago it was made and then the pretty size so basically like how big the file is and this is just one example of being able to loop through all of these pages so when you're able to access all of this information about the pages on your file system it really makes it a lot easier to build out certain navigational elements of your website and also just to have information about the different pages on your website in this tutorial i want to talk to you about accessing markdown data in gatsby now if you've been following along with this course you'll know that we've been learning how to grab data and bring it into our gatsby files so i can go out and i can grab information about the gatsby website and i can also get information about the overall file system that we're using so if you look over here on this page right here i'm basically have a table that's listing out all of the pages that are inside of my website but here's a question like imagine that instead of just listing out pages you actually wanted to access information inside of those pages so this is all information about the pages right we have the relative path the size the extension when it was created but this isn't actually giving us it's only giving us information about the page it's not giving us like what's inside of the page itself and if you're trying to build like a blog or something and or especially if you're trying to work with markdown you're going to want to be able to access more information about the page you're going to want to be able to like figure out okay what information is actually inside of these markdown files that i'm creating and be able to use that information to display those pages better so in order to do that we need to actually install another plugin and before i install the plugin i just want to make a new markdown file so inside of my pages directory i'm just going to make a markdown file called my first post and this will just sort of represent like a markdown file post that we can access and inside of this post i want to start by writing something called front matter and front matter is basically information that you can write about the different pages or the different markdown pages on your website so up here in between these three dashes i can actually write some variables so i could define a title and we can just say that this is like my and then i could also define something else like an author so i could you know define like who's writing this so you could just say it's me so this is called front matter and this is basically just data that you're defining about the data in this file so it's metadata and then we can just put some content so this is the content in my markdown so what i want to be able to do is run a query to be able to access this markdown and first thing i'll point out is if you notice over here the table that we're looking at here is actually updated and so now it's including my first post out markdown and over here i'm using the source file system plugin in order to display this stuff and so automatically when i create this new markdown file it gets added into our table here but instead of just being able to figure out that we have a markdown file i actually want to be able to access the information inside of this file so i want to be able to access the actual markdown content right here and then i want to be able to access these front matter variables up here and if i can do that then i can create a listing on my page that will list out all of these files or all these markdown files and the way that i do that is opening up my terminal and i actually want to install something and this is going to be a another gatsby plugin and i'm just going to paste this down here and you'll notice it's just npm install dash dash save gatsby transformer remark so this is going to be a plugin that's going to allow us to do some stuff with those markdown files i'm just going to click enter and npm is going to go off and do its thing and once that's done running we can actually go over to our gatsby config file and tell gatsby that we want to use it so over in this gatsby config file down here inside of this plugins array i'm just going to add another entry and we're just going to type out the name of the plugin that we just downloaded so it's just going to be gatsby transformer remark just like that so once we have that in here i just want to restart my gatsby development server and now that this is running i want to head over to this graph iql user interface and we can start trying to access the information in this markdown file since you just added that new plugin we should now have access to a couple new attributes inside of this graphql and you want to just start typing out all and what you should see is all markdown remark and you can also just start typing markdown and you'll see that these two new options have appeared so markdown remark and all markdown remark and these are now things that we can use to query the markdown files in our file system so i'm just going to do all markdown remark and i'm just going to click control enter or command enter and this will start up a default query for us so this is just going to query through all of the markdown files on our site so if i play this query you'll notice over here we have the basically like the id of the path so it's just pages myfirstpost.markdown and if i added in some other markdown files then more entries would show up here so let's do that let's add another markdown file we'll just call it markdown two i can give this some front matter as well so we'll just give this a title so over here now when i replay this the new markdown file should show up and so here we have that markdown 2 file showing up in addition to just accessing the id there's also a lot of other things we can access so if you click control space then this list is going to pop up and this will give you everything that you can access about the markdown file so one cool thing is this html right here and this html will basically just spit out the actual html of the markdown file so you can use this html attribute in order to insert the content of the markdown file into one of your web pages we can also access that information that was inside of the front matter so if i just type out front matter you'll notice by default it's trying to query for date and parent but since we only have title we want to just query for the title and you'll notice that it's giving us the title of both of these uh front matter or both of these markdown pages so you can use these markdown queries in order to access information about the markdown files that are in your site hey thanks for watching if you enjoyed the video please leave a like and subscribe
