With timestamps:

00:00 - in this course you'll learn the basics
00:01 - of gdau for game development this course
00:05 - is perfect for Unity developers
00:07 - transitioning to gdau but it will also
00:10 - help people who are new to game
00:11 - development in General Omar Zaki teaches
00:14 - this course he is an experienced game
00:17 - developer and has created many popular
00:19 - good old courses you'll learn how to
00:22 - navigate the interface and build a
00:24 - simple Flappy Bird
00:26 - game hi my name is Omar and I assume
00:30 - most of you guys at least close to the
00:32 - update of this video are here because of
00:35 - unity um a lot of you guys are quitting
00:37 - unity and have decided to pick up gdau
00:40 - and so I have made this video lengthy
00:43 - video it's about an hour long to help
00:45 - you transition into gdau this video is
00:49 - not how to become a game developer it
00:53 - does cover some basic topics of game
00:56 - development however this video is mainly
01:00 - focused on introducing you to the gdau
01:03 - engine not GDOT whatever they say it is
01:06 - gdau um so I hope you enjoy and I hope
01:10 - you learn as much as possible from this
01:11 - video this video definitely will not
01:14 - cover most the nodes it is mainly just
01:17 - how to navigate the interface of gdau
01:20 - and how to actually get started on your
01:22 - project hopefully um your transition
01:25 - from Unity to gdau is not too brutal or
01:28 - if you're not even transitioning your
01:30 - just picking up gdau and want to learn
01:32 - game development this is the right place
01:34 - for you this again is a complete
01:36 - beginner video just how to pick up gdau
01:39 - so I hope you guys enjoy this video and
01:42 - I will see you at the end of the video
01:44 - our first step is going to be to get
01:46 - familiar with the gdau engine and
01:49 - actually making sure we have all the
01:50 - assets we need so here we have our
01:53 - Flappy Bird assets and we also have the
01:54 - goo engine uh executable file so here
01:59 - here was my Z file for that I'm going to
02:01 - delete that I'm going to extract this we
02:05 - have our file here I'm going to delete
02:07 - this we're going to launch the gdau
02:09 - executable we're going to create a new
02:12 - project I'm going to browse it and put
02:14 - it in my
02:16 - desktop going to name this fory
02:20 - bird YouTube
02:23 - tutorial here on the left we have three
02:26 - different kind of renderers now for 2D
02:29 - usually I use compatibility for 3D you
02:32 - would most likely want to use forward
02:34 - and mobile is well for mobile for very
02:37 - less Advanced 3D Graphics um as you can
02:39 - see there's a little uh description of
02:41 - what everything does so let's select
02:44 - none for the Version Control because I'm
02:46 - not going to put this on GitHub I'm
02:48 - going to now create folder because we
02:50 - see here it gives me an error and is
02:51 - telling me to create a folder now I can
02:55 - create an
02:56 - edit and here we have our fresh project
02:59 - project now let's take a look at our
03:02 - interface here on the left we see we
03:05 - have the file system this is where all
03:07 - the files that we create with scripts
03:10 - and scenes and anything else will appear
03:13 - this is also where we will be importing
03:16 - our file soon on the top left we see
03:20 - create node now this will change in a
03:22 - bit however this is where the node
03:25 - structure will generally be this is
03:27 - where I edit and change my scene we can
03:31 - also see the import tab is also on the
03:33 - top left and we have a few other uh
03:36 - settings on the top above that now in
03:39 - the middle as we can see a giant screen
03:42 - we see the project tab this is where we
03:47 - see the actual scene and on the top
03:49 - right above that we can actually change
03:51 - it to 2D now on the right hand side we
03:54 - have inspector node and history this is
03:58 - the inspector but it's also Al the
04:00 - property panel usually so when I change
04:02 - a node or an object in my game the
04:06 - properties will be on the right hand
04:08 - side on the bottom we have a bunch of
04:11 - other useful things as such as output
04:14 - debugger audio animation and Shader
04:18 - editor there's going to be a few other
04:20 - things that might pop up depending on
04:22 - what node you're using for example tile
04:25 - map or tile set can add an extra thing
04:28 - which we will be doing in this
04:30 - video output is usually for things like
04:33 - print which we will also be looking at
04:35 - in a bit all right so at this point we
04:38 - want to actually import all our assets
04:41 - so we're going to minimize the screen
04:44 - like this and we're going to find our
04:46 - folder so here is our Flappy Bird folder
04:49 - assets all we have to do it's really
04:51 - easy we just take it and drag it into
04:54 - our screen if we make sure we select
04:58 - this drag it and put it into our folder
05:01 - it's going to say res we just drag and
05:03 - drop it and it should import now we
05:07 - might instantly see a problem now the
05:10 - first problem we
05:11 - see I'm going to drag one of these
05:14 - pictures onto my screen it's going to
05:16 - turn into a Sprite on the top left here
05:20 - we see the icon for the Sprite and if I
05:22 - select it by clicking it on the right we
05:26 - see that it says Sprite 2D now if if I
05:29 - zoom in we can see it's kind of blurred
05:33 - so in order to fix this we have to
05:36 - change the properties of this now what
05:40 - we can do I
05:41 - believe in texture sorry here we go in
05:45 - the texture property we will go to the
05:48 - filter and select nearest now if I zoom
05:53 - in we can see it has become
05:55 - pixelated however I don't want to do
05:58 - this every time I import and or add a
06:01 - Sprite so we're going to set the default
06:04 - now here by default if we actually
06:06 - reselect this and click the loop it'll
06:09 - say inherit now what does inherit mean
06:11 - inherit is going to inherit the default
06:15 - project settings now if we go to the top
06:17 - left and click project settings or
06:20 - project we see project settings if we
06:23 - click that we'll go
06:25 - to down here we can actually just search
06:28 - up fil
06:30 - filter and we should find rendering
06:32 - Textures in the textures we'll find
06:35 - default texture filter at the moment it
06:38 - is set to linear we want nearest we
06:42 - close this we now see if we zoom in it
06:46 - has become pixelated and the filter on
06:48 - the right did not have to
06:50 - change now the advantage of this is if I
06:53 - delete that and add another uh PNG we
06:58 - can see that it is proper ly pixelated
07:00 - and not blurry well the background is
07:02 - blurry but that's just how the
07:03 - background is so I'm going to delete
07:04 - this and now we have imported out our
07:08 - assets and we have set the project
07:12 - setting now let's go back into our
07:14 - project
07:15 - settings and we're going to actually
07:17 - change the window so let's clear the
07:21 - search we'll go to window display on the
07:24 - left and we're going to actually switch
07:26 - this to divided by 3 and then divide
07:29 - this by three and then we're actually
07:31 - going to switch these so this is going
07:32 - to be 384 and this is going to be
07:36 - 216 so let's make sure we have these and
07:40 - on the stretch we're going to go to the
07:42 - mode and keep it as viewport and then
07:45 - aspect we're going to
07:47 - expand and now we'll close this and now
07:51 - we see that our blue window has changed
07:54 - now this is essentially a camera if I
07:57 - were to play nothing's going to happen
07:58 - cuz we don't even have a scene yet but
08:01 - we'll actually do that right now so
08:03 - let's go to create root node we'll
08:05 - create a 2d scene because we want a 2d
08:08 - game we need a 2d node as the paper what
08:13 - that we draw on essentially this is
08:15 - going to be a piece of paper that we
08:16 - actually draw on and add Sprites and
08:19 - nodes and other things to it so let's
08:22 - contrl s to save I'm going to name this
08:25 - file world and we see that it is saved
08:27 - as a TS
08:29 - CN this stands for scene we also see
08:33 - here that it's going to be recognized as
08:35 - other things but we just need it as
08:38 - tscn we'll save this and now on the left
08:41 - we see world.
08:43 - TCN has been saved and if I click it
08:46 - this opens right it's already open but
08:49 - that's okay now if I click play run
08:51 - project or F5 we can select or select
08:55 - current select we'll open this folder
08:58 - and we can select this to open it and
09:01 - now we see our folder or our screen is
09:05 - right here now if we want to change the
09:07 - actual size of that screen that just
09:10 - appeared we can go back to project
09:12 - settings and instead of switching the
09:14 - viewport and width we're actually going
09:17 - to select advanced
09:19 - settings and here on the
09:22 - bottom below the viewport width I'm
09:25 - going to copy this and here under all
09:28 - the way at the bottom we see window
09:29 - width override now this is going to be
09:32 - overriding the actual screen we see this
09:34 - is essentially the pixel size that we
09:37 - see and play with in our screen so make
09:40 - sure we take a look at the top right
09:43 - here we see that this screen is
09:46 - approximately 250 technically it's 216
09:49 - that's what we set it to however if we
09:51 - go to the window width override and
09:54 - multiply it by maybe two and then go to
09:57 - the height width override and then
09:59 - multiply this by two we now have these
10:02 - settings and if I click close this did
10:05 - not change however if I click play our
10:08 - screen is now a lot bigger so that's all
10:10 - the override does if you were making a
10:13 - mobile game for example this would not
10:15 - matter because on a mobile game the
10:18 - screen will automatically resize to the
10:21 - Android screen you have or the iOS
10:24 - screen on Windows this matters more
10:26 - because that is the window that we
10:28 - actually play on
10:29 - now I will let you play around with
10:31 - these values do whatever you like but
10:34 - these are the settings I'm going to work
10:36 - with now one additional thing if you
10:39 - accidentally select a different scene to
10:42 - play automatically here we have run
10:45 - project this will play the project
10:47 - completely from scratch from the very
10:49 - first scene now let's create another
10:52 - scene let's create this scene just for
10:55 - the sake of having it so I'll save this
10:57 - as node 2D if I right click this H here
11:00 - we go now we have this that says set as
11:03 - main scene so now if I play it looks the
11:06 - same but it's now going to be running
11:08 - the node 2D instead of the world and I I
11:12 - can actually confirm this by going to
11:14 - the left when I play I See remote and
11:17 - local local is the local things that I
11:21 - edit the remote is the live version here
11:24 - we have root and it also says node 2D we
11:28 - can confirm this by saying by hovering
11:30 - it and it says instance node 2D it shows
11:33 - us the file path now this is because we
11:36 - have set this to play this on the main
11:40 - now I can stop this by clicking this on
11:42 - the top right or by clicking f8 now I'm
11:45 - going to close the node 2D go back to my
11:48 - world and now I'm also going to rename
11:50 - the node 2D to world all right let's get
11:55 - started in actually creating something
11:58 - so the first thing I'm going going to
11:59 - introduce is something called rigid body
12:02 - 2D now in order to add objects into our
12:07 - game unlike Unity or some other engines
12:11 - you might have used everything is
12:14 - already essentially preset now in order
12:17 - to add that specific object you want we
12:19 - go to the top left under scene and click
12:23 - this plus button or contrl
12:25 - a now we have this window that says
12:29 - create new node and all these nodes are
12:32 - essentially objects here we can see the
12:35 - node 2D and it's actually organized
12:37 - quite
12:38 - nicely most the things that are 2D will
12:41 - be under the node 2D if I click this I
12:45 - can see a bunch of 2D objects now
12:49 - instead of just looking through all this
12:51 - I'm just going to use the search bar I'm
12:53 - going to search up rigid body now if I
12:56 - click the
12:57 - X it doesn't select it so I'm GNA
13:00 - actually find it for the sake of
13:03 - introducing just bodies here we go it's
13:06 - in the Collision object
13:07 - 2D so here in the Collision object 2D we
13:11 - see that we have physics body 2D we have
13:15 - static body character body and rigid
13:17 - body 2D now rigid body is used for
13:22 - things like balls or things that need
13:25 - physic uh physics simulation right so I
13:28 - think the classic example is a ball
13:32 - because a lot of engines like to compare
13:34 - those kind of uh physics and I will just
13:37 - say right off the bat if just in case
13:40 - you are from Unity one of the main
13:42 - differences that at least I'm aware of
13:44 - of the rigid body 2D in good and just
13:48 - not even 2D but just rigid body the 3D
13:51 - as well versus Unity is that the rigid
13:55 - body in uh gdau actually Sim simulates a
14:00 - real ball so when you drop a real ball
14:03 - generally it has momentum and it stops
14:07 - eventually whereas in unity the ball
14:10 - will keep bouncing to the same height
14:12 - whereas in goo it'll eventually stop and
14:16 - get to the ground essentially now we're
14:18 - going to create this by selecting the
14:20 - rigid body 2D and create now here on the
14:24 - left we see rigid body 2D but we also
14:26 - have an air on the right now if I hover
14:29 - this it's going to tell us we just need
14:31 - a collision shape so let's do that let's
14:33 - control a or add a node and we're just
14:36 - going to search up Collision shape now
14:39 - we have a lot of collisions we need a
14:41 - collision shape 2D Collision polygon can
14:43 - also work but Collision shape is a
14:45 - little easier so let's add that now
14:48 - let's zoom in to this point because
14:50 - that's where it is we can see it by
14:52 - either hovering or just selecting it in
14:54 - general it's already selected now if I
14:57 - give it a shape on the right
14:59 - I'm going to select a circle shape
15:00 - because my bird is going to be a circle
15:04 - now we can see there's not really
15:06 - anything here so let's add our player so
15:09 - let's go to the left on our files and
15:12 - add our player so we have three birds we
15:13 - can add from I'm going to add the red
15:15 - one we can see that it's automatically
15:17 - turned into a Sprite now in gdau there
15:20 - are quite a few ways to animate things
15:22 - so this gives quite a bit of flexibility
15:25 - in how we want to do things so we can
15:28 - either go to animation here and type in
15:31 - the H frame 4 if we do that it'll take
15:34 - the frames that we had and turn it into
15:36 - this now there's something called
15:38 - animation player which I'm not going to
15:40 - get into but that will it's actually a
15:42 - very powerful tool in gdo that helps us
15:45 - animate various
15:47 - things so if I wanted to animate from 0
15:50 - 1 to 3 for frame it could do that
15:54 - however I'm going to do an E easier
15:56 - method and I'm going to use something
15:58 - called animated Sprite so I'm going to
16:01 - go to my rigid body select my rigid body
16:03 - I'm going to add a node and search up
16:06 - animated Sprite we see animated Sprite
16:09 - 2D let's
16:11 - create here it's basically telling us we
16:14 - need to create a Sprite frame so on the
16:16 - right let's go to Animation Sprite
16:19 - frames new Sprite frames click this and
16:23 - here we have a new selection on the
16:26 - bottom that says Sprite frames now here
16:28 - it says default but I can double click
16:30 - this and rename it to
16:34 - fly now here it's already automatically
16:37 - looped but here we have no frames so
16:39 - let's add some stuff now you could drag
16:43 - and drop but this adds a frame this is
16:45 - frame zero that's not exactly what we
16:47 - want so let's delete that what we want
16:49 - to do is we want to add these four
16:51 - frames into this as separate frames and
16:54 - luckily enough good can do that if we
16:56 - click this rectangle but button little
16:59 - thing we'll find that this pops up and
17:02 - we can find our Sprite that we want to
17:06 - add I'm going to do the blue one
17:07 - actually and if we zoom in by holding
17:10 - control and zoom
17:11 - in able to zoom in and on the right side
17:15 - used to actually be on the top but they
17:16 - changed it so it's on the right I
17:18 - actually don't like that I like it on
17:19 - the top but that's okay we're going to
17:21 - go to horizontal and select one nope
17:24 - sorry four and then vertical we'll do
17:27 - zero or one so now we can select all
17:30 - these and we can see that the numbers
17:32 - actually correlate to the order so if I
17:35 - did this it would be a different order
17:37 - now we can just unselect it all and then
17:39 - select all and it'll do it like that
17:41 - that's probably a bit easier so select
17:43 - all on the top or select none and then
17:45 - select all so make sure we have select
17:48 - all and we add all four frames and now
17:50 - we see all four frames have been added
17:53 - now I can play test this by just
17:54 - clicking this play
17:55 - button and it automatically loops now
17:58 - what I'm going to do is I'm actually
18:00 - going to automatically play
18:03 - this that way it plays on when I play
18:07 - the game now if I run the
18:10 - project nothing is really going to show
18:12 - up so what I'm going to do is I'm
18:13 - actually going to take my rigid body and
18:15 - I'm going to move all of it by instead
18:17 - of clicking and dragging you can see
18:19 - here I've only moved the Sprite what I
18:22 - can do is either there's a lot of
18:24 - options I can either take these two by
18:27 - holding one of them and then shift and
18:30 - selecting the other or control and then
18:32 - I can lock it and now I can select my
18:35 - rigid body or if I don't want to do that
18:38 - which I usually don't I can just select
18:40 - my rigid body I can click this guy the
18:43 - move mode or W and now I can just move
18:46 - the rigid body from anywhere it's a lot
18:48 - easier to move things around now if I
18:52 - play again nothing that's very
18:55 - interesting let's find out what's happen
18:58 - happening most likely it's just falling
19:01 - before we can even see it
19:03 - so let's go to the remote and see what's
19:06 - happening oh I see what's happening
19:08 - we're not playing the correct thing so
19:10 - let's make sure we select this as the
19:12 - main scene and I'm going to delete the
19:14 - other node that I
19:17 - made there we go there's our birdie and
19:20 - as we saw it automatically Falls it has
19:22 - its own built-in physics and gravity
19:24 - that it just automatically Falls we can
19:27 - find it by going to the by selecting the
19:29 - rigid body 2D and going to the right
19:32 - side with the properties panel we see
19:34 - linear and angular velocity we're going
19:37 - to actually play with both of these in
19:38 - our script in a bit so I'm going to
19:40 - unselect those we don't want to select
19:42 - anything here we see the transform this
19:45 - just shows us the position rotation
19:47 - scale and skew skew is actually new in
19:49 - gdau so if you would like to play around
19:51 - with that you can see what it does it's
19:53 - kind of
19:54 - interesting but I'm going to leave it at
19:57 - zero um um we're not going to really
19:59 - play them around with too much so now
20:02 - what we're going to do is we're going to
20:03 - actually add a script to our bird so
20:06 - let's actually rename this to
20:09 - bird then add a script as you might
20:12 - assumed the script is up here on the
20:15 - right or on the left sorry with the
20:17 - little paper thing that says has a plus
20:19 - button if I click that it'll prompt me
20:21 - to attach a note now there's a few
20:23 - options the language I could change
20:26 - before there used to be um
20:29 - don't remember what it was called but it
20:31 - was like another GD thing um but either
20:33 - way you can also I believe import C into
20:38 - gdo um I don't know how to do that I've
20:40 - never tried it I've never done it but
20:42 - there are videos out there that you can
20:44 - find that will allow you to do that if
20:46 - you prefer C over GD script now I will
20:50 - give a not warning but I guess just a
20:54 - general knowledge thing is that GD
20:56 - script is basically python if you know
20:59 - python or if you have an inkling of what
21:01 - python how python works you'll be fine
21:03 - GD script is very similar to python it's
21:06 - essentially the same but GD script just
21:08 - has its own builtin functions which is
21:11 - very useful which we're going to be
21:12 - taking advantage of now we see here the
21:15 - inherits this will actually see what
21:17 - this does in a minute when I create this
21:19 - but what also matters is the template
21:22 - and the built-in script template is
21:24 - actually new which is cool there's no
21:26 - template real template for the bird or
21:29 - the rigid body however for some other
21:31 - nodes there are some templates but
21:34 - either way we're going to leave this as
21:35 - node default for the built-in script
21:38 - this if I select it essentially I cannot
21:42 - find the script in my files it is a
21:44 - built-in script into this node usually
21:48 - that's not what you want to do
21:51 - because if I create this let's create it
21:54 - here we go if I hit control shift f I
21:58 - can find anything in my file so for
22:00 - example let's say
22:02 - rigid it will now show me on the bottom
22:05 - the find rigid and it'll show me the
22:08 - things that have rigid in it now if I
22:11 - had made it built in so let's actually
22:13 - take this out and delete this script if
22:16 - I do the same thing make it built in and
22:19 - let's go to
22:21 - output and then say rigid nothing shows
22:24 - up because it's builtin it's a buil-in
22:26 - script that we cannot search through our
22:28 - files so let's make sure that we have it
22:30 - not built in and create and here we have
22:34 - on the right left as well we have an
22:36 - unsaved thing this is just the the other
22:39 - built-in script it's a little wanky
22:41 - sometimes but we're just going to use
22:43 - this all right so in our script we want
22:47 - to take a look at the code that we have
22:50 - so far because right now it's not much
22:54 - but what's Happening Here is it's going
22:56 - to extend the rigid body 2D
22:58 - which is basically a class which is
23:00 - rigid body 2D that looks like my headset
23:03 - is low but I'll charge that in a minute
23:05 - here we have two functions the ready
23:07 - function it's called when the node
23:08 - enters the scene and we have the process
23:11 - function which is very useful but we're
23:12 - not going to use that just yet we're
23:15 - going to create a new function called
23:17 - function input event this is a function
23:21 - that checks for any sort of event so if
23:24 - I print the
23:26 - event and I go to output on the bottom
23:29 - left and I play my
23:31 - game and I start moving my mouse or even
23:34 - clicking a button on my keyboard
23:37 - anything this is any sort of event now
23:40 - the question becomes how do I specify
23:43 - this to a certain type of thing well I
23:46 - can say if event is input event Mouse
23:51 - button then we'll print the event now
23:55 - this is what this is going to do is if I
23:57 - restart the game
23:59 - it will only take something if I click
24:02 - even if I move my mouse it won't input
24:04 - that because that's not a mouse button
24:06 - it is a motion so if I actually control
24:09 - and left click on this it will go bring
24:13 - me to the input Mouse button um document
24:17 - and I can even click the online document
24:18 - I won't now there's also the search help
24:21 - and we can kind of look at what this
24:23 - stuff has I'm not going to I'm going I
24:26 - already know so I'm going to teach you
24:29 - so when I look in my game let's restart
24:32 - this if I left click we see that the
24:36 - button index is one and the button mask
24:38 - is one and zero that means I click down
24:41 - so if I click down once and then release
24:44 - the button mask is zero if I right click
24:46 - the button index is two so now we can
24:49 - actually check for which button I'm
24:52 - clicking on my mouse and I can do that
24:54 - by saying if event. button index is
24:58 - equal to one so we're taking the event
25:01 - and looking for a property button index
25:04 - is a property of the event so the event
25:08 - here is the thing that I printed so this
25:11 - is the entire event but I only want the
25:13 - button index and I do that by saying
25:16 - button index similarly we can do event
25:20 - Doods or press or anything else you can
25:24 - even check the position by doing event.
25:27 - position
25:28 - okay so now we want to add linear
25:33 - velocity to our player every time I
25:36 - click now how can I do that well there's
25:39 - something called linear
25:42 - velocity however you'll see in a second
25:45 - so if we want to change the Y maybe
25:48 - let's subtract
25:52 - 150 so in Gau when we add or subtract to
25:57 - the Y y AIS the Y AIS is actually
26:00 - negative in the upwards Direction so if
26:02 - I look very closely on the left we can
26:05 - see that this says 50 here and if I go
26:07 - up a little bit this says 50 so I want
26:10 - my bird to go upwards when I click and I
26:14 - do that by subtracting 150 now let's try
26:18 - this oh that's a little weird that's not
26:20 - exactly what I want so what we're going
26:23 - to do is we actually setting it like
26:27 - this is very strange now every node not
26:33 - every node but most nodes have a a
26:37 - builtin function for these type of
26:39 - things now this one is set do linear
26:44 - well set linear velocity to this
26:47 - velocity now I can't just pass through
26:49 - ay I have to give it a vector 2 so
26:52 - Vector 2 is just an x and y coordinate
26:54 - now the X I don't want it to move in the
26:56 - X Direction because that's right and
26:58 - left I only want it to go upwards of 150
27:02 - now calling self is the same as not
27:04 - calling self so if I do this it's the
27:07 - same as saying self dot I just like to
27:10 - get into the habit of doing self Dot and
27:13 - then the function just so it's a good
27:15 - habit so that way you see what all these
27:17 - things are doing to what right so now we
27:20 - know that we're setting the self to the
27:22 - linear velocity now if I
27:25 - play we can see we have a little bit of
27:27 - jump it's a little better than it used
27:29 - to be now to make this a bit more fun
27:32 - we're going to do the same thing but
27:34 - we're going to say set angular velocity
27:37 - to negative maybe let's change this to
27:39 - negative one and see what that looks
27:41 - like and now you can see our bird is
27:44 - kind of flipping I think I'll keep it
27:47 - tog3 so it's a little
27:49 - quicker now we can see our bird is
27:51 - flipping like that so it looks a little
27:54 - cooler okay we also
27:58 - you also have the option of playing the
28:02 - fly animation only when you click so to
28:05 - do that we can go to our animated Sprite
28:08 - make sure it's selected we have it here
28:09 - on the bottom we're going to turn off
28:11 - the autoplay and we're going to turn off
28:14 - the loop now what we can do is we can
28:17 - take our animated Sprite and drag it
28:20 - into our script and it gives us the path
28:23 - to our script now what does this do this
28:26 - essentially gives us access to the
28:28 - animated
28:29 - Sprite so now what I can do is I can
28:31 - call something from that and I'm going
28:34 - to say play Fly it's going to play this
28:37 - animation for us now we see that there's
28:39 - a bunch of other properties that I could
28:42 - put but I'm just going to leave it as
28:44 - fly this will work fine so now when I
28:46 - play my bird is not doing anything and
28:49 - it's very subtle but now he only plays
28:51 - the fly animation when I
28:53 - click cool all
28:56 - right now we've learned how to animate
28:59 - access animation
29:00 - Sprites we've learned how to change
29:04 - properties now we're going to edit our
29:07 - scene a little bit let's go to our main
29:10 - scene and I want to add something called
29:14 - a parallx background which is up here
29:19 - parallx background we're going to create
29:21 - this and what is this well it's
29:23 - basically a parallx background layer so
29:26 - let's add a another node and we're going
29:28 - to add a parallx layer now let's take a
29:31 - look at how this
29:32 - works if I take my background I'm going
29:37 - to add this
29:38 - one take this background transform it to
29:43 - 1.5 to move it down a little
29:46 - bit and in case you're wondering if you
29:49 - want to turn on or off the GD snap which
29:52 - is useful you can easily do it with
29:55 - shift G or this guy right right here all
29:58 - right so I'm going to move this in the
30:00 - middle and I don't want this to move so
30:02 - I'm going to put it right there Above
30:05 - The Parallax layer now in the layer
30:08 - we're going to add something we're going
30:10 - to add
30:13 - our pipe to see we're just going to add
30:16 - this guy just to test it now you see
30:18 - when I tried adding it it just added it
30:20 - over here in the world we want to move
30:23 - this to be a child of the Parallax layer
30:26 - all right we now have a pretty
30:28 - complicated setup on the left we
30:31 - basically have the parallx layer a child
30:34 - of the world which is fine because we
30:37 - are playing in a 2d world we have the
30:40 - paralic background which is a parent of
30:42 - these two nodes and the parallx layer is
30:45 - what we're going to use to move so let's
30:47 - go to our parallx background and we're
30:49 - going to add a script we're going to
30:50 - have it built
30:52 - in and you don't have to make it built
30:54 - in but that's so it's up to you we're
30:57 - going to edit something in our process
30:59 - function we're going to change the
31:02 - scroll base
31:05 - offsetx and we're going to subtract
31:07 - scroll speed times Delta now what's
31:09 - scroll speed well we have to give we
31:12 - have to give that variable like into
31:15 - existence because it doesn't exist so
31:17 - let's say variable scroll speed is equal
31:20 - to zero now in
31:23 - Gau variables are just called variables
31:26 - now if I want to specify a specific
31:29 - variable to a type here right after I
31:32 - think it's here let's find out together
31:34 - we can say int like this and this will
31:37 - specify that it's an integer now either
31:39 - way it doesn't really matter because gdo
31:41 - is actually smart and will automatically
31:44 - kind of assume what this type is so here
31:46 - when I just say equal to zero it's
31:48 - automatically assuming that it's an
31:50 - integer now this is nice but I'm going
31:53 - to add something called
31:55 - export we're going to to export variable
31:58 - scroll speed now what does this do well
32:01 - if I go back to my 2D scene and I click
32:05 - the parallx background and I look at the
32:07 - properties well now I see it says
32:09 - built-in script and then right below
32:12 - that it says scroll speed and now I can
32:15 - change that to 50 or whatever number
32:17 - you'd like now if I
32:20 - play our background is moving the
32:23 - parallx background is starting to move
32:25 - which is great that's really cool
32:28 - so this is pretty neat one more thing
32:31 - that's usually used in parallx
32:33 - background is called mirroring now if I
32:35 - want the same background to show up I
32:38 - can mirror it by maybe giving it 100
32:42 - usually you want to give it the same
32:43 - number that is this one so
32:47 - 26 zoom out and now if I play it should
32:52 - duplicate so forget the bird we don't
32:54 - need
32:56 - him have that one that's the second one
32:58 - and there we go there's our third one
33:00 - right even though we didn't draw a third
33:02 - one it is now showing up in our game
33:05 - right and it's going to keep mirroring
33:08 - forever so that's very useful but that's
33:11 - not exactly what we need but it was a
33:13 - good thing to see what this is now let's
33:16 - delete this parallx layer and we're
33:18 - going to add something called a tile map
33:22 - now gdau is actually pretty unique in
33:24 - their tile map because it's really it's
33:26 - a really power ful tool than not many
33:28 - other engines have so in our tile map we
33:31 - see tile set on the right side up here
33:35 - it says empty so we're going to click it
33:37 - and give it a new tile
33:39 - set now on the bottom we have tile set
33:42 - and tile map in tile set this is where
33:45 - the editing happens any sort of editing
33:48 - to my tile map is going to happen here
33:52 - any sort of application that I actually
33:55 - put into my game will happen in the tile
33:58 - map hopefully you understood that if not
34:01 - that's okay we're going to learn this
34:02 - with an example so clicking our tile set
34:06 - on the bottom we're going to take
34:09 - the tile style one because this is the
34:13 - ground and we're going to drag this in
34:16 - we're going to click yes and we're going
34:18 - to scroll down a little bit and we're
34:19 - just going to take a look at here
34:23 - now the do 4 I actually just changed
34:26 - this so it's a little
34:27 - I don't know if you want to call it
34:28 - easier or harder but it's really cool so
34:32 - pay close attention we're going to go to
34:34 - the top right we're going to click tile
34:36 - set on here we're going to click this
34:39 - tile set now this these new properties
34:41 - will show up and we see physics layer
34:44 - and a bunch of other things the only one
34:46 - we're going to focus on right now is
34:47 - physics layer we're going to click add
34:50 - element and this has basically allowed
34:52 - us to create a physics layer so now
34:55 - we're going to unel select that and
34:57 - close this we're going to go back to our
34:59 - tile set because remember if we want to
35:01 - edit anything from our tiles we have to
35:04 - do it in the tile
35:05 - set right so now let's go back to paint
35:09 - actually I'm going to give a quick
35:12 - demonstration as to why we need to do
35:14 - this let's go into our tiles into tile
35:19 - map so make sure we're in tile map and
35:21 - we see tiles here we can select a tile
35:25 - and now we can just draw now okay if you
35:27 - have move mode selected it won't allow
35:29 - you to draw you have to have the select
35:33 - mode selected and now we can see the
35:35 - tiles right there so let's draw along
35:38 - the map and let's maybe put this one now
35:43 - we can also paint or use a rectangle
35:45 - like this to make it a little easier or
35:48 - quicker will make this easier for us now
35:51 - if I
35:52 - play what's going to happen well my
35:55 - player just fell right through that's
35:57 - not what we want we want an actual
35:59 - physics layer now in my tile set again
36:02 - we're going to go back to the tile set
36:04 - we're going to go to paint paint
36:07 - properties and we're going to select the
36:09 - physics layer right here we have physics
36:12 - layer now if we did not create that
36:13 - physics layer you will not see this if
36:16 - you did not see this physics layer
36:18 - please go back you missed a step okay so
36:21 - let's click this physics layer and now
36:23 - we have some things here let's drag the
36:26 - up a little bit so we see everything now
36:29 - here it's actually very neat because we
36:31 - can specify the physics um layer for all
36:36 - of these tiles now I'm just going to
36:37 - select all of these because it doesn't
36:39 - actually matter but for future reference
36:41 - you can actually change these points and
36:44 - change the
36:45 - Collision see that very cool so I'm not
36:49 - going to go too much into detail about
36:51 - tile Maps there are I actually have a
36:54 - relatively good video on tile Maps it's
36:56 - about 23 minutes long and you can check
36:58 - it out is I it's in my channel somewhere
37:02 - you can find it um but um there are a
37:06 - lot of tutorials on to Maps so we're
37:08 - going to just do this and let's play
37:10 - Let's see what we have
37:12 - now bam he hit the floor but we can see
37:15 - that there's a little Gap why is that
37:17 - happening I want you to try to take a
37:19 - guess as to why this is happening so
37:21 - pause the video and try to figure out
37:23 - why there's a little Gap there hopefully
37:25 - you've unpaused
37:27 - well if we scroll down into our bird we
37:30 - see that the physics layer of our bird
37:33 - is this big so it it's working how it
37:35 - should so if we select our Collision map
37:39 - shape we can see here if I try to drag
37:41 - this up and down it's not working very
37:43 - well and that's because we have the grid
37:46 - snap turned on so let's turn that off by
37:48 - clicking shift G or just clicking that
37:51 - and let's pin this down to fit our bird
37:55 - properly cool so now when I
37:59 - play it works as it should awesome all
38:05 - right we now want to add a way to detect
38:09 - if we hit the floor or the pipe in the
38:13 - future so right now we have the tile map
38:16 - called tile map we're going to rename
38:18 - this to
38:20 - walls this is going to represent the
38:22 - walls or the the floor in fact actually
38:25 - I'm just going to rename it to floor I
38:26 - don't know why I renamed it to wall but
38:29 - FL is probably more appropriate now in
38:31 - our bird we're going to add a new node
38:34 - called area 2D so if I add a new node
38:39 - add this node called area 2D and now
38:42 - it's part of our bird and then we need
38:44 - to add a collision shape which we can
38:46 - actually find in the recent as well or
38:49 - you can just search it up whichever one
38:51 - you
38:52 - prefer now we see that it needs a shape
38:55 - so let's actually Zoom in here because
38:57 - this is important when we play with area
39:00 - 2DS with Collision shapes with the
39:02 - actual body or rigid body if this area
39:05 - 2D is smaller than this Collision box or
39:08 - the same size I believe it becomes
39:11 - inapplicable and it basically can't
39:13 - detect anything so you have to make sure
39:15 - the area 2D Collision is bigger than the
39:19 - Collision shape of the actual rigid body
39:22 - okay let's zoom out and now in our area
39:26 - 2D we're going to go to the top right we
39:29 - have inspector and then something called
39:31 - node now node is where all our signals
39:34 - will be there's also something called
39:36 - groups but there are a lot of videos
39:38 - about that and you can check that out
39:40 - groups is uh completely separate from
39:43 - not from signals but we don't have to
39:44 - worry about it right now we're going to
39:46 - focus at the signals in general so let's
39:49 - take a look at what sort of signals
39:51 - exist first of all it's important to
39:53 - note that these signals here are all
39:56 - specific to the area 2D these are
39:59 - built-in signals or functions specific
40:02 - for area 2D now there are other signals
40:06 - that are general for other things like
40:09 - node or canvas item or Collision object
40:13 - or object on the bottom and in fact if
40:17 - we go to our bird and select this bird
40:19 - instead we see there's different signals
40:22 - but these are all the same that's
40:24 - because they all inherit the same type
40:27 - of node now let's go back to our area 2D
40:30 - we want to connect a body entered this
40:33 - will basically look for anything with a
40:36 - physical body you can see you can read
40:38 - it and it says tile map in there so
40:41 - we're going to double click this and if
40:43 - it'll actually
40:44 - automatically prompt us to select this
40:47 - the script of the bird now if it prompts
40:50 - you to select something else we make
40:51 - sure that it's prompting us to send the
40:54 - signal to the bird let's connect connect
40:56 - it now we have this signal so what is a
41:00 - signal what what is this thing well when
41:03 - this bird and the area 2D specifically
41:06 - the area 2D hits anything the signal
41:09 - will proc whenever a b body enters
41:12 - whenever a body enters this area this
41:15 - signal will proc and basically get and
41:18 - say hey something happened right and
41:21 - what do we want to do well first let's
41:24 - print the body let's see what it says
41:26 - let's print the body. name because the
41:29 - name is actually a property so here we
41:31 - renamed it to floor it should print
41:34 - floor if we hit the floor so let's play
41:36 - and see what
41:38 - happens ah so it says floor and bird but
41:42 - why does it say bird well that's because
41:44 - the area 2D actually collided with the
41:47 - Collision shape as well so what we're
41:50 - going to do is we're going to add a if
41:53 - statement that says if the body. name is
41:56 - equal to floor then we're going to Q
42:00 - free this is basically going to delete
42:02 - our player our
42:05 - bird oh there he goes he got deleted
42:08 - cool we have a relatively somewhat
42:10 - working game with no pipes and we can
42:13 - stay alive and it works pretty well and
42:16 - if I hit the floor I die all right so
42:19 - let's start adding some pipes because
42:21 - well this isn't fun without any pipes
42:23 - right so let's take a look at how we're
42:26 - going to add this pipe well I want to
42:29 - actually add a new tile
42:32 - map and in this tile map we're going to
42:34 - go to the tile set new tile set click
42:38 - this go to tile set here and we're going
42:41 - to add whichever pipes you want there's
42:43 - this one I'm going to add this one and
42:46 - there's also this one which you can add
42:48 - I suppose I don't know uh actually I'm
42:50 - going to add the bottom one because I
42:53 - think that's the one I used in my
42:54 - reference so I'm going to go back here
42:56 - and delete this by clicking this and now
42:59 - I have the pipe style actually one more
43:02 - time it
43:04 - should now one thing I will say is you
43:07 - will notice the ID changes and this is
43:09 - important for later but at the moment
43:11 - I'm just going to make sure that the ID
43:13 - is
43:14 - zero to stay
43:16 - consistent okay now we see here that the
43:19 - tile set is a little weird it's a bit
43:22 - different now what we want to do instead
43:25 - is we actually want to change
43:28 - the X and Y texture and we can do that
43:32 - by going down here and typing 32 oh no
43:36 - sorry 32 for the X but 16 for the Y and
43:40 - now we can select this entire thing we
43:43 - also want to do the same thing for the
43:46 - tile size up here so we're going to say
43:48 - click
43:49 - 32 now we can select a tile like this
43:53 - now let's go to tile map and add it we
43:56 - can see that we can actually add a
43:58 - tile right so I can do
44:02 - this can delete it by right clicking
44:05 - let's add a long pipe
44:09 - here
44:10 - that and we
44:12 - can do that and now we have a pipe let's
44:16 - also add a physics layer now I want you
44:18 - to try this remember how we added the
44:21 - physics layer and added the Collision so
44:24 - I want you to pause the video and try
44:25 - this and give it a
44:28 - try P an
44:30 - element tile set we're going to go to
44:33 - paint physics layer we're just going to
44:36 - select all of
44:38 - these you can see here that we can even
44:40 - edit it here I'm not going to care too
44:43 - much about the tiny Collision here like
44:46 - you could do this if you'd like if you
44:48 - are very specific about
44:51 - it I guess I just did that but yeah so
44:54 - you can do that and now the is very
44:56 - specific all right so now we have this
45:00 - tile map that doesn't move right because
45:03 - if I play it just stays there now
45:06 - usually you would think that we want the
45:09 - bird to move forward but what we're
45:11 - actually going to do is we're going to
45:13 - rename this to pipes and then we're
45:17 - actually going to attach a script to
45:18 - this we're going to not make it buil in
45:20 - this time let's create it and in our
45:23 - process function we're just going to add
45:25 - something very
45:27 - simple we're going to say
45:29 - positionx minus equal 60 which is
45:32 - basically speed time Delta now let's go
45:35 - back to our 2D script or 2D scene and
45:39 - play now we see that our pipes are
45:43 - moving it looks like our bird is moving
45:45 - towards the pipe but the pipe is moving
45:47 - towards us and I collide with the pipe
45:51 - now what we can do is go back to our
45:53 - bird and add I want you to try this add
45:55 - a check to see if you can destroy the
45:58 - bird when you hit a pipe pause the video
46:02 - give it a try and unpause when you're
46:05 - done or confused all right so all we're
46:08 - going to do is I'm going to duplicate
46:09 - this and type in
46:14 - pipes now when I
46:16 - play and I hit the pipe my bird goes
46:20 - away cool so in our script we actually
46:25 - want to
46:26 - randomize this now how can we randomize
46:29 - this well I have created a relatively
46:34 - complex script that you probably
46:36 - shouldn't do but I've decided that I'm
46:40 - lazy and I don't know I just like doing
46:43 - it this way so let's um take our pipe
46:47 - and we're going to actually Save branch
46:49 - as scene nope wait
46:54 - yes yeah I was right
46:56 - okay we're going to save the branch of
46:57 - scene and now this thing appeared says
46:59 - open an editor but what is that what
47:01 - does that mean well what we can do now
47:04 - is we can actually take this and delete
47:06 - it now don't worry it's not gone we've
47:10 - actually have it over
47:12 - here now in our pipes we can see that we
47:17 - have our pipes but over here it's not
47:19 - here so first of all we want to be able
47:21 - to spawn in these pipes and then we also
47:24 - want to randomize the
47:26 - Gap essentially
47:28 - now let's look at the randomization
47:31 - first because that's a little lengthy
47:34 - you don't have to understand the code
47:35 - too much but basically first of all we
47:38 - have to Let's remove the tile set or the
47:42 - Tom up here let's go to our tiles or
47:46 - pipes now we're going to randomize this
47:49 - in our ready function so first we're
47:52 - going to
47:53 - say set the top pipe and then we're
47:56 - going to create a random variable
47:58 - between 1 and 15 and we do that by
48:00 - saying variable random range top is
48:04 - equal to Randy range 1 to
48:06 - 15 and then we're going to for
48:09 - Loop in range of Randy range top now I'm
48:14 - going to show you another way to for
48:16 - Loop but this is one way and then we're
48:18 - going to do something called set cell
48:21 - this is going to set the cell on our map
48:26 - with a bunch of these numbers now what
48:27 - do these numbers mean well let's take a
48:29 - look so if I say set
48:32 - cell sorry about that we have a bunch of
48:35 - inputs we have layer coordinates Source
48:38 - ID and a bunch of other things now if
48:40 - you want to understand this more in
48:42 - depth again I have a really good video
48:44 - about this on on tile maps that you
48:47 - should definitely check out TI maps are
48:49 - a bit I wouldn't say complicated but a
48:51 - little more advanced and it can get very
48:54 - difficult to wrap your your head around
48:56 - it if this is your first time using it
48:58 - but for the sake of getting this to work
49:01 - we're just going to copy the code over
49:03 - and this will set the bottom two cells
49:06 - and
49:07 - then we're going to set the bottom pipe
49:10 - as well by doing this now in this for
49:13 - Loop we are not saying in range we're
49:15 - just saying in
49:17 - 15 okay we have this
49:20 - code if I
49:23 - play oops I have to play from the pipes
49:26 - I want to check the pipes if this works
49:28 - now how can I do that on the top right
49:30 - there's run current scene this will
49:32 - allow me to run this current scene which
49:34 - is called pipes so if I touch click that
49:37 - we now see this awesome we now have a
49:40 - randomized pipe let's stop and then play
49:42 - again to see if it is
49:43 - randomized it's a little
49:46 - different cool it's very different okay
49:49 - so we see that this works if you would
49:51 - like to try to understand it I would
49:53 - give you kudos for it um however I'm not
49:56 - going to go through the logistics of
49:58 - this again I have a lengthy video about
50:01 - tile maps that explains most of this
50:03 - it's pretty neat and it's uh on
50:05 - isometric tiles as well which is a
50:09 - bonus but it works relatively the same
50:12 - so let's go back to 2D let's go to our
50:15 - pipes we're going to close this for now
50:18 - we're going to go to our parallx
50:20 - background make sure this is selected
50:22 - and we're going to add a new node called
50:26 - timer in this timer what is this timer
50:29 - thing that we just added well it's
50:32 - literally a timer it will just start
50:35 - whenever we want it to in fact there's a
50:37 - property on the right that says auto
50:39 - start I can click on and this will
50:42 - automatically start it when I load this
50:44 - scene now I'm going to explain to you
50:47 - what we want to happen and I want you to
50:48 - give it a try we want to connect a
50:52 - signal from this timer to our parallel
50:55 - background script and then we want to
50:58 - spawn our wall now let's go look at our
51:03 - script and create a function called Funk
51:08 - spawn and I'm going to help you create
51:10 - this
51:11 - function and then I want you to try to
51:14 - spawn them in yourself now in order to
51:17 - spawn something that is from a separate
51:20 - scene I I think it's a little easier
51:22 - than Unity we do something called on
51:25 - ready variable wall or we'll change it
51:28 - to
51:29 - pipe and then we're going to preload it
51:32 - we're going to say preload and then give
51:34 - it the path now what is this path well
51:37 - this is the path of the pipe well I
51:40 - called it wall in my reference but here
51:43 - it's pipe so if I take the pipe that I
51:45 - just created and then I drag it into
51:47 - this preload it will give me the path
51:49 - for it alternatively you can also right
51:51 - click the pipes and there should be copy
51:54 - path control shift C now in our function
51:58 - spawn we're going to do something
52:02 - called variable wall temp and then we're
52:06 - going to create make it equal to the
52:08 - pipe.
52:10 - instantiate and then we're going to say
52:12 - add child because instantiating it
52:15 - doesn't actually add it to our Scene It
52:17 - just creates the object now we're going
52:20 - to add the child into our scene and that
52:23 - is it that is it for the spawn now I can
52:25 - spawn it in the ready function for
52:27 - example let's create let's do this and
52:30 - let's see what we
52:31 - get well there's our first pipe but we
52:34 - want it to keep spawning pipes right so
52:37 - how do we do that well hopefully you
52:39 - figured this out by now but in our node
52:42 - on the top right of our timer we click
52:44 - this and there's a node signal called
52:48 - timeout and you can see here that it's
52:50 - trying to connect it to our bird but we
52:52 - don't want that we want it to connect to
52:54 - our parallx background script so let's
52:56 - connect that to our paralu background
52:58 - script connect it and we're going to
53:01 - call the spawn function when the timer
53:03 - runs
53:04 - out now let's play and see what we
53:08 - get well there we go now we have a bunch
53:11 - of
53:12 - pipes o that's not exactly what I
53:17 - wanted
53:19 - well let's go to our parallx background
53:23 - go to our timer inspect and first of all
53:26 - let's change the weight time now the
53:28 - question is why did the bird not get
53:31 - deleted when I hit it well because let's
53:35 - actually play and I'll show you why we
53:38 - can look to our remote and we go to our
53:41 - world paralex we can see it's we have
53:45 - pipes but then it's adding a bunch of
53:47 - other things that just says tile map so
53:50 - I have 1 2 3 four five whatever well
53:53 - that's not what we want we want to make
53:56 - it equals the pipes so let's go back to
53:59 - our parallx
54:01 - background and we're going to take our
54:03 - wall temp and we can actually take the
54:07 - name which is a property and rename it
54:10 - to something we're going to rename it to
54:13 - pipe now or pipes now this might work
54:18 - let's play and take a look in our remote
54:23 - section doesn't seem to work now why is
54:27 - that the reason why it wasn't working is
54:30 - because in our pipes we were renaming it
54:34 - every time to the same thing but it
54:36 - wouldn't do that because we already had
54:38 - one that existed with the same name so
54:40 - what's an alternative well we're going
54:42 - to use something called in but first of
54:46 - all we're going to create something so
54:48 - in our pipe script we're going to create
54:51 - something called variable wall or uh
54:53 - we'll say yeah we'll say
54:57 - wall now we're going to save this we're
54:59 - going to go to our bird script and in
55:01 - here what we can do is we can say if
55:07 - wall I think it has to be capitalized
55:10 - yeah it has to be the same so let's
55:11 - actually make this lower case and then
55:13 - we'll make this lower case as well we'll
55:15 - say if the wall is in the
55:17 - body then we can Q free now now we can
55:22 - delete this first of all but this is
55:25 - basically checking to see if the
55:27 - property is in that wall that we or the
55:29 - body that we just collided with so let's
55:31 - play and now it should work relatively
55:35 - fine let's test this one more time by
55:37 - going to the second
55:39 - pipe and there we
55:41 - go all
55:43 - right we are almost done we just have a
55:47 - little bit more we're going to create
55:49 - something called a global script now how
55:51 - do we do this well first of all let's
55:53 - create a new script we can we have two
55:55 - options we can either go here right
55:57 - click oh I guess they removed that I
56:00 - think we can go to file and say new
56:01 - script or contrl n or we can go to the
56:04 - res file on the bottom left create new
56:07 - and create new script we're going to
56:09 - create something called game or
56:13 - Global and in this Global we're going to
56:15 - remove all this and say
56:17 - variable
56:19 - point we're going to set it to zero this
56:22 - is the points that our player is going
56:24 - to collect
56:25 - now in our pipes we're going to create
56:28 - an area 2D that is going to ding or give
56:32 - our player a point every time we hit it
56:34 - so let's create this and add a collision
56:37 - shape now how are we going to make this
56:39 - work well it's actually pretty simple we
56:41 - just have to create a long rectangle
56:43 - we're going to move this all the way to
56:45 - the right where the pipe should be and
56:47 - we're going to make it relatively skinny
56:49 - now we're going to go to the area 2D and
56:51 - say if body entered connect this
56:55 - and we'll say if bird inbody body. name
57:01 - because the bird is not a variable but
57:04 - it's the name of our Bird right so now
57:07 - let's go back to our pipe and we're
57:08 - going to say
57:10 - Global do points plus equals 1 however
57:15 - this should error there we go not
57:17 - declared in current scope now how do I
57:20 - make this Global how do I access the
57:21 - script from this script well on the top
57:26 - left we go to our project
57:28 - settings this should open
57:31 - up autoload we go to autoload right here
57:35 - this is where we can autoload or
57:38 - globalize scripts or even scenes so if I
57:41 - click the folder button this guy will
57:44 - pop up and you can see I can actually
57:46 - select the scene too however we're just
57:49 - going to select the global script and
57:51 - open this now it says the path we're
57:54 - going to add it this is the name of the
57:56 - script to access it we're going to close
57:58 - it and this should work should
58:01 - unair sometimes if it doesn't work what
58:03 - we can do is close this and play it
58:05 - again or open it and there we go now in
58:09 - my world we have no way of keeping track
58:12 - of the game points so let's add
58:15 - something let's go to our world and add
58:18 - a
58:20 - label this label is just a label it's
58:23 - basically text so if I go to the
58:24 - inspector and add text I can write a
58:27 - bunch of gibberish but that's not what I
58:29 - want I want to create a script onto this
58:33 - and we're going to say self. text is
58:36 - equal to string because I'll explain it
58:40 - in second global. points because we have
58:44 - to convert this points into a string
58:47 - because this is actually an integer and
58:49 - text is a string we cannot set a string
58:52 - with a integer it has to be a string
58:56 - okay so this should allow us to show how
58:58 - many points we have so let's
59:00 - play and we see on the top left we have
59:03 - the
59:03 - points and every time it pass to the
59:05 - pipe increases the point and if I die it
59:08 - should not increase the point and that's
59:10 - it all right that is pretty much the end
59:13 - of this season series I hope you enjoyed
59:15 - it and I'll see you guys congratulations
59:18 - you have finished this video the mini
59:21 - course if you guys enjoyed this course
59:23 - or little video I made um please
59:26 - subscribe uh share the video with your
59:28 - friends or other Unity developers that
59:31 - have not transitioned yet um what else
59:34 - if you guys liked my content um I'm
59:37 - going to be working on a course coming
59:39 - up soon is going to be a really really
59:42 - big course consisting of not only how to
59:45 - master good D but also game development
59:48 - and getting started in game development
59:50 - um it is not out yet most likely it's
59:53 - going to take me a while to get it out
59:56 - however if you would like to support me
59:57 - on that and my development of that
59:59 - course um I would appreciate it to
60:03 - either support me on patreon or I will
60:05 - have a Kickstarter soon so please
60:07 - subscribe to stay updated on that um
60:10 - also join my Discord which will also be
60:12 - in the link down below again
60:14 - congratulations for finishing this video
60:16 - it was pretty long um hopefully you can
60:19 - continue on with this project and build
60:22 - on it and who knows maybe you can
60:24 - release it probably not because the
60:26 - assets are you know flppy bird but
60:30 - that's okay I hope you enjoyed making
60:33 - your first game in good d

Cleaned transcript:

in this course you'll learn the basics of gdau for game development this course is perfect for Unity developers transitioning to gdau but it will also help people who are new to game development in General Omar Zaki teaches this course he is an experienced game developer and has created many popular good old courses you'll learn how to navigate the interface and build a simple Flappy Bird game hi my name is Omar and I assume most of you guys at least close to the update of this video are here because of unity um a lot of you guys are quitting unity and have decided to pick up gdau and so I have made this video lengthy video it's about an hour long to help you transition into gdau this video is not how to become a game developer it does cover some basic topics of game development however this video is mainly focused on introducing you to the gdau engine not GDOT whatever they say it is gdau um so I hope you enjoy and I hope you learn as much as possible from this video this video definitely will not cover most the nodes it is mainly just how to navigate the interface of gdau and how to actually get started on your project hopefully um your transition from Unity to gdau is not too brutal or if you're not even transitioning your just picking up gdau and want to learn game development this is the right place for you this again is a complete beginner video just how to pick up gdau so I hope you guys enjoy this video and I will see you at the end of the video our first step is going to be to get familiar with the gdau engine and actually making sure we have all the assets we need so here we have our Flappy Bird assets and we also have the goo engine uh executable file so here here was my Z file for that I'm going to delete that I'm going to extract this we have our file here I'm going to delete this we're going to launch the gdau executable we're going to create a new project I'm going to browse it and put it in my desktop going to name this fory bird YouTube tutorial here on the left we have three different kind of renderers now for 2D usually I use compatibility for 3D you would most likely want to use forward and mobile is well for mobile for very less Advanced 3D Graphics um as you can see there's a little uh description of what everything does so let's select none for the Version Control because I'm not going to put this on GitHub I'm going to now create folder because we see here it gives me an error and is telling me to create a folder now I can create an edit and here we have our fresh project project now let's take a look at our interface here on the left we see we have the file system this is where all the files that we create with scripts and scenes and anything else will appear this is also where we will be importing our file soon on the top left we see create node now this will change in a bit however this is where the node structure will generally be this is where I edit and change my scene we can also see the import tab is also on the top left and we have a few other uh settings on the top above that now in the middle as we can see a giant screen we see the project tab this is where we see the actual scene and on the top right above that we can actually change it to 2D now on the right hand side we have inspector node and history this is the inspector but it's also Al the property panel usually so when I change a node or an object in my game the properties will be on the right hand side on the bottom we have a bunch of other useful things as such as output debugger audio animation and Shader editor there's going to be a few other things that might pop up depending on what node you're using for example tile map or tile set can add an extra thing which we will be doing in this video output is usually for things like print which we will also be looking at in a bit all right so at this point we want to actually import all our assets so we're going to minimize the screen like this and we're going to find our folder so here is our Flappy Bird folder assets all we have to do it's really easy we just take it and drag it into our screen if we make sure we select this drag it and put it into our folder it's going to say res we just drag and drop it and it should import now we might instantly see a problem now the first problem we see I'm going to drag one of these pictures onto my screen it's going to turn into a Sprite on the top left here we see the icon for the Sprite and if I select it by clicking it on the right we see that it says Sprite 2D now if if I zoom in we can see it's kind of blurred so in order to fix this we have to change the properties of this now what we can do I believe in texture sorry here we go in the texture property we will go to the filter and select nearest now if I zoom in we can see it has become pixelated however I don't want to do this every time I import and or add a Sprite so we're going to set the default now here by default if we actually reselect this and click the loop it'll say inherit now what does inherit mean inherit is going to inherit the default project settings now if we go to the top left and click project settings or project we see project settings if we click that we'll go to down here we can actually just search up fil filter and we should find rendering Textures in the textures we'll find default texture filter at the moment it is set to linear we want nearest we close this we now see if we zoom in it has become pixelated and the filter on the right did not have to change now the advantage of this is if I delete that and add another uh PNG we can see that it is proper ly pixelated and not blurry well the background is blurry but that's just how the background is so I'm going to delete this and now we have imported out our assets and we have set the project setting now let's go back into our project settings and we're going to actually change the window so let's clear the search we'll go to window display on the left and we're going to actually switch this to divided by 3 and then divide this by three and then we're actually going to switch these so this is going to be 384 and this is going to be 216 so let's make sure we have these and on the stretch we're going to go to the mode and keep it as viewport and then aspect we're going to expand and now we'll close this and now we see that our blue window has changed now this is essentially a camera if I were to play nothing's going to happen cuz we don't even have a scene yet but we'll actually do that right now so let's go to create root node we'll create a 2d scene because we want a 2d game we need a 2d node as the paper what that we draw on essentially this is going to be a piece of paper that we actually draw on and add Sprites and nodes and other things to it so let's contrl s to save I'm going to name this file world and we see that it is saved as a TS CN this stands for scene we also see here that it's going to be recognized as other things but we just need it as tscn we'll save this and now on the left we see world. TCN has been saved and if I click it this opens right it's already open but that's okay now if I click play run project or F5 we can select or select current select we'll open this folder and we can select this to open it and now we see our folder or our screen is right here now if we want to change the actual size of that screen that just appeared we can go back to project settings and instead of switching the viewport and width we're actually going to select advanced settings and here on the bottom below the viewport width I'm going to copy this and here under all the way at the bottom we see window width override now this is going to be overriding the actual screen we see this is essentially the pixel size that we see and play with in our screen so make sure we take a look at the top right here we see that this screen is approximately 250 technically it's 216 that's what we set it to however if we go to the window width override and multiply it by maybe two and then go to the height width override and then multiply this by two we now have these settings and if I click close this did not change however if I click play our screen is now a lot bigger so that's all the override does if you were making a mobile game for example this would not matter because on a mobile game the screen will automatically resize to the Android screen you have or the iOS screen on Windows this matters more because that is the window that we actually play on now I will let you play around with these values do whatever you like but these are the settings I'm going to work with now one additional thing if you accidentally select a different scene to play automatically here we have run project this will play the project completely from scratch from the very first scene now let's create another scene let's create this scene just for the sake of having it so I'll save this as node 2D if I right click this H here we go now we have this that says set as main scene so now if I play it looks the same but it's now going to be running the node 2D instead of the world and I I can actually confirm this by going to the left when I play I See remote and local local is the local things that I edit the remote is the live version here we have root and it also says node 2D we can confirm this by saying by hovering it and it says instance node 2D it shows us the file path now this is because we have set this to play this on the main now I can stop this by clicking this on the top right or by clicking f8 now I'm going to close the node 2D go back to my world and now I'm also going to rename the node 2D to world all right let's get started in actually creating something so the first thing I'm going going to introduce is something called rigid body 2D now in order to add objects into our game unlike Unity or some other engines you might have used everything is already essentially preset now in order to add that specific object you want we go to the top left under scene and click this plus button or contrl a now we have this window that says create new node and all these nodes are essentially objects here we can see the node 2D and it's actually organized quite nicely most the things that are 2D will be under the node 2D if I click this I can see a bunch of 2D objects now instead of just looking through all this I'm just going to use the search bar I'm going to search up rigid body now if I click the X it doesn't select it so I'm GNA actually find it for the sake of introducing just bodies here we go it's in the Collision object 2D so here in the Collision object 2D we see that we have physics body 2D we have static body character body and rigid body 2D now rigid body is used for things like balls or things that need physic uh physics simulation right so I think the classic example is a ball because a lot of engines like to compare those kind of uh physics and I will just say right off the bat if just in case you are from Unity one of the main differences that at least I'm aware of of the rigid body 2D in good and just not even 2D but just rigid body the 3D as well versus Unity is that the rigid body in uh gdau actually Sim simulates a real ball so when you drop a real ball generally it has momentum and it stops eventually whereas in unity the ball will keep bouncing to the same height whereas in goo it'll eventually stop and get to the ground essentially now we're going to create this by selecting the rigid body 2D and create now here on the left we see rigid body 2D but we also have an air on the right now if I hover this it's going to tell us we just need a collision shape so let's do that let's control a or add a node and we're just going to search up Collision shape now we have a lot of collisions we need a collision shape 2D Collision polygon can also work but Collision shape is a little easier so let's add that now let's zoom in to this point because that's where it is we can see it by either hovering or just selecting it in general it's already selected now if I give it a shape on the right I'm going to select a circle shape because my bird is going to be a circle now we can see there's not really anything here so let's add our player so let's go to the left on our files and add our player so we have three birds we can add from I'm going to add the red one we can see that it's automatically turned into a Sprite now in gdau there are quite a few ways to animate things so this gives quite a bit of flexibility in how we want to do things so we can either go to animation here and type in the H frame 4 if we do that it'll take the frames that we had and turn it into this now there's something called animation player which I'm not going to get into but that will it's actually a very powerful tool in gdo that helps us animate various things so if I wanted to animate from 0 1 to 3 for frame it could do that however I'm going to do an E easier method and I'm going to use something called animated Sprite so I'm going to go to my rigid body select my rigid body I'm going to add a node and search up animated Sprite we see animated Sprite 2D let's create here it's basically telling us we need to create a Sprite frame so on the right let's go to Animation Sprite frames new Sprite frames click this and here we have a new selection on the bottom that says Sprite frames now here it says default but I can double click this and rename it to fly now here it's already automatically looped but here we have no frames so let's add some stuff now you could drag and drop but this adds a frame this is frame zero that's not exactly what we want so let's delete that what we want to do is we want to add these four frames into this as separate frames and luckily enough good can do that if we click this rectangle but button little thing we'll find that this pops up and we can find our Sprite that we want to add I'm going to do the blue one actually and if we zoom in by holding control and zoom in able to zoom in and on the right side used to actually be on the top but they changed it so it's on the right I actually don't like that I like it on the top but that's okay we're going to go to horizontal and select one nope sorry four and then vertical we'll do zero or one so now we can select all these and we can see that the numbers actually correlate to the order so if I did this it would be a different order now we can just unselect it all and then select all and it'll do it like that that's probably a bit easier so select all on the top or select none and then select all so make sure we have select all and we add all four frames and now we see all four frames have been added now I can play test this by just clicking this play button and it automatically loops now what I'm going to do is I'm actually going to automatically play this that way it plays on when I play the game now if I run the project nothing is really going to show up so what I'm going to do is I'm actually going to take my rigid body and I'm going to move all of it by instead of clicking and dragging you can see here I've only moved the Sprite what I can do is either there's a lot of options I can either take these two by holding one of them and then shift and selecting the other or control and then I can lock it and now I can select my rigid body or if I don't want to do that which I usually don't I can just select my rigid body I can click this guy the move mode or W and now I can just move the rigid body from anywhere it's a lot easier to move things around now if I play again nothing that's very interesting let's find out what's happen happening most likely it's just falling before we can even see it so let's go to the remote and see what's happening oh I see what's happening we're not playing the correct thing so let's make sure we select this as the main scene and I'm going to delete the other node that I made there we go there's our birdie and as we saw it automatically Falls it has its own builtin physics and gravity that it just automatically Falls we can find it by going to the by selecting the rigid body 2D and going to the right side with the properties panel we see linear and angular velocity we're going to actually play with both of these in our script in a bit so I'm going to unselect those we don't want to select anything here we see the transform this just shows us the position rotation scale and skew skew is actually new in gdau so if you would like to play around with that you can see what it does it's kind of interesting but I'm going to leave it at zero um um we're not going to really play them around with too much so now what we're going to do is we're going to actually add a script to our bird so let's actually rename this to bird then add a script as you might assumed the script is up here on the right or on the left sorry with the little paper thing that says has a plus button if I click that it'll prompt me to attach a note now there's a few options the language I could change before there used to be um don't remember what it was called but it was like another GD thing um but either way you can also I believe import C into gdo um I don't know how to do that I've never tried it I've never done it but there are videos out there that you can find that will allow you to do that if you prefer C over GD script now I will give a not warning but I guess just a general knowledge thing is that GD script is basically python if you know python or if you have an inkling of what python how python works you'll be fine GD script is very similar to python it's essentially the same but GD script just has its own builtin functions which is very useful which we're going to be taking advantage of now we see here the inherits this will actually see what this does in a minute when I create this but what also matters is the template and the builtin script template is actually new which is cool there's no template real template for the bird or the rigid body however for some other nodes there are some templates but either way we're going to leave this as node default for the builtin script this if I select it essentially I cannot find the script in my files it is a builtin script into this node usually that's not what you want to do because if I create this let's create it here we go if I hit control shift f I can find anything in my file so for example let's say rigid it will now show me on the bottom the find rigid and it'll show me the things that have rigid in it now if I had made it built in so let's actually take this out and delete this script if I do the same thing make it built in and let's go to output and then say rigid nothing shows up because it's builtin it's a builin script that we cannot search through our files so let's make sure that we have it not built in and create and here we have on the right left as well we have an unsaved thing this is just the the other builtin script it's a little wanky sometimes but we're just going to use this all right so in our script we want to take a look at the code that we have so far because right now it's not much but what's Happening Here is it's going to extend the rigid body 2D which is basically a class which is rigid body 2D that looks like my headset is low but I'll charge that in a minute here we have two functions the ready function it's called when the node enters the scene and we have the process function which is very useful but we're not going to use that just yet we're going to create a new function called function input event this is a function that checks for any sort of event so if I print the event and I go to output on the bottom left and I play my game and I start moving my mouse or even clicking a button on my keyboard anything this is any sort of event now the question becomes how do I specify this to a certain type of thing well I can say if event is input event Mouse button then we'll print the event now this is what this is going to do is if I restart the game it will only take something if I click even if I move my mouse it won't input that because that's not a mouse button it is a motion so if I actually control and left click on this it will go bring me to the input Mouse button um document and I can even click the online document I won't now there's also the search help and we can kind of look at what this stuff has I'm not going to I'm going I already know so I'm going to teach you so when I look in my game let's restart this if I left click we see that the button index is one and the button mask is one and zero that means I click down so if I click down once and then release the button mask is zero if I right click the button index is two so now we can actually check for which button I'm clicking on my mouse and I can do that by saying if event. button index is equal to one so we're taking the event and looking for a property button index is a property of the event so the event here is the thing that I printed so this is the entire event but I only want the button index and I do that by saying button index similarly we can do event Doods or press or anything else you can even check the position by doing event. position okay so now we want to add linear velocity to our player every time I click now how can I do that well there's something called linear velocity however you'll see in a second so if we want to change the Y maybe let's subtract 150 so in Gau when we add or subtract to the Y y AIS the Y AIS is actually negative in the upwards Direction so if I look very closely on the left we can see that this says 50 here and if I go up a little bit this says 50 so I want my bird to go upwards when I click and I do that by subtracting 150 now let's try this oh that's a little weird that's not exactly what I want so what we're going to do is we actually setting it like this is very strange now every node not every node but most nodes have a a builtin function for these type of things now this one is set do linear well set linear velocity to this velocity now I can't just pass through ay I have to give it a vector 2 so Vector 2 is just an x and y coordinate now the X I don't want it to move in the X Direction because that's right and left I only want it to go upwards of 150 now calling self is the same as not calling self so if I do this it's the same as saying self dot I just like to get into the habit of doing self Dot and then the function just so it's a good habit so that way you see what all these things are doing to what right so now we know that we're setting the self to the linear velocity now if I play we can see we have a little bit of jump it's a little better than it used to be now to make this a bit more fun we're going to do the same thing but we're going to say set angular velocity to negative maybe let's change this to negative one and see what that looks like and now you can see our bird is kind of flipping I think I'll keep it tog3 so it's a little quicker now we can see our bird is flipping like that so it looks a little cooler okay we also you also have the option of playing the fly animation only when you click so to do that we can go to our animated Sprite make sure it's selected we have it here on the bottom we're going to turn off the autoplay and we're going to turn off the loop now what we can do is we can take our animated Sprite and drag it into our script and it gives us the path to our script now what does this do this essentially gives us access to the animated Sprite so now what I can do is I can call something from that and I'm going to say play Fly it's going to play this animation for us now we see that there's a bunch of other properties that I could put but I'm just going to leave it as fly this will work fine so now when I play my bird is not doing anything and it's very subtle but now he only plays the fly animation when I click cool all right now we've learned how to animate access animation Sprites we've learned how to change properties now we're going to edit our scene a little bit let's go to our main scene and I want to add something called a parallx background which is up here parallx background we're going to create this and what is this well it's basically a parallx background layer so let's add a another node and we're going to add a parallx layer now let's take a look at how this works if I take my background I'm going to add this one take this background transform it to 1.5 to move it down a little bit and in case you're wondering if you want to turn on or off the GD snap which is useful you can easily do it with shift G or this guy right right here all right so I'm going to move this in the middle and I don't want this to move so I'm going to put it right there Above The Parallax layer now in the layer we're going to add something we're going to add our pipe to see we're just going to add this guy just to test it now you see when I tried adding it it just added it over here in the world we want to move this to be a child of the Parallax layer all right we now have a pretty complicated setup on the left we basically have the parallx layer a child of the world which is fine because we are playing in a 2d world we have the paralic background which is a parent of these two nodes and the parallx layer is what we're going to use to move so let's go to our parallx background and we're going to add a script we're going to have it built in and you don't have to make it built in but that's so it's up to you we're going to edit something in our process function we're going to change the scroll base offsetx and we're going to subtract scroll speed times Delta now what's scroll speed well we have to give we have to give that variable like into existence because it doesn't exist so let's say variable scroll speed is equal to zero now in Gau variables are just called variables now if I want to specify a specific variable to a type here right after I think it's here let's find out together we can say int like this and this will specify that it's an integer now either way it doesn't really matter because gdo is actually smart and will automatically kind of assume what this type is so here when I just say equal to zero it's automatically assuming that it's an integer now this is nice but I'm going to add something called export we're going to to export variable scroll speed now what does this do well if I go back to my 2D scene and I click the parallx background and I look at the properties well now I see it says builtin script and then right below that it says scroll speed and now I can change that to 50 or whatever number you'd like now if I play our background is moving the parallx background is starting to move which is great that's really cool so this is pretty neat one more thing that's usually used in parallx background is called mirroring now if I want the same background to show up I can mirror it by maybe giving it 100 usually you want to give it the same number that is this one so 26 zoom out and now if I play it should duplicate so forget the bird we don't need him have that one that's the second one and there we go there's our third one right even though we didn't draw a third one it is now showing up in our game right and it's going to keep mirroring forever so that's very useful but that's not exactly what we need but it was a good thing to see what this is now let's delete this parallx layer and we're going to add something called a tile map now gdau is actually pretty unique in their tile map because it's really it's a really power ful tool than not many other engines have so in our tile map we see tile set on the right side up here it says empty so we're going to click it and give it a new tile set now on the bottom we have tile set and tile map in tile set this is where the editing happens any sort of editing to my tile map is going to happen here any sort of application that I actually put into my game will happen in the tile map hopefully you understood that if not that's okay we're going to learn this with an example so clicking our tile set on the bottom we're going to take the tile style one because this is the ground and we're going to drag this in we're going to click yes and we're going to scroll down a little bit and we're just going to take a look at here now the do 4 I actually just changed this so it's a little I don't know if you want to call it easier or harder but it's really cool so pay close attention we're going to go to the top right we're going to click tile set on here we're going to click this tile set now this these new properties will show up and we see physics layer and a bunch of other things the only one we're going to focus on right now is physics layer we're going to click add element and this has basically allowed us to create a physics layer so now we're going to unel select that and close this we're going to go back to our tile set because remember if we want to edit anything from our tiles we have to do it in the tile set right so now let's go back to paint actually I'm going to give a quick demonstration as to why we need to do this let's go into our tiles into tile map so make sure we're in tile map and we see tiles here we can select a tile and now we can just draw now okay if you have move mode selected it won't allow you to draw you have to have the select mode selected and now we can see the tiles right there so let's draw along the map and let's maybe put this one now we can also paint or use a rectangle like this to make it a little easier or quicker will make this easier for us now if I play what's going to happen well my player just fell right through that's not what we want we want an actual physics layer now in my tile set again we're going to go back to the tile set we're going to go to paint paint properties and we're going to select the physics layer right here we have physics layer now if we did not create that physics layer you will not see this if you did not see this physics layer please go back you missed a step okay so let's click this physics layer and now we have some things here let's drag the up a little bit so we see everything now here it's actually very neat because we can specify the physics um layer for all of these tiles now I'm just going to select all of these because it doesn't actually matter but for future reference you can actually change these points and change the Collision see that very cool so I'm not going to go too much into detail about tile Maps there are I actually have a relatively good video on tile Maps it's about 23 minutes long and you can check it out is I it's in my channel somewhere you can find it um but um there are a lot of tutorials on to Maps so we're going to just do this and let's play Let's see what we have now bam he hit the floor but we can see that there's a little Gap why is that happening I want you to try to take a guess as to why this is happening so pause the video and try to figure out why there's a little Gap there hopefully you've unpaused well if we scroll down into our bird we see that the physics layer of our bird is this big so it it's working how it should so if we select our Collision map shape we can see here if I try to drag this up and down it's not working very well and that's because we have the grid snap turned on so let's turn that off by clicking shift G or just clicking that and let's pin this down to fit our bird properly cool so now when I play it works as it should awesome all right we now want to add a way to detect if we hit the floor or the pipe in the future so right now we have the tile map called tile map we're going to rename this to walls this is going to represent the walls or the the floor in fact actually I'm just going to rename it to floor I don't know why I renamed it to wall but FL is probably more appropriate now in our bird we're going to add a new node called area 2D so if I add a new node add this node called area 2D and now it's part of our bird and then we need to add a collision shape which we can actually find in the recent as well or you can just search it up whichever one you prefer now we see that it needs a shape so let's actually Zoom in here because this is important when we play with area 2DS with Collision shapes with the actual body or rigid body if this area 2D is smaller than this Collision box or the same size I believe it becomes inapplicable and it basically can't detect anything so you have to make sure the area 2D Collision is bigger than the Collision shape of the actual rigid body okay let's zoom out and now in our area 2D we're going to go to the top right we have inspector and then something called node now node is where all our signals will be there's also something called groups but there are a lot of videos about that and you can check that out groups is uh completely separate from not from signals but we don't have to worry about it right now we're going to focus at the signals in general so let's take a look at what sort of signals exist first of all it's important to note that these signals here are all specific to the area 2D these are builtin signals or functions specific for area 2D now there are other signals that are general for other things like node or canvas item or Collision object or object on the bottom and in fact if we go to our bird and select this bird instead we see there's different signals but these are all the same that's because they all inherit the same type of node now let's go back to our area 2D we want to connect a body entered this will basically look for anything with a physical body you can see you can read it and it says tile map in there so we're going to double click this and if it'll actually automatically prompt us to select this the script of the bird now if it prompts you to select something else we make sure that it's prompting us to send the signal to the bird let's connect connect it now we have this signal so what is a signal what what is this thing well when this bird and the area 2D specifically the area 2D hits anything the signal will proc whenever a b body enters whenever a body enters this area this signal will proc and basically get and say hey something happened right and what do we want to do well first let's print the body let's see what it says let's print the body. name because the name is actually a property so here we renamed it to floor it should print floor if we hit the floor so let's play and see what happens ah so it says floor and bird but why does it say bird well that's because the area 2D actually collided with the Collision shape as well so what we're going to do is we're going to add a if statement that says if the body. name is equal to floor then we're going to Q free this is basically going to delete our player our bird oh there he goes he got deleted cool we have a relatively somewhat working game with no pipes and we can stay alive and it works pretty well and if I hit the floor I die all right so let's start adding some pipes because well this isn't fun without any pipes right so let's take a look at how we're going to add this pipe well I want to actually add a new tile map and in this tile map we're going to go to the tile set new tile set click this go to tile set here and we're going to add whichever pipes you want there's this one I'm going to add this one and there's also this one which you can add I suppose I don't know uh actually I'm going to add the bottom one because I think that's the one I used in my reference so I'm going to go back here and delete this by clicking this and now I have the pipe style actually one more time it should now one thing I will say is you will notice the ID changes and this is important for later but at the moment I'm just going to make sure that the ID is zero to stay consistent okay now we see here that the tile set is a little weird it's a bit different now what we want to do instead is we actually want to change the X and Y texture and we can do that by going down here and typing 32 oh no sorry 32 for the X but 16 for the Y and now we can select this entire thing we also want to do the same thing for the tile size up here so we're going to say click 32 now we can select a tile like this now let's go to tile map and add it we can see that we can actually add a tile right so I can do this can delete it by right clicking let's add a long pipe here that and we can do that and now we have a pipe let's also add a physics layer now I want you to try this remember how we added the physics layer and added the Collision so I want you to pause the video and try this and give it a try P an element tile set we're going to go to paint physics layer we're just going to select all of these you can see here that we can even edit it here I'm not going to care too much about the tiny Collision here like you could do this if you'd like if you are very specific about it I guess I just did that but yeah so you can do that and now the is very specific all right so now we have this tile map that doesn't move right because if I play it just stays there now usually you would think that we want the bird to move forward but what we're actually going to do is we're going to rename this to pipes and then we're actually going to attach a script to this we're going to not make it buil in this time let's create it and in our process function we're just going to add something very simple we're going to say positionx minus equal 60 which is basically speed time Delta now let's go back to our 2D script or 2D scene and play now we see that our pipes are moving it looks like our bird is moving towards the pipe but the pipe is moving towards us and I collide with the pipe now what we can do is go back to our bird and add I want you to try this add a check to see if you can destroy the bird when you hit a pipe pause the video give it a try and unpause when you're done or confused all right so all we're going to do is I'm going to duplicate this and type in pipes now when I play and I hit the pipe my bird goes away cool so in our script we actually want to randomize this now how can we randomize this well I have created a relatively complex script that you probably shouldn't do but I've decided that I'm lazy and I don't know I just like doing it this way so let's um take our pipe and we're going to actually Save branch as scene nope wait yes yeah I was right okay we're going to save the branch of scene and now this thing appeared says open an editor but what is that what does that mean well what we can do now is we can actually take this and delete it now don't worry it's not gone we've actually have it over here now in our pipes we can see that we have our pipes but over here it's not here so first of all we want to be able to spawn in these pipes and then we also want to randomize the Gap essentially now let's look at the randomization first because that's a little lengthy you don't have to understand the code too much but basically first of all we have to Let's remove the tile set or the Tom up here let's go to our tiles or pipes now we're going to randomize this in our ready function so first we're going to say set the top pipe and then we're going to create a random variable between 1 and 15 and we do that by saying variable random range top is equal to Randy range 1 to 15 and then we're going to for Loop in range of Randy range top now I'm going to show you another way to for Loop but this is one way and then we're going to do something called set cell this is going to set the cell on our map with a bunch of these numbers now what do these numbers mean well let's take a look so if I say set cell sorry about that we have a bunch of inputs we have layer coordinates Source ID and a bunch of other things now if you want to understand this more in depth again I have a really good video about this on on tile maps that you should definitely check out TI maps are a bit I wouldn't say complicated but a little more advanced and it can get very difficult to wrap your your head around it if this is your first time using it but for the sake of getting this to work we're just going to copy the code over and this will set the bottom two cells and then we're going to set the bottom pipe as well by doing this now in this for Loop we are not saying in range we're just saying in 15 okay we have this code if I play oops I have to play from the pipes I want to check the pipes if this works now how can I do that on the top right there's run current scene this will allow me to run this current scene which is called pipes so if I touch click that we now see this awesome we now have a randomized pipe let's stop and then play again to see if it is randomized it's a little different cool it's very different okay so we see that this works if you would like to try to understand it I would give you kudos for it um however I'm not going to go through the logistics of this again I have a lengthy video about tile maps that explains most of this it's pretty neat and it's uh on isometric tiles as well which is a bonus but it works relatively the same so let's go back to 2D let's go to our pipes we're going to close this for now we're going to go to our parallx background make sure this is selected and we're going to add a new node called timer in this timer what is this timer thing that we just added well it's literally a timer it will just start whenever we want it to in fact there's a property on the right that says auto start I can click on and this will automatically start it when I load this scene now I'm going to explain to you what we want to happen and I want you to give it a try we want to connect a signal from this timer to our parallel background script and then we want to spawn our wall now let's go look at our script and create a function called Funk spawn and I'm going to help you create this function and then I want you to try to spawn them in yourself now in order to spawn something that is from a separate scene I I think it's a little easier than Unity we do something called on ready variable wall or we'll change it to pipe and then we're going to preload it we're going to say preload and then give it the path now what is this path well this is the path of the pipe well I called it wall in my reference but here it's pipe so if I take the pipe that I just created and then I drag it into this preload it will give me the path for it alternatively you can also right click the pipes and there should be copy path control shift C now in our function spawn we're going to do something called variable wall temp and then we're going to create make it equal to the pipe. instantiate and then we're going to say add child because instantiating it doesn't actually add it to our Scene It just creates the object now we're going to add the child into our scene and that is it that is it for the spawn now I can spawn it in the ready function for example let's create let's do this and let's see what we get well there's our first pipe but we want it to keep spawning pipes right so how do we do that well hopefully you figured this out by now but in our node on the top right of our timer we click this and there's a node signal called timeout and you can see here that it's trying to connect it to our bird but we don't want that we want it to connect to our parallx background script so let's connect that to our paralu background script connect it and we're going to call the spawn function when the timer runs out now let's play and see what we get well there we go now we have a bunch of pipes o that's not exactly what I wanted well let's go to our parallx background go to our timer inspect and first of all let's change the weight time now the question is why did the bird not get deleted when I hit it well because let's actually play and I'll show you why we can look to our remote and we go to our world paralex we can see it's we have pipes but then it's adding a bunch of other things that just says tile map so I have 1 2 3 four five whatever well that's not what we want we want to make it equals the pipes so let's go back to our parallx background and we're going to take our wall temp and we can actually take the name which is a property and rename it to something we're going to rename it to pipe now or pipes now this might work let's play and take a look in our remote section doesn't seem to work now why is that the reason why it wasn't working is because in our pipes we were renaming it every time to the same thing but it wouldn't do that because we already had one that existed with the same name so what's an alternative well we're going to use something called in but first of all we're going to create something so in our pipe script we're going to create something called variable wall or uh we'll say yeah we'll say wall now we're going to save this we're going to go to our bird script and in here what we can do is we can say if wall I think it has to be capitalized yeah it has to be the same so let's actually make this lower case and then we'll make this lower case as well we'll say if the wall is in the body then we can Q free now now we can delete this first of all but this is basically checking to see if the property is in that wall that we or the body that we just collided with so let's play and now it should work relatively fine let's test this one more time by going to the second pipe and there we go all right we are almost done we just have a little bit more we're going to create something called a global script now how do we do this well first of all let's create a new script we can we have two options we can either go here right click oh I guess they removed that I think we can go to file and say new script or contrl n or we can go to the res file on the bottom left create new and create new script we're going to create something called game or Global and in this Global we're going to remove all this and say variable point we're going to set it to zero this is the points that our player is going to collect now in our pipes we're going to create an area 2D that is going to ding or give our player a point every time we hit it so let's create this and add a collision shape now how are we going to make this work well it's actually pretty simple we just have to create a long rectangle we're going to move this all the way to the right where the pipe should be and we're going to make it relatively skinny now we're going to go to the area 2D and say if body entered connect this and we'll say if bird inbody body. name because the bird is not a variable but it's the name of our Bird right so now let's go back to our pipe and we're going to say Global do points plus equals 1 however this should error there we go not declared in current scope now how do I make this Global how do I access the script from this script well on the top left we go to our project settings this should open up autoload we go to autoload right here this is where we can autoload or globalize scripts or even scenes so if I click the folder button this guy will pop up and you can see I can actually select the scene too however we're just going to select the global script and open this now it says the path we're going to add it this is the name of the script to access it we're going to close it and this should work should unair sometimes if it doesn't work what we can do is close this and play it again or open it and there we go now in my world we have no way of keeping track of the game points so let's add something let's go to our world and add a label this label is just a label it's basically text so if I go to the inspector and add text I can write a bunch of gibberish but that's not what I want I want to create a script onto this and we're going to say self. text is equal to string because I'll explain it in second global. points because we have to convert this points into a string because this is actually an integer and text is a string we cannot set a string with a integer it has to be a string okay so this should allow us to show how many points we have so let's play and we see on the top left we have the points and every time it pass to the pipe increases the point and if I die it should not increase the point and that's it all right that is pretty much the end of this season series I hope you enjoyed it and I'll see you guys congratulations you have finished this video the mini course if you guys enjoyed this course or little video I made um please subscribe uh share the video with your friends or other Unity developers that have not transitioned yet um what else if you guys liked my content um I'm going to be working on a course coming up soon is going to be a really really big course consisting of not only how to master good D but also game development and getting started in game development um it is not out yet most likely it's going to take me a while to get it out however if you would like to support me on that and my development of that course um I would appreciate it to either support me on patreon or I will have a Kickstarter soon so please subscribe to stay updated on that um also join my Discord which will also be in the link down below again congratulations for finishing this video it was pretty long um hopefully you can continue on with this project and build on it and who knows maybe you can release it probably not because the assets are you know flppy bird but that's okay I hope you enjoyed making your first game in good d
