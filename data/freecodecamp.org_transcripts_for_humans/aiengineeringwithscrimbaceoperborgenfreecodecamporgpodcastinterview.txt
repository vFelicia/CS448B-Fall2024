With timestamps:

00:00 - [Music]
00:15 - I'm Quincy Larson teacher and founder of
00:17 - freeo Camp each week we're talking to
00:20 - developers entrepreneurs and ambitious
00:24 - people who are getting into Tech and
00:26 - today we are thrilled to welcome PA
00:30 - borgan great to be here yeah and and uh
00:34 - we are so excited to have you here of
00:36 - course per is the founder of scrimba he
00:39 - is a software engineer turned Tech
00:42 - founder uh who's gone through like y
00:44 - combinator runs a very popular website
00:47 - uh that teaches coding we published many
00:50 - of those courses on the free code Camp
00:53 - YouTube channel and I'm just thrilled to
00:56 - sit down and talk with you because we've
00:57 - never had you on the on the podcast yet
00:59 - after more than 100 episodes so it feels
01:03 - like a bit of an
01:05 - Omission yeah also just note that I'm
01:07 - recovering from like a pretty serious
01:09 - cough that had me like completely
01:11 - debilitated for like a week so if I have
01:13 - a coughing fit or anything uh just know
01:14 - that I'm fine I'm just Echoes of my
01:17 - previous Illness but um per where where
01:21 - you are are are you over in Oslo right
01:24 - now yes we are based uh here out of Oslo
01:28 - where the founding team is from and and
01:30 - where yeah we all live awesome well I'm
01:33 - very interested as an American uh in you
01:37 - know I'm I'm from Scandinavia originally
01:39 - my family came over from Sweden which I
01:41 - know is different from Norway but uh I'm
01:44 - I'm always very interested in in that
01:45 - kind of region you know the land of
01:47 - Vikings and uh I know that Norway is a
01:50 - very small country but it's a it's a
01:52 - very influential country on the world
01:54 - stage and it has a ton of natural beauty
01:57 - so I have to ask what was it like
01:59 - growing up in
02:01 - Norway so uh I'm from the capital uh
02:04 - Oslo uh from the city so to be honest I
02:08 - don't I I I never really went to the the
02:11 - most beautiful places uh until I was uh
02:14 - an adult or not not not much at least
02:18 - but uh of course it's it's a great place
02:21 - to live uh good uh good good system uh
02:25 - welfare system but but with freedom as
02:28 - well and with uh skiing and nature and
02:33 - yeah great place you should you should
02:35 - come and visit us awesome it's
02:38 - definitely on my bucket list of places
02:40 - to visit uh so how would you compare
02:42 - like the Norwegian Tech scene uh with
02:45 - San Francisco in Silicon Valley where I
02:46 - know you've spent quite a bit of time
02:48 - over these past few
02:49 - years yeah so it's um much smaller of
02:52 - course and it's it's quite um it's less
02:57 - ambitious I would say or at least when I
02:59 - started out uh as a founder and like 10
03:02 - years ago or so uh there was a lot fewer
03:05 - startups and every time we I've gone to
03:07 - San Francisco have been been coming back
03:10 - super pumped and and twice as ambitious
03:13 - uh which is a sometimes a good thing
03:14 - other other uh at other times it's uh
03:17 - you want to be a bit more frugal and
03:19 - care about the fundamentals and and the
03:22 - next step and not the big dream so um I
03:25 - think we've kind of with scrim bot tried
03:26 - to struck a balance between being
03:28 - inspired a little bit by the the
03:30 - American ambition and and also by by the
03:33 - like uh down toe
03:35 - uh way of running companies in Norway
03:38 - but it is changing it it's becoming more
03:40 - and more uh International startups out
03:43 - of scan or out of Norway Sweden has had
03:46 - many over the last decades but but
03:48 - Norway's been lagging a little bit
03:50 - behind but it it's it's getting better
03:52 - yeah yeah well Norway of course is like
03:55 - an economic Powerhouse like per capita
03:57 - GDP I think is maybe the highest in the
03:59 - world
04:00 - uh and a lot of that is because you all
04:02 - have all this abundant mineral wealth
04:06 - did uh did you hear about like the
04:08 - discovery of the massive phosphate
04:10 - reserves and some of these other Rare
04:11 - Earth minerals uh I think it was maybe
04:14 - off the coast so so I have this thing
04:17 - right now where I actually don't read
04:19 - the news it's kind of my my New Year's
04:20 - commitment where I try to stay away from
04:22 - the news because it just kills my
04:24 - productivity so I've heard a little bit
04:27 - about it but to be honest you probably
04:29 - know more about it than I do okay cool
04:32 - well that that's interesting so you
04:33 - completely cut the news out of your
04:35 - day-to-day is that like a New Year's
04:37 - resolution yes that what I meant yeah
04:39 - resolution that's the word it is uh so
04:42 - because I just find that it's such a
04:44 - struggle to to stay productive with all
04:46 - the The Temptations out there H and and
04:49 - news and social media being the like the
04:51 - most important ones got to got to kind
04:54 - of make some rules for myself in order
04:56 - to stay away from it yeah I can
04:58 - definitely relate to that uh like I have
05:01 - kind of like tuned out a lot of the
05:04 - election related news here in the United
05:06 - States cuz I already know how I'm voting
05:08 - so it's not going to change anything so
05:10 - uh why spend a whole lot of time like
05:13 - going over the the Gory details of the
05:15 - you know Democratic process um I I
05:18 - realize that that may sound like a very
05:19 - privileged take but um I've got a lot of
05:22 - stuff to do and I can't be following the
05:24 - every uh the every unfolding of all
05:27 - these different uh you know drama that
05:30 - are that are going on I can just read
05:31 - about it in Wikipedia few years from now
05:34 - and figure out what the conclusion was
05:36 - without having to go along for the
05:37 - entire ride so yeah or like watch the
05:39 - evening news or something if a couple of
05:41 - times a week that's more that's what
05:42 - people did back in the good old days or
05:45 - good old it did like 20 years ago and
05:49 - that worked totally F pre social media
05:52 - days yes yeah so I'm very interested in
05:57 - delving into your background because you
05:58 - have a pretty unique background uh among
06:02 - Tech Founders and developers so you
06:05 - actually studied economics in college
06:09 - but then you went and you worked as a
06:11 - software developer for like five years
06:13 - maybe you can talk about how you got
06:15 - into coding and how you were able to get
06:18 - those those first few jobs as a
06:19 - developer maybe you can just kind of
06:21 - give us like an origin story if you will
06:24 - yeah so so I didn't work as a software
06:26 - developer for five years actually it was
06:29 - short than that it was like uh between
06:32 - one and two years after I I graduated
06:34 - from the boot camp and then um I've been
06:36 - coding at scrimba for like the last
06:38 - seven years here and there of course but
06:40 - but now now you go to a boot camp then
06:43 - yeah or it was a free peerto Paar driven
06:46 - boot camp in London so it was like no
06:48 - teachers and just a bunch of people
06:50 - thrown together uh who who um got a task
06:54 - every week like this week you're going
06:56 - to build a blog or an e-commerce site or
06:58 - whatever and it was our responsibility
07:00 - to learn from each other and help each
07:02 - other and kind of uh together build that
07:05 - that Weekly product it's called s like
07:08 - cool kind of what was it Founders and
07:11 - coders yeah I've heard Founders and
07:12 - coders yeah yeah and and that always
07:14 - like struck me because it's it's free
07:15 - and it's it's kind of peer-to-peer based
07:18 - it's very different from the
07:19 - conventional coding boot camp models
07:21 - that we had like in San Francisco for
07:23 - example um exactly so you hung out there
07:26 - with a bunch of other ambitious people
07:28 - who were trying to learn coding and
07:31 - essentially you kind of like selftaught
07:34 - in tandem yeah um I did that and that
07:38 - was kind of coming off the back of uh
07:40 - running a startup that failed uh with
07:42 - with the same co-founder that I started
07:44 - scrimba with a bit later but we we we
07:47 - tried to build like kids apps uh on
07:49 - iPhone and iPad and and books and old
07:51 - fairy tales and stuff like that we we
07:54 - did kids entertainment essentially um
07:57 - that failed um and I felt really almost
08:01 - at the time almost a bit stupid for not
08:03 - knowing how to code I felt like what am
08:06 - I doing in this tech industry and
08:08 - working with products if I really don't
08:10 - know how to like build uh anything or
08:14 - debug anything or fix anything so I just
08:17 - had a a strong urge to to learn to code
08:21 - H and that's so then I went uh to
08:24 - Founders and coders was fantastic and
08:26 - got a job at a startup when I came back
08:28 - to Oslo
08:30 - uh and worked there for uh a little over
08:32 - a year and then cindra and I kind of uh
08:35 - got the band back together and and and
08:37 - did another um startup attempt which
08:40 - just went uh went better yeah absolutely
08:44 - well that that's a really cool so it
08:46 - kind of like your your um I guess
08:48 - imposter syndrome as a Founder who
08:50 - couldn't code compelled you to like show
08:53 - that up so that you can code and of
08:55 - course now you code all the time and
08:57 - you've built out this skill set this
08:58 - developer mindset and actual kind of
09:01 - Hands-On understanding of implementation
09:04 - details of apps to the point that you
09:06 - even taught courses and things like that
09:08 - so uh yeah that's really cool maybe you
09:10 - can talk about your co-founder a little
09:12 - bit like how did you how did you two
09:13 - meet yeah so we met at um coworking
09:17 - space in Oslo when the the startup scene
09:20 - in Oslo was very small so it was a kind
09:22 - of the almost the only co-working space
09:25 - for Founders in OSA at the time and he
09:28 - was um he was working on his own project
09:31 - I was working with the kids books and we
09:33 - kind of realized that his skill set and
09:35 - um our and the business uh we me and we
09:39 - had a third Co co-founder that we had
09:41 - built at the time was very like
09:43 - complimentary so we kind of got together
09:46 - and and started that company and what's
09:50 - interesting is that he's he's a
09:52 - brilliant engineer like the best
09:54 - engineer I've worked with and he
09:57 - actually after uh the first company
10:00 - failed he went off and um worked on his
10:04 - own self-made programming language and
10:06 - started Consulting with his own
10:09 - self-made programming language which is
10:11 - like a terrible idea for the people he
10:13 - consults for because he was the only
10:15 - person who knew how to to write code in
10:17 - that
10:18 - language so he he then needed to um
10:22 - create documentation for that uh and
10:25 - started realizing that writing
10:27 - documentation is really boring so he
10:29 - started recording videos to teach people
10:31 - about this language which is called
10:34 - imba uh but just realizing or just
10:37 - trying to record videos he realized what
10:39 - a bad process it is for both the
10:41 - teachers and the students to record uh
10:44 - coding tutorials because as a teacher
10:47 - you have to like be really careful about
10:49 - setting up your system correctly about
10:52 - editing the video about making sure
10:54 - everything is polished about not talking
10:56 - yourself into a corner and there's tons
10:58 - of like
10:59 - uh adjacent skills that you need in
11:01 - addition to being like good at
11:03 - explaining
11:04 - things and uh once you've done all of
11:07 - that and spent like an hour creating
11:09 - like 10 minutes of of of a polish
11:11 - tutorial it ends up as a video which
11:13 - isn't interactive for the student either
11:16 - so it's it's kind of taken all the data
11:17 - and reduced it to dead pixels all the
11:20 - metadata so it's a bad experience for
11:22 - the student and for the teacher and
11:24 - that's what what made him like hm maybe
11:27 - we can make a coding tutorial in like
11:29 - video based coding tutorials in a better
11:31 - way and kind of rethink it from first
11:34 - principles and he did that and kind of
11:36 - invented the prototype for for scrimba
11:38 - which eventually then became yeah the
11:40 - company we are today yeah yeah and I I
11:42 - remember very early days like that I was
11:44 - just floored by this technology because
11:46 - it I mean at a fundamental level it
11:48 - wasn't anything
11:50 - technologically uh you know fancy it was
11:52 - just like what you said revisiting video
11:56 - from first principles and saying like
11:57 - hey why don't we you know sync up like
12:00 - this HTML with this audio essentially
12:04 - exactly and and for anybody out there
12:06 - who hasn't used scrimba you should go to
12:08 - scrimba and use it and just get a feel
12:10 - for how you press play sound starts
12:12 - playing you know slides can pop up and
12:14 - you can pause it at any point and and
12:16 - the actual Dom is being manipulated so
12:18 - that the code in the code edor editor is
12:21 - editable and you can just click play and
12:24 - it'll just keep going but you can pause
12:27 - it at any moment it it
12:29 - code is like unique in this perspective
12:31 - that like you couldn't do this if you
12:33 - were like having like uh maybe you could
12:35 - do it with like a video game system like
12:37 - where you like sync the video up uh like
12:39 - like speed demo archive like the old
12:41 - Quake demos they were literally
12:43 - coordinate data for where the person was
12:45 - like bunny hopping over and shoot rocket
12:47 - jumping and stuff and you could kind of
12:49 - pause it and you could you could like
12:50 - look around and stuff that's basically
12:52 - like what you did for coding in the
12:54 - sense that coding is just text and it's
12:58 - it's not that heavy and you can just
13:00 - render it in the Dom where it lives
13:02 - JavaScript is like the language of the
13:04 - web right so it's just like a web native
13:07 - I almost consider scrimba more of a dis
13:10 - a discovery than an invention in the
13:13 - sense that nobody thought to do it that
13:15 - way yeah but that's like cindra uh my
13:18 - co-founder he's he's the kind of guy who
13:20 - who really when he sees something broken
13:23 - he just like gets an urge to fix it and
13:25 - and then turn or rebuild it uh based on
13:29 - first principles and I think something
13:31 - you said there which is like the uh the
13:33 - weight of it h is key because a scrim is
13:37 - essentially just some tiny very very uh
13:40 - optimized pieces of data uh that uh kind
13:44 - of describe the changes that are
13:46 - happening in the Dom and makes it feel
13:48 - and look like a video H so so so kind of
13:51 - the bandwidth you need to watch a scrim
13:53 - compared to a video is like two orders
13:55 - of magnitude less which is part of the
13:57 - reason we've seen great success like all
14:00 - over the world in areas especially where
14:02 - the the internet internet access is slow
14:05 - yeah yeah because I I remember that was
14:07 - one of the big selling points of
14:09 - scrimber early on is like it's like 1%
14:11 - of a YouTube video in terms of bandwidth
14:14 - consumption and a lot of that is because
14:16 - video you're you're being very uh I
14:20 - guess uh imperative in the sense that
14:24 - you're telling every pixel what it's
14:25 - supposed to look like and yes there's
14:27 - like a compression algorithm and stuff
14:28 - like that but for the most part you're
14:31 - literally tracking like billions of
14:33 - pieces of data for like a short video
14:35 - right yeah um so it's inherently data
14:39 - intensive whereas yeah audio is a tiny
14:43 - fraction you know especially if you're
14:44 - using like uh like I think we use 96
14:47 - kilobytes for our podcast for example 96
14:50 - kilobit per second or something like
14:52 - that that's tiny that's like uh half a
14:55 - megabyte per minute uh video I mean
14:59 - once you add you and me on the screen
15:01 - and stuff it's probably like closer to I
15:05 - don't know 10
15:06 - megabits per 10 megabytes per minute or
15:09 - something like that at least uh it just
15:12 - dramatically changes it so that was one
15:14 - of the huge killer uh I guess
15:18 - applications for scrimber early on was a
15:21 - lot of folks don't live
15:23 - in San Francisco where they have gigabit
15:26 - internet and it's trivial for them to
15:28 - like watch 4K video on YouTube or
15:31 - whatever right A lot of people are you
15:35 - know putting money onto a phone card on
15:37 - like a data plan so they can you know be
15:39 - able to text and and maybe read some
15:41 - textual articles like Wikipedia or
15:43 - something and make some phone calls and
15:45 - stuff and scrimba is something that is
15:48 - kind of within their budget like even if
15:50 - you are on one of those kinds of plans
15:53 - where where you're paying and and the
15:55 - data prices in some parts of the world
15:57 - are exorbitant but that's it is what
15:59 - they it is what it is right like you
16:01 - have to kind of adapt to that and so
16:03 - scrimba has represented like this huge
16:05 - windfall for people who don't have a lot
16:07 - of data yeah and and just as a final
16:11 - thing uh which we haven't actually
16:12 - leaned into but also which is very uh
16:15 - real is the the the computational power
16:19 - and the and the um the electricity that
16:21 - is used like the the carbon footprint
16:24 - essentially of um serving a scrim and
16:27 - sending it over the network
16:29 - is also a lot less I mean I would assume
16:32 - those two um graphs would scale like
16:35 - like the size uh and and the carbon
16:38 - footprint as well so but we haven't used
16:40 - we should probably have used that in our
16:42 - marketing a lot more but we haven't done
16:44 - that but that so so many so many I
16:46 - remember in the beginning cnra just
16:48 - explained all these benefits and the
16:50 - list goes on like with metadata
16:53 - and yeah the bandwidth the carbon
16:56 - footprint so much so was kind of even
16:58 - though I was a little bit scared for
17:00 - like jumping on a new startup at the
17:03 - time I remember that was kind of what
17:05 - convinced me when I realized that this
17:06 - is just like a fundamentally better way
17:09 - of doing it and if we don't build it
17:11 - someone else I I thought at least would
17:13 - eventually as you said discover this and
17:16 - build them themselves but but it is
17:19 - actually quite quite a lot of difficult
17:21 - technicalities in it like making um a
17:24 - prototype is perhaps not that hard but
17:27 - making it uh polished and work well with
17:29 - the cursor and responsiveness and all
17:32 - that is and bundling and running the
17:35 - projects has has shown to be quite a
17:37 - challenge we spent a lot of time and
17:39 - money U yeah making it work well yeah
17:43 - well I'm you know I'm kind of surprised
17:46 - that like a whole bunch of other
17:47 - companies didn't see this and
17:48 - immediately clone what you were doing uh
17:51 - but I'm not that surprised in the sense
17:54 - that like you think that like there's
17:55 - going to be this really intense
17:56 - competition when you have something that
17:58 - people want but like a lot of big
18:00 - companies and stuff they're just
18:01 - distracted they got all these other
18:02 - things going on and uh yeah like they're
18:05 - going for like I guess more mass market
18:08 - like the audience for people learning
18:09 - the code is relatively small there are
18:12 - only about 30 million professional
18:14 - developers in the world I'd estimate
18:16 - that there are another 30 million or so
18:18 - people that are trying to actively learn
18:19 - to code and um that's not like Facebook
18:24 - or Instagram type total addressable
18:26 - markets right so I think a lot of people
18:29 - just it doesn't occur to them as like a
18:31 - niche that's worth going after which is
18:33 - good you know for you and me because we
18:35 - we can serve those people without having
18:37 - to deal with like a whole lot of
18:39 - competition yeah I I think another thing
18:41 - there is it's very hard for us to expand
18:44 - our catalog because we have to add
18:46 - support for every single thing we we uh
18:49 - we want to create a course on as opposed
18:51 - to a video based platform where you can
18:53 - create courses on anything you can
18:55 - because you just record a video of it so
18:58 - so for that reason it's kind of been
18:59 - hard for us actually to go more into the
19:01 - to the B2B and the Enterprise Market
19:03 - where they have very wide requirements
19:06 - in terms of what kind of clippers and
19:07 - stuff like that we are the niche is kind
19:10 - of yeah protecting us a bit Yeah but to
19:14 - be fair what you're offering is very
19:17 - different from what they're offering
19:18 - because you know to some extent like
19:21 - video courses that have a teacher
19:24 - explaining a concept and maybe have some
19:26 - project that you Cod along home you
19:28 - could argue that that's somewhat
19:29 - commoditized in the sense that anybody
19:31 - can sit down and create a really killer
19:34 - tutorial and publish it on YouTube and
19:36 - get an audience right so but to actually
19:39 - build what you've built which is like
19:42 - very thoughtfully deliberately designed
19:45 - interactive pedagogy that is very
19:48 - difficult you need people that have
19:50 - thought a lot about that or who have
19:51 - like you know a lot of teaching
19:53 - experience and a lot of software
19:54 - development experience who can kind of
19:56 - figure out an optimal way to do that and
19:58 - that's something like to talk about fre
20:00 - go for a second that's something we're
20:01 - very proud of is our core interactive
20:03 - curriculum we we use YouTube as kind of
20:06 - like u a place where we can have videos
20:09 - on every topic but when it comes to the
20:10 - core topics that we think every
20:12 - developer should learn you know the git
20:14 - and the Linux and the SQL and the Python
20:16 - and the JavaScript HTML CSS like we can
20:20 - really take time to build like a
20:22 - deliberate curriculum that teaches those
20:25 - skills in an interactive way and so see
20:28 - in many ways what scrimba is doing is
20:31 - like a different form of interactive
20:33 - than what free C Camp is doing but it's
20:35 - incredibly
20:36 - valuable yeah and I mean free cold cam
20:39 - has been an inspiration for us uh ever
20:42 - since we started giving out courses so
20:43 - yeah the admiration goes uh both ways
20:47 - for
20:47 - sure yeah and I I should point out that
20:50 - that uh you have personally taught some
20:52 - of the courses on the Freo Camp YouTube
20:55 - channel and uh and some of your you know
20:58 - I think Bob zerol yeah is that his name
21:01 - yeah yes amazing teacher like so many so
21:04 - many great teachers coming out of the
21:06 - scrimba camp that are um hanging out and
21:09 - helping kind of essentially take the
21:11 - existing learning resources and Port
21:13 - them to kind of like almost backward
21:15 - compatibility you're back porting them
21:17 - to the old video format but it's still
21:20 - cool to have them in video because that
21:22 - reaches a whole lot of people that are
21:23 - on YouTube and then hopefully many of
21:25 - those people go and do the interactive
21:27 - versions of those courses on scrimba
21:30 - yeah yeah so I have so much I want to
21:34 - talk to you about I want to be mindful
21:35 - of your time but uh maybe you could just
21:38 - very quickly uh tell us like what are
21:41 - some of the the main advantages of
21:44 - learning on scrimba as opposed to
21:46 - watching like the video version of a
21:48 - scrimba
21:49 - video yeah so um the key point is that H
21:54 - you are forced to get your hands on the
21:56 - code uh yeah hands on the keyboard sorry
22:00 - um and write code we kind of have this
22:02 - internal rule where if the student
22:05 - hasn't coded the concept or the learning
22:08 - objective in mind for the scrim then we
22:10 - don't consider it to have been taught we
22:13 - haven't like forced them to like now you
22:15 - take over and do this Challenge and then
22:18 - I will come and show you the solution
22:19 - afterwards like don't skip over it
22:21 - because the only one you're fooling by
22:23 - doing that is yourself so it's kind of
22:26 - that which is the core benefit uh most
22:28 - people um um talk about when they when
22:31 - they try scrimba and and report back
22:34 - that they love but also as you said we
22:36 - put a lot of cont like a lot of effort
22:39 - into our courses into making them uh not
22:41 - like most other courses out there at
22:44 - least most other courses when we started
22:46 - out uh because we we never teach things
22:50 - just for the sake of of teaching the
22:52 - theory it's always an underlying purpose
22:55 - for why we're teaching something it's
22:57 - like it's like it's it's almost not like
22:58 - you're coming to us to learn JavaScript
23:00 - it's like you're coming to us and yes
23:02 - the course is called learn JavaScript
23:04 - but once you're into the course it's
23:05 - like hey how about how cool would it be
23:09 - to have this little blackjack game or
23:12 - this little app that actually solves a a
23:15 - use case in your business for tracking
23:17 - sales leads in your Chrome extension
23:19 - like imagine building something like and
23:21 - having something like that that would be
23:23 - valuable right okay what do we need to
23:26 - learn in order to do that well we need a
23:28 - list of leads how do we represent a list
23:32 - in programming well that's now we got to
23:33 - learn about a Race So it's always that
23:36 - way attacking it from the problem and
23:38 - then down to the what code you need to
23:40 - learn and never like you're going to
23:42 - learn JavaScript here are the five main
23:44 - data types Primitives and complex data
23:47 - types like we very like opinionated in
23:50 - that kind of way of teaching and I think
23:53 - it it's not for everyone but we have
23:55 - definitely found our kind of uh yeah
23:58 - niche in the market of people who like
23:59 - to learn that way yeah awesome well one
24:02 - thing that uh I'm very excited to talk
24:04 - with you about is the burgeoning field
24:07 - of AI engineering now yeah AI
24:10 - engineering of course my friend uh I
24:12 - guess our mutual friend Sean Wang
24:15 - recently had a big AI engineer Summit uh
24:18 - in San Francisco were were you there no
24:21 - froa our co-founder third co-founder he
24:23 - was there okay cool yeah I didn't I
24:26 - didn't get to make it but I did talk to
24:27 - him on a previous episode of the free
24:29 - cam podcast about AI engineering but you
24:32 - are teaching it and yeah you've made it
24:35 - a core focus of scrimba you know you're
24:38 - a a smaller company you have limited
24:41 - resources in terms of what topics you
24:42 - can teach and you decided this is what
24:46 - we're investing our scarce time energy
24:49 - teaching talent in and you've created an
24:51 - AI engineering uh curriculum yeah can
24:55 - you talk a little bit about what a AI
24:58 - engineering
24:59 - is yeah so I think most people who hear
25:02 - uh the phrase AI engineering uh thinks
25:05 - it's more like an AI researcher or
25:07 - machine learning researcher meaning a
25:10 - person who uh trains models and um
25:14 - writes algorithms for for for AI models
25:16 - and it deploys the models and like stuff
25:19 - like that that's not that at all uh it's
25:23 - much much easier than that it's all and
25:25 - it's much closer to a web developer role
25:28 - it is all about taking the these um AI
25:31 - apis that are out there these days or or
25:33 - or you could host them your the open
25:35 - source versions yourself but not like
25:37 - not train them uh yourself and not write
25:40 - the algorithms for them yourself it is
25:42 - about being that kind of top um final
25:46 - layer or final ux layer where you take
25:48 - this amazing new technology and build
25:51 - Next Generation apps with it using like
25:54 - text voice images everything that is
25:57 - popped up over the last few years in
25:59 - generative Ai and it's like it's just so
26:02 - exciting what you can do with it and and
26:04 - and it's a feels like a green field out
26:06 - there where you can just pick new
26:09 - business areas and and industries which
26:12 - haven't gotten AI properly applied um or
26:16 - there AI hasn't been applied to it yet H
26:19 - so so we we just see so many
26:20 - opportunities out there and and had I
26:22 - been a beginner and I today I would have
26:25 - jumped on it immediately uh cuz I think
26:27 - it's great for people's web developers
26:29 - careers these days so so that's why
26:32 - we're we're we're kind of going all in
26:33 - and we want to be the best place to
26:35 - learn that uh because while it isn't
26:38 - that hard to learn uh actually it is
26:41 - very overwhelming and easy to go into uh
26:44 - kind of RAB go down rabbit holes uh and
26:47 - get confused and get paralyzes by
26:49 - analysis and stuff like that yeah so we
26:52 - trying to yeah that that's why we're
26:53 - we're going all in yeah so maybe you
26:56 - could talk a little bit of about uh you
26:59 - said it's not that hard to learn uh but
27:02 - what to learn specifically and not yeah
27:05 - you know getting Hacker News syndrome
27:07 - where you're just looking at like the
27:08 - latest release of whatever oh I need to
27:10 - learn this you know focusing on the core
27:12 - skills the foundation upon which you can
27:14 - build out the rest of your skill set uh
27:17 - maybe you could talk about what those
27:18 - core skills of an AI engineer is and
27:20 - just to be completely clear AI engineer
27:23 - is somebody not necessarily a machine
27:25 - learning engineer as you said who's
27:27 - actually training models but other
27:29 - skills to be able to essentially create
27:32 - like good output from AI or or relevant
27:35 - out output I mean that's how I would
27:37 - very naively describe it does does that
27:39 - make sense uh please feel free to extend
27:42 - that definition no no it makes sense I
27:44 - but I would say not just create relevant
27:47 - output but create uh experiences from it
27:51 - because it I think I think it it one
27:54 - thing that was an epiphany for me was
27:56 - that chat GPT 3.5 uh when like when chat
28:00 - GPT came and it was like GPT 3.5 and not
28:04 - 3.0 yes it was better than 3.0 but I
28:08 - think the actual true um um Innovation
28:13 - there or or just as big of an innovation
28:16 - was the the ux the fact that you just
28:18 - chatted with it I mean if had you tried
28:22 - gpt3 in the playground or or a gpt3
28:25 - based product two months before chat GPT
28:28 - was launched it or I at least got
28:31 - equally mind blown uh when I when I saw
28:34 - that so the techn take off the yeah the
28:37 - user
28:38 - experience uh so that is being able to
28:41 - have a discussion and be able to drill
28:44 - deeper into it because I also like used
28:46 - like the various playgrounds from the
28:48 - previous versions of GPT and I was like
28:50 - this is cool but this is not ready I
28:52 - don't see how I could really use this
28:54 - Beyond you know creating spam or
28:56 - something like that but but once I
28:58 - really sat down especially with GPT 4 in
29:00 - in the but but you're right chat GPT was
29:04 - the key Innovation and open AI didn't
29:07 - see it as the key Innovation they were
29:09 - just like oh this is just some tech demo
29:10 - essentially is is my understanding is
29:13 - kind of how they shipped it but once
29:15 - they saw the usefulness in terms of
29:17 - being able to have conversations is
29:19 - great I you know I use GPT I don't know
29:21 - 10 15 times a day to to ask about
29:24 - various things I use it all the time in
29:26 - language learning for example like full
29:27 - discussions with it in foreign languages
29:29 - and that's incredibly helpful it's like
29:32 - having like a language tutor for free
29:34 - right uh so but not to get too too deep
29:38 - into that but I I think what what you
29:41 - just said there that the chat interface
29:44 - and the ability to iterate on your
29:46 - initial prompt and to delve deeper and
29:48 - to branch and all that stuff that that
29:50 - was a huge Revelation for me personally
29:52 - it sounds like it was for you as
29:54 - well yeah it was H and
29:57 - um I think there's so many more
30:00 - discoveries in that application or ux
30:02 - layer uh to to be found over the next
30:05 - few years and and very often you also
30:09 - need uh in order to to make to get a
30:13 - great experience you also need the
30:15 - context of the product you're working in
30:17 - so yeah it works well to to use chat GPT
30:20 - uh alongside when you're for example
30:22 - coding but when you try
30:25 - copilot or or or any of these other
30:27 - uh tools coding tools that really put it
30:31 - in put the AI in context for you then
30:34 - you realize oh wow this is much better H
30:37 - and I think that goes for all Industries
30:40 - and professions uh that will be uh over
30:42 - the next few years
30:45 - um heavily changed uh as a consequence
30:48 - of this so and what does that mean well
30:50 - it means that there's a ton of work for
30:52 - developers to do in order to build these
30:55 - features and discover these features and
30:57 - especially now that multimodality with
31:00 - voice is is becoming more and more uh
31:03 - streamlined as well yeah just it's like
31:06 - being back in in like right after app
31:08 - store was launched I think and there
31:10 - just like so many opportunities out
31:12 - there yeah now one thing I'll push back
31:15 - on about the App Store is a lot of the
31:19 - best immediate applications that came
31:21 - out of the App Store were just folded
31:23 - back into iOS itself for example there
31:26 - was a time when you could publish a
31:28 - flashlight app and get millions of
31:29 - downloads and everybody be like oh this
31:31 - is amazing because all you're really
31:32 - doing is using like the the API to like
31:35 - turn on the LED on the back of the thing
31:37 - right and you create a cool you could
31:38 - have the coolest flashlight interface in
31:40 - the world but if you open up your phone
31:44 - and uh now you just swipe down and you
31:46 - can just hit the flashlight button and
31:47 - that's so much easier than trying to
31:49 - find a specific flashlight app and going
31:52 - to the trouble of installing it and all
31:53 - that like and GPT is already kind of
31:56 - like like like or I guess the GPT
31:58 - Company open AI has already kind of like
32:00 - demonstrated uh a willingness to quickly
32:03 - like grab some of the most killer apps
32:05 - and like fold them into chat GPT itself
32:08 - for example like do you think that um
32:11 - there's going to be like these obvious
32:13 - kind of applications that are going to
32:16 - get folded in but then if you look at
32:18 - the App Store obviously plenty of apps
32:19 - have prospered uh it's it's like a
32:22 - multi- billion dollar a year ecosystem
32:25 - at this point you you think similar like
32:27 - that GPT specifically and and some of
32:30 - the other llms will have these big app
32:33 - ecosystems or are you thinking more like
32:35 - more like building Enterprise apps on
32:38 - top of these or
32:40 - both yeah so I
32:43 - mean probably both things will happen
32:48 - like open AI will take a lot of the use
32:51 - cases and just fold it into chat GPT and
32:54 - that'll kill a lot of startups
32:57 - that most likely they were already
33:00 - trying to do it it simultaneously I
33:03 - think as well like as I said with with
33:05 - the context being the product as well
33:08 - for example what I've used and I'm
33:09 - really impressed by is Loom if you've
33:11 - tried that um video service you easily
33:14 - create videos and uh they've just
33:16 - integrated AI in such a useful and good
33:19 - way where it
33:20 - automatically creates chapters and
33:23 - summaries and edits and like so many
33:25 - things it does and it it like chat GPT
33:29 - or or open AI couldn't have done that
33:31 - without building a full like Loom
33:33 - competitor and they can't build
33:35 - competitors for all companies in the
33:37 - world uh I think and and I think it's
33:39 - that that'll just be a losing game I
33:42 - think yeah awesome well I'm very excited
33:45 - to see what happens with the ecosystem
33:48 - I'm also excited to see what happens
33:50 - with open source models have you been
33:52 - following development of these open
33:55 - source foundational models
33:58 - yeah so I think it like was quite
34:01 - surprised at how quickly they kind of
34:05 - catched up to to chant
34:07 - GPT at least I mean it still is the gold
34:11 - standard with GPT 4 but um I wouldn't
34:15 - have thought straight straight out of
34:17 - like U 202 at the end of 2022 that uh
34:20 - llama for example that Facebook would
34:22 - come with with with such a good model
34:24 - just a few months after it feels like
34:26 - feels like they all knew this was coming
34:28 - and they were ready there someone just
34:30 - need to needed to take the first step
34:32 - and then all the others came with their
34:33 - own Foundation
34:35 - models but yeah so I've been following
34:37 - that and I think there's many
34:38 - interesting things uh with that and has
34:41 - for example the cost which turns out to
34:44 - be uh quite challenging when using open
34:49 - AI huge element uh of it uh having the
34:52 - control uh internally of the model
34:55 - yourself uh having being able to put
34:57 - your own guard rails around it to to a
34:59 - larger degree yeah and also running it
35:01 - on device I think is super interesting
35:03 - which I've been been checking out or
35:05 - experimenting with in the browser for
35:07 - for one I'll add one thing I'll just
35:10 - jump into ad being able to add your own
35:11 - proprietary data to it without worrying
35:13 - about it leaking uh and being
35:16 - extractable from you know gpc4 like like
35:19 - you can kind of like get it you can do
35:21 - tricks to get it to reveal it training
35:23 - data and stuff like that and if you
35:24 - could do that and your data that you've
35:26 - put it into GPT 4 GPT 5 or whatever is
35:30 - part of the training data or or that
35:32 - some of the information you've already
35:33 - used somehow made it into the next
35:35 - version proprietary you know Trade
35:37 - Secrets could essentially be extracted
35:40 - that way so it's a security
35:42 - consideration um sorry I didn't mean to
35:44 - derail but but no no but it's a great
35:46 - Point like so running on device your own
35:49 - data your own guard rails um so many
35:52 - reasons why having your own model that's
35:56 - potentially running on on your own
35:57 - servers is Superior in a lot of use
36:00 - cases and of course cost uh because
36:03 - gp4 it's expensive to run a model that
36:06 - massive uh it occurred to me that a lot
36:08 - of people may not even know what some of
36:10 - these terms that we're using like
36:12 - Foundation model mean so figured maybe
36:14 - we could do a quick uh question and
36:16 - answer session where you could quickly
36:18 - Define some of these terms that people
36:21 - are likely hearing when they hear about
36:22 - AI engineering let's start with
36:24 - Foundation
36:25 - model yeah so so that's the kind of uh
36:28 - models that can do not one thing not one
36:32 - narrow use case but they are kind of
36:34 - foundational they have some kind of
36:36 - generalized intelligence I would say h
36:39 - and they can
36:40 - do language uh they can talk as a human
36:44 - they can do generate code uh they can
36:47 - they are multimodal much of the or many
36:50 - times multim modals they can deal with
36:52 - images uh and stuff like that so kind of
36:55 - more general not the old kind of narrow
36:58 - classification AI that can just spot a
37:01 - cat in an image and just do that no a
37:03 - foundation model can do many different
37:06 - things okay and what is
37:10 - embedding yeah so an embedding is I
37:14 - think it's a ma mathematical expression
37:16 - which um means to take one object and
37:20 - put it into a new space just a bit
37:23 - abstract but um essentially what it
37:25 - means is that you take from for example
37:27 - one object a paragraph about uh dogs for
37:31 - example and you turn that into you
37:34 - transform that into just a long array of
37:37 - uh numbers of floating Point numbers and
37:40 - those
37:42 - numbers then are a representation of the
37:45 - underlying meaning of that sentence they
37:48 - are an embedding of that paragraph uh
37:51 - but they are of course in a different
37:52 - space since they're now numbers and not
37:54 - like
37:55 - text yeah so that they can
37:58 - essentially play a part in I guess the
38:00 - weightings and how the neural network
38:03 - decides what output to get um
38:07 - and oh go ahead no because then you can
38:10 - actually it's quite cool to see see
38:11 - visualizations of this which we have in
38:13 - our our embeddings course uh where you
38:15 - kind of see that it's very easy Once you
38:17 - have something in an array of numbers
38:20 - it's very easy to mathematically compare
38:22 - the two and the distance between the two
38:24 - so that's how the AI can know that once
38:27 - it has two array two embeddings one of
38:30 - dog and one of cat and one of Saturn
38:33 - it'll it'll see that mathematically dog
38:35 - and cat are closer to each other than
38:38 - Saturn and know that oh these two things
38:40 - make are somewhat semantically connected
38:44 - and what is r a rag as some as people
38:47 - sometimes refer to it
38:50 - quickly so it's one of these uh threel
38:54 - acronyms that scare beginners off but
38:57 - aren't really that complex I feel like
39:00 - developers sometimes like try to come up
39:02 - with with with three-letter acronyms
39:04 - that are uh just to make it hard for
39:06 - people to kind of to understand what
39:08 - they're doing it's not just developers
39:09 - the government loves to come up with
39:11 - three-letter acronyms in the military
39:12 - and yeah maybe maybe it's a human thing
39:16 - to the kind of uh Define The In Crowd
39:18 - and the out crowd anyway okay I'll get
39:21 - to the point so um rag retrieval
39:24 - augmented generation imagine that you
39:26 - have a company uh and you have a bunch
39:29 - of internal data that and you want to
39:31 - create a knowledge Bank where where
39:33 - employees can ask for example like uh
39:36 - what's the vacation policy or refund
39:39 - policy for receipts and blah blah blah
39:41 - that that's obviously data that don't
39:44 - live in chat gpt's uh model or live in
39:48 - their model it's data that lives in a
39:50 - vect or that lives um when you use rag
39:54 - in a vector database in the form of a
39:56 - embeddings so uh rag means that you when
40:00 - you ask the question about what's our
40:01 - vacation policy like the app heads over
40:04 - to a vector database and figures out
40:07 - through your your question and the
40:09 - embeddings that are there and the ma
40:11 - mathematical calculations for for for
40:14 - calculating distance between embeddings
40:16 - it it manages to find the the the
40:19 - information it needs to reply to your
40:22 - question with the the kind of close data
40:25 - that you have in your
40:27 - company uh and and then you then you use
40:30 - chat GPT to or or whatever AI API
40:33 - whatever Foundation model you use to to
40:35 - turn that into more of a conversational
40:37 - reply with the the the data that you
40:40 - fetched via the like the rag um approach
40:44 - if that made sense so rag is essentially
40:47 - a way that you can uh take your own data
40:50 - and get it uh where it can easily
40:53 - quickly interface as opposed to I mean
40:55 - GPT 4 for example can now go and
40:58 - searching with Bing and can pull stuff
41:01 - up too like if I ask like what's the
41:03 - vacation policy of fre C Camp uh or
41:05 - something like that uh then it could
41:07 - potentially scav the web and find that
41:10 - particular thing but it's so much faster
41:12 - if you've got retrieval augmented
41:15 - generation right um rag so it's just one
41:19 - of those things that speeds things up
41:20 - and and ultimately reduces cost because
41:23 - one thing that people may not realize
41:24 - when they're using chat GPT is
41:26 - every single query costs like I don't
41:28 - know like 20 cents or something it's it
41:31 - adds up very quickly like just sitting
41:33 - there talking about like He-Man or
41:35 - something or like the Doom Eternal like
41:38 - lore or something like that which I was
41:40 - I was talking with it about yesterday
41:42 - like that I I cost open AI probably like
41:45 - four or five bucks for my discussion
41:47 - there right and that's why they're
41:48 - taking so much money because it's very
41:49 - expensive but R offers a way to
41:51 - potentially dramatically reduce costs um
41:55 - when you're yeah and also
41:56 - less hallucination as you kind of as
41:59 - it's able to get the the right data uh
42:01 - in the prompt like so the result from
42:04 - from from querying the vector databases
42:06 - so then used in The Prompt so to make
42:09 - the prompt more uh specific and um yeah
42:12 - yeah so I mean you mentioned the term
42:15 - hallucination which is a fun way it we
42:17 - come up for like essentially returning
42:19 - misinformation uh yeah but uh
42:22 - models hallucinated all the time early
42:25 - on uh and yeah like GPT 4 has gotten way
42:29 - better about that by the way like and it
42:30 - may not just be that gp4 has gotten
42:33 - better but also subconsciously like I
42:35 - might just say oh I think that's wrong
42:37 - like I doubt it more so like as people
42:40 - use these models they're going to become
42:41 - more uh skeptical and they're going to
42:42 - give her intuition for like okay does it
42:45 - really know what it's talking about or
42:47 - is it just is it just uh you know
42:50 - spitballing here you know uh and yeah so
42:55 - there are so many things you can do do
42:56 - to reduce those hallucinations and if
42:58 - you're talking about like a customer
43:00 - facing app you don't want it to like
43:02 - hallucinate your price of some product
43:04 - or something like that that could
43:06 - potentially be very catastrophic uh or
43:09 - you don't you don't want us to like
43:10 - hallucinate like legally binding
43:12 - contracts or something like that right
43:15 - um so yeah that is something that well
43:18 - let's talk a little bit about like AI
43:20 - engineering and like what it is that AI
43:23 - Engineers seek to do because we already
43:26 - have you know chat GPT and and we have
43:29 - the open AI
43:30 - API obviously using AI apis like that
43:34 - are part of the AI engineer role but
43:38 - maybe you can talk about like what the
43:40 - main work to be done what the open roles
43:42 - are talk about the field of AI
43:44 - engineering and maybe give people who
43:48 - are watching this listening to
43:50 - this a pitch for why they should
43:52 - consider becoming AI Engineers if
43:54 - they're already working as a front-end
43:55 - developer a full stack
43:57 - developer yeah so why should they I
44:00 - think uh economically it's a good idea
44:03 - because there are just so many managers
44:06 - and uh business owners out there today
44:09 - who feel that uh the AI train is leaving
44:13 - the station and their company is not on
44:16 - it but maybe their competitors are so
44:19 - being a little bit cynical using that uh
44:22 - kind of uh anxiety uh that is in a lot
44:27 - of companies these days with good reason
44:29 - I would say
44:31 - h it will definitely help your career if
44:34 - you're the kind of person that can step
44:35 - up and say hey actually I know some
44:38 - really cool features and and Next
44:39 - Generation things we can build into our
44:41 - or at least experiment with uh in our
44:44 - product by using these API because I
44:46 - know all about rag I know how to create
44:48 - an AI agent I know the AI safety prompt
44:52 - injection uh risks we need to think
44:54 - about uh and I know how to do open
44:56 - source models for example I mean if you
44:58 - if you can come with a pitch like that
45:00 - to your to your boss or to to to a
45:03 - company you want to work for I think
45:05 - it's it's definitely going to open doors
45:08 - uh yeah and it's it's what I would do
45:09 - when I if I had been a beginner now and
45:11 - actually it's also what I would do
45:13 - hadn't I been uh running scrimba I would
45:16 - just probably spend all my time just
45:18 - experimenting with building new kinds of
45:20 - experiences so so that's a fun part I I
45:23 - think um it's it's a lot of fun and and
45:26 - uh it's good for good for your career
45:28 - that's um I think why why people should
45:30 - jump on it so how would you recommend
45:33 - somebody who's interested in breaking
45:34 - into Tech maybe they're learning the
45:36 - code how would you recommend they start
45:39 - using Ai and how do they what should
45:42 - they do to get on the fast track to
45:45 - understanding these tools and being able
45:46 - to leverage
45:48 - them yeah obviously I got to plug our
45:51 - scrimba AI engineering path that that'll
45:53 - kind of take you take you on the fast
45:54 - lane but uh all that aside assuming that
45:58 - you've actually uh learned it one way or
46:01 - another I think there's so many cool
46:03 - things you can do to get attention these
46:05 - days and and get get kind of a an edge
46:09 - on the rest of the um on the rest of the
46:12 - market or the rest of the job Seekers
46:13 - out there what I would have done today I
46:16 - would have actually found my ideal
46:20 - company that I wanted to work for and
46:23 - then I would have uh thought as an AI
46:25 - engineer a what does what what does the
46:27 - dream product or what's one one AI
46:30 - product that this company should have or
46:32 - that it will have in three years maybe
46:35 - it's you want to really want to work for
46:37 - for the biggest law firm in your uh your
46:40 - town right then then I would like okay
46:43 - what's what's an like Law plus AI
46:46 - there's just so many ideas so many
46:48 - things you can do to help lawyers draft
46:51 - documents or read through uh previous
46:54 - law uh law documents ments about um
46:57 - right yeah about um what's the word
47:02 - president uh pres president yeah for
47:05 - example like that or legal president so
47:08 - many things that can be done uh or or
47:11 - marketing tools like quickly help you
47:13 - with your your uh problem uh with your
47:16 - tax problem or just b a bot for that
47:19 - whatever there's so many ways you can go
47:22 - to companies these days and say hey look
47:24 - at this prototype I've built
47:26 - you should really have such a tool in
47:29 - house how about you just hire me and
47:31 - I'll start building these kinds of
47:32 - things for you that that's how I would
47:34 - would try to get my foot in the door in
47:36 - the tech industry today had I been a
47:38 - complete beginner wow okay so just a
47:41 - just a recapitulate what you just said
47:43 - instead of applying you know through web
47:46 - forms or or going to networking events
47:48 - you can do that too but like to build a
47:51 - prototype specifically for the company
47:53 - and say hey have you considered adding
47:55 - this this to this product and using that
47:59 - as a way to potentially get hired on to
48:01 - build precisely that so almost kind of
48:03 - like inventing your own job within that
48:06 - company and your own product or
48:08 - extension of an existing
48:10 - product exactly you could even I mean if
48:13 - you really want to go go the last mile
48:16 - you deploy it with their design on a URL
48:19 - that resembles theirs and like just send
48:21 - it over to them as if fully branded
48:24 - product as well and yeah
48:26 - just don't try that with so many doors
48:29 - cuz in software they created like a a
48:31 - version of Mario that ran on uh windows
48:34 - or or Doss I guess and and Nintendo was
48:37 - like don't distribute this or we'll sue
48:39 - you so it won't it may backfire in some
48:42 - situations but like if you're
48:43 - approaching like probably a big American
48:45 - tech company maybe they'll be more
48:46 - acceptive
48:48 - sorry that person's career though that
48:50 - did it I mean they went on to create
48:53 - great things and it bolstered their
48:54 - reputation uh for being the first you
48:57 - know company to essentially get
48:59 - sidescrolling games working on Doss so
49:03 - yeah yeah I mean it worked out fine for
49:05 - them obviously they're all who who was
49:07 - it did you say in software the the
49:09 - creators of Doom and oh oh oh yeah all
49:13 - those games yeah but but originally they
49:14 - were I read that book masters of Doom
49:17 - but uh forgot about that chapter amazing
49:20 - book so uh it's been an amazing time
49:24 - talking with you I've learned so much
49:26 - about a AI engineering and where you
49:30 - think things are heading we've also
49:31 - heard a whole lot of practical tips for
49:34 - how you can incorporate AI into your
49:36 - daily workflow and potentially learn
49:39 - these tools and go out and create a role
49:41 - for yourself at your dream company so uh
49:45 - per I just want to thank you again for
49:46 - coming on the free code Camp podcast
49:49 - it's been a pleasure man likewise and uh
49:53 - thank you so much for for having me and
49:54 - for being a scrimba supporter ever since
49:57 - uh day one yeah yeah again just I love
50:01 - the invention the discovery that is uh
50:04 - scriba so it's it's been amazing to
50:06 - follow your journey over the years and
50:09 - uh excited to talk with you again in the
50:10 - future um everybody watching this until
50:15 - next week happy
50:16 - coding happy coding

Cleaned transcript:

I'm Quincy Larson teacher and founder of freeo Camp each week we're talking to developers entrepreneurs and ambitious people who are getting into Tech and today we are thrilled to welcome PA borgan great to be here yeah and and uh we are so excited to have you here of course per is the founder of scrimba he is a software engineer turned Tech founder uh who's gone through like y combinator runs a very popular website uh that teaches coding we published many of those courses on the free code Camp YouTube channel and I'm just thrilled to sit down and talk with you because we've never had you on the on the podcast yet after more than 100 episodes so it feels like a bit of an Omission yeah also just note that I'm recovering from like a pretty serious cough that had me like completely debilitated for like a week so if I have a coughing fit or anything uh just know that I'm fine I'm just Echoes of my previous Illness but um per where where you are are are you over in Oslo right now yes we are based uh here out of Oslo where the founding team is from and and where yeah we all live awesome well I'm very interested as an American uh in you know I'm I'm from Scandinavia originally my family came over from Sweden which I know is different from Norway but uh I'm I'm always very interested in in that kind of region you know the land of Vikings and uh I know that Norway is a very small country but it's a it's a very influential country on the world stage and it has a ton of natural beauty so I have to ask what was it like growing up in Norway so uh I'm from the capital uh Oslo uh from the city so to be honest I don't I I I never really went to the the most beautiful places uh until I was uh an adult or not not not much at least but uh of course it's it's a great place to live uh good uh good good system uh welfare system but but with freedom as well and with uh skiing and nature and yeah great place you should you should come and visit us awesome it's definitely on my bucket list of places to visit uh so how would you compare like the Norwegian Tech scene uh with San Francisco in Silicon Valley where I know you've spent quite a bit of time over these past few years yeah so it's um much smaller of course and it's it's quite um it's less ambitious I would say or at least when I started out uh as a founder and like 10 years ago or so uh there was a lot fewer startups and every time we I've gone to San Francisco have been been coming back super pumped and and twice as ambitious uh which is a sometimes a good thing other other uh at other times it's uh you want to be a bit more frugal and care about the fundamentals and and the next step and not the big dream so um I think we've kind of with scrim bot tried to struck a balance between being inspired a little bit by the the American ambition and and also by by the like uh down toe uh way of running companies in Norway but it is changing it it's becoming more and more uh International startups out of scan or out of Norway Sweden has had many over the last decades but but Norway's been lagging a little bit behind but it it's it's getting better yeah yeah well Norway of course is like an economic Powerhouse like per capita GDP I think is maybe the highest in the world uh and a lot of that is because you all have all this abundant mineral wealth did uh did you hear about like the discovery of the massive phosphate reserves and some of these other Rare Earth minerals uh I think it was maybe off the coast so so I have this thing right now where I actually don't read the news it's kind of my my New Year's commitment where I try to stay away from the news because it just kills my productivity so I've heard a little bit about it but to be honest you probably know more about it than I do okay cool well that that's interesting so you completely cut the news out of your daytoday is that like a New Year's resolution yes that what I meant yeah resolution that's the word it is uh so because I just find that it's such a struggle to to stay productive with all the The Temptations out there H and and news and social media being the like the most important ones got to got to kind of make some rules for myself in order to stay away from it yeah I can definitely relate to that uh like I have kind of like tuned out a lot of the election related news here in the United States cuz I already know how I'm voting so it's not going to change anything so uh why spend a whole lot of time like going over the the Gory details of the you know Democratic process um I I realize that that may sound like a very privileged take but um I've got a lot of stuff to do and I can't be following the every uh the every unfolding of all these different uh you know drama that are that are going on I can just read about it in Wikipedia few years from now and figure out what the conclusion was without having to go along for the entire ride so yeah or like watch the evening news or something if a couple of times a week that's more that's what people did back in the good old days or good old it did like 20 years ago and that worked totally F pre social media days yes yeah so I'm very interested in delving into your background because you have a pretty unique background uh among Tech Founders and developers so you actually studied economics in college but then you went and you worked as a software developer for like five years maybe you can talk about how you got into coding and how you were able to get those those first few jobs as a developer maybe you can just kind of give us like an origin story if you will yeah so so I didn't work as a software developer for five years actually it was short than that it was like uh between one and two years after I I graduated from the boot camp and then um I've been coding at scrimba for like the last seven years here and there of course but but now now you go to a boot camp then yeah or it was a free peerto Paar driven boot camp in London so it was like no teachers and just a bunch of people thrown together uh who who um got a task every week like this week you're going to build a blog or an ecommerce site or whatever and it was our responsibility to learn from each other and help each other and kind of uh together build that that Weekly product it's called s like cool kind of what was it Founders and coders yeah I've heard Founders and coders yeah yeah and and that always like struck me because it's it's free and it's it's kind of peertopeer based it's very different from the conventional coding boot camp models that we had like in San Francisco for example um exactly so you hung out there with a bunch of other ambitious people who were trying to learn coding and essentially you kind of like selftaught in tandem yeah um I did that and that was kind of coming off the back of uh running a startup that failed uh with with the same cofounder that I started scrimba with a bit later but we we we tried to build like kids apps uh on iPhone and iPad and and books and old fairy tales and stuff like that we we did kids entertainment essentially um that failed um and I felt really almost at the time almost a bit stupid for not knowing how to code I felt like what am I doing in this tech industry and working with products if I really don't know how to like build uh anything or debug anything or fix anything so I just had a a strong urge to to learn to code H and that's so then I went uh to Founders and coders was fantastic and got a job at a startup when I came back to Oslo uh and worked there for uh a little over a year and then cindra and I kind of uh got the band back together and and and did another um startup attempt which just went uh went better yeah absolutely well that that's a really cool so it kind of like your your um I guess imposter syndrome as a Founder who couldn't code compelled you to like show that up so that you can code and of course now you code all the time and you've built out this skill set this developer mindset and actual kind of HandsOn understanding of implementation details of apps to the point that you even taught courses and things like that so uh yeah that's really cool maybe you can talk about your cofounder a little bit like how did you how did you two meet yeah so we met at um coworking space in Oslo when the the startup scene in Oslo was very small so it was a kind of the almost the only coworking space for Founders in OSA at the time and he was um he was working on his own project I was working with the kids books and we kind of realized that his skill set and um our and the business uh we me and we had a third Co cofounder that we had built at the time was very like complimentary so we kind of got together and and started that company and what's interesting is that he's he's a brilliant engineer like the best engineer I've worked with and he actually after uh the first company failed he went off and um worked on his own selfmade programming language and started Consulting with his own selfmade programming language which is like a terrible idea for the people he consults for because he was the only person who knew how to to write code in that language so he he then needed to um create documentation for that uh and started realizing that writing documentation is really boring so he started recording videos to teach people about this language which is called imba uh but just realizing or just trying to record videos he realized what a bad process it is for both the teachers and the students to record uh coding tutorials because as a teacher you have to like be really careful about setting up your system correctly about editing the video about making sure everything is polished about not talking yourself into a corner and there's tons of like uh adjacent skills that you need in addition to being like good at explaining things and uh once you've done all of that and spent like an hour creating like 10 minutes of of of a polish tutorial it ends up as a video which isn't interactive for the student either so it's it's kind of taken all the data and reduced it to dead pixels all the metadata so it's a bad experience for the student and for the teacher and that's what what made him like hm maybe we can make a coding tutorial in like video based coding tutorials in a better way and kind of rethink it from first principles and he did that and kind of invented the prototype for for scrimba which eventually then became yeah the company we are today yeah yeah and I I remember very early days like that I was just floored by this technology because it I mean at a fundamental level it wasn't anything technologically uh you know fancy it was just like what you said revisiting video from first principles and saying like hey why don't we you know sync up like this HTML with this audio essentially exactly and and for anybody out there who hasn't used scrimba you should go to scrimba and use it and just get a feel for how you press play sound starts playing you know slides can pop up and you can pause it at any point and and the actual Dom is being manipulated so that the code in the code edor editor is editable and you can just click play and it'll just keep going but you can pause it at any moment it it code is like unique in this perspective that like you couldn't do this if you were like having like uh maybe you could do it with like a video game system like where you like sync the video up uh like like speed demo archive like the old Quake demos they were literally coordinate data for where the person was like bunny hopping over and shoot rocket jumping and stuff and you could kind of pause it and you could you could like look around and stuff that's basically like what you did for coding in the sense that coding is just text and it's it's not that heavy and you can just render it in the Dom where it lives JavaScript is like the language of the web right so it's just like a web native I almost consider scrimba more of a dis a discovery than an invention in the sense that nobody thought to do it that way yeah but that's like cindra uh my cofounder he's he's the kind of guy who who really when he sees something broken he just like gets an urge to fix it and and then turn or rebuild it uh based on first principles and I think something you said there which is like the uh the weight of it h is key because a scrim is essentially just some tiny very very uh optimized pieces of data uh that uh kind of describe the changes that are happening in the Dom and makes it feel and look like a video H so so so kind of the bandwidth you need to watch a scrim compared to a video is like two orders of magnitude less which is part of the reason we've seen great success like all over the world in areas especially where the the internet internet access is slow yeah yeah because I I remember that was one of the big selling points of scrimber early on is like it's like 1% of a YouTube video in terms of bandwidth consumption and a lot of that is because video you're you're being very uh I guess uh imperative in the sense that you're telling every pixel what it's supposed to look like and yes there's like a compression algorithm and stuff like that but for the most part you're literally tracking like billions of pieces of data for like a short video right yeah um so it's inherently data intensive whereas yeah audio is a tiny fraction you know especially if you're using like uh like I think we use 96 kilobytes for our podcast for example 96 kilobit per second or something like that that's tiny that's like uh half a megabyte per minute uh video I mean once you add you and me on the screen and stuff it's probably like closer to I don't know 10 megabits per 10 megabytes per minute or something like that at least uh it just dramatically changes it so that was one of the huge killer uh I guess applications for scrimber early on was a lot of folks don't live in San Francisco where they have gigabit internet and it's trivial for them to like watch 4K video on YouTube or whatever right A lot of people are you know putting money onto a phone card on like a data plan so they can you know be able to text and and maybe read some textual articles like Wikipedia or something and make some phone calls and stuff and scrimba is something that is kind of within their budget like even if you are on one of those kinds of plans where where you're paying and and the data prices in some parts of the world are exorbitant but that's it is what they it is what it is right like you have to kind of adapt to that and so scrimba has represented like this huge windfall for people who don't have a lot of data yeah and and just as a final thing uh which we haven't actually leaned into but also which is very uh real is the the the computational power and the and the um the electricity that is used like the the carbon footprint essentially of um serving a scrim and sending it over the network is also a lot less I mean I would assume those two um graphs would scale like like the size uh and and the carbon footprint as well so but we haven't used we should probably have used that in our marketing a lot more but we haven't done that but that so so many so many I remember in the beginning cnra just explained all these benefits and the list goes on like with metadata and yeah the bandwidth the carbon footprint so much so was kind of even though I was a little bit scared for like jumping on a new startup at the time I remember that was kind of what convinced me when I realized that this is just like a fundamentally better way of doing it and if we don't build it someone else I I thought at least would eventually as you said discover this and build them themselves but but it is actually quite quite a lot of difficult technicalities in it like making um a prototype is perhaps not that hard but making it uh polished and work well with the cursor and responsiveness and all that is and bundling and running the projects has has shown to be quite a challenge we spent a lot of time and money U yeah making it work well yeah well I'm you know I'm kind of surprised that like a whole bunch of other companies didn't see this and immediately clone what you were doing uh but I'm not that surprised in the sense that like you think that like there's going to be this really intense competition when you have something that people want but like a lot of big companies and stuff they're just distracted they got all these other things going on and uh yeah like they're going for like I guess more mass market like the audience for people learning the code is relatively small there are only about 30 million professional developers in the world I'd estimate that there are another 30 million or so people that are trying to actively learn to code and um that's not like Facebook or Instagram type total addressable markets right so I think a lot of people just it doesn't occur to them as like a niche that's worth going after which is good you know for you and me because we we can serve those people without having to deal with like a whole lot of competition yeah I I think another thing there is it's very hard for us to expand our catalog because we have to add support for every single thing we we uh we want to create a course on as opposed to a video based platform where you can create courses on anything you can because you just record a video of it so so for that reason it's kind of been hard for us actually to go more into the to the B2B and the Enterprise Market where they have very wide requirements in terms of what kind of clippers and stuff like that we are the niche is kind of yeah protecting us a bit Yeah but to be fair what you're offering is very different from what they're offering because you know to some extent like video courses that have a teacher explaining a concept and maybe have some project that you Cod along home you could argue that that's somewhat commoditized in the sense that anybody can sit down and create a really killer tutorial and publish it on YouTube and get an audience right so but to actually build what you've built which is like very thoughtfully deliberately designed interactive pedagogy that is very difficult you need people that have thought a lot about that or who have like you know a lot of teaching experience and a lot of software development experience who can kind of figure out an optimal way to do that and that's something like to talk about fre go for a second that's something we're very proud of is our core interactive curriculum we we use YouTube as kind of like u a place where we can have videos on every topic but when it comes to the core topics that we think every developer should learn you know the git and the Linux and the SQL and the Python and the JavaScript HTML CSS like we can really take time to build like a deliberate curriculum that teaches those skills in an interactive way and so see in many ways what scrimba is doing is like a different form of interactive than what free C Camp is doing but it's incredibly valuable yeah and I mean free cold cam has been an inspiration for us uh ever since we started giving out courses so yeah the admiration goes uh both ways for sure yeah and I I should point out that that uh you have personally taught some of the courses on the Freo Camp YouTube channel and uh and some of your you know I think Bob zerol yeah is that his name yeah yes amazing teacher like so many so many great teachers coming out of the scrimba camp that are um hanging out and helping kind of essentially take the existing learning resources and Port them to kind of like almost backward compatibility you're back porting them to the old video format but it's still cool to have them in video because that reaches a whole lot of people that are on YouTube and then hopefully many of those people go and do the interactive versions of those courses on scrimba yeah yeah so I have so much I want to talk to you about I want to be mindful of your time but uh maybe you could just very quickly uh tell us like what are some of the the main advantages of learning on scrimba as opposed to watching like the video version of a scrimba video yeah so um the key point is that H you are forced to get your hands on the code uh yeah hands on the keyboard sorry um and write code we kind of have this internal rule where if the student hasn't coded the concept or the learning objective in mind for the scrim then we don't consider it to have been taught we haven't like forced them to like now you take over and do this Challenge and then I will come and show you the solution afterwards like don't skip over it because the only one you're fooling by doing that is yourself so it's kind of that which is the core benefit uh most people um um talk about when they when they try scrimba and and report back that they love but also as you said we put a lot of cont like a lot of effort into our courses into making them uh not like most other courses out there at least most other courses when we started out uh because we we never teach things just for the sake of of teaching the theory it's always an underlying purpose for why we're teaching something it's like it's like it's it's almost not like you're coming to us to learn JavaScript it's like you're coming to us and yes the course is called learn JavaScript but once you're into the course it's like hey how about how cool would it be to have this little blackjack game or this little app that actually solves a a use case in your business for tracking sales leads in your Chrome extension like imagine building something like and having something like that that would be valuable right okay what do we need to learn in order to do that well we need a list of leads how do we represent a list in programming well that's now we got to learn about a Race So it's always that way attacking it from the problem and then down to the what code you need to learn and never like you're going to learn JavaScript here are the five main data types Primitives and complex data types like we very like opinionated in that kind of way of teaching and I think it it's not for everyone but we have definitely found our kind of uh yeah niche in the market of people who like to learn that way yeah awesome well one thing that uh I'm very excited to talk with you about is the burgeoning field of AI engineering now yeah AI engineering of course my friend uh I guess our mutual friend Sean Wang recently had a big AI engineer Summit uh in San Francisco were were you there no froa our cofounder third cofounder he was there okay cool yeah I didn't I didn't get to make it but I did talk to him on a previous episode of the free cam podcast about AI engineering but you are teaching it and yeah you've made it a core focus of scrimba you know you're a a smaller company you have limited resources in terms of what topics you can teach and you decided this is what we're investing our scarce time energy teaching talent in and you've created an AI engineering uh curriculum yeah can you talk a little bit about what a AI engineering is yeah so I think most people who hear uh the phrase AI engineering uh thinks it's more like an AI researcher or machine learning researcher meaning a person who uh trains models and um writes algorithms for for for AI models and it deploys the models and like stuff like that that's not that at all uh it's much much easier than that it's all and it's much closer to a web developer role it is all about taking the these um AI apis that are out there these days or or or you could host them your the open source versions yourself but not like not train them uh yourself and not write the algorithms for them yourself it is about being that kind of top um final layer or final ux layer where you take this amazing new technology and build Next Generation apps with it using like text voice images everything that is popped up over the last few years in generative Ai and it's like it's just so exciting what you can do with it and and and it's a feels like a green field out there where you can just pick new business areas and and industries which haven't gotten AI properly applied um or there AI hasn't been applied to it yet H so so we we just see so many opportunities out there and and had I been a beginner and I today I would have jumped on it immediately uh cuz I think it's great for people's web developers careers these days so so that's why we're we're we're kind of going all in and we want to be the best place to learn that uh because while it isn't that hard to learn uh actually it is very overwhelming and easy to go into uh kind of RAB go down rabbit holes uh and get confused and get paralyzes by analysis and stuff like that yeah so we trying to yeah that that's why we're we're going all in yeah so maybe you could talk a little bit of about uh you said it's not that hard to learn uh but what to learn specifically and not yeah you know getting Hacker News syndrome where you're just looking at like the latest release of whatever oh I need to learn this you know focusing on the core skills the foundation upon which you can build out the rest of your skill set uh maybe you could talk about what those core skills of an AI engineer is and just to be completely clear AI engineer is somebody not necessarily a machine learning engineer as you said who's actually training models but other skills to be able to essentially create like good output from AI or or relevant out output I mean that's how I would very naively describe it does does that make sense uh please feel free to extend that definition no no it makes sense I but I would say not just create relevant output but create uh experiences from it because it I think I think it it one thing that was an epiphany for me was that chat GPT 3.5 uh when like when chat GPT came and it was like GPT 3.5 and not 3.0 yes it was better than 3.0 but I think the actual true um um Innovation there or or just as big of an innovation was the the ux the fact that you just chatted with it I mean if had you tried gpt3 in the playground or or a gpt3 based product two months before chat GPT was launched it or I at least got equally mind blown uh when I when I saw that so the techn take off the yeah the user experience uh so that is being able to have a discussion and be able to drill deeper into it because I also like used like the various playgrounds from the previous versions of GPT and I was like this is cool but this is not ready I don't see how I could really use this Beyond you know creating spam or something like that but but once I really sat down especially with GPT 4 in in the but but you're right chat GPT was the key Innovation and open AI didn't see it as the key Innovation they were just like oh this is just some tech demo essentially is is my understanding is kind of how they shipped it but once they saw the usefulness in terms of being able to have conversations is great I you know I use GPT I don't know 10 15 times a day to to ask about various things I use it all the time in language learning for example like full discussions with it in foreign languages and that's incredibly helpful it's like having like a language tutor for free right uh so but not to get too too deep into that but I I think what what you just said there that the chat interface and the ability to iterate on your initial prompt and to delve deeper and to branch and all that stuff that that was a huge Revelation for me personally it sounds like it was for you as well yeah it was H and um I think there's so many more discoveries in that application or ux layer uh to to be found over the next few years and and very often you also need uh in order to to make to get a great experience you also need the context of the product you're working in so yeah it works well to to use chat GPT uh alongside when you're for example coding but when you try copilot or or or any of these other uh tools coding tools that really put it in put the AI in context for you then you realize oh wow this is much better H and I think that goes for all Industries and professions uh that will be uh over the next few years um heavily changed uh as a consequence of this so and what does that mean well it means that there's a ton of work for developers to do in order to build these features and discover these features and especially now that multimodality with voice is is becoming more and more uh streamlined as well yeah just it's like being back in in like right after app store was launched I think and there just like so many opportunities out there yeah now one thing I'll push back on about the App Store is a lot of the best immediate applications that came out of the App Store were just folded back into iOS itself for example there was a time when you could publish a flashlight app and get millions of downloads and everybody be like oh this is amazing because all you're really doing is using like the the API to like turn on the LED on the back of the thing right and you create a cool you could have the coolest flashlight interface in the world but if you open up your phone and uh now you just swipe down and you can just hit the flashlight button and that's so much easier than trying to find a specific flashlight app and going to the trouble of installing it and all that like and GPT is already kind of like like like or I guess the GPT Company open AI has already kind of like demonstrated uh a willingness to quickly like grab some of the most killer apps and like fold them into chat GPT itself for example like do you think that um there's going to be like these obvious kind of applications that are going to get folded in but then if you look at the App Store obviously plenty of apps have prospered uh it's it's like a multi billion dollar a year ecosystem at this point you you think similar like that GPT specifically and and some of the other llms will have these big app ecosystems or are you thinking more like more like building Enterprise apps on top of these or both yeah so I mean probably both things will happen like open AI will take a lot of the use cases and just fold it into chat GPT and that'll kill a lot of startups that most likely they were already trying to do it it simultaneously I think as well like as I said with with the context being the product as well for example what I've used and I'm really impressed by is Loom if you've tried that um video service you easily create videos and uh they've just integrated AI in such a useful and good way where it automatically creates chapters and summaries and edits and like so many things it does and it it like chat GPT or or open AI couldn't have done that without building a full like Loom competitor and they can't build competitors for all companies in the world uh I think and and I think it's that that'll just be a losing game I think yeah awesome well I'm very excited to see what happens with the ecosystem I'm also excited to see what happens with open source models have you been following development of these open source foundational models yeah so I think it like was quite surprised at how quickly they kind of catched up to to chant GPT at least I mean it still is the gold standard with GPT 4 but um I wouldn't have thought straight straight out of like U 202 at the end of 2022 that uh llama for example that Facebook would come with with with such a good model just a few months after it feels like feels like they all knew this was coming and they were ready there someone just need to needed to take the first step and then all the others came with their own Foundation models but yeah so I've been following that and I think there's many interesting things uh with that and has for example the cost which turns out to be uh quite challenging when using open AI huge element uh of it uh having the control uh internally of the model yourself uh having being able to put your own guard rails around it to to a larger degree yeah and also running it on device I think is super interesting which I've been been checking out or experimenting with in the browser for for one I'll add one thing I'll just jump into ad being able to add your own proprietary data to it without worrying about it leaking uh and being extractable from you know gpc4 like like you can kind of like get it you can do tricks to get it to reveal it training data and stuff like that and if you could do that and your data that you've put it into GPT 4 GPT 5 or whatever is part of the training data or or that some of the information you've already used somehow made it into the next version proprietary you know Trade Secrets could essentially be extracted that way so it's a security consideration um sorry I didn't mean to derail but but no no but it's a great Point like so running on device your own data your own guard rails um so many reasons why having your own model that's potentially running on on your own servers is Superior in a lot of use cases and of course cost uh because gp4 it's expensive to run a model that massive uh it occurred to me that a lot of people may not even know what some of these terms that we're using like Foundation model mean so figured maybe we could do a quick uh question and answer session where you could quickly Define some of these terms that people are likely hearing when they hear about AI engineering let's start with Foundation model yeah so so that's the kind of uh models that can do not one thing not one narrow use case but they are kind of foundational they have some kind of generalized intelligence I would say h and they can do language uh they can talk as a human they can do generate code uh they can they are multimodal much of the or many times multim modals they can deal with images uh and stuff like that so kind of more general not the old kind of narrow classification AI that can just spot a cat in an image and just do that no a foundation model can do many different things okay and what is embedding yeah so an embedding is I think it's a ma mathematical expression which um means to take one object and put it into a new space just a bit abstract but um essentially what it means is that you take from for example one object a paragraph about uh dogs for example and you turn that into you transform that into just a long array of uh numbers of floating Point numbers and those numbers then are a representation of the underlying meaning of that sentence they are an embedding of that paragraph uh but they are of course in a different space since they're now numbers and not like text yeah so that they can essentially play a part in I guess the weightings and how the neural network decides what output to get um and oh go ahead no because then you can actually it's quite cool to see see visualizations of this which we have in our our embeddings course uh where you kind of see that it's very easy Once you have something in an array of numbers it's very easy to mathematically compare the two and the distance between the two so that's how the AI can know that once it has two array two embeddings one of dog and one of cat and one of Saturn it'll it'll see that mathematically dog and cat are closer to each other than Saturn and know that oh these two things make are somewhat semantically connected and what is r a rag as some as people sometimes refer to it quickly so it's one of these uh threel acronyms that scare beginners off but aren't really that complex I feel like developers sometimes like try to come up with with with threeletter acronyms that are uh just to make it hard for people to kind of to understand what they're doing it's not just developers the government loves to come up with threeletter acronyms in the military and yeah maybe maybe it's a human thing to the kind of uh Define The In Crowd and the out crowd anyway okay I'll get to the point so um rag retrieval augmented generation imagine that you have a company uh and you have a bunch of internal data that and you want to create a knowledge Bank where where employees can ask for example like uh what's the vacation policy or refund policy for receipts and blah blah blah that that's obviously data that don't live in chat gpt's uh model or live in their model it's data that lives in a vect or that lives um when you use rag in a vector database in the form of a embeddings so uh rag means that you when you ask the question about what's our vacation policy like the app heads over to a vector database and figures out through your your question and the embeddings that are there and the ma mathematical calculations for for for calculating distance between embeddings it it manages to find the the the information it needs to reply to your question with the the kind of close data that you have in your company uh and and then you then you use chat GPT to or or whatever AI API whatever Foundation model you use to to turn that into more of a conversational reply with the the the data that you fetched via the like the rag um approach if that made sense so rag is essentially a way that you can uh take your own data and get it uh where it can easily quickly interface as opposed to I mean GPT 4 for example can now go and searching with Bing and can pull stuff up too like if I ask like what's the vacation policy of fre C Camp uh or something like that uh then it could potentially scav the web and find that particular thing but it's so much faster if you've got retrieval augmented generation right um rag so it's just one of those things that speeds things up and and ultimately reduces cost because one thing that people may not realize when they're using chat GPT is every single query costs like I don't know like 20 cents or something it's it adds up very quickly like just sitting there talking about like HeMan or something or like the Doom Eternal like lore or something like that which I was I was talking with it about yesterday like that I I cost open AI probably like four or five bucks for my discussion there right and that's why they're taking so much money because it's very expensive but R offers a way to potentially dramatically reduce costs um when you're yeah and also less hallucination as you kind of as it's able to get the the right data uh in the prompt like so the result from from from querying the vector databases so then used in The Prompt so to make the prompt more uh specific and um yeah yeah so I mean you mentioned the term hallucination which is a fun way it we come up for like essentially returning misinformation uh yeah but uh models hallucinated all the time early on uh and yeah like GPT 4 has gotten way better about that by the way like and it may not just be that gp4 has gotten better but also subconsciously like I might just say oh I think that's wrong like I doubt it more so like as people use these models they're going to become more uh skeptical and they're going to give her intuition for like okay does it really know what it's talking about or is it just is it just uh you know spitballing here you know uh and yeah so there are so many things you can do do to reduce those hallucinations and if you're talking about like a customer facing app you don't want it to like hallucinate your price of some product or something like that that could potentially be very catastrophic uh or you don't you don't want us to like hallucinate like legally binding contracts or something like that right um so yeah that is something that well let's talk a little bit about like AI engineering and like what it is that AI Engineers seek to do because we already have you know chat GPT and and we have the open AI API obviously using AI apis like that are part of the AI engineer role but maybe you can talk about like what the main work to be done what the open roles are talk about the field of AI engineering and maybe give people who are watching this listening to this a pitch for why they should consider becoming AI Engineers if they're already working as a frontend developer a full stack developer yeah so why should they I think uh economically it's a good idea because there are just so many managers and uh business owners out there today who feel that uh the AI train is leaving the station and their company is not on it but maybe their competitors are so being a little bit cynical using that uh kind of uh anxiety uh that is in a lot of companies these days with good reason I would say h it will definitely help your career if you're the kind of person that can step up and say hey actually I know some really cool features and and Next Generation things we can build into our or at least experiment with uh in our product by using these API because I know all about rag I know how to create an AI agent I know the AI safety prompt injection uh risks we need to think about uh and I know how to do open source models for example I mean if you if you can come with a pitch like that to your to your boss or to to to a company you want to work for I think it's it's definitely going to open doors uh yeah and it's it's what I would do when I if I had been a beginner now and actually it's also what I would do hadn't I been uh running scrimba I would just probably spend all my time just experimenting with building new kinds of experiences so so that's a fun part I I think um it's it's a lot of fun and and uh it's good for good for your career that's um I think why why people should jump on it so how would you recommend somebody who's interested in breaking into Tech maybe they're learning the code how would you recommend they start using Ai and how do they what should they do to get on the fast track to understanding these tools and being able to leverage them yeah obviously I got to plug our scrimba AI engineering path that that'll kind of take you take you on the fast lane but uh all that aside assuming that you've actually uh learned it one way or another I think there's so many cool things you can do to get attention these days and and get get kind of a an edge on the rest of the um on the rest of the market or the rest of the job Seekers out there what I would have done today I would have actually found my ideal company that I wanted to work for and then I would have uh thought as an AI engineer a what does what what does the dream product or what's one one AI product that this company should have or that it will have in three years maybe it's you want to really want to work for for the biggest law firm in your uh your town right then then I would like okay what's what's an like Law plus AI there's just so many ideas so many things you can do to help lawyers draft documents or read through uh previous law uh law documents ments about um right yeah about um what's the word president uh pres president yeah for example like that or legal president so many things that can be done uh or or marketing tools like quickly help you with your your uh problem uh with your tax problem or just b a bot for that whatever there's so many ways you can go to companies these days and say hey look at this prototype I've built you should really have such a tool in house how about you just hire me and I'll start building these kinds of things for you that that's how I would would try to get my foot in the door in the tech industry today had I been a complete beginner wow okay so just a just a recapitulate what you just said instead of applying you know through web forms or or going to networking events you can do that too but like to build a prototype specifically for the company and say hey have you considered adding this this to this product and using that as a way to potentially get hired on to build precisely that so almost kind of like inventing your own job within that company and your own product or extension of an existing product exactly you could even I mean if you really want to go go the last mile you deploy it with their design on a URL that resembles theirs and like just send it over to them as if fully branded product as well and yeah just don't try that with so many doors cuz in software they created like a a version of Mario that ran on uh windows or or Doss I guess and and Nintendo was like don't distribute this or we'll sue you so it won't it may backfire in some situations but like if you're approaching like probably a big American tech company maybe they'll be more acceptive sorry that person's career though that did it I mean they went on to create great things and it bolstered their reputation uh for being the first you know company to essentially get sidescrolling games working on Doss so yeah yeah I mean it worked out fine for them obviously they're all who who was it did you say in software the the creators of Doom and oh oh oh yeah all those games yeah but but originally they were I read that book masters of Doom but uh forgot about that chapter amazing book so uh it's been an amazing time talking with you I've learned so much about a AI engineering and where you think things are heading we've also heard a whole lot of practical tips for how you can incorporate AI into your daily workflow and potentially learn these tools and go out and create a role for yourself at your dream company so uh per I just want to thank you again for coming on the free code Camp podcast it's been a pleasure man likewise and uh thank you so much for for having me and for being a scrimba supporter ever since uh day one yeah yeah again just I love the invention the discovery that is uh scriba so it's it's been amazing to follow your journey over the years and uh excited to talk with you again in the future um everybody watching this until next week happy coding happy coding
