With timestamps:

00:00 - hey everybody welcome back to css3 in 30
00:02 - days today is day 16 and we are going to
00:05 - be making
00:06 - a modal window
00:08 - in
00:09 - only css3 a modal window is that pop-up
00:12 - window that you see on websites to
00:15 - subscribe to something or to give you a
00:16 - notification
00:17 - an alert of some sort it uh it's
00:20 - commonly used in bootstrap and other
00:22 - frameworks like that it's just a modal
00:24 - window it pops up in front of your
00:26 - screen to to alert you of something or
00:28 - request something of you typically it's
00:30 - built in
00:32 - javascript or jquery or the like
00:35 - which requires you to learn those
00:37 - languages or download a plugin or learn
00:39 - a specific framework which is not a big
00:41 - deal but this course is about making
00:43 - things only in css3 pushing the
00:45 - boundaries of css3 or at least pushing
00:47 - your boundaries of what you think css3
00:49 - can do and in this case we're going to
00:51 - just make a modal window only in css3
00:54 - now what's the benefit of that well you
00:56 - don't have to do it in
00:57 - javascript or jquery or anything like
00:59 - that you don't have to add that extra
01:00 - step but also this means that if the
01:03 - person viewing your website or your
01:04 - application does not have javascript
01:07 - activated or installed or whatever on
01:10 - their browser and sometimes that's the
01:11 - case
01:13 - then it still will appear because it's
01:15 - only css so that's pretty neat let's
01:17 - jump in and let me show you what that
01:18 - looks like here's d16 css only modal
01:21 - window we have the sandbox with our
01:24 - content here which will turn into the
01:26 - modal window as you can see the close
01:28 - button and such but down here in the
01:30 - final result
01:32 - you can see if we click to launch modal
01:34 - it will pop up just like so nice little
01:36 - animation a little background overlay
01:39 - the body content just some text and then
01:42 - a close button which also closes the
01:44 - modal window so let's jump into our code
01:46 - editor
01:47 - download 16 modal window give you a
01:50 - moment to do that pause the video come
01:52 - back here when you're ready check out
01:54 - the index file there's a few things that
01:56 - i want to note here and explain because
01:58 - the markup is very important in this
02:00 - lesson
02:01 - we're not going to be coding the markup
02:03 - but you need to understand how it works
02:04 - because it's crucial in how the css
02:07 - functions in this case so let's scroll
02:10 - down here and i will show you we have a
02:12 - input the first thing you see here under
02:14 - the h4 an input and that input is a
02:17 - check box with the id of click but the
02:19 - style is display none
02:21 - so this input
02:23 - makes everything happen so we're going
02:25 - to hide this input because we don't need
02:26 - to see it but
02:28 - the state of the input whether it is
02:30 - checked or unchecked is what's going to
02:33 - determine if our modal window appears or
02:35 - not the label here wraps an a tag which
02:39 - is a button
02:41 - but the label
02:42 - it has the attribute of four click which
02:45 - is tying into this input right here so
02:47 - when we click on
02:49 - this
02:50 - label so when we click on the button and
02:51 - we're actually clicking the label
02:52 - because that's the parent it's going to
02:55 - activate
02:57 - or check slash uncheck it will toggle
03:00 - this checkbox now if i if i
03:03 - you know remove this let me just show
03:05 - you
03:07 - remove the style you'll see a check box
03:09 - and if i click this it's going to check
03:12 - and uncheck it
03:13 - and also this down here is going to do
03:15 - the same
03:17 - and that is very important so i'm going
03:18 - to style display none
03:21 - so down here we have the div with the id
03:23 - or class of modal and just another div
03:24 - with the content and some markup that's
03:27 - just for styling purposes but another
03:28 - functionality element here is the label
03:30 - for click that is that id of click up
03:33 - here that check box
03:34 - and then again just a button with the
03:36 - class of close that toggles that input
03:38 - as well
03:39 - and then down below that as a sibling of
03:41 - the modal element we have the div with
03:43 - the class
03:45 - of overlay and that will be that black
03:46 - overlay that we use
03:48 - and really that is it so
03:51 - when you click on the label
03:54 - for id right here we click on this
03:56 - button it's going to
03:58 - toggle this input when you click on the
04:00 - close button it will also toggle the
04:01 - input in css we can check to see if
04:05 - if an input a check box is checked
04:08 - or otherwise which means we can style
04:11 - based on that attributes being checked
04:14 - or not so jump into your final css
04:18 - if you want to refer to these styles you
04:20 - always can as in every lecture every
04:22 - lesson we have a final css file where
04:25 - you can go through and see the only
04:26 - difference is in the final files it's
04:28 - going to be prepended with final double
04:31 - underscore and then the class and that's
04:33 - simply because the the styles
04:36 - the final styles under the final result
04:38 - are on the same page as the sandbox and
04:40 - i don't want to have conflicting styles
04:43 - and have when i style one thing style
04:45 - everything so i have a separate
04:47 - class or id
04:49 - for each of the elements but the
04:51 - difference is the final elements the
04:52 - final results start with final double
04:54 - underscore so that's what you'll see in
04:56 - the final css in every lesson
04:59 - so that's there for your reference as
05:01 - long as you keep in mind the
05:03 - the pre-pending final double underscore
05:06 - now let's jump into our
05:08 - sandbox.css and what we're going to do
05:10 - here is start coding up our styles so
05:13 - let's the first thing we're going to do
05:14 - is code up that overlay and we're simply
05:16 - going to say position
05:18 - fixed
05:20 - top 0
05:21 - and left right and bottom are all going
05:23 - to be zero
05:25 - that just tells the position fixed
05:26 - element that it's going to be connected
05:28 - to all four sides because a fixed
05:31 - position kind of jumps it up to the top
05:33 - top left so you need to position it
05:35 - specifically so it knows to stretch
05:37 - itself
05:38 - is that index
05:40 - 99 that's just going to put it in front
05:42 - of everything on the page for the most
05:44 - part
05:45 - background
05:46 - we're going to say
05:48 - i'm going to go double triple zero
05:50 - flat black pointer events
05:53 - this specific selector it specifies it
05:56 - says right here right on the on the code
05:57 - editor specifies under what
05:58 - circumstances if any a particular
06:00 - graphic element can become the target of
06:01 - mouse events so our overlay we don't
06:04 - actually want it to be the target of a
06:05 - mouse event so we want to be able to
06:06 - click through it we don't want it to to
06:08 - conflict with if we want to click
06:10 - something so the the overlay you can
06:13 - sorry the pointer events you can have
06:14 - set to auto or none or any number of
06:16 - different events in fact if you just
06:18 - check here in mozilla.org for the
06:21 - developer page you can see the syntax of
06:24 - pointer events basically if you choose
06:26 - auto the element behaves as if
06:28 - if the pointer events property were not
06:30 - specified at all so just default and
06:32 - none the element is never the target of
06:35 - mouse events that simply means if you
06:36 - click it it shouldn't register as
06:38 - anything so and we're just doing that
06:39 - for uh just to prevent any issues with
06:42 - uh clicking the overlay being on top of
06:44 - different things it's very likely we
06:45 - could not have the pointer events style
06:48 - in there at all and it would be fine on
06:49 - some browsers
06:50 - but we have that in there specifically
06:52 - to
06:53 - to avoid any conflict with click events
06:57 - so pointer events
06:59 - none
07:00 - for the overlay because we don't want to
07:02 - be able to have it register as a click
07:03 - event when we click on it opacity 0 we
07:06 - don't want to see it webkit transform
07:09 - we're going to scale it we're going to
07:10 - make it half the size so that scale is
07:12 - 0.5 we're going to put this as transform
07:15 - as a browser cross compatibility scale
07:19 - 0.5 so it's half the size right now but
07:21 - you can't see it because its opacity is
07:23 - 0. now
07:25 - let's move along we're going to style
07:26 - the input with the type of checkbox so
07:29 - our magical checkbox
07:31 - but the checked state of it
07:34 - so that checkbox with the checked state
07:36 - this is the style that we're gonna do
07:38 - but we're gonna use a general sibling
07:40 - combinator this little character
07:43 - means any sibling of this element so not
07:47 - necessarily just the adjacent siblings
07:49 - so if there's an input and then right
07:52 - below it that's an adjacent sibling as
07:54 - long as they're
07:55 - siblings in fact it could be any
07:58 - sibling that i specify within the
08:01 - document tree not necessarily an
08:03 - adjacent one so we're going to select
08:06 - overlay so basically when this when the
08:08 - input is checked
08:10 - i'm actually going to be selecting the
08:11 - overlay sibling pointer events auto for
08:14 - this
08:16 - opacity
08:17 - let's do 0.9
08:20 - i'm going to go webkit transform
08:23 - scale that to 1
08:25 - and i'm going to do that again here for
08:27 - cross compatibility on the browsers
08:29 - and then what we're going to do is
08:31 - webkit transition we're going to to
08:34 - transition the transform at 0.5 seconds
08:37 - and ease and we're going to transition
08:40 - the opacity at 0.5 seconds with an ease
08:43 - copy that paste it out remove webkit
08:45 - simply for cross
08:47 - cross browser compatibility that should
08:49 - do that okay so let's save that and see
08:51 - what happens now if i refresh and i
08:54 - click on click to launch modal
08:56 - we have our overlay slides up nice
09:00 - and just like so but i can't remove it
09:02 - because
09:03 - there's no way for me to remove it and
09:06 - that's something that we are actually
09:07 - going to start to do here so below that
09:11 - we're actually going to style the modal
09:14 - and we're going to say position fixed
09:16 - top 50
09:18 - left 50
09:20 - z index 100 we're going to do some
09:22 - webkit transform here
09:24 - we're going to translate
09:28 - which is the x and y position on the
09:30 - screen
09:32 - negative 15 negative 50
09:35 - and then scale
09:36 - 0.5 so half the size
09:39 - now if i save that let's see what it
09:41 - looks like so far so you can see it here
09:43 - it's 50 of the size and it's negative 50
09:46 - percent negative 20 if i were to change
09:48 - this
09:50 - to 50 and 50 let's see what happens it's
09:52 - somewhere down here
09:54 - so the negative 15 negative 50 is the
09:58 - uh is the position of it so it's
10:00 - actually right dead center as you can
10:02 - see but it's half the size we're going
10:04 - to scale it up once it's activated
10:06 - copy that paste it remove webkit
10:09 - there we go
10:11 - we're going to go here and we're going
10:12 - to say
10:14 - width
10:16 - and we're going to do 100
10:19 - and max width
10:21 - 640. so it's basically always 600 and uh
10:25 - a maximum of 640 but under that it will
10:27 - be 100 basically responsive
10:30 - styles pointer events
10:32 - none and opacity zero
10:36 - beautiful now i'm gonna do is style
10:39 - the modal when the input is checked so
10:42 - now it's hidden you can't see it so now
10:44 - let's
10:45 - do something when you can see it type of
10:48 - checkbox the checked state
10:51 - the general sibling combinator but we're
10:54 - going to style the modal this time
10:55 - pointer events
10:56 - auto opacity one we're going to do
10:59 - webkit transform and we're going to say
11:02 - translate we're going to position that
11:04 - uh it's going to be the same as this so
11:06 - i'm just going to copy that
11:07 - and paste it out
11:09 - but the scale is going to be 1.
11:12 - we want that to actually
11:14 - grow to its full size so it doesn't look
11:16 - silly
11:17 - and now
11:19 - we're going to do some transitions
11:22 - we're going to transform
11:25 - 0.5 seconds ease and the opacity at 0.5
11:29 - seconds and
11:31 - ease
11:32 - copy that sorry no i don't need to copy
11:34 - that
11:36 - yes i do
11:37 - for the webkit
11:38 - there we go
11:40 - that looks good so the transition will
11:43 - will
11:44 - transition the transform and the opacity
11:47 - so that means that those specific things
11:49 - will animate if i didn't specify that it
11:52 - would not affect
11:54 - uh it would not animate the transform or
11:56 - it would not animate the opacity you can
11:58 - actually animate the position and other
11:59 - elements as well
12:01 - other states
12:03 - and now we're going to do a transition
12:06 - delay
12:07 - 0.1 seconds
12:10 - and that's just gonna wait
12:12 - 0.1 seconds before it animates just to
12:14 - give it like a little bit of a cascading
12:16 - effect
12:17 - and one last thing we're going to just
12:19 - style up the modal
12:22 - double underscore content
12:24 - and we're going to say display block
12:26 - we're going to give it some padding of
12:27 - 30 pixels and a background of white or
12:29 - triple f
12:31 - save that check it out in the browser
12:32 - refresh click on your click to launch
12:34 - modal
12:35 - there it is it opens up the model is
12:37 - there the close button if we click it
12:39 - closes everything back out check this
12:41 - out when i click it watch that the
12:42 - overlay comes first and then 1.1 seconds
12:45 - later the modal pops up so it's very
12:47 - subtle but check it out
12:49 - it just has a nice
12:58 - creepy
13:00 - that was very good thank you for hanging
13:02 - out with me on number 16 day number 16
13:04 - moda window i hope you enjoyed it hope
13:07 - this gave you a few ideas to use on your
13:09 - own websites and applications perhaps
13:11 - build some css only modal windows in
13:14 - your own projects
13:16 - it's a very functional thing it's
13:18 - something that you can use it's cross
13:20 - browser compatible it's just css so it
13:22 - should work everywhere for the most part
13:24 - so enjoy have a good day i'll see you
13:26 - tomorrow in day number 17.
13:29 - [Music]
13:38 - do

Cleaned transcript:

hey everybody welcome back to css3 in 30 days today is day 16 and we are going to be making a modal window in only css3 a modal window is that popup window that you see on websites to subscribe to something or to give you a notification an alert of some sort it uh it's commonly used in bootstrap and other frameworks like that it's just a modal window it pops up in front of your screen to to alert you of something or request something of you typically it's built in javascript or jquery or the like which requires you to learn those languages or download a plugin or learn a specific framework which is not a big deal but this course is about making things only in css3 pushing the boundaries of css3 or at least pushing your boundaries of what you think css3 can do and in this case we're going to just make a modal window only in css3 now what's the benefit of that well you don't have to do it in javascript or jquery or anything like that you don't have to add that extra step but also this means that if the person viewing your website or your application does not have javascript activated or installed or whatever on their browser and sometimes that's the case then it still will appear because it's only css so that's pretty neat let's jump in and let me show you what that looks like here's d16 css only modal window we have the sandbox with our content here which will turn into the modal window as you can see the close button and such but down here in the final result you can see if we click to launch modal it will pop up just like so nice little animation a little background overlay the body content just some text and then a close button which also closes the modal window so let's jump into our code editor download 16 modal window give you a moment to do that pause the video come back here when you're ready check out the index file there's a few things that i want to note here and explain because the markup is very important in this lesson we're not going to be coding the markup but you need to understand how it works because it's crucial in how the css functions in this case so let's scroll down here and i will show you we have a input the first thing you see here under the h4 an input and that input is a check box with the id of click but the style is display none so this input makes everything happen so we're going to hide this input because we don't need to see it but the state of the input whether it is checked or unchecked is what's going to determine if our modal window appears or not the label here wraps an a tag which is a button but the label it has the attribute of four click which is tying into this input right here so when we click on this label so when we click on the button and we're actually clicking the label because that's the parent it's going to activate or check slash uncheck it will toggle this checkbox now if i if i you know remove this let me just show you remove the style you'll see a check box and if i click this it's going to check and uncheck it and also this down here is going to do the same and that is very important so i'm going to style display none so down here we have the div with the id or class of modal and just another div with the content and some markup that's just for styling purposes but another functionality element here is the label for click that is that id of click up here that check box and then again just a button with the class of close that toggles that input as well and then down below that as a sibling of the modal element we have the div with the class of overlay and that will be that black overlay that we use and really that is it so when you click on the label for id right here we click on this button it's going to toggle this input when you click on the close button it will also toggle the input in css we can check to see if if an input a check box is checked or otherwise which means we can style based on that attributes being checked or not so jump into your final css if you want to refer to these styles you always can as in every lecture every lesson we have a final css file where you can go through and see the only difference is in the final files it's going to be prepended with final double underscore and then the class and that's simply because the the styles the final styles under the final result are on the same page as the sandbox and i don't want to have conflicting styles and have when i style one thing style everything so i have a separate class or id for each of the elements but the difference is the final elements the final results start with final double underscore so that's what you'll see in the final css in every lesson so that's there for your reference as long as you keep in mind the the prepending final double underscore now let's jump into our sandbox.css and what we're going to do here is start coding up our styles so let's the first thing we're going to do is code up that overlay and we're simply going to say position fixed top 0 and left right and bottom are all going to be zero that just tells the position fixed element that it's going to be connected to all four sides because a fixed position kind of jumps it up to the top top left so you need to position it specifically so it knows to stretch itself is that index 99 that's just going to put it in front of everything on the page for the most part background we're going to say i'm going to go double triple zero flat black pointer events this specific selector it specifies it says right here right on the on the code editor specifies under what circumstances if any a particular graphic element can become the target of mouse events so our overlay we don't actually want it to be the target of a mouse event so we want to be able to click through it we don't want it to to conflict with if we want to click something so the the overlay you can sorry the pointer events you can have set to auto or none or any number of different events in fact if you just check here in mozilla.org for the developer page you can see the syntax of pointer events basically if you choose auto the element behaves as if if the pointer events property were not specified at all so just default and none the element is never the target of mouse events that simply means if you click it it shouldn't register as anything so and we're just doing that for uh just to prevent any issues with uh clicking the overlay being on top of different things it's very likely we could not have the pointer events style in there at all and it would be fine on some browsers but we have that in there specifically to to avoid any conflict with click events so pointer events none for the overlay because we don't want to be able to have it register as a click event when we click on it opacity 0 we don't want to see it webkit transform we're going to scale it we're going to make it half the size so that scale is 0.5 we're going to put this as transform as a browser cross compatibility scale 0.5 so it's half the size right now but you can't see it because its opacity is 0. now let's move along we're going to style the input with the type of checkbox so our magical checkbox but the checked state of it so that checkbox with the checked state this is the style that we're gonna do but we're gonna use a general sibling combinator this little character means any sibling of this element so not necessarily just the adjacent siblings so if there's an input and then right below it that's an adjacent sibling as long as they're siblings in fact it could be any sibling that i specify within the document tree not necessarily an adjacent one so we're going to select overlay so basically when this when the input is checked i'm actually going to be selecting the overlay sibling pointer events auto for this opacity let's do 0.9 i'm going to go webkit transform scale that to 1 and i'm going to do that again here for cross compatibility on the browsers and then what we're going to do is webkit transition we're going to to transition the transform at 0.5 seconds and ease and we're going to transition the opacity at 0.5 seconds with an ease copy that paste it out remove webkit simply for cross cross browser compatibility that should do that okay so let's save that and see what happens now if i refresh and i click on click to launch modal we have our overlay slides up nice and just like so but i can't remove it because there's no way for me to remove it and that's something that we are actually going to start to do here so below that we're actually going to style the modal and we're going to say position fixed top 50 left 50 z index 100 we're going to do some webkit transform here we're going to translate which is the x and y position on the screen negative 15 negative 50 and then scale 0.5 so half the size now if i save that let's see what it looks like so far so you can see it here it's 50 of the size and it's negative 50 percent negative 20 if i were to change this to 50 and 50 let's see what happens it's somewhere down here so the negative 15 negative 50 is the uh is the position of it so it's actually right dead center as you can see but it's half the size we're going to scale it up once it's activated copy that paste it remove webkit there we go we're going to go here and we're going to say width and we're going to do 100 and max width 640. so it's basically always 600 and uh a maximum of 640 but under that it will be 100 basically responsive styles pointer events none and opacity zero beautiful now i'm gonna do is style the modal when the input is checked so now it's hidden you can't see it so now let's do something when you can see it type of checkbox the checked state the general sibling combinator but we're going to style the modal this time pointer events auto opacity one we're going to do webkit transform and we're going to say translate we're going to position that uh it's going to be the same as this so i'm just going to copy that and paste it out but the scale is going to be 1. we want that to actually grow to its full size so it doesn't look silly and now we're going to do some transitions we're going to transform 0.5 seconds ease and the opacity at 0.5 seconds and ease copy that sorry no i don't need to copy that yes i do for the webkit there we go that looks good so the transition will will transition the transform and the opacity so that means that those specific things will animate if i didn't specify that it would not affect uh it would not animate the transform or it would not animate the opacity you can actually animate the position and other elements as well other states and now we're going to do a transition delay 0.1 seconds and that's just gonna wait 0.1 seconds before it animates just to give it like a little bit of a cascading effect and one last thing we're going to just style up the modal double underscore content and we're going to say display block we're going to give it some padding of 30 pixels and a background of white or triple f save that check it out in the browser refresh click on your click to launch modal there it is it opens up the model is there the close button if we click it closes everything back out check this out when i click it watch that the overlay comes first and then 1.1 seconds later the modal pops up so it's very subtle but check it out it just has a nice creepy that was very good thank you for hanging out with me on number 16 day number 16 moda window i hope you enjoyed it hope this gave you a few ideas to use on your own websites and applications perhaps build some css only modal windows in your own projects it's a very functional thing it's something that you can use it's cross browser compatible it's just css so it should work everywhere for the most part so enjoy have a good day i'll see you tomorrow in day number 17. do
