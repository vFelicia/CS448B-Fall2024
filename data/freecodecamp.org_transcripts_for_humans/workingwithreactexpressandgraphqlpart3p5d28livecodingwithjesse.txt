With timestamps:

00:04 - hey everybody welcome to live coding
00:06 - with jesse today
00:09 - we're going to continue on with what
00:10 - we're doing but i had an idea this
00:12 - morning about
00:14 - how to cut down on the number of
00:16 - components that we're using
00:19 - so i'm going to try to implement that
00:21 - idea
00:23 - i'm not sure
00:25 - i don't know i'm not sure if it'll work
00:26 - i haven't tried anything with it i just
00:29 - was getting ready for work this morning
00:31 - and
00:32 - it
00:33 - just came to me so
00:35 - we'll see
00:36 - let's see if it works
00:39 - um let's see
00:44 - i'm on the wrong project
00:46 - i wondered why i couldn't
00:48 - i see what we were working on
00:50 - so i've just been migrating
00:53 - a lot of data
00:55 - still not through yet
00:59 - and
01:03 - so this is what we've been doing
01:06 - every time we bring in
01:10 - let's see where pages are pages
01:13 - so we keep making a new page for every
01:16 - different type of content
01:18 - but it occurred to me
01:20 - that a lot of these are exactly the same
01:23 - we just have a different
01:26 - content types we're just grabbing
01:27 - different content with graphql so
01:30 - we have all these pages that are
01:33 - basically the same with the exception of
01:35 - the name
01:36 - and then we also have
01:40 - all these queries
01:42 - that are exactly the same except for the
01:44 - name
01:46 - so why not just have one page component
01:50 - that accepts
01:52 - not only the the id to get
01:56 - you know the
01:57 - specific type of content that we want
01:59 - but it will also accept from the router
02:04 - the
02:05 - the content type
02:07 - okay so then we can pass into the query
02:11 - so let me
02:14 - all right so right here we're passing in
02:16 - the id
02:18 - wow that's way too small let me make it
02:19 - bigger
02:21 - um
02:23 - so we're passing in the id
02:28 - here and then if we go to an actual
02:30 - component
02:33 - we can see
02:38 - it's pulling the id here and then that's
02:40 - getting passed to our query and then in
02:43 - our query
02:44 - we're using that
02:47 - um here for name
02:52 - so
02:54 - what if we not only passed in the name
02:56 - but we also passed in this
03:00 - so
03:02 - then we'd be able to use the same query
03:04 - for a variety of pages and we'd be able
03:06 - to use the same component for a variety
03:09 - of pages
03:10 - and i think this will work
03:13 - as i've been looking through the content
03:14 - on the site you know even more
03:17 - there's going to be a lot of content
03:19 - that just has the same basic structure
03:22 - i think this works well it will enable
03:24 - us to work faster and be less cluttered
03:26 - and then it still leaves open the
03:28 - possibility of customizing the different
03:31 - parts of the site later on
03:33 - because it wouldn't be that big of a
03:35 - deal to just change
03:38 - you know where
03:40 - a certain route goes so instead of using
03:43 - our default component we can make
03:46 - another component later or
03:48 - customize the default so we'll have
03:50 - different options
03:52 - so anyway let me know if that makes
03:54 - sense if there's any objections to that
03:57 - otherwise that's what we're going to try
03:58 - to do first
04:01 - and then we'll everything that we've
04:02 - done already we'll just leave it
04:04 - no no sense in redoing it right now
04:08 - but then as we bring in new
04:11 - content types
04:13 - we'll just route them through that
04:14 - default
04:15 - uh query and that default
04:18 - uh page component
04:21 - okay
04:23 - and i do need to keep this stream you
04:25 - know somewhat short so we'll see
04:27 - depending on how many questions are in
04:29 - the live chat
04:30 - i may cut the the coding part short
04:33 - so i have to pick up my kids from school
04:37 - so
04:38 - i gotta make sure i get the stream ended
04:40 - and
04:41 - finish anything i need to finish before
04:43 - i leave today
04:46 - let's see
04:48 - all right so i guess the
04:50 - best thing to do would just be to copy
04:52 - one of these pages
04:56 - so let's copy that and make a new page
04:59 - and oops actually we already have
05:01 - page.js let's just make page.js
05:04 - what we use here
05:10 - so page works and do we have
05:14 - department
05:20 - the post.js might
05:23 - be what went with page.js so we might
05:25 - just change that name to page.js because
05:28 - i don't think we're using that for
05:29 - anything else right now but first things
05:31 - first let's get this set up
05:34 - so
05:35 - we're going to import
05:40 - i guess we'll call this page query
05:47 - page query and we'll call this page
05:50 - even though it doesn't exist yet
05:53 - and then down here
05:55 - we're going to want to do
05:57 - page query
06:02 - and then for our options
06:08 - we're going to want to pass in
06:14 - let's see
06:16 - id
06:19 - can we can we do it to like this can we
06:21 - know id and type
06:26 - okay
06:27 - there it was all right so we'll have
06:29 - name id and then let's go with type
06:36 - type
06:41 - all right let's see
06:42 - we do want to change the name of this to
06:44 - page
06:52 - oh i've forgotten about this part
06:54 - okay so we do want to make sure
07:01 - that we use
07:04 - we're going to use type
07:10 - let's see if we can
07:12 - can we put bring in two all right
07:18 - and then
07:19 - [Music]
07:21 - let's use
07:23 - type here
07:28 - i think that'll work great
07:40 - oh you know maybe we need
07:55 - today
07:57 - shoot how am i going to get
08:02 - oh within here i needed to be
08:08 - this
08:09 - right are we getting this props data
08:13 - i don't want that i want
08:19 - i guess this props type
08:25 - okay
08:26 - sorry i'm not doing a good job
08:27 - explaining what's going on here uh so
08:29 - for those of you who aren't great with
08:32 - with react
08:35 - um
08:37 - here's here's what we're doing so
08:40 - when we pull things in here uh with
08:43 - nexjs which is what we use to build uh
08:46 - this react app
08:48 - uh when you return these they become
08:51 - available
08:53 - as as props right the function is get
08:56 - initial props so then down here
09:00 - where i'm going to grab the data
09:01 - eventually the data is going to be
09:03 - available
09:06 - um
09:08 - in props so
09:10 - we have this props and we made this
09:13 - const data right so we don't have to
09:14 - type this props all the time so that's
09:16 - why we're starting with data but then
09:19 - for the type since the type's now going
09:21 - to be variable we're going to grab this
09:23 - props types which is going to pull in
09:24 - whatever type we pass in
09:27 - from our server.js file
09:30 - we're also passing that same thing down
09:32 - to here to the query so
09:34 - it
09:35 - it should
09:37 - hopefully it'll make sense once we get
09:39 - it work if we get it working
09:41 - uh so it may not
09:43 - it may not work this is just the idea i
09:45 - had earlier i've never
09:46 - never tried it
09:48 - so
09:49 - maybe that's better let me try see if it
09:51 - works first and then we can go back and
09:53 - explain it no sense trying to explain
09:55 - something that's
09:56 - doesn't really work anyway
10:00 - all right
10:02 - uh let me make this capital
10:07 - capital
10:08 - page
10:14 - all right
10:19 - that's i think that's what we need from
10:22 - now so let's go in here
10:24 - to our queries
10:26 - let's grab this
10:30 - but then i want to go to
10:33 - our post query
10:35 - all right great so this is the sample
10:37 - one faculty departments
10:40 - did we take this
10:47 - you know what i'm not 100 sure that this
10:50 - isn't in use somewhere so i'm not going
10:53 - to change this let's make a new query
10:56 - called page
11:02 - and now let's paste this in and so here
11:05 - we have this variable name
11:07 - but now we're also going to have the
11:09 - variable
11:10 - type
11:15 - um
11:17 - hopefully this
11:18 - this works out
11:21 - what's this
11:23 - new line required about the file but not
11:24 - found um
11:26 - okay
11:29 - and let's change this to page query
11:44 - page query
11:51 - oh shoot
11:53 - all right so we were in the query we're
11:55 - defining
11:58 - name string and let's say
12:01 - type
12:04 - is string
12:12 - all right
12:13 - i'm not sure
12:15 - that seems like that's that had to
12:17 - happen
12:19 - but i'm not entirely sure let me check
12:21 - the live chat to see
12:25 - make a function
12:27 - let's see oh okay harsh it's saying that
12:30 - we
12:30 - i can't use this like that so i'm let me
12:33 - see the time stamp on that okay so that
12:35 - was just a minute ago so i'm assuming
12:38 - that i can't do this what i'm trying to
12:40 - do is that what you're saying
12:53 - all right so i'm waiting
12:55 - to hear that harsher says make a
12:57 - function
12:58 - i'm not
13:01 - i'm not 100 sure what
13:07 - um what what you're you're talking about
13:10 - harshit so
13:12 - i'm sure you know what you're talking
13:14 - about but i don't know
13:18 - so i'm just gonna keep i need to make a
13:20 - uh a route anyway so
13:24 - while i'm waiting on harshit
13:27 - um to explain more i will go to the
13:30 - server file and let me get rid of some
13:31 - of these because we certainly don't need
13:33 - all of these
13:41 - all right
13:42 - or should send me a link to
13:45 - jsfiddle
13:48 - let's check it out
13:57 - oops
14:11 - okay
14:12 - let's see i'm gonna copy and paste what
14:14 - harshit has in here
14:16 - so we all can see and compare
14:18 - all right so let's check it out
14:22 - all right so we can see
14:24 - the
14:27 - making it a function so we have
14:30 - associate query name we're pulling in
14:37 - name
14:38 - where name is name
14:49 - all right let me see
15:02 - i'm just saying return all right
15:08 - all right i'm a little bit confused so
15:11 - why are these
15:15 - why is this name name here and this one
15:17 - name name could i do
15:19 - [Music]
15:21 - this variable is a part of graphql
15:23 - syntax the dollar sign
15:33 - yeah so with the dollar sign that that's
15:36 - why i was thinking that i had to make a
15:38 - dollar sign variable here if i wanted to
15:40 - use it in here
15:41 - but what i'm wondering about is like can
15:43 - i rename this name here and this name
15:46 - here to type
15:49 - okay
15:52 - i just don't want it to be too confusing
15:55 - with
15:56 - lots of different variables name name or
15:58 - dollar sign name
16:01 - type
16:06 - type
16:08 - okay
16:09 - and we can change this to page query
16:17 - okay cool
16:18 - um
16:20 - all right let's get rid of this
16:28 - all right so now
16:31 - essentially we
16:33 - kind of have this function wrapper
16:35 - around here and then we're passing in
16:39 - the type
16:43 - do i need to
16:49 - string name
16:51 - let's see
16:55 - oh okay good point harshit okay so
16:57 - harshit's explaining that since this
17:00 - these backticks make it a template
17:02 - literal that's why we can pass this
17:04 - variable in like this
17:11 - let's see
17:24 - okay
17:25 - now harsha do we need to change anything
17:27 - in terms of how we're bringing the
17:29 - variable for name in
17:31 - or we or should we be good with that
17:39 - okay
17:42 - all right so save that let's go back to
17:44 - our page.js
17:46 - and
17:47 - graphql page query so should we then
17:50 - do
17:52 - put the id in like like here or will it
17:55 - still work
17:56 - to add our options in here
18:02 - so basically what i'm saying is you know
18:04 - should we put in
18:08 - type here
18:26 - hmm
18:40 - this props type
18:45 - okay heart should say no change
18:55 - okay
18:57 - all right that's what i thought so we
18:59 - can get rid of
19:00 - this and
19:03 - this
19:08 - okay
19:18 - all right so we have this we have this
19:20 - we need a route now
19:24 - i don't need that anymore
19:26 - oh don't say it
19:33 - all right so
19:37 - that's our route gonna be
19:41 - i guess we could use we could use any of
19:44 - our routes so let me just grab
19:46 - something we've already made so we can
19:47 - copy it
19:49 - and what did i pull over about
19:52 - yeah i think i pulled over some of the
19:54 - about pages yesterday so let's do that
19:57 - because we haven't made
20:01 - let me let me double check in my
20:04 - wordpress installation to make sure that
20:06 - we do have content for those
20:17 - okay i do have those pages
20:30 - okay in about five minutes i'm going to
20:32 - take a break
20:34 - and go back to the live chat answer some
20:36 - questions
20:40 - all right so
20:41 - we're going to have a route like this
20:44 - it's going to be about and then an id
20:46 - and then we're going to send in
20:49 - send it to the page
20:52 - component
20:53 - and
20:54 - with id we're also going to send a type
20:57 - and
20:58 - the type will be
21:02 - about page
21:08 - okay
21:13 - and let's
21:15 - restart the server
21:17 - all right let me give you the ngrok link
21:18 - as well so i didn't give that out yet
21:23 - here we are i think it's still one from
21:25 - yesterday it is
21:28 - um
21:30 - this should still work from yesterday so
21:32 - i'm gonna paste the same link in if it's
21:34 - not working i'll restart it
21:36 - uh but if you click the link i just
21:37 - pasted into the live chat you should be
21:40 - able to see the website now
21:43 - uh all right cool looks like it's
21:44 - working
21:47 - and
21:48 - i'm gonna restart the server here so it
21:51 - may not work for
21:52 - a few seconds
22:03 - okay
22:05 - about and then i need to find
22:09 - content where's my page
22:14 - i think it's on my other screen
22:24 - uh let's see
22:33 - this should be one
22:34 - let's see can i read props of undefined
22:37 - all right let's let's verify that this
22:39 - is the slug
22:48 - yeah our mission should be one
22:54 - can't read property props oh okay
22:58 - so we're at pages46
23:06 - okay so i can't do
23:09 - this props type
23:11 - here
23:16 - hmm
23:24 - type is not defined well let's see if
23:28 - it'll pass type is not defined okay
23:30 - all right so how do we get the type in
23:32 - here
23:42 - let's make sure that
23:46 - let's see whoops let me bring the live
23:48 - chat up
24:00 - hmm
24:05 - okay rook says try component name props
24:08 - type okay we try that i don't know if
24:10 - that'll work or not but that's worth a
24:12 - shot
24:30 - all right yeah that's not working either
24:34 - ah man i
24:36 - i remember having
24:38 - it might have been the same problem
24:41 - and i can't remember what i did about it
24:44 - and i hate when that happens um okay
24:49 - let me think
24:58 - all right it says use recompose i don't
25:01 - know what recompose is
25:32 - so i'm assuming recompose is a
25:36 - react apollo thing
26:02 - all right so i just looked up recompose
26:58 - all right um
27:02 - okay i guess
27:03 - i just read an article on recompose so
27:06 - it wasn't
27:07 - really documentation
27:12 - let's see
27:14 - we can make this
27:34 - all right cool i found the github
27:36 - of it now
27:50 - it looks like it can do a lot of stuff
28:07 - okay
28:12 - all right let me bring in how about this
28:15 - yeah it's time let me take a five minute
28:17 - break go to the live chat answer some
28:18 - questions and then when we come back
28:20 - we'll we'll bring in recompose and try
28:23 - to get access to the props down here
28:25 - uh to test this out
28:28 - actually we can test this out right now
28:30 - [Music]
28:32 - let's test it
28:33 - um
28:36 - page
28:38 - or what was it
28:39 - about
28:40 - page
28:51 - sorry property edges is undefined
28:57 - huh
29:00 - this is not passing it in
29:02 - maybe it's not passing things in like i
29:04 - wanna
29:05 - type about page
29:08 - hmm
29:15 - or like novels
29:34 - we might have other issues as well
29:37 - all right well let's uh let me go to the
29:39 - live chat
29:40 - i'm gonna take about five minutes
29:43 - go through the chat
29:46 - so if you have any questions uh please
29:47 - put them in the live chat
29:49 - and i'll get through as many as i can
29:58 - dakoran said i started work at 5 00 am
30:01 - that's pretty early to start working
30:13 - nikki says
30:14 - there are three hard things in
30:16 - programming naming things and off by one
30:19 - errors
30:25 - i like that one
30:29 - let's see
30:37 - alberto says it's like the there are two
30:39 - things you should know about infjs
30:42 - one they never tell you everything
30:48 - uh infj that's like from the um
30:52 - with myers-briggs personality
30:54 - test right
30:56 - i can't remember what all the letters
30:58 - stand for
31:00 - i don't even remember what i am
31:15 - uh
31:17 - balaji said can you please arrange your
31:19 - videos and uh properly it would be
31:22 - really helpful
31:23 - uh yeah i i do plan on arranging the
31:26 - videos i know i've been saying that for
31:28 - a long time it's just
31:30 - you know there's a whole list of things
31:32 - that i want to do and arranging the
31:34 - videos just has never made it like to
31:36 - the top of that list
31:40 - but i would like to arrange them
31:43 - so far i've had two different
31:44 - suggestions one is arrange them by
31:46 - project which
31:48 - would be pretty easy to do
31:50 - the other one is to arrange them by
31:51 - topic so that no matter what project it
31:53 - is you could see every video i've ever
31:55 - done on let's say graphql
31:58 - or uh routing or something you know
32:01 - which would be a lot harder because some
32:03 - videos i do a variety of things and so
32:08 - i
32:10 - i don't know i mean it would be hard to
32:11 - go back and watch
32:14 - every video to see what i've done
32:15 - because i
32:16 - i don't always title them or give them a
32:19 - description with everything that i'm
32:20 - doing
32:21 - so i don't know
32:25 - i i don't know if i'll be able to get
32:27 - them arranged by topic but i can
32:30 - definitely arrange them at least by
32:32 - project
32:42 - uh
32:44 - ravi raj says
32:46 - this looks cool but i have no idea what
32:48 - is happening
32:50 - um
32:51 - feel free to ask as many questions as
32:52 - you want
32:54 - uh some of the shows are a little bit
32:56 - easier to understand depending on what
32:57 - we're working on
33:01 - let's see
33:03 - richard says uh i'm new what's he
33:05 - working on
33:08 - and michael elsa says i'm always late so
33:10 - i have no idea what's going on right now
33:11 - uh right now we're we're trying to make
33:14 - a component
33:16 - a graphql query and a graphql query that
33:19 - could we can pass in
33:22 - the the type
33:25 - of content that we want and then the
33:28 - slug or id for a specific piece of
33:30 - content
33:31 - and then that way we can just keep
33:33 - reusing that one component in query
33:37 - instead of making new components and
33:39 - queries like we have been doing
33:47 - uh
33:48 - richard says i'm new in programming
33:51 - i'm here that's why
33:54 - i read and try to understand his code
33:57 - and uh
34:01 - yeah richard you know any questions that
34:03 - you have please let me know i'll be
34:06 - happy to help um
34:08 - what's trying to understand you know i'm
34:10 - sure there's something that you don't
34:11 - understand i bet there are other people
34:12 - watching or that are going to watch the
34:14 - recording that also
34:15 - you know could probably benefit from an
34:17 - explanation
34:19 - and it always helps me when i have to
34:20 - explain what i'm doing sometimes i
34:22 - realize that something i've done maybe i
34:24 - could do it better
34:25 - or you know it was kind of illogical
34:31 - and it says ionic framework uh no we're
34:33 - not using the ionic framework right now
34:36 - uh just just react
34:40 - andy says react don't use separation of
34:42 - concerns
34:43 - yeah it's not it's definitely a shift in
34:47 - thinking you know we don't separate
34:49 - everything out we
34:50 - um
34:51 - you know a component will have the mark
34:54 - up the javascript
34:58 - i'm really sorry let's keep yawning
35:02 - but one component
35:04 - could have you know all the markup
35:05 - javascript and styles
35:08 - that it would need all in one file
35:15 - uh harsh okay let's get back to
35:19 - let's get back to the code now
35:21 - um harshit says have spelled it correct
35:24 - test for faculty one time
35:26 - oh yeah that's true maybe i didn't spell
35:27 - everything correct about
35:30 - let's make sure it's initial props about
35:35 - um
35:38 - page page
35:44 - page
35:45 - page
35:46 - type
35:49 - not passing it about page a page
35:53 - and the
35:57 - by server
35:58 - page
36:12 - okay
36:47 - i'm still
36:52 - i'm still kind of wondering why
36:56 - why are we able to grab the id value
36:59 - here
37:01 - but not the type the only difference i
37:04 - could see is that
37:07 - the id is in
37:09 - curly brackets
37:14 - right
37:15 - i don't know what difference that would
37:16 - make
37:24 - and still yeah no difference why does
37:27 - id
37:28 - are we oh
37:33 - compose with root with data
37:44 - sorry
38:00 - see let me make sure let me go somewhere
38:02 - else just to make sure this is working
38:05 - okay
38:07 - sort of make sure i didn't accidentally
38:09 - mess up the wordpress installation again
38:15 - oh harshad says that he's got it all
38:18 - right cool watch it
38:23 - oops
38:24 - there we go
38:26 - um
38:29 - whoa use
38:31 - react clone element page props type
38:34 - all right let's let's try that out
39:00 - okay
39:04 - also
39:05 - want to change this back to what we had
39:15 - types
39:25 - okay
39:26 - why
39:28 - so what's our render
39:34 - all right
39:35 - let's see what we have now
39:39 - economy property edges so undefined okay
39:47 - all right well that's that's not bad
40:00 - so the error
40:03 - basically this seems to be working now
40:05 - which is good
40:06 - um so now the error is here in terms of
40:09 - the data that we're getting back so i
40:12 - need to make sure
40:15 - what we're passing in
40:17 - harsh it says try faculty
40:34 - are saying try faculty like make a
40:36 - faculty route and then try this on there
40:40 - actually let me
40:41 - let me use graphic ql just to make sure
40:43 - that this is working
40:46 - so i don't want to keep troubleshooting
40:48 - that if that's not really a
40:50 - problem um
40:53 - let's see
40:55 - where's our
40:58 - page query
41:09 - i can't find about in schema okay or
41:11 - she's already checking the schema that's
41:13 - a good idea
41:15 - about page by about page
41:19 - yeah i actually i see about paige
41:31 - hmm
41:57 - hmm
41:59 - let me check the router as well to see
42:01 - if i'm not
42:03 - routing something ahead of this
42:19 - okay
42:31 - all right that looks fine
42:47 - hmm
43:03 - see what i'm passing in
43:10 - sample query queries pose
43:28 - uh let me shh
43:36 - have we tried something yet that had two
43:38 - words
43:42 - is it faculty department is that what we
43:44 - used to
43:47 - no departments
43:54 - okay so we are using this form right
43:57 - the
43:58 - associate programs that edges
44:01 - okay
44:14 - so
44:24 - you do like this
44:37 - i kind of want to see what
44:39 - what we are getting here
44:44 - let's see
44:50 - let me double check the live chat it
44:52 - looks like
44:53 - harsh it says about pages the s
44:58 - uh the s
45:10 - so
45:20 - so should we use about pages
45:33 - no
45:45 - so my queries
45:51 - no need my queries
45:55 - major query where
45:58 - majors hmm
46:06 - so shoot programs
46:09 - huh
46:10 - oh you know what i need to restart the
46:12 - server sorry
46:14 - can't just make a change and have it
46:16 - work
46:39 - all right let's see
46:42 - all right so
46:44 - page such as
46:47 - about pages
46:51 - and then now
46:53 - here
46:57 - get out of here
47:06 - okay and this
47:08 - is this is floral too
47:16 - yep
47:18 - all right so everything does need to be
47:20 - plural
47:21 - and it looks like we we have that
47:33 - um
47:35 - nikki says it's taunting you flashing
47:37 - the site just before it gives you that
47:39 - error page i know right
47:43 - come on
47:45 - okay
47:54 - i should say save the page
47:56 - so
47:57 - all right i guess i have not saved it
47:59 - then
48:17 - all right so that's saved let me save
48:19 - everything the server
48:22 - save the server as well
48:25 - alright
48:31 - alright
48:32 - now no restart
48:52 - yes still nothing
49:05 - um
49:08 - uh ricky that's a good suggestion ricky
49:11 - says just console log this props
49:14 - yeah at this point
49:19 - yeah it's like what am i gonna do
49:21 - um
49:31 - let me take this out so i quit getting
49:33 - errors
49:44 - i could console log in let's console
49:46 - though
49:53 - i want to make sure that i'm getting
49:54 - type
49:56 - in here properly too
50:28 - um
50:30 - cannot query field undefined
50:35 - all right so it looks like
50:37 - type it is not getting passed in
50:39 - properly
50:44 - let's see
51:04 - all right so that does fix it
51:16 - ah okay
51:19 - all right so
51:20 - at least we know where the problem is
51:22 - now
51:24 - so everything is coming in
51:27 - if as long as we can pass
51:30 - about pages in
51:33 - it works so we know we can get it from
51:36 - this props
51:39 - about pages
51:43 - but we need
51:46 - so we need to be able to get this props
51:48 - type
51:51 - here
52:12 - i mean
52:13 - honestly
52:14 - like this is just gonna i don't know if
52:17 - this is the react way but like just
52:18 - thinking like javascript wise like this
52:21 - is just a scope issue right like
52:25 - uh
52:26 - let
52:28 - um
52:31 - type
52:33 - equal
52:34 - i mean
52:35 - can we do something like this type is
52:37 - just oh yeah i don't want to do um
52:41 - query
52:42 - type
52:45 - and then in here i can just say
52:54 - query type
52:55 - equals type
52:59 - and then use query type
53:12 - no
53:14 - all right let's see
53:16 - expected
53:19 - name but found
53:22 - cleavage
53:31 - ah
53:33 - all right we have a different error now
53:36 - which is progress
53:38 - in our queries
53:42 - okay so we expected a name did not get
53:45 - the name
53:49 - let's go
53:55 - let's console uh
53:57 - type
53:58 - see what we're getting
54:05 - yeah yeah
54:07 - okay
54:24 - let me see
54:27 - all right harsh it's saying add yarn add
54:30 - recompose
54:31 - um
54:34 - actually yeah this is beside the point
54:37 - we're obviously not getting the right
54:38 - data in because we got it to work before
54:41 - when we just hard coded it so
54:44 - so what i did must not have worked
54:47 - i don't know why but it doesn't work
54:51 - so
54:52 - let's get rid of what i just did then
55:08 - all right we don't need this log anymore
55:13 - all right
55:14 - and
55:15 - great all right so harsh is saying use
55:18 - recompose
55:20 - i'll install it let's see
55:36 - and keep an eye on the time
55:38 - okay
55:46 - all right so i have recomposed now
55:49 - i've never used recompose i have no idea
55:51 - how to use recompose i've just glanced
55:53 - for a few seconds at the documentation
55:56 - here
56:07 - so
56:08 - i'm guessing i would use the map props
56:13 - with recompose
56:29 - map props or with props okay with props
56:33 - all right i'm checking out the api
56:35 - documentation right now
56:52 - all right
56:53 - let's uh
57:04 - so
57:14 - this and then
57:16 - down here
57:26 - oh michael korea is asking how to get to
57:28 - the page that gives the errors let me
57:31 - just paste
57:34 - this is what i'm using so you would
57:36 - replace localhost 3000 with the ngrok
57:39 - url obviously
57:41 - um but that's
57:42 - that's what i'm trying to test out
57:50 - all right let's see
58:00 - so now i'm gonna have a
58:02 - with props
58:18 - create props
58:32 - all right so it's like mac so i'm
58:35 - reading documentation for this on my
58:36 - other screen so
58:38 - that's why i'm talking to myself here
58:41 - um okay
58:51 - hmm
59:04 - um
59:42 - with props
59:46 - foreign
60:02 - thank you
60:16 - it looks like i can also use
60:24 - default props
60:35 - let's see if i can do
60:39 - um
61:00 - so
61:15 - all right i need to find an example of
61:18 - this because
61:25 - i'm not sure
62:05 - you
62:26 - now
63:00 - all right let me bring over something i
63:02 - found that's somewhat similar to what
63:04 - we're doing
63:06 - it seems like
63:08 - all right so right now
63:09 - they're making uh higher order
63:11 - components but
63:14 - uh in here they're they're importing
63:17 - with state from recompose which is
63:19 - similar to the with props that we're
63:21 - trying to use
63:23 - and let me give you
63:26 - here's the link to the api documentation
63:29 - that i'm looking at right now
63:31 - and uh it has the anchor directly to the
63:34 - with prop section so maybe if you all
63:38 - can uh can check it out
63:40 - you know knowing what we're trying to do
63:42 - with it you can help me
63:44 - for some reason i'm just missing
63:46 - something but anyway
63:48 - so basically export default compose
63:51 - which is exactly what we're doing
63:53 - but then here it says with states
63:57 - and then we brought in the is
63:59 - visible
64:01 - um and toggle viz
64:04 - so
64:05 - and with handlers we say toggle
64:07 - visibility and it looks like there's now
64:10 - access to toggle vis
64:12 - and is visible here
64:15 - so
64:16 - with that it seems like what we should
64:18 - be able to do then is
64:21 - within with props we should be able to
64:23 - just say
64:26 - type
64:30 - and then now we'll have access to type
64:37 - as a variable
64:43 - i'll make sure i put a comma there
64:49 - type is not defined
64:51 - okay let's see
64:52 - what i miss
64:57 - let's see
65:05 - hmm
65:16 - ah let's see maybe
65:24 - no it's still not going to do anything
65:30 - all right
65:35 - all right let's check this out again
66:01 - okay
66:06 - oh all right awesome okay so they're
66:08 - using with props
66:21 - um
66:55 - all right so
67:10 - all right let's check out with props now
67:13 - uh looks like we can grab it
67:17 - here
67:19 - let's just grab that pull it over here
67:23 - with props
67:25 - and
67:47 - so
68:04 - all right so we're returning
68:34 - all right michael chris is in the
68:36 - i guess in the query are we starting off
68:39 - with where
68:42 - don't you need to declare what we're
68:44 - filtering on
68:47 - yes
69:28 - all right let me see
69:30 - i can't see my chat my chat window is
69:32 - now zoomed in and won't let me zoom out
69:36 - and now i can't see anything
69:43 - okay
69:46 - now why is it doing this
69:59 - there we are finally okay
70:02 - um page create shouldn't it be page
70:04 - where
70:06 - um
70:07 - yeah the query is fine
70:11 - so
70:13 - there's the where we have so
70:16 - we're pulling in the type so that should
70:19 - be
70:20 - it should be okay
70:39 - all right so let's go back to
70:42 - here
70:44 - and just say
70:46 - so this is
71:06 - all right
71:47 - all right
72:07 - it's
72:09 - so good
72:22 - all right i don't really think this will
72:24 - work
72:25 - let's give it a shot
72:30 - type no still nothing all right
72:36 - this props type
72:38 - no it shouldn't
73:00 - all right
73:02 - save this
73:05 - props is undefined
73:07 - okay
73:08 - i'm at 50 props and fine yep
73:11 - okay
73:20 - okay
73:35 - all right harsh it says now final
73:37 - solution update apollo there is a new
73:39 - query component
73:45 - no need of composing then
73:59 - all right
74:01 - let's check this out then
74:14 - all right so let's check out this new
74:17 - component
74:20 - that we can use
74:22 - whoops github.com apollo graphql
74:33 - why is this not working
74:38 - releases
74:40 - that was weird
74:43 - new query component
75:05 - wow
75:14 - what
75:28 - so
75:43 - wow
75:58 - okay
75:59 - all right let's try it out then
76:10 - uh we'll check our package json to make
76:12 - sure we get the version we want so this
76:15 - should be
76:18 - two one
76:19 - two 2.1
76:31 - no didn't get that all right
76:56 - right
77:06 - all right we're taking out recompose
77:10 - and
77:11 - let's make sure we take this out
77:14 - of our component
77:16 - i'm we may not get this working in time
77:19 - we'll see
77:21 - um
77:23 - recompose
77:33 - um
77:47 - okay
78:01 - okay
78:08 - oops
78:16 - all right so let's try to get
78:18 - this
78:21 - oops where's it at
78:26 - here it is
78:27 - uh let's try to get this beta version
78:29 - running
78:31 - so
78:39 - all right let's see if this works so
78:41 - this is a harsh it's suggestion
78:50 - two we have
78:52 - react apollo latest version
78:57 - nope
79:07 - oh okay i see your other suggestion
79:09 - there horror
79:33 - yeah
79:34 - and that is what we need right
79:36 - beta
79:37 - 2.1
79:39 - 2.1 awesome
79:43 - okay
79:43 - [Music]
79:45 - let's just make sure you didn't break
79:46 - everything
79:47 - okay cool still works
79:53 - all right so now
79:55 - i guess we can use
79:58 - stuff like this
80:00 - import graphql
80:02 - query
80:03 - let's import these
80:12 - [Music]
80:25 - so
80:27 - can we just get rid of both of those
80:29 - then
80:39 - and then down here
80:52 - do we need any of this now
80:56 - we still need compose
81:00 - all right
81:24 - uh sun bass says jessie you are alien
81:31 - as far as i know
81:33 - i am not but maybe maybe you know
81:37 - something that i don't
81:40 - ugh
82:02 - all right
82:06 - all right let's go back to our example
82:08 - here
82:17 - so let's take this
82:25 - oops let me see your function my
82:26 - computer
82:55 - all right let's
82:56 - we have query
82:58 - and
83:00 - now we need to grab what our query was
83:04 - [Music]
83:14 - um
83:20 - okay
83:27 - okay and we should be able to do
83:31 - our name equals string
83:39 - and how are we
83:44 - reassigning let's see
83:49 - okay so we're saying variables name id
83:51 - so we should be able to
84:08 - we should be able to add in
84:29 - this props type
84:33 - and
84:38 - now that's what i'm confused about
84:48 - it's ours just saying leave the query
85:00 - i'm not exactly sure where he was
85:02 - talking about to leave the query
85:08 - anyway
85:10 - what i'm not sure about is
85:12 - we're past when we're passing this name
85:14 - in
85:17 - irish it says remove the query stuff
85:23 - so all this query stuff
85:40 - uh
86:10 - okay
86:49 - michael says i'm so lost so i'm gonna
86:50 - need i'm gonna read up
86:52 - on so i understand what's going on
86:55 - i'm pretty lost myself here as well so
87:00 - i guess just to catch everybody up to
87:02 - speed including myself just as a review
87:05 - we've updated
87:08 - uh
87:10 - to
87:12 - the beta version the 2.1 beta version of
87:15 - react apollo there's a different way to
87:18 - do queries
87:21 - a query component
87:24 - i'm trying to
87:26 - convert
87:27 - over to using this query component
87:30 - what i'm not sure about is
87:33 - i was trying to follow harshit and i get
87:36 - the messages
87:38 - remove graphql from export so i did that
87:40 - no need of query and then the next
87:42 - message was leave the query
87:44 - and then the next message was remove
87:46 - query stuff
87:47 - so i'm not exactly sure
87:50 - what
87:51 - what's going on
87:52 - because
87:55 - i i've gotten both leave the query and
87:58 - remove the query
88:04 - so i'm going to drink some g fuel
88:26 - um
88:29 - all right harshit says
88:32 - you you have adam still let me edit the
88:34 - code using teletype it's hard to explain
88:36 - in the chat
88:38 - um
88:39 - yeah i do have adam
88:47 - all right let me check the time
88:50 - see if we have time for this
88:52 - um
88:55 - i really do want to use teletype because
88:57 - it sounds really cool but i think i'm
88:59 - gonna have to end the stream
89:01 - because i need to
89:06 - i need to make sure i get everything
89:07 - ended in enough time for me to
89:10 - um
89:11 - get ready and pick up my kids
89:14 - from school
89:16 - so what if
89:19 - what if we
89:24 - wrap things up here i commit what i have
89:28 - and then
89:31 - work on it tomorrow
89:37 - does that sound good
89:46 - so i kind of figured on the stream being
89:48 - over by now
89:52 - all right i'm just i'm going to scroll
89:54 - through really quickly just to make sure
89:58 - there hasn't been a question that i
90:00 - missed
90:04 - uh ravi raj says are you an independent
90:08 - developer or work for free code cam i
90:10 - volunteer for free code camp
90:13 - and i work for a university
90:16 - so um
90:17 - i'm a front-end developer for a small
90:19 - university
90:22 - i also do some work on the side
90:24 - i like freelancing work
90:46 - drewness when i use visual studio code
90:49 - on windows the font isn't that bold how
90:51 - can i make it look like that
90:54 - um
90:55 - i'm not sure i'm using the seti theme so
90:58 - scti
91:00 - i don't think i've done anything else
91:02 - besides just use a different theme i
91:05 - mean i've made the font bigger
91:08 - um but other than that i don't maybe
91:10 - it's just the theme
91:17 - igor says where can i find your custom
91:20 - post types post plugin
91:24 - i don't know if i have it
91:31 - i don't know if i have it available on
91:32 - github or not
91:35 - check out the
91:37 - uh ci react repo
91:40 - so
91:42 - it'll be in the same organization as
91:44 - this repo
91:45 - it might be in there it might be listed
91:48 - as like
91:49 - ci custom post types or category custom
91:53 - post types it's basically the same
91:55 - plugin i'll just
91:57 - add some some different types
92:01 - but maybe it might not be a bad idea to
92:03 - add that in with this repo as well
92:32 - uh michael kerr is asking about a react
92:34 - tutorial
92:39 - codecademy has a
92:41 - pretty easy intro react tutorial
93:05 - uh michael cruz says is there any way to
93:06 - see your data structure not sure how
93:08 - wordpress works
93:10 - um
93:14 - i don't know i guess
93:18 - i mean normally if i'm running wordpress
93:21 - i usually have it running on something
93:22 - that has
93:24 - like php my admin
93:27 - and i can look at it but i don't have
93:29 - that
93:30 - right now
93:32 - um
93:34 - so i i don't know i mean it's following
93:36 - the same structure as a normal wordpress
93:39 - so maybe there's
93:41 - like an example online of the normal
93:43 - data structure for wordpress
93:49 - all right so
93:51 - yeah let me commit this
93:55 - let's see what the status is
93:59 - package json
94:01 - pages
94:03 - okay
94:09 - oh what do i need um
94:15 - a new feature
94:30 - don't think so
94:35 - ah
94:36 - shoot
94:38 - i figured that'd be the case queries
94:41 - defined but never used
94:45 - gql is defined
94:49 - let's get rid of that and then i'm
94:51 - pretty sure i use query did i not save
94:53 - it
95:02 - all right
95:19 - so
95:37 - what
95:40 - 54. maybe i should just take that stuff
95:43 - out
96:01 - yes take that out let's take a
96:06 - page query
96:10 - and query
96:15 - and graphql
96:17 - there we are
96:24 - harsha says just use no verify yeah that
96:26 - would have made sense i should have done
96:28 - that
96:37 - all right let's just run a get
96:44 - how did my server.js get modified
96:51 - thank you
97:10 - yep that's what i meant
97:18 - uh come on
97:21 - no verify
97:25 - two dashes
97:34 - there we are
97:40 - all right
97:42 - okay
97:50 - all right everything is now committed
97:53 - and
97:55 - we will pick this up again tomorrow
97:58 - so i've already gone through all the
97:59 - questions in the live chat
98:01 - and
98:02 - my brain is tired right now so
98:06 - um learning something new is hard enough
98:10 - but uh it's i
98:13 - i guess learning something new on the
98:15 - live stream
98:17 - is harder
98:18 - so
98:19 - um
98:20 - all right so i'll see y'all tomorrow
98:23 - kind of like
98:24 - i have an early meeting tomorrow
98:28 - i'm gonna try to get in early enough to
98:30 - schedule the stream before my meeting
98:33 - and then that way i can jump right into
98:36 - it if i don't get in that early though i
98:38 - might not be
98:40 - i'll try to do the stream at the same
98:41 - time but it might not actually be
98:43 - scheduled
98:44 - uh so you may not be getting a
98:46 - notification
98:49 - on youtube you know like an early
98:51 - notification or any at all so i'll i'll
98:53 - see i'm gonna try my best to get in and
98:56 - uh and get the schedule
98:58 - all right
99:00 - thanks for all the help
99:02 - um almost had it we almost had it today
99:06 - i think we're really close i mean
99:08 - basically everything's working except
99:10 - just need to pass that that's um type
99:13 - through
99:14 - uh to the query so we knew it already
99:17 - worked when we manually passed it
99:19 - through
99:21 - so i'm i mean i'm happy with that the
99:23 - concept works
99:25 - so from here on out it'll definitely cut
99:27 - down on the amount of work we have to do
99:29 - and it'll clean things up so
99:32 - uh i guess i guess we did enough to
99:34 - prove that the concept
99:37 - works
99:38 - so we could let's count that as a win
99:40 - right
99:43 - all right uh thanks for watching and uh
99:46 - i'll be back tomorrow until then have a
99:48 - great day

Cleaned transcript:

hey everybody welcome to live coding with jesse today we're going to continue on with what we're doing but i had an idea this morning about how to cut down on the number of components that we're using so i'm going to try to implement that idea i'm not sure i don't know i'm not sure if it'll work i haven't tried anything with it i just was getting ready for work this morning and it just came to me so we'll see let's see if it works um let's see i'm on the wrong project i wondered why i couldn't i see what we were working on so i've just been migrating a lot of data still not through yet and so this is what we've been doing every time we bring in let's see where pages are pages so we keep making a new page for every different type of content but it occurred to me that a lot of these are exactly the same we just have a different content types we're just grabbing different content with graphql so we have all these pages that are basically the same with the exception of the name and then we also have all these queries that are exactly the same except for the name so why not just have one page component that accepts not only the the id to get you know the specific type of content that we want but it will also accept from the router the the content type okay so then we can pass into the query so let me all right so right here we're passing in the id wow that's way too small let me make it bigger um so we're passing in the id here and then if we go to an actual component we can see it's pulling the id here and then that's getting passed to our query and then in our query we're using that um here for name so what if we not only passed in the name but we also passed in this so then we'd be able to use the same query for a variety of pages and we'd be able to use the same component for a variety of pages and i think this will work as i've been looking through the content on the site you know even more there's going to be a lot of content that just has the same basic structure i think this works well it will enable us to work faster and be less cluttered and then it still leaves open the possibility of customizing the different parts of the site later on because it wouldn't be that big of a deal to just change you know where a certain route goes so instead of using our default component we can make another component later or customize the default so we'll have different options so anyway let me know if that makes sense if there's any objections to that otherwise that's what we're going to try to do first and then we'll everything that we've done already we'll just leave it no no sense in redoing it right now but then as we bring in new content types we'll just route them through that default uh query and that default uh page component okay and i do need to keep this stream you know somewhat short so we'll see depending on how many questions are in the live chat i may cut the the coding part short so i have to pick up my kids from school so i gotta make sure i get the stream ended and finish anything i need to finish before i leave today let's see all right so i guess the best thing to do would just be to copy one of these pages so let's copy that and make a new page and oops actually we already have page.js let's just make page.js what we use here so page works and do we have department the post.js might be what went with page.js so we might just change that name to page.js because i don't think we're using that for anything else right now but first things first let's get this set up so we're going to import i guess we'll call this page query page query and we'll call this page even though it doesn't exist yet and then down here we're going to want to do page query and then for our options we're going to want to pass in let's see id can we can we do it to like this can we know id and type okay there it was all right so we'll have name id and then let's go with type type all right let's see we do want to change the name of this to page oh i've forgotten about this part okay so we do want to make sure that we use we're going to use type let's see if we can can we put bring in two all right and then let's use type here i think that'll work great oh you know maybe we need today shoot how am i going to get oh within here i needed to be this right are we getting this props data i don't want that i want i guess this props type okay sorry i'm not doing a good job explaining what's going on here uh so for those of you who aren't great with with react um here's here's what we're doing so when we pull things in here uh with nexjs which is what we use to build uh this react app uh when you return these they become available as as props right the function is get initial props so then down here where i'm going to grab the data eventually the data is going to be available um in props so we have this props and we made this const data right so we don't have to type this props all the time so that's why we're starting with data but then for the type since the type's now going to be variable we're going to grab this props types which is going to pull in whatever type we pass in from our server.js file we're also passing that same thing down to here to the query so it it should hopefully it'll make sense once we get it work if we get it working uh so it may not it may not work this is just the idea i had earlier i've never never tried it so maybe that's better let me try see if it works first and then we can go back and explain it no sense trying to explain something that's doesn't really work anyway all right uh let me make this capital capital page all right that's i think that's what we need from now so let's go in here to our queries let's grab this but then i want to go to our post query all right great so this is the sample one faculty departments did we take this you know what i'm not 100 sure that this isn't in use somewhere so i'm not going to change this let's make a new query called page and now let's paste this in and so here we have this variable name but now we're also going to have the variable type um hopefully this this works out what's this new line required about the file but not found um okay and let's change this to page query page query oh shoot all right so we were in the query we're defining name string and let's say type is string all right i'm not sure that seems like that's that had to happen but i'm not entirely sure let me check the live chat to see make a function let's see oh okay harsh it's saying that we i can't use this like that so i'm let me see the time stamp on that okay so that was just a minute ago so i'm assuming that i can't do this what i'm trying to do is that what you're saying all right so i'm waiting to hear that harsher says make a function i'm not i'm not 100 sure what um what what you're you're talking about harshit so i'm sure you know what you're talking about but i don't know so i'm just gonna keep i need to make a uh a route anyway so while i'm waiting on harshit um to explain more i will go to the server file and let me get rid of some of these because we certainly don't need all of these all right or should send me a link to jsfiddle let's check it out oops okay let's see i'm gonna copy and paste what harshit has in here so we all can see and compare all right so let's check it out all right so we can see the making it a function so we have associate query name we're pulling in name where name is name all right let me see i'm just saying return all right all right i'm a little bit confused so why are these why is this name name here and this one name name could i do this variable is a part of graphql syntax the dollar sign yeah so with the dollar sign that that's why i was thinking that i had to make a dollar sign variable here if i wanted to use it in here but what i'm wondering about is like can i rename this name here and this name here to type okay i just don't want it to be too confusing with lots of different variables name name or dollar sign name type type okay and we can change this to page query okay cool um all right let's get rid of this all right so now essentially we kind of have this function wrapper around here and then we're passing in the type do i need to string name let's see oh okay good point harshit okay so harshit's explaining that since this these backticks make it a template literal that's why we can pass this variable in like this let's see okay now harsha do we need to change anything in terms of how we're bringing the variable for name in or we or should we be good with that okay all right so save that let's go back to our page.js and graphql page query so should we then do put the id in like like here or will it still work to add our options in here so basically what i'm saying is you know should we put in type here hmm this props type okay heart should say no change okay all right that's what i thought so we can get rid of this and this okay all right so we have this we have this we need a route now i don't need that anymore oh don't say it all right so that's our route gonna be i guess we could use we could use any of our routes so let me just grab something we've already made so we can copy it and what did i pull over about yeah i think i pulled over some of the about pages yesterday so let's do that because we haven't made let me let me double check in my wordpress installation to make sure that we do have content for those okay i do have those pages okay in about five minutes i'm going to take a break and go back to the live chat answer some questions all right so we're going to have a route like this it's going to be about and then an id and then we're going to send in send it to the page component and with id we're also going to send a type and the type will be about page okay and let's restart the server all right let me give you the ngrok link as well so i didn't give that out yet here we are i think it's still one from yesterday it is um this should still work from yesterday so i'm gonna paste the same link in if it's not working i'll restart it uh but if you click the link i just pasted into the live chat you should be able to see the website now uh all right cool looks like it's working and i'm gonna restart the server here so it may not work for a few seconds okay about and then i need to find content where's my page i think it's on my other screen uh let's see this should be one let's see can i read props of undefined all right let's let's verify that this is the slug yeah our mission should be one can't read property props oh okay so we're at pages46 okay so i can't do this props type here hmm type is not defined well let's see if it'll pass type is not defined okay all right so how do we get the type in here let's make sure that let's see whoops let me bring the live chat up hmm okay rook says try component name props type okay we try that i don't know if that'll work or not but that's worth a shot all right yeah that's not working either ah man i i remember having it might have been the same problem and i can't remember what i did about it and i hate when that happens um okay let me think all right it says use recompose i don't know what recompose is so i'm assuming recompose is a react apollo thing all right so i just looked up recompose all right um okay i guess i just read an article on recompose so it wasn't really documentation let's see we can make this all right cool i found the github of it now it looks like it can do a lot of stuff okay all right let me bring in how about this yeah it's time let me take a five minute break go to the live chat answer some questions and then when we come back we'll we'll bring in recompose and try to get access to the props down here uh to test this out actually we can test this out right now let's test it um page or what was it about page sorry property edges is undefined huh this is not passing it in maybe it's not passing things in like i wanna type about page hmm or like novels we might have other issues as well all right well let's uh let me go to the live chat i'm gonna take about five minutes go through the chat so if you have any questions uh please put them in the live chat and i'll get through as many as i can dakoran said i started work at 5 00 am that's pretty early to start working nikki says there are three hard things in programming naming things and off by one errors i like that one let's see alberto says it's like the there are two things you should know about infjs one they never tell you everything uh infj that's like from the um with myersbriggs personality test right i can't remember what all the letters stand for i don't even remember what i am uh balaji said can you please arrange your videos and uh properly it would be really helpful uh yeah i i do plan on arranging the videos i know i've been saying that for a long time it's just you know there's a whole list of things that i want to do and arranging the videos just has never made it like to the top of that list but i would like to arrange them so far i've had two different suggestions one is arrange them by project which would be pretty easy to do the other one is to arrange them by topic so that no matter what project it is you could see every video i've ever done on let's say graphql or uh routing or something you know which would be a lot harder because some videos i do a variety of things and so i i don't know i mean it would be hard to go back and watch every video to see what i've done because i i don't always title them or give them a description with everything that i'm doing so i don't know i i don't know if i'll be able to get them arranged by topic but i can definitely arrange them at least by project uh ravi raj says this looks cool but i have no idea what is happening um feel free to ask as many questions as you want uh some of the shows are a little bit easier to understand depending on what we're working on let's see richard says uh i'm new what's he working on and michael elsa says i'm always late so i have no idea what's going on right now uh right now we're we're trying to make a component a graphql query and a graphql query that could we can pass in the the type of content that we want and then the slug or id for a specific piece of content and then that way we can just keep reusing that one component in query instead of making new components and queries like we have been doing uh richard says i'm new in programming i'm here that's why i read and try to understand his code and uh yeah richard you know any questions that you have please let me know i'll be happy to help um what's trying to understand you know i'm sure there's something that you don't understand i bet there are other people watching or that are going to watch the recording that also you know could probably benefit from an explanation and it always helps me when i have to explain what i'm doing sometimes i realize that something i've done maybe i could do it better or you know it was kind of illogical and it says ionic framework uh no we're not using the ionic framework right now uh just just react andy says react don't use separation of concerns yeah it's not it's definitely a shift in thinking you know we don't separate everything out we um you know a component will have the mark up the javascript i'm really sorry let's keep yawning but one component could have you know all the markup javascript and styles that it would need all in one file uh harsh okay let's get back to let's get back to the code now um harshit says have spelled it correct test for faculty one time oh yeah that's true maybe i didn't spell everything correct about let's make sure it's initial props about um page page page page type not passing it about page a page and the by server page okay i'm still i'm still kind of wondering why why are we able to grab the id value here but not the type the only difference i could see is that the id is in curly brackets right i don't know what difference that would make and still yeah no difference why does id are we oh compose with root with data sorry see let me make sure let me go somewhere else just to make sure this is working okay sort of make sure i didn't accidentally mess up the wordpress installation again oh harshad says that he's got it all right cool watch it oops there we go um whoa use react clone element page props type all right let's let's try that out okay also want to change this back to what we had types okay why so what's our render all right let's see what we have now economy property edges so undefined okay all right well that's that's not bad so the error basically this seems to be working now which is good um so now the error is here in terms of the data that we're getting back so i need to make sure what we're passing in harsh it says try faculty are saying try faculty like make a faculty route and then try this on there actually let me let me use graphic ql just to make sure that this is working so i don't want to keep troubleshooting that if that's not really a problem um let's see where's our page query i can't find about in schema okay or she's already checking the schema that's a good idea about page by about page yeah i actually i see about paige hmm hmm let me check the router as well to see if i'm not routing something ahead of this okay all right that looks fine hmm see what i'm passing in sample query queries pose uh let me shh have we tried something yet that had two words is it faculty department is that what we used to no departments okay so we are using this form right the associate programs that edges okay so you do like this i kind of want to see what what we are getting here let's see let me double check the live chat it looks like harsh it says about pages the s uh the s so so should we use about pages no so my queries no need my queries major query where majors hmm so shoot programs huh oh you know what i need to restart the server sorry can't just make a change and have it work all right let's see all right so page such as about pages and then now here get out of here okay and this is this is floral too yep all right so everything does need to be plural and it looks like we we have that um nikki says it's taunting you flashing the site just before it gives you that error page i know right come on okay i should say save the page so all right i guess i have not saved it then all right so that's saved let me save everything the server save the server as well alright alright now no restart yes still nothing um uh ricky that's a good suggestion ricky says just console log this props yeah at this point yeah it's like what am i gonna do um let me take this out so i quit getting errors i could console log in let's console though i want to make sure that i'm getting type in here properly too um cannot query field undefined all right so it looks like type it is not getting passed in properly let's see all right so that does fix it ah okay all right so at least we know where the problem is now so everything is coming in if as long as we can pass about pages in it works so we know we can get it from this props about pages but we need so we need to be able to get this props type here i mean honestly like this is just gonna i don't know if this is the react way but like just thinking like javascript wise like this is just a scope issue right like uh let um type equal i mean can we do something like this type is just oh yeah i don't want to do um query type and then in here i can just say query type equals type and then use query type no all right let's see expected name but found cleavage ah all right we have a different error now which is progress in our queries okay so we expected a name did not get the name let's go let's console uh type see what we're getting yeah yeah okay let me see all right harsh it's saying add yarn add recompose um actually yeah this is beside the point we're obviously not getting the right data in because we got it to work before when we just hard coded it so so what i did must not have worked i don't know why but it doesn't work so let's get rid of what i just did then all right we don't need this log anymore all right and great all right so harsh is saying use recompose i'll install it let's see and keep an eye on the time okay all right so i have recomposed now i've never used recompose i have no idea how to use recompose i've just glanced for a few seconds at the documentation here so i'm guessing i would use the map props with recompose map props or with props okay with props all right i'm checking out the api documentation right now all right let's uh so this and then down here oh michael korea is asking how to get to the page that gives the errors let me just paste this is what i'm using so you would replace localhost 3000 with the ngrok url obviously um but that's that's what i'm trying to test out all right let's see so now i'm gonna have a with props create props all right so it's like mac so i'm reading documentation for this on my other screen so that's why i'm talking to myself here um okay hmm um with props foreign thank you it looks like i can also use default props let's see if i can do um so all right i need to find an example of this because i'm not sure you now all right let me bring over something i found that's somewhat similar to what we're doing it seems like all right so right now they're making uh higher order components but uh in here they're they're importing with state from recompose which is similar to the with props that we're trying to use and let me give you here's the link to the api documentation that i'm looking at right now and uh it has the anchor directly to the with prop section so maybe if you all can uh can check it out you know knowing what we're trying to do with it you can help me for some reason i'm just missing something but anyway so basically export default compose which is exactly what we're doing but then here it says with states and then we brought in the is visible um and toggle viz so and with handlers we say toggle visibility and it looks like there's now access to toggle vis and is visible here so with that it seems like what we should be able to do then is within with props we should be able to just say type and then now we'll have access to type as a variable i'll make sure i put a comma there type is not defined okay let's see what i miss let's see hmm ah let's see maybe no it's still not going to do anything all right all right let's check this out again okay oh all right awesome okay so they're using with props um all right so all right let's check out with props now uh looks like we can grab it here let's just grab that pull it over here with props and so all right so we're returning all right michael chris is in the i guess in the query are we starting off with where don't you need to declare what we're filtering on yes all right let me see i can't see my chat my chat window is now zoomed in and won't let me zoom out and now i can't see anything okay now why is it doing this there we are finally okay um page create shouldn't it be page where um yeah the query is fine so there's the where we have so we're pulling in the type so that should be it should be okay all right so let's go back to here and just say so this is all right all right it's so good all right i don't really think this will work let's give it a shot type no still nothing all right this props type no it shouldn't all right save this props is undefined okay i'm at 50 props and fine yep okay okay all right harsh it says now final solution update apollo there is a new query component no need of composing then all right let's check this out then all right so let's check out this new component that we can use whoops github.com apollo graphql why is this not working releases that was weird new query component wow what so wow okay all right let's try it out then uh we'll check our package json to make sure we get the version we want so this should be two one two 2.1 no didn't get that all right right all right we're taking out recompose and let's make sure we take this out of our component i'm we may not get this working in time we'll see um recompose um okay okay oops all right so let's try to get this oops where's it at here it is uh let's try to get this beta version running so all right let's see if this works so this is a harsh it's suggestion two we have react apollo latest version nope oh okay i see your other suggestion there horror yeah and that is what we need right beta 2.1 2.1 awesome okay let's just make sure you didn't break everything okay cool still works all right so now i guess we can use stuff like this import graphql query let's import these so can we just get rid of both of those then and then down here do we need any of this now we still need compose all right uh sun bass says jessie you are alien as far as i know i am not but maybe maybe you know something that i don't ugh all right all right let's go back to our example here so let's take this oops let me see your function my computer all right let's we have query and now we need to grab what our query was um okay okay and we should be able to do our name equals string and how are we reassigning let's see okay so we're saying variables name id so we should be able to we should be able to add in this props type and now that's what i'm confused about it's ours just saying leave the query i'm not exactly sure where he was talking about to leave the query anyway what i'm not sure about is we're past when we're passing this name in irish it says remove the query stuff so all this query stuff uh okay michael says i'm so lost so i'm gonna need i'm gonna read up on so i understand what's going on i'm pretty lost myself here as well so i guess just to catch everybody up to speed including myself just as a review we've updated uh to the beta version the 2.1 beta version of react apollo there's a different way to do queries a query component i'm trying to convert over to using this query component what i'm not sure about is i was trying to follow harshit and i get the messages remove graphql from export so i did that no need of query and then the next message was leave the query and then the next message was remove query stuff so i'm not exactly sure what what's going on because i i've gotten both leave the query and remove the query so i'm going to drink some g fuel um all right harshit says you you have adam still let me edit the code using teletype it's hard to explain in the chat um yeah i do have adam all right let me check the time see if we have time for this um i really do want to use teletype because it sounds really cool but i think i'm gonna have to end the stream because i need to i need to make sure i get everything ended in enough time for me to um get ready and pick up my kids from school so what if what if we wrap things up here i commit what i have and then work on it tomorrow does that sound good so i kind of figured on the stream being over by now all right i'm just i'm going to scroll through really quickly just to make sure there hasn't been a question that i missed uh ravi raj says are you an independent developer or work for free code cam i volunteer for free code camp and i work for a university so um i'm a frontend developer for a small university i also do some work on the side i like freelancing work drewness when i use visual studio code on windows the font isn't that bold how can i make it look like that um i'm not sure i'm using the seti theme so scti i don't think i've done anything else besides just use a different theme i mean i've made the font bigger um but other than that i don't maybe it's just the theme igor says where can i find your custom post types post plugin i don't know if i have it i don't know if i have it available on github or not check out the uh ci react repo so it'll be in the same organization as this repo it might be in there it might be listed as like ci custom post types or category custom post types it's basically the same plugin i'll just add some some different types but maybe it might not be a bad idea to add that in with this repo as well uh michael kerr is asking about a react tutorial codecademy has a pretty easy intro react tutorial uh michael cruz says is there any way to see your data structure not sure how wordpress works um i don't know i guess i mean normally if i'm running wordpress i usually have it running on something that has like php my admin and i can look at it but i don't have that right now um so i i don't know i mean it's following the same structure as a normal wordpress so maybe there's like an example online of the normal data structure for wordpress all right so yeah let me commit this let's see what the status is package json pages okay oh what do i need um a new feature don't think so ah shoot i figured that'd be the case queries defined but never used gql is defined let's get rid of that and then i'm pretty sure i use query did i not save it all right so what 54. maybe i should just take that stuff out yes take that out let's take a page query and query and graphql there we are harsha says just use no verify yeah that would have made sense i should have done that all right let's just run a get how did my server.js get modified thank you yep that's what i meant uh come on no verify two dashes there we are all right okay all right everything is now committed and we will pick this up again tomorrow so i've already gone through all the questions in the live chat and my brain is tired right now so um learning something new is hard enough but uh it's i i guess learning something new on the live stream is harder so um all right so i'll see y'all tomorrow kind of like i have an early meeting tomorrow i'm gonna try to get in early enough to schedule the stream before my meeting and then that way i can jump right into it if i don't get in that early though i might not be i'll try to do the stream at the same time but it might not actually be scheduled uh so you may not be getting a notification on youtube you know like an early notification or any at all so i'll i'll see i'm gonna try my best to get in and uh and get the schedule all right thanks for all the help um almost had it we almost had it today i think we're really close i mean basically everything's working except just need to pass that that's um type through uh to the query so we knew it already worked when we manually passed it through so i'm i mean i'm happy with that the concept works so from here on out it'll definitely cut down on the amount of work we have to do and it'll clean things up so uh i guess i guess we did enough to prove that the concept works so we could let's count that as a win right all right uh thanks for watching and uh i'll be back tomorrow until then have a great day
