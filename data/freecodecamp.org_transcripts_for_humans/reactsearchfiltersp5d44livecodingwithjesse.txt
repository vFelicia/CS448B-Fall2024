With timestamps:

00:04 - hey everyone welcome to live coding with
00:07 - Jessie I'm Jessie and in this stream you
00:12 - all get to see me do my work as a
00:14 - front-end developer and I don't plan
00:17 - this ahead of time so I make a lot of
00:19 - mistakes when we work through the
00:20 - mistakes together this is very much an
00:23 - interactive stream so I'm gonna paste
00:27 - the link into the live chat now if you
00:29 - go to that link you'll be able to see
00:31 - the project as we work on it if I update
00:34 - it on my computer locally you will see
00:36 - the updates in real time you can inspect
00:40 - the site with dev tools you can go on
00:42 - different pages so you're not limited at
00:43 - what I'm showing you on my screen and we
00:49 - split everything up into Pomodoro
00:51 - sessions so if you're not familiar with
00:54 - the Pomodoro Technique I definitely
00:56 - recommend it but basically that we were
00:58 - using it on this dream is that for 25
01:02 - minutes we do some code and I have
01:04 - minimal interaction with the live chat
01:06 - then for five minutes I go to the live
01:08 - chat and I focus on all of your
01:10 - questions and comments then we do
01:12 - another 25-minute session of code and
01:14 - then at the end of that I go through all
01:17 - the remaining comments and questions so
01:20 - feel free to add your questions in and
01:22 - if you see me doing something wrong
01:23 - you're just not sure why I'm doing
01:25 - something a certain way put that in a
01:26 - live chat as well I get a lot of great
01:29 - advice from all of you in the chat and
01:33 - really the projects are much better off
01:36 - because of that so I welcome your your
01:39 - input if you want to check out the
01:41 - github repo the link is in the
01:42 - description to this video everyone this
01:48 - is also a little earlier than normal let
01:50 - me know what you think about this
01:51 - earlier time does it work better for you
01:53 - all you know I I know that I can't I
01:56 - can't stream and at a time that'll work
02:00 - for everyone's schedule but sometimes
02:02 - it's good to switch up the time and just
02:04 - see who can make it and who can't so let
02:08 - me know about that
02:11 - today let me switch my camera there we
02:18 - are
02:18 - so today we're gonna work on the search
02:23 - filters that we started to work on last
02:26 - week at some point and we're gonna try
02:28 - to actually get them working so I'm not
02:31 - sure what I did to the search but it
02:34 - doesn't work for me at all now
02:36 - so evidently we left it in a broken
02:40 - state which is okay we'll figure that
02:44 - out now let me check we have some
02:48 - activity in the live chat let's check
02:50 - this before we start our timer the other
02:54 - question is this all on code pen no this
02:56 - isn't on cope and the code isn't is in
02:58 - github and you can use that link let me
03:04 - post the link again in case you weren't
03:05 - in in the chat yet so the link that I
03:08 - just posted in the live chat will let
03:11 - you view the site as we're working on it
03:15 - sometime very soon this test version of
03:19 - the site will be available 24/7 so when
03:22 - that happens you all will have the link
03:25 - for the test version of the site alright
03:30 - hey everyone
03:33 - alright so I do want to let you all know
03:37 - that this site is gonna launch soon so
03:40 - we need to get it ready so on the
03:43 - streams we'll be working on things like
03:45 - a search and we'll be working on the
03:48 - routing and some like minor UI
03:50 - improvements for me when I'm not doing a
03:56 - live stream I'm gonna be working on
03:57 - getting all the remaining data
04:00 - transferred over so it's gonna be
04:03 - somewhat boring for me but I'm gonna try
04:08 - to keep the actual streams a little bit
04:10 - more exciting let's see I'm also
04:15 - considering using now instead of making
04:19 - multiple servers on digitalocean so if
04:23 - anybody has any experience
04:24 - using now especially for projects like
04:26 - this please let me know what your
04:27 - opinion on that is I I haven't tested it
04:31 - yet I'd like to test it first and maybe
04:33 - read up a little more on it but it seems
04:36 - like it's gonna be a better solution in
04:39 - that there'll be less things to maintain
04:42 - and it'll be it'll scale automatically
04:46 - much more easily then if we've actually
04:51 - had to go in start up new digitalocean
04:53 - servers or take them down okay so let's
04:57 - go to the search page on this site oops
04:59 - almost forgot to start the timer where
05:02 - is my timer there it is
05:07 - let's pull the timer over on our screen
05:11 - here so you don't have to switch
05:13 - everything around all right so we're
05:17 - gonna start this Pomodoro time and this
05:19 - timer happened to be built by Harsha
05:22 - who is frequently in the live streams
05:24 - and has contributed a lot to our github
05:27 - repos all right so let's go to that
05:38 - search page if you have the end rock
05:41 - link you can check out the search page
05:43 - as well so right now if I try to do a
05:46 - search I'm getting the black screen with
05:48 - an error so I'm not going to even try it
05:52 - right now but what we are gonna do and I
05:55 - don't need this would be quite so large
06:01 - we're going to get these working so that
06:04 - will make a search with these check box
06:10 - boxes whether they're going to be
06:11 - checked in or not and it will alter the
06:14 - results that we get back for our search
06:18 - so here's our search component I'm gonna
06:21 - make a little bit of room here and then
06:22 - increase the text size so let's shrink
06:24 - that down and to move this over we can
06:28 - also move this side over a bit and I
06:33 - think that should be big enough let me
06:35 - know if it's hard for any of you to see
06:37 - but
06:37 - you know if you're on at least a desktop
06:41 - you know with decent resolution this
06:43 - should work I'm not really sure how it
06:45 - will look on a phone let's see so here's
06:50 - our filter so we have this some
06:54 - functions already in here we have a few
06:57 - functions that we're not actually using
06:58 - yet that we brought over from a previous
07:00 - project so let's take second and sort
07:04 - things out just to see where we are
07:07 - since it has been about a week since we
07:12 - worked on this all right so here's these
07:18 - are just our Styles we can skip through
07:21 - the Styles here in our state let's take
07:24 - a look at what we have going on so we
07:27 - this is for the data when it does come
07:31 - back from the wordpress api which is
07:33 - where we're going to get the data from
07:35 - this is gonna house our search term this
07:37 - is going to house the type of search we
07:39 - want to do so in this case it's going to
07:42 - be the post types that we'd like to
07:44 - search for so that's where our filters
07:47 - come into play all of our check boxes
07:49 - are also our filters so these are the
07:51 - values true or false check they're not
07:53 - checked here's what we actually make the
07:56 - API calls so this base is going to be
08:01 - the same always and this URL for now
08:05 - this is going to be this IP address will
08:07 - be the URL but that may change in fact
08:11 - it's likely to change when we get closer
08:15 - to launch but for this we take the
08:20 - search term which is what's typed into
08:23 - the input and then we add the search
08:26 - type or multiple types which is what
08:29 - we'll get from the check box and then
08:31 - that whole string gets sent to the
08:36 - WordPress API all right so the the logic
08:40 - for that lives in another component so
08:43 - I'm not going to go over that right now
08:45 - but if you check out the the fetch
08:49 - component we
08:50 - we call it yeah so in the in the utils
08:56 - folder the component named fetch is
08:59 - that'll show you what's going on there
09:01 - if you want to check it out in the
09:02 - github repo all right so we have some
09:11 - logic for getting the value out of that
09:15 - checkbox
09:16 - we're debouncing so that we don't fire
09:18 - off a bunch of API calls you know more
09:21 - than we need and let's see I'm gonna get
09:26 - search results I'd like to see where our
09:32 - problem is you know what let's run a
09:35 - search and see what that error message
09:36 - looks like I know we got results with
09:42 - that search term since this website for
09:44 - a Catholic school so they're gonna have
09:46 - that word in there somewhere all right
09:48 - so our data there is no data really this
09:53 - state data map is not a function so
09:57 - we're trying to map over data but there
09:59 - there's no data let's check that out
10:14 - let's see where we're doing that this
10:21 - states map
10:23 - this they data map okay so here's where
10:32 - we're doing that so if this state data
10:39 - hmm I thought we'd taken care of this I
10:44 - guess not
10:52 - let's shut that leg is greater than zero
11:01 - oops let's try a check like that I mean
11:05 - I still think it might not even go
11:07 - through this check but let's see let's
11:09 - see how that works okay so we're not
11:18 - getting an error anymore which is good
11:20 - let's see what's happening in our in our
11:27 - console what we're getting here
11:45 - oh okay interesting type program is
11:50 - required for a matter it needs to be an
11:52 - array
12:12 - okay so the problem seems to be with our
12:16 - types
12:29 - all right so let's see what we're doing
12:33 - here
12:47 - alright I'm gonna check the live chat as
12:50 - well see if anyone's seeing anything
12:52 - that I don't okay hey everybody I see a
12:56 - lot of people saying hi that's all right
13:04 - well let's step through this a little
13:07 - bit more closely
13:26 - hmm
13:30 - look at my error again
13:36 - type 4 Ram is a required parameter and
13:43 - it needs to be an array
13:51 - okay you know what maybe I'm just
13:53 - formatting this in the wrong way
13:59 - okay
14:01 - this is the R is an example that they're
14:04 - giving back of what it needs to be like
14:06 - so it's only sending this so my I see
14:21 - [Music]
14:25 - you know we need to make we need to make
14:33 - a checkbox that's for all so obviously
14:41 - the default is going to be to search
14:42 - everything right I think that's expected
14:44 - users will expect that by default
14:47 - everything is going to be searched and
14:54 - then as you check things it'll narrow it
14:57 - down so we need to send a string that
15:02 - searches for every post type at first
15:04 - now I'm not going to create that string
15:06 - right now but at least in terms of the
15:10 - filters that we're using we can search
15:12 - for all of them then once a checkbox is
15:16 - checked then we switch over and use what
15:20 - we have from there so it'll be I think
15:26 - the easiest way to fix this is to say
15:30 - this is
15:46 - I want to make sure that we're clearing
15:48 - the search type first or it's at least
15:53 - somewhere we're clearing it price filter
15:57 - alright we're not using the price filter
16:00 - yet filter by category we're not
16:06 - actually using this yet
16:09 - there we are
16:11 - no worries and let's search string equal
16:19 - okay all right this'll work
16:25 - that'll work
16:29 - all right so what we need then is to
16:33 - have a default value for this search
16:36 - type and we'll worry about how to get
16:45 - back to the all a different time or
16:49 - should the value oh how about this this
16:54 - can be a little different than I thought
16:55 - but what if the default value for the
16:57 - check boxes is true that should solve
17:02 - everything the default value for every
17:04 - check box will be true and then users
17:07 - can go through and uncheck things they
17:09 - don't want I think it would be useful
17:12 - maybe to have some option to just clear
17:14 - all but I think that's going to be our
17:18 - quickest solution right now so let's do
17:21 - that and this should give us results
17:26 - true and let's see when does that change
17:34 - does it just change on click or are we
17:36 - doing it on search as well
17:44 - it sir saves
18:03 - maybe we should move this let's move
18:06 - this from when a checkbox is checked to
18:11 - when we're actually gonna get results
18:15 - get search results
18:29 - the Divas assist
18:43 - okay
18:56 - I don't remember which which one of
18:58 - these is actually being called let's go
19:01 - down to our form we'll have to clean
19:04 - that up at some point I don't think we
19:06 - need that those examples anymore so we
19:10 - can probably get rid of our input change
19:20 - get search results is what gets called
19:23 - all right so this is the one that gets
19:25 - called debounce search okay what we
19:35 - probably should do some of this I'm not
19:37 - going to delete it right away
19:40 - but at first we're gonna run that there
19:44 - we are all right the reason that I want
19:47 - to run this in the search is that we win
19:56 - it when the component first mounts and
19:59 - everything's checked it won't actually
20:02 - add those terms to our search type
20:06 - string until someone checks or uncheck
20:09 - the check box but we want those added
20:12 - right away so the alternative would have
20:16 - been would have been to manually add
20:19 - that search string which may still be a
20:21 - better alternative but for right now I
20:24 - think this will be quicker and allow us
20:26 - to test our system and just make sure it
20:30 - works and then we can handle refactoring
20:32 - it and let's try this
20:40 - could see against me penny Suresh
20:56 - alright I'm gonna wait I just I was
20:58 - gonna pull that down here but let's just
21:01 - see if this works no it's just refresh
21:06 - and let's check yeah it works alright
21:15 - great now let's toggle this so I can
21:19 - just see what's going on a little bit
21:20 - easier okay so now if I click faculty I
21:29 - should only get faculty okay I didn't
21:33 - even get any faculty members on this
21:37 - search oh you know what that should
21:44 - trigger another search so let's make
21:46 - we're going to make sure we we have a
21:47 - trigger another search all right so that
21:53 - that's not working properly
22:04 - so let's see this is not checked we
22:08 - searched but we could see it's still
22:11 - searching for this old type so I've done
22:13 - something incorrectly so I know two
22:18 - things one we got to make sure we clear
22:20 - out the old search term in state and add
22:26 - the new one and then we also need it to
22:28 - search automatically when we check
22:31 - things so that's I think that's what
22:33 - users expect I don't want to make users
22:38 - have to manually click search again all
22:43 - right so let's check it out rid of that
22:50 - okay so let's see what happens when we
22:53 - do check a check box we'll go down here
22:56 - and start first with our check box so
23:00 - when I check the faculty check box it
23:04 - says this handle change and then faculty
23:07 - so let's scroll up and look at handle
23:10 - change so handle change takes the name
23:15 - the event checked so this day check
23:20 - boxes check boxes name equals checked
23:23 - this state check boxes okay so we're
23:26 - changing the state of that particular
23:30 - check box good so this state check box
23:37 - has changed now what needs to happen as
23:43 - well is a search needs to happen there
23:46 - so let's go up to see what our search
23:52 - gets search results
24:18 - so you know what we we can should we
24:24 - skip this create search types yeah we're
24:35 - not gonna be able to get the correct
24:37 - event if we call this so we're not gonna
24:39 - call that I wanna see what our create
24:44 - search type yes
25:01 - okay all right so I think we should call
25:11 - this fetch search term it's gonna get
25:16 - everything it needs from state anyway
25:21 - and I guess we need we ought to move
25:31 - this then
25:39 - since when we're not see what we're
25:43 - gonna run this
25:50 - alright you know what let's let's have
25:52 - it here and then let's also have it here
25:58 - oops did we have here
26:09 - let's have it here oh I lost what I had
26:16 - copy
26:34 - all right let's see if we've changed
26:39 - anything here okay that works
26:48 - no let's go faculty you know what I
26:56 - didn't
26:57 - I missed this that let's try to search
27:00 - with that and now it didn't change
27:02 - anything that's interesting so it should
27:10 - have
27:21 - hmm yeah it still didn't change anything
27:29 - wait a second all right I see what's
27:36 - happening the let's check on the state
27:47 - because these should have been checked
27:50 - by default I don't think we're using
27:51 - controlled components here and that's I
27:54 - mean that's one problem we need to solve
27:57 - no matter what
28:18 - here we go here's a state let's shrink
28:23 - this a bit and I'm gonna increase the
28:26 - size on dev tools you all can see what's
28:28 - happening oh that's too big okay so our
28:37 - state's here's our data search term
28:43 - search type there we are
28:47 - okay so let's refresh now check it out
28:51 - again okay search term search type so
29:00 - let's do it so here's our search type
29:07 - our check boxes are all true and if I
29:11 - check it it stays true
29:12 - now it's full so I check once check
29:15 - twice so now my search type is correct
29:19 - so if I went like that see now it just
29:24 - gives me majors so I can unclick that so
29:28 - we just need to change that initial
29:30 - state faculty great ok there we have the
29:37 - faculty all right so hopefully that
29:42 - makes sense that were at least part of
29:48 - our problem was the check boxes weren't
29:52 - showing that they were actually checks
29:54 - it took two clicks to get anything to
29:57 - change so when I come back from the
30:02 - break we're gonna make sure we we fixed
30:05 - that the check box is being checked
30:08 - right off the bat and then I also do
30:10 - want to automatically search again when
30:13 - these check boxes are checked or
30:15 - unchecked so let's take a break now and
30:20 - I'm gonna scroll all the way up to the
30:22 - top of the chat and just work my way
30:24 - down and I do I'm expecting an email so
30:29 - I keep checking my email
30:31 - if you see me like bending down to look
30:34 - that's that's what I'm looking at
30:50 - so we have hello from Italy someone from
30:53 - Spain hey how's it going thanks for
30:55 - watching
30:57 - so we have some opinions on the screen
31:00 - time so the time was good for some not
31:03 - so good for others so I'm gonna continue
31:08 - to maybe stream like around noon
31:10 - somewhere around there but I may need to
31:14 - do other times
31:18 - hmm excuse me sorry for the yawn when I
31:24 - do that I always hope I don't make a lot
31:27 - of other people yawn you know how
31:29 - yawning is contagious
31:36 - alright so on on yuge
31:38 - it's a nuj please let me know how to
31:42 - correctly pronounce that but on yuge
31:45 - says hey buddy what you working on I'm
31:47 - kind of new here but subscribe to you
31:49 - long-long the way back alright awesome
31:52 - well thank you for subscribing and
31:54 - thanks for watching so basically we have
31:57 - this rack project and we're trying to
32:00 - make a search function within react so
32:03 - we did get the search function working
32:05 - but now we want to add in some filters
32:08 - so you can see it's it's working but the
32:14 - controls for the filters aren't very
32:16 - good right now so we're gonna try to
32:19 - work on those Michael says early starts
32:26 - today yeah it wasn't early start today I
32:28 - might go to lunch with some of my
32:30 - coworkers so they've been asking me they
32:33 - asked me to go to lunch frequently and I
32:35 - usually stream during lunch so I've kind
32:37 - of skipped out on a lot of stuff so I
32:39 - think I want to I want to try to go
32:41 - today and hang out with them a bit
32:56 - I michael says what if we do search
33:00 - filter equals search filter or the star
33:05 - maybe yes you know it's something like
33:10 - that something like that could work as
33:15 - well
33:18 - yeah maybe will that that may end up
33:26 - being like the final solution that I use
33:28 - I think that's a better solution than
33:30 - what I'm doing now SIB la silla fat
33:36 - sorry if I'm mispronouncing that please
33:39 - let me know what I'd love to I'd love to
33:44 - be able to pronounce that correctly but
33:46 - anyway they say hi Jesse I did subscribe
33:48 - you awesome thank you very much for
33:50 - subscribing and I do have another
33:54 - channel so that I stream on the free
33:55 - code camp Channel and then I also do
33:57 - some videos on my own channel not nearly
33:59 - as many videos but I think I am going to
34:02 - be start producing more like small very
34:05 - focused tutorial videos so if you're
34:07 - interested in that please subscribe to
34:09 - my channel as well I think there's a
34:11 - link to it in the description and
34:15 - occasionally I do some live streams on
34:17 - that channel as well usually I like live
34:20 - streams about side projects and
34:22 - tutorials that I'm working on hey Anna
34:31 - how's it going thanks for joining us I'd
34:38 - be nervous how long my Pomodoro sessions
34:40 - are 25 minute sessions with five minute
34:44 - break in between NS if I was sick I'm
34:49 - not like fully sick I have a sore throat
34:51 - and I was really congested all night but
34:55 - I'm sorry it's starting to clear up now
34:57 - so I hope I'm not getting sick thank you
35:00 - for asking though Brian Sizemore who is
35:05 - in the office right next to me said I
35:07 - yawn said I yawn but I heard you
35:09 - through the wall sorry for making you
35:12 - yawn all right the break is over let's
35:19 - go back and I actually got through
35:21 - everything in the live chat in that five
35:22 - minutes so that rarely happens that's
35:25 - perfect timing
35:27 - all right so let's go back to here I am
35:30 - going to take a drink and I got the G
35:37 - fuel so hopefully this will keep me from
35:39 - yawning let's see Abby now says your get
35:49 - your grinding on your lunch keep up the
35:51 - hard work
35:52 - yeah I have been I've been working
35:55 - through my lunch bag for a long long
35:58 - time but there's a lot to do and
36:06 - sometimes you get in the zone you just
36:07 - you don't want to stop brian says chug
36:11 - chug could you all hear me chugging that
36:13 - I'm really sorry if you could I
36:15 - I will try not to chug loudly next time
36:19 - I'm sure that was gross okay so let's
36:28 - yeah let's figure out what we knew these
36:30 - check boxes all right I think I'm going
36:34 - to take I think was Michaels suggestion
36:36 - and let's do let's take these checkboxes
36:41 - and we will let's move them back to
36:48 - false let's move them back to false and
36:53 - then we'll do this search term source I
36:58 - this states just search type
37:07 - mm uh let's just yeah let's split this
37:12 - out just to make it a bit easier I'm
37:30 - gonna call this you just keep it as
37:40 - search type oops
37:43 - equals in the wrong place so this is
37:47 - gonna equal this state search type or
37:56 - and then we're gonna need to put in our
38:00 - string that has all the stuff so is it
38:04 - still here can I just copy and paste it
38:08 - Catholic faculty major it's a Catholic
38:12 - department yeah this is it it's still
38:15 - right here
38:26 - okay
38:34 - hopefully this will work actually it
38:37 - might not work I'm just gonna try and
38:40 - see it but if any of you know without me
38:42 - trying it'll save a few seconds do will
38:47 - it just grab this value since it's an
38:50 - empty string or will it see the empty
38:51 - string and go to the or we'll find out
38:54 - in a second I guess sir save and then
38:58 - down here we're just gonna put search
39:03 - tight alright okay cool so eventually
39:13 - this will end up being a giant string
39:15 - but for now this kind of solves the
39:18 - problem of the checkboxes and then the
39:22 - other thing that we wanted to do was win
39:24 - a checkbox is clicked we wanted to
39:26 - search so fetch search term I think we
39:35 - can call fetch search term so should we
39:40 - do
39:46 - are we not doing the debounce search we
39:49 - don't get search results this debounce
39:52 - search yeah let's call this D bounced
39:54 - search now I don't want to pass percent
39:59 - of value here d valences do we need a
40:05 - value let me think about this search
40:11 - term value so the state session value
40:15 - here so we don't need to pass in a value
40:17 - to debounce search right it doesn't even
40:21 - do anything with that value
40:23 - I don't not sure I don't even know why
40:28 - I'm passing it okay so we're gonna do on
40:40 - click of a checkbox which it's handle
40:46 - change we're also gonna do this here D
40:51 - bounce search okay feel a lot going on
40:55 - there let's let's check it out and see
40:57 - what happens so I'm just going to start
40:59 - fresh and we're gonna try to do a search
41:04 - right off the bat make sure that still
41:07 - works okay great and I want to clear
41:08 - that out and well I guess it'll search
41:13 - automatically no matter what so now I
41:15 - want to click faculty great we got a
41:18 - search automatically and it's only
41:20 - faculty wonderful now let's click
41:22 - Department as well and there we go we
41:25 - have Department and faculty wonderful
41:28 - now let's click major and now majors are
41:32 - there let's take away faculty let's take
41:36 - away Department wonderful
41:39 - all right great so that's working let's
41:43 - just make sure like let's say we hit
41:45 - enter or take one of these away so do a
41:50 - search
41:54 - are we you know I can't tell if we're
41:57 - actually searching anymore
42:03 - is it not letting me search again
42:14 - okay searches are happening then all
42:21 - right cool and it is major all right
42:25 - excellent okay so those minor changes
42:31 - have essentially solved all the issues
42:33 - that we were having all right so let's
42:40 - think what do we need now it's just some
42:46 - kind of repetitive work is gonna be
42:50 - involved with just getting every single
42:52 - type making a checkbox for it we won't
42:56 - need to change anything
42:58 - the only would need to change in the
42:59 - code is when we add a new checkbox we'll
43:02 - just need to make sure that we add that
43:04 - type to this string as well and it
43:07 - should work the next thing that we need
43:10 - to work on is sorting so we want or
43:17 - reverse alphabetical order and then also
43:19 - by date so newest or oldest and we're
43:25 - gonna have to go yeah we'll go by the
43:28 - word press date that's not gonna be
43:30 - accurate for everything because right
43:33 - we're migrating all this data and so a
43:35 - lot of the data even though it was
43:36 - created you know maybe sometimes years
43:39 - ago it's gonna have a much newer date
43:43 - the exception is in the news all the
43:48 - news that I brought over they all I made
43:53 - the dates in WordPress match the dates
43:55 - that they had in the old system the
43:58 - Ektron system so those dates will work
44:01 - and I think that makes sense I don't
44:05 - know if I did it for events but I don't
44:08 - think we're gonna be displaying past
44:10 - events anyway at least that was the the
44:12 - last time I talked to my boss about it I
44:14 - think there wasn't really a need for
44:16 - that so I think that'll be fun
44:23 - as the site keeps on being updated that
44:25 - will actually be somewhat useful if
44:27 - people are coming to the site and they
44:29 - just want to know what's new they can
44:31 - use that okay that makes sense now what
44:37 - we'll need to do as well is for sorting
44:42 - it would be wonderful if we could just
44:43 - sort the results that we get
44:45 - automatically but we may need to make an
44:49 - API call and get items back based on
44:56 - that sorting this is going to be
44:58 - challenging that's going to be really
45:04 - challenging
45:05 - the reason it's challenging is maybe it
45:08 - won't be I think we've done something
45:16 - similar in in past projects so I'm gonna
45:19 - have to look through some old code I
45:21 - don't think I'm gonna do it right now on
45:22 - the stream because I don't remember
45:25 - exactly where it's at I don't want to
45:26 - take up a lot of time with that but so
45:29 - here's but here's what I'm thinking so
45:32 - we're limited to getting 100 posts in a
45:35 - search so let's say our search actually
45:41 - matches 500 posts but we only get a
45:44 - hundred if I only sort through the
45:46 - hundred that we got then let's say we're
45:49 - sorting by alphabetical order like I'm
45:52 - I'm not gonna get all the posts
45:54 - certainly or if by date I'm not gonna
45:57 - get basically the point is like it's
45:59 - gonna sort what's only there meaning the
46:01 - hundred so even if in the other 400
46:04 - there's something that should be at the
46:06 - top of the list let's say it's
46:07 - alphabetic order and there's a bunch of
46:09 - things to start with a they're not going
46:11 - to get there at the top of the list
46:13 - because we don't have that data yet but
46:16 - if I make an API call I mean it's you
46:20 - got to make another call right and then
46:22 - I sort the data on the WordPress side of
46:28 - things and then send the sort of data so
46:31 - I don't just get the first
46:32 - hundred pose I get the first hundred
46:34 - posts already sorted alphabetically so
46:37 - maybe it might only be a through C but
46:40 - there will be everything then whenever
46:43 - we scroll down the user can either press
46:47 - a button or will do the infinite scroll
46:49 - and it can make the next API call and it
46:52 - can ask for it we can tell it to skip
46:55 - the first 100 and do the next call and
46:59 - then we can just increment on top of
47:01 - that to make you know more calls and
47:02 - keep skipping until there's no more I
47:05 - have some code for that in an old
47:07 - project as well so I'm gonna have to
47:08 - check that out it was done with jQuery
47:10 - but the logic should still work but what
47:15 - we can do to save API calls is do a
47:18 - check and say like we can look at this
47:23 - that we're getting back here so we keep
47:26 - getting back you know this data and
47:28 - displaying it in the console if we check
47:31 - this out and look at the length of this
47:34 - array and if the length of the array is
47:37 - 100 then we'll do another API call but
47:44 - if the length is less than 100 then we
47:47 - know we've gotten all the results
47:48 - already and so instead of going an API
47:51 - call we'll just do a normal sort will
47:54 - you just do a dot sort on it and that
47:56 - should save us a lot of time I mean I
47:59 - buy a lot like it's probably still gonna
48:02 - be less than a second but it's gonna
48:05 - save traffic and it should just be a
48:08 - faster experience does that make sense
48:12 - I just did a lot of talking and not a
48:14 - lot of coding so let me start to code
48:17 - some of this out as much as I can
48:21 - so let's do let's do a sort by date yeah
48:32 - let's do a date
48:34 - and all right
48:45 - so sir by dates will be
48:59 - yes actually there's gonna be
49:14 - yeah let's make a new function and you
49:25 - know I'm gonna get rid of this for now
49:29 - and fresh filtered I'm gonna get rid of
49:35 - this for now filter by category
49:48 - let's leave this in for now okay so
49:53 - let's say sort so we're gonna do sorts
49:59 - and then we're gonna say type so the
50:11 - sort type and then we'll go in here and
50:15 - here's where we'll do our function
50:20 - whoops yeah I don't think I can use sort
50:25 - let's go sort if I can use that oh I
50:34 - forgot my error there we go
50:44 - so I guess we could do at first we're
50:48 - just going to do one type but we will
50:51 - have multiple types at some point let's
50:56 - see so we're gonna we're gonna check to
51:02 - see if we have the data so if if the
51:14 - state data is equals 100 length length
51:26 - the state data length equals 100 then
51:30 - we're going to call
51:35 - what was that debounce search yeah this
51:40 - deboned search and we're also gonna do
51:46 - the set States and we're gonna make
51:54 - state it will be sort by oops
52:08 - so we're going to change the value sort
52:10 - by and here
52:26 - and so if I will be a string they need
52:33 - to do
52:41 - by a second this should work right I do
52:46 - that right
52:47 - I think is it just mad because in all my
52:49 - spaces what the heck should I
53:04 - oh okay I named it type that's hot
53:14 - sorry that's silly mistake okay since
53:21 - they swear by tight
53:22 - so whatever tight gets passed in that's
53:24 - what the sort by is gonna be and
53:26 - eventually the sort by will probably be
53:30 - a drop down that'll have four options
53:33 - alphabetical ascending alphabetical
53:35 - descending date ascending date
53:38 - descending so that'll get passed into
53:41 - here it'll set the the type and then
53:45 - we're gonna do a debounce search and we
53:49 - will modify our search function here to
53:54 - add something into our URL to change the
54:02 - the sorting on the wordpress side of
54:05 - things so oh yeah all right so now if
54:10 - it's something different so if the
54:15 - length is equal to 100 actually I need
54:19 - to say or is equal to 100 or it's equal
54:26 - to zero right because when we're going
54:35 - to do this this sort type this actually
54:43 - may not ever come into play but it's
54:45 - better just to put the check in there
54:46 - basically it would be like for some
54:49 - reason if somebody hasn't made a search
54:52 - yet so the data is nothing then we want
54:58 - to make another call to get the data
55:07 - okay all right I think that I think
55:10 - that'll be okay there may be some
55:13 - unnecessary calls like that but we can
55:19 - fix it later but I think it's better to
55:21 - do it like that else so else me this
55:24 - would then mean that the length of the
55:27 - data that we get back so the number of
55:29 - posts that we get back is somewhere
55:32 - between 1 and 99 if that's the case we
55:37 - know we have all the data for that
55:38 - particular search so when we do that
55:41 - we're going to sort the actual data so
55:46 - we're going to take the data this
55:52 - state's data and then we're gonna do the
55:57 - sort and cool so let's see look this is
56:03 - awesome it gives us the documentation
56:06 - for sort so we're gonna have this
56:16 - working here folks this is great
56:25 - okay so sort and what we have type yeah
56:38 - this is definitely gonna change based on
56:40 - the type so from now we'll just pick one
56:42 - I guess and let's just copy this from
56:48 - our other project to save some time so
56:53 - let's go to get up it's a pretty sure we
56:56 - did a sort just like this in this
57:02 - project which page is this page
57:10 - resources I'll make it bigger once we
57:13 - get there they are and so where's get a
57:27 - knock on the door hold on one second
58:43 - all right sorry about that
58:45 - that was the head of my department so
58:48 - did not wanna keep her waiting and she
58:53 - usually doesn't knock during the stream
58:55 - she's just a very apologetic about
58:58 - knocking during the stream okay let's
59:04 - see where was functions this might this
59:09 - might be the better the better way to do
59:12 - it hmm so what's this price filter oh
59:24 - I'm sorry I'm not looking for filters
59:26 - I'm looking for sorting sorry about that
59:30 - I thought I did have sorting do I not
59:36 - have that here
59:43 - I'll shoot well my time is up so
59:46 - normally I'd probably take a little bit
59:49 - extra time and figure this out but since
59:51 - I'd like to be able to make it to lunch
59:54 - with my coworkers I'm gonna I'm gonna
59:56 - not do that so basically I I must be
60:02 - mistaken we must not have done a sort in
60:05 - this this project so apologies for that
60:10 - but basically what we would do here then
60:12 - is actually sort the data and then set
60:15 - the state whatever we got back from this
60:20 - we would then set the state with that so
60:22 - this would be like cause sorted data
60:30 - equals the state day with data equals
60:32 - sorted data all right so it would be
60:41 - something like this that said state
60:43 - what's going on
60:45 - oops not equal sorry there we are okay
60:51 - so you see what would what would happen
60:53 - let me know if you need me to explain
60:54 - that and I can explain it a little bit
60:56 - more but basically like we were saying
61:00 - the the point of this is to not waste an
61:03 - API call if we don't need to and instead
61:06 - do it short like this which would be
61:08 - much faster and you know especially we
61:12 - want to cut down on the amount of
61:13 - requests going directly back to
61:15 - WordPress so they're gonna be layers of
61:17 - caching but we're not going to be able
61:19 - to cache search requests because they're
61:21 - gonna be so specific so that's the one
61:24 - place where I'm a little nervous about
61:26 - the load and it could slow things down
61:28 - so things anything we can do to cut down
61:30 - on the amount of requests is going to be
61:32 - good also just for users that maybe are
61:36 - on a data plan
61:38 - you know we don't we don't want to make
61:40 - requests from you don't have to out of
61:42 - respect for for the user you know for
61:44 - their money so for both of those reasons
61:48 - I think it's it's our responsibility to
61:53 - try to keep the the request to a minimum
61:58 - okay so let me save that and I want to
62:04 - push this up to github so that you all
62:08 - can check it out and it's available for
62:11 - me in case I'm working on a different
62:13 - computer so let's do get status see
62:17 - everything's been in search so let's do
62:21 - get add Doge add and then we will say
62:28 - yarn cm yarn cm is something that we
62:33 - have set up for this project normally
62:35 - you would just do a git commit at this
62:37 - point and then put your message in and
62:40 - and that's how you do it but we have a
62:42 - little extra formatting for this project
62:45 - so we're going to say we've added a new
62:48 - feature and this is going to be lets say
62:52 - filters for for search results no
63:01 - breaking changes all right so now it's
63:05 - gonna run the test it's gonna run the
63:07 - auto linting and auto formatting and it
63:11 - looks like we're gonna pass so far so
63:13 - good
63:17 - the tests don't take very long but we
63:19 - certainly don't have a hundred percent
63:20 - test coverage right now so that's that's
63:23 - why they don't take so long if anybody's
63:26 - interested in writing tests you know
63:28 - feel free to write some tests we have
63:30 - and n tests and unit tests happening
63:33 - right now so whatever you're interested
63:36 - in let's see good push
63:42 - or it in whoops get to the origin
63:49 - alright so that date is now available in
63:52 - the github repo and you check it out if
63:55 - you like use it for whatever you want to
63:56 - use it for it's totally open source and
63:58 - and free I'm gonna go back to the live
64:02 - chat and answer all the questions well
64:05 - yeah unless unless you all start putting
64:09 - in a million questions I may have to cut
64:11 - it off but right now it looks like I'm
64:12 - gonna be able to get through all the
64:13 - questions that are left all right
64:22 - I'll be enough says isn't it better to
64:26 - use redux in this application um I I
64:33 - don't know that we need redux really the
64:39 - only place where I even thought Redux
64:42 - would be helpful is maybe for this
64:43 - search so if we do need some redox like
64:47 - functionality it
64:49 - Apolo now has some of that built in so
64:53 - I'd have to look that up and see how to
64:54 - use it but I do believe the newer
64:57 - versions of Apollo have that so if I
65:01 - think we need it at some point we'll do
65:03 - that if there are some some good reasons
65:06 - why you think we should use Redux please
65:08 - let me know I'm definitely I'll
65:09 - definitely consider it
65:17 - Michael says I did something like this
65:19 - and PHP slash my sequel pre github but I
65:23 - don't know where it is well that's cool
65:25 - if you uh if you find it or you have
65:29 - some advice based on your experience you
65:32 - know let me know I'd appreciate that
65:38 - Michael says how are you gonna grab the
65:40 - next results after the first 100 don't
65:43 - know WordPress okay so the the WordPress
65:51 - API will allow you to like offset your
65:55 - search I actually think it's called
65:56 - offset is what you put in the string so
65:59 - like in the let's put this donor so in
66:04 - our string at some point in our string
66:07 - we would just say like let's say at the
66:09 - end I would type something like offsets
66:14 - equals 100 right so now it would skip
66:20 - the first hundred results and give me
66:22 - the next hundred results so if we did a
66:25 - search that gave us five hundred results
66:27 - we'd only get a hundred sent to us first
66:29 - as we scroll down we could have it so
66:32 - that if we get far enough if we get
66:34 - close enough to the bottom of the page
66:36 - it'll automatically send for the next
66:39 - 100 results and then instead of
66:41 - replacing everything in data we would
66:44 - just add on to it was already there for
66:48 - the data so we would essentially be able
66:51 - to show 200 results or more as we keep
66:55 - scrolling down but we'd never we just
66:59 - have to make multiple calls so the way
67:02 - we would do this is you know potentially
67:05 - we would make another function that
67:09 - maybe like would be called like fetch
67:11 - more posts or something I don't know
67:13 - what I'd call it and then it would have
67:16 - all of this the same except it would
67:19 - have this addition of the offset and
67:21 - then it would increment so if we've
67:23 - called offset already then the next time
67:27 - offset calls it's going to skip the skip
67:29 - 200 posts
67:30 - and then 300 posts so you know I it
67:35 - would it would look like that that's how
67:36 - it would work I have done it with jQuery
67:39 - on another project so I know it does
67:43 - work I just have to make sure that I can
67:46 - transport that logic here and have it
67:49 - work with with state and with react a
67:55 - noble self Noble and savage says boom
67:58 - shacka lacka also us what's your
68:00 - favorite color my favorite color is red
68:03 - and what's the airspeed velocity of a
68:05 - European swallow hmm I don't know that
68:09 - one
68:11 - that's that is from Monty Python and the
68:15 - Holy Grail I think that's how it goes
68:17 - that's what's the airspeed of a Leighton
68:19 - swallow and then they say well you mean
68:21 - to Europeans well or an African swallow
68:23 - and then there's this long conversation
68:25 - that happens it's been too long since
68:28 - I've seen it to remember everything that
68:29 - they said but I do remember a bit Blake
68:32 - says as anyone coded on a Chromebook or
68:34 - installed Ubuntu in one I have quote I
68:37 - have coded on a Chromebook but I didn't
68:38 - install a boon to instead I used what's
68:41 - it called
68:43 - kimly I forget the name oh cloud 9 so
68:47 - cloud 9 it's it's like a remote
68:49 - development environment so essentially
68:51 - it is like in a boon to server that your
68:54 - remoting into and they give you an IDE
68:57 - so it I mean it looks a lot like Adam
68:59 - and Visual Studio code you have your
69:03 - terminal at the bottom so you can run
69:05 - all your Linux commands install whatever
69:08 - you need to and you know have all your
69:11 - different projects I believe you can
69:15 - pull in stuff from it it's synced up you
69:18 - know with github and with different
69:19 - things so it makes it a bit easier so I
69:21 - have done that before
69:23 - and if you're using cloud 9 it's it's
69:27 - fine I mean it's it's actually really
69:28 - easy to use I haven't installed Ubuntu
69:33 - but I kind of want to I have a current
69:36 - book right now and that the screen is
69:38 - broken but I could still use
69:41 - an HDMI cable and use like a desk so
69:47 - would essentially be changing it into a
69:48 - desktop computer because it would have
69:50 - to have a static screen but I'm thinking
69:53 - about since it's already broken just
69:55 - trying to do Linux on there and if I
69:56 - mess it up who cares
69:58 - so we'll see I haven't decided for sure
70:00 - what I want to do with that one yet Adam
70:04 - so c9 requires the credit card though it
70:07 - does now yeah when I started using it it
70:09 - didn't and then they got bought out by
70:11 - somebody and now they require credit
70:13 - cards so if you have the credit card
70:15 - you know c9 is great otherwise I think
70:19 - they're all there are alternatives but I
70:22 - haven't checked on alternatives for it's
70:25 - probably been like two years since I
70:26 - checked so I'm not really sure what's
70:28 - out there right now okay Blake's
70:32 - debating between a new Chromebook or a
70:34 - used ThinkPad Blake's as it was it
70:37 - pretty snappy and what were the specs
70:39 - honestly Chromebooks are the fastest
70:41 - things I've ever used fastest like by
70:44 - far in terms of speed like speed of
70:49 - startup and things like that like pcs
70:52 - are down here you can't even see how far
70:54 - down it's off the screen and then Max
70:57 - and then Chromebooks the fastest like
71:00 - you can't even open the screen like fast
71:03 - enough to try to catch it on a black
71:05 - screen it's just it's there it works
71:07 - it's super fast you sacrifice some stuff
71:11 - by for all the speed I don't know if
71:13 - it's still that fast if you were to
71:15 - install Ubuntu on it instead of Chrome
71:17 - OS to tell you the truth I can't
71:21 - remember what the specs are right now on
71:23 - the Chromebook that I have so sorry
71:25 - about that but I got it a while back so
71:29 - I can't remember but yeah Chromebooks
71:33 - are they're really nice for certain
71:36 - things I wouldn't want to do it all up
71:39 - on one primary so I'll say this I've
71:42 - never had a high end Chromebook but if
71:45 - you're gonna go with a high-end
71:46 - Chromebook it's gonna get pricey from
71:50 - the chrome books that I've use which are
71:52 - kind of lower in I wouldn't want to
71:54 - that'd be my primary development
71:57 - environment I just kind of like to have
72:00 - more of the freedom to do things so a
72:03 - Chromebook with Ubuntu installed that
72:07 - that might be perfect
72:09 - I just haven't tried it personally so I
72:11 - can't I can't really recommend it I mean
72:15 - it it sounds like logically it should
72:18 - work out and be awesome if you do it
72:21 - please let me know because I definitely
72:23 - want to see like how that turns out and
72:27 - maybe do it myself
72:32 - div yesh says hello I'm just learning
72:37 - react and JavaScript to I get frustrated
72:39 - as I need more practice with DES and
72:42 - algorithm and JavaScript can you suggest
72:45 - me something you can try out the unity
72:49 - algorithm challenges and free code camp
72:51 - and there's a free book that's on github
72:54 - called you don't know J s read through
72:57 - those that's that's really great for
72:59 - kind of learning a lot of the basics of
73:02 - JavaScript and so it's text and then it
73:04 - also has some exercises so check that
73:07 - out I mean you can't beat it as a free
73:09 - resource it's it's really good let's see
73:13 - I think it's time for me to go so I'm
73:17 - gonna might not be able to get through
73:19 - all of this hey JavaScript to share hey
73:24 - how's it going hey javascript er says a
73:30 - Chromebook with Linux installed is a
73:32 - no-go done it before trust me no good
73:34 - okay so had a bad experience with that I
73:37 - wonder if it would depend on the specs
73:40 - of the Chromebook I imagine it would it
73:43 - seems to me like Linux may use more
73:45 - resources than Chrome OS is meant to use
73:48 - so you might need a more powerful
73:51 - computer anyway I just got a message
73:57 - that said they're leaving in just a few
73:59 - minutes so I'm gonna have to have to end
74:02 - the stream thank you all for watching I
74:05 - should be back tomorrow
74:06 - try to stream as much as I can this week
74:09 - and get as much done as we can on this
74:12 - site until tomorrow have a great

Cleaned transcript:

hey everyone welcome to live coding with Jessie I'm Jessie and in this stream you all get to see me do my work as a frontend developer and I don't plan this ahead of time so I make a lot of mistakes when we work through the mistakes together this is very much an interactive stream so I'm gonna paste the link into the live chat now if you go to that link you'll be able to see the project as we work on it if I update it on my computer locally you will see the updates in real time you can inspect the site with dev tools you can go on different pages so you're not limited at what I'm showing you on my screen and we split everything up into Pomodoro sessions so if you're not familiar with the Pomodoro Technique I definitely recommend it but basically that we were using it on this dream is that for 25 minutes we do some code and I have minimal interaction with the live chat then for five minutes I go to the live chat and I focus on all of your questions and comments then we do another 25minute session of code and then at the end of that I go through all the remaining comments and questions so feel free to add your questions in and if you see me doing something wrong you're just not sure why I'm doing something a certain way put that in a live chat as well I get a lot of great advice from all of you in the chat and really the projects are much better off because of that so I welcome your your input if you want to check out the github repo the link is in the description to this video everyone this is also a little earlier than normal let me know what you think about this earlier time does it work better for you all you know I I know that I can't I can't stream and at a time that'll work for everyone's schedule but sometimes it's good to switch up the time and just see who can make it and who can't so let me know about that today let me switch my camera there we are so today we're gonna work on the search filters that we started to work on last week at some point and we're gonna try to actually get them working so I'm not sure what I did to the search but it doesn't work for me at all now so evidently we left it in a broken state which is okay we'll figure that out now let me check we have some activity in the live chat let's check this before we start our timer the other question is this all on code pen no this isn't on cope and the code isn't is in github and you can use that link let me post the link again in case you weren't in in the chat yet so the link that I just posted in the live chat will let you view the site as we're working on it sometime very soon this test version of the site will be available 24/7 so when that happens you all will have the link for the test version of the site alright hey everyone alright so I do want to let you all know that this site is gonna launch soon so we need to get it ready so on the streams we'll be working on things like a search and we'll be working on the routing and some like minor UI improvements for me when I'm not doing a live stream I'm gonna be working on getting all the remaining data transferred over so it's gonna be somewhat boring for me but I'm gonna try to keep the actual streams a little bit more exciting let's see I'm also considering using now instead of making multiple servers on digitalocean so if anybody has any experience using now especially for projects like this please let me know what your opinion on that is I I haven't tested it yet I'd like to test it first and maybe read up a little more on it but it seems like it's gonna be a better solution in that there'll be less things to maintain and it'll be it'll scale automatically much more easily then if we've actually had to go in start up new digitalocean servers or take them down okay so let's go to the search page on this site oops almost forgot to start the timer where is my timer there it is let's pull the timer over on our screen here so you don't have to switch everything around all right so we're gonna start this Pomodoro time and this timer happened to be built by Harsha who is frequently in the live streams and has contributed a lot to our github repos all right so let's go to that search page if you have the end rock link you can check out the search page as well so right now if I try to do a search I'm getting the black screen with an error so I'm not going to even try it right now but what we are gonna do and I don't need this would be quite so large we're going to get these working so that will make a search with these check box boxes whether they're going to be checked in or not and it will alter the results that we get back for our search so here's our search component I'm gonna make a little bit of room here and then increase the text size so let's shrink that down and to move this over we can also move this side over a bit and I think that should be big enough let me know if it's hard for any of you to see but you know if you're on at least a desktop you know with decent resolution this should work I'm not really sure how it will look on a phone let's see so here's our filter so we have this some functions already in here we have a few functions that we're not actually using yet that we brought over from a previous project so let's take second and sort things out just to see where we are since it has been about a week since we worked on this all right so here's these are just our Styles we can skip through the Styles here in our state let's take a look at what we have going on so we this is for the data when it does come back from the wordpress api which is where we're going to get the data from this is gonna house our search term this is going to house the type of search we want to do so in this case it's going to be the post types that we'd like to search for so that's where our filters come into play all of our check boxes are also our filters so these are the values true or false check they're not checked here's what we actually make the API calls so this base is going to be the same always and this URL for now this is going to be this IP address will be the URL but that may change in fact it's likely to change when we get closer to launch but for this we take the search term which is what's typed into the input and then we add the search type or multiple types which is what we'll get from the check box and then that whole string gets sent to the WordPress API all right so the the logic for that lives in another component so I'm not going to go over that right now but if you check out the the fetch component we we call it yeah so in the in the utils folder the component named fetch is that'll show you what's going on there if you want to check it out in the github repo all right so we have some logic for getting the value out of that checkbox we're debouncing so that we don't fire off a bunch of API calls you know more than we need and let's see I'm gonna get search results I'd like to see where our problem is you know what let's run a search and see what that error message looks like I know we got results with that search term since this website for a Catholic school so they're gonna have that word in there somewhere all right so our data there is no data really this state data map is not a function so we're trying to map over data but there there's no data let's check that out let's see where we're doing that this states map this they data map okay so here's where we're doing that so if this state data hmm I thought we'd taken care of this I guess not let's shut that leg is greater than zero oops let's try a check like that I mean I still think it might not even go through this check but let's see let's see how that works okay so we're not getting an error anymore which is good let's see what's happening in our in our console what we're getting here oh okay interesting type program is required for a matter it needs to be an array okay so the problem seems to be with our types all right so let's see what we're doing here alright I'm gonna check the live chat as well see if anyone's seeing anything that I don't okay hey everybody I see a lot of people saying hi that's all right well let's step through this a little bit more closely hmm look at my error again type 4 Ram is a required parameter and it needs to be an array okay you know what maybe I'm just formatting this in the wrong way okay this is the R is an example that they're giving back of what it needs to be like so it's only sending this so my I see you know we need to make we need to make a checkbox that's for all so obviously the default is going to be to search everything right I think that's expected users will expect that by default everything is going to be searched and then as you check things it'll narrow it down so we need to send a string that searches for every post type at first now I'm not going to create that string right now but at least in terms of the filters that we're using we can search for all of them then once a checkbox is checked then we switch over and use what we have from there so it'll be I think the easiest way to fix this is to say this is I want to make sure that we're clearing the search type first or it's at least somewhere we're clearing it price filter alright we're not using the price filter yet filter by category we're not actually using this yet there we are no worries and let's search string equal okay all right this'll work that'll work all right so what we need then is to have a default value for this search type and we'll worry about how to get back to the all a different time or should the value oh how about this this can be a little different than I thought but what if the default value for the check boxes is true that should solve everything the default value for every check box will be true and then users can go through and uncheck things they don't want I think it would be useful maybe to have some option to just clear all but I think that's going to be our quickest solution right now so let's do that and this should give us results true and let's see when does that change does it just change on click or are we doing it on search as well it sir saves maybe we should move this let's move this from when a checkbox is checked to when we're actually gonna get results get search results the Divas assist okay I don't remember which which one of these is actually being called let's go down to our form we'll have to clean that up at some point I don't think we need that those examples anymore so we can probably get rid of our input change get search results is what gets called all right so this is the one that gets called debounce search okay what we probably should do some of this I'm not going to delete it right away but at first we're gonna run that there we are all right the reason that I want to run this in the search is that we win it when the component first mounts and everything's checked it won't actually add those terms to our search type string until someone checks or uncheck the check box but we want those added right away so the alternative would have been would have been to manually add that search string which may still be a better alternative but for right now I think this will be quicker and allow us to test our system and just make sure it works and then we can handle refactoring it and let's try this could see against me penny Suresh alright I'm gonna wait I just I was gonna pull that down here but let's just see if this works no it's just refresh and let's check yeah it works alright great now let's toggle this so I can just see what's going on a little bit easier okay so now if I click faculty I should only get faculty okay I didn't even get any faculty members on this search oh you know what that should trigger another search so let's make we're going to make sure we we have a trigger another search all right so that that's not working properly so let's see this is not checked we searched but we could see it's still searching for this old type so I've done something incorrectly so I know two things one we got to make sure we clear out the old search term in state and add the new one and then we also need it to search automatically when we check things so that's I think that's what users expect I don't want to make users have to manually click search again all right so let's check it out rid of that okay so let's see what happens when we do check a check box we'll go down here and start first with our check box so when I check the faculty check box it says this handle change and then faculty so let's scroll up and look at handle change so handle change takes the name the event checked so this day check boxes check boxes name equals checked this state check boxes okay so we're changing the state of that particular check box good so this state check box has changed now what needs to happen as well is a search needs to happen there so let's go up to see what our search gets search results so you know what we we can should we skip this create search types yeah we're not gonna be able to get the correct event if we call this so we're not gonna call that I wanna see what our create search type yes okay all right so I think we should call this fetch search term it's gonna get everything it needs from state anyway and I guess we need we ought to move this then since when we're not see what we're gonna run this alright you know what let's let's have it here and then let's also have it here oops did we have here let's have it here oh I lost what I had copy all right let's see if we've changed anything here okay that works no let's go faculty you know what I didn't I missed this that let's try to search with that and now it didn't change anything that's interesting so it should have hmm yeah it still didn't change anything wait a second all right I see what's happening the let's check on the state because these should have been checked by default I don't think we're using controlled components here and that's I mean that's one problem we need to solve no matter what here we go here's a state let's shrink this a bit and I'm gonna increase the size on dev tools you all can see what's happening oh that's too big okay so our state's here's our data search term search type there we are okay so let's refresh now check it out again okay search term search type so let's do it so here's our search type our check boxes are all true and if I check it it stays true now it's full so I check once check twice so now my search type is correct so if I went like that see now it just gives me majors so I can unclick that so we just need to change that initial state faculty great ok there we have the faculty all right so hopefully that makes sense that were at least part of our problem was the check boxes weren't showing that they were actually checks it took two clicks to get anything to change so when I come back from the break we're gonna make sure we we fixed that the check box is being checked right off the bat and then I also do want to automatically search again when these check boxes are checked or unchecked so let's take a break now and I'm gonna scroll all the way up to the top of the chat and just work my way down and I do I'm expecting an email so I keep checking my email if you see me like bending down to look that's that's what I'm looking at so we have hello from Italy someone from Spain hey how's it going thanks for watching so we have some opinions on the screen time so the time was good for some not so good for others so I'm gonna continue to maybe stream like around noon somewhere around there but I may need to do other times hmm excuse me sorry for the yawn when I do that I always hope I don't make a lot of other people yawn you know how yawning is contagious alright so on on yuge it's a nuj please let me know how to correctly pronounce that but on yuge says hey buddy what you working on I'm kind of new here but subscribe to you longlong the way back alright awesome well thank you for subscribing and thanks for watching so basically we have this rack project and we're trying to make a search function within react so we did get the search function working but now we want to add in some filters so you can see it's it's working but the controls for the filters aren't very good right now so we're gonna try to work on those Michael says early starts today yeah it wasn't early start today I might go to lunch with some of my coworkers so they've been asking me they asked me to go to lunch frequently and I usually stream during lunch so I've kind of skipped out on a lot of stuff so I think I want to I want to try to go today and hang out with them a bit I michael says what if we do search filter equals search filter or the star maybe yes you know it's something like that something like that could work as well yeah maybe will that that may end up being like the final solution that I use I think that's a better solution than what I'm doing now SIB la silla fat sorry if I'm mispronouncing that please let me know what I'd love to I'd love to be able to pronounce that correctly but anyway they say hi Jesse I did subscribe you awesome thank you very much for subscribing and I do have another channel so that I stream on the free code camp Channel and then I also do some videos on my own channel not nearly as many videos but I think I am going to be start producing more like small very focused tutorial videos so if you're interested in that please subscribe to my channel as well I think there's a link to it in the description and occasionally I do some live streams on that channel as well usually I like live streams about side projects and tutorials that I'm working on hey Anna how's it going thanks for joining us I'd be nervous how long my Pomodoro sessions are 25 minute sessions with five minute break in between NS if I was sick I'm not like fully sick I have a sore throat and I was really congested all night but I'm sorry it's starting to clear up now so I hope I'm not getting sick thank you for asking though Brian Sizemore who is in the office right next to me said I yawn said I yawn but I heard you through the wall sorry for making you yawn all right the break is over let's go back and I actually got through everything in the live chat in that five minutes so that rarely happens that's perfect timing all right so let's go back to here I am going to take a drink and I got the G fuel so hopefully this will keep me from yawning let's see Abby now says your get your grinding on your lunch keep up the hard work yeah I have been I've been working through my lunch bag for a long long time but there's a lot to do and sometimes you get in the zone you just you don't want to stop brian says chug chug could you all hear me chugging that I'm really sorry if you could I I will try not to chug loudly next time I'm sure that was gross okay so let's yeah let's figure out what we knew these check boxes all right I think I'm going to take I think was Michaels suggestion and let's do let's take these checkboxes and we will let's move them back to false let's move them back to false and then we'll do this search term source I this states just search type mm uh let's just yeah let's split this out just to make it a bit easier I'm gonna call this you just keep it as search type oops equals in the wrong place so this is gonna equal this state search type or and then we're gonna need to put in our string that has all the stuff so is it still here can I just copy and paste it Catholic faculty major it's a Catholic department yeah this is it it's still right here okay hopefully this will work actually it might not work I'm just gonna try and see it but if any of you know without me trying it'll save a few seconds do will it just grab this value since it's an empty string or will it see the empty string and go to the or we'll find out in a second I guess sir save and then down here we're just gonna put search tight alright okay cool so eventually this will end up being a giant string but for now this kind of solves the problem of the checkboxes and then the other thing that we wanted to do was win a checkbox is clicked we wanted to search so fetch search term I think we can call fetch search term so should we do are we not doing the debounce search we don't get search results this debounce search yeah let's call this D bounced search now I don't want to pass percent of value here d valences do we need a value let me think about this search term value so the state session value here so we don't need to pass in a value to debounce search right it doesn't even do anything with that value I don't not sure I don't even know why I'm passing it okay so we're gonna do on click of a checkbox which it's handle change we're also gonna do this here D bounce search okay feel a lot going on there let's let's check it out and see what happens so I'm just going to start fresh and we're gonna try to do a search right off the bat make sure that still works okay great and I want to clear that out and well I guess it'll search automatically no matter what so now I want to click faculty great we got a search automatically and it's only faculty wonderful now let's click Department as well and there we go we have Department and faculty wonderful now let's click major and now majors are there let's take away faculty let's take away Department wonderful all right great so that's working let's just make sure like let's say we hit enter or take one of these away so do a search are we you know I can't tell if we're actually searching anymore is it not letting me search again okay searches are happening then all right cool and it is major all right excellent okay so those minor changes have essentially solved all the issues that we were having all right so let's think what do we need now it's just some kind of repetitive work is gonna be involved with just getting every single type making a checkbox for it we won't need to change anything the only would need to change in the code is when we add a new checkbox we'll just need to make sure that we add that type to this string as well and it should work the next thing that we need to work on is sorting so we want or reverse alphabetical order and then also by date so newest or oldest and we're gonna have to go yeah we'll go by the word press date that's not gonna be accurate for everything because right we're migrating all this data and so a lot of the data even though it was created you know maybe sometimes years ago it's gonna have a much newer date the exception is in the news all the news that I brought over they all I made the dates in WordPress match the dates that they had in the old system the Ektron system so those dates will work and I think that makes sense I don't know if I did it for events but I don't think we're gonna be displaying past events anyway at least that was the the last time I talked to my boss about it I think there wasn't really a need for that so I think that'll be fun as the site keeps on being updated that will actually be somewhat useful if people are coming to the site and they just want to know what's new they can use that okay that makes sense now what we'll need to do as well is for sorting it would be wonderful if we could just sort the results that we get automatically but we may need to make an API call and get items back based on that sorting this is going to be challenging that's going to be really challenging the reason it's challenging is maybe it won't be I think we've done something similar in in past projects so I'm gonna have to look through some old code I don't think I'm gonna do it right now on the stream because I don't remember exactly where it's at I don't want to take up a lot of time with that but so here's but here's what I'm thinking so we're limited to getting 100 posts in a search so let's say our search actually matches 500 posts but we only get a hundred if I only sort through the hundred that we got then let's say we're sorting by alphabetical order like I'm I'm not gonna get all the posts certainly or if by date I'm not gonna get basically the point is like it's gonna sort what's only there meaning the hundred so even if in the other 400 there's something that should be at the top of the list let's say it's alphabetic order and there's a bunch of things to start with a they're not going to get there at the top of the list because we don't have that data yet but if I make an API call I mean it's you got to make another call right and then I sort the data on the WordPress side of things and then send the sort of data so I don't just get the first hundred pose I get the first hundred posts already sorted alphabetically so maybe it might only be a through C but there will be everything then whenever we scroll down the user can either press a button or will do the infinite scroll and it can make the next API call and it can ask for it we can tell it to skip the first 100 and do the next call and then we can just increment on top of that to make you know more calls and keep skipping until there's no more I have some code for that in an old project as well so I'm gonna have to check that out it was done with jQuery but the logic should still work but what we can do to save API calls is do a check and say like we can look at this that we're getting back here so we keep getting back you know this data and displaying it in the console if we check this out and look at the length of this array and if the length of the array is 100 then we'll do another API call but if the length is less than 100 then we know we've gotten all the results already and so instead of going an API call we'll just do a normal sort will you just do a dot sort on it and that should save us a lot of time I mean I buy a lot like it's probably still gonna be less than a second but it's gonna save traffic and it should just be a faster experience does that make sense I just did a lot of talking and not a lot of coding so let me start to code some of this out as much as I can so let's do let's do a sort by date yeah let's do a date and all right so sir by dates will be yes actually there's gonna be yeah let's make a new function and you know I'm gonna get rid of this for now and fresh filtered I'm gonna get rid of this for now filter by category let's leave this in for now okay so let's say sort so we're gonna do sorts and then we're gonna say type so the sort type and then we'll go in here and here's where we'll do our function whoops yeah I don't think I can use sort let's go sort if I can use that oh I forgot my error there we go so I guess we could do at first we're just going to do one type but we will have multiple types at some point let's see so we're gonna we're gonna check to see if we have the data so if if the state data is equals 100 length length the state data length equals 100 then we're going to call what was that debounce search yeah this deboned search and we're also gonna do the set States and we're gonna make state it will be sort by oops so we're going to change the value sort by and here and so if I will be a string they need to do by a second this should work right I do that right I think is it just mad because in all my spaces what the heck should I oh okay I named it type that's hot sorry that's silly mistake okay since they swear by tight so whatever tight gets passed in that's what the sort by is gonna be and eventually the sort by will probably be a drop down that'll have four options alphabetical ascending alphabetical descending date ascending date descending so that'll get passed into here it'll set the the type and then we're gonna do a debounce search and we will modify our search function here to add something into our URL to change the the sorting on the wordpress side of things so oh yeah all right so now if it's something different so if the length is equal to 100 actually I need to say or is equal to 100 or it's equal to zero right because when we're going to do this this sort type this actually may not ever come into play but it's better just to put the check in there basically it would be like for some reason if somebody hasn't made a search yet so the data is nothing then we want to make another call to get the data okay all right I think that I think that'll be okay there may be some unnecessary calls like that but we can fix it later but I think it's better to do it like that else so else me this would then mean that the length of the data that we get back so the number of posts that we get back is somewhere between 1 and 99 if that's the case we know we have all the data for that particular search so when we do that we're going to sort the actual data so we're going to take the data this state's data and then we're gonna do the sort and cool so let's see look this is awesome it gives us the documentation for sort so we're gonna have this working here folks this is great okay so sort and what we have type yeah this is definitely gonna change based on the type so from now we'll just pick one I guess and let's just copy this from our other project to save some time so let's go to get up it's a pretty sure we did a sort just like this in this project which page is this page resources I'll make it bigger once we get there they are and so where's get a knock on the door hold on one second all right sorry about that that was the head of my department so did not wanna keep her waiting and she usually doesn't knock during the stream she's just a very apologetic about knocking during the stream okay let's see where was functions this might this might be the better the better way to do it hmm so what's this price filter oh I'm sorry I'm not looking for filters I'm looking for sorting sorry about that I thought I did have sorting do I not have that here I'll shoot well my time is up so normally I'd probably take a little bit extra time and figure this out but since I'd like to be able to make it to lunch with my coworkers I'm gonna I'm gonna not do that so basically I I must be mistaken we must not have done a sort in this this project so apologies for that but basically what we would do here then is actually sort the data and then set the state whatever we got back from this we would then set the state with that so this would be like cause sorted data equals the state day with data equals sorted data all right so it would be something like this that said state what's going on oops not equal sorry there we are okay so you see what would what would happen let me know if you need me to explain that and I can explain it a little bit more but basically like we were saying the the point of this is to not waste an API call if we don't need to and instead do it short like this which would be much faster and you know especially we want to cut down on the amount of requests going directly back to WordPress so they're gonna be layers of caching but we're not going to be able to cache search requests because they're gonna be so specific so that's the one place where I'm a little nervous about the load and it could slow things down so things anything we can do to cut down on the amount of requests is going to be good also just for users that maybe are on a data plan you know we don't we don't want to make requests from you don't have to out of respect for for the user you know for their money so for both of those reasons I think it's it's our responsibility to try to keep the the request to a minimum okay so let me save that and I want to push this up to github so that you all can check it out and it's available for me in case I'm working on a different computer so let's do get status see everything's been in search so let's do get add Doge add and then we will say yarn cm yarn cm is something that we have set up for this project normally you would just do a git commit at this point and then put your message in and and that's how you do it but we have a little extra formatting for this project so we're going to say we've added a new feature and this is going to be lets say filters for for search results no breaking changes all right so now it's gonna run the test it's gonna run the auto linting and auto formatting and it looks like we're gonna pass so far so good the tests don't take very long but we certainly don't have a hundred percent test coverage right now so that's that's why they don't take so long if anybody's interested in writing tests you know feel free to write some tests we have and n tests and unit tests happening right now so whatever you're interested in let's see good push or it in whoops get to the origin alright so that date is now available in the github repo and you check it out if you like use it for whatever you want to use it for it's totally open source and and free I'm gonna go back to the live chat and answer all the questions well yeah unless unless you all start putting in a million questions I may have to cut it off but right now it looks like I'm gonna be able to get through all the questions that are left all right I'll be enough says isn't it better to use redux in this application um I I don't know that we need redux really the only place where I even thought Redux would be helpful is maybe for this search so if we do need some redox like functionality it Apolo now has some of that built in so I'd have to look that up and see how to use it but I do believe the newer versions of Apollo have that so if I think we need it at some point we'll do that if there are some some good reasons why you think we should use Redux please let me know I'm definitely I'll definitely consider it Michael says I did something like this and PHP slash my sequel pre github but I don't know where it is well that's cool if you uh if you find it or you have some advice based on your experience you know let me know I'd appreciate that Michael says how are you gonna grab the next results after the first 100 don't know WordPress okay so the the WordPress API will allow you to like offset your search I actually think it's called offset is what you put in the string so like in the let's put this donor so in our string at some point in our string we would just say like let's say at the end I would type something like offsets equals 100 right so now it would skip the first hundred results and give me the next hundred results so if we did a search that gave us five hundred results we'd only get a hundred sent to us first as we scroll down we could have it so that if we get far enough if we get close enough to the bottom of the page it'll automatically send for the next 100 results and then instead of replacing everything in data we would just add on to it was already there for the data so we would essentially be able to show 200 results or more as we keep scrolling down but we'd never we just have to make multiple calls so the way we would do this is you know potentially we would make another function that maybe like would be called like fetch more posts or something I don't know what I'd call it and then it would have all of this the same except it would have this addition of the offset and then it would increment so if we've called offset already then the next time offset calls it's going to skip the skip 200 posts and then 300 posts so you know I it would it would look like that that's how it would work I have done it with jQuery on another project so I know it does work I just have to make sure that I can transport that logic here and have it work with with state and with react a noble self Noble and savage says boom shacka lacka also us what's your favorite color my favorite color is red and what's the airspeed velocity of a European swallow hmm I don't know that one that's that is from Monty Python and the Holy Grail I think that's how it goes that's what's the airspeed of a Leighton swallow and then they say well you mean to Europeans well or an African swallow and then there's this long conversation that happens it's been too long since I've seen it to remember everything that they said but I do remember a bit Blake says as anyone coded on a Chromebook or installed Ubuntu in one I have quote I have coded on a Chromebook but I didn't install a boon to instead I used what's it called kimly I forget the name oh cloud 9 so cloud 9 it's it's like a remote development environment so essentially it is like in a boon to server that your remoting into and they give you an IDE so it I mean it looks a lot like Adam and Visual Studio code you have your terminal at the bottom so you can run all your Linux commands install whatever you need to and you know have all your different projects I believe you can pull in stuff from it it's synced up you know with github and with different things so it makes it a bit easier so I have done that before and if you're using cloud 9 it's it's fine I mean it's it's actually really easy to use I haven't installed Ubuntu but I kind of want to I have a current book right now and that the screen is broken but I could still use an HDMI cable and use like a desk so would essentially be changing it into a desktop computer because it would have to have a static screen but I'm thinking about since it's already broken just trying to do Linux on there and if I mess it up who cares so we'll see I haven't decided for sure what I want to do with that one yet Adam so c9 requires the credit card though it does now yeah when I started using it it didn't and then they got bought out by somebody and now they require credit cards so if you have the credit card you know c9 is great otherwise I think they're all there are alternatives but I haven't checked on alternatives for it's probably been like two years since I checked so I'm not really sure what's out there right now okay Blake's debating between a new Chromebook or a used ThinkPad Blake's as it was it pretty snappy and what were the specs honestly Chromebooks are the fastest things I've ever used fastest like by far in terms of speed like speed of startup and things like that like pcs are down here you can't even see how far down it's off the screen and then Max and then Chromebooks the fastest like you can't even open the screen like fast enough to try to catch it on a black screen it's just it's there it works it's super fast you sacrifice some stuff by for all the speed I don't know if it's still that fast if you were to install Ubuntu on it instead of Chrome OS to tell you the truth I can't remember what the specs are right now on the Chromebook that I have so sorry about that but I got it a while back so I can't remember but yeah Chromebooks are they're really nice for certain things I wouldn't want to do it all up on one primary so I'll say this I've never had a high end Chromebook but if you're gonna go with a highend Chromebook it's gonna get pricey from the chrome books that I've use which are kind of lower in I wouldn't want to that'd be my primary development environment I just kind of like to have more of the freedom to do things so a Chromebook with Ubuntu installed that that might be perfect I just haven't tried it personally so I can't I can't really recommend it I mean it it sounds like logically it should work out and be awesome if you do it please let me know because I definitely want to see like how that turns out and maybe do it myself div yesh says hello I'm just learning react and JavaScript to I get frustrated as I need more practice with DES and algorithm and JavaScript can you suggest me something you can try out the unity algorithm challenges and free code camp and there's a free book that's on github called you don't know J s read through those that's that's really great for kind of learning a lot of the basics of JavaScript and so it's text and then it also has some exercises so check that out I mean you can't beat it as a free resource it's it's really good let's see I think it's time for me to go so I'm gonna might not be able to get through all of this hey JavaScript to share hey how's it going hey javascript er says a Chromebook with Linux installed is a nogo done it before trust me no good okay so had a bad experience with that I wonder if it would depend on the specs of the Chromebook I imagine it would it seems to me like Linux may use more resources than Chrome OS is meant to use so you might need a more powerful computer anyway I just got a message that said they're leaving in just a few minutes so I'm gonna have to have to end the stream thank you all for watching I should be back tomorrow try to stream as much as I can this week and get as much done as we can on this site until tomorrow have a great
