With timestamps:

00:00 - I will be going over the basics of react
00:02 - in this video react is a JavaScript
00:05 - library for building user interfaces it
00:08 - uses a concept called the virtual Dom
00:10 - that selectively renders sections based
00:13 - upon state changes and it's great for
00:15 - making single page apps it is used by
00:17 - sites such as Facebook and Instagram
00:19 - when you first start a project you have
00:22 - to make sure you include react in your
00:23 - project code pin makes it easy if you're
00:27 - using code pin you just click on the
00:29 - little gear icon here and then under
00:32 - JavaScript I already have react included
00:35 - you want to include two things if you
00:38 - don't have included already you're gonna
00:39 - go to this quick add and you're gonna
00:41 - scroll down and you're gonna go to react
00:43 - right here and then after you click here
00:45 - you're gonna open up the quick add again
00:47 - and then you're gonna click to react Dom
00:48 - you need both those things react and
00:51 - react Dom and then you have to go to the
00:53 - JavaScript preprocessor and you have to
00:55 - make sure a Babel is selected this is
00:58 - going to allow you to use JSX I'll tell
01:01 - you more about JSX later in the video
01:02 - after you have it set up you can start
01:05 - creating a react project I have a simple
01:07 - page here that's been created and react
01:09 - before I go into the details of what's
01:12 - what all this stuff is I want to show
01:14 - you that in the HTML section here I just
01:17 - have one thing it's a div with an ID of
01:19 - container the CSS I just have something
01:22 - to create a bigger font size for
01:24 - everything so it's easier to see on the
01:26 - screen so let's go over to the
01:29 - JavaScript the cool thing about react is
01:32 - that you can create a whole webpage just
01:34 - basically in JavaScript so this right
01:37 - here is a component your components tell
01:41 - react what you want to render and then
01:43 - react will efficiently update and render
01:45 - just the right components when your data
01:47 - changes usually your project will
01:50 - consist of many different components
01:52 - that go together and then you have this
01:55 - line here react down that render when
01:58 - we're going to render our main component
02:01 - which is shopping list and we can pass
02:05 - in a prop I'll tell you more about that
02:07 - later and then you have the next
02:09 - argument is where the
02:11 - the component is going to render we have
02:13 - documented that get element by ID
02:14 - container so that's going to select this
02:17 - container up here in the HTML and then
02:19 - it's going to render your react
02:21 - component here shopping list is a react
02:25 - component class components taken
02:28 - parameters called props and return views
02:31 - to display so the parameter that
02:33 - shopping list is taking in is down here
02:36 - name equals Bo it's going to take in
02:39 - this four so here's the name of the
02:40 - component and here's the parameter we're
02:42 - gonna pass in to the shopping list
02:44 - component it's also gonna return this
02:46 - view to display so it's going to return
02:48 - all this stuff right here is the view
02:50 - that's going to display this part kind
02:53 - of looks like HTML but it's actually
02:55 - called JSX
02:56 - you don't have to use JSX but it makes
02:58 - things much easier because it's so
03:00 - similar to write HTML which many people
03:02 - already know JSX
03:03 - always has to be completely surrounded
03:05 - with one tag what I mean it's you know
03:07 - it starts with a div tag it ends with a
03:09 - div tag if I tried to add another tag
03:11 - here like a PT ad or something it's
03:15 - gonna mess things up unless if I do add
03:18 - a P tag I would have to start put
03:22 - another div tag at the beginning and
03:24 - then surround the whole thing with what
03:27 - div so I have to just add another div
03:29 - here but we're going to delete all this
03:34 - stuff because we don't need it for this
03:35 - project and it already starts with a div
03:40 - tag and ends with a div tag also there
03:43 - are some differences between JSX and
03:44 - HTML instead of class you're gonna use
03:48 - classname mainly because class is
03:51 - reserved word and JavaScript there's a
03:53 - few other minor differences but for the
03:55 - most part you can write it pretty
03:56 - similar to HTML inside the JSX you can
04:00 - put these curly braces and inside those
04:02 - curly braces you can have any valid
04:04 - JavaScript inside here we have a
04:06 - variable name which is the prop that's
04:08 - passed in so when I pass in this name Bo
04:11 - I can access it just like this this that
04:16 - props that name now just realize that in
04:20 - the
04:21 - display here I still have something that
04:24 - that's not actually in the code so let
04:26 - me rerun this okay so that's what it
04:30 - should look like now the other part we
04:32 - are going to be adding later so this
04:34 - right here is being displayed right here
04:38 - we have shopping list for Bo and you can
04:42 - see it's displaying wherever your
04:42 - shopping list for Bo and then we have
04:45 - this list here and the list is being
04:47 - displayed right here around on the
04:48 - webpage now I'm going to add a little
04:50 - more to the code and react you have
04:52 - different components and the components
04:54 - form a hierarchy you usually build
04:56 - components making each additional
04:58 - component a child of the previous
04:59 - component I'm going to take out these
05:01 - list items right here and create a list
05:05 - item component we are just putting in a
05:11 - variable which is going to be all the
05:15 - list items we're gonna fill this
05:17 - variable with the list items in just a
05:19 - minute but first I'm going to show how
05:21 - you create another component up here so
05:25 - here is the the list item component so
05:28 - we have the shopping list component here
05:30 - and then we have the list item component
05:32 - here that we're going to include in the
05:34 - shopping list component
05:35 - I haven't finished showing exactly how
05:37 - to include it yet this list component is
05:40 - actually a simpler way to write
05:41 - components called a stateless functional
05:43 - component this is four components to
05:45 - only have a render method rather than
05:47 - define a class extending react that
05:50 - component you simply just write a
05:53 - function that takes props and returns
05:56 - what should be rendered so it's going to
05:58 - take in props here and it's going to
06:00 - return which should be rendered which
06:01 - just is just a list item and then inside
06:04 - the list items we have props that item
06:07 - this is something we have to pass in to
06:10 - this component right now both of these
06:13 - just renders see we just have the render
06:14 - command here we have the render command
06:16 - here but I'm gonna add more methods to
06:19 - shopping list components later this list
06:22 - item component only just renders the one
06:24 - item that's passed in I'm gonna create
06:27 - the list as a state in the shopping list
06:31 - component so I just put in
06:34 - code inside the shopping list component
06:36 - this is to help create the state of the
06:40 - list and then we're going to pass each
06:42 - item of the list that we have stored as
06:44 - state and a shopping list component into
06:47 - the list item component and then that
06:49 - state becomes props the key difference
06:52 - between props and state is that state is
06:54 - internal and controlled by the component
06:56 - itself
06:56 - well--perhaps are external and
06:58 - controlled by whatever renders the
07:00 - component this will make more sense as I
07:03 - explained this example but state and
07:05 - props are key ideas and react anything
07:08 - inside this constructor function is just
07:11 - run one time at the very beginning of
07:14 - the program in JavaScript classes you
07:17 - need to explicitly call super when
07:19 - defining the constructor of a subclass
07:20 - and this is where you're going to define
07:24 - your state variables the list state is
07:27 - owned by the shopping list component and
07:29 - the state can only be updated by the
07:31 - shopping list component will pass the
07:34 - items on the list as props to the list
07:37 - item component but the list iron
07:39 - component cannot make any changes to the
07:41 - items because they're owned by the
07:43 - shopping list component well let me
07:45 - finish create the code that will show
07:47 - you how this state actually ends up in
07:50 - the the list item up here so I'm gonna
07:53 - go to this render method down here okay
07:55 - let's look at this we are gonna create
07:57 - this variable as just an empty array
07:59 - called list items and then we have this
08:02 - loop here this that state that lists
08:05 - that's how we're getting this list here
08:07 - this list here is this that state that
08:09 - lists and then we're gonna do a for each
08:12 - loop for each item in this loop we're
08:15 - gonna use the item which is unicycle
08:17 - juggling clubs and stilts and this
08:19 - second thing is just the index of the
08:22 - items we're gonna do list items dot push
08:25 - so we're pushing each of the list items
08:26 - onto this array but now we're gonna
08:30 - actually use some JSX here so it's going
08:33 - to have this tag the list item in the
08:36 - tag and that list item is this list item
08:40 - so we are going to pass in one of these
08:45 - list items
08:46 - opponents into the array and inside the
08:50 - list item component we are going to put
08:52 - in two props so use the first prop item
08:57 - equals item so there's going to be a
08:59 - prop called item and that the value of
09:03 - that prop is item and we get the item
09:05 - from here and we're inside Jess actually
09:07 - gonna use curly braces to put in
09:09 - JavaScript so this was gonna be each of
09:12 - the items on the list and then we are
09:15 - going to pass in another prop called
09:18 - on click now you can pass in variables
09:22 - but you can also pass in functions so
09:25 - the on click is going to pass in this on
09:28 - click function which we have not created
09:31 - yet so we're gonna pass in the variable
09:34 - and we're going to pass on click as a
09:36 - function now before I create the on
09:39 - click function we're going to use the on
09:41 - click function up here so in the list
09:45 - items component I'm just going to add
09:48 - this on click equals props dot on click
09:52 - now we still don't know what that
09:54 - function is doing so that's what I'm
09:55 - gonna create now we are going to create
09:57 - the onclick function in the shopping
10:00 - list component so here's the on click
10:04 - function now I'm passing in a function
10:09 - created in this component so I'm putting
10:14 - in a list item component but I'm passing
10:16 - in the onclick is gonna equal a function
10:19 - in this component so now the the list
10:22 - item component can access the onclick
10:25 - function that's inside the shopping list
10:29 - component so let's look at what the
10:30 - onclick function is going to be doing we
10:33 - got var new list equals this that state
10:35 - that list that slice so remember that
10:37 - this that state that list is this list
10:40 - here slice is just going to copy the
10:43 - list and then we're going to do new list
10:46 - that splice index one so we're passing
10:49 - in an index and it's passed in here see
10:53 - when we when we pass in this prop on
10:55 - click we're putting the index I that are
10:59 - coming from the four
11:00 - each loop and this is just going to when
11:03 - we do splice it's just going to delete
11:04 - one item at the index so this onclick
11:07 - event is just to delete an item on the
11:09 - list and then we're gonna do this that
11:12 - set state list is new list so here's
11:16 - where we initialize the state and inside
11:19 - the state we have a list that's going to
11:20 - equal this list but now we're going to
11:22 - create a new list that deletes the item
11:25 - that's clicked on and we're going to do
11:26 - this that set state list is new list so
11:31 - it's just a way to delete an item on a
11:34 - list by clicking it by creating a copy
11:37 - of the list array instead of changing
11:40 - the original array it increases
11:42 - component and overall application
11:43 - performance before we ex are using
11:46 - JavaScript classes down here you would
11:49 - not have to use the the arrow function
11:51 - but now you have to use an arrow
11:53 - function so the word this will bind
11:56 - correctly basically without this arrow
11:59 - function here the word this would be
12:02 - referring to the wrong thing and you'll
12:03 - get an error so now let's run this and
12:06 - just just give it a test here so if I
12:08 - click juggling close it deletes the clip
12:10 - unicycle it deletes so see what that's
12:14 - what's happening here I'm gonna run it
12:15 - again if it whenever you rerun the
12:17 - project it will start it from scratch
12:18 - that's how I got these to reappear here
12:21 - so let's just go over really quick
12:22 - what's happening we have the constructor
12:24 - where we're going to create this list
12:25 - now we're gonna push each item onto the
12:30 - list like this so it's gonna push a list
12:32 - item which is basically just these Li
12:35 - tags with the onclick it's going to
12:37 - bring in the onclick function from the
12:40 - shopping list component and for that
12:42 - item it's going to push in one item at a
12:45 - time from this for each array so since
12:48 - there's three items in the list the
12:51 - unicycle juggling Club in stilts there's
12:53 - going to be three list item components
12:57 - in this list an array then we're going
13:00 - to return all this stuff here including
13:02 - this array of list items so we have the
13:08 - unordered list tag and then the list
13:11 - items is just all these
13:14 - list item tags get pushed into the array
13:17 - which ends up creating this list and
13:20 - since we have this on click event when a
13:23 - click it just automatically updates by
13:25 - removing the item so the last thing I
13:28 - want to add is just a way to create the
13:31 - items without just restarting everything
13:33 - okay I just added these two lines of
13:35 - code and I'm going to run this so it
13:37 - appears on the website here and we just
13:39 - have a text box we have a button that
13:41 - says add and you can see we have the ID
13:44 - of the text box is list item and in the
13:47 - button we have an on click event in the
13:50 - button and we've passed in using these
13:53 - curly braces we passed in the this dot
13:57 - add item function and again uses the new
14:01 - arrow functions but the key part is the
14:03 - dista add item this is a function within
14:05 - this component that we have not created
14:07 - yet so right now if i right now i can
14:11 - put in here that push add it doesn't
14:13 - really do anything that's because we
14:14 - haven't we haven't created this function
14:16 - yet so let me create the add item
14:19 - function okay here we go here's the add
14:21 - item function so let's go through what
14:23 - this does so we have our item equals
14:26 - document that get element by ID list
14:29 - item not value
14:30 - so remember when we create in the JSX or
14:33 - a kind of HTML down here we have this
14:36 - imp IM with the ID of list item so when
14:40 - we do the get element by ID list and
14:44 - that value that's going to give us
14:45 - whatever is inside this text box here
14:49 - then we have document dot get element by
14:51 - ID list item that value equals blank so
14:55 - after we get the item that's in the
14:57 - textbox we want to change that text to
14:59 - an empty string so basically after you
15:03 - click add item the word won't be in the
15:06 - text box anymore that's what this line
15:08 - is for because we've already used that
15:10 - word and then we're just like on the on
15:13 - click here where we're going to slice
15:16 - the list to create a copy of it we're
15:19 - going to create a new copy here is new
15:21 - list and then we're gonna push the item
15:23 - onto the new list new list up push
15:24 - item this I am we got from the text box
15:27 - and then just like the on click event
15:29 - we're going to do this that set state
15:31 - list is new list let me refresh this
15:34 - whole thing here and let's test it out
15:37 - if we add cereal and then I click Add
15:41 - yep
15:42 - see that went away from here and then it
15:43 - added to the list if I put juggling
15:48 - balls and then I click Add it's gonna
15:51 - add two lists and I can click valiums to
15:53 - take him off the list
15:54 - oh gosh you know but now I want more
15:57 - cereal let's add that again when you
15:59 - call the this that step set State and
16:01 - the component using list is
16:03 - automatically updated on the website now
16:06 - this list this shopping list for bow app
16:08 - is just a pretty basic example of what
16:12 - you can do with react but hopefully you
16:14 - see how powerful and all these
16:16 - components can be to create bigger and
16:18 - bigger apps this was just a brief
16:20 - introduction but I'm gonna be doing more
16:22 - react videos in the future
16:24 - thanks for watching my name is beau
16:26 - Carnes you can check the description for
16:28 - the code from this video so you can try
16:30 - all this stuff out yourself don't forget
16:32 - to subscribe and remember use your code
16:34 - for good

Cleaned transcript:

I will be going over the basics of react in this video react is a JavaScript library for building user interfaces it uses a concept called the virtual Dom that selectively renders sections based upon state changes and it's great for making single page apps it is used by sites such as Facebook and Instagram when you first start a project you have to make sure you include react in your project code pin makes it easy if you're using code pin you just click on the little gear icon here and then under JavaScript I already have react included you want to include two things if you don't have included already you're gonna go to this quick add and you're gonna scroll down and you're gonna go to react right here and then after you click here you're gonna open up the quick add again and then you're gonna click to react Dom you need both those things react and react Dom and then you have to go to the JavaScript preprocessor and you have to make sure a Babel is selected this is going to allow you to use JSX I'll tell you more about JSX later in the video after you have it set up you can start creating a react project I have a simple page here that's been created and react before I go into the details of what's what all this stuff is I want to show you that in the HTML section here I just have one thing it's a div with an ID of container the CSS I just have something to create a bigger font size for everything so it's easier to see on the screen so let's go over to the JavaScript the cool thing about react is that you can create a whole webpage just basically in JavaScript so this right here is a component your components tell react what you want to render and then react will efficiently update and render just the right components when your data changes usually your project will consist of many different components that go together and then you have this line here react down that render when we're going to render our main component which is shopping list and we can pass in a prop I'll tell you more about that later and then you have the next argument is where the the component is going to render we have documented that get element by ID container so that's going to select this container up here in the HTML and then it's going to render your react component here shopping list is a react component class components taken parameters called props and return views to display so the parameter that shopping list is taking in is down here name equals Bo it's going to take in this four so here's the name of the component and here's the parameter we're gonna pass in to the shopping list component it's also gonna return this view to display so it's going to return all this stuff right here is the view that's going to display this part kind of looks like HTML but it's actually called JSX you don't have to use JSX but it makes things much easier because it's so similar to write HTML which many people already know JSX always has to be completely surrounded with one tag what I mean it's you know it starts with a div tag it ends with a div tag if I tried to add another tag here like a PT ad or something it's gonna mess things up unless if I do add a P tag I would have to start put another div tag at the beginning and then surround the whole thing with what div so I have to just add another div here but we're going to delete all this stuff because we don't need it for this project and it already starts with a div tag and ends with a div tag also there are some differences between JSX and HTML instead of class you're gonna use classname mainly because class is reserved word and JavaScript there's a few other minor differences but for the most part you can write it pretty similar to HTML inside the JSX you can put these curly braces and inside those curly braces you can have any valid JavaScript inside here we have a variable name which is the prop that's passed in so when I pass in this name Bo I can access it just like this this that props that name now just realize that in the display here I still have something that that's not actually in the code so let me rerun this okay so that's what it should look like now the other part we are going to be adding later so this right here is being displayed right here we have shopping list for Bo and you can see it's displaying wherever your shopping list for Bo and then we have this list here and the list is being displayed right here around on the webpage now I'm going to add a little more to the code and react you have different components and the components form a hierarchy you usually build components making each additional component a child of the previous component I'm going to take out these list items right here and create a list item component we are just putting in a variable which is going to be all the list items we're gonna fill this variable with the list items in just a minute but first I'm going to show how you create another component up here so here is the the list item component so we have the shopping list component here and then we have the list item component here that we're going to include in the shopping list component I haven't finished showing exactly how to include it yet this list component is actually a simpler way to write components called a stateless functional component this is four components to only have a render method rather than define a class extending react that component you simply just write a function that takes props and returns what should be rendered so it's going to take in props here and it's going to return which should be rendered which just is just a list item and then inside the list items we have props that item this is something we have to pass in to this component right now both of these just renders see we just have the render command here we have the render command here but I'm gonna add more methods to shopping list components later this list item component only just renders the one item that's passed in I'm gonna create the list as a state in the shopping list component so I just put in code inside the shopping list component this is to help create the state of the list and then we're going to pass each item of the list that we have stored as state and a shopping list component into the list item component and then that state becomes props the key difference between props and state is that state is internal and controlled by the component itself wellperhaps are external and controlled by whatever renders the component this will make more sense as I explained this example but state and props are key ideas and react anything inside this constructor function is just run one time at the very beginning of the program in JavaScript classes you need to explicitly call super when defining the constructor of a subclass and this is where you're going to define your state variables the list state is owned by the shopping list component and the state can only be updated by the shopping list component will pass the items on the list as props to the list item component but the list iron component cannot make any changes to the items because they're owned by the shopping list component well let me finish create the code that will show you how this state actually ends up in the the list item up here so I'm gonna go to this render method down here okay let's look at this we are gonna create this variable as just an empty array called list items and then we have this loop here this that state that lists that's how we're getting this list here this list here is this that state that lists and then we're gonna do a for each loop for each item in this loop we're gonna use the item which is unicycle juggling clubs and stilts and this second thing is just the index of the items we're gonna do list items dot push so we're pushing each of the list items onto this array but now we're gonna actually use some JSX here so it's going to have this tag the list item in the tag and that list item is this list item so we are going to pass in one of these list items opponents into the array and inside the list item component we are going to put in two props so use the first prop item equals item so there's going to be a prop called item and that the value of that prop is item and we get the item from here and we're inside Jess actually gonna use curly braces to put in JavaScript so this was gonna be each of the items on the list and then we are going to pass in another prop called on click now you can pass in variables but you can also pass in functions so the on click is going to pass in this on click function which we have not created yet so we're gonna pass in the variable and we're going to pass on click as a function now before I create the on click function we're going to use the on click function up here so in the list items component I'm just going to add this on click equals props dot on click now we still don't know what that function is doing so that's what I'm gonna create now we are going to create the onclick function in the shopping list component so here's the on click function now I'm passing in a function created in this component so I'm putting in a list item component but I'm passing in the onclick is gonna equal a function in this component so now the the list item component can access the onclick function that's inside the shopping list component so let's look at what the onclick function is going to be doing we got var new list equals this that state that list that slice so remember that this that state that list is this list here slice is just going to copy the list and then we're going to do new list that splice index one so we're passing in an index and it's passed in here see when we when we pass in this prop on click we're putting the index I that are coming from the four each loop and this is just going to when we do splice it's just going to delete one item at the index so this onclick event is just to delete an item on the list and then we're gonna do this that set state list is new list so here's where we initialize the state and inside the state we have a list that's going to equal this list but now we're going to create a new list that deletes the item that's clicked on and we're going to do this that set state list is new list so it's just a way to delete an item on a list by clicking it by creating a copy of the list array instead of changing the original array it increases component and overall application performance before we ex are using JavaScript classes down here you would not have to use the the arrow function but now you have to use an arrow function so the word this will bind correctly basically without this arrow function here the word this would be referring to the wrong thing and you'll get an error so now let's run this and just just give it a test here so if I click juggling close it deletes the clip unicycle it deletes so see what that's what's happening here I'm gonna run it again if it whenever you rerun the project it will start it from scratch that's how I got these to reappear here so let's just go over really quick what's happening we have the constructor where we're going to create this list now we're gonna push each item onto the list like this so it's gonna push a list item which is basically just these Li tags with the onclick it's going to bring in the onclick function from the shopping list component and for that item it's going to push in one item at a time from this for each array so since there's three items in the list the unicycle juggling Club in stilts there's going to be three list item components in this list an array then we're going to return all this stuff here including this array of list items so we have the unordered list tag and then the list items is just all these list item tags get pushed into the array which ends up creating this list and since we have this on click event when a click it just automatically updates by removing the item so the last thing I want to add is just a way to create the items without just restarting everything okay I just added these two lines of code and I'm going to run this so it appears on the website here and we just have a text box we have a button that says add and you can see we have the ID of the text box is list item and in the button we have an on click event in the button and we've passed in using these curly braces we passed in the this dot add item function and again uses the new arrow functions but the key part is the dista add item this is a function within this component that we have not created yet so right now if i right now i can put in here that push add it doesn't really do anything that's because we haven't we haven't created this function yet so let me create the add item function okay here we go here's the add item function so let's go through what this does so we have our item equals document that get element by ID list item not value so remember when we create in the JSX or a kind of HTML down here we have this imp IM with the ID of list item so when we do the get element by ID list and that value that's going to give us whatever is inside this text box here then we have document dot get element by ID list item that value equals blank so after we get the item that's in the textbox we want to change that text to an empty string so basically after you click add item the word won't be in the text box anymore that's what this line is for because we've already used that word and then we're just like on the on click here where we're going to slice the list to create a copy of it we're going to create a new copy here is new list and then we're gonna push the item onto the new list new list up push item this I am we got from the text box and then just like the on click event we're going to do this that set state list is new list let me refresh this whole thing here and let's test it out if we add cereal and then I click Add yep see that went away from here and then it added to the list if I put juggling balls and then I click Add it's gonna add two lists and I can click valiums to take him off the list oh gosh you know but now I want more cereal let's add that again when you call the this that step set State and the component using list is automatically updated on the website now this list this shopping list for bow app is just a pretty basic example of what you can do with react but hopefully you see how powerful and all these components can be to create bigger and bigger apps this was just a brief introduction but I'm gonna be doing more react videos in the future thanks for watching my name is beau Carnes you can check the description for the code from this video so you can try all this stuff out yourself don't forget to subscribe and remember use your code for good
