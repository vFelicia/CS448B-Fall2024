With timestamps:

00:01 - all right like kimberly said my name is
00:03 - susan simkins and i want to talk to you
00:05 - today about getting started into web
00:07 - development specifically with
00:10 - how you can start to find your first job
00:12 - in front-end web development
00:15 - so i want to start off by talking about
00:17 - who i am just so you know where my
00:19 - experience is where i come from because
00:21 - depending on who you talk to everyone
00:23 - works in a different environment on
00:25 - different teams they look for different
00:26 - things different experience so what you
00:29 - hear from people is going to be a little
00:30 - bit different depending on their
00:31 - specialties i do mainly
00:34 - front-end development and i've also done
00:36 - quite a bit of ux work specifically
00:40 - consulting for
00:41 - redesigning websites i've been in the
00:44 - field for about seven years since 2012
00:48 - and
00:49 - currently i'm a web designer three is my
00:52 - official title at oracle it's basically
00:55 - a senior web designer
00:56 - entry levels one then kind of like mid
01:00 - levels two and seniors three
01:02 - it's a very corporate title but mainly i
01:05 - do front-end development i help
01:07 - kind of consult on
01:09 - redesigns i help set coding standards
01:12 - for the team
01:14 - help recommend what we need to look for
01:16 - in new hires and things like that and
01:18 - previously i've
01:20 - been a senior ux developer at big wing
01:23 - it was a marketing digital agency that's
01:26 - part of the oklahoman
01:27 - so
01:28 - it was typical
01:30 - agency type work
01:32 - is very fast paced a lot of
01:35 - small to medium-sized websites i did a
01:37 - lot of ux consulting for them
01:40 - information architecture user research
01:42 - things like that and because we had a
01:45 - very small web team i also did the
01:46 - front-end development and worked with we
01:49 - did mainly wordpress themes so working
01:52 - with wordpress developers
01:54 - to they did the back end i did the front
01:56 - end so making sure the themes were set
01:57 - up right the templates were set up right
01:59 - things like that
02:01 - before that i was a friend developer at
02:04 - ithemes if you're not familiar with them
02:06 - they do wordpress plugin development
02:09 - so
02:10 - i helped with that
02:12 - and then also did wordpress training so
02:14 - teaching people how to get started and
02:16 - using wordpress as a con content
02:18 - management system
02:20 - mainly from a a user perspective and
02:23 - less of a developer perspective so
02:26 - business owners who wanted to get in and
02:28 - learn how to use wordpress to manage
02:29 - their site
02:30 - and
02:32 - my first kind of full-time job that
02:34 - wasn't freelance was is a web design
02:37 - instructor for a company called
02:38 - pluralsight
02:39 - they acquired a company i worked in
02:41 - called digital tutors and they did
02:44 - 3d design and animation training their
02:47 - kind of tagline was we teach people how
02:48 - to make movies and games and i was
02:51 - brought on as their first hire to kind
02:53 - of help them get into
02:55 - web design
02:57 - tutorials it was all front end teaching
02:59 - people how to transition from being more
03:02 - of a designer to getting into coding so
03:04 - learning html css where they need to get
03:06 - started and things of that nature and
03:08 - then before that i did freelance web
03:11 - design and development for a couple
03:12 - years
03:13 - mainly just small sites whatever i could
03:15 - find
03:16 - creating a custom design and turning
03:18 - that into wordpress themes
03:22 - so one of the biggest questions i get
03:24 - from people is what do i need to get a
03:26 - job and there are really three different
03:28 - things you need to get a first job in
03:30 - any career and that would especially web
03:33 - development or coding you need the
03:35 - technical skills you need the soft
03:37 - skills to be able to work on a team
03:39 - unless you're going to be working by
03:41 - yourself
03:42 - i
03:43 - can't really think of a job where you
03:44 - don't at least need to work with a
03:46 - client or something like that even if
03:48 - you're in freelance and you're not
03:49 - working on a team then you're still
03:51 - going to need those soft skills and then
03:53 - also every job you're going to find
03:55 - unfortunately
03:56 - or not unfortunately because they want
03:58 - experience a lot of them kind of have
04:00 - unrealistic expectations for experience
04:03 - because how can you get experience
04:05 - before you get a first job so we'll talk
04:08 - about that as well
04:10 - so
04:11 - obviously with the technical skills one
04:13 - of the biggest questions people have is
04:15 - what should i learn
04:17 - and this is a really hard one because
04:19 - there are so many different types of
04:20 - development jobs out there there are so
04:23 - many libraries or so many frameworks
04:25 - lots of different languages
04:27 - so
04:28 - anything you can do front-end you can do
04:30 - back-end you could be a full-stack
04:32 - developer you could do devops
04:34 - you could focus on ux development like i
04:37 - did for a while which is a lot of
04:40 - in terms of coding a lot of prototyping
04:42 - and using those
04:43 - to create user tests
04:45 - ui development
04:47 - even whether you work on applications or
04:49 - websites the type of development and the
04:51 - skills you need are going to be much
04:53 - different
04:54 - so i'd encourage you to find what you
04:56 - like
04:57 - try out different things and try to
04:59 - focus on just one or two
05:01 - areas because it's so easy to get
05:03 - overwhelmed when you're getting started
05:05 - there's so much out there to learn that
05:07 - it can feel like it's impossible to
05:09 - really get the skills you need to start
05:11 - a job so
05:12 - from my perspective which is front end
05:14 - web development
05:17 - i really recommend that you start with
05:19 - kind of the basics learn the basics of
05:21 - html and css
05:24 - you might hear
05:25 - the buzzword html5
05:28 - they call it a version of html5 or html
05:31 - even though it's not a version it's just
05:33 - referring to
05:35 - you know the
05:36 - newer tags although they're not really
05:38 - that new anymore
05:40 - i think of like the semantic elements i
05:43 - want someone who
05:44 - knows how to use
05:46 - html elements correctly like a lot of
05:48 - times you'll see code that's very div
05:50 - intensive but there's a lot of benefits
05:53 - from using more semantic elements like
05:55 - the header the footer the section tag a
05:57 - side
05:59 - figure i mean
06:01 - any that you can think of and they have
06:03 - automatic accessibility benefits when
06:06 - you build
06:07 - websites that way so looking for kind of
06:09 - knowledge into that
06:11 - maybe a framework like bootstrap or
06:13 - foundation just to show that you can
06:15 - dive in and learn one of those
06:17 - i don't have a preference for either and
06:19 - in fact i'm not a fan of frameworks like
06:21 - this in general but so many teams will
06:24 - encourage
06:26 - people to use them because it speeds up
06:29 - development a lot but unfortunately
06:31 - they're extremely bloated but it is good
06:33 - to have knowledge of how to use them
06:35 - because many jobs want people to
06:38 - be familiar with frameworks then for css
06:41 - a lot of the kind of
06:44 - basic theory like do you understand the
06:46 - cascade
06:47 - can you explain inheritance do you
06:49 - understand how specificity works can you
06:52 - explain
06:54 - different types of selectors and which
06:56 - ones might override others can you
06:58 - explain how or
07:01 - why not you might use certain selectors
07:03 - in your code
07:04 - be able to talk about maintainability
07:07 - organization is huge a lot of people
07:10 - really struggle with how to organize css
07:13 - because
07:14 - it's pretty open-ended there's so many
07:16 - different ways to do it also um
07:19 - being familiar with a preprocessor like
07:21 - sas i think is great
07:23 - being able to talk about how you set up
07:25 - your sas files how you organize them
07:27 - your folder structure
07:30 - javascript a lot of
07:32 - my teams we haven't been
07:34 - super heavy on javascript they've been a
07:36 - lot of you know more or less basic
07:39 - websites so if you know the basic theory
07:41 - of javascript can you explain
07:44 - concepts like hoisting for example
07:48 - are you familiar with a framework it
07:50 - could be as simple as
07:52 - using jquery and being able to show some
07:54 - work with that
07:56 - content management systems
07:59 - wordpress is obviously my preferred
08:02 - content management system because i used
08:04 - to focus on wordpress theme development
08:08 - and it runs over 27 of the web i love
08:11 - that it's open source and it has the
08:13 - best documentation hands down of any
08:15 - content management system out there i
08:17 - would bet i haven't seen one that's
08:19 - better so
08:21 - having those skills especially if you're
08:22 - going to work in like an agency
08:24 - environment like i did or my current job
08:28 - i work with a lot of marketers so all of
08:30 - them have to work with a content
08:31 - management system on a daily basis so
08:33 - you have to understand it not only from
08:35 - a development perspective but oftentimes
08:38 - it falls to you to kind of be a
08:40 - troubleshooter and to explain to them
08:42 - how to use the interface of being able
08:44 - to
08:45 - walk people through that
08:47 - version control
08:50 - i've
08:51 - worked with a lot of different types of
08:53 - version control
08:55 - i prefer command line but i think the
08:57 - most important part is that you know how
09:00 - to use something i've worked with teams
09:02 - where they only use
09:04 - like a gui and that's fine as long as
09:06 - you understand the concepts behind it
09:09 - you know how to back up your code
09:10 - preferably if you know how to work with
09:13 - multiple people accessing a repository
09:15 - at the same time that's great because
09:17 - especially when you run into conflicts
09:18 - it can be really tricky to figure that
09:20 - out and then also to kind of have a
09:23 - basic idea of how
09:26 - you work in a team environment
09:28 - a lot of jobs i've started at
09:30 - have been a new position and so they
09:32 - didn't have a workflow in place so if
09:35 - you don't have a process that would help
09:38 - you
09:40 - be
09:40 - efficient and have a good end product
09:42 - before at least a rough idea of how you
09:44 - might accomplish that then that's
09:47 - really helpful because unfortunately a
09:49 - lot of the times you find out that those
09:51 - processes are just not always in place
09:54 - and it's up to you to create them
09:57 - and one other great thing to do is to
09:59 - look at other people's team processes
10:02 - and get an idea of
10:05 - their environment and some really good
10:06 - things that they recommend that you can
10:08 - learn
10:09 - this is an example one of my former
10:11 - co-workers talked about all the time 10
10:14 - up is a wordpress development company
10:17 - and their engineering
10:19 - best practices they thoroughly document
10:22 - their philosophy what types of things
10:24 - they look for they link to examples and
10:26 - so
10:27 - going through here and finding things
10:30 - that you're unfamiliar with and they
10:32 - talk about why it's good to know them
10:34 - that can be a really good way
10:36 - of kind of identifying any areas that
10:39 - you need to brush up on or that you're
10:40 - more interested in and things like that
10:45 - so soft skills that one's really hard to
10:48 - learn
10:49 - you can really only learn through
10:51 - experiences and practicing but it's
10:53 - really important to be able to
10:55 - communicate to that that to someone in
10:58 - an interview so
11:00 - as you're working on projects especially
11:02 - if you're working with other people in
11:04 - their code
11:05 - if you can
11:07 - write down examples or try to remember
11:09 - times when you ran into a problem
11:11 - and how you communicated to overcome
11:13 - those problems
11:15 - anything that shows that you like to
11:17 - collaborate with people and a desire to
11:19 - keep learning and growing so you guys
11:21 - already doing great you're coming to
11:23 - meetups like this and meeting people and
11:25 - networking
11:26 - and so yeah being able to talk about how
11:29 - you're active in the community
11:31 - those are really good ways to show a lot
11:33 - of these soft skills
11:35 - so
11:36 - how do you learn the skills that you
11:38 - need
11:40 - education obviously is one of the
11:42 - easiest ways
11:44 - most people i've ever worked with have
11:46 - been self-taught as developers so it's
11:48 - totally fine if you're teaching yourself
11:52 - or don't really have a degree in it as
11:54 - long as you can demonstrate that you
11:56 - have the experience and the skills
11:58 - that you need for a job so there's
12:01 - formal training i don't have any
12:02 - experience firsthand with university
12:04 - programs but
12:07 - from what i have heard it can be hard
12:09 - for them to stay up to date since
12:10 - technology changes so rapidly
12:13 - tech and vocational school i went to
12:16 - francis tuttle's web design and
12:17 - development program for two years
12:19 - full-time
12:20 - i started as web development i did that
12:22 - for a year and then i did web design for
12:24 - a year after that
12:26 - and i can't recommend that
12:28 - more highly if you have the time to
12:32 - put into it i mean there are online
12:34 - programs and there are in person
12:36 - programs and full-time it's like a
12:39 - 40-hour week job and i know not everyone
12:42 - can do that but
12:44 - i think that the amount of experience
12:46 - and stuff you learn in a program like
12:48 - that is fantastic
12:50 - and it's very inexpensive compared to
12:52 - attending something like a university
12:54 - and then you meet other people who are
12:56 - in the program so it's a great way to
12:58 - network i got
13:00 - my first three clients when i was doing
13:02 - freelance work through the instructor
13:04 - there because people would come and
13:06 - contact the school they can't afford to
13:07 - pay an agency but they're looking for a
13:09 - student and they still want to pay you
13:11 - but and it's not going to be like a
13:13 - whole lot but you get the experience and
13:15 - then still making money more money than
13:17 - you would like a part-time job or
13:19 - something like that so
13:20 - that's good
13:22 - online education there's a lot of free
13:24 - places that you can go learn
13:27 - youtube has all kinds of tutorials of
13:29 - varying quality
13:31 - code academy
13:32 - learn by doing i think that's a great
13:34 - way to get in and really learn code
13:36 - obviously the more you do the better you
13:38 - get at it
13:39 - khan academy is good then there are paid
13:42 - subscriptions video tutorials i'm a
13:45 - little bit biased here because i worked
13:47 - for pluralsight and
13:49 - i'm still doing training here and there
13:51 - for them on the side so i think that's
13:53 - good but
13:56 - i also
13:57 - don't really learn well through video
13:59 - training even though i
14:00 - create it which is kind of ironic but
14:03 - like you know there's so many different
14:05 - types of education that can suit your
14:08 - learning style
14:10 - that and you know
14:12 - for all kinds of cost levels
14:14 - such a great field that pretty much
14:16 - anyone can find a way if as long as they
14:19 - have the drive and the desire to um to
14:21 - learn the skills and then obviously
14:23 - through the community attending meetups
14:26 - watching talks going to conferences
14:28 - anything you can do
14:31 - to kind of see what other people are
14:32 - talking about it's a great way to
14:34 - identify what types of things that
14:37 - you need to or want to learn more about
14:41 - so how do you get the experience which
14:43 - is one of the hardest things because
14:44 - everyone wants to see
14:46 - it seems like three to five years of
14:48 - experience when they put out a job
14:50 - posting
14:51 - and
14:52 - in junior developers
14:56 - what we look for is rather than three to
14:58 - five years of experience i mean that's
14:59 - completely unrealistic to ask someone
15:01 - before they even have their first
15:02 - position so i think if you can get any
15:05 - kind of real world experience that's
15:07 - what we look for having a couple
15:09 - examples of live websites like when i
15:12 - got my first job i think i had
15:14 - three
15:15 - live websites up
15:17 - and i got those through
15:19 - the school like i talked about through
15:21 - the community meeting people
15:24 - if you don't find anything that way you
15:26 - could always ask friends and family i
15:27 - mean it seems like everyone has an idea
15:30 - for a website or an app so just
15:33 - volunteering
15:35 - even if you have to to get that
15:36 - experience ask them to pay for like the
15:38 - hosting and the domain and then you have
15:41 - those real examples to show
15:44 - for a portfolio
15:46 - so
15:47 - showing those work examples you could do
15:50 - through a portfolio
15:52 - one great way is to have a personal
15:53 - website and then you could talk about
15:56 - how you
15:57 - designed and built your own website as
16:00 - well so they have another example of
16:02 - work
16:03 - linkedin has
16:05 - spots where you can upload
16:07 - examples of your work there and then you
16:09 - could link to live examples if you don't
16:11 - have time
16:12 - to build a personal website
16:15 - and then also
16:16 - live code samples are a great way to
16:18 - show your actual code so hosting code in
16:21 - a repository like github
16:23 - or whatever
16:25 - if you are more into like interaction
16:27 - design or front-end design then codepen
16:30 - is a great way to
16:32 - show your work
16:33 - and then
16:34 - it's really important in addition to
16:36 - just having code samples to be able to
16:38 - talk about the process and how you got
16:40 - to the end product
16:43 - when we conduct interviews that's
16:45 - something that really stands out is that
16:48 - not that they can just show the work but
16:49 - they can really talk about how they got
16:52 - to the end product
16:53 - what they did to
16:55 - um to plan to research to come up with
16:58 - the idea if that was a part of it
17:00 - what kind of development planning
17:02 - did you do what kind of tools did you
17:04 - use why did you use those tools those
17:06 - types of things just being able to talk
17:08 - about those can show a lot about
17:11 - your work and you as a person
17:15 - so
17:16 - actually finding a job
17:19 - most people i know have found jobs
17:21 - through personal connections
17:23 - which can be kind of intimidating when
17:25 - you're getting started in a new field
17:27 - maybe you don't have a lot of personal
17:29 - connections but coming to stuff like
17:31 - this going to user groups meeting people
17:34 - is a really really great way just to
17:36 - find
17:37 - fine connections even through
17:40 - previous jobs you may have had
17:43 - you never know even if you started in a
17:45 - different
17:47 - field or different career
17:49 - maybe there's a job opening on a web
17:51 - team somewhere and you know somewhere in
17:53 - a different department they can often
17:55 - introduce you to someone who can help
17:57 - you
17:58 - kind of get a foot in the door
18:00 - and then
18:02 - there's always recruiters and
18:05 - there's a lot of
18:06 - mixed opinions on recruiters but there
18:09 - are good ones that exist i've worked
18:10 - with
18:11 - some really great ones just kind of
18:13 - watch out for some red flags like if
18:16 - they don't listen to you if they're
18:18 - often sending you jobs that have nothing
18:20 - to do with what
18:22 - your focus is like
18:25 - i get a lot of
18:26 - jobs for oracle database development
18:30 - which is not at all what i do is
18:32 - front-end developer i think they just
18:33 - see oracle in my profile and then to see
18:35 - me send it to me anyway based on the
18:37 - keywords or dot net jobs i don't i don't
18:40 - know.net at all so
18:42 - pay attention to the ones that do try to
18:44 - send you jobs that match what you're
18:46 - looking for and then also
18:49 - be firm with what you want
18:51 - one time i worked with a recruiter and
18:53 - he told me to straight off he was like
18:55 - we're not going to get the salary you're
18:57 - asking for and i was like well can we
18:58 - just submit it and i'll interview and if
19:01 - it's not a fit it's not a fit and tried
19:03 - to argue me out of it and i was like
19:07 - just do it anyway if you don't want to
19:09 - work with me that's fine
19:12 - i'll keep on looking somewhere else and
19:14 - we went in there and then i got the job
19:15 - offer i wanted to
19:17 - so they don't always they aren't always
19:20 - exact experts on
19:23 - what the requirements and possibilities
19:25 - of a position are because it wasn't like
19:28 - it was an unreasonable request it was
19:30 - like perfectly within
19:32 - the market
19:34 - value for that position they just yeah
19:36 - ask questions and make sure that
19:39 - you're getting what you deserve out of
19:40 - it and they're not trying to take too
19:42 - much of a cut out of
19:44 - what you deserve for your skills
19:46 - and another good thing about recruiters
19:48 - is it's really great for interview
19:50 - practice so if interviews make you
19:52 - really nervous even if something
19:55 - might not be an ideal job for you
19:58 - obviously you don't want to waste
19:59 - someone's time but if there are ones
20:01 - that you might be interested in getting
20:03 - in there and just getting the experience
20:06 - talking to people in interviews see how
20:07 - different companies conduct interviews
20:10 - can be
20:11 - really great so if you do find a perfect
20:13 - job that comes along if you have that
20:14 - experience and you can be comfortable
20:17 - and confident
20:18 - in an interview then that'll go a long
20:20 - way
20:21 - and
20:22 - job postings all over the place
20:26 - obviously there's a big places like
20:28 - linkedin glassdoor indeed that make it
20:30 - really easy to fill out
20:32 - a
20:34 - application and put your resume up on
20:37 - the internet
20:38 - i actually found my first job in a
20:40 - newspaper posting in the oklahoman so
20:43 - don't you know
20:45 - you can find a job anywhere even in
20:47 - places that you might not expect
20:50 - and job descriptions when you're looking
20:52 - for postings often they're written by
20:55 - someone in hr or someone who doesn't
20:57 - have any experience with the team or the
20:59 - day-to-day responsibilities of a job so
21:02 - you might find all kinds of things that
21:04 - have nothing to do with what the actual
21:06 - position is so
21:09 - if you can get on the phone and talk to
21:11 - someone or someone on the team
21:13 - oftentimes
21:15 - something that may not initially seem
21:17 - like you have the skills for would be a
21:19 - good fit for you could often be a really
21:22 - good job that was just kind of botched
21:23 - by someone trying to do their best to
21:25 - write a description of a job that they
21:28 - that they don't understand
21:33 - in interviews as i mentioned um it's
21:35 - really good to get real practice just
21:37 - get out there
21:38 - and
21:39 - see what it's like
21:40 - also
21:42 - when i was first interviewing i would
21:44 - research
21:46 - typical interview questions for a
21:48 - position and then ask my friends and
21:50 - family to walk me through a mock
21:52 - interview
21:53 - which sounds silly but it made me feel a
21:55 - lot better about
21:57 - whether someone was going to try to trip
22:00 - me up with something
22:02 - that i thought through a lot of common
22:03 - questions
22:05 - before and kind of had a starting place
22:07 - that i could talk about
22:09 - and adjust to
22:10 - any additional questions they had or the
22:12 - environment or the type of company
22:15 - and be prepared to talk about your work
22:18 - go through your past examples
22:20 - [Music]
22:22 - think about
22:24 - the type of project anyone you worked
22:26 - with the type of tools
22:28 - be able to talk about your process and
22:30 - explain that
22:31 - when you're in an actual interview make
22:33 - sure you ask
22:35 - the interviewers lots of questions
22:38 - especially try to find out things like
22:41 - what's the actual job like it can be
22:43 - very hard to
22:44 - identify that based on the job posting
22:46 - or even based on like initial
22:48 - interactions with people a lot of times
22:51 - i'll get in a job and it's
22:52 - completely different from the impression
22:54 - i was given from the initial interview
22:57 - so
22:58 - ask about a typical project what the
23:01 - deadlines are
23:03 - if you can
23:04 - walk around the office and get a feel
23:06 - for the team or the office environment
23:08 - especially if you're there later in the
23:10 - day
23:12 - you can get a feel for
23:14 - maybe whether there's a good work-life
23:16 - balance or maybe people are overworked
23:18 - based on how
23:20 - they interact with you how they look
23:23 - i did one interview that i turned down
23:27 - because
23:28 - they i got there at 2 p.m and i was
23:31 - interviewing until 7 00 pm including an
23:34 - impromptu dinner so i had a good idea
23:36 - that maybe they weren't going to be
23:38 - super respectful of work-life balance
23:40 - which is really important to me so being
23:42 - able to figure that out ahead of time is
23:44 - great and also company culture are there
23:46 - people do they seem happy are they
23:49 - talking or is everyone at their desk
23:51 - kind of silent um do they look miserable
23:55 - all types of things can give you some
23:57 - some cues as to what the environment is
24:00 - like
24:02 - interviews also also have a couple
24:04 - typical stages usually or at least where
24:06 - i've been a part of interviews
24:09 - there's a either a phone interview or an
24:11 - in-person interview it's basically a
24:13 - screening to kind of see
24:15 - does this person have the basic skills
24:17 - they say they have
24:19 - is this someone we could see being a
24:20 - good fit for the position
24:22 - and then follow that with a more
24:24 - detailed technical interview so asking
24:26 - specific technical questions about
24:29 - about projects about technologies
24:31 - theory things like that and then if
24:34 - there is a final interview or maybe this
24:35 - is combined with
24:37 - prior interviews
24:38 - questions about are they a culture fit
24:40 - would they be able to work with the team
24:42 - well
24:45 - do they are they able to
24:47 - collaborate collaborate collaborate is
24:50 - their communication good
24:52 - kind of getting those
24:54 - [Music]
24:56 - seeing if they have those skills because
24:58 - at the end of the day
24:59 - if someone has the technical
25:01 - skills if you're not going to be able to
25:03 - work with them
25:04 - for various reasons then they might not
25:06 - be a good fit for the job
25:09 - and then after interviewing kind of
25:11 - deciding whether a job is a good fit for
25:14 - you is really important
25:15 - [Music]
25:16 - sometimes you can be eager to accept a
25:20 - job
25:21 - just because it's exciting to have a job
25:23 - offer
25:24 - but
25:26 - they obviously jobs
25:28 - can be bad so make sure you research the
25:31 - company and the team um
25:33 - get try to get in a good idea of the
25:35 - company's values the team values what
25:38 - type of team they are
25:39 - also
25:41 - even though a team might be great they
25:43 - might not be a good fit for how you work
25:45 - as an individual
25:47 - i worked in an open office environment
25:49 - and my team was fantastic but i just
25:51 - found it really hard to focus because
25:53 - there are 150 people walking around the
25:55 - office every day and i've i'm like a
25:58 - squirrel person so i just accidentally
26:00 - like
26:01 - even though i don't want to just like
26:03 - watch people as they're walking across
26:05 - the floor because i just get distracted
26:07 - so
26:08 - for me having a little bit more of a
26:10 - quiet office is a lot better for my
26:13 - productivity
26:15 - watch out and see if they have high
26:17 - turnover
26:19 - obviously there's probably a reason that
26:21 - people are leaving
26:23 - if they're leaving
26:25 - ask them questions about work-life
26:27 - balance
26:28 - if that's important to you
26:30 - some companies don't really respect that
26:33 - especially watch out if they want to
26:35 - give you a company phone
26:37 - or
26:38 - something i mean everyone has a laptop
26:41 - these days but used to that could be
26:43 - kind of a sign that they want you to be
26:45 - able to work
26:47 - at any time
26:49 - brand new positions can be kind of
26:53 - hard often if it's your first
26:55 - or especially if it's your first job in
26:57 - a field because
26:59 - when there's a brand new position
27:01 - a lot of the times they don't have a
27:02 - concrete idea of what your job
27:05 - responsibilities are going to be and so
27:07 - that can be extra stressful in a first
27:09 - job trying to figure out what this job
27:11 - should be and also trying to get your
27:13 - feet off the ground and get used to
27:15 - a new career field so
27:18 - yeah a necessary stress there sometimes
27:20 - but it could also be a great opportunity
27:22 - if you are willing to deal with that
27:23 - stress you get to really have a lot of
27:25 - role in
27:26 - shaping a position and
27:28 - the workflow and kind of the processes
27:30 - for a company which can be really cool
27:32 - and then outdated technology if there
27:36 - are several years behind that can be
27:39 - really frustrating
27:41 - if they're not keeping up to date
27:42 - because then you as a person
27:44 - you have to learn older technology and
27:47 - then that can kind of hurt your
27:49 - marketability or your ability to find
27:51 - and grow into new positions because
27:54 - you're not able to kind of learn and
27:57 - stay up to date on the job as much as
27:58 - you would be if someone was using newer
28:00 - technologies and then a work environment
28:04 - i kind of touched on already
28:06 - open offices at least for me some people
28:08 - love them because they can get up and
28:10 - talk and collaborate if they're on a
28:12 - team where they have to have a lot of
28:13 - interaction and discussions that can be
28:14 - really good
28:16 - but i get really distracted
28:18 - as mentioned
28:20 - working from home in
28:22 - my current job i work from home probably
28:26 - three to four days a week and go in
28:29 - for like three
28:30 - four half days and then the rest go home
28:34 - for some people it you can get kind of
28:36 - cagey get cabin fever if you're home all
28:38 - the time
28:39 - but
28:40 - i like not having a commute and if i
28:42 - want to wear my pajamas i try not to but
28:45 - i can
28:47 - if i just feel like being comfortable
28:48 - for the day
28:50 - and then yeah getting a feel for the
28:53 - office culture like i've had some jobs
28:55 - where i'm still friends with people i
28:57 - worked with six years ago we have our
28:59 - own slack group and we're great friends
29:01 - and it's awesome we do
29:03 - game night so we have a d d group and a
29:05 - book club and that's so much fun and
29:08 - then i've worked with other office
29:09 - cultures where
29:11 - i only know a couple people and
29:14 - people come and go a lot so you don't
29:16 - really get to know anyone that well
29:18 - which is fine just kind of deciding
29:21 - what you need to get out of an office
29:23 - culture and making sure that your needs
29:25 - are met in that way
29:28 - and that's all i have so does anyone
29:30 - have any questions
29:35 - i think i saw yours first maybe um
29:54 - that is a great question i think that
29:56 - comes down to
29:57 - code samples so oh sorry um
30:01 - so the question was when you're using a
30:04 - online learning platform like
30:06 - codeacademy how can you demonstrate the
30:08 - proficiency and the skills that you
30:10 - learn from a coding platform like that
30:13 - and i know some of them i'm not sure i
30:16 - can't remember i haven't used codecademy
30:18 - in several years but some of them do
30:21 - provide completion certificates so
30:23 - that's something that you could list on
30:25 - your resume
30:27 - if you're working on a project if i
30:28 - remember correctly codeacademy has a lot
30:30 - of little
30:32 - mini projects that you could do to build
30:34 - up your skills you can put that on
30:37 - github and you obviously want to label
30:39 - your sources where you got it from
30:42 - we could say i completed these code
30:43 - academy exercises and talk about the
30:46 - skills you use and then they can come in
30:48 - and view your code from the project so i
30:50 - think that's a good way to do it
31:00 - for me
31:02 - oh yes sorry what does a typical eight
31:04 - hour work day look like for me um
31:07 - i
31:08 - am not a morning person
31:10 - and my boss knows that we talked about
31:12 - it before i accepted the job and so i
31:15 - start
31:15 - around 9 30
31:19 - every day
31:20 - and
31:21 - i usually
31:22 - start by checking my email
31:24 - i work mostly with events marketing team
31:27 - and they have a lot of urgent last
31:29 - minute requests when they're updating
31:31 - events and things
31:32 - and so i make sure there there's nothing
31:35 - urgent that's coming in that i need to
31:37 - take care of immediately
31:40 - and if there is i will even
31:43 - i'll have coffee and go straight in
31:45 - there and start pushing updates if not
31:47 - then i'll go into the office and work
31:49 - until
31:51 - one or two pm because i like i get stir
31:53 - crazy if i'm home all the time but
31:56 - i am really productive in my home office
31:58 - because i spent some time trying to make
32:00 - it
32:02 - comfy and in the type of environment
32:04 - that makes me
32:06 - productive so i have like a stand-up
32:08 - desk and then a normal desk so if i need
32:10 - to stand up i can stand up if i want to
32:12 - sit down i can sit down so
32:14 - i finish out the afternoon there so my
32:16 - days typically from
32:19 - 9 30 to 5 30
32:21 - every tuesday
32:22 - we have a coding team coding call and
32:26 - most of the team is in the philippines
32:28 - so they're on a 13-hour time difference
32:30 - so we have our call from
32:32 - 6 pm to 7 pm on tuesdays
32:36 - and
32:37 - yeah i can't really think of anything
32:39 - else
32:41 - in terms of projects
32:43 - okay yeah for sure that's important
32:46 - mostly we work with a product called
32:50 - light cms it was
32:54 - net fusion element net fusion i think
32:56 - was the company that developed it which
32:58 - was acquired by
33:00 - netsuite which was acquired by oracle
33:03 - and so there are a lot of legacy
33:05 - websites built on
33:07 - light cms so
33:09 - being familiar with
33:11 - wordpress and other content management
33:13 - systems i had to learn how to use light
33:16 - cms and build websites in that which is
33:18 - kind of a challenge because there wasn't
33:20 - a lot of technical documentation for
33:22 - developers there's more for users those
33:24 - kind of dig in and
33:26 - try to figure it out so
33:29 - i help with
33:30 - a lot of conference websites
33:34 - so they're not huge websites they're
33:36 - probably like five to ten pages
33:38 - just doing the front end for that i help
33:42 - kind of set coding standards for the
33:44 - team in manila so recently i've been
33:48 - doing some
33:50 - recommendations for changes to projects
33:53 - how they could set up projects
33:55 - use
33:56 - for example gulp
33:59 - to automate tasks instead of doing
34:01 - things manually
34:03 - how to
34:04 - organize and optimize their css based on
34:07 - common engineering best practices
34:10 - and
34:11 - we're
34:13 - migrating
34:14 - a website over onto oracle's content
34:16 - management system while it's in the
34:18 - middle of a redesign which is a lot to
34:21 - do at once so
34:22 - i'm on a lot of calls with their
34:24 - marketing team kind of figuring out the
34:28 - content strategy and any revisions that
34:30 - are made to the design and
34:32 - building
34:33 - templates for the new system
34:51 - uh the question was what books do i
34:53 - recommend for
34:55 - learning web design or web development
34:59 - okay
35:00 - um
35:02 - this is going to be a shameless plug
35:04 - it's not out yet but i'm writing a
35:05 - textbook that's teaching people how to
35:07 - get into html and
35:09 - css and front-end development so
35:11 - hopefully that'll be good when it comes
35:13 - out
35:15 - be by bloomsbury interactive publishing
35:18 - their publisher in the uk
35:20 - i really like o'reilly books
35:23 - they can be kind of dry but
35:26 - they explain the technical side of
35:28 - things really well
35:30 - i like a lot of their javascript book
35:32 - javascript the good parts is one i
35:34 - remember really liking it
35:36 - javascript patterns is really good
35:39 - they're just general javascript book
35:42 - that's like this big it's huge but if
35:44 - you have a specific question about
35:45 - something like it's such an exhaustive
35:47 - resource to get an overview and kind of
35:49 - get a good explanation of specific
35:52 - things
35:54 - i'm trying to think
35:55 - i can't remember what it's called but
35:58 - there's this company that makes a lot of
36:00 - front-end development books and they
36:01 - have they're kind of silly they have a
36:03 - lot of cartoons
36:04 - um
36:06 - in them so it's kind of they try to make
36:07 - it humorous but it makes it a little bit
36:10 - more interesting to read a textbook
36:13 - i'll have to sit and think about what
36:15 - they're called but maybe if you google
36:17 - like funny web design book it might pop
36:20 - up
36:24 - yeah and then for
36:25 - design
36:27 - [Music]
36:28 - my favorite
36:29 - design books have been
36:32 - focused mainly on ux research
36:34 - and i just completely blanked on
36:38 - the company name but they run
36:41 - a really big
36:43 - ux consultancy
36:45 - group
36:46 - and
36:47 - a book apart
36:49 - a book apart has
36:51 - a lot of different good titles i don't
36:52 - know if you're familiar with them but
36:53 - they run an event apart and
36:57 - what's the website
37:00 - yeah
37:01 - jeffrey zeldman helped started that
37:03 - website and they
37:04 - a lot of
37:06 - well-known people
37:07 - will write just kind of a one-off book
37:09 - on their
37:10 - specialties they have a really good one
37:12 - on web typography
37:15 - which
37:16 - is you know there's
37:18 - it's deceptively simple but there's
37:19 - really a lot there with web typography
37:21 - inside it setting type for the web that
37:23 - was one of my favorite books for sure
37:25 - i can't remember his first name but it's
37:26 - by something brown
37:29 - yeah and then online it's kind of
37:32 - written in a textbook type format but
37:34 - hack design is a really great free
37:36 - course
37:38 - i don't know if you still can but used
37:39 - to be able to sign up through email and
37:40 - then they would send you a lesson a week
37:42 - in your inbox
37:43 - and they have a lot of different authors
37:46 - and
37:46 - it's
37:48 - more like hack design how to learn
37:50 - design from more of a technical
37:52 - background
37:54 - but yeah they have
37:56 - a ton of different design topics and
37:58 - then also coding for designers so if
38:00 - you're more of a visual learner
38:01 - anything that's aimed at teaching
38:04 - like a designer how to code is good
38:06 - because they try to make it
38:09 - yeah more more visual
38:14 - yes um
38:21 - all areas
38:32 - that's a great question okay so the
38:33 - question was um since web technologies
38:36 - are changing every year so rapidly where
38:39 - do i see
38:40 - html css javascript going in three to
38:44 - five years is that right or just in the
38:46 - future
38:48 - for
38:49 - i mean this is a hard question because
38:52 - um i don't i think it's kind of a
38:55 - maturity point to where we aren't going
38:57 - to see
38:58 - anything super crazy changing i think
39:02 - hopefully
39:03 - css for example will start getting
39:06 - better and better like adding native
39:08 - support for
39:09 - for variables and for more
39:13 - functional programming type logic that
39:15 - makes it really easy or easier to
39:19 - write and maintain css in a way that's
39:22 - maintainable and kind of follows best
39:24 - coding practices hopefully html will
39:27 - continue to go in more of a direction
39:29 - for
39:30 - um like they did with html5
39:33 - or the
39:35 - tags they added in the last
39:37 - version like more
39:39 - native support for semantic elements i
39:41 - think that's important for accessibility
39:43 - is having a lot of those
39:45 - built-in a lot of ability to create more
39:48 - of a rich expressive web
39:50 - it works better with seo
39:53 - the more a
39:57 - algorithm or
39:59 - something like
40:00 - google can understand the context of
40:02 - your content based on the markup you're
40:04 - using the
40:05 - better and smarter it can be at using it
40:07 - in
40:08 - different contexts
40:09 - [Music]
40:36 - i
40:40 - okay so the question was um how much
40:43 - coding experience did i have before i
40:44 - got my first job or my first project
40:47 - first project
40:48 - okay um so my first project
40:51 - real world project was a non-profit in
40:54 - edmond called shepherds of love they
40:56 - reached out to francis tuttle and wanted
40:59 - a student to help them with their
41:00 - website
41:02 - i had been in the program i think maybe
41:04 - eight months at that point and
41:08 - i had i knew a little bit about
41:09 - wordpress i had built a couple
41:13 - you know project websites in class i
41:16 - would say i had like
41:18 - a decent understanding of html and css
41:20 - didn't really know any javascript
41:23 - knew like a teeny tiny bit of php maybe
41:26 - and i thought i knew a lot more than i
41:28 - actually knew so i took on this project
41:30 - agreed to develop a wordpress site and i
41:33 - had to learn
41:34 - so much for my first project
41:37 - i was
41:38 - woefully unprepared
41:40 - but i think that's a really good great
41:42 - way to learn is to take on something
41:45 - real and then you find out exactly what
41:47 - you need to know
41:49 - to build that project so as long as you
41:50 - give yourself time to
41:52 - learn i mean i think it's hard to find
41:55 - unless you're doing the same thing over
41:56 - and over again every project your hat
41:58 - you have you're going to have to learn a
42:00 - new type of technology or a new skill or
42:03 - what's changed since the last time you
42:05 - used a technology so
42:07 - i would say as long as you have some of
42:09 - the basics down it's never too early to
42:11 - take on a first project and
42:14 - and to
42:15 - yeah just to tackle it because
42:18 - that's the best way to learn
42:31 - is
42:37 - [Laughter]
42:53 - yeah that's another great question so
42:55 - the question was um how do you know
42:58 - what's a the right salary to ask for how
43:00 - do you price yourself
43:02 - when you're looking for a job
43:04 - and
43:05 - i think
43:06 - one of the
43:08 - first things to do is do some research i
43:10 - think salary.com
43:13 - or something like that it's run by
43:15 - hr people and they post salary ranges
43:18 - for different positions so
43:21 - look at
43:22 - first of all the type of job titles that
43:24 - you might be looking at and then also
43:27 - what type of skills that
43:30 - you'd be using in that position because
43:31 - oftentimes job titles can vary
43:34 - so much between different companies
43:36 - sometimes
43:37 - it might be called something but it's a
43:39 - better match to another job and then
43:42 - they'll have a low end for that job in
43:45 - your area and a high end and kind of a
43:46 - median and
43:48 - i would shoot for
43:50 - somewhere in the median if it's your
43:53 - first job
43:54 - you don't want to undervalue yourself
43:56 - especially
43:57 - when you accept a new position because
44:00 - any
44:00 - future raises or bonuses a lot of the
44:03 - times are based on your base salary so
44:05 - if you're already getting underpaid from
44:07 - the start then you're
44:09 - hurting your growth potential for the
44:11 - future because
44:14 - your you know your incline will be much
44:16 - slower if your base starting salary is
44:19 - lower so obviously you don't want to ask
44:21 - too much and have them take you off the
44:22 - table so um asking like
44:26 - yeah salary such a sensitive people
44:29 - are sensitive thing for people to talk
44:31 - about it can be hard to ask people what
44:33 - they're making but if you know someone
44:36 - who's comfortable talking about what
44:37 - they make in the field then you can kind
44:39 - of get a baseline for what's realistic
44:42 - in the area and then also looking at the
44:44 - type of company so
44:46 - if you're
44:47 - trying to get a job at a startup
44:49 - generally they don't have as much
44:51 - revenue or ability to pay you so it
44:53 - might be on the lower end of that scale
44:55 - if it's at a bigger company generally
44:57 - times they'll want to be
44:59 - competitive so it would be towards
45:01 - the median or maybe even the high end of
45:03 - the scale
45:04 - so
45:05 - [Music]
45:06 - yeah and
45:07 - never
45:08 - agree to a salary before you have an
45:10 - interview a lot of people try to pin you
45:12 - down and give try to get you to give a
45:14 - range before you even get in the door
45:16 - and that can kind of shoot yourself in
45:19 - the foot especially if the
45:21 - responsibilities are going to be much
45:22 - higher than you initially thought when
45:25 - you started interviewing then they
45:27 - already have you pegged a
45:29 - range that may not be
45:31 - a good compensation for the type of work
45:33 - you would be doing so
45:35 - yeah research glassdoor is another
45:37 - really good place to
45:39 - research and see what people the actual
45:40 - company get paid at least
45:43 - if you can't find it for your specific
45:46 - position then
45:47 - looking at market pay for other
45:49 - positions in the company and what
45:51 - they're paying compared to that you can
45:52 - kind of get an idea of
45:54 - what they're willing to pay for
45:57 - and then always counter offer would be
45:59 - my other
46:00 - piece of advice a lot of people are
46:02 - scared especially in a first job to make
46:04 - a counter offer and just accept their
46:06 - first salary but
46:09 - you know people they expect you to
46:11 - bargain so the worst thing that can
46:13 - happen is that they tell you no
46:15 - and that's the easiest way to get a
46:17 - higher salary from the start is make a
46:19 - counteroffer maybe
46:21 - provide some justification for why you
46:24 - think you deserve that higher number
46:26 - you could say this is more in line with
46:29 - the market pay for my position and based
46:31 - on the skills that i have
46:33 - i think this is fair compensation for
46:37 - what you're looking for and then just
46:39 - see what they come back
46:56 - um the question was can i recommend any
46:58 - javascript libraries like
47:01 - node angular or
47:02 - react
47:04 - i would say
47:05 - anymore i'm not the best person to ask
47:07 - that because
47:09 - most of what i do
47:11 - isn't on the javascript side
47:14 - i
47:16 - if i have to do anything
47:18 - in recent projects it's mostly jquery so
47:22 - i think it highly depends on
47:24 - what you want to do if you want to get
47:26 - into web apps then certainly learning
47:28 - something like angular react
47:30 - would be great if you're
47:33 - looking more at websites
47:35 - jquery is super common so
47:38 - know your use case for it and then
47:41 - decide where to focus after that there's
47:42 - no reason to learn all of the frameworks
47:45 - just kind of decide what you need to
47:48 - to get the job you want
47:57 - um
48:06 - that's a great question um so the
48:08 - question was what do i like about or
48:10 - what got me interested in web design and
48:12 - development and what is it about the
48:14 - day-to-day job that make me happy um so
48:18 - i actually got started in
48:21 - web development because i graduated from
48:24 - oklahoma state university in 2011 with a
48:26 - degree in political science with an idea
48:28 - that i was going to go to law school and
48:30 - i started studying for the lsat and then
48:33 - thinking about whether i actually wanted
48:34 - to be a lawyer and i disliked history
48:36 - classes and studying law but i don't
48:38 - think i actually wanted to be a lawyer
48:40 - so
48:41 - after i graduated it's like well crap
48:43 - what do i do now
48:45 - and
48:46 - my brother is a web developer and so he
48:49 - kept on telling me that my type of
48:51 - people are in web development and i'm
48:53 - still not quite sure what that means but
48:56 - he uh he encouraged me to like give it a
48:58 - shot he's like you like computers and
49:00 - you like design so maybe this could be
49:02 - like a really good interaction of the
49:04 - two
49:05 - and my sister-in-law had also graduated
49:08 - with a degree in journalism and she was
49:10 - kind of looking for something to try
49:12 - until she figured out
49:14 - long-term what she wanted to do so she
49:17 - found francis tuttle's program and
49:19 - enrolled in it and i was like well why
49:21 - not why don't i enroll in francis tuttle
49:23 - too and at the very least i'll have my
49:24 - sister-in-law there as a friend
49:26 - and so i joined the program with her and
49:29 - she actually ended up getting a job at
49:31 - an agency after six months and left the
49:33 - program and i stayed in a little bit
49:36 - longer and ended up finishing the
49:38 - program because i was scared to get a
49:40 - job but
49:42 - yeah i just i found that um
49:45 - yeah i
49:47 - was always interested in computer
49:49 - science but i thought it wouldn't be
49:51 - interesting enough for some reason but i
49:54 - think i just didn't have a real
49:55 - understanding of what you could do with
49:57 - it and what it actually was and so the
50:00 - more i got into
50:01 - web development and especially design
50:03 - i'm
50:04 - in all my jobs i've done a good amount
50:06 - of development combined with the design
50:09 - so i like that it has
50:11 - kind of that nerdy technical aspect of i
50:14 - love researching things so i'm always
50:17 - getting to research technologies and to
50:19 - learn
50:20 - i really enjoy coding so i get to code
50:23 - every day
50:24 - and there's not many jobs that i can
50:28 - think of that i can
50:30 - design something and use a creative side
50:33 - um
50:34 - and then combine that with something
50:35 - that's highly technical as well so it
50:37 - kind of plays into two things i really
50:39 - really enjoy
50:40 - i love the flexibility of being in web
50:43 - development
50:44 - i've met a lot of really great people so
50:46 - i think
50:48 - meeting fun people and then just really
50:50 - enjoying the day-to-day work keep me
50:51 - happy in my job
51:10 - okay so the question was would i take a
51:13 - language-based class like c plus um or
51:17 - java or do i just nix it and learn it
51:19 - myself
51:20 - um i think that depends a lot on
51:23 - the class itself because a lot of them
51:26 - are kind of out to date at universities
51:29 - um most people i've heard have taken a
51:32 - coding class in college they only have
51:34 - like one lab a week
51:36 - and so i think
51:38 - having so little
51:40 - hands-on
51:41 - learning combined with so much
51:43 - theory
51:45 - learning like
51:46 - if you want to learn the theory behind
51:48 - it then that could probably be a really
51:50 - great fit but if you want to
51:52 - get more of the hands-on
51:55 - learning how to code then
51:58 - i would maybe go a different route
52:01 - because
52:03 - yeah it's really hard to learn something
52:04 - if you're i mean unless you want to put
52:06 - in a lot of time outside of class then
52:08 - maybe that would be a good balance of
52:10 - learning the theory and being able to
52:12 - learn the actual coding side as well but
52:16 - from
52:17 - my personal opinion i think
52:20 - for formal education something like a
52:22 - vocational school for languages is one
52:25 - of the best ways to learn because
52:28 - it was
52:29 - um
52:30 - it was the theory side but it was also
52:32 - we coded for like six hours a day so
52:35 - um i think that's the best way to learn
52:37 - is to learn by doing
52:50 - sure that's a great question um
52:53 - when
52:54 - so recently i've been
52:56 - on
52:58 - non-coding or web development podcasts
53:01 - because that's kind of my way to relax
53:02 - and shut it off
53:04 - but when i do listen to
53:07 - web podcasts i like
53:09 - the next web
53:12 - jen
53:13 - meyer i think is
53:15 - who creates that and then i can't uh
53:18 - i can't remember what it's called but it
53:20 - has
53:21 - chris coyer and a developer from austin
53:25 - they had a podcast show
53:27 - that is really really funny
53:30 - and so if you want to listen to
53:31 - something i recommend that one very
53:33 - highly because it's entertaining
53:35 - um
53:37 - but yeah in terms of podcasts i mostly
53:40 - use those for more like entertainment
53:44 - type and
53:45 - less learning
53:46 - i do like newsletters for
53:49 - keeping up to date because
53:51 - anything that
53:53 - creates less work for me and being more
53:56 - efficient is great so someone else does
53:58 - all the hard work and tries to find
53:59 - things that people are talking about and
54:02 - send it directly to
54:04 - your email so you can kind of scan
54:06 - through and see what are people
54:08 - talking about
54:10 - kind of the trends between the
54:13 - the different newsletters and decide
54:16 - what do i need to spend my time learning
54:18 - to keep up to date see what's happening
54:20 - so i think that's a great way for sure
54:37 - okay so the question was are coding
54:39 - camps uh
54:41 - coding boot camps considered worthwhile
54:43 - and what was the second part of the
54:44 - question
54:45 - and are they competitive um
54:49 - are the skills competitive
54:51 - i can't speak a lot about boot camps but
54:56 - from what i've seen it does seem like a
54:59 - lot of them give
55:00 - a good variety of skills that are in
55:02 - demand for the workplace i mean at the
55:05 - end of the day they're businesses so if
55:06 - they can't get their
55:08 - participants jobs then
55:11 - they're not going to stay in business so
55:13 - from what i've seen it does seem like
55:15 - they stay pretty up to date and from
55:17 - what i've heard from other people a lot
55:19 - of what they get out of boot camps is
55:22 - they
55:23 - want to have a certain success rate of
55:25 - people placed in jobs so it can be a
55:26 - great opportunity to
55:29 - maybe have a job opportunity that you
55:31 - might not other have through the
55:32 - connections that you can make but like
55:35 - with anything there's going to be
55:36 - varying
55:37 - quality levels
55:39 - [Music]
55:40 - in
55:41 - what you get so
55:43 - but
55:43 - what i i would say though that i think
55:46 - most of what they teach you could
55:48 - teach yourself through online resources
55:51 - for probably much much cheaper but
55:53 - it depends on your learning style and
55:57 - some people
55:58 - aren't
55:59 - they struggle with
56:01 - self-direction and kind of deciding what
56:03 - to focus on so if you want someone to
56:05 - kind of do all that for you in an easy
56:07 - to follow formula then
56:09 - then sure i think a bootcamp would be
56:12 - good to start learning
56:16 - okay last questions
56:40 - okay so the question is um
56:43 - how do you get a freelance job when it
56:44 - seems like html css and javascript
56:46 - aren't enough in your perspective to get
56:48 - a freelance job um
56:51 - i would say um
56:54 - yeah it depends on obviously where the
56:57 - um
56:58 - the source is coming from so
57:01 - um
57:02 - if you're contracting with a company who
57:04 - already has a development team they
57:05 - would probably be a lot stricter on what
57:08 - they want because they want someone who
57:10 - can
57:10 - um who can work in kind of their team
57:14 - environment and up to their team
57:15 - standards from an external basis
57:18 - a client
57:20 - this might sound horrible but someone
57:22 - who's less tech savvy is not going to
57:25 - really know
57:27 - whether or not you're up to date with
57:28 - javascript for example or how good your
57:30 - coding skills are so it's not to say
57:32 - that you should screw them over and do a
57:34 - bad job but
57:35 - there's more of an opportunity to take
57:37 - on something and learn while you're
57:39 - doing it so as long as you follow
57:41 - through on your promises and you're
57:43 - ending up with a good quality product
57:44 - then there's nothing wrong with um
57:48 - with learning while on the job as long
57:49 - as you're not misrepresenting anything
57:51 - to the client or trying to be dishonest
57:55 - so maybe try
57:56 - try
57:57 - freelance jobs in a different
57:58 - environment so rather than at a company
58:00 - or an agency look for individuals or
58:04 - smaller businesses or something like
58:05 - that
58:09 - okay

Cleaned transcript:

all right like kimberly said my name is susan simkins and i want to talk to you today about getting started into web development specifically with how you can start to find your first job in frontend web development so i want to start off by talking about who i am just so you know where my experience is where i come from because depending on who you talk to everyone works in a different environment on different teams they look for different things different experience so what you hear from people is going to be a little bit different depending on their specialties i do mainly frontend development and i've also done quite a bit of ux work specifically consulting for redesigning websites i've been in the field for about seven years since 2012 and currently i'm a web designer three is my official title at oracle it's basically a senior web designer entry levels one then kind of like mid levels two and seniors three it's a very corporate title but mainly i do frontend development i help kind of consult on redesigns i help set coding standards for the team help recommend what we need to look for in new hires and things like that and previously i've been a senior ux developer at big wing it was a marketing digital agency that's part of the oklahoman so it was typical agency type work is very fast paced a lot of small to mediumsized websites i did a lot of ux consulting for them information architecture user research things like that and because we had a very small web team i also did the frontend development and worked with we did mainly wordpress themes so working with wordpress developers to they did the back end i did the front end so making sure the themes were set up right the templates were set up right things like that before that i was a friend developer at ithemes if you're not familiar with them they do wordpress plugin development so i helped with that and then also did wordpress training so teaching people how to get started and using wordpress as a con content management system mainly from a a user perspective and less of a developer perspective so business owners who wanted to get in and learn how to use wordpress to manage their site and my first kind of fulltime job that wasn't freelance was is a web design instructor for a company called pluralsight they acquired a company i worked in called digital tutors and they did 3d design and animation training their kind of tagline was we teach people how to make movies and games and i was brought on as their first hire to kind of help them get into web design tutorials it was all front end teaching people how to transition from being more of a designer to getting into coding so learning html css where they need to get started and things of that nature and then before that i did freelance web design and development for a couple years mainly just small sites whatever i could find creating a custom design and turning that into wordpress themes so one of the biggest questions i get from people is what do i need to get a job and there are really three different things you need to get a first job in any career and that would especially web development or coding you need the technical skills you need the soft skills to be able to work on a team unless you're going to be working by yourself i can't really think of a job where you don't at least need to work with a client or something like that even if you're in freelance and you're not working on a team then you're still going to need those soft skills and then also every job you're going to find unfortunately or not unfortunately because they want experience a lot of them kind of have unrealistic expectations for experience because how can you get experience before you get a first job so we'll talk about that as well so obviously with the technical skills one of the biggest questions people have is what should i learn and this is a really hard one because there are so many different types of development jobs out there there are so many libraries or so many frameworks lots of different languages so anything you can do frontend you can do backend you could be a fullstack developer you could do devops you could focus on ux development like i did for a while which is a lot of in terms of coding a lot of prototyping and using those to create user tests ui development even whether you work on applications or websites the type of development and the skills you need are going to be much different so i'd encourage you to find what you like try out different things and try to focus on just one or two areas because it's so easy to get overwhelmed when you're getting started there's so much out there to learn that it can feel like it's impossible to really get the skills you need to start a job so from my perspective which is front end web development i really recommend that you start with kind of the basics learn the basics of html and css you might hear the buzzword html5 they call it a version of html5 or html even though it's not a version it's just referring to you know the newer tags although they're not really that new anymore i think of like the semantic elements i want someone who knows how to use html elements correctly like a lot of times you'll see code that's very div intensive but there's a lot of benefits from using more semantic elements like the header the footer the section tag a side figure i mean any that you can think of and they have automatic accessibility benefits when you build websites that way so looking for kind of knowledge into that maybe a framework like bootstrap or foundation just to show that you can dive in and learn one of those i don't have a preference for either and in fact i'm not a fan of frameworks like this in general but so many teams will encourage people to use them because it speeds up development a lot but unfortunately they're extremely bloated but it is good to have knowledge of how to use them because many jobs want people to be familiar with frameworks then for css a lot of the kind of basic theory like do you understand the cascade can you explain inheritance do you understand how specificity works can you explain different types of selectors and which ones might override others can you explain how or why not you might use certain selectors in your code be able to talk about maintainability organization is huge a lot of people really struggle with how to organize css because it's pretty openended there's so many different ways to do it also um being familiar with a preprocessor like sas i think is great being able to talk about how you set up your sas files how you organize them your folder structure javascript a lot of my teams we haven't been super heavy on javascript they've been a lot of you know more or less basic websites so if you know the basic theory of javascript can you explain concepts like hoisting for example are you familiar with a framework it could be as simple as using jquery and being able to show some work with that content management systems wordpress is obviously my preferred content management system because i used to focus on wordpress theme development and it runs over 27 of the web i love that it's open source and it has the best documentation hands down of any content management system out there i would bet i haven't seen one that's better so having those skills especially if you're going to work in like an agency environment like i did or my current job i work with a lot of marketers so all of them have to work with a content management system on a daily basis so you have to understand it not only from a development perspective but oftentimes it falls to you to kind of be a troubleshooter and to explain to them how to use the interface of being able to walk people through that version control i've worked with a lot of different types of version control i prefer command line but i think the most important part is that you know how to use something i've worked with teams where they only use like a gui and that's fine as long as you understand the concepts behind it you know how to back up your code preferably if you know how to work with multiple people accessing a repository at the same time that's great because especially when you run into conflicts it can be really tricky to figure that out and then also to kind of have a basic idea of how you work in a team environment a lot of jobs i've started at have been a new position and so they didn't have a workflow in place so if you don't have a process that would help you be efficient and have a good end product before at least a rough idea of how you might accomplish that then that's really helpful because unfortunately a lot of the times you find out that those processes are just not always in place and it's up to you to create them and one other great thing to do is to look at other people's team processes and get an idea of their environment and some really good things that they recommend that you can learn this is an example one of my former coworkers talked about all the time 10 up is a wordpress development company and their engineering best practices they thoroughly document their philosophy what types of things they look for they link to examples and so going through here and finding things that you're unfamiliar with and they talk about why it's good to know them that can be a really good way of kind of identifying any areas that you need to brush up on or that you're more interested in and things like that so soft skills that one's really hard to learn you can really only learn through experiences and practicing but it's really important to be able to communicate to that that to someone in an interview so as you're working on projects especially if you're working with other people in their code if you can write down examples or try to remember times when you ran into a problem and how you communicated to overcome those problems anything that shows that you like to collaborate with people and a desire to keep learning and growing so you guys already doing great you're coming to meetups like this and meeting people and networking and so yeah being able to talk about how you're active in the community those are really good ways to show a lot of these soft skills so how do you learn the skills that you need education obviously is one of the easiest ways most people i've ever worked with have been selftaught as developers so it's totally fine if you're teaching yourself or don't really have a degree in it as long as you can demonstrate that you have the experience and the skills that you need for a job so there's formal training i don't have any experience firsthand with university programs but from what i have heard it can be hard for them to stay up to date since technology changes so rapidly tech and vocational school i went to francis tuttle's web design and development program for two years fulltime i started as web development i did that for a year and then i did web design for a year after that and i can't recommend that more highly if you have the time to put into it i mean there are online programs and there are in person programs and fulltime it's like a 40hour week job and i know not everyone can do that but i think that the amount of experience and stuff you learn in a program like that is fantastic and it's very inexpensive compared to attending something like a university and then you meet other people who are in the program so it's a great way to network i got my first three clients when i was doing freelance work through the instructor there because people would come and contact the school they can't afford to pay an agency but they're looking for a student and they still want to pay you but and it's not going to be like a whole lot but you get the experience and then still making money more money than you would like a parttime job or something like that so that's good online education there's a lot of free places that you can go learn youtube has all kinds of tutorials of varying quality code academy learn by doing i think that's a great way to get in and really learn code obviously the more you do the better you get at it khan academy is good then there are paid subscriptions video tutorials i'm a little bit biased here because i worked for pluralsight and i'm still doing training here and there for them on the side so i think that's good but i also don't really learn well through video training even though i create it which is kind of ironic but like you know there's so many different types of education that can suit your learning style that and you know for all kinds of cost levels such a great field that pretty much anyone can find a way if as long as they have the drive and the desire to um to learn the skills and then obviously through the community attending meetups watching talks going to conferences anything you can do to kind of see what other people are talking about it's a great way to identify what types of things that you need to or want to learn more about so how do you get the experience which is one of the hardest things because everyone wants to see it seems like three to five years of experience when they put out a job posting and in junior developers what we look for is rather than three to five years of experience i mean that's completely unrealistic to ask someone before they even have their first position so i think if you can get any kind of real world experience that's what we look for having a couple examples of live websites like when i got my first job i think i had three live websites up and i got those through the school like i talked about through the community meeting people if you don't find anything that way you could always ask friends and family i mean it seems like everyone has an idea for a website or an app so just volunteering even if you have to to get that experience ask them to pay for like the hosting and the domain and then you have those real examples to show for a portfolio so showing those work examples you could do through a portfolio one great way is to have a personal website and then you could talk about how you designed and built your own website as well so they have another example of work linkedin has spots where you can upload examples of your work there and then you could link to live examples if you don't have time to build a personal website and then also live code samples are a great way to show your actual code so hosting code in a repository like github or whatever if you are more into like interaction design or frontend design then codepen is a great way to show your work and then it's really important in addition to just having code samples to be able to talk about the process and how you got to the end product when we conduct interviews that's something that really stands out is that not that they can just show the work but they can really talk about how they got to the end product what they did to um to plan to research to come up with the idea if that was a part of it what kind of development planning did you do what kind of tools did you use why did you use those tools those types of things just being able to talk about those can show a lot about your work and you as a person so actually finding a job most people i know have found jobs through personal connections which can be kind of intimidating when you're getting started in a new field maybe you don't have a lot of personal connections but coming to stuff like this going to user groups meeting people is a really really great way just to find fine connections even through previous jobs you may have had you never know even if you started in a different field or different career maybe there's a job opening on a web team somewhere and you know somewhere in a different department they can often introduce you to someone who can help you kind of get a foot in the door and then there's always recruiters and there's a lot of mixed opinions on recruiters but there are good ones that exist i've worked with some really great ones just kind of watch out for some red flags like if they don't listen to you if they're often sending you jobs that have nothing to do with what your focus is like i get a lot of jobs for oracle database development which is not at all what i do is frontend developer i think they just see oracle in my profile and then to see me send it to me anyway based on the keywords or dot net jobs i don't i don't know.net at all so pay attention to the ones that do try to send you jobs that match what you're looking for and then also be firm with what you want one time i worked with a recruiter and he told me to straight off he was like we're not going to get the salary you're asking for and i was like well can we just submit it and i'll interview and if it's not a fit it's not a fit and tried to argue me out of it and i was like just do it anyway if you don't want to work with me that's fine i'll keep on looking somewhere else and we went in there and then i got the job offer i wanted to so they don't always they aren't always exact experts on what the requirements and possibilities of a position are because it wasn't like it was an unreasonable request it was like perfectly within the market value for that position they just yeah ask questions and make sure that you're getting what you deserve out of it and they're not trying to take too much of a cut out of what you deserve for your skills and another good thing about recruiters is it's really great for interview practice so if interviews make you really nervous even if something might not be an ideal job for you obviously you don't want to waste someone's time but if there are ones that you might be interested in getting in there and just getting the experience talking to people in interviews see how different companies conduct interviews can be really great so if you do find a perfect job that comes along if you have that experience and you can be comfortable and confident in an interview then that'll go a long way and job postings all over the place obviously there's a big places like linkedin glassdoor indeed that make it really easy to fill out a application and put your resume up on the internet i actually found my first job in a newspaper posting in the oklahoman so don't you know you can find a job anywhere even in places that you might not expect and job descriptions when you're looking for postings often they're written by someone in hr or someone who doesn't have any experience with the team or the daytoday responsibilities of a job so you might find all kinds of things that have nothing to do with what the actual position is so if you can get on the phone and talk to someone or someone on the team oftentimes something that may not initially seem like you have the skills for would be a good fit for you could often be a really good job that was just kind of botched by someone trying to do their best to write a description of a job that they that they don't understand in interviews as i mentioned um it's really good to get real practice just get out there and see what it's like also when i was first interviewing i would research typical interview questions for a position and then ask my friends and family to walk me through a mock interview which sounds silly but it made me feel a lot better about whether someone was going to try to trip me up with something that i thought through a lot of common questions before and kind of had a starting place that i could talk about and adjust to any additional questions they had or the environment or the type of company and be prepared to talk about your work go through your past examples think about the type of project anyone you worked with the type of tools be able to talk about your process and explain that when you're in an actual interview make sure you ask the interviewers lots of questions especially try to find out things like what's the actual job like it can be very hard to identify that based on the job posting or even based on like initial interactions with people a lot of times i'll get in a job and it's completely different from the impression i was given from the initial interview so ask about a typical project what the deadlines are if you can walk around the office and get a feel for the team or the office environment especially if you're there later in the day you can get a feel for maybe whether there's a good worklife balance or maybe people are overworked based on how they interact with you how they look i did one interview that i turned down because they i got there at 2 p.m and i was interviewing until 7 00 pm including an impromptu dinner so i had a good idea that maybe they weren't going to be super respectful of worklife balance which is really important to me so being able to figure that out ahead of time is great and also company culture are there people do they seem happy are they talking or is everyone at their desk kind of silent um do they look miserable all types of things can give you some some cues as to what the environment is like interviews also also have a couple typical stages usually or at least where i've been a part of interviews there's a either a phone interview or an inperson interview it's basically a screening to kind of see does this person have the basic skills they say they have is this someone we could see being a good fit for the position and then follow that with a more detailed technical interview so asking specific technical questions about about projects about technologies theory things like that and then if there is a final interview or maybe this is combined with prior interviews questions about are they a culture fit would they be able to work with the team well do they are they able to collaborate collaborate collaborate is their communication good kind of getting those seeing if they have those skills because at the end of the day if someone has the technical skills if you're not going to be able to work with them for various reasons then they might not be a good fit for the job and then after interviewing kind of deciding whether a job is a good fit for you is really important sometimes you can be eager to accept a job just because it's exciting to have a job offer but they obviously jobs can be bad so make sure you research the company and the team um get try to get in a good idea of the company's values the team values what type of team they are also even though a team might be great they might not be a good fit for how you work as an individual i worked in an open office environment and my team was fantastic but i just found it really hard to focus because there are 150 people walking around the office every day and i've i'm like a squirrel person so i just accidentally like even though i don't want to just like watch people as they're walking across the floor because i just get distracted so for me having a little bit more of a quiet office is a lot better for my productivity watch out and see if they have high turnover obviously there's probably a reason that people are leaving if they're leaving ask them questions about worklife balance if that's important to you some companies don't really respect that especially watch out if they want to give you a company phone or something i mean everyone has a laptop these days but used to that could be kind of a sign that they want you to be able to work at any time brand new positions can be kind of hard often if it's your first or especially if it's your first job in a field because when there's a brand new position a lot of the times they don't have a concrete idea of what your job responsibilities are going to be and so that can be extra stressful in a first job trying to figure out what this job should be and also trying to get your feet off the ground and get used to a new career field so yeah a necessary stress there sometimes but it could also be a great opportunity if you are willing to deal with that stress you get to really have a lot of role in shaping a position and the workflow and kind of the processes for a company which can be really cool and then outdated technology if there are several years behind that can be really frustrating if they're not keeping up to date because then you as a person you have to learn older technology and then that can kind of hurt your marketability or your ability to find and grow into new positions because you're not able to kind of learn and stay up to date on the job as much as you would be if someone was using newer technologies and then a work environment i kind of touched on already open offices at least for me some people love them because they can get up and talk and collaborate if they're on a team where they have to have a lot of interaction and discussions that can be really good but i get really distracted as mentioned working from home in my current job i work from home probably three to four days a week and go in for like three four half days and then the rest go home for some people it you can get kind of cagey get cabin fever if you're home all the time but i like not having a commute and if i want to wear my pajamas i try not to but i can if i just feel like being comfortable for the day and then yeah getting a feel for the office culture like i've had some jobs where i'm still friends with people i worked with six years ago we have our own slack group and we're great friends and it's awesome we do game night so we have a d d group and a book club and that's so much fun and then i've worked with other office cultures where i only know a couple people and people come and go a lot so you don't really get to know anyone that well which is fine just kind of deciding what you need to get out of an office culture and making sure that your needs are met in that way and that's all i have so does anyone have any questions i think i saw yours first maybe um that is a great question i think that comes down to code samples so oh sorry um so the question was when you're using a online learning platform like codeacademy how can you demonstrate the proficiency and the skills that you learn from a coding platform like that and i know some of them i'm not sure i can't remember i haven't used codecademy in several years but some of them do provide completion certificates so that's something that you could list on your resume if you're working on a project if i remember correctly codeacademy has a lot of little mini projects that you could do to build up your skills you can put that on github and you obviously want to label your sources where you got it from we could say i completed these code academy exercises and talk about the skills you use and then they can come in and view your code from the project so i think that's a good way to do it for me oh yes sorry what does a typical eight hour work day look like for me um i am not a morning person and my boss knows that we talked about it before i accepted the job and so i start around 9 30 every day and i usually start by checking my email i work mostly with events marketing team and they have a lot of urgent last minute requests when they're updating events and things and so i make sure there there's nothing urgent that's coming in that i need to take care of immediately and if there is i will even i'll have coffee and go straight in there and start pushing updates if not then i'll go into the office and work until one or two pm because i like i get stir crazy if i'm home all the time but i am really productive in my home office because i spent some time trying to make it comfy and in the type of environment that makes me productive so i have like a standup desk and then a normal desk so if i need to stand up i can stand up if i want to sit down i can sit down so i finish out the afternoon there so my days typically from 9 30 to 5 30 every tuesday we have a coding team coding call and most of the team is in the philippines so they're on a 13hour time difference so we have our call from 6 pm to 7 pm on tuesdays and yeah i can't really think of anything else in terms of projects okay yeah for sure that's important mostly we work with a product called light cms it was net fusion element net fusion i think was the company that developed it which was acquired by netsuite which was acquired by oracle and so there are a lot of legacy websites built on light cms so being familiar with wordpress and other content management systems i had to learn how to use light cms and build websites in that which is kind of a challenge because there wasn't a lot of technical documentation for developers there's more for users those kind of dig in and try to figure it out so i help with a lot of conference websites so they're not huge websites they're probably like five to ten pages just doing the front end for that i help kind of set coding standards for the team in manila so recently i've been doing some recommendations for changes to projects how they could set up projects use for example gulp to automate tasks instead of doing things manually how to organize and optimize their css based on common engineering best practices and we're migrating a website over onto oracle's content management system while it's in the middle of a redesign which is a lot to do at once so i'm on a lot of calls with their marketing team kind of figuring out the content strategy and any revisions that are made to the design and building templates for the new system uh the question was what books do i recommend for learning web design or web development okay um this is going to be a shameless plug it's not out yet but i'm writing a textbook that's teaching people how to get into html and css and frontend development so hopefully that'll be good when it comes out be by bloomsbury interactive publishing their publisher in the uk i really like o'reilly books they can be kind of dry but they explain the technical side of things really well i like a lot of their javascript book javascript the good parts is one i remember really liking it javascript patterns is really good they're just general javascript book that's like this big it's huge but if you have a specific question about something like it's such an exhaustive resource to get an overview and kind of get a good explanation of specific things i'm trying to think i can't remember what it's called but there's this company that makes a lot of frontend development books and they have they're kind of silly they have a lot of cartoons um in them so it's kind of they try to make it humorous but it makes it a little bit more interesting to read a textbook i'll have to sit and think about what they're called but maybe if you google like funny web design book it might pop up yeah and then for design my favorite design books have been focused mainly on ux research and i just completely blanked on the company name but they run a really big ux consultancy group and a book apart a book apart has a lot of different good titles i don't know if you're familiar with them but they run an event apart and what's the website yeah jeffrey zeldman helped started that website and they a lot of wellknown people will write just kind of a oneoff book on their specialties they have a really good one on web typography which is you know there's it's deceptively simple but there's really a lot there with web typography inside it setting type for the web that was one of my favorite books for sure i can't remember his first name but it's by something brown yeah and then online it's kind of written in a textbook type format but hack design is a really great free course i don't know if you still can but used to be able to sign up through email and then they would send you a lesson a week in your inbox and they have a lot of different authors and it's more like hack design how to learn design from more of a technical background but yeah they have a ton of different design topics and then also coding for designers so if you're more of a visual learner anything that's aimed at teaching like a designer how to code is good because they try to make it yeah more more visual yes um all areas that's a great question okay so the question was um since web technologies are changing every year so rapidly where do i see html css javascript going in three to five years is that right or just in the future for i mean this is a hard question because um i don't i think it's kind of a maturity point to where we aren't going to see anything super crazy changing i think hopefully css for example will start getting better and better like adding native support for for variables and for more functional programming type logic that makes it really easy or easier to write and maintain css in a way that's maintainable and kind of follows best coding practices hopefully html will continue to go in more of a direction for um like they did with html5 or the tags they added in the last version like more native support for semantic elements i think that's important for accessibility is having a lot of those builtin a lot of ability to create more of a rich expressive web it works better with seo the more a algorithm or something like google can understand the context of your content based on the markup you're using the better and smarter it can be at using it in different contexts i okay so the question was um how much coding experience did i have before i got my first job or my first project first project okay um so my first project real world project was a nonprofit in edmond called shepherds of love they reached out to francis tuttle and wanted a student to help them with their website i had been in the program i think maybe eight months at that point and i had i knew a little bit about wordpress i had built a couple you know project websites in class i would say i had like a decent understanding of html and css didn't really know any javascript knew like a teeny tiny bit of php maybe and i thought i knew a lot more than i actually knew so i took on this project agreed to develop a wordpress site and i had to learn so much for my first project i was woefully unprepared but i think that's a really good great way to learn is to take on something real and then you find out exactly what you need to know to build that project so as long as you give yourself time to learn i mean i think it's hard to find unless you're doing the same thing over and over again every project your hat you have you're going to have to learn a new type of technology or a new skill or what's changed since the last time you used a technology so i would say as long as you have some of the basics down it's never too early to take on a first project and and to yeah just to tackle it because that's the best way to learn is [Laughter] yeah that's another great question so the question was um how do you know what's a the right salary to ask for how do you price yourself when you're looking for a job and i think one of the first things to do is do some research i think salary.com or something like that it's run by hr people and they post salary ranges for different positions so look at first of all the type of job titles that you might be looking at and then also what type of skills that you'd be using in that position because oftentimes job titles can vary so much between different companies sometimes it might be called something but it's a better match to another job and then they'll have a low end for that job in your area and a high end and kind of a median and i would shoot for somewhere in the median if it's your first job you don't want to undervalue yourself especially when you accept a new position because any future raises or bonuses a lot of the times are based on your base salary so if you're already getting underpaid from the start then you're hurting your growth potential for the future because your you know your incline will be much slower if your base starting salary is lower so obviously you don't want to ask too much and have them take you off the table so um asking like yeah salary such a sensitive people are sensitive thing for people to talk about it can be hard to ask people what they're making but if you know someone who's comfortable talking about what they make in the field then you can kind of get a baseline for what's realistic in the area and then also looking at the type of company so if you're trying to get a job at a startup generally they don't have as much revenue or ability to pay you so it might be on the lower end of that scale if it's at a bigger company generally times they'll want to be competitive so it would be towards the median or maybe even the high end of the scale so yeah and never agree to a salary before you have an interview a lot of people try to pin you down and give try to get you to give a range before you even get in the door and that can kind of shoot yourself in the foot especially if the responsibilities are going to be much higher than you initially thought when you started interviewing then they already have you pegged a range that may not be a good compensation for the type of work you would be doing so yeah research glassdoor is another really good place to research and see what people the actual company get paid at least if you can't find it for your specific position then looking at market pay for other positions in the company and what they're paying compared to that you can kind of get an idea of what they're willing to pay for and then always counter offer would be my other piece of advice a lot of people are scared especially in a first job to make a counter offer and just accept their first salary but you know people they expect you to bargain so the worst thing that can happen is that they tell you no and that's the easiest way to get a higher salary from the start is make a counteroffer maybe provide some justification for why you think you deserve that higher number you could say this is more in line with the market pay for my position and based on the skills that i have i think this is fair compensation for what you're looking for and then just see what they come back um the question was can i recommend any javascript libraries like node angular or react i would say anymore i'm not the best person to ask that because most of what i do isn't on the javascript side i if i have to do anything in recent projects it's mostly jquery so i think it highly depends on what you want to do if you want to get into web apps then certainly learning something like angular react would be great if you're looking more at websites jquery is super common so know your use case for it and then decide where to focus after that there's no reason to learn all of the frameworks just kind of decide what you need to to get the job you want um that's a great question um so the question was what do i like about or what got me interested in web design and development and what is it about the daytoday job that make me happy um so i actually got started in web development because i graduated from oklahoma state university in 2011 with a degree in political science with an idea that i was going to go to law school and i started studying for the lsat and then thinking about whether i actually wanted to be a lawyer and i disliked history classes and studying law but i don't think i actually wanted to be a lawyer so after i graduated it's like well crap what do i do now and my brother is a web developer and so he kept on telling me that my type of people are in web development and i'm still not quite sure what that means but he uh he encouraged me to like give it a shot he's like you like computers and you like design so maybe this could be like a really good interaction of the two and my sisterinlaw had also graduated with a degree in journalism and she was kind of looking for something to try until she figured out longterm what she wanted to do so she found francis tuttle's program and enrolled in it and i was like well why not why don't i enroll in francis tuttle too and at the very least i'll have my sisterinlaw there as a friend and so i joined the program with her and she actually ended up getting a job at an agency after six months and left the program and i stayed in a little bit longer and ended up finishing the program because i was scared to get a job but yeah i just i found that um yeah i was always interested in computer science but i thought it wouldn't be interesting enough for some reason but i think i just didn't have a real understanding of what you could do with it and what it actually was and so the more i got into web development and especially design i'm in all my jobs i've done a good amount of development combined with the design so i like that it has kind of that nerdy technical aspect of i love researching things so i'm always getting to research technologies and to learn i really enjoy coding so i get to code every day and there's not many jobs that i can think of that i can design something and use a creative side um and then combine that with something that's highly technical as well so it kind of plays into two things i really really enjoy i love the flexibility of being in web development i've met a lot of really great people so i think meeting fun people and then just really enjoying the daytoday work keep me happy in my job okay so the question was would i take a languagebased class like c plus um or java or do i just nix it and learn it myself um i think that depends a lot on the class itself because a lot of them are kind of out to date at universities um most people i've heard have taken a coding class in college they only have like one lab a week and so i think having so little handson learning combined with so much theory learning like if you want to learn the theory behind it then that could probably be a really great fit but if you want to get more of the handson learning how to code then i would maybe go a different route because yeah it's really hard to learn something if you're i mean unless you want to put in a lot of time outside of class then maybe that would be a good balance of learning the theory and being able to learn the actual coding side as well but from my personal opinion i think for formal education something like a vocational school for languages is one of the best ways to learn because it was um it was the theory side but it was also we coded for like six hours a day so um i think that's the best way to learn is to learn by doing sure that's a great question um when so recently i've been on noncoding or web development podcasts because that's kind of my way to relax and shut it off but when i do listen to web podcasts i like the next web jen meyer i think is who creates that and then i can't uh i can't remember what it's called but it has chris coyer and a developer from austin they had a podcast show that is really really funny and so if you want to listen to something i recommend that one very highly because it's entertaining um but yeah in terms of podcasts i mostly use those for more like entertainment type and less learning i do like newsletters for keeping up to date because anything that creates less work for me and being more efficient is great so someone else does all the hard work and tries to find things that people are talking about and send it directly to your email so you can kind of scan through and see what are people talking about kind of the trends between the the different newsletters and decide what do i need to spend my time learning to keep up to date see what's happening so i think that's a great way for sure okay so the question was are coding camps uh coding boot camps considered worthwhile and what was the second part of the question and are they competitive um are the skills competitive i can't speak a lot about boot camps but from what i've seen it does seem like a lot of them give a good variety of skills that are in demand for the workplace i mean at the end of the day they're businesses so if they can't get their participants jobs then they're not going to stay in business so from what i've seen it does seem like they stay pretty up to date and from what i've heard from other people a lot of what they get out of boot camps is they want to have a certain success rate of people placed in jobs so it can be a great opportunity to maybe have a job opportunity that you might not other have through the connections that you can make but like with anything there's going to be varying quality levels in what you get so but what i i would say though that i think most of what they teach you could teach yourself through online resources for probably much much cheaper but it depends on your learning style and some people aren't they struggle with selfdirection and kind of deciding what to focus on so if you want someone to kind of do all that for you in an easy to follow formula then then sure i think a bootcamp would be good to start learning okay last questions okay so the question is um how do you get a freelance job when it seems like html css and javascript aren't enough in your perspective to get a freelance job um i would say um yeah it depends on obviously where the um the source is coming from so um if you're contracting with a company who already has a development team they would probably be a lot stricter on what they want because they want someone who can um who can work in kind of their team environment and up to their team standards from an external basis a client this might sound horrible but someone who's less tech savvy is not going to really know whether or not you're up to date with javascript for example or how good your coding skills are so it's not to say that you should screw them over and do a bad job but there's more of an opportunity to take on something and learn while you're doing it so as long as you follow through on your promises and you're ending up with a good quality product then there's nothing wrong with um with learning while on the job as long as you're not misrepresenting anything to the client or trying to be dishonest so maybe try try freelance jobs in a different environment so rather than at a company or an agency look for individuals or smaller businesses or something like that okay
