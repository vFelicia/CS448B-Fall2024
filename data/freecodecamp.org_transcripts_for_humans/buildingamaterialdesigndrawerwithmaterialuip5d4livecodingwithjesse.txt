With timestamps:

00:06 - hey everybody welcome to live coding
00:08 - with jesse
00:09 - today we're going to work on our our
00:11 - side drawer
00:13 - and we're using material ui
00:15 - to give us some
00:17 - components
00:18 - to use material design
00:20 - for our react project
00:24 - so just to
00:28 - get everyone up to speed on the work
00:30 - that's been done since yesterday's
00:31 - stream
00:33 - we have some testing
00:35 - available now so if you check out the
00:37 - github
00:38 - repo
00:39 - the links in the description
00:41 - if you check out the repo you'll see uh
00:43 - harshit added some tests
00:46 - for the pages that we have so far
00:49 - and i think that was pull request 19. so
00:52 - you could see exactly what he changed if
00:53 - you go to the pull request
00:55 - and
00:57 - her also
00:58 - added in
01:00 - or i should say
01:01 - uh
01:03 - got these all styled properly and used i
01:07 - believe flexbox
01:09 - to align these instead of uh
01:12 - what did i use i think i was using uh
01:14 - just some fixed
01:16 - um
01:17 - alignment before which
01:20 - actually now i look at this that that
01:21 - would have been weird um i didn't
01:24 - realize that we weren't using a fixed
01:27 - header so are we using fixed here no
01:30 - we're not
01:32 - huh
01:34 - for some reason i thought we were oh
01:35 - well i was mistaken so now i realize why
01:38 - everyone was telling me not to use
01:40 - position fixed that would make no sense
01:42 - since we don't have a fixed
01:45 - at bar at the top
01:47 - so my mistake i thought we did have fix
01:49 - that's why i went with position fix
01:50 - instead of position absolute
01:53 - but it doesn't matter now
01:55 - so you can check out everything that
01:57 - changed if you know you look at the
01:59 - github repo check out the last two pull
02:01 - requests
02:03 - as of right now all the issues are
02:05 - closed so i'm gonna try to get some more
02:08 - issues up there
02:10 - and um
02:11 - that way if anybody wants to give their
02:13 - advice or discuss how we're going to do
02:15 - something
02:16 - then uh
02:18 - you know you can comment on the issues
02:20 - or if you'd like to you know to write
02:22 - some code or anything then you know go
02:25 - ahead and take one of those issues and
02:26 - try it out
02:28 - okay it looks like
02:32 - all right adam says the video is not
02:33 - working it's paused
02:36 - um
02:38 - is it is it like that for everybody is
02:41 - anybody else having trouble with the
02:43 - video let me know
02:44 - everything looks alright for my end
02:47 - but i could
02:50 - try to change something
02:53 - let's see
02:55 - what else world says youtube
02:57 - notifications aren't working
03:02 - occasionally youtube notifications don't
03:04 - work for the videos if i start them
03:07 - um
03:08 - if i schedule the stream within an hour
03:11 - of when i'm actually going to start the
03:12 - stream it seems like the notifications
03:15 - don't always work
03:16 - i did
03:19 - yeah you know what i didn't get a
03:20 - notification saying i was going to
03:22 - stream but i got one when i did start
03:24 - the stream uh so it's on my phone
03:28 - so
03:29 - that's the problem i was just caught up
03:31 - doing some work on some other projects
03:33 - and didn't get the stream scheduled so
03:35 - later
03:36 - i'll try to
03:38 - schedule it earlier tomorrow
03:42 - and um
03:44 - and then hopefully uh everybody will get
03:45 - the notifications
03:47 - let's see
03:53 - so i'm just going through live chat
03:55 - really quickly hey everybody i see a lot
03:57 - of people saying
03:58 - hi um
04:01 - you can find uh
04:03 - if you want to know when the best way to
04:06 - figure out when the stream goes live so
04:07 - a few people were talking about that
04:09 - number one you could subscribe to this
04:10 - channel free code camp youtube channel
04:13 - and if you have your notifications
04:15 - turned on uh then you should get a
04:17 - notification
04:19 - um
04:20 - both before i stream and then when i
04:23 - stream
04:24 - also if you follow me on twitter it's my
04:26 - uh
04:29 - a link to my twitter account i believe
04:31 - is in the description to this video
04:34 - if you follow me on twitter i um
04:37 - i always post on uh
04:40 - on twitter so i i always tweet about
04:42 - what i'm going to do
04:44 - that day during the stream and i i try
04:46 - to do that so when i schedule the stream
04:48 - immediately after i i tweet about it so
04:53 - those are the best two ways to find out
04:56 - let's see
05:00 - all right so
05:01 - i'm gonna get started and then i'll
05:03 - answer some questions in the live chat
05:05 - so i do see some questions there already
05:07 - so uh hang on we're gonna do 25 minutes
05:10 - of coding and then i'll take a five
05:11 - minute break i'll answer as many
05:13 - questions as i can
05:14 - we'll do another 25 minutes of coding
05:17 - and then after that i'll answer all the
05:19 - questions there in the live chat so
05:22 - if you can stick around i'll answer your
05:24 - question if for some reason you can't
05:26 - watch until i get to your question just
05:28 - check out the recording uh of the video
05:30 - later on
05:31 - uh and i'll answer your question uh you
05:34 - know no matter what whether or not
05:35 - you're still still around
05:38 - and the recording is usually available a
05:39 - few minutes after i end the stream
05:43 - all right so let me switch to
05:48 - this screen
05:50 - and you could see
05:55 - uh some of the additions here okay so
05:59 - i'm going to make a few adjustments you
06:00 - know with the size and everything but
06:03 - for now this is this is looking good uh
06:06 - we don't have the actual links in here
06:08 - yet uh you know these aren't on real
06:10 - links yet and then our search doesn't
06:13 - work
06:14 - but right now we're not pulling any any
06:16 - data so i'm not as worried about the
06:17 - search uh we are to make it so that when
06:19 - you click on this
06:21 - a little um
06:24 - text input opens up here
06:26 - and then you can close it so
06:29 - that's going to happen
06:32 - at some point uh but like i said i'm not
06:35 - that worried about getting the search
06:36 - going until we actually have data and
06:38 - can test it out
06:41 - so
06:43 - this is what we have so far for a side
06:45 - drawer
06:47 - oops let me set my timer here for 25
06:49 - minutes this we have so far for the the
06:51 - side drawer uh so
06:54 - so we're gonna do actually let me start
06:57 - my um
06:58 - let me start my server
07:01 - for ngrok
07:07 - and i'm going to paste the link in the
07:09 - live chat now and you all can check out
07:11 - the site
07:13 - as we're editing it
07:24 - all right
07:29 - there we go okay so
07:31 - um
07:32 - the ngrok server is working i see a lot
07:34 - of connections on there uh so check that
07:37 - out you can open that up in your own
07:39 - browser use devtools and um
07:42 - you know as soon as anything changes
07:44 - locally for me
07:46 - it'll refresh and change for you as well
07:49 - alright so here's what we're going to
07:50 - add
07:52 - the logo is good uh that's actually
07:56 - i like the size on that that's fine
07:59 - we're going to have in this position
08:02 - a search bar
08:08 - and
08:10 - that will end up being
08:13 - i do believe
08:15 - let's see what mobile so i need to think
08:16 - about what we're going to do for mobile
08:20 - yeah right now we have nothing going on
08:23 - in in terms of a change up here
08:26 - so i'm not going to worry about that for
08:27 - today's stream but what i'm thinking is
08:30 - we're going to have to cut some things
08:32 - out to make this look all right on
08:33 - mobile
08:35 - the this search button is going to be
08:37 - cut out
08:38 - but then we'll have one here on the
08:40 - sidebar
08:41 - so
08:42 - there will be a search available uh
08:45 - that'll save some space and decrease
08:47 - kind of the complexity of
08:49 - you know where do these things go
08:52 - uh or the logo where does this all go
08:54 - whenever we want to expand this
08:57 - you know so we don't have to worry about
08:58 - that at all
09:00 - so we're going to have that search input
09:01 - and then below it we're going to have
09:03 - menu items
09:04 - but they're all going to be nested so
09:06 - you'll be able to click it and then see
09:09 - uh sub menu items
09:11 - below
09:13 - and that'll be nice because it'll allow
09:15 - us to include a lot of links
09:17 - there'll be a visual hierarchy so
09:19 - immediately users will be able to tell
09:21 - like what section something belongs to
09:25 - and also it won't be overwhelming at
09:27 - first so potentially there could be a
09:30 - lot of links on this site so
09:32 - the current site at
09:34 - franciscan.edu the current site has a
09:36 - ton of links a lot of different menus
09:40 - so it can be overwhelming to some users
09:43 - if they're not sure where to find
09:44 - something
09:46 - this is going to be much simpler
09:49 - at first look
09:50 - but then as you click through
09:53 - the different levels you'll be able to
09:56 - see a lot but hopefully by
10:00 - kind of
10:01 - by nesting these things
10:03 - it should make it
10:05 - kind of a nicer um
10:09 - kind of a nicer navigation experience
10:13 - it looks like something's broken
10:16 - phillips says
10:17 - it's broken
10:20 - blake says it's broken uh what's
10:24 - what's broken
10:25 - the uh the ngrok server
10:29 - let me know if that's it if if the
10:31 - site's broken the ngrok server is broken
10:34 - let me know
10:36 - it is if it's working for some people
10:38 - let me know as well
10:47 - uh justin says wow what a beautiful
10:49 - school so you maybe you looked up the
10:51 - website so um good for you for sticking
10:54 - around through that long load time
10:57 - for the main website right now but yeah
11:00 - the school does look it looks very nice
11:02 - um
11:04 - we're kind of up on a hill
11:06 - uh and just kind of surrounded by trees
11:09 - and things and
11:12 - uh
11:13 - the grounds crew that does a really nice
11:15 - job of
11:16 - landscaping too so it's a nice little
11:19 - campus
11:23 - all right cool so let me check out let
11:25 - me try to fix engruck
11:28 - if i can get it fixed here in just a
11:30 - minute or two
11:31 - uh then
11:34 - i think it's worth it if i can't get it
11:36 - fixed within a minute or so then uh
11:39 - we're just
11:40 - probably just not going to use it
11:56 - hmm
12:06 - okay ngrok is at an older point in time
12:09 - maybe
12:10 - i mean
12:12 - okay
12:13 - that was it uh it looks like
12:16 - androx is at an older point so
12:19 - goodness
12:21 - uh yeah so this keeps happening
12:23 - occasionally
12:24 - any idea how we can fix this right now
12:27 - the only way i can get this to work
12:30 - is if i restart
12:33 - the uh the server and i can't just
12:35 - restart immediately i have to stop it
12:38 - wait for like 10 seconds
12:40 - and then restart it if i restart it too
12:42 - fast it doesn't work
12:44 - it's really weird so this is gonna
12:47 - be a significant
12:50 - uh drawback for us um if this keeps
12:53 - happening frequently all right so let me
12:56 - restart this now i've had it off for a
12:58 - little bit
13:03 - okay i think it should work
13:09 - no
13:11 - did it not work
13:13 - all right yes okay it worked this time
13:15 - so uh check it out see if it works now
13:18 - on on a new version of uh ngrob
13:23 - so generates next server rendered
13:26 - dynamic class names
13:32 - class name conflicts
13:35 - okay so um
13:37 - harsh is saying their class name
13:39 - conflicts
13:41 - um
13:43 - which
13:44 - okay let's see
13:47 - i'm checking out the
13:51 - error log now
13:54 - interesting
13:59 - all right well maybe i'll have to look
14:00 - that up and see if um if other people
14:03 - were having the same issue and if they
14:05 - found any um solution
14:08 - there's not really any obvious errors
14:10 - that i'm seeing on the console i just
14:11 - had it open on my other screen
14:13 - there are some errors but it it looked
14:15 - like they weren't
14:18 - exactly related
14:20 - oh actually now i just open it again
14:22 - there's a lot more errors
14:25 - wow
14:33 - okay well let's get started on on
14:36 - actually you're working on this sidebar
14:40 - and
14:41 - then maybe before sometime before
14:43 - tomorrow's stream i'll try to
14:48 - i'll try to figure out what's going on
14:50 - and get that working properly
14:56 - alright so
14:57 - i guess we could put in
15:02 - let's put in our our nested items first
15:05 - because i have this page open
15:07 - on uh
15:08 - the material ui documentation now
15:11 - so we'll go with that first and then
15:13 - we'll do that
15:15 - um
15:16 - that input i think the uh the search
15:19 - input will be slightly more complicated
15:21 - so
15:23 - let's let's get something
15:24 - done first and then tackle that
15:28 - okay so here's our nested list this is
15:30 - how it will end up working
15:32 - so you see when we click it
15:35 - we have a change in that icon
15:38 - our menu items appear slightly indented
15:42 - okay and then we click it again and it
15:44 - closes so
15:47 - that's exactly what we want
15:50 - all right so let's copy
15:54 - we need our expand more and expand less
15:58 - and we need
16:00 - our collapse
16:05 - all right let's grab
16:15 - let's grab all of this we're not going
16:18 - to need it all
16:21 - uh but we'll remove some of it but for
16:23 - now we're going to grab all of that copy
16:25 - it and then paste it over here into our
16:32 - our drawer component so we already have
16:34 - that drawer.js component in our
16:36 - components folder
16:39 - and
16:41 - okay we have our lists
16:43 - items here which is awesome so we can
16:46 - remove
16:48 - it yeah we can remove it from here
16:53 - and i'm not sure if we're going to use
16:55 - the sub header
16:57 - i'm going to leave it in for now
16:59 - we need the collapse we don't need these
17:01 - icons the inbox or the drafts icon
17:05 - or the send icon
17:08 - we need the expand icons and we need a
17:12 - divider yeah i think we will use the
17:14 - divider as well
17:20 - let's have those in here now
17:25 - we could add
17:30 - let's add this nested in
17:36 - all right and this is going to give us
17:39 - that indentation
17:41 - for our nested items
17:50 - actually
17:52 - just
18:05 - it's odd
18:11 - um i'm going to try this this isn't
18:13 - exactly how it had it in the um
18:18 - in the example
18:21 - let me see how we have this in that bar
18:23 - okay we are using the styles theme in
18:25 - app bar
18:26 - uh hardship why why are we doing it like
18:30 - this in atlar.js but then in draw we're
18:32 - not uh so we're not using theme can we
18:35 - use theme will it um make is
18:40 - will it make a difference either way
18:43 - i'm asking horsham because he's the one
18:45 - that implemented
18:46 - a lot of this
18:48 - let's see a place where we're actually
18:49 - trying to bring these styles in
19:02 - okay so classes list
19:06 - all right seems like it's working
19:10 - in the same way class name classes root
19:15 - okay it seems like we're using it in the
19:16 - same way
19:21 - so let's give it a shot see if it works
19:24 - uh now we
19:37 - let's need which one we want
19:39 - there we go
19:45 - all right so we want this list item and
19:47 - then the collapse
19:50 - and we need to nest that within a list
19:55 - so we already have a list and we have
19:58 - our a list item in with our
20:01 - our logo
20:03 - and then we have this this other list
20:04 - item here which we're going to
20:09 - overwrite for now
20:12 - okay great so we need to add a click
20:14 - handler
20:17 - and state
20:19 - let's make sure we have okay good yeah
20:25 - all right and we're gonna have to
20:27 - switch this
20:37 - yeah we're gonna have to change this
20:51 - all right so right now
20:53 - we need to change this to
20:57 - goodness all right we're gonna have to
20:58 - make some changes so
21:01 - uh let's see
21:04 - first off we need to make this class
21:07 - temporary drawer extends
21:16 - component
21:19 - sends react components and then
21:22 - we're not going to be able to do things
21:24 - like this
21:26 - um
21:32 - see how we have this we need state we
21:34 - need this click so let's grab these
21:37 - and
21:41 - okay so let's
21:43 - put these in first whoops let's let's
21:46 - get rid of these for now
21:48 - um
21:55 - nice let's see
21:57 - we need our
22:00 - yeah so we can put these here and then
22:02 - within our render function
22:10 - and we can have this
22:16 - and then we're going to need a return
22:34 - oops
22:42 - oh you know what we already had a return
22:44 - i didn't even see that
22:45 - okay so we should be all right if i
22:48 - remove this
22:49 - and
22:57 - let's take out this
22:59 - and
23:03 - we need one more
23:05 - yeah one more bracket
23:07 - and
23:10 - that should be it
23:12 - all right i'm not going to worry too
23:13 - much about formatting since we have the
23:15 - auto formatting set up
23:20 - actually i'm it's odd that i'm not
23:22 - getting a ton of warnings right now
23:25 - uh that's weird
23:26 - let's see
23:27 - okay
23:30 - let's see
23:32 - what kind of errors we're getting
23:34 - theme is not defined oops okay
23:38 - um
23:45 - why don't i even try to use theme
23:49 - oops here okay so let me pass in theme
24:01 - how do we do this
24:05 - there we go
24:09 - oops
24:26 - and
24:27 - super must be either no on a function
24:30 - not undefined where am i using that
24:35 - all right let me check
24:44 - this all right i'm checking the live
24:47 - chat harshit's got a lot of uh words
24:49 - with all caps in here so let me see
24:54 - let me read through some of this
25:00 - he's got a way another passes for us
25:12 - let's see
25:20 - okay
25:22 - uh
25:23 - all right so
25:26 - i'm trying to figure out what hershey
25:28 - was saying
25:29 - they're passed as
25:31 - these are passes props
25:48 - all right so harsha
25:50 - i'm not sure what i was doing at the
25:52 - time you were saying the things you did
25:54 - in the live chat
25:58 - so at this point
26:01 - what what are you uh
26:04 - suggesting then
26:06 - let's see temperatures
26:08 - i probably messed up something as i was
26:10 - copying pasting everything
26:14 - let's see
26:24 - this is nested
26:26 - what's my error message now
26:48 - okay that's for my my
26:56 - it looks like this is
26:57 - just
27:18 - two see
27:21 - in case you haven't watched this stream
27:23 - before
27:26 - part of the purpose of the stream is to
27:29 - show me at my normal daily job making
27:32 - mistakes and trying to work through them
27:35 - so i don't practice this ahead of time
27:39 - uh
27:41 - so that's why i'm i'm just kind of
27:42 - working through this right now
27:53 - all right well
27:56 - i want to make sure at least that i
27:58 - copied everything that i needed from
28:00 - here
28:18 - oh
28:19 - shoot
28:25 - all right
28:26 - let's see what that did
28:30 - i'm still getting the same error but
28:32 - that
28:33 - that should have been changed anyway
28:49 - oh you know what shoot i have
28:54 - this tape
28:58 - all right let's see
29:19 - what's this so r should submit a pr
29:21 - about this
29:39 - right so i have harsha's pr open uh on
29:41 - another screen here
29:44 - styles
29:58 - which is
30:50 - all right so hard
30:53 - let me check the live chat um
31:07 - oh my goodness this is the problem
31:15 - all right well that was one problem okay
31:18 - great yeah so
31:19 - sorry that i was looking through
31:21 - harsha's stuff and i'm like
31:22 - my stuff looks exactly the same uh but
31:25 - it was the uh the capital so uh
31:28 - diogo thank you so much for
31:31 - catching that
31:33 - um and harsha thanks for that as well
31:37 - and let's see
31:39 - um
31:40 - okay and also rcr saying you don't need
31:43 - the handle
31:44 - click um
31:47 - okay
31:55 - all right my timer so my
31:58 - 25 minute timer is up so let's do a
32:00 - short break right now five minutes i'm
32:02 - gonna go to the live chat answer any
32:03 - questions you all have then we'll come
32:05 - back sort out these errors and um
32:08 - and move on from there
32:14 - let's see
32:20 - so um random person says
32:23 - what is material ui
32:26 - from and what do you need to get it
32:29 - uh okay so material ui
32:33 - uh did i did not
32:36 - i don't know what happened with that
32:38 - anyway i thought i said it to the five
32:39 - minute one
32:40 - so material ui is a framework
32:46 - let's see if i can get
32:52 - so it's just a bunch of react components
32:54 - that are styled in the material design
32:57 - style so it's free to use
33:01 - uh you can you bring it into your
33:03 - project you know with with npms you can
33:05 - npm install bring it into your project
33:07 - and just follow their documentation to
33:10 - you know have kind of these pre-built
33:12 - components so it really helps
33:15 - save a lot of time
33:17 - it would take quite a while to build out
33:19 - all the components that they offer
33:22 - so
33:23 - it's really helpful
33:26 - and
33:28 - yeah if you have any more questions
33:30 - about it let me know but i check out the
33:32 - docs they're pretty straightforward
33:45 - uh philip says should i just merge
33:47 - master to my fork to have it all updated
33:51 - uh yeah if you have um
33:53 - if you have forked the project you'll
33:55 - definitely want to like periodically
33:58 - um
33:59 - update your fork
34:02 - with what's in um in the main repo
34:07 - that way if you do end up submitting a
34:09 - pull request then there'll be much less
34:12 - chance of having a bunch of merge
34:13 - conflicts
34:24 - anthony says uh ask do you know all
34:27 - programming language
34:29 - uh
34:30 - no i
34:31 - my
34:32 - i know um javascript
34:36 - and
34:38 - i know a little bit of php i've done
34:41 - like build some wordpress plugins and um
34:44 - been able like handle
34:45 - um
34:46 - form submissions file uploads
34:49 - um
34:50 - just like basic
34:52 - very basic security on handling file
34:54 - uploads
34:56 - in php
34:58 - um
34:59 - i've done a little bit with python not
35:02 - like really basic stuff
35:05 - i've done a tiny bit with java on uh
35:09 - kind of just messing around with making
35:11 - a game with java
35:12 - and i've also
35:15 - done a little bit with
35:16 - c sharp
35:18 - and
35:19 - some with c plus plus
35:23 - so that's the extent of my programming
35:26 - knowledge so the only programming
35:27 - language that i would even say that i'm
35:30 - i'm at all good with this javascript
35:34 - but i know enough about a lot of other
35:36 - ones that i could like kind of get
35:38 - through like reading a little bit of it
35:40 - and figuring out what's going on
35:52 - uh chris how many projects do you
35:54 - usually work on at once
35:56 - um i usually have two or three going at
35:59 - once
36:02 - uh almost always there's like one main
36:04 - one and some other ones that i'm just uh
36:06 - fixing things on currently
36:08 - um in any given week right now you know
36:12 - in terms of the last few weeks i've
36:13 - worked on this project
36:16 - uh we have two other react projects that
36:19 - i'm working on
36:22 - and
36:24 - i'm
36:26 - i just have some styling stuff to do on
36:28 - a salesforce based project
36:31 - and
36:33 - i'm helping out uh someone in the it
36:36 - department uh with some some styling and
36:39 - and just kind of like going through some
36:40 - old code and
36:42 - uh doing some basically some code
36:44 - cleanup stuff
36:46 - so is that like five
36:48 - five projects right now that i can think
36:50 - of that i'm working with
36:52 - uh but like i said this is
36:56 - actually this one isn't even my main one
36:58 - right now
37:00 - uh in terms of what i spend my time on
37:02 - outside of the stream
37:05 - so
37:06 - this is the only project that i'm
37:08 - streaming consistently right now the
37:10 - other projects are what i spend most of
37:12 - my time on outside the stream and that's
37:14 - mainly because uh they have
37:17 - those projects need to be done sooner
37:19 - and then also i think it's kind of nicer
37:21 - to do most of the work for this on the
37:23 - stream and then that way you all get to
37:25 - see a lot of it and there's not
37:27 - like really huge periods of
37:32 - of change like
37:33 - where i have to spend most of the stream
37:35 - just explaining all the things that
37:37 - changed
37:39 - so sometimes that happens and i got to
37:41 - do a lot of work outside the stream just
37:42 - to get projects done on time but for now
37:45 - when we're kind of in the beginning
37:46 - stages
37:47 - i'll try to work on other stuff and then
37:50 - save this this project for um for the
37:53 - stream
37:55 - all right so my five minute timer is up
37:58 - so let's get back to this code and uh
38:00 - get past some of these errors
38:02 - and then i'll come right back to where i
38:04 - left off in the live chat
38:12 - okay
38:25 - let's see
38:29 - all
38:30 - right okay so we got our 25 minute timer
38:33 - started
38:36 - let's check out
38:38 - it's not defined
38:40 - all right let's check this out
38:43 - and uh okay hardship i see that you uh
38:45 - you merged the um or you submitted the
38:48 - pull request
38:50 - um
38:51 - i'd kind of like to work through this uh
38:54 - like on the stream you know
38:56 - and um
38:58 - with everybody
38:59 - so
39:02 - i'm not going to merge it right now on
39:04 - the stream
39:09 - i may end up merging it later if we
39:11 - can't get this to work like right on the
39:12 - stream uh but for right now list item
39:15 - icon is not defined
39:18 - oops i forgot to take out these icons
39:22 - so of course that's not gonna work okay
39:24 - so if you remember i copied and pasted a
39:26 - lot of this and then i removed a lot of
39:29 - the imports
39:30 - well i removed the imports but i forgot
39:32 - to take them out here so it's looking
39:35 - for them and it can't find them
39:37 - so let's go to where
39:39 - all right this was here this is this
39:41 - starts what we brought in
39:43 - right so
39:44 - we have
39:46 - inbox icon let's remove that component
39:49 - and
39:52 - i think there's one more
39:55 - actually there might be two more so the
39:56 - star border we don't need that
39:59 - and
40:02 - there's the last one
40:12 - i don't see it maybe there wasn't
40:13 - another one i thought there was
40:16 - all right let's see if that
40:19 - did anything
40:21 - where am i bringing this in 55
40:25 - oh goodness
40:27 - i didn't even see that
40:29 - okay
40:32 - there we go
40:33 - all right let's see what we get now
40:36 - oops
40:38 - okay awesome so whoops
40:42 - yeah so i am messing something up so i
40:45 - see harshit was saying something about
40:47 - i added in some extra stuff that i
40:49 - didn't need to so
40:51 - uh i guess i copied over more than i
40:54 - needed to let me go back to that that
40:56 - list so
40:58 - um
41:00 - let's check out so he's talking about
41:01 - state
41:02 - uh so he's saying i copied over more
41:04 - than i needed to
41:06 - in terms of handling the state so
41:09 - let's check this out
41:19 - and
41:20 - stayed open true
41:22 - let's see what we're doing here with our
41:37 - hmm
41:59 - all right so uh harshit and your pr
42:03 - let's see did you put in
42:11 - oh okay so you did not bring in
42:14 - at least from what i'm seeing
42:33 - okay so this was just converting it
42:36 - uh from stateless functional uh to a
42:38 - class okay
42:41 - um
42:43 - okay great uh
42:46 - okay so harsha explained a bit okay
42:49 - that's what i was thinking as well so
42:51 - basically i'm sure you all saw this
42:53 - already uh even before i did but
42:57 - um right now we have
42:59 - open for state
43:01 - uh but we we have a conflict right so
43:04 - we're we're using
43:09 - we're using names we should not use be
43:11 - using the same name so i think the
43:13 - simplest thing is for me to change this
43:20 - open items
43:22 - and then
43:24 - we'll leave all the drawer stuff alone
43:27 - and then down here
43:29 - we'll change this
43:32 - to open
43:34 - items
43:36 - and let's see
43:39 - if that works for us
43:42 - oops
43:44 - okay so i mean that's working in terms
43:46 - of this but why are we getting
43:49 - did we have this set
43:52 - you know we must have this set to close
43:54 - on click
43:56 - a menu item click
44:00 - so let's
44:10 - let's check out the documentation for
44:13 - our
44:15 - i guess for our drawer
44:23 - and let's see
44:28 - we don't have the responsive drawer
44:31 - this is the one we have
44:32 - all right so let's see
44:37 - really we want the api actually so let's
44:40 - go down to this drawer api
44:43 - and see
44:46 - salvation
44:48 - [Music]
44:57 - maybe it's not on here
45:01 - you transition route on click leave it
45:04 - like that
45:12 - okay
45:14 - yeah i so hard i see what you're
45:16 - saying you know for this one i
45:18 - definitely wanted to to do that so i i
45:20 - want it to close automatically because
45:22 - we are going to transition route but for
45:24 - this
45:25 - i don't want it to happen here this is
45:28 - so we need to change it for for just
45:30 - these ones um
45:33 - because those won't actually be links
45:36 - let's see what we have here let's dine
45:47 - actually did we bring in
45:49 - list subheader
45:52 - i was thinking about changing these to
45:54 - list sub headers
45:57 - let's see what we look we have here
46:00 - here's our lists
46:09 - and i can't find our list
46:15 - there is this item was text
46:21 - oops you know we're in the api section
46:23 - anyway there we go
46:26 - um where are we using the list
46:33 - subheader
46:36 - oh okay
46:39 - yeah maybe i don't want that as a sub
46:40 - header
46:47 - all right uh diego says check the
46:49 - trigger on this menu item okay let's uh
46:58 - so right now we have
47:01 - this is our menu item
47:03 - it's this handle click
47:06 - this is our click handler
47:09 - here
47:10 - uh but what do we have
47:15 - are we passing this
47:17 - anything up
47:18 - toggle drawer yeah actually we are let's
47:20 - check out our layout component
47:26 - stage four
47:36 - okay so we are passing that down the the
47:39 - state is held here in the parent
47:41 - component so you see in the parent
47:43 - component we have state drawer
47:46 - false means it's closed true would be
47:48 - open and then we have that toggle drawer
47:50 - here so on drawer we're passing down
47:54 - whether or not it's open or closed right
47:56 - so
47:57 - by default we're passing down false
48:00 - and then we're also passing this toggle
48:02 - drawer down
48:03 - so the
48:05 - the events will come up here
48:08 - uh and call this
48:10 - function it will change the state and
48:11 - then that will get passed back down
48:14 - so let's go back to our drawer
48:17 - and
48:19 - on request close toggle drawer
48:25 - and then we have
48:26 - on
48:27 - on click toggle drawer okay
48:30 - so
48:32 - basically we have our on click for
48:34 - toggle drawer here
48:42 - but we don't want it there
48:49 - let me try
48:51 - okay so basically
48:54 - anywhere i click within that div
48:57 - yeah
48:59 - uh it'll close this drawer
49:02 - so
49:05 - i hate to do it like this but i'm not
49:06 - really sure
49:13 - i'm just not really sure what to do
49:22 - let's see if
49:24 - let's just try it see if we can put it
49:26 - on this
49:28 - this list item
49:34 - let's see if if this will work all right
49:37 - so we should we click here nothing
49:38 - happens we click here it closes great
49:41 - okay
49:42 - that's what we want let's see if i can
49:46 - all right so i can hit enter here
49:49 - and that that does that but then
49:54 - if i
49:55 - i
49:56 - can't see if i can tab
50:06 - trying to tab down
50:08 - to start
50:10 - all right so i can't tab down to that
50:11 - menu item all right so i don't really
50:13 - like that so
50:16 - this works but the only thing i'm
50:17 - worried about is
50:21 - i can't tab down to this item using the
50:24 - keyboard it like highlights
50:27 - both of these like the whole thing
50:30 - and
50:31 - i can't navigate like that so i would it
50:34 - would be nicer if i could have it work
50:36 - so that you could navigate by keyboard
50:38 - alone
50:41 - we can work on that
50:42 - but for now
50:45 - this is closer to what we want
50:47 - not perfect
50:53 - okay
50:55 - all right so let me just go over
50:57 - can i go over what just happened in case
50:59 - i kind of was
51:01 - going around too fast which
51:03 - uh sometimes when i get into it i think
51:05 - i'm almost like found a solution i do go
51:07 - too fast so
51:09 - uh basically what was happening is
51:11 - we had this containing div here right
51:13 - that contains everything inside this
51:16 - drawer
51:17 - right at least all the items so it
51:19 - wasn't stretching the full length but it
51:22 - basically from here
51:23 - to here
51:26 - everything in here was within that div
51:29 - so if you clicked on anything in this
51:30 - area
51:32 - it triggered a close
51:35 - so what we did was
51:38 - we just move that
51:41 - from this containing div
51:45 - down
51:47 - to this item
51:49 - this list item
51:52 - and now
51:54 - you can click on
51:56 - this
51:58 - or this and it does not automatically
52:00 - close the drawer
52:02 - but if we click on on this item
52:05 - right on start it does close the drawer
52:07 - now what we probably should do
52:10 - is move these now that i look at it
52:15 - so here's the list item
52:17 - and then we have a list underneath here
52:21 - and we'll keep adding items to this list
52:24 - so
52:27 - it'll be better if i think we end up
52:30 - putting these classes
52:33 - i'm sorry these toggle classes
52:37 - here
52:38 - on this list that way we won't have to
52:40 - put it on every single list item because
52:42 - we may end up having quite a few items
52:44 - here so this will be a lot nicer
52:47 - to do it like this so i'm going to move
52:49 - those
52:51 - let's test it out
52:54 - so i can still click here this works
52:56 - this works and then that works wonderful
52:59 - okay
53:00 - awesome
53:02 - um
53:04 - very cool all right so i have about 10
53:05 - minutes left
53:08 - let's see about adding in
53:11 - hmm
53:14 - yeah let's try to add in this search
53:19 - input
53:24 - let's see if there's any examples
53:27 - no i don't see any examples here of
53:29 - using a search input
53:32 - inside a list
53:38 - okay
53:39 - so let's go
53:41 - this is really small let me make this
53:43 - bigger for everybody
53:45 - whoa okay
53:47 - um
53:48 - let's go to our forms
53:51 - or text fields is the
53:54 - name of this section so we're going to
53:56 - go to our text field and
53:58 - let's grab one we're going to want one
54:00 - with an icon
54:03 - to see if they have that
54:18 - and put adornments
54:21 - okay this is probably what we want uh
54:23 - the input adornments
54:26 - so just gonna quickly scroll through
54:28 - make sure
54:29 - okay
54:30 - so this is probably what we want let's
54:32 - check it out
54:36 - and it looks like
54:44 - and put
54:46 - adornment okay great so we can just add
54:49 - in an
54:50 - icon here within this input adornment
54:53 - component
54:55 - and we specify the position which in
54:58 - this case end
54:59 - will work for us
55:03 - great okay so let's
55:10 - all right let's copy all of this
55:14 - for now we're gonna have to edit this of
55:16 - course whoops not all that
55:21 - all right let's copy that and bring this
55:23 - over and we're going to want this right
55:25 - after that
55:27 - um
55:30 - that logo
55:32 - so let's go with a list item
55:38 - and then
55:40 - all of this
55:42 - now let's bring over
55:45 - what we need to bring in here so form
55:50 - and input
55:53 - that looks good
56:04 - okay
56:06 - uh that looks good we also need to bring
56:08 - in an icon and i know we're already
56:10 - bringing in the icon here
56:13 - so where we have for the app bar right
56:22 - i thought we were bringing in an icon
56:24 - weren't we
56:28 - that search icon
56:51 - oh okay
56:53 - all right so it looks like
56:54 - um
56:56 - i guess horseshit brought in an um an
56:59 - svg icon into here okay
57:02 - that's cool let's see if we can pull in
57:04 - a search icon though
57:11 - yeah so we'll just grab
57:14 - let's grab this
57:16 - and use it
57:18 - here
57:20 - oops wrong component
57:23 - looks like we
57:24 - already yeah we're already bringing in
57:26 - some icons
57:28 - um
57:31 - let's try
57:34 - search
57:37 - search icon
57:38 - see if it works
57:40 - so down here oops where we brought in
57:45 - this icon button
57:55 - there we go visibility
57:59 - oh yeah we don't want that
58:03 - we want
58:06 - search icon
58:10 - and
58:11 - put that in here
58:13 - icon button we don't need any icon we
58:15 - don't need any uh click handler here
58:18 - on our icon button
58:21 - we may not even need this component at
58:23 - all may be able to take that out
58:26 - uh i'll double check that you know
58:28 - afterwards
58:29 - um
58:31 - should password
58:34 - yeah we don't want it
58:35 - we just want text
58:39 - so we can get rid of all of this and
58:41 - just put text
58:43 - as the type
58:44 - um
58:46 - we don't need
58:48 - this state let's try this search
58:52 - estate search
58:54 - and
58:56 - unchange this handle change
59:00 - um
59:04 - let's just do handle search change
59:09 - and
59:11 - okay so this is going to be a controlled
59:13 - component so if you're not really um
59:16 - if you've ever worked with um inputs and
59:19 - react one way to do inputs is as a
59:21 - controlled component so um let me walk
59:23 - you through that i know i've gone over
59:25 - this uh in previous streams but i i
59:27 - assume we have some people watching that
59:29 - hadn't watched previously when we've
59:31 - done components our control components
59:33 - so
59:35 - here's what we're going to do
59:36 - i actually don't really care
59:40 - for this id
59:43 - right
59:44 - now i'm just going to try to get rid of
59:47 - as much as
59:49 - possible to simplify things
59:51 - um
59:54 - uh you know what i do need the id
59:56 - just for the label
59:57 - um but i do want to change this to
60:00 - search and
60:01 - let's change this to search
60:04 - so remember uh just like you can't use
60:06 - class you have to use class name you
60:08 - also can't use four you need to use
60:10 - html4
60:12 - um so
60:15 - those are the two that come up most
60:16 - often for me there may be some other
60:19 - properties on uh you know html
60:22 - properties that need to change
60:25 - but for now
60:29 - i can't think of anything so okay so
60:31 - here's how a controlled component is
60:33 - going to work if you notice the value
60:35 - for this component is coming from the
60:38 - state
60:40 - okay and then when we change
60:43 - we're going to call this handle search
60:45 - change
60:46 - function so let's scroll up and write
60:47 - that function now
60:50 - so we already have this handle click
60:55 - and we i guess we could have just left
60:57 - that that the name of that function as
60:59 - handle change uh but handle search
61:02 - change
61:03 - i guess
61:04 - immediately tells you what what's going
61:06 - on
61:08 - handle search change and we're just
61:10 - going to do this set state
61:14 - and
61:16 - we're going to do
61:20 - um
61:22 - search
61:25 - and let's
61:27 - change the state
61:31 - search
61:33 - let's go
61:38 - and
61:39 - at first let's just make this an empty
61:41 - string
61:43 - and what we want to do
61:50 - is let's see what we have here
61:54 - french text this handle search
62:03 - let's see how we do this
62:07 - target
62:14 - how do we do this
62:21 - i feel like how we did this on the other
62:23 - one do we need
62:28 - i'm not going to guess let's just go
62:30 - here
62:32 - um where's our ad bar
62:47 - unchange
62:49 - text field
62:52 - handle search toggle
62:56 - there's that input
63:08 - text field search
63:11 - handle input change
63:14 - all right
63:15 - so i'm just i'm checking out
63:23 - change okay so we have this in our
63:26 - container component
63:33 - as inputs
63:45 - there we go
63:46 - there we go that's where you had to do
63:49 - okay um so let me bring
63:53 - the
63:54 - target value okay
63:58 - so that's a previous project
64:02 - so
64:04 - here we go
64:06 - e
64:13 - there we go
64:18 - so what's gonna happen here
64:22 - is
64:23 - when the component first
64:25 - renders
64:26 - it's going to get its value from state
64:28 - which currently is nothing but then when
64:30 - you type in the search input
64:34 - it will fire off that
64:36 - search
64:37 - function that handle search change
64:38 - function
64:40 - and then
64:42 - it'll grab
64:43 - the value that's that's just been
64:45 - inputted
64:47 - and it'll set that
64:49 - as this value here for search
64:52 - okay then
64:54 - the input
64:56 - will get its value from state right so
64:59 - it's kind of like this circle
65:01 - uh so instead of
65:03 - it's all it's kind of weird
65:05 - that
65:06 - the input's value is always coming from
65:09 - state it's not like you're directly
65:11 - changing the value uh there's this
65:13 - little roundabout thing going on the
65:15 - background in terms of from a user's
65:17 - perspective it works exactly the same as
65:19 - a normal input but behind the scenes
65:22 - it it happens
65:24 - like this so that's um what you call
65:26 - controlled component
65:28 - let me save that i don't think it's
65:30 - going to work because i think it's going
65:31 - to it's still looking for some styles
65:33 - that i have not brought in so let me
65:35 - bring in some of those styles
65:37 - uh let's do form control
65:40 - and
65:47 - do we have anything else without label
65:51 - now we are using a label so i think we
65:53 - just need form control
65:55 - so let's bring that in
66:01 - and
66:02 - let's see if this will work for us
66:05 - nope icon button is not defined oh we
66:09 - didn't bring in an icon button
66:12 - all right i'm not even sure if we're
66:13 - going to need icon button anyway
66:16 - but
66:16 - let's bring it in now just to make it
66:18 - work since our timer already went off
66:31 - all right great
66:32 - okay so here's our search so you can see
66:34 - we type in and we should have
66:41 - let's bring over
66:43 - yet
66:46 - so in react we can see our value
66:50 - so here's our value for that input and
66:53 - as we change what's in the input you can
66:55 - see it updates automatically sorry
66:57 - that's kind of small hopefully you see
66:59 - that but it's updating the state
67:02 - automatically
67:03 - okay which is that's pretty cool and
67:05 - then even if i went in here to the value
67:09 - and change the value is going to let me
67:11 - change it
67:12 - i don't think so
67:16 - all right it's not let me change that
67:17 - text usually i can just click right in
67:19 - there and change it but
67:21 - anyway
67:22 - if it would let me click in there and
67:24 - change it uh then i could update it
67:27 - would automatically update in here so
67:31 - uh not bad pretty cool i do need to
67:33 - change the label i never changed the
67:34 - label so let me do that now and then
67:37 - then we'll finish up and i'll go to the
67:40 - live chat and
67:42 - i'll make sure that i commit these
67:44 - changes right now so you all can see it
67:46 - see the code for them uh in the github
67:49 - repo
67:50 - so where we at
67:55 - up a little bit huh
67:57 - yeah okay search
68:06 - here we go so it says search awesome
68:08 - obviously we're going to change those
68:10 - styles a bit we don't want that you know
68:12 - lime green color in there
68:15 - and uh we may actually want to change
68:17 - the styles a bit more
68:19 - i have something else in mind
68:21 - but it's going to be one of those things
68:23 - that is not necessary but if we have
68:25 - time it'd be cool to put it in you know
68:26 - this looks okay it functions
68:30 - in terms of being able to input stuff it
68:33 - functions of course the search isn't
68:34 - working yet
68:37 - all right awesome let's commit this
68:41 - uh i'm going to bring over my terminal
68:43 - so you all can see
68:45 - how to commit um and you can see the
68:47 - tests running and everything in case you
68:49 - um you're not familiar with that so
68:51 - let's do a git status
68:53 - just to see right all our changes are on
68:55 - our drawer.js component which is good
68:57 - that's what we wanted to see
68:59 - uh if we saw some other components that
69:01 - had been changed then
69:03 - that would be weird we'd want to check
69:05 - it out and see what had changed since we
69:06 - haven't worked on any other components
69:08 - that may have
69:10 - mean that we made a mistake and
69:11 - accidentally edited something without
69:13 - realizing it
69:15 - but this looks good so we're going to do
69:16 - a git
69:18 - commit
69:20 - and we're going to use the am flag a for
69:22 - add so we're going to add
69:24 - um the
69:27 - the file okay add the changes and commit
69:29 - them at the same time and then the m
69:31 - flag means we're going to put in the
69:32 - commit message as well
69:34 - so let's say we
69:36 - add search
69:40 - and
69:41 - nested
69:43 - list to drawer
69:49 - okay now it's going to run through this
69:50 - parts the auto formatting whoa and it
69:53 - looks like this subway is defined but
69:55 - never lose former form help type
69:58 - okay
70:00 - all right not not bad this is kind of
70:02 - cool this came up so we have two errors
70:06 - that we've imported things
70:08 - and never used them
70:10 - so this is very helpful error message it
70:13 - tells us exactly what component and
70:15 - drawer.js
70:16 - and then it's also square so line 6 and
70:18 - line 14 we need to just delete them
70:21 - so let's scroll up here line 6
70:27 - and line
70:29 - 14 which is now 13
70:32 - we need to get rid of form helper text
70:41 - great now let's try this again
70:50 - all right so we made it through the
70:53 - linting and then it passed all these
70:55 - tests right so we have a test for layout
70:57 - index and at bar
70:59 - past all our tests
71:01 - and now it's ready to go so we go get
71:05 - push
71:06 - origin
71:09 - since we're just pushing you know right
71:10 - to the master branch this is a little
71:12 - shortcut normally we could say get push
71:14 - origin master but this works as well
71:17 - all right now all
71:19 - whatever we've done now
71:21 - is up on the github repo you can also
71:24 - notice that when we left this we had
71:27 - some weird indentation stuff going on we
71:30 - had semicolons at the end of some of
71:32 - these really wasn't consistent now there
71:35 - are no semicolons our indentation is all
71:38 - fixed
71:39 - even down here on our components look at
71:40 - this everything's everything's looking
71:42 - nice
71:44 - very consistent
71:46 - okay that's that that automatic
71:49 - formatting that we have so the same
71:51 - thing will happen for you if you
71:52 - download this repo you can format the
71:54 - code however you want but when it comes
71:56 - time to commit
71:58 - it'll fix it all up for you and then
72:00 - commit it so that everything committed
72:02 - to the repository will all have a
72:04 - uniform consistent look
72:06 - and it'll still allow you to code in
72:08 - whatever style
72:10 - that you're comfortable with
72:13 - and then it'll auto format for you i
72:16 - think that's really useful
72:20 - you can check out
72:23 - our package.json to see how that was set
72:25 - up
72:27 - and now
72:29 - let me scroll back up in the live chat
72:31 - to where we left off
72:34 - and
72:36 - at this point i'm going to answer all
72:37 - the questions so um if you don't want to
72:39 - stick around for the question answer
72:40 - session i totally understand thank you
72:42 - so much for watching i'll be back
72:43 - tomorrow around the same time 2 p.m
72:46 - eastern time
72:48 - but if you have an extra few minutes i'd
72:50 - love if you could stick around and help
72:52 - me answer some questions or ask some
72:54 - questions of your own i definitely
72:56 - benefit from your expertise
73:04 - all right so if you do have any
73:05 - questions please put them in the live
73:06 - chat now when i get to the bottom of the
73:08 - live chat i will end the stream
73:10 - uh so make sure you get your questions
73:13 - in before then
73:15 - if uh you don't want to ask your
73:17 - question in front of everybody on the
73:19 - live chat
73:20 - uh that's cool i totally understand you
73:23 - can always send me a direct message on
73:25 - twitter or message me on any other
73:26 - social media platforms email me whatever
73:29 - you want
73:30 - and i'd be happy to uh take a shot at
73:32 - answering the question
73:34 - um
73:35 - you know more privately
73:39 - let's see okay cool uh harshit says he's
73:43 - added notifications to his pomodoro
73:45 - timer
73:46 - so if i refresh it should prompt me
73:51 - to enable that
73:53 - i guess it didn't
73:55 - let's try to do a hard refresh
74:04 - that's uh
74:06 - notifications
74:08 - i do have it to allow notifications
74:10 - that's weird
74:12 - um
74:13 - you know what hardship maybe i've
74:15 - already allowed notifications but
74:16 - they're just showing up on my main
74:18 - screen
74:19 - that's probably the case and i i
74:22 - probably don't notice it because i'm
74:23 - usually looking at this screen that you
74:25 - all are looking at as well
74:28 - so i'll have to keep
74:30 - uh
74:31 - keep my eye out on my main screen to see
74:33 - if if that's the case
74:45 - see
75:02 - all right so i'm just scrolling down
75:04 - looking for some questions
75:06 - right now
75:14 - okay there's a little bit of a
75:15 - discussion about um binding this so not
75:19 - necessarily a question for me but i
75:21 - think it may be useful for some of you
75:23 - or just starting out and react so i'm
75:25 - just going to address this briefly so
75:27 - the discussion in the live chat is is
75:29 - about this binding this so if you'll
75:31 - notice
75:34 - uh we don't have this super and then
75:37 - bind this down here for these
75:39 - um functions instead we're using arrow
75:42 - functions so that's what we're doing you
75:43 - know handle click equals
75:45 - we have our our parentheses and then our
75:48 - arrow
75:49 - here
75:51 - and then inside here this
75:54 - works
75:55 - okay so it would have been the same as
75:57 - if we had bound
75:58 - this you know up here
76:01 - and um
76:03 - let's try to find an example i wish i
76:04 - had an example of us using that but i
76:06 - don't i don't think i have one
76:08 - that won't take me a few minutes to get
76:10 - to
76:11 - but basically this is all you need to do
76:15 - in a react component
76:19 - so you don't have to worry about binding
76:20 - it
76:22 - separately
76:24 - you can just do everything right here
76:28 - with an arrow function
76:30 - so really nice
76:32 - a lot shorter
76:34 - and um
76:35 - at least i i think it
76:38 - it makes things a lot easier um i always
76:40 - thought it was kind of cluttered up to
76:42 - have you know a bunch of stuff you're
76:44 - binding up at the top
77:12 - at 2 30 pm my time so a half hour after
77:15 - we started the stream rook
77:17 - got the uh youtube notification that
77:19 - free code camp is live so
77:22 - sorry about that to anyone who didn't
77:24 - get their notification on time that
77:26 - potentially was my fault because i
77:28 - started uh i scheduled the stream so
77:32 - late
77:33 - um
77:34 - that maybe that messed it up so i
77:36 - apologize if that was me i'll try to
77:39 - schedule the streams earlier
77:43 - okay
77:56 - okay harshit says that uh mature ui is
77:59 - actually really hard to test in unit
78:01 - testing uh so he's gonna submit a pr
78:05 - probably submitted pr with end to end
78:07 - testing
78:08 - that'll be really cool if we can show on
78:10 - the stream the comparison between how
78:12 - we're doing unit testing and end-to-end
78:14 - testing
78:15 - um i'm i'm excited to check out the
78:17 - difference and because i'm i'm very new
78:19 - to testing and i think it could be
78:21 - helpful uh to some of the
78:23 - you know some of the viewers here and
78:25 - then some of you in the live chat that
78:27 - maybe are more experienced with testing
78:29 - can
78:29 - you know help explain how it's working
78:46 - all right uh
78:47 - harshad says hi jesse i just started
78:51 - project five today and i went through
78:54 - project five day one as a suggestion
78:56 - please add the project five day four
78:59 - project five day six etc a bit
79:02 - at the start of the video
79:05 - it's easier to read and follow
79:09 - in the free code cam videos tab
79:24 - all right i'm not sure
79:34 - i'm not sure um what you mean by that
79:36 - harsh head so i'm sorry maybe i'm just
79:39 - i'm reading that wrong i'm not
79:40 - understanding so if you're still
79:41 - watching could you clarify a little bit
79:43 - for for me what what exactly you'd like
79:45 - me to add
79:47 - um at the start of the video
79:52 - um
79:53 - i'm also going to put these all in one
79:55 - playlist as well so i'm not sure if if
79:57 - you're kind of you'd like that if that's
79:59 - what you're you're referring to or not
80:02 - but i am going to add these i was just
80:03 - waiting to get a little bit more
80:06 - you know video so now we're up to what
80:07 - is this four videos for five i think
80:10 - it's four
80:11 - uh so now it might it might be enough
80:13 - that i could put it in its own uh
80:14 - playlist
80:16 - you go separately from our main live
80:19 - coding with jesse playlist
80:50 - all right so um
80:54 - it'll change
80:57 - i think we're looking at here right
81:00 - there we go okay so uh rook had a
81:01 - question about what's the d bounce and
81:03 - that handle change function
81:05 - so
81:06 - um
81:08 - so you're using uh heart should set this
81:10 - up with with d bounce basically um
81:13 - what that ensures
81:15 - is that
81:16 - this this function isn't uh firing like
81:19 - constantly right so there's gonna be a
81:22 - little um break
81:24 - uh because it doesn't really need to
81:25 - fire constantly right
81:28 - and harshit used lowdash for this
81:33 - so check out the lowdash docks on
81:35 - debounce
82:06 - okay
82:14 - um
82:17 - saying in uh
82:18 - install linter and
82:20 - lint
82:22 - parser es linted parser es len
82:25 - um
82:27 - you know what i have i don't understand
82:29 - why it wasn't working for me uh it was
82:31 - working earlier
82:33 - and
82:37 - i don't know if i was working on this
82:38 - project or if it was another project
82:42 - it's possible maybe that i installed it
82:44 - and needed to
82:46 - close like restart
82:49 - and it worked in the other window
82:51 - because i had opened that afterwards
82:54 - so uh maybe i'll i'll try to give this a
82:56 - restart at some point and see if it
82:58 - works for me then um but i i did have
83:02 - actually
83:03 - is that working
83:05 - okay now at least some of it's working
83:06 - now so these little red dots these are
83:08 - new this is a newer um
83:13 - this is the newer linting so
83:18 - i don't know i don't know why it's
83:20 - working sometimes and not other times
83:23 - um
83:33 - let's see
83:37 - uh any car says uh would be nice if you
83:39 - add issues tax at github so we can
83:42 - collaborate with something yes
83:43 - definitely i i plan on adding some more
83:45 - issues we did have some issues up but um
83:48 - they were all closed
83:50 - uh today so i need to add some more but
83:52 - i definitely plan on doing that so keep
83:54 - a look out in the in the issues
83:58 - especially as the project starts to get
83:59 - bigger i can put a lot more issues in
84:02 - there right now you know we're just
84:03 - starting out so it's harder for me to
84:05 - come up with
84:06 - uh really specific things
84:09 - but
84:10 - i'm that's why i'm kind of skipping over
84:12 - a lot of small style changes because
84:14 - those are great issues especially for
84:16 - beginners and i'd like in case anybody's
84:19 - interested in just kind of learning and
84:21 - getting started with github
84:23 - uh
84:25 - it would be cool to have some
84:27 - you know some issues that wouldn't be
84:29 - super challenging
84:30 - uh for those people and if nobody does
84:32 - them then that's that's cool too i can
84:34 - just finish those up later on
84:36 - um but i'll add some of those in
84:39 - if i have some time today before i go
84:41 - home i'll add them in otherwise maybe
84:42 - i'll try to get to them tomorrow morning
84:59 - uh harsh it says um
85:04 - jesse you should read the contributing
85:06 - file of the repo and maybe review it
85:08 - okay yeah oh um i did read it before
85:10 - when i merged in and it looked pretty
85:12 - good
85:13 - um i'll review it maybe more closely and
85:16 - check it out but i really i liked what
85:18 - you uh which you wrote so if you haven't
85:19 - checked it out already check out the
85:21 - contributing file in our github repo
85:24 - and let me know if you have any
85:26 - suggestions for it or feel free to open
85:28 - a pull request um if if you'd like to
85:31 - change some things but uh
85:33 - it's pretty solid uh harsh you did a
85:35 - good job on that so uh thank you
85:38 - um
85:39 - let's see
85:43 - oh
85:44 - i mean
85:50 - okay so harsha thinks that maybe um the
85:52 - comment earlier from harshad about uh
85:56 - what to add on the videos is the day tag
85:59 - uh which i'm adding on the later ones
86:02 - okay i didn't realize that i didn't add
86:04 - that on the first one so if i didn't
86:06 - i'll go back and check it out
86:10 - oh okay so harsh is saying i i didn't
86:13 - add the right
86:14 - linting i added standard and i need yes
86:18 - lens
86:19 - okay i have to check that out
86:22 - actually let me see where's my
86:34 - i'm
86:36 - preferences
86:38 - and
86:39 - packages
86:56 - yep
86:57 - that's right yeah i did do the uh
86:59 - standard linter so
87:05 - a stand in standard formatter
87:09 - okay so anyway
87:11 - so harsh you're saying i should go with
87:13 - with eslanton
87:23 - um alby says hi guys new to the free
87:26 - code game community as well as coding in
87:28 - general still wrapping my head around a
87:30 - lot of it came a bit late to this live
87:32 - stream
87:33 - um sorry for the new question but what
87:35 - would you use material ui for
87:38 - okay um so for material with the tierra
87:42 - ui basically it just provides us with a
87:44 - bunch of pre-made react components that
87:47 - are already styled in the material
87:49 - design
87:51 - you know style
87:52 - so
87:54 - it really helps us save a lot of time
87:56 - because we don't have to style them you
87:58 - know ourselves and instead we can just
88:01 - adjust them a little bit you know
88:03 - according to our needs
88:05 - so that's what we use material ui for
88:09 - also you know since material ui
88:11 - components go through testing a lot of
88:13 - people use them it's way more likely
88:15 - that their components would act you'll
88:17 - behave as they should in different
88:19 - environments different browser device
88:21 - combinations
88:23 - so
88:25 - that's why we would use you know
88:27 - something like material ui it's the same
88:29 - reason why you would use let's say
88:31 - bootstrap if you're familiar with that
88:34 - it just provides you with
88:37 - a lot of style a lot of design already
88:40 - there so you don't have to worry about
88:41 - it and it's it's pretty reliable
88:47 - so and also welcome to the free code
88:49 - camp community uh so
88:51 - you know if you find these streams to be
88:53 - helpful please you know come back and
88:55 - join us contribute uh in the live chat
88:58 - and um
88:59 - and ask as many questions as you like
89:01 - and don't worry if you think it's a noob
89:03 - question
89:04 - uh
89:05 - it's not that's not a problem
89:08 - um
89:10 - i welcome any questions so don't don't
89:12 - worry about that at all
89:19 - all right
89:21 - okay rook says code school is having a
89:23 - free weekend this weekend so awesome so
89:25 - if anybody's interested in taking any uh
89:27 - courses tutorials in code school check
89:30 - it out this weekend
89:40 - oh okay cool so uh harsh it's explaining
89:43 - what i need to use an atom so if anybody
89:45 - else would like to do this as well um
89:48 - you know maybe
89:51 - i'm going to read out kind of what harsh
89:52 - it's saying so basically
89:55 - we're using eslint in the project with
89:57 - standard js rules so what we need to do
90:01 - in our editor and in this case i'm using
90:04 - atom is use eslint
90:07 - with what i assume with standard js
90:09 - rules and that'll give us the same
90:11 - so
90:13 - what we should use is the linter es lint
90:17 - package
90:20 - so
90:21 - we can
90:22 - check it out here
90:26 - so we'll enter yes sorry for this being
90:28 - really small
90:30 - so check out linter eslint and then
90:33 - install that
90:38 - and
90:42 - okay harsh it's actually pasted in the
90:44 - command so you can install atom packages
90:46 - from the command line if you like uh as
90:49 - as long as you downloaded apm
90:52 - um
90:54 - you can install it so in this case we
90:56 - just use the the interface you know the
90:59 - graphical interface for that but either
91:01 - way will work
91:02 - so
91:04 - i'm at the bottom of the live chat so
91:05 - i'm not i'm not gonna wait and set this
91:08 - up um you know completely
91:12 - but you can see it it doesn't actually
91:14 - take that long so i'm assuming
91:18 - that we're gonna have to put something
91:19 - in here for the rules
91:21 - to change it up
91:23 - uh but
91:28 - that's what we will be using
91:32 - for future shows uh assuming i can get
91:35 - it to run
91:38 - okay
91:42 - okay so harsh it's saying i should see
91:44 - automatically
91:46 - cool um
91:48 - i should probably disable some of the
91:50 - other stuff i'm using then
91:52 - right do we
92:00 - no i shouldn't disable it okay all right
92:03 - let's try it out then
92:04 - uh let's try it on this side so
92:07 - just add a semicolon
92:18 - okay so i'm not getting anything yet so
92:20 - roxanne restart the editor
92:22 - okay
92:23 - all right so i'll try restarting the
92:25 - editor then later and um
92:29 - uh and then try that out so anyway thank
92:31 - you um
92:33 - thanks everybody uh for for watching and
92:37 - for all your uh
92:38 - great um
92:40 - contributions in the live chat thanks
92:42 - harshit for um for all the pull requests
92:45 - and everybody else who helped out on
92:47 - those issues kind of discussing what we
92:48 - needed to do i really appreciate all of
92:51 - your input
92:52 - and um
92:55 - i'll be back
92:57 - tomorrow
92:59 - um what's tomorrow wednesday yeah
93:01 - wednesday okay yeah i don't think i have
93:03 - anything going on meeting wise tomorrow
93:05 - so it should be around 2 p.m
93:07 - and uh
93:09 - yeah so until then
93:11 - uh have a great day
93:13 - and
93:16 - yeah see you tomorrow

Cleaned transcript:

hey everybody welcome to live coding with jesse today we're going to work on our our side drawer and we're using material ui to give us some components to use material design for our react project so just to get everyone up to speed on the work that's been done since yesterday's stream we have some testing available now so if you check out the github repo the links in the description if you check out the repo you'll see uh harshit added some tests for the pages that we have so far and i think that was pull request 19. so you could see exactly what he changed if you go to the pull request and her also added in or i should say uh got these all styled properly and used i believe flexbox to align these instead of uh what did i use i think i was using uh just some fixed um alignment before which actually now i look at this that that would have been weird um i didn't realize that we weren't using a fixed header so are we using fixed here no we're not huh for some reason i thought we were oh well i was mistaken so now i realize why everyone was telling me not to use position fixed that would make no sense since we don't have a fixed at bar at the top so my mistake i thought we did have fix that's why i went with position fix instead of position absolute but it doesn't matter now so you can check out everything that changed if you know you look at the github repo check out the last two pull requests as of right now all the issues are closed so i'm gonna try to get some more issues up there and um that way if anybody wants to give their advice or discuss how we're going to do something then uh you know you can comment on the issues or if you'd like to you know to write some code or anything then you know go ahead and take one of those issues and try it out okay it looks like all right adam says the video is not working it's paused um is it is it like that for everybody is anybody else having trouble with the video let me know everything looks alright for my end but i could try to change something let's see what else world says youtube notifications aren't working occasionally youtube notifications don't work for the videos if i start them um if i schedule the stream within an hour of when i'm actually going to start the stream it seems like the notifications don't always work i did yeah you know what i didn't get a notification saying i was going to stream but i got one when i did start the stream uh so it's on my phone so that's the problem i was just caught up doing some work on some other projects and didn't get the stream scheduled so later i'll try to schedule it earlier tomorrow and um and then hopefully uh everybody will get the notifications let's see so i'm just going through live chat really quickly hey everybody i see a lot of people saying hi um you can find uh if you want to know when the best way to figure out when the stream goes live so a few people were talking about that number one you could subscribe to this channel free code camp youtube channel and if you have your notifications turned on uh then you should get a notification um both before i stream and then when i stream also if you follow me on twitter it's my uh a link to my twitter account i believe is in the description to this video if you follow me on twitter i um i always post on uh on twitter so i i always tweet about what i'm going to do that day during the stream and i i try to do that so when i schedule the stream immediately after i i tweet about it so those are the best two ways to find out let's see all right so i'm gonna get started and then i'll answer some questions in the live chat so i do see some questions there already so uh hang on we're gonna do 25 minutes of coding and then i'll take a five minute break i'll answer as many questions as i can we'll do another 25 minutes of coding and then after that i'll answer all the questions there in the live chat so if you can stick around i'll answer your question if for some reason you can't watch until i get to your question just check out the recording uh of the video later on uh and i'll answer your question uh you know no matter what whether or not you're still still around and the recording is usually available a few minutes after i end the stream all right so let me switch to this screen and you could see uh some of the additions here okay so i'm going to make a few adjustments you know with the size and everything but for now this is this is looking good uh we don't have the actual links in here yet uh you know these aren't on real links yet and then our search doesn't work but right now we're not pulling any any data so i'm not as worried about the search uh we are to make it so that when you click on this a little um text input opens up here and then you can close it so that's going to happen at some point uh but like i said i'm not that worried about getting the search going until we actually have data and can test it out so this is what we have so far for a side drawer oops let me set my timer here for 25 minutes this we have so far for the the side drawer uh so so we're gonna do actually let me start my um let me start my server for ngrok and i'm going to paste the link in the live chat now and you all can check out the site as we're editing it all right there we go okay so um the ngrok server is working i see a lot of connections on there uh so check that out you can open that up in your own browser use devtools and um you know as soon as anything changes locally for me it'll refresh and change for you as well alright so here's what we're going to add the logo is good uh that's actually i like the size on that that's fine we're going to have in this position a search bar and that will end up being i do believe let's see what mobile so i need to think about what we're going to do for mobile yeah right now we have nothing going on in in terms of a change up here so i'm not going to worry about that for today's stream but what i'm thinking is we're going to have to cut some things out to make this look all right on mobile the this search button is going to be cut out but then we'll have one here on the sidebar so there will be a search available uh that'll save some space and decrease kind of the complexity of you know where do these things go uh or the logo where does this all go whenever we want to expand this you know so we don't have to worry about that at all so we're going to have that search input and then below it we're going to have menu items but they're all going to be nested so you'll be able to click it and then see uh sub menu items below and that'll be nice because it'll allow us to include a lot of links there'll be a visual hierarchy so immediately users will be able to tell like what section something belongs to and also it won't be overwhelming at first so potentially there could be a lot of links on this site so the current site at franciscan.edu the current site has a ton of links a lot of different menus so it can be overwhelming to some users if they're not sure where to find something this is going to be much simpler at first look but then as you click through the different levels you'll be able to see a lot but hopefully by kind of by nesting these things it should make it kind of a nicer um kind of a nicer navigation experience it looks like something's broken phillips says it's broken blake says it's broken uh what's what's broken the uh the ngrok server let me know if that's it if if the site's broken the ngrok server is broken let me know it is if it's working for some people let me know as well uh justin says wow what a beautiful school so you maybe you looked up the website so um good for you for sticking around through that long load time for the main website right now but yeah the school does look it looks very nice um we're kind of up on a hill uh and just kind of surrounded by trees and things and uh the grounds crew that does a really nice job of landscaping too so it's a nice little campus all right cool so let me check out let me try to fix engruck if i can get it fixed here in just a minute or two uh then i think it's worth it if i can't get it fixed within a minute or so then uh we're just probably just not going to use it hmm okay ngrok is at an older point in time maybe i mean okay that was it uh it looks like androx is at an older point so goodness uh yeah so this keeps happening occasionally any idea how we can fix this right now the only way i can get this to work is if i restart the uh the server and i can't just restart immediately i have to stop it wait for like 10 seconds and then restart it if i restart it too fast it doesn't work it's really weird so this is gonna be a significant uh drawback for us um if this keeps happening frequently all right so let me restart this now i've had it off for a little bit okay i think it should work no did it not work all right yes okay it worked this time so uh check it out see if it works now on on a new version of uh ngrob so generates next server rendered dynamic class names class name conflicts okay so um harsh is saying their class name conflicts um which okay let's see i'm checking out the error log now interesting all right well maybe i'll have to look that up and see if um if other people were having the same issue and if they found any um solution there's not really any obvious errors that i'm seeing on the console i just had it open on my other screen there are some errors but it it looked like they weren't exactly related oh actually now i just open it again there's a lot more errors wow okay well let's get started on on actually you're working on this sidebar and then maybe before sometime before tomorrow's stream i'll try to i'll try to figure out what's going on and get that working properly alright so i guess we could put in let's put in our our nested items first because i have this page open on uh the material ui documentation now so we'll go with that first and then we'll do that um that input i think the uh the search input will be slightly more complicated so let's let's get something done first and then tackle that okay so here's our nested list this is how it will end up working so you see when we click it we have a change in that icon our menu items appear slightly indented okay and then we click it again and it closes so that's exactly what we want all right so let's copy we need our expand more and expand less and we need our collapse all right let's grab let's grab all of this we're not going to need it all uh but we'll remove some of it but for now we're going to grab all of that copy it and then paste it over here into our our drawer component so we already have that drawer.js component in our components folder and okay we have our lists items here which is awesome so we can remove it yeah we can remove it from here and i'm not sure if we're going to use the sub header i'm going to leave it in for now we need the collapse we don't need these icons the inbox or the drafts icon or the send icon we need the expand icons and we need a divider yeah i think we will use the divider as well let's have those in here now we could add let's add this nested in all right and this is going to give us that indentation for our nested items actually just it's odd um i'm going to try this this isn't exactly how it had it in the um in the example let me see how we have this in that bar okay we are using the styles theme in app bar uh hardship why why are we doing it like this in atlar.js but then in draw we're not uh so we're not using theme can we use theme will it um make is will it make a difference either way i'm asking horsham because he's the one that implemented a lot of this let's see a place where we're actually trying to bring these styles in okay so classes list all right seems like it's working in the same way class name classes root okay it seems like we're using it in the same way so let's give it a shot see if it works uh now we let's need which one we want there we go all right so we want this list item and then the collapse and we need to nest that within a list so we already have a list and we have our a list item in with our our logo and then we have this this other list item here which we're going to overwrite for now okay great so we need to add a click handler and state let's make sure we have okay good yeah all right and we're gonna have to switch this yeah we're gonna have to change this all right so right now we need to change this to goodness all right we're gonna have to make some changes so uh let's see first off we need to make this class temporary drawer extends component sends react components and then we're not going to be able to do things like this um see how we have this we need state we need this click so let's grab these and okay so let's put these in first whoops let's let's get rid of these for now um nice let's see we need our yeah so we can put these here and then within our render function and we can have this and then we're going to need a return oops oh you know what we already had a return i didn't even see that okay so we should be all right if i remove this and let's take out this and we need one more yeah one more bracket and that should be it all right i'm not going to worry too much about formatting since we have the auto formatting set up actually i'm it's odd that i'm not getting a ton of warnings right now uh that's weird let's see okay let's see what kind of errors we're getting theme is not defined oops okay um why don't i even try to use theme oops here okay so let me pass in theme how do we do this there we go oops and super must be either no on a function not undefined where am i using that all right let me check this all right i'm checking the live chat harshit's got a lot of uh words with all caps in here so let me see let me read through some of this he's got a way another passes for us let's see okay uh all right so i'm trying to figure out what hershey was saying they're passed as these are passes props all right so harsha i'm not sure what i was doing at the time you were saying the things you did in the live chat so at this point what what are you uh suggesting then let's see temperatures i probably messed up something as i was copying pasting everything let's see this is nested what's my error message now okay that's for my my it looks like this is just two see in case you haven't watched this stream before part of the purpose of the stream is to show me at my normal daily job making mistakes and trying to work through them so i don't practice this ahead of time uh so that's why i'm i'm just kind of working through this right now all right well i want to make sure at least that i copied everything that i needed from here oh shoot all right let's see what that did i'm still getting the same error but that that should have been changed anyway oh you know what shoot i have this tape all right let's see what's this so r should submit a pr about this right so i have harsha's pr open uh on another screen here styles which is all right so hard let me check the live chat um oh my goodness this is the problem all right well that was one problem okay great yeah so sorry that i was looking through harsha's stuff and i'm like my stuff looks exactly the same uh but it was the uh the capital so uh diogo thank you so much for catching that um and harsha thanks for that as well and let's see um okay and also rcr saying you don't need the handle click um okay all right my timer so my 25 minute timer is up so let's do a short break right now five minutes i'm gonna go to the live chat answer any questions you all have then we'll come back sort out these errors and um and move on from there let's see so um random person says what is material ui from and what do you need to get it uh okay so material ui uh did i did not i don't know what happened with that anyway i thought i said it to the five minute one so material ui is a framework let's see if i can get so it's just a bunch of react components that are styled in the material design style so it's free to use uh you can you bring it into your project you know with with npms you can npm install bring it into your project and just follow their documentation to you know have kind of these prebuilt components so it really helps save a lot of time it would take quite a while to build out all the components that they offer so it's really helpful and yeah if you have any more questions about it let me know but i check out the docs they're pretty straightforward uh philip says should i just merge master to my fork to have it all updated uh yeah if you have um if you have forked the project you'll definitely want to like periodically um update your fork with what's in um in the main repo that way if you do end up submitting a pull request then there'll be much less chance of having a bunch of merge conflicts anthony says uh ask do you know all programming language uh no i my i know um javascript and i know a little bit of php i've done like build some wordpress plugins and um been able like handle um form submissions file uploads um just like basic very basic security on handling file uploads in php um i've done a little bit with python not like really basic stuff i've done a tiny bit with java on uh kind of just messing around with making a game with java and i've also done a little bit with c sharp and some with c plus plus so that's the extent of my programming knowledge so the only programming language that i would even say that i'm i'm at all good with this javascript but i know enough about a lot of other ones that i could like kind of get through like reading a little bit of it and figuring out what's going on uh chris how many projects do you usually work on at once um i usually have two or three going at once uh almost always there's like one main one and some other ones that i'm just uh fixing things on currently um in any given week right now you know in terms of the last few weeks i've worked on this project uh we have two other react projects that i'm working on and i'm i just have some styling stuff to do on a salesforce based project and i'm helping out uh someone in the it department uh with some some styling and and just kind of like going through some old code and uh doing some basically some code cleanup stuff so is that like five five projects right now that i can think of that i'm working with uh but like i said this is actually this one isn't even my main one right now uh in terms of what i spend my time on outside of the stream so this is the only project that i'm streaming consistently right now the other projects are what i spend most of my time on outside the stream and that's mainly because uh they have those projects need to be done sooner and then also i think it's kind of nicer to do most of the work for this on the stream and then that way you all get to see a lot of it and there's not like really huge periods of of change like where i have to spend most of the stream just explaining all the things that changed so sometimes that happens and i got to do a lot of work outside the stream just to get projects done on time but for now when we're kind of in the beginning stages i'll try to work on other stuff and then save this this project for um for the stream all right so my five minute timer is up so let's get back to this code and uh get past some of these errors and then i'll come right back to where i left off in the live chat okay let's see all right okay so we got our 25 minute timer started let's check out it's not defined all right let's check this out and uh okay hardship i see that you uh you merged the um or you submitted the pull request um i'd kind of like to work through this uh like on the stream you know and um with everybody so i'm not going to merge it right now on the stream i may end up merging it later if we can't get this to work like right on the stream uh but for right now list item icon is not defined oops i forgot to take out these icons so of course that's not gonna work okay so if you remember i copied and pasted a lot of this and then i removed a lot of the imports well i removed the imports but i forgot to take them out here so it's looking for them and it can't find them so let's go to where all right this was here this is this starts what we brought in right so we have inbox icon let's remove that component and i think there's one more actually there might be two more so the star border we don't need that and there's the last one i don't see it maybe there wasn't another one i thought there was all right let's see if that did anything where am i bringing this in 55 oh goodness i didn't even see that okay there we go all right let's see what we get now oops okay awesome so whoops yeah so i am messing something up so i see harshit was saying something about i added in some extra stuff that i didn't need to so uh i guess i copied over more than i needed to let me go back to that that list so um let's check out so he's talking about state uh so he's saying i copied over more than i needed to in terms of handling the state so let's check this out and stayed open true let's see what we're doing here with our hmm all right so uh harshit and your pr let's see did you put in oh okay so you did not bring in at least from what i'm seeing okay so this was just converting it uh from stateless functional uh to a class okay um okay great uh okay so harsha explained a bit okay that's what i was thinking as well so basically i'm sure you all saw this already uh even before i did but um right now we have open for state uh but we we have a conflict right so we're we're using we're using names we should not use be using the same name so i think the simplest thing is for me to change this open items and then we'll leave all the drawer stuff alone and then down here we'll change this to open items and let's see if that works for us oops okay so i mean that's working in terms of this but why are we getting did we have this set you know we must have this set to close on click a menu item click so let's let's check out the documentation for our i guess for our drawer and let's see we don't have the responsive drawer this is the one we have all right so let's see really we want the api actually so let's go down to this drawer api and see salvation maybe it's not on here you transition route on click leave it like that okay yeah i so hard i see what you're saying you know for this one i definitely wanted to to do that so i i want it to close automatically because we are going to transition route but for this i don't want it to happen here this is so we need to change it for for just these ones um because those won't actually be links let's see what we have here let's dine actually did we bring in list subheader i was thinking about changing these to list sub headers let's see what we look we have here here's our lists and i can't find our list there is this item was text oops you know we're in the api section anyway there we go um where are we using the list subheader oh okay yeah maybe i don't want that as a sub header all right uh diego says check the trigger on this menu item okay let's uh so right now we have this is our menu item it's this handle click this is our click handler here uh but what do we have are we passing this anything up toggle drawer yeah actually we are let's check out our layout component stage four okay so we are passing that down the the state is held here in the parent component so you see in the parent component we have state drawer false means it's closed true would be open and then we have that toggle drawer here so on drawer we're passing down whether or not it's open or closed right so by default we're passing down false and then we're also passing this toggle drawer down so the the events will come up here uh and call this function it will change the state and then that will get passed back down so let's go back to our drawer and on request close toggle drawer and then we have on on click toggle drawer okay so basically we have our on click for toggle drawer here but we don't want it there let me try okay so basically anywhere i click within that div yeah uh it'll close this drawer so i hate to do it like this but i'm not really sure i'm just not really sure what to do let's see if let's just try it see if we can put it on this this list item let's see if if this will work all right so we should we click here nothing happens we click here it closes great okay that's what we want let's see if i can all right so i can hit enter here and that that does that but then if i i can't see if i can tab trying to tab down to start all right so i can't tab down to that menu item all right so i don't really like that so this works but the only thing i'm worried about is i can't tab down to this item using the keyboard it like highlights both of these like the whole thing and i can't navigate like that so i would it would be nicer if i could have it work so that you could navigate by keyboard alone we can work on that but for now this is closer to what we want not perfect okay all right so let me just go over can i go over what just happened in case i kind of was going around too fast which uh sometimes when i get into it i think i'm almost like found a solution i do go too fast so uh basically what was happening is we had this containing div here right that contains everything inside this drawer right at least all the items so it wasn't stretching the full length but it basically from here to here everything in here was within that div so if you clicked on anything in this area it triggered a close so what we did was we just move that from this containing div down to this item this list item and now you can click on this or this and it does not automatically close the drawer but if we click on on this item right on start it does close the drawer now what we probably should do is move these now that i look at it so here's the list item and then we have a list underneath here and we'll keep adding items to this list so it'll be better if i think we end up putting these classes i'm sorry these toggle classes here on this list that way we won't have to put it on every single list item because we may end up having quite a few items here so this will be a lot nicer to do it like this so i'm going to move those let's test it out so i can still click here this works this works and then that works wonderful okay awesome um very cool all right so i have about 10 minutes left let's see about adding in hmm yeah let's try to add in this search input let's see if there's any examples no i don't see any examples here of using a search input inside a list okay so let's go this is really small let me make this bigger for everybody whoa okay um let's go to our forms or text fields is the name of this section so we're going to go to our text field and let's grab one we're going to want one with an icon to see if they have that and put adornments okay this is probably what we want uh the input adornments so just gonna quickly scroll through make sure okay so this is probably what we want let's check it out and it looks like and put adornment okay great so we can just add in an icon here within this input adornment component and we specify the position which in this case end will work for us great okay so let's all right let's copy all of this for now we're gonna have to edit this of course whoops not all that all right let's copy that and bring this over and we're going to want this right after that um that logo so let's go with a list item and then all of this now let's bring over what we need to bring in here so form and input that looks good okay uh that looks good we also need to bring in an icon and i know we're already bringing in the icon here so where we have for the app bar right i thought we were bringing in an icon weren't we that search icon oh okay all right so it looks like um i guess horseshit brought in an um an svg icon into here okay that's cool let's see if we can pull in a search icon though yeah so we'll just grab let's grab this and use it here oops wrong component looks like we already yeah we're already bringing in some icons um let's try search search icon see if it works so down here oops where we brought in this icon button there we go visibility oh yeah we don't want that we want search icon and put that in here icon button we don't need any icon we don't need any uh click handler here on our icon button we may not even need this component at all may be able to take that out uh i'll double check that you know afterwards um should password yeah we don't want it we just want text so we can get rid of all of this and just put text as the type um we don't need this state let's try this search estate search and unchange this handle change um let's just do handle search change and okay so this is going to be a controlled component so if you're not really um if you've ever worked with um inputs and react one way to do inputs is as a controlled component so um let me walk you through that i know i've gone over this uh in previous streams but i i assume we have some people watching that hadn't watched previously when we've done components our control components so here's what we're going to do i actually don't really care for this id right now i'm just going to try to get rid of as much as possible to simplify things um uh you know what i do need the id just for the label um but i do want to change this to search and let's change this to search so remember uh just like you can't use class you have to use class name you also can't use four you need to use html4 um so those are the two that come up most often for me there may be some other properties on uh you know html properties that need to change but for now i can't think of anything so okay so here's how a controlled component is going to work if you notice the value for this component is coming from the state okay and then when we change we're going to call this handle search change function so let's scroll up and write that function now so we already have this handle click and we i guess we could have just left that that the name of that function as handle change uh but handle search change i guess immediately tells you what what's going on handle search change and we're just going to do this set state and we're going to do um search and let's change the state search let's go and at first let's just make this an empty string and what we want to do is let's see what we have here french text this handle search let's see how we do this target how do we do this i feel like how we did this on the other one do we need i'm not going to guess let's just go here um where's our ad bar unchange text field handle search toggle there's that input text field search handle input change all right so i'm just i'm checking out change okay so we have this in our container component as inputs there we go there we go that's where you had to do okay um so let me bring the target value okay so that's a previous project so here we go e there we go so what's gonna happen here is when the component first renders it's going to get its value from state which currently is nothing but then when you type in the search input it will fire off that search function that handle search change function and then it'll grab the value that's that's just been inputted and it'll set that as this value here for search okay then the input will get its value from state right so it's kind of like this circle uh so instead of it's all it's kind of weird that the input's value is always coming from state it's not like you're directly changing the value uh there's this little roundabout thing going on the background in terms of from a user's perspective it works exactly the same as a normal input but behind the scenes it it happens like this so that's um what you call controlled component let me save that i don't think it's going to work because i think it's going to it's still looking for some styles that i have not brought in so let me bring in some of those styles uh let's do form control and do we have anything else without label now we are using a label so i think we just need form control so let's bring that in and let's see if this will work for us nope icon button is not defined oh we didn't bring in an icon button all right i'm not even sure if we're going to need icon button anyway but let's bring it in now just to make it work since our timer already went off all right great okay so here's our search so you can see we type in and we should have let's bring over yet so in react we can see our value so here's our value for that input and as we change what's in the input you can see it updates automatically sorry that's kind of small hopefully you see that but it's updating the state automatically okay which is that's pretty cool and then even if i went in here to the value and change the value is going to let me change it i don't think so all right it's not let me change that text usually i can just click right in there and change it but anyway if it would let me click in there and change it uh then i could update it would automatically update in here so uh not bad pretty cool i do need to change the label i never changed the label so let me do that now and then then we'll finish up and i'll go to the live chat and i'll make sure that i commit these changes right now so you all can see it see the code for them uh in the github repo so where we at up a little bit huh yeah okay search here we go so it says search awesome obviously we're going to change those styles a bit we don't want that you know lime green color in there and uh we may actually want to change the styles a bit more i have something else in mind but it's going to be one of those things that is not necessary but if we have time it'd be cool to put it in you know this looks okay it functions in terms of being able to input stuff it functions of course the search isn't working yet all right awesome let's commit this uh i'm going to bring over my terminal so you all can see how to commit um and you can see the tests running and everything in case you um you're not familiar with that so let's do a git status just to see right all our changes are on our drawer.js component which is good that's what we wanted to see uh if we saw some other components that had been changed then that would be weird we'd want to check it out and see what had changed since we haven't worked on any other components that may have mean that we made a mistake and accidentally edited something without realizing it but this looks good so we're going to do a git commit and we're going to use the am flag a for add so we're going to add um the the file okay add the changes and commit them at the same time and then the m flag means we're going to put in the commit message as well so let's say we add search and nested list to drawer okay now it's going to run through this parts the auto formatting whoa and it looks like this subway is defined but never lose former form help type okay all right not not bad this is kind of cool this came up so we have two errors that we've imported things and never used them so this is very helpful error message it tells us exactly what component and drawer.js and then it's also square so line 6 and line 14 we need to just delete them so let's scroll up here line 6 and line 14 which is now 13 we need to get rid of form helper text great now let's try this again all right so we made it through the linting and then it passed all these tests right so we have a test for layout index and at bar past all our tests and now it's ready to go so we go get push origin since we're just pushing you know right to the master branch this is a little shortcut normally we could say get push origin master but this works as well all right now all whatever we've done now is up on the github repo you can also notice that when we left this we had some weird indentation stuff going on we had semicolons at the end of some of these really wasn't consistent now there are no semicolons our indentation is all fixed even down here on our components look at this everything's everything's looking nice very consistent okay that's that that automatic formatting that we have so the same thing will happen for you if you download this repo you can format the code however you want but when it comes time to commit it'll fix it all up for you and then commit it so that everything committed to the repository will all have a uniform consistent look and it'll still allow you to code in whatever style that you're comfortable with and then it'll auto format for you i think that's really useful you can check out our package.json to see how that was set up and now let me scroll back up in the live chat to where we left off and at this point i'm going to answer all the questions so um if you don't want to stick around for the question answer session i totally understand thank you so much for watching i'll be back tomorrow around the same time 2 p.m eastern time but if you have an extra few minutes i'd love if you could stick around and help me answer some questions or ask some questions of your own i definitely benefit from your expertise all right so if you do have any questions please put them in the live chat now when i get to the bottom of the live chat i will end the stream uh so make sure you get your questions in before then if uh you don't want to ask your question in front of everybody on the live chat uh that's cool i totally understand you can always send me a direct message on twitter or message me on any other social media platforms email me whatever you want and i'd be happy to uh take a shot at answering the question um you know more privately let's see okay cool uh harshit says he's added notifications to his pomodoro timer so if i refresh it should prompt me to enable that i guess it didn't let's try to do a hard refresh that's uh notifications i do have it to allow notifications that's weird um you know what hardship maybe i've already allowed notifications but they're just showing up on my main screen that's probably the case and i i probably don't notice it because i'm usually looking at this screen that you all are looking at as well so i'll have to keep uh keep my eye out on my main screen to see if if that's the case see all right so i'm just scrolling down looking for some questions right now okay there's a little bit of a discussion about um binding this so not necessarily a question for me but i think it may be useful for some of you or just starting out and react so i'm just going to address this briefly so the discussion in the live chat is is about this binding this so if you'll notice uh we don't have this super and then bind this down here for these um functions instead we're using arrow functions so that's what we're doing you know handle click equals we have our our parentheses and then our arrow here and then inside here this works okay so it would have been the same as if we had bound this you know up here and um let's try to find an example i wish i had an example of us using that but i don't i don't think i have one that won't take me a few minutes to get to but basically this is all you need to do in a react component so you don't have to worry about binding it separately you can just do everything right here with an arrow function so really nice a lot shorter and um at least i i think it it makes things a lot easier um i always thought it was kind of cluttered up to have you know a bunch of stuff you're binding up at the top at 2 30 pm my time so a half hour after we started the stream rook got the uh youtube notification that free code camp is live so sorry about that to anyone who didn't get their notification on time that potentially was my fault because i started uh i scheduled the stream so late um that maybe that messed it up so i apologize if that was me i'll try to schedule the streams earlier okay okay harshit says that uh mature ui is actually really hard to test in unit testing uh so he's gonna submit a pr probably submitted pr with end to end testing that'll be really cool if we can show on the stream the comparison between how we're doing unit testing and endtoend testing um i'm i'm excited to check out the difference and because i'm i'm very new to testing and i think it could be helpful uh to some of the you know some of the viewers here and then some of you in the live chat that maybe are more experienced with testing can you know help explain how it's working all right uh harshad says hi jesse i just started project five today and i went through project five day one as a suggestion please add the project five day four project five day six etc a bit at the start of the video it's easier to read and follow in the free code cam videos tab all right i'm not sure i'm not sure um what you mean by that harsh head so i'm sorry maybe i'm just i'm reading that wrong i'm not understanding so if you're still watching could you clarify a little bit for for me what what exactly you'd like me to add um at the start of the video um i'm also going to put these all in one playlist as well so i'm not sure if if you're kind of you'd like that if that's what you're you're referring to or not but i am going to add these i was just waiting to get a little bit more you know video so now we're up to what is this four videos for five i think it's four uh so now it might it might be enough that i could put it in its own uh playlist you go separately from our main live coding with jesse playlist all right so um it'll change i think we're looking at here right there we go okay so uh rook had a question about what's the d bounce and that handle change function so um so you're using uh heart should set this up with with d bounce basically um what that ensures is that this this function isn't uh firing like constantly right so there's gonna be a little um break uh because it doesn't really need to fire constantly right and harshit used lowdash for this so check out the lowdash docks on debounce okay um saying in uh install linter and lint parser es linted parser es len um you know what i have i don't understand why it wasn't working for me uh it was working earlier and i don't know if i was working on this project or if it was another project it's possible maybe that i installed it and needed to close like restart and it worked in the other window because i had opened that afterwards so uh maybe i'll i'll try to give this a restart at some point and see if it works for me then um but i i did have actually is that working okay now at least some of it's working now so these little red dots these are new this is a newer um this is the newer linting so i don't know i don't know why it's working sometimes and not other times um let's see uh any car says uh would be nice if you add issues tax at github so we can collaborate with something yes definitely i i plan on adding some more issues we did have some issues up but um they were all closed uh today so i need to add some more but i definitely plan on doing that so keep a look out in the in the issues especially as the project starts to get bigger i can put a lot more issues in there right now you know we're just starting out so it's harder for me to come up with uh really specific things but i'm that's why i'm kind of skipping over a lot of small style changes because those are great issues especially for beginners and i'd like in case anybody's interested in just kind of learning and getting started with github uh it would be cool to have some you know some issues that wouldn't be super challenging uh for those people and if nobody does them then that's that's cool too i can just finish those up later on um but i'll add some of those in if i have some time today before i go home i'll add them in otherwise maybe i'll try to get to them tomorrow morning uh harsh it says um jesse you should read the contributing file of the repo and maybe review it okay yeah oh um i did read it before when i merged in and it looked pretty good um i'll review it maybe more closely and check it out but i really i liked what you uh which you wrote so if you haven't checked it out already check out the contributing file in our github repo and let me know if you have any suggestions for it or feel free to open a pull request um if if you'd like to change some things but uh it's pretty solid uh harsh you did a good job on that so uh thank you um let's see oh i mean okay so harsha thinks that maybe um the comment earlier from harshad about uh what to add on the videos is the day tag uh which i'm adding on the later ones okay i didn't realize that i didn't add that on the first one so if i didn't i'll go back and check it out oh okay so harsh is saying i i didn't add the right linting i added standard and i need yes lens okay i have to check that out actually let me see where's my i'm preferences and packages yep that's right yeah i did do the uh standard linter so a stand in standard formatter okay so anyway so harsh you're saying i should go with with eslanton um alby says hi guys new to the free code game community as well as coding in general still wrapping my head around a lot of it came a bit late to this live stream um sorry for the new question but what would you use material ui for okay um so for material with the tierra ui basically it just provides us with a bunch of premade react components that are already styled in the material design you know style so it really helps us save a lot of time because we don't have to style them you know ourselves and instead we can just adjust them a little bit you know according to our needs so that's what we use material ui for also you know since material ui components go through testing a lot of people use them it's way more likely that their components would act you'll behave as they should in different environments different browser device combinations so that's why we would use you know something like material ui it's the same reason why you would use let's say bootstrap if you're familiar with that it just provides you with a lot of style a lot of design already there so you don't have to worry about it and it's it's pretty reliable so and also welcome to the free code camp community uh so you know if you find these streams to be helpful please you know come back and join us contribute uh in the live chat and um and ask as many questions as you like and don't worry if you think it's a noob question uh it's not that's not a problem um i welcome any questions so don't don't worry about that at all all right okay rook says code school is having a free weekend this weekend so awesome so if anybody's interested in taking any uh courses tutorials in code school check it out this weekend oh okay cool so uh harsh it's explaining what i need to use an atom so if anybody else would like to do this as well um you know maybe i'm going to read out kind of what harsh it's saying so basically we're using eslint in the project with standard js rules so what we need to do in our editor and in this case i'm using atom is use eslint with what i assume with standard js rules and that'll give us the same so what we should use is the linter es lint package so we can check it out here so we'll enter yes sorry for this being really small so check out linter eslint and then install that and okay harsh it's actually pasted in the command so you can install atom packages from the command line if you like uh as as long as you downloaded apm um you can install it so in this case we just use the the interface you know the graphical interface for that but either way will work so i'm at the bottom of the live chat so i'm not i'm not gonna wait and set this up um you know completely but you can see it it doesn't actually take that long so i'm assuming that we're gonna have to put something in here for the rules to change it up uh but that's what we will be using for future shows uh assuming i can get it to run okay okay so harsh it's saying i should see automatically cool um i should probably disable some of the other stuff i'm using then right do we no i shouldn't disable it okay all right let's try it out then uh let's try it on this side so just add a semicolon okay so i'm not getting anything yet so roxanne restart the editor okay all right so i'll try restarting the editor then later and um uh and then try that out so anyway thank you um thanks everybody uh for for watching and for all your uh great um contributions in the live chat thanks harshit for um for all the pull requests and everybody else who helped out on those issues kind of discussing what we needed to do i really appreciate all of your input and um i'll be back tomorrow um what's tomorrow wednesday yeah wednesday okay yeah i don't think i have anything going on meeting wise tomorrow so it should be around 2 p.m and uh yeah so until then uh have a great day and yeah see you tomorrow
