With timestamps:

00:00 - null versus undefined these are both
00:02 - data types in javascript in javascript
00:05 - undefined means means a variable has
00:06 - been declared but has not yet been
00:08 - assigned a value such as
00:13 - as you can see when i run this in the
00:15 - console it shows that the variable test
00:17 - is undefined
00:18 - i have created the variable but i
00:20 - haven't set it equal to anything
00:22 - but if i down here if i say that test
00:26 - equals null
00:29 - and then i console.log it
00:35 - you'll see that it shows null in the
00:37 - console null is an assignment value it
00:41 - can be assigned to a variable as a
00:42 - representation of no value
00:44 - so while undefined is set automatically
00:47 - just by not assigning a value javascript
00:49 - never sets a value to null this must be
00:51 - done specifically in your program
00:53 - so let's test some things about null and
00:55 - undefined
00:58 - we can see the type of null is an object
01:01 - this is actually for legacy reasons that
01:03 - it doesn't show a type of null
01:05 - but if we
01:07 - check the type
01:10 - if we check the type of undefined
01:12 - it makes a little more sense you can see
01:14 - this at the very bottom type of
01:16 - undefined is undefined
01:18 - oops
01:20 - let's clear that
01:25 - if we try to check if null is
01:29 - equals equals equals undefined
01:35 - you can see false
01:37 - now this equals equals equals is the
01:40 - identity operator so it shows that the
01:42 - identities are different null is does
01:44 - not have the same identity as undefined
01:46 - but if we
01:48 - use the equality operator
01:54 - equals equals is the equality operator
01:57 - if i check that you can see the last one
01:59 - is true so javascript does consider null
02:02 - and undefined to be equal
02:09 - now if i check
02:12 - the identity operator to see if null is
02:14 - has the same identity as null as you'd
02:17 - expect
02:18 - yes it's true it shows true down here
02:20 - and if
02:21 - i check to see if null is equal to null
02:25 - you will see again
02:27 - if you just go to the bottom true
02:29 - let me clear that
02:33 - now if i say you know the exclamation
02:36 - point is means not so if i say not null
02:39 - this
02:40 - is going to equal true not null is true
02:43 - null is is false except if you
02:48 - console.log null
02:52 - it's just going to say null however if
02:55 - i'm going to just put two exclamation
02:56 - points in front of this and console.log
02:59 - and you look at the bottom
03:00 - false so that's why you'd want to use
03:02 - two exclamation points one exclamation
03:04 - points changes it to true and then two
03:05 - changes it to false
03:08 - another thing interesting that if you
03:10 - try to add one plus null
03:14 - and i run that
03:16 - that's gonna actually equal ones so in
03:18 - math null is basically zero
03:20 - however if we do one plus undefined
03:25 - it's a little different
03:28 - and that's going to equal nan or not a
03:30 - number so undefined you can't add
03:32 - anything to it because it's not a number
03:35 - well thanks for watching my name is beau
03:36 - carnes the code in this video and links
03:38 - to more resources on the topic are in
03:40 - the description don't forget to
03:41 - subscribe and remember use your code for
03:43 - good

Cleaned transcript:

null versus undefined these are both data types in javascript in javascript undefined means means a variable has been declared but has not yet been assigned a value such as as you can see when i run this in the console it shows that the variable test is undefined i have created the variable but i haven't set it equal to anything but if i down here if i say that test equals null and then i console.log it you'll see that it shows null in the console null is an assignment value it can be assigned to a variable as a representation of no value so while undefined is set automatically just by not assigning a value javascript never sets a value to null this must be done specifically in your program so let's test some things about null and undefined we can see the type of null is an object this is actually for legacy reasons that it doesn't show a type of null but if we check the type if we check the type of undefined it makes a little more sense you can see this at the very bottom type of undefined is undefined oops let's clear that if we try to check if null is equals equals equals undefined you can see false now this equals equals equals is the identity operator so it shows that the identities are different null is does not have the same identity as undefined but if we use the equality operator equals equals is the equality operator if i check that you can see the last one is true so javascript does consider null and undefined to be equal now if i check the identity operator to see if null is has the same identity as null as you'd expect yes it's true it shows true down here and if i check to see if null is equal to null you will see again if you just go to the bottom true let me clear that now if i say you know the exclamation point is means not so if i say not null this is going to equal true not null is true null is is false except if you console.log null it's just going to say null however if i'm going to just put two exclamation points in front of this and console.log and you look at the bottom false so that's why you'd want to use two exclamation points one exclamation points changes it to true and then two changes it to false another thing interesting that if you try to add one plus null and i run that that's gonna actually equal ones so in math null is basically zero however if we do one plus undefined it's a little different and that's going to equal nan or not a number so undefined you can't add anything to it because it's not a number well thanks for watching my name is beau carnes the code in this video and links to more resources on the topic are in the description don't forget to subscribe and remember use your code for good
