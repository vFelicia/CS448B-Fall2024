With timestamps:

00:05 - hey everybody welcome to live coding
00:07 - with jesse
00:08 - today we're going to continue on with
00:10 - what we were doing last week
00:12 - and that's adding routes and components
00:16 - to our react site
00:18 - and we're going to be creating some more
00:20 - graphql queries
00:23 - so a lot of the same stuff
00:28 - we'll have we'll have a lot of new
00:31 - content uh so i've been working on
00:33 - migrating some content over so i think i
00:35 - have maybe like four
00:37 - new custom post types and a couple of
00:39 - new taxonomies so
00:42 - um i'll try to
00:44 - do front end work on the stream
00:47 - and then do the data migration stuff on
00:50 - my own
00:52 - and that way we'll always have new
00:55 - new content to try to set up on the on
00:57 - the front-end side of things
01:00 - so i hope everyone had a good weekend
01:03 - and
01:04 - hey
01:05 - i see you on the live chat
01:09 - i um
01:11 - i was recently doing some reading about
01:13 - obs which is what i used to stream and
01:16 - i've changed the settings and i managed
01:18 - to get the cpu
01:19 - um
01:22 - usage
01:24 - down i think like by a third
01:28 - so let me know if the video quality
01:31 - seems okay i don't want to drop
01:33 - everything down too much i should still
01:35 - get 1080p
01:37 - and
01:38 - we shouldn't have any issues with
01:40 - stuttering uh and or dropping frames or
01:43 - anything
01:45 - uh so
01:47 - hopefully it all works out right
01:50 - uh but so far
01:52 - it looks like this is this would be the
01:54 - right setting
01:59 - all right so
02:01 - let me
02:03 - let me switch over to show my screen
02:09 - okay
02:10 - let's move this down a bit
02:12 - and increase the size here
02:19 - all right so just a refresher
02:23 - and also if you're new to the stream
02:25 - i break the stream up into 25 minute
02:29 - segments
02:30 - and i'll try to do some coding for 25
02:33 - minutes
02:33 - and then i will take a five minute break
02:36 - go to the live chat answer as many
02:38 - questions as i can in that five minute
02:40 - break
02:41 - and then we'll do some more code
02:44 - and then at the very end
02:46 - i answer all the questions in the live
02:47 - chat so the streams usually aren't
02:50 - longer than two hours
02:52 - sometimes they're
02:53 - only about an hour
02:56 - but if you uh if you do ask a question
02:58 - please be patient and i will get to it
03:00 - eventually if you can't stick around you
03:02 - can always check out the recording all
03:04 - the recordings of these streams are
03:06 - available on the free code camp youtube
03:08 - channel
03:11 - all right cool it looks like uh
03:15 - you all have noticed that the fans
03:17 - aren't running yeah it's really quiet in
03:19 - here now
03:21 - it's amazing it's like
03:24 - i never really noticed how noisy it was
03:25 - until
03:27 - until now i can't hear the fans at all
03:32 - that's pretty wild
03:35 - all right so hopefully the audio is a
03:38 - little better for you all as well
03:42 - and i really i didn't even realize it
03:44 - was that bad
03:48 - okay
03:50 - so today
03:52 - let me
03:58 - all right let me give you i'm trying to
04:00 - figure out where we left off
04:03 - so we left off with department pages it
04:05 - looks like
04:09 - so here's basically kind of what we've
04:11 - been doing uh in case you haven't seen
04:13 - the streams or you missed some
04:15 - we create
04:16 - new pages right so we're using react and
04:20 - in particular we're using next js and
04:23 - next has its own routing system but
04:25 - we're kind of you know adding our own
04:27 - routing on top of that
04:29 - so within this pages folder
04:31 - we'll create a new page
04:33 - and then we'll also create a new query
04:36 - for graphql
04:39 - and we'll create a new route in our
04:41 - server.js file
04:43 - and once we complete that process
04:46 - then there'll be a whole new section
04:48 - of the site that'll be available
04:51 - to pull in content so
04:53 - we've already completed that for several
04:56 - sections so we have a section for
04:58 - faculty members a section for
05:01 - academic majors
05:02 - we also have a section now for academic
05:04 - departments
05:06 - so we're going to continue on today
05:08 - and some of the things that i brought in
05:12 - since then are we have
05:15 - um
05:17 - associates degrees which i don't think
05:19 - i'm finished bringing all the data so we
05:21 - might skip that uh as well as miners
05:26 - and
05:27 - we have institutes and
05:31 - organizations i think it's institutional
05:33 - organizations i just shortened it to
05:35 - institutes for api purposes
05:38 - and then we have some staff members
05:41 - i also brought in
05:43 - a bunch of videos
05:45 - as a custom post type
05:48 - but i can't really do anything with
05:49 - those yet i'm going to need someone to
05:51 - go in manually and sort through those
05:54 - and then assign them to a category so
05:56 - that we can pull them in uh to places
05:59 - where we need them
06:01 - so basically that's just
06:02 - like a youtube embed tag
06:05 - inside a wordpress custom post type
06:10 - all right so let's pull in
06:16 - let's see
06:18 - let's go with miners for now
06:21 - okay that's all that minor agreement
06:25 - yeah
06:26 - let's go with miners so the first thing
06:28 - that i want to do is i want to go to the
06:30 - current website and i want to check what
06:33 - the url is because we need to match that
06:35 - with our route wherever possible we're
06:38 - going to keep urls from the old url to
06:39 - the new one which i probably should
06:42 - mention for those of you who are new
06:45 - we're taking an old website
06:48 - for the university the main university
06:50 - website uh here at franciscan university
06:52 - and we're making a completely new
06:54 - website but we need to migrate the
06:55 - content and we want to keep the urls the
06:57 - same wherever possible alright obviously
07:00 - because i'm sure there's a lot of
07:03 - inbound links and things that will break
07:06 - if we mess up the url structure
07:09 - obviously would not be good for seo as
07:12 - well
07:13 - because i'm sure we'll still show up in
07:15 - a lot of search results
07:17 - for urls that are now broken
07:20 - and then as soon as the search engine
07:22 - realizes that we will drop out of the
07:24 - search results
07:28 - so it's very important that we double
07:30 - check these
07:33 - oops wrong site
07:38 - there we are
07:41 - see how long it takes today to load
07:45 - so from the load times alone it should
07:47 - be obvious why we need to build a new
07:48 - website
07:52 - wow and this website is actually hosted
07:56 - on campus so it's
07:59 - just maybe
08:02 - i don't know less
08:05 - maybe like
08:06 - less than a mile
08:08 - um
08:10 - maybe a kilometer i'm less probably less
08:13 - than where i am right now
08:16 - it's insane that it takes that long to
08:18 - get here
08:19 - uh okay so we need to find our
08:23 - miners
08:24 - undergraduate
08:26 - uh another thing that i'd like to do
08:30 - if possible is kind of
08:33 - you figure out where people are going
08:34 - the most and where people want to go
08:36 - based on analytics
08:37 - and
08:38 - then make those sections very easy to
08:42 - get to
08:43 - so we should have a section for miners
08:45 - there we are
08:47 - so let's check out our minor programs
08:49 - and see hopefully we have some
08:51 - consistency with the urls
08:53 - if not we may have to
08:56 - you know take another
08:59 - oh
09:03 - studies
09:04 - creek
09:09 - closed captioning not available
09:24 - hmm
09:29 - all right this is going to be tough
09:33 - so it's probably hard for you all to see
09:35 - what the urls just were because they're
09:37 - so small
09:40 - um
09:41 - let me all right i see
09:44 - you are asking for ngrok i already
09:46 - started the server i just forgot to
09:48 - paste it so here's the
09:53 - here's the link for the ngrok server
09:58 - you can click that and check out the
10:00 - site as we as we make it
10:03 - worlds asks what is
10:05 - is this what people call migrations
10:08 - um
10:14 - uh
10:15 - migration i mean we're migrating data
10:18 - we're moving the
10:19 - yeah i mean i guess we're migrating
10:22 - we have to migrate the data
10:25 - uh from one database
10:28 - to another so that we can use a
10:29 - different content management system
10:33 - oh goodness okay so let me explain to
10:36 - you what is messed up about these urls
10:38 - right now
10:39 - so here's all our miners
10:43 - like legal studies for instance
10:47 - is just franciscan.edu legal studies
10:50 - but then
10:52 - classical latin is
10:54 - franciscan.edu classics slash classical
10:57 - latin
11:00 - so there's not really consistency this
11:02 - one is kind of the odd one out
11:04 - because it's formatted like this all the
11:06 - other ones are formatted based on the
11:09 - the department
11:11 - um or the the major
11:13 - program this is probably the department
11:17 - oh no but so franciscan studies is just
11:20 - franciscan.edu franciscan studies
11:24 - all right
11:25 - this is going to be more difficult so i
11:28 - guess here's what we'll need to do
11:30 - for the ones that are
11:34 - just straight up like dot edu slash
11:37 - something we're gonna have to create
11:39 - their own routes
11:41 - to keep the url
11:43 - the same
11:45 - but then we're going to need to
11:52 - i don't know we're going to need to
11:54 - figure out an alternate route
11:56 - so we want to keep the old urls but then
11:59 - within the site we want to
12:01 - keep things really logical and clean
12:04 - so i'm going to need your help just
12:06 - thinking through this
12:07 - would it be more logical to make all the
12:10 - miners have let's say franciscan.edu
12:14 - minor
12:15 - slash
12:17 - classical latin or whatever
12:20 - or would it make more sense to have it
12:23 - franciscan.edu
12:26 - classics which would be the department
12:28 - name slash classical latin
12:31 - let me know if that
12:32 - question even makes sense at all to you
12:35 - and then let me know what you think
12:38 - i'm just
12:48 - yeah i'm just kind of wondering
12:53 - so i think we do we we are making the
12:55 - majors let's look at our our router for
12:57 - a second oops
13:00 - where are we at
13:01 - our server.js file here
13:05 - right now what we have going on is
13:09 - yeah so
13:11 - we have like these kind of routes for
13:13 - our majors but then we're also
13:16 - making a route
13:18 - and this will be kind of our new
13:20 - structure that we're going to encourage
13:22 - is major slash
13:24 - and then the id for the major
13:45 - okay so it looks like a few years saying
13:48 - to do department slash program
13:51 - is a better way to do things
13:54 - okay
13:58 - okay let's go let me go back here and
14:04 - and let's see
14:07 - classic streak minor okay the um
14:15 - the slug actually
14:17 - with some of them
14:20 - already says miner in it i think that's
14:22 - not a bad idea to keep it
14:26 - to keep the name of miner in there so
14:30 - just i just want to double check and
14:31 - make sure that these are linking to
14:33 - pages that's just for the miner okay
14:35 - good
14:36 - so film studies minor
14:40 - okay
14:55 - uh stephen says i can't get the ngrok
14:57 - site open
14:59 - is anyone else having trouble with the
15:00 - ngrok site
15:08 - uh let's see
15:10 - jeff said it opened
15:12 - uh on his phone but not on the
15:15 - workstation
15:18 - it could be the firewall
15:22 - all right let me know uh what's going on
15:25 - with that
15:26 - you try to copy and paste the link as
15:28 - well because sometimes um
15:32 - links with uh with youtube are
15:36 - are weird like in the live chat
15:50 - okay
15:51 - all right so
15:52 - i'm going to take one last check at all
15:54 - these suggestions before we actually
15:56 - create the route
15:59 - michael's saying we could do department
16:01 - and then program and then major or minor
16:14 - okay
16:16 - maybe we could
16:23 - yeah maybe we could do that let me
16:27 - let's see
16:28 - access biology department commercial
16:30 - theology classic social classes
16:32 - political science all right yeah so
16:34 - these are already categorized under
16:36 - department i suppose
16:37 - so for now let's go with um slash
16:40 - department slash
16:43 - and then we'll put the name of
16:49 - the the program the name of the miner
16:56 - okay
16:58 - yeah we'll do it like that
17:05 - and that will actually match up with the
17:06 - current way of doing things so that's
17:08 - okay
17:09 - for some of them
17:14 - we'll have to
17:17 - account for the the current url and then
17:20 - also
17:21 - direct things into the new system
17:26 - okay
17:27 - there's also maybe some changes um
17:31 - restructuring like departments and
17:33 - things so
17:35 - i don't think any of those changes will
17:37 - happen before the site launches
17:42 - but
17:43 - i guess it it wouldn't
17:45 - it would be almost
17:46 - a little bit of a waste to i suppose
17:49 - overthink this
17:51 - because it it's likely that it may
17:53 - change at some point this year
17:57 - um
17:58 - i like i don't know anything for sure
18:00 - but i've just heard that's a possibility
18:02 - so
18:04 - we may have a different organization i i
18:06 - would hate i i really wish that
18:09 - i could know for sure how that's going
18:10 - to play out before we made these because
18:14 - it could mess up the organization of all
18:17 - the academic stuff on the site but
18:19 - oh well we'll do what we need to do for
18:21 - now
18:23 - okay so let's go to our code
18:26 - and let's try to set up some routes here
18:29 - so i'm going to grab this for now
18:33 - and
18:34 - let's see department
18:37 - department
18:39 - list
18:49 - okay i see now what i was trying to do
18:51 - and i just never finished that okay
18:54 - um
18:56 - so what we'll need is
19:08 - um
19:14 - actually i'm not sure how i'm gonna do
19:15 - this
19:17 - all right let me let me think through
19:18 - this with y'all
19:19 - um
19:21 - so basically we need a double
19:25 - parameterized route
19:27 - so we would need something like
19:31 - i don't know
19:33 - id1
19:37 - you know so it would basically like the
19:39 - department and then
19:42 - you know the id for the
19:46 - miner
19:47 - um
19:49 - but here's the problem with that we have
19:54 - you know this isn't the only place where
19:56 - we have
19:57 - this type of thing happening
20:09 - all right let me know if if anybody
20:13 - first like if you see the issue too or
20:15 - if i'm just
20:16 - like missing something big here let me
20:19 - think about this for a second
21:05 - all right
21:08 - i think
21:11 - i think we need to go back and just do
21:13 - do it like this
21:20 - and now it makes more sense why i did
21:22 - this with the major because i think
21:24 - that's really our only
21:27 - our only option so
21:34 - yeah there's just not
21:38 - i just don't know of a way to do kind of
21:41 - like a double
21:42 - variable here
21:45 - and to have that work out
21:50 - essentially because we're units we're
21:53 - dealing with a lot of different custom
21:55 - post types
22:01 - so like right now a lot of our pages
22:03 - were directing these two are very very
22:05 - similar but they're not always going to
22:06 - be similar they're going to have
22:07 - different things so it's like
22:12 - what would i direct this to would i have
22:14 - to keep
22:17 - i don't know lists of
22:20 - all the different names of the
22:21 - department so it's if
22:23 - one of these names is the department
22:26 - and then if one of these names is a
22:28 - minor
22:29 - then we send it to
22:31 - the minor route
22:36 - so i
22:38 - i don't know i think this would be it
22:40 - whether or not this is the ideal url i
22:42 - think this is really our only logical
22:44 - option at this point
22:47 - i i don't think it's
22:51 - for one thing it will keep our url
22:53 - shorter
22:55 - um
22:58 - yeah i we're just gonna we're gonna have
23:00 - to really try to make sure that all our
23:02 - urls can fit in in this type of thing
23:04 - where we just have like the descriptor
23:07 - like category
23:08 - and then
23:11 - we have
23:12 - you know with the the variable the
23:14 - parameterized route would be
23:16 - i think we can do that
23:20 - um
23:23 - let's see
23:25 - michael says uh the issue is that
23:27 - whoever initially set up the site didn't
23:28 - make a standard and have everyone stick
23:30 - to it
23:31 - yeah i mean that's that's kind of like
23:33 - what happened
23:34 - uh part of the issue too i think is
23:38 - at i don't know the full history and i
23:41 - didn't work with this site that much but
23:43 - there was some functionality that the
23:45 - site was supposed to have that then
23:47 - didn't have
23:48 - um and then various things
23:51 - just quit working during the time the
23:53 - site was there so
23:55 - some things were done that
23:57 - wasn't really part of the plan but it
23:59 - had to be done just to get pages up
24:02 - and i think that's part of the reason
24:04 - why there's so much
24:05 - weirdness also
24:07 - i i know there's been a lot of different
24:09 - people working on it student workers and
24:10 - things like that so it hasn't been
24:14 - hasn't been one person working on it and
24:16 - i guess
24:18 - there hasn't really been enforcement of
24:20 - a strict standard for things
24:23 - it's possible that reorganization has
24:26 - happened as well like maybe some things
24:28 - are categorized
24:30 - used to be categorized differently
24:33 - i don't know
24:36 - um nick says do you need something like
24:38 - a nested resource like slash department
24:40 - slash department id slash minor such
24:42 - minor id
24:55 - yeah actually
24:57 - would that work
25:00 - all right let me paste this in and see
25:02 - what you all think i think it's gonna
25:04 - end up making really long urls but you
25:07 - all let me know
25:09 - if you think it would be better
25:12 - so
25:13 - what if we had instead of minor id we
25:16 - would have department
25:18 - and then
25:20 - whatever the department name is and then
25:22 - minor and whatever the minor name is
25:25 - that might work
25:27 - i'm i'm not sure we could try it
25:30 - but i'm not even gonna try it if you
25:31 - think that's gonna end up getting
25:32 - ridiculous
25:51 - all right a few of you kind of came in
25:53 - and said hello hey everybody that just
25:55 - came in
25:57 - um
26:00 - all right i'm gonna give everybody just
26:02 - a few seconds to
26:05 - think about that and let me know
26:11 - hmm
26:12 - let me just put it in here for now
26:15 - and comment it out
26:17 - because
26:19 - even if we don't use it right now
26:21 - i do
26:22 - i like that we
26:24 - that that's a possibility if we end up
26:26 - finding a case where we have to do
26:28 - something like that
26:30 - what the heck is this trailing space is
26:32 - not allowed
26:33 - there we are
26:35 - um
26:37 - okay
26:39 - all right in any case what we can do
26:41 - right now
26:43 - is
26:44 - we can make
26:47 - a component
26:49 - and we can make our graphql query
27:04 - michael cruz says can't you override the
27:06 - actual url in the route
27:10 - um i'm not i'm not exactly sure what
27:13 - you're referring to um
27:19 - the the thing is so
27:23 - um
27:27 - i need
27:29 - wait how do i do this
27:42 - wait
27:44 - uh michael
27:47 - oh man um
27:50 - you just reminded me
27:53 - so the issue is i need to be able to
27:56 - grab
27:57 - the url as it currently is and direct it
28:01 - to the right place
28:08 - and if i can't do that
28:12 - then we're just gonna
28:13 - we're gonna have to break the urls and
28:15 - we can't do anything about it so
28:17 - essentially i need to be able to do this
28:21 - where it's like
28:29 - so i need to be able to do this and then
28:31 - i also need to be able to just grab
28:37 - and i mean i could always
28:39 - there's not that many miners so
28:41 - potentially i could just hard code
28:45 - what's in there
28:55 - i'd hate to do that but i
28:57 - i'm gonna end up with so many things
28:59 - hard-coded
29:04 - i just i don't really see any way around
29:05 - it
29:08 - especially when we don't have
29:09 - consistency with with urls
29:14 - tomorrow's film studies
29:31 - so this like i'm gonna have to have like
29:33 - stuff like this
29:41 - uh jeff says try utilizing the web
29:43 - server to
29:45 - do the rewrite for the incoming request
29:52 - i mean i i could
29:55 - well i think we're still going to have
29:56 - the same thing though is i'm going to
29:58 - have to have a ton of of rewrites
30:04 - so i mean whether it's here or whether
30:07 - it's in the web server which will be
30:10 - um
30:13 - well we're going to use nginx as a
30:16 - reverse proxy so
30:19 - either way we're just going to have to
30:20 - have a list
30:31 - all right
30:49 - all right so here's
30:55 - here's what i'm going to do so i will
30:56 - have this
31:02 - minor and then
31:06 - our id and then that is going to send it
31:08 - to the component that's minor but then
31:10 - we'll also have this sort of thing it's
31:12 - going to send that to the component
31:14 - that's minor but then we're going to
31:15 - manually give it the id of
31:21 - film studies
31:23 - well as a string
31:31 - uh jeff says i would
31:33 - put the rewrite rules at the web server
31:36 - side keeps this code cleaner
31:41 - uh harsha says maybe do those using a
31:43 - loop
31:44 - uh to save some time
31:47 - um
31:48 - we could how about
31:52 - all right so here's what i think about
31:53 - that one yes i'm definitely open to
31:56 - cleaning this up somehow loops or
31:58 - whatever
32:00 - to clean things up
32:02 - or potentially like what we probably
32:04 - should do at the very least is just get
32:06 - this stuff out of here and put it in a
32:08 - separate file
32:11 - i'm also open to
32:14 - redoing this in
32:18 - for for like nginx
32:20 - for now though
32:22 - i'm going to do them here just so that i
32:24 - can see what i'm i'm working with
32:26 - and then that way they'll at least be in
32:28 - a place so that later on i won't forget
32:30 - what i was trying to do so as long as we
32:32 - have one example
32:34 - or at least one example for each type of
32:37 - url that's currently being used on the
32:38 - site
32:40 - that should be enough we don't have to
32:41 - type them all out right now
32:43 - uh we just need to
32:45 - have one example make sure it works and
32:47 - then we can move on to the next type
32:50 - uh hey everybody i have a few people
32:52 - saying hi coming in uh den antonio
32:56 - dallet and inna hey how's it going
33:02 - all right so
33:05 - all right let's move forward so i think
33:07 - the
33:08 - suggestions are good and i think we
33:10 - should do them for right now though i'm
33:12 - gonna do it like this and then
33:16 - once we get a better idea of the scale
33:18 - of everything then that should give us
33:19 - um
33:22 - a better idea of like what would be the
33:24 - best way to clean this whole thing up
33:26 - and to do it differently so
33:28 - for now that's what i'm going to do i'm
33:30 - just going to try to comment things and
33:31 - make it obvious what what these things
33:33 - are so that when we come back we can
33:36 - easily see like all the the groups here
33:45 - all right so we have that route in there
33:48 - we need a component
33:55 - new file
33:58 - miner
34:11 - it's really possible that some of these
34:13 - like major and minor really don't need
34:15 - their own post types
34:35 - okay
34:38 - so this is actually
34:41 - i mean this component is done
34:44 - for now
34:48 - assuming that we're getting similar
34:50 - content that we do for majors that's
34:52 - done
34:54 - so if you want to check more of this out
34:56 - about what's going on uh check out the
34:58 - repo the links available in
35:04 - in the description of this video
35:07 - and now we'll go to the queries we're
35:10 - going to make a new file
35:12 - i'm going to say
35:14 - miner.js
35:17 - as a query and we can grab the major
35:21 - query
35:23 - and we're going to do the same thing
35:25 - here
35:26 - whoops
35:27 - did not copy that
35:32 - copy
35:36 - paste there we are
35:38 - and so now
35:40 - let's change this
35:45 - minor and then
35:50 - miners where name id content select okay
35:54 - wonderful
35:55 - all right so now we have our query uh
35:59 - what did i do
36:04 - i don't know what i did there and i
36:06 - messed it up don't save that
36:09 - put it there save that major one needs
36:13 - to be deleted
36:18 - okay
36:19 - let's make sure i didn't mess that one
36:21 - up
36:22 - all right that looks good
36:28 - okay so let me try this
36:35 - um so we should be able to go to
36:42 - minor
36:43 - and then
36:45 - actually i need to see what the slugs
36:46 - are
36:47 - for these
36:48 - um let's see greek minor what's our slug
36:53 - okay
37:00 - oops
37:03 - i don't think i restarted the server and
37:05 - i also don't remember exactly
37:09 - okay we did say minor
37:13 - okay
37:14 - um
37:16 - let's restart this
37:28 - do
37:39 - there we are
37:40 - okay cool so we have greek minor
37:43 - classics department little text here
37:47 - um some of the courses wonderful okay
37:49 - cool
37:50 - so
37:51 - our data is being brought in properly
37:54 - from our content management system which
37:56 - is wordpress we wrote a graphql query
37:58 - that's bringing in the data that we need
38:00 - and then we're displaying it
38:02 - with our react component
38:04 - here on the site
38:06 - okay looks good
38:10 - i mean it looks it looks adequate right
38:12 - it's super plain right now
38:14 - um but in terms of being able to pull
38:16 - the data that's good
38:18 - uh okay
38:22 - okay let me check
38:25 - two things one i never took my timer so
38:28 - i never started my timer so let me just
38:31 - check the time
38:34 - oh yeah i'm definitely due to go back to
38:35 - the live chat here all right so let me
38:37 - go to the live chat right now then the
38:39 - second thing i was gonna say is let me
38:41 - check the live chat so
38:42 - uh i'm gonna go to the live chat
38:44 - let me take i am going to start my timer
38:47 - now
38:48 - and i'm going to put it on five minutes
38:51 - and
38:53 - go through as much as i can on the live
38:55 - chat
39:07 - hey rowan's here burlings has finally
39:09 - joined after so long yeah i haven't seen
39:11 - you around for a while how's everything
39:13 - going
39:27 - uh world's asked is ngrok is the ingroup
39:29 - website the new website you're rerouting
39:32 - to uh the ngrok just uh
39:37 - yeah that's just a way for you to open
39:39 - the site on your machine and see
39:42 - what we're doing as we're doing it i
39:44 - mean you could go navigate wherever you
39:45 - want on the site inspect it in devtools
39:48 - and when i change something then it
39:50 - automatically would change for you as
39:52 - well
40:17 - um
40:19 - i'm scrolling through looking for a
40:20 - question there's a lot of comments about
40:22 - our routing options
40:47 - all right so michael's saying the loops
40:49 - don't scale well make an array and then
40:52 - do index of of the array okay that
40:56 - with harsh says with loops only seven to
40:58 - eight um
41:00 - lines can do the thing
41:03 - um
41:04 - niki's here hey how's it going
41:06 - says hey everyone just got back
41:09 - um from
41:13 - physio in english i think
41:17 - i'm not sure
41:19 - are you trying to say like your your
41:20 - normal like doctor's appointment stuff i
41:22 - think anyway welcome welcome back
41:32 - this person's handle on youtube is
41:33 - display block i like that
41:36 - um
41:37 - it says hello what time do you study to
41:40 - reach this level of coding
41:42 - um
41:44 - i have been
41:47 - i mean i've been doing this
41:49 - for like five years
41:56 - sorry
41:58 - ah
41:59 - oh i just got so drowsy all of a sudden
42:03 - um
42:04 - yeah so i it all
42:07 - it's so hard to estimate really it just
42:09 - depends on your situation like how many
42:11 - hours a day can you study
42:12 - um
42:13 - you know how good are you retaining new
42:15 - information
42:17 - you know what your background is before
42:19 - that
42:20 - there's just so much so
42:23 - it's going to be different for everyone
42:24 - i would say though
42:26 - if you're just getting into coding like
42:28 - don't expect to be able to do everything
42:30 - in a few weeks right don't don't get
42:32 - discouraged that's unrealistic
42:34 - expectations so you know don't think
42:36 - it's going to take you years and years
42:38 - to get you know good enough to to build
42:40 - anything meaningful
42:42 - you know but at the same time
42:46 - um you know be realistic
42:48 - uh so i guess there's like
42:50 - two two different
42:51 - places you don't really want to be at
42:53 - you don't want to be you know thinking
42:55 - that you're going to learn everything
42:56 - really fast and then get disappointed
42:58 - when it doesn't happen and then you also
43:00 - don't want to be
43:02 - thinking that there's no way you'll ever
43:03 - be able to do it right so be realistic
43:06 - with that i mean i i i see both things
43:09 - with like you know people that ask me
43:10 - questions is
43:12 - you know some some people expect like
43:14 - i'm going to be able to do everything
43:15 - right away and then some people are like
43:18 - you know i've only been coding for
43:21 - you know so many months there's no way
43:23 - anybody will ever hire me
43:25 - right i don't think either one is really
43:26 - true
43:29 - uh so just kind of
43:32 - you know be realistic about that but in
43:33 - terms of your specific question i it's
43:36 - it's really nearly impossible to give a
43:38 - timeline for how long it would take to
43:41 - get to a certain point
43:49 - all right harshet's giving some examples
43:51 - of things that i could do
43:55 - to clean up that code for all the routes
43:57 - so thank you for that
44:06 - um
44:08 - no life says hi how are you uh not bad
44:11 - not bad how you doing
44:15 - all right i only have just a few more
44:16 - things in the live chat so even though
44:17 - my timer went off i'm gonna answer a few
44:20 - uh just so i can
44:22 - get everything in here before we start
44:24 - up with coding again
44:27 - um
44:29 - the the lathe says do you have eslint
44:32 - setup and in that case which rule setup
44:34 - do you use
44:36 - um
44:37 - we follow
44:39 - standard js i think we're using
44:42 - that's what we usually use for the
44:44 - project so the standard js rules
44:50 - andrew says how do you get started on
44:51 - big projects like this i'm looking to
44:53 - get into react
44:54 - how do i get started um
44:58 - i don't i we just
45:01 - you start like you start every project
45:02 - and you just keep you break it down into
45:05 - small chunks and then just keep going
45:07 - every day and getting things done
45:09 - um
45:11 - that's that's about it
45:21 - uh stephen says jesse how often do you
45:24 - use loops like for if 4h in your job
45:28 - um
45:29 - we
45:30 - use loops a lot uh sometimes i don't use
45:33 - like a for loop as much and
45:37 - i'll try to use
45:40 - like a dot map or something like that or
45:43 - filter or sort if i can i like using
45:45 - those better
46:01 - uh stephen says i'm spending a lot like
46:03 - a lot on javascript loops and i worry
46:06 - that i won't use it to the level that
46:07 - i'm working with it
46:10 - yeah um
46:13 - hey
46:14 - being able to do loops and having that
46:16 - concept down i mean it it's important
46:19 - uh you will probably use loops or
46:21 - something like a loop
46:23 - frequently
46:34 - uh steven's asking about dot map
46:37 - yeah i i really do think dot map is
46:40 - easier
46:42 - to write it
46:46 - i don't know like for
46:48 - i don't know if dot map is easier to
46:49 - reason about i mean when you can see
46:52 - like a for loop like you can see the
46:55 - how it's gonna increment in things so
46:59 - i don't know it uh it might be easier to
47:02 - see how it's
47:03 - how it's gonna work
47:05 - but once you get familiar with map and
47:09 - um like filter and things like that
47:12 - i do think it's easier
47:21 - all right nikki says
47:22 - those array helpers are all things you
47:24 - can do with a basic for loop they are
47:26 - just written shorter your understanding
47:28 - of the basic for loop will surely help
47:32 - yeah
47:33 - i agree i completely agree i think
47:35 - that's a good answer
47:36 - all right last question then we go back
47:38 - to the code anna says how often do you
47:40 - visit the gym
47:42 - uh i actually have some workout
47:44 - equipment in my basement at home
47:46 - so i just do that i haven't been to like
47:49 - an actual
47:50 - gym and
47:52 - i don't know
47:53 - maybe it's been
47:56 - over a year
47:58 - i think it's yeah it's definitely been
48:00 - over a year
48:02 - um so i have
48:04 - i have an exercise bike i have like a a
48:08 - bench you know bench press some weights
48:10 - some like free weights and things so
48:14 - um i could do like a full body workout
48:17 - um
48:19 - so not quite as
48:21 - as nice as having like all the different
48:24 - options that you have at a gym but it's
48:25 - definitely convenient to be able to just
48:28 - you know roll out of bed and go right
48:30 - into uh
48:31 - right into a workout
48:35 - so for now i i really like that
48:38 - i mean it i can actually get into
48:40 - there's a gym on campus here where i
48:42 - work
48:43 - uh so
48:44 - it's it's pretty nice they have um you
48:47 - know all your standard stuff you'd see
48:49 - in any gym and
48:51 - um
48:52 - it was like rack i used to go and play
48:53 - racquetball before work with a co-worker
48:56 - of mine
48:57 - um but then i heard my wrists so now i'm
48:59 - like i don't really think that's a good
49:01 - idea uh for me to do but
49:04 - um
49:05 - anyway
49:06 - so i don't really go to the gym but i've
49:08 - been working out every morning for the
49:10 - last two weeks so today officially is um
49:14 - is two weeks
49:16 - so
49:17 - i'm really proud of that
49:19 - before that i hadn't worked out for a
49:21 - really long time it was just really
49:23 - sporadic like i work out maybe a few
49:25 - times a month here and there
49:28 - um
49:29 - but anyway
49:32 - let me go back
49:34 - to the code
49:36 - and
49:37 - all right so we've basically proven that
49:38 - the concept here works and it works with
49:41 - our new route
49:42 - let's make sure that we can also make it
49:45 - work with
49:47 - um
49:50 - have so like the old route will still
49:51 - work
49:53 - all right see and it says that that is
49:54 - nice keep training thanks i appreciate
49:57 - that i'm like i'm scared though that if
50:00 - i
50:01 - miss my workout once like it's just
50:03 - gonna throw me off so i'm really
50:06 - like
50:07 - i've been trying to go to bed super
50:08 - early so i know i can wake up and work
50:11 - out
50:12 - i mean i know it's going to happen
50:13 - eventually i i probably i can't keep
50:15 - this up forever but
50:18 - um
50:20 - for right now i at least want to build
50:21 - that habit i want to keep it up for like
50:23 - at least a month
50:25 - and
50:26 - then hopefully it's enough of a habit
50:28 - that i won't you know be easily
50:31 - um
50:34 - you know thrown off
50:36 - all right i'm gonna copy this route and
50:38 - paste it in just to test and make sure
50:40 - that this works and see film studies
50:44 - i have to double check to make sure that
50:46 - that's the right
50:48 - slug so if this doesn't work i'll check
50:50 - that
50:59 - all right yeah it's not the right slug
51:01 - let's
51:02 - let me go back here
51:04 - i have wordpress open on my other screen
51:06 - so i can check the routes
51:09 - film studies
51:10 - there's this slug
51:13 - film studies minor all right
51:16 - so this one is
51:18 - film studies minor
51:27 - and i'll
51:28 - probably need to restart this huh
51:45 - there we are
51:46 - okay yeah so that works so we can use
51:49 - com arts film studies and that should
51:52 - work for us and then we should also be
51:54 - able to do
51:57 - minor slash
52:06 - film studies minor
52:08 - all right great now what we can do
52:11 - [Music]
52:12 - at some point is clean up those slugs in
52:15 - wordpress so that it doesn't say minor
52:17 - on the end if we don't want it
52:19 - uh so we don't actually have to
52:22 - you know have minor here and then minor
52:24 - at the end because that's a little
52:25 - redundant i don't think we need that
52:27 - so that can that's something though that
52:29 - i could have someone else do even if
52:32 - they don't know about coding i could
52:34 - just you know give them some
52:35 - instructions and say go through all of
52:37 - them and do it like this
52:38 - so i'm not going to do it right now
52:43 - let's see
52:48 - all right so let's go into
52:55 - let's see
53:01 - let's check out a
53:03 - let's see
53:06 - another post type
53:10 - okay you know what i i do um i want to
53:12 - do this
53:15 - so let me
53:16 - see programs
53:33 - all right
53:37 - here's what i'm gonna do
53:45 - i'm going to grab this because this is
53:47 - going to be almost exactly what i want
53:49 - to do for
53:50 - these programs
54:07 - okay so whenever this associate degree
54:10 - programs
54:11 - and right now
54:15 - let's check this out and go to
54:22 - associate degree program so our url then
54:25 - is
54:28 - let's see what our url is going to be
54:31 - waiting just waiting okay
54:34 - oh goodness academics ug associate
54:44 - are there really no links for these
54:46 - programs
54:48 - oh they just have them within here but
54:50 - this is a okay
54:57 - all right so these links are also not
55:00 - standard
55:04 - all right and there's not a separate
55:05 - page for this associates degree it just
55:07 - links you to the
55:09 - main accounting
55:11 - page
55:12 - so there may not even be separate pages
55:14 - for
55:15 - associates programs
55:22 - yeah there's no separate pages
55:25 - okay
55:34 - there we are here's a separate page for
55:36 - an associate's program
55:42 - all right
55:45 - so we may
55:47 - we may only have one actual page for
55:50 - associates programs
55:53 - who
55:54 - okay
56:05 - so
56:25 - wow these um
56:28 - these routes are going to be the hardest
56:29 - part of this whole thing i think
56:51 - okay
56:52 - so we'll do
56:56 - for the associate degree programs for
56:59 - now
57:03 - i'm going to i'm just going to leave
57:05 - this as associate
57:10 - and we're gonna have this as associate
57:12 - but we may not even need this
57:16 - if there's really only one page
57:18 - uh i don't know if it's worth it
57:20 - although i may we may think about like
57:22 - okay well shouldn't we have a separate
57:24 - page for each associate program
57:27 - so i'll have to talk i don't handle
57:29 - content
57:30 - um and i don't really want to handle the
57:32 - content
57:34 - so i have to talk to my boss about that
57:36 - and see what he thinks for that that
57:37 - might be something that gets added in so
57:39 - i'm going to leave it in here for now
57:41 - and then up here
57:45 - let's say
57:49 - we're going to say associate here
57:52 - and then
57:54 - i want to take this to
57:57 - the associate page
58:00 - as well
58:02 - and then i want to give it the id of
58:06 - um let's say home remain
58:10 - let's give the idea of maine
58:12 - uh so i i was been thinking about how to
58:14 - do this and
58:17 - one way
58:18 - so we have a situation where
58:20 - we'll have
58:23 - let's say here like departments so
58:26 - the slash department i want to just have
58:28 - a list of all the different department
58:30 - pages so that when you go slash
58:32 - department slash id you can get to those
58:34 - pages so my original thought was okay
58:36 - i'll have it say when it slash
58:38 - department i'll send it to an entirely
58:40 - different component right meaning
58:42 - department list which will work
58:45 - but
58:46 - let's say the components are close
58:48 - enough that we don't really need two
58:49 - components
58:51 - so i thought why not try it like this
58:53 - and just manually pass in the id main
58:56 - and then make sure to say okay if the id
58:58 - is main
59:00 - then do this and then we'll make the
59:02 - slug
59:03 - in wordpress match so we'll make the
59:05 - slug say main being the main page
59:13 - so i'm going to try both different ways
59:16 - just to see maybe if there's some issue
59:18 - that i'm not seeing
59:20 - but
59:21 - this way we'll
59:23 - cut down on the number of components
59:25 - that we need to make
59:28 - and like as long as the components are
59:31 - are going to be very similar
59:33 - then this works if we need minor changes
59:36 - between you know how
59:38 - one of these pages display versus the
59:40 - main page
59:42 - we can work that out within a component
59:44 - if it's major changes then it might make
59:46 - more sense to have two different
59:47 - components
59:49 - but right now let's
59:50 - let's test this out
59:53 - so let's save that i'm going to go into
59:55 - wordpress here and
59:58 - i guess i can do this over here so
60:00 - everyone can see
60:02 - so i've just gone in this associate
60:03 - academic programs uh text which is right
60:07 - now the only piece of data that we have
60:09 - in here
60:10 - and
60:11 - i click so that to make the slug visible
60:14 - and i'm going to make the slug main
60:16 - which should be fine and won't mess up
60:17 - anything in wordpress because it's it's
60:20 - under the associate programs
60:22 - and then main so
60:24 - we don't have a program called main so
60:26 - this should work and not conflict
60:30 - so now that that's main
60:32 - we should be able to get this
60:35 - and we're going to need to make a new
60:39 - a new query
60:45 - i wonder
60:48 - there's probably a way that we can clean
60:50 - this up and not have so many
60:52 - different queries as well
60:55 - but i'm gonna wait
60:57 - and that can be uh some you know kind of
60:59 - an optimization that we do later on
61:01 - if we need to
61:06 - so for right now let's make a new query
61:08 - new file and let's call this
61:11 - associate
61:14 - dot js
61:17 - wonderful let's go to minor oops
61:20 - minor query
61:23 - and associate.js
61:26 - and now let's just change things to
61:28 - associate
61:43 - okay let's save that
61:45 - and let's also make a page
61:54 - so
61:55 - this is just the component
61:57 - and we'll take
61:59 - what we did here with minor
62:02 - and let's put it here so we need to
62:04 - change every instance of the word minor
62:08 - and make it associate
62:14 - and let's make sure we're getting our
62:16 - capitalization
62:18 - correct all right so
62:21 - what will happen is we go to the url the
62:23 - id part of the url will get passed into
62:25 - here
62:26 - and then that will be available to pass
62:30 - on to the query we'll get the data back
62:32 - the data will be stored in props and
62:35 - then the data will be used to render
62:39 - this component
62:42 - if you want a more thorough explanation
62:44 - of how that works you can ask me the
62:46 - live chat or you can go back and
62:48 - re-watch some of the streams that we did
62:50 - earlier on
62:52 - uh towards the beginning of project five
62:55 - and
62:56 - i i do go
62:57 - you know in a lot more depth into you
63:00 - know how this works
63:03 - alright so we need to restart our server
63:07 - because we change some routes in our
63:08 - server.js file
63:15 - and after that starts up we will be able
63:18 - to go to
63:21 - associate
63:26 - oops
63:28 - let's make sure i did that right all
63:30 - right so we do have associate we have
63:33 - this associate query
63:36 - and
63:38 - we have this
63:41 - let's see if i did this right on the
63:42 - server
63:43 - city
63:54 - you know let me see how what i i made
63:56 - this in wordpress so
64:00 - i think it was more than just associate
64:03 - so here's our custom post type in
64:05 - wordpress and i believe i made it
64:07 - associate program
64:09 - there we are associate program
64:15 - so in our query
64:17 - we need to look for
64:21 - associates
64:25 - program
64:29 - i think like this
64:31 - i think that's it
64:34 - i guess we can double check news
64:40 - all right well let's give it a shot
64:44 - no
64:46 - programs
64:51 - hmm
65:02 - all right let's check
65:10 - i don't think i can use a hyphen here
65:18 - no i can't
65:24 - all right let's see
65:34 - did i never restart my timer no i didn't
65:37 - i'm just gonna have to keep an eye on
65:38 - the clock uh so i'm gonna work on this
65:40 - for just another few minutes and then
65:42 - i'll go back to the live chat
65:44 - so it's saying cannot reproperty edges
65:46 - of undefined so if we see in our
65:49 - component here
65:51 - see edges here it's saying there is no
65:53 - data for associate
65:55 - maybe that's because it's supposed to be
65:57 - associates
66:01 - um
66:03 - associate program
66:16 - there we are all right that was the
66:19 - whole point so here's my problem so i
66:21 - had well two problems one i was trying
66:23 - to get data under the name associate and
66:26 - that's not the name that i had saved the
66:27 - data under
66:28 - uh and i was trying to do that in two
66:30 - different places so
66:32 - i just had to change it in both places
66:34 - and now i can get the data here's how
66:36 - it's coming in for us so
66:38 - um
66:40 - i'm not thrilled with how that looks
66:42 - especially like the main headline here
66:45 - is smaller than all the sub headlines
66:51 - but i mean it's in at least we're
66:53 - getting the data and it works
67:01 - and it has oh no
67:04 - it has weird stuff like this so the um
67:06 - this is taking us to maine.aspx
67:13 - admissions main.aspx so
67:17 - i was hoping that most of the links
67:18 - would work
67:20 - but links that have.aspx at the end are
67:23 - obviously not going to work
67:26 - i didn't realize that was a thing
67:28 - happening on this site
67:32 - so definitely have to address that
67:34 - that just might be that'll be a thing
67:36 - that either i can find like one thing to
67:38 - go through all the database and remove
67:40 - that or maybe i can write something
67:43 - that'll remove it as we import things
67:46 - or that'll just be something that
67:49 - as we're testing the site and as we go
67:51 - keep going through every time we find it
67:52 - i'll just have to change it
67:55 - or have someone else change it in
67:56 - wordpress
67:59 - okay
68:01 - so the idea though is that
68:04 - you have each of these and then a page
68:06 - for each of these and when you click the
68:08 - link it would take you to associate
68:09 - slash and then let's say theology and
68:13 - then that would show you the associates
68:14 - in theology page
68:16 - but you're just a slash associate page
68:19 - would have your list of everything and
68:20 - we're gonna do a similar thing for the
68:22 - majors for the miners for departments
68:26 - you know anything that would make sense
68:28 - to have a list of everything first which
68:30 - is gonna be most of the sections we're
68:32 - gonna do it like that
68:38 - looks good i'm going to go back to the
68:39 - live chat now
68:42 - and even though i forgot the timer i
68:44 - think we're basically staying on about
68:45 - the same time frame that we normally do
68:48 - so i'm going back to the live chat right
68:50 - now i'm going to try to answer all the
68:52 - questions that are in there so if you
68:53 - have a question please put it in there
68:55 - now
68:56 - and
68:57 - if you don't want to stick around for
68:58 - the question and answer that's totally
69:00 - fine i'll see you tomorrow
69:02 - if you can stick around though i would
69:04 - appreciate your help in answering the
69:06 - questions
69:08 - uh most of the time you all have great
69:10 - answers uh much better than than what i
69:13 - can come up with
69:17 - okay
69:39 - michael
69:41 - asks can you set up a database with
69:43 - department program degree type
69:49 - um were we at that point were we still
69:51 - talking about routing
69:54 - just to be able to
69:55 - i guess grab those or
69:59 - i mean i guess it's possible
70:10 - michael says you or one of the students
70:12 - is going to have to hard code some stuff
70:14 - you're gonna have to deal with it yeah i
70:15 - mean uh
70:17 - yeah that's just the way it's gonna be
70:19 - i mean eventually who knows maybe after
70:22 - a couple of years all the links will be
70:25 - or at least most of the links will be
70:26 - switched over to a more sane system
70:31 - but
70:33 - i i don't know for right now we just got
70:35 - to cover it and try to
70:37 - get as many links as possible
70:39 - to work
70:53 - michael says you really should only need
70:55 - three queries department program degree
70:58 - type
71:04 - uh then branch out from there
71:07 - hmm
71:09 - yeah i'm wondering
71:18 - i'm thinking about that there there's
71:21 - there may def be a much better way to
71:24 - handle this data
71:29 - it's not going to be ideal i mean
71:31 - unfortunately i
71:33 - in migrating the data
71:38 - it right now the data is not organized
71:43 - in in a way that makes it easy to find
71:46 - stuff
71:47 - um
71:48 - so that makes it kind of difficult when
71:50 - i'm trying to bring it over
71:54 - but then also
71:56 - i'm bringing it over into wordpress i
71:58 - want it to be set up in a way that
72:01 - it's like
72:03 - makes some sense
72:04 - so i'm making everything as custom post
72:06 - types so that whoever's editing it can
72:08 - quickly see like oh okay it's the major
72:11 - custom post type that's where i put
72:12 - stuff for majors
72:14 - so i'm not sure how i could set it up
72:16 - differently to follow that hierarchy
72:20 - the other way potentially could be set
72:22 - up a different
72:24 - server a graphql server that
72:29 - i don't know organize things differently
72:33 - i have to think about that
72:36 - i mean right now i do have
72:38 - a category
72:43 - i say the problem with the way that
72:45 - things work with wordpress is like i
72:47 - can't grab
72:51 - i don't think i can grab multiple custom
72:53 - post types like with one query
73:02 - i'm gonna have to look into that
73:05 - i was reading some issues on it on um
73:09 - on github
73:12 - anyway
73:14 - i agree that this is not ideal this is
73:16 - just kind of
73:18 - we're making it better than it is now
73:21 - but it's not probably like the most
73:23 - ideal way to organize everything
73:45 - uh michael says i might not know much
73:47 - about react wordpress or bjs ninja but i
73:50 - do know about databases i just think
73:51 - that way all right that's cool i don't
73:53 - know a lot about databases so any advice
73:55 - you have for me in that area is is
73:57 - definitely welcome
73:59 - michael says not sure why you are so
74:01 - worried about major slash minor
74:04 - um
74:06 - i mean i'm not
74:08 - it's not major minor in particular it's
74:10 - just kind of in general like
74:13 - the way things are happening with the
74:15 - urls on major and minor are also
74:18 - happening
74:18 - i mean that's just kind of the way
74:20 - things are across the the site so
74:23 - it's not that major minor is so
74:25 - important it's just that the way we're
74:27 - going to have to deal with this
74:28 - everywhere is definitely important and i
74:31 - want to be consistent so that's kind of
74:32 - why i try i'm putting so much thought
74:34 - into it now
74:36 - because whatever i decide we need to use
74:38 - that going forward if i change my mind
74:40 - later then i'll have to go back and redo
74:43 - it
74:46 - which isn't a big deal except that you
74:47 - know we need to get this launched in
74:51 - like a month
74:56 - and february is a short month so
74:59 - we're missing out on a few days
75:02 - okay
75:04 - uh i've gotten to the bottom of the live
75:07 - chat
75:08 - so i think
75:12 - i think underwraps
75:14 - savage banana says you cutie jesse thank
75:17 - you
75:19 - i try i've been uh combing my beard
75:21 - lately so i'm glad you noticed my beauty
75:24 - so
75:29 - um
75:30 - all right so i'm going to get back to
75:35 - bringing more data over
75:38 - and
75:39 - the more data i bring over the better
75:41 - picture i have of what we're dealing
75:42 - with so questions like how we're going
75:44 - to deal with um
75:48 - like moving you know how to deal with
75:50 - urls and organize things so
75:52 - i'll have a better idea of what what
75:54 - we're dealing with
75:57 - um savagement says it's laughing say
75:59 - yeah the death the death side of the
76:01 - beard
76:04 - uh
76:06 - all right i i really enjoy doing these
76:08 - live streams with you all
76:10 - um
76:12 - yeah so i should be back tomorrow
76:15 - probably around the same time i don't
76:17 - think i have anything conflicting on the
76:18 - schedule and
76:22 - we'll be doing some of the same work uh
76:24 - same work tomorrow so it's gonna be a
76:25 - lot of the same for a little while
76:28 - and then depending on how much data we
76:30 - get moved over how much we get done then
76:31 - maybe we can move on making it
76:34 - look nice optimizing things refactoring
76:38 - and
76:39 - testing
76:41 - lots of testing as much as we can
76:45 - all right well
76:46 - i'll be back tomorrow until then have a
76:49 - great day

Cleaned transcript:

hey everybody welcome to live coding with jesse today we're going to continue on with what we were doing last week and that's adding routes and components to our react site and we're going to be creating some more graphql queries so a lot of the same stuff we'll have we'll have a lot of new content uh so i've been working on migrating some content over so i think i have maybe like four new custom post types and a couple of new taxonomies so um i'll try to do front end work on the stream and then do the data migration stuff on my own and that way we'll always have new new content to try to set up on the on the frontend side of things so i hope everyone had a good weekend and hey i see you on the live chat i um i was recently doing some reading about obs which is what i used to stream and i've changed the settings and i managed to get the cpu um usage down i think like by a third so let me know if the video quality seems okay i don't want to drop everything down too much i should still get 1080p and we shouldn't have any issues with stuttering uh and or dropping frames or anything uh so hopefully it all works out right uh but so far it looks like this is this would be the right setting all right so let me let me switch over to show my screen okay let's move this down a bit and increase the size here all right so just a refresher and also if you're new to the stream i break the stream up into 25 minute segments and i'll try to do some coding for 25 minutes and then i will take a five minute break go to the live chat answer as many questions as i can in that five minute break and then we'll do some more code and then at the very end i answer all the questions in the live chat so the streams usually aren't longer than two hours sometimes they're only about an hour but if you uh if you do ask a question please be patient and i will get to it eventually if you can't stick around you can always check out the recording all the recordings of these streams are available on the free code camp youtube channel all right cool it looks like uh you all have noticed that the fans aren't running yeah it's really quiet in here now it's amazing it's like i never really noticed how noisy it was until until now i can't hear the fans at all that's pretty wild all right so hopefully the audio is a little better for you all as well and i really i didn't even realize it was that bad okay so today let me all right let me give you i'm trying to figure out where we left off so we left off with department pages it looks like so here's basically kind of what we've been doing uh in case you haven't seen the streams or you missed some we create new pages right so we're using react and in particular we're using next js and next has its own routing system but we're kind of you know adding our own routing on top of that so within this pages folder we'll create a new page and then we'll also create a new query for graphql and we'll create a new route in our server.js file and once we complete that process then there'll be a whole new section of the site that'll be available to pull in content so we've already completed that for several sections so we have a section for faculty members a section for academic majors we also have a section now for academic departments so we're going to continue on today and some of the things that i brought in since then are we have um associates degrees which i don't think i'm finished bringing all the data so we might skip that uh as well as miners and we have institutes and organizations i think it's institutional organizations i just shortened it to institutes for api purposes and then we have some staff members i also brought in a bunch of videos as a custom post type but i can't really do anything with those yet i'm going to need someone to go in manually and sort through those and then assign them to a category so that we can pull them in uh to places where we need them so basically that's just like a youtube embed tag inside a wordpress custom post type all right so let's pull in let's see let's go with miners for now okay that's all that minor agreement yeah let's go with miners so the first thing that i want to do is i want to go to the current website and i want to check what the url is because we need to match that with our route wherever possible we're going to keep urls from the old url to the new one which i probably should mention for those of you who are new we're taking an old website for the university the main university website uh here at franciscan university and we're making a completely new website but we need to migrate the content and we want to keep the urls the same wherever possible alright obviously because i'm sure there's a lot of inbound links and things that will break if we mess up the url structure obviously would not be good for seo as well because i'm sure we'll still show up in a lot of search results for urls that are now broken and then as soon as the search engine realizes that we will drop out of the search results so it's very important that we double check these oops wrong site there we are see how long it takes today to load so from the load times alone it should be obvious why we need to build a new website wow and this website is actually hosted on campus so it's just maybe i don't know less maybe like less than a mile um maybe a kilometer i'm less probably less than where i am right now it's insane that it takes that long to get here uh okay so we need to find our miners undergraduate uh another thing that i'd like to do if possible is kind of you figure out where people are going the most and where people want to go based on analytics and then make those sections very easy to get to so we should have a section for miners there we are so let's check out our minor programs and see hopefully we have some consistency with the urls if not we may have to you know take another oh studies creek closed captioning not available hmm all right this is going to be tough so it's probably hard for you all to see what the urls just were because they're so small um let me all right i see you are asking for ngrok i already started the server i just forgot to paste it so here's the here's the link for the ngrok server you can click that and check out the site as we as we make it worlds asks what is is this what people call migrations um uh migration i mean we're migrating data we're moving the yeah i mean i guess we're migrating we have to migrate the data uh from one database to another so that we can use a different content management system oh goodness okay so let me explain to you what is messed up about these urls right now so here's all our miners like legal studies for instance is just franciscan.edu legal studies but then classical latin is franciscan.edu classics slash classical latin so there's not really consistency this one is kind of the odd one out because it's formatted like this all the other ones are formatted based on the the department um or the the major program this is probably the department oh no but so franciscan studies is just franciscan.edu franciscan studies all right this is going to be more difficult so i guess here's what we'll need to do for the ones that are just straight up like dot edu slash something we're gonna have to create their own routes to keep the url the same but then we're going to need to i don't know we're going to need to figure out an alternate route so we want to keep the old urls but then within the site we want to keep things really logical and clean so i'm going to need your help just thinking through this would it be more logical to make all the miners have let's say franciscan.edu minor slash classical latin or whatever or would it make more sense to have it franciscan.edu classics which would be the department name slash classical latin let me know if that question even makes sense at all to you and then let me know what you think i'm just yeah i'm just kind of wondering so i think we do we we are making the majors let's look at our our router for a second oops where are we at our server.js file here right now what we have going on is yeah so we have like these kind of routes for our majors but then we're also making a route and this will be kind of our new structure that we're going to encourage is major slash and then the id for the major okay so it looks like a few years saying to do department slash program is a better way to do things okay okay let's go let me go back here and and let's see classic streak minor okay the um the slug actually with some of them already says miner in it i think that's not a bad idea to keep it to keep the name of miner in there so just i just want to double check and make sure that these are linking to pages that's just for the miner okay good so film studies minor okay uh stephen says i can't get the ngrok site open is anyone else having trouble with the ngrok site uh let's see jeff said it opened uh on his phone but not on the workstation it could be the firewall all right let me know uh what's going on with that you try to copy and paste the link as well because sometimes um links with uh with youtube are are weird like in the live chat okay all right so i'm going to take one last check at all these suggestions before we actually create the route michael's saying we could do department and then program and then major or minor okay maybe we could yeah maybe we could do that let me let's see access biology department commercial theology classic social classes political science all right yeah so these are already categorized under department i suppose so for now let's go with um slash department slash and then we'll put the name of the the program the name of the miner okay yeah we'll do it like that and that will actually match up with the current way of doing things so that's okay for some of them we'll have to account for the the current url and then also direct things into the new system okay there's also maybe some changes um restructuring like departments and things so i don't think any of those changes will happen before the site launches but i guess it it wouldn't it would be almost a little bit of a waste to i suppose overthink this because it it's likely that it may change at some point this year um i like i don't know anything for sure but i've just heard that's a possibility so we may have a different organization i i would hate i i really wish that i could know for sure how that's going to play out before we made these because it could mess up the organization of all the academic stuff on the site but oh well we'll do what we need to do for now okay so let's go to our code and let's try to set up some routes here so i'm going to grab this for now and let's see department department list okay i see now what i was trying to do and i just never finished that okay um so what we'll need is um actually i'm not sure how i'm gonna do this all right let me let me think through this with y'all um so basically we need a double parameterized route so we would need something like i don't know id1 you know so it would basically like the department and then you know the id for the miner um but here's the problem with that we have you know this isn't the only place where we have this type of thing happening all right let me know if if anybody first like if you see the issue too or if i'm just like missing something big here let me think about this for a second all right i think i think we need to go back and just do do it like this and now it makes more sense why i did this with the major because i think that's really our only our only option so yeah there's just not i just don't know of a way to do kind of like a double variable here and to have that work out essentially because we're units we're dealing with a lot of different custom post types so like right now a lot of our pages were directing these two are very very similar but they're not always going to be similar they're going to have different things so it's like what would i direct this to would i have to keep i don't know lists of all the different names of the department so it's if one of these names is the department and then if one of these names is a minor then we send it to the minor route so i i don't know i think this would be it whether or not this is the ideal url i think this is really our only logical option at this point i i don't think it's for one thing it will keep our url shorter um yeah i we're just gonna we're gonna have to really try to make sure that all our urls can fit in in this type of thing where we just have like the descriptor like category and then we have you know with the the variable the parameterized route would be i think we can do that um let's see michael says uh the issue is that whoever initially set up the site didn't make a standard and have everyone stick to it yeah i mean that's that's kind of like what happened uh part of the issue too i think is at i don't know the full history and i didn't work with this site that much but there was some functionality that the site was supposed to have that then didn't have um and then various things just quit working during the time the site was there so some things were done that wasn't really part of the plan but it had to be done just to get pages up and i think that's part of the reason why there's so much weirdness also i i know there's been a lot of different people working on it student workers and things like that so it hasn't been hasn't been one person working on it and i guess there hasn't really been enforcement of a strict standard for things it's possible that reorganization has happened as well like maybe some things are categorized used to be categorized differently i don't know um nick says do you need something like a nested resource like slash department slash department id slash minor such minor id yeah actually would that work all right let me paste this in and see what you all think i think it's gonna end up making really long urls but you all let me know if you think it would be better so what if we had instead of minor id we would have department and then whatever the department name is and then minor and whatever the minor name is that might work i'm i'm not sure we could try it but i'm not even gonna try it if you think that's gonna end up getting ridiculous all right a few of you kind of came in and said hello hey everybody that just came in um all right i'm gonna give everybody just a few seconds to think about that and let me know hmm let me just put it in here for now and comment it out because even if we don't use it right now i do i like that we that that's a possibility if we end up finding a case where we have to do something like that what the heck is this trailing space is not allowed there we are um okay all right in any case what we can do right now is we can make a component and we can make our graphql query michael cruz says can't you override the actual url in the route um i'm not i'm not exactly sure what you're referring to um the the thing is so um i need wait how do i do this wait uh michael oh man um you just reminded me so the issue is i need to be able to grab the url as it currently is and direct it to the right place and if i can't do that then we're just gonna we're gonna have to break the urls and we can't do anything about it so essentially i need to be able to do this where it's like so i need to be able to do this and then i also need to be able to just grab and i mean i could always there's not that many miners so potentially i could just hard code what's in there i'd hate to do that but i i'm gonna end up with so many things hardcoded i just i don't really see any way around it especially when we don't have consistency with with urls tomorrow's film studies so this like i'm gonna have to have like stuff like this uh jeff says try utilizing the web server to do the rewrite for the incoming request i mean i i could well i think we're still going to have the same thing though is i'm going to have to have a ton of of rewrites so i mean whether it's here or whether it's in the web server which will be um well we're going to use nginx as a reverse proxy so either way we're just going to have to have a list all right all right so here's here's what i'm going to do so i will have this minor and then our id and then that is going to send it to the component that's minor but then we'll also have this sort of thing it's going to send that to the component that's minor but then we're going to manually give it the id of film studies well as a string uh jeff says i would put the rewrite rules at the web server side keeps this code cleaner uh harsha says maybe do those using a loop uh to save some time um we could how about all right so here's what i think about that one yes i'm definitely open to cleaning this up somehow loops or whatever to clean things up or potentially like what we probably should do at the very least is just get this stuff out of here and put it in a separate file i'm also open to redoing this in for for like nginx for now though i'm going to do them here just so that i can see what i'm i'm working with and then that way they'll at least be in a place so that later on i won't forget what i was trying to do so as long as we have one example or at least one example for each type of url that's currently being used on the site that should be enough we don't have to type them all out right now uh we just need to have one example make sure it works and then we can move on to the next type uh hey everybody i have a few people saying hi coming in uh den antonio dallet and inna hey how's it going all right so all right let's move forward so i think the suggestions are good and i think we should do them for right now though i'm gonna do it like this and then once we get a better idea of the scale of everything then that should give us um a better idea of like what would be the best way to clean this whole thing up and to do it differently so for now that's what i'm going to do i'm just going to try to comment things and make it obvious what what these things are so that when we come back we can easily see like all the the groups here all right so we have that route in there we need a component new file miner it's really possible that some of these like major and minor really don't need their own post types okay so this is actually i mean this component is done for now assuming that we're getting similar content that we do for majors that's done so if you want to check more of this out about what's going on uh check out the repo the links available in in the description of this video and now we'll go to the queries we're going to make a new file i'm going to say miner.js as a query and we can grab the major query and we're going to do the same thing here whoops did not copy that copy paste there we are and so now let's change this minor and then miners where name id content select okay wonderful all right so now we have our query uh what did i do i don't know what i did there and i messed it up don't save that put it there save that major one needs to be deleted okay let's make sure i didn't mess that one up all right that looks good okay so let me try this um so we should be able to go to minor and then actually i need to see what the slugs are for these um let's see greek minor what's our slug okay oops i don't think i restarted the server and i also don't remember exactly okay we did say minor okay um let's restart this do there we are okay cool so we have greek minor classics department little text here um some of the courses wonderful okay cool so our data is being brought in properly from our content management system which is wordpress we wrote a graphql query that's bringing in the data that we need and then we're displaying it with our react component here on the site okay looks good i mean it looks it looks adequate right it's super plain right now um but in terms of being able to pull the data that's good uh okay okay let me check two things one i never took my timer so i never started my timer so let me just check the time oh yeah i'm definitely due to go back to the live chat here all right so let me go to the live chat right now then the second thing i was gonna say is let me check the live chat so uh i'm gonna go to the live chat let me take i am going to start my timer now and i'm going to put it on five minutes and go through as much as i can on the live chat hey rowan's here burlings has finally joined after so long yeah i haven't seen you around for a while how's everything going uh world's asked is ngrok is the ingroup website the new website you're rerouting to uh the ngrok just uh yeah that's just a way for you to open the site on your machine and see what we're doing as we're doing it i mean you could go navigate wherever you want on the site inspect it in devtools and when i change something then it automatically would change for you as well um i'm scrolling through looking for a question there's a lot of comments about our routing options all right so michael's saying the loops don't scale well make an array and then do index of of the array okay that with harsh says with loops only seven to eight um lines can do the thing um niki's here hey how's it going says hey everyone just got back um from physio in english i think i'm not sure are you trying to say like your your normal like doctor's appointment stuff i think anyway welcome welcome back this person's handle on youtube is display block i like that um it says hello what time do you study to reach this level of coding um i have been i mean i've been doing this for like five years sorry ah oh i just got so drowsy all of a sudden um yeah so i it all it's so hard to estimate really it just depends on your situation like how many hours a day can you study um you know how good are you retaining new information you know what your background is before that there's just so much so it's going to be different for everyone i would say though if you're just getting into coding like don't expect to be able to do everything in a few weeks right don't don't get discouraged that's unrealistic expectations so you know don't think it's going to take you years and years to get you know good enough to to build anything meaningful you know but at the same time um you know be realistic uh so i guess there's like two two different places you don't really want to be at you don't want to be you know thinking that you're going to learn everything really fast and then get disappointed when it doesn't happen and then you also don't want to be thinking that there's no way you'll ever be able to do it right so be realistic with that i mean i i i see both things with like you know people that ask me questions is you know some some people expect like i'm going to be able to do everything right away and then some people are like you know i've only been coding for you know so many months there's no way anybody will ever hire me right i don't think either one is really true uh so just kind of you know be realistic about that but in terms of your specific question i it's it's really nearly impossible to give a timeline for how long it would take to get to a certain point all right harshet's giving some examples of things that i could do to clean up that code for all the routes so thank you for that um no life says hi how are you uh not bad not bad how you doing all right i only have just a few more things in the live chat so even though my timer went off i'm gonna answer a few uh just so i can get everything in here before we start up with coding again um the the lathe says do you have eslint setup and in that case which rule setup do you use um we follow standard js i think we're using that's what we usually use for the project so the standard js rules andrew says how do you get started on big projects like this i'm looking to get into react how do i get started um i don't i we just you start like you start every project and you just keep you break it down into small chunks and then just keep going every day and getting things done um that's that's about it uh stephen says jesse how often do you use loops like for if 4h in your job um we use loops a lot uh sometimes i don't use like a for loop as much and i'll try to use like a dot map or something like that or filter or sort if i can i like using those better uh stephen says i'm spending a lot like a lot on javascript loops and i worry that i won't use it to the level that i'm working with it yeah um hey being able to do loops and having that concept down i mean it it's important uh you will probably use loops or something like a loop frequently uh steven's asking about dot map yeah i i really do think dot map is easier to write it i don't know like for i don't know if dot map is easier to reason about i mean when you can see like a for loop like you can see the how it's gonna increment in things so i don't know it uh it might be easier to see how it's how it's gonna work but once you get familiar with map and um like filter and things like that i do think it's easier all right nikki says those array helpers are all things you can do with a basic for loop they are just written shorter your understanding of the basic for loop will surely help yeah i agree i completely agree i think that's a good answer all right last question then we go back to the code anna says how often do you visit the gym uh i actually have some workout equipment in my basement at home so i just do that i haven't been to like an actual gym and i don't know maybe it's been over a year i think it's yeah it's definitely been over a year um so i have i have an exercise bike i have like a a bench you know bench press some weights some like free weights and things so um i could do like a full body workout um so not quite as as nice as having like all the different options that you have at a gym but it's definitely convenient to be able to just you know roll out of bed and go right into uh right into a workout so for now i i really like that i mean it i can actually get into there's a gym on campus here where i work uh so it's it's pretty nice they have um you know all your standard stuff you'd see in any gym and um it was like rack i used to go and play racquetball before work with a coworker of mine um but then i heard my wrists so now i'm like i don't really think that's a good idea uh for me to do but um anyway so i don't really go to the gym but i've been working out every morning for the last two weeks so today officially is um is two weeks so i'm really proud of that before that i hadn't worked out for a really long time it was just really sporadic like i work out maybe a few times a month here and there um but anyway let me go back to the code and all right so we've basically proven that the concept here works and it works with our new route let's make sure that we can also make it work with um have so like the old route will still work all right see and it says that that is nice keep training thanks i appreciate that i'm like i'm scared though that if i miss my workout once like it's just gonna throw me off so i'm really like i've been trying to go to bed super early so i know i can wake up and work out i mean i know it's going to happen eventually i i probably i can't keep this up forever but um for right now i at least want to build that habit i want to keep it up for like at least a month and then hopefully it's enough of a habit that i won't you know be easily um you know thrown off all right i'm gonna copy this route and paste it in just to test and make sure that this works and see film studies i have to double check to make sure that that's the right slug so if this doesn't work i'll check that all right yeah it's not the right slug let's let me go back here i have wordpress open on my other screen so i can check the routes film studies there's this slug film studies minor all right so this one is film studies minor and i'll probably need to restart this huh there we are okay yeah so that works so we can use com arts film studies and that should work for us and then we should also be able to do minor slash film studies minor all right great now what we can do at some point is clean up those slugs in wordpress so that it doesn't say minor on the end if we don't want it uh so we don't actually have to you know have minor here and then minor at the end because that's a little redundant i don't think we need that so that can that's something though that i could have someone else do even if they don't know about coding i could just you know give them some instructions and say go through all of them and do it like this so i'm not going to do it right now let's see all right so let's go into let's see let's check out a let's see another post type okay you know what i i do um i want to do this so let me see programs all right here's what i'm gonna do i'm going to grab this because this is going to be almost exactly what i want to do for these programs okay so whenever this associate degree programs and right now let's check this out and go to associate degree program so our url then is let's see what our url is going to be waiting just waiting okay oh goodness academics ug associate are there really no links for these programs oh they just have them within here but this is a okay all right so these links are also not standard all right and there's not a separate page for this associates degree it just links you to the main accounting page so there may not even be separate pages for associates programs yeah there's no separate pages okay there we are here's a separate page for an associate's program all right so we may we may only have one actual page for associates programs who okay so wow these um these routes are going to be the hardest part of this whole thing i think okay so we'll do for the associate degree programs for now i'm going to i'm just going to leave this as associate and we're gonna have this as associate but we may not even need this if there's really only one page uh i don't know if it's worth it although i may we may think about like okay well shouldn't we have a separate page for each associate program so i'll have to talk i don't handle content um and i don't really want to handle the content so i have to talk to my boss about that and see what he thinks for that that might be something that gets added in so i'm going to leave it in here for now and then up here let's say we're going to say associate here and then i want to take this to the associate page as well and then i want to give it the id of um let's say home remain let's give the idea of maine uh so i i was been thinking about how to do this and one way so we have a situation where we'll have let's say here like departments so the slash department i want to just have a list of all the different department pages so that when you go slash department slash id you can get to those pages so my original thought was okay i'll have it say when it slash department i'll send it to an entirely different component right meaning department list which will work but let's say the components are close enough that we don't really need two components so i thought why not try it like this and just manually pass in the id main and then make sure to say okay if the id is main then do this and then we'll make the slug in wordpress match so we'll make the slug say main being the main page so i'm going to try both different ways just to see maybe if there's some issue that i'm not seeing but this way we'll cut down on the number of components that we need to make and like as long as the components are are going to be very similar then this works if we need minor changes between you know how one of these pages display versus the main page we can work that out within a component if it's major changes then it might make more sense to have two different components but right now let's let's test this out so let's save that i'm going to go into wordpress here and i guess i can do this over here so everyone can see so i've just gone in this associate academic programs uh text which is right now the only piece of data that we have in here and i click so that to make the slug visible and i'm going to make the slug main which should be fine and won't mess up anything in wordpress because it's it's under the associate programs and then main so we don't have a program called main so this should work and not conflict so now that that's main we should be able to get this and we're going to need to make a new a new query i wonder there's probably a way that we can clean this up and not have so many different queries as well but i'm gonna wait and that can be uh some you know kind of an optimization that we do later on if we need to so for right now let's make a new query new file and let's call this associate dot js wonderful let's go to minor oops minor query and associate.js and now let's just change things to associate okay let's save that and let's also make a page so this is just the component and we'll take what we did here with minor and let's put it here so we need to change every instance of the word minor and make it associate and let's make sure we're getting our capitalization correct all right so what will happen is we go to the url the id part of the url will get passed into here and then that will be available to pass on to the query we'll get the data back the data will be stored in props and then the data will be used to render this component if you want a more thorough explanation of how that works you can ask me the live chat or you can go back and rewatch some of the streams that we did earlier on uh towards the beginning of project five and i i do go you know in a lot more depth into you know how this works alright so we need to restart our server because we change some routes in our server.js file and after that starts up we will be able to go to associate oops let's make sure i did that right all right so we do have associate we have this associate query and we have this let's see if i did this right on the server city you know let me see how what i i made this in wordpress so i think it was more than just associate so here's our custom post type in wordpress and i believe i made it associate program there we are associate program so in our query we need to look for associates program i think like this i think that's it i guess we can double check news all right well let's give it a shot no programs hmm all right let's check i don't think i can use a hyphen here no i can't all right let's see did i never restart my timer no i didn't i'm just gonna have to keep an eye on the clock uh so i'm gonna work on this for just another few minutes and then i'll go back to the live chat so it's saying cannot reproperty edges of undefined so if we see in our component here see edges here it's saying there is no data for associate maybe that's because it's supposed to be associates um associate program there we are all right that was the whole point so here's my problem so i had well two problems one i was trying to get data under the name associate and that's not the name that i had saved the data under uh and i was trying to do that in two different places so i just had to change it in both places and now i can get the data here's how it's coming in for us so um i'm not thrilled with how that looks especially like the main headline here is smaller than all the sub headlines but i mean it's in at least we're getting the data and it works and it has oh no it has weird stuff like this so the um this is taking us to maine.aspx admissions main.aspx so i was hoping that most of the links would work but links that have.aspx at the end are obviously not going to work i didn't realize that was a thing happening on this site so definitely have to address that that just might be that'll be a thing that either i can find like one thing to go through all the database and remove that or maybe i can write something that'll remove it as we import things or that'll just be something that as we're testing the site and as we go keep going through every time we find it i'll just have to change it or have someone else change it in wordpress okay so the idea though is that you have each of these and then a page for each of these and when you click the link it would take you to associate slash and then let's say theology and then that would show you the associates in theology page but you're just a slash associate page would have your list of everything and we're gonna do a similar thing for the majors for the miners for departments you know anything that would make sense to have a list of everything first which is gonna be most of the sections we're gonna do it like that looks good i'm going to go back to the live chat now and even though i forgot the timer i think we're basically staying on about the same time frame that we normally do so i'm going back to the live chat right now i'm going to try to answer all the questions that are in there so if you have a question please put it in there now and if you don't want to stick around for the question and answer that's totally fine i'll see you tomorrow if you can stick around though i would appreciate your help in answering the questions uh most of the time you all have great answers uh much better than than what i can come up with okay michael asks can you set up a database with department program degree type um were we at that point were we still talking about routing just to be able to i guess grab those or i mean i guess it's possible michael says you or one of the students is going to have to hard code some stuff you're gonna have to deal with it yeah i mean uh yeah that's just the way it's gonna be i mean eventually who knows maybe after a couple of years all the links will be or at least most of the links will be switched over to a more sane system but i i don't know for right now we just got to cover it and try to get as many links as possible to work michael says you really should only need three queries department program degree type uh then branch out from there hmm yeah i'm wondering i'm thinking about that there there's there may def be a much better way to handle this data it's not going to be ideal i mean unfortunately i in migrating the data it right now the data is not organized in in a way that makes it easy to find stuff um so that makes it kind of difficult when i'm trying to bring it over but then also i'm bringing it over into wordpress i want it to be set up in a way that it's like makes some sense so i'm making everything as custom post types so that whoever's editing it can quickly see like oh okay it's the major custom post type that's where i put stuff for majors so i'm not sure how i could set it up differently to follow that hierarchy the other way potentially could be set up a different server a graphql server that i don't know organize things differently i have to think about that i mean right now i do have a category i say the problem with the way that things work with wordpress is like i can't grab i don't think i can grab multiple custom post types like with one query i'm gonna have to look into that i was reading some issues on it on um on github anyway i agree that this is not ideal this is just kind of we're making it better than it is now but it's not probably like the most ideal way to organize everything uh michael says i might not know much about react wordpress or bjs ninja but i do know about databases i just think that way all right that's cool i don't know a lot about databases so any advice you have for me in that area is is definitely welcome michael says not sure why you are so worried about major slash minor um i mean i'm not it's not major minor in particular it's just kind of in general like the way things are happening with the urls on major and minor are also happening i mean that's just kind of the way things are across the the site so it's not that major minor is so important it's just that the way we're going to have to deal with this everywhere is definitely important and i want to be consistent so that's kind of why i try i'm putting so much thought into it now because whatever i decide we need to use that going forward if i change my mind later then i'll have to go back and redo it which isn't a big deal except that you know we need to get this launched in like a month and february is a short month so we're missing out on a few days okay uh i've gotten to the bottom of the live chat so i think i think underwraps savage banana says you cutie jesse thank you i try i've been uh combing my beard lately so i'm glad you noticed my beauty so um all right so i'm going to get back to bringing more data over and the more data i bring over the better picture i have of what we're dealing with so questions like how we're going to deal with um like moving you know how to deal with urls and organize things so i'll have a better idea of what what we're dealing with um savagement says it's laughing say yeah the death the death side of the beard uh all right i i really enjoy doing these live streams with you all um yeah so i should be back tomorrow probably around the same time i don't think i have anything conflicting on the schedule and we'll be doing some of the same work uh same work tomorrow so it's gonna be a lot of the same for a little while and then depending on how much data we get moved over how much we get done then maybe we can move on making it look nice optimizing things refactoring and testing lots of testing as much as we can all right well i'll be back tomorrow until then have a great day
