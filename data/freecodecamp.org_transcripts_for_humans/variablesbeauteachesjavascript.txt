With timestamps:

00:00 - variables
00:02 - a variable is a container for a value
00:04 - the value can be many things such as a
00:06 - number or a string like part of a
00:08 - sentence or it can be an object or a
00:11 - complex function with variables the
00:13 - value in the container can change to use
00:16 - a variable you first have to declare it
00:21 - there that variable has now been created
00:24 - or declared you're going to create a
00:26 - variable using the var keyword the const
00:30 - keyword or the let keyword
00:33 - now before es6 you could just use var so
00:36 - that's still the most common but those
00:38 - other keywords are available
00:41 - after creating the variable you must
00:43 - initialize the variable this is where
00:45 - you just give it a value this is done
00:47 - with the equal sign
00:55 - there we just initialized my name
00:57 - variable with the name bo it's a string
01:00 - you can also declare and initialize a
01:03 - variable all at once
01:10 - so we declared the variable state and we
01:12 - initialized it as michigan
01:14 - you can use variables all over the place
01:16 - in javascript
01:20 - so here if you want to console.log
01:22 - you're just going to put something into
01:24 - the console over here so i'm going to
01:26 - put my name
01:28 - is
01:29 - use a string here and then i'm going to
01:31 - add a variable that's also a string
01:37 - and we're going to run that so we can
01:38 - see it right in the console it's going
01:40 - to do my name is bo see there's no space
01:43 - between isn't bo because you have to put
01:45 - a space here
01:47 - now once a variable has had a value
01:50 - assigned to it you can update that value
01:52 - by just simply giving it a different
01:53 - value so i'm going to put state
01:56 - equals
01:58 - california
02:00 - so before state equaled michigan and now
02:03 - state equals california so if we console
02:05 - that log it or do anything else like
02:06 - that it's going to equal california
02:09 - there are certain naming rules and
02:10 - conventions for variables
02:12 - generally you should just stick to using
02:14 - latin characters like 0 through 9 or a
02:18 - to z
02:19 - or even
02:20 - capital a to z
02:22 - and you should not use underscores at
02:25 - the start of variable names
02:27 - while this is allowed it has certain
02:29 - meanings and could get confusing so
02:31 - don't use the underscore to start
02:33 - numbers at the start of the variable
02:34 - will cause an error so you can't have a
02:36 - variable that starts with a number it
02:38 - can have a number in it just not at the
02:39 - beginning
02:40 - a safe convention to stick to is the
02:43 - lower camel case so this is just the
02:46 - naming convention see what says my name
02:47 - up here that's the lower camel keys when
02:49 - you stick multiple words together
02:52 - you should do it without a space and you
02:54 - should capitalize every word after the
02:56 - first word
02:57 - so if we're gonna have a longer variable
03:05 - so that's lower camelcase there's no
03:06 - spaces capitalize each word
03:10 - just like
03:11 - the name of free codecamp is in lower
03:13 - camel case
03:14 - you should always make variable names
03:16 - intuitive so they describe the data they
03:18 - contain
03:19 - also this is very important variables
03:21 - are case sensitive so a capital letter
03:23 - and a lowercase letter are completely
03:25 - different
03:26 - lastly you should not use javascript
03:29 - reserved words as your variable names
03:31 - this means words that make up the actual
03:33 - syntax of javascript such as var
03:36 - function if else for
03:39 - and one final thing about variables
03:42 - javascript is a loosely typed language
03:45 - which means that unlike some other
03:46 - languages you don't need to specify what
03:48 - data type a variable will contain such
03:51 - as number or string
03:53 - or object or anything like that
03:55 - javascript just figures it out for you
03:58 - well that's variables thanks for
04:00 - watching my name is beau carnes don't
04:02 - forget to subscribe and remember use
04:04 - your code for good

Cleaned transcript:

variables a variable is a container for a value the value can be many things such as a number or a string like part of a sentence or it can be an object or a complex function with variables the value in the container can change to use a variable you first have to declare it there that variable has now been created or declared you're going to create a variable using the var keyword the const keyword or the let keyword now before es6 you could just use var so that's still the most common but those other keywords are available after creating the variable you must initialize the variable this is where you just give it a value this is done with the equal sign there we just initialized my name variable with the name bo it's a string you can also declare and initialize a variable all at once so we declared the variable state and we initialized it as michigan you can use variables all over the place in javascript so here if you want to console.log you're just going to put something into the console over here so i'm going to put my name is use a string here and then i'm going to add a variable that's also a string and we're going to run that so we can see it right in the console it's going to do my name is bo see there's no space between isn't bo because you have to put a space here now once a variable has had a value assigned to it you can update that value by just simply giving it a different value so i'm going to put state equals california so before state equaled michigan and now state equals california so if we console that log it or do anything else like that it's going to equal california there are certain naming rules and conventions for variables generally you should just stick to using latin characters like 0 through 9 or a to z or even capital a to z and you should not use underscores at the start of variable names while this is allowed it has certain meanings and could get confusing so don't use the underscore to start numbers at the start of the variable will cause an error so you can't have a variable that starts with a number it can have a number in it just not at the beginning a safe convention to stick to is the lower camel case so this is just the naming convention see what says my name up here that's the lower camel keys when you stick multiple words together you should do it without a space and you should capitalize every word after the first word so if we're gonna have a longer variable so that's lower camelcase there's no spaces capitalize each word just like the name of free codecamp is in lower camel case you should always make variable names intuitive so they describe the data they contain also this is very important variables are case sensitive so a capital letter and a lowercase letter are completely different lastly you should not use javascript reserved words as your variable names this means words that make up the actual syntax of javascript such as var function if else for and one final thing about variables javascript is a loosely typed language which means that unlike some other languages you don't need to specify what data type a variable will contain such as number or string or object or anything like that javascript just figures it out for you well that's variables thanks for watching my name is beau carnes don't forget to subscribe and remember use your code for good
