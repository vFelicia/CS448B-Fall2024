With timestamps:

00:10 - hey everybody welcome to live-streaming
00:13 - with Jessie and today is going to be
00:17 - probably one of the shortest streams
00:19 - that I've done since I first started so
00:23 - I had something that was supposed to
00:25 - happen at 5:00 and now it got bumped way
00:29 - up to 3:30 and it would take me a little
00:33 - while to drive there so that means we
00:38 - have we got to be done pretty quickly so
00:41 - if you've watched before you know
00:43 - usually the streams go like at least an
00:45 - hour and a half so what I it's gonna be
00:53 - a little different than normal for
00:56 - today's stream so I wanted to implement
00:59 - some material design tabs and like this
01:03 - I thought it was going to take me a lot
01:07 - longer than that really did so since I
01:08 - knew it had to be a short stream I
01:10 - started working on it before the stream
01:12 - and thinking that I could get some of it
01:15 - out of the way and then just finish it
01:17 - up and I ended up getting it finished so
01:21 - what I figured we'll do through the
01:23 - stream is first part of the stream I'll
01:27 - just go through how I implemented it and
01:29 - it was it was so easy I don't know why I
01:32 - thought it was gonna be more difficult
01:34 - than this but I'll run through how I
01:36 - implemented it and of course I'll answer
01:38 - any questions about it then I want to
01:42 - demo another react project that I'm
01:46 - almost finished with so I just have just
01:49 - like one or two like tiny bugs that I
01:52 - need to fix but basically is completely
01:55 - functional so I want to demo that for
01:57 - you that's the the react project I was
02:00 - working on for that Udacity nano degree
02:02 - and then after that we'll do our normal
02:07 - question and answer session and then
02:09 - we'll finish up so
02:12 - I wish I had I had already scheduled the
02:16 - stream before I knew that I would have
02:21 - to be out of here around 3:00 so
02:26 - otherwise I would have scheduled the
02:28 - stream earlier but it I think it worked
02:31 - out so let's get to it let me show you
02:34 - first of all I'll show you what it looks
02:35 - like so you can see you know we have we
02:41 - have tabs now so just to give you an
02:44 - idea of what it what it did look like if
02:47 - you don't remember let me pull it over
02:52 - from the other screen so this is what we
02:59 - had so we didn't if it wasn't really
03:06 - tabs it was just kind of like a menu
03:09 - there was nothing nothing to indicate
03:13 - what tab you were actually on so I think
03:17 - we had talked about changing these at
03:19 - some point but I never got around to it
03:23 - so now not only does it look more like
03:29 - material design should look I mean
03:31 - normally you wouldn't have this many
03:32 - tabs but you know we're kind of stuck
03:35 - with this many categories right now I
03:36 - was able to remove one category but now
03:42 - there's actually an indication of what's
03:45 - happening so you have this little
03:47 - underline so I think that's nice and
03:50 - also by default it defaults to the
03:53 - franciscans before we had the default to
03:56 - all but I talked to one of the designers
04:01 - so the graphic designers and he thought
04:07 - it was a little bit confusing to have
04:10 - all of the logos right there and they
04:13 - were kind of intermixed so they thought
04:15 - this might be a better better way to
04:17 - start out and now that we have an
04:18 - indicator it makes more sense so users
04:24 - can still get all over
04:25 - you know once but now it's just not
04:30 - quite as many you're right away so
04:33 - that's what we've well that's what I've
04:37 - done today among other things and this
04:42 - is actually you can see I'm on the live
04:45 - version of this site so if you want to
04:47 - check it out it's our C dot Franciscan
04:50 - University slash logos so you can check
04:55 - that out I think this is going to go
04:56 - it's going to go live you know obviously
04:58 - it's already live in the sense that it's
05:00 - available online but I'm I'm actually
05:03 - gonna link to it for university
05:06 - employees on Monday so think I've got
05:10 - you know all the major things completed
05:12 - I just tested out both the forms on the
05:17 - live version they were going where they
05:19 - were supposed to go all the data I
05:22 - probably I think the only thing I want
05:24 - to do is set up some sort of backup for
05:26 - the data so it may end up just being a
05:28 - Google sheet that gets populated but I'm
05:31 - open to other ideas so if anybody has an
05:33 - idea for a way for there to be a backup
05:36 - of all the form data that gets sent so I
05:40 - just need you know the info from the
05:42 - fields somewhere in some other place
05:44 - other than just being sent by email and
05:46 - being sent to the project management
05:48 - system so if you all have any ideas of
05:51 - something that's really kind of
05:52 - lightweight easy to implement let me
05:54 - know otherwise I'm just going to send it
05:56 - to a Google sheet and that'll help our
05:59 - project manager out a lot just to be
06:03 - able to double-check have a backup to
06:06 - tell if you know maybe some slip through
06:08 - the cracks
06:08 - or just to get some data it's a lot
06:11 - easier to look at a Google sheet and see
06:14 - how many people requested what services
06:16 - then to try to go through our project
06:18 - management system so alright so let me
06:24 - check the live chat just quickly there's
06:26 - some some of you saying hi hey everyone
06:29 - santosh says I love the material design
06:32 - good I'm glad glad you liked it
06:34 - gee CPR says the logo designs look great
06:37 - awesome I'm glad you
06:38 - like I can't take credit for them our
06:42 - graphic designers they don't hide
06:48 - skillful mess says congrats on 100k and
06:51 - 200k thank you thank you yeah we got if
06:57 - you haven't seen the video already check
06:59 - out the video Quincy put out earlier in
07:02 - the week and it's we got a silver play
07:07 - button from from Google so really cool
07:10 - you get that when you pass up a hundred
07:12 - thousand subscribers rollin says you
07:19 - could add it to sequel light database
07:24 - harsh it says firebase from back up okay
07:27 - cool I'll look into those I'd like to
07:29 - get implemented as soon as I can but
07:31 - actually I'm interested in firebase I've
07:34 - had a few people recommend it to me so
07:36 - I'll check those out all right well let
07:39 - me let me get to the code now so I think
07:43 - the easiest way to do this is just going
07:45 - to be to bring up github just to see the
07:48 - difference so obviously right I I added
07:57 - to our package JSON because you know we
08:00 - get if you tried to download this
08:03 - project you know we get like warnings
08:06 - and stuff are our linter won't work if
08:09 - we have things basically functions that
08:13 - we're using that we haven't declared so
08:15 - anyway that's all this is I just added
08:17 - it to the the package JSON it's just yet
08:21 - another thing to ignore and so I've
08:30 - added a handle of tab change which it
08:34 - just simply changes the state so not
08:36 - really a big deal before I was changing
08:38 - the state like right inside the render
08:41 - but I vaguely remember someone saying at
08:45 - some point that you shouldn't do it like
08:47 - that so I pulled it out into this handle
08:49 - that change function all right so that's
08:52 - that's just basic stuff this is where
08:54 - the change actually happened so let me
08:56 - show you here's what we had before so we
08:59 - had a ul with Li so each each menu item
09:04 - was an Li so basically we just had a
09:10 - click handler that when you clicked on
09:12 - it it was setting this the active tab
09:17 - you know based on whatever that value
09:19 - was the tab key and then that would
09:23 - change which you saw in terms of logos
09:27 - now the problem when I initially looked
09:30 - at the tabs from material UI and why I
09:32 - thought it would take a long time is so
09:37 - check this up so the way these tabs work
09:40 - or you have your tab but then within the
09:43 - tab you have markup and this is what
09:47 - gets displayed when you change tabs so I
09:50 - thought that's not gonna work with what
09:52 - we're doing right because we were using
09:56 - a masonry component and filtering things
10:00 - right so I thought that it's just going
10:03 - to be way too much work to redo
10:05 - everything like this but when I started
10:07 - to get into it earlier today I thought
10:10 - maybe it's worth a shot to just leave
10:14 - this out and see if we can put the click
10:18 - you know the click handler here where we
10:20 - have this on change and see what what
10:23 - happens see if that would work and it
10:25 - actually did work and that's why I was
10:27 - able to get it done you know so quickly
10:29 - it was like less than 20 minutes and I
10:34 - will here in my code go here we go so
10:36 - here's what I ended up doing and it
10:39 - actually is you know even you know more
10:43 - concise so that ul now becomes the tabs
10:48 - component are what used to be our click
10:52 - handler now becomes the on change and
10:56 - then instead of changing the state here
11:02 - we just call this handle tab change and
11:05 - we change the state up there okay so
11:09 - we're passing it right the value from
11:13 - this from tabs and then we're setting
11:16 - the state of active tab to that value
11:21 - and then here we're adding instead of an
11:27 - L is we're adding tabs and then we
11:32 - simply took the same thing that we had
11:35 - you know we had on tabs right we were
11:38 - put inserting into this a tag tabs key
11:41 - and I was giving us the the actual
11:44 - display of what users were seeing in
11:49 - terms of menu items and now we've put
11:52 - that same thing in as the label all
11:55 - right we've had it we have the same
11:57 - value our value as is the tab key and
12:02 - then we've just added the key right
12:04 - because anytime you you know iterate
12:05 - over something in react and have
12:08 - multiple elements here you need to have
12:10 - a key right so that's basically it and
12:15 - and it worked so that's all we had to do
12:22 - and because we already you know we
12:26 - already had it all set up so that the
12:28 - logos show up based on the value of the
12:33 - active tab and state all we had to do
12:38 - was make sure that when we click a tab
12:40 - we change that value so we change the
12:43 - state and that was it it works so this
12:47 - is actually how it came up pretty much
12:49 - by default the only other thing I had to
12:51 - change so we had a little bit of space
12:54 - on each side and that was because
12:56 - originally we had we had all of this
13:03 - inside a column in a row and that put
13:07 - our padding on the sides there so I just
13:10 - removed this from being inside a column
13:13 - in a row and I moved
13:16 - this name hide on medium and down this
13:18 - class I move that directly on to the tab
13:21 - so it's I don't need him and down and
13:23 - that gives us the drop down so when it
13:29 - gets too small you see it starts to get
13:30 - really crowded here and then it drops
13:35 - out and then we get our drop down which
13:36 - still works I mean it just changes state
13:41 - so that was it it was it was so simple
13:46 - so sorry that you know normally I do
13:49 - code live obviously it's that's the
13:52 - whole point of the show but I just like
13:55 - I said this ended up being way easier
13:57 - than I thought and I finished it before
14:00 - the stream started so if anyone has any
14:04 - questions about how that worked or what
14:07 - I did I'll take them right now and then
14:09 - I'll do the demo for my other project so
14:13 - let me just scan through the live chat
14:15 - quickly
14:33 - Zubair says suggestions continue this
14:35 - project further with react native that
14:41 - would be cool actually I really like
14:44 - that idea I'm I'm working on a react
14:47 - native project right now so after I
14:49 - finished that maybe I'll give it a shot
14:52 - at using doing this and react native
14:54 - that would be really cool to be able to
14:58 - tell you know users that if they wanted
15:01 - to they could have this as an app as
15:05 - well so maybe I'll give that a shot
15:15 - let's see hi John handsome said and
15:19 - react is supposed to be difficult for
15:21 - the easy stuff yeah I've heard that
15:29 - before when people's the Arak reactor
15:31 - might's hard stuff easy and easy stuff
15:33 - hard tea John says nice tab is a
15:37 - controlled component you're lifting
15:38 - state up yeah so if you check out even a
15:43 - material you I so I went with I went
15:45 - with the controlled example of the tabs
15:48 - so there's there are different ways you
15:50 - can do it but this one fit I think the
15:52 - best for what I needed it for so yeah
15:57 - basically the tab is a controlled
15:59 - component and by that and correct me if
16:02 - I'm explaining this wrong but normally
16:04 - you have inputs as controlled components
16:07 - in react very rarely would you not want
16:09 - to have an input as control component
16:10 - but in this case we have this tab which
16:12 - is not exactly an input but it functions
16:14 - in the same way in this case so the
16:20 - value of the tab is based on the state
16:24 - value and then when you click a tab it
16:29 - changes state value right and then it
16:33 - renders and the tab value gets updated
16:37 - right so you're not directly changing
16:40 - the value of tab with the click the
16:42 - click changes state and then the change
16:45 - is
16:45 - they triggers a change in the value here
16:48 - so that's basically what a controlled
16:51 - component is and that's normally how you
16:54 - would do forms so if you notice all the
16:56 - forms that we've done they work like
16:57 - that it's also kind of cool that when
17:02 - you go when you need to work with that
17:04 - form data you already have it there in
17:06 - state right as you know it's already
17:09 - there is an object so I I think it makes
17:13 - working with forms a little bit easier
17:15 - than normal but anyway that's that's
17:22 - controlled controlled component alright
17:29 - so let me show you and I'll get ready
17:32 - for this so brace yourselves and let's
17:35 - let's take a trip back in time and
17:38 - imagine what it would be like if we had
17:42 - react back in let's just say the 90s and
17:48 - we wanted to make a blog with comments
17:52 - and voting right so here's what it would
17:57 - be like in my mind so so here is here is
18:08 - my latest react project and I use Redux
18:12 - for this
18:12 - so with Redux we have a store and that's
18:16 - the source of truth for the state
18:18 - throughout the application so I did use
18:21 - some local state for this mainly for the
18:24 - inputs so that they were controlled
18:26 - right
18:28 - and I may have a UI element somewhere in
18:33 - here that uses yeah actually I do so I
18:36 - have some things that appear or
18:37 - disappear based on the state and that's
18:40 - best handled with local state so anyway
18:44 - it's really basic whoops I don't even
18:47 - know what I clicked on let me go back so
18:49 - here you have post right here so post
18:51 - title it tells you the author you can
18:53 - vote on it so I can vote to increase the
18:57 - score or do
18:58 - increase the score tells me how many
19:00 - comments there are I can delete the post
19:03 - if I want I can add new posts so we
19:11 - can't oops
19:18 - actually I just saw something weird it's
19:21 - using a different font here I didn't
19:25 - know that I have to change it
19:36 - and now we have our new post and I can
19:40 - vote it up and you can see as I vote it
19:42 - up it's changed the order because by
19:45 - default it puts the posts that have the
19:47 - highest score here but we can change
19:49 - that and go lowest score first or we can
19:52 - go date first so the newest first or the
19:54 - oldest we can check out more about this
19:59 - post so let's go to this one since it
20:00 - has comments so here we have the post
20:06 - here's the content the body of the post
20:09 - I could edit it if I wanted to and if I
20:14 - edited it oops
20:18 - is it broken
20:20 - did I break my submit ha ha I did make
20:24 - some changes yesterday and then
20:26 - committed them without testing so it's
20:29 - possible that I broke it and I think I
20:33 - did in fact whoa Fiona said 4:45 oh okay
20:40 - actually I did know about that I just
20:43 - think it's chance to fix it yet so
20:44 - anyway normally you'd click Submit and
20:46 - then immediately you'd see the change
20:49 - let's see we have our comments we can
20:55 - actually sort our comments the same way
20:57 - so we can sort by votes or by date and
21:00 - then you can edit a comment in line like
21:03 - this the comments should work so let's
21:05 - add something submit there we go so we
21:08 - added it added the comment there it
21:10 - could add some votes and we could delete
21:17 - comments if we want and then at the
21:20 - bottom we could we could add a new
21:22 - comment so just add so now we have a new
21:26 - comment let me think the only other
21:30 - thing we could sort we have categories
21:33 - so we sort by categories so that's it
21:39 - that's my that's my project and if you
21:46 - want to check out what's going on behind
21:47 - the scenes there is
21:49 - a Redux I get plug-in or something for
21:56 - for Chrome what do they call them for
22:00 - Chrome extension a redux extension so we
22:03 - can see what's going on with the state
22:05 - so here's how I have my state organized
22:08 - right we have our posts each post has a
22:12 - unique ID and comments also have unique
22:18 - IDs
22:21 - we're also grabbing the categories now I
22:24 - have the comments here as well because
22:26 - initially I did not put the comments
22:28 - with the posts is it's two different API
22:31 - calls to get them so I may end up
22:34 - changing this so that it's not redundant
22:36 - in that we have the same comment data
22:38 - repeated there so once I figure out a
22:42 - way to make everything work with that
22:44 - maybe I'll do it we'll see if I have
22:46 - time but right now it works as is our
22:51 - sorting also this is in the in the store
22:56 - so how we want to sort both the posts
23:02 - and the comments is kept in in the store
23:05 - so this is kind of a cool a cool way to
23:09 - see what's going on so we can see let's
23:13 - make some changes and then it'll show
23:15 - you what changed so right now the only
23:18 - thing that changed is that we we updated
23:20 - from 7 to 8 in our our votes core for
23:25 - that particular post so really cool
23:28 - shows you what action was set off anyway
23:35 - so this is my kind of fun fun projects
23:41 - it was interesting the first thing I've
23:44 - ever done with Redux so I've learned a
23:47 - lot about Redux and that's kind of why I
23:50 - went with this minimal UI I've been
23:51 - wanting to do something like this with a
23:54 - really like kind of old-school looking
23:56 - UI and I thought this project would be
23:59 - great because I had so much to learn
24:01 - with
24:02 - using Redux for the first time I didn't
24:04 - want to get caught up in the UI so much
24:07 - so this is very simple not that I didn't
24:11 - put any thought into the UI it did you
24:14 - undergo some revisions but because it's
24:16 - mainly text base there's a lot of things
24:19 - I don't worry about like like borders
24:25 - you know it for luck cards and you know
24:28 - what I'd normally do or worrying about
24:32 - colors right there's all just one color
24:34 - so anyway I just wanted to share that
24:38 - with you all if you want to see the code
24:40 - for this it's on my github profile so if
24:45 - you check it out to get up its Jesse or
24:48 - waggle its my github profile and then
24:50 - its Udacity react nd readable so I will
24:59 - be working on this you know so it'll be
25:01 - updated but for now it's almost complete
25:05 - and you can check out everything I'm
25:07 - doing there's instructions for how to
25:08 - get the the server up and running so
25:12 - that you can use it if you wanted to you
25:16 - know you could create posts and and have
25:21 - it all work just like you know it's
25:23 - working here so you'll need to get the
25:26 - servers a separate repository I at some
25:30 - point I may end up integrating the
25:32 - server into the project so you don't
25:34 - have to download two things but for now
25:36 - it's like this I think that's it so
25:40 - anybody have any questions about that
25:42 - I'll answer that otherwise I'm gonna
25:46 - take questions right now we'll do our
25:48 - question-and-answer session and I'd like
25:52 - to be definitely need to be finished
25:55 - with the stream before three it would
25:58 - give me a little extra time if we finish
26:02 - before three which would be cool but
26:03 - I'll certainly take questions up until I
26:07 - don't know let's say like well actually
26:09 - it's a different time zone for you all
26:12 - so I'm not gonna say three let's say
26:14 - probably
26:16 - for another 20 minutes I'm good to take
26:18 - questions so I don't know if it'll take
26:20 - that long but it's about 20 minutes so
26:23 - you have any questions go ahead and
26:24 - throw them in the in the chat now and
26:29 - I'll get to them and if you don't have
26:33 - questions but you can stick around that
26:34 - would be awesome too and then I'd love
26:37 - for you all to help me answer the
26:40 - questions and if you can't stick around
26:43 - for the question-and-answer - thank you
26:45 - for watching this was kind of odd that
26:47 - it was such a short string today if this
26:50 - is your first time watching it doesn't
26:52 - normally work like this usually we get
26:53 - at least an hour of real live coding in
26:56 - before we get to the question and answer
26:58 - so if you can join us for another stream
27:01 - later on you'll get kind of the real
27:03 - deal so alright let me go through the
27:08 - questions now if there are any ok Harsha
27:16 - did mention that react 16 is out all
27:20 - right and that's the react fibre it's
27:22 - also the one that has the new license
27:24 - I think reacts under MIT license now so
27:28 - and there's a there's other cool stuff I
27:31 - haven't gone through all the changes in
27:32 - the new version of react but one that I
27:36 - heard that I thought would have saved me
27:38 - some time and earlier project was that
27:40 - you don't need to have everything
27:42 - wrapped in a div so before I don't know
27:46 - if I have an example of this so that I
27:48 - could quickly show but before you would
27:54 - need alright we can show it on here so
27:56 - like in this return everything's wrapped
27:59 - in this one tabs right but what if we
28:01 - didn't want to wrap it what if we left
28:03 - off the tabs and we just had these two
28:05 - sibling components with no parent we
28:08 - would get an error before but I guess
28:10 - from what I've seen basically just from
28:13 - what I've seen people saying in Twitter
28:15 - you can now do that where you could have
28:18 - two sibling components with no parent
28:21 - and it'll work and you won't get an
28:23 - error so I think that's really cool I
28:25 - know especially when I'm trying to
28:27 - convert something that's not
28:28 - react and then make a react version of
28:31 - it you copy and paste a lot of code and
28:34 - you end up adding a lot of extra divs in
28:37 - there that you didn't have originally
28:39 - because you're trying to break
28:40 - everything out into components and when
28:43 - you do that you you need to wrap
28:44 - everything in div so this this I think
28:49 - will save time and be useful I don't
28:52 - know about the other changes I've heard
28:54 - there's some differences in the way you
28:56 - do server-side rendering and it's faster
28:59 - it's supposed to be faster than than
29:02 - before so anyway so it seems cool I'll
29:05 - have to maybe read up more on on react
29:08 - 16 so the next react project that we do
29:11 - will most likely use react 16 and then
29:14 - we can get into some more of the changes
29:17 - but I probably won't get into the new
29:19 - react project for a little while so next
29:22 - week when I come back we'll probably be
29:24 - working on project 1 again and that was
29:27 - that catechetical Institute site so
29:29 - we're gonna be doing some updates for
29:30 - that
29:31 - now that is react but it's we're doing
29:38 - some weird stuff because that's that
29:39 - uses some react and it uses some jQuery
29:43 - so I'll be I'm interested to revisit
29:47 - that and and try to remember like what I
29:50 - was thinking when I did that but
29:52 - hopefully we can improve upon what we
29:54 - had before and get some things done that
29:56 - we just you know ran out of time and
29:58 - couldn't get done ok you go back to the
30:03 - live chat John Henson says that looks
30:09 - more like the 80s yeah
30:12 - you're right yeah in the 90s like we
30:14 - actually had I mean Windows was already
30:17 - out in the 90s so you wouldn't really
30:19 - see this my original inspiration for
30:22 - this was the matrix you know where you
30:24 - had the screen with all the green
30:25 - letters and everything so that's where I
30:26 - got my my idea for the green at least
30:30 - and then I just looked on google fonts
30:33 - for the most old-school looking font I
30:35 - could find it looks kind of like
30:40 - pixelated you know
30:41 - anyway
30:45 - okay Santosh asks Heywood rerender the
30:49 - tabs also on tab change
30:52 - let me see let's go back it it will need
31:01 - to render in the sense and see right so
31:06 - it will need to change right this this
31:10 - underlined so I'm I'm assuming I didn't
31:14 - look behind the scenes to see what all
31:16 - is going on with this underlying and the
31:18 - effect here so to really know I have to
31:22 - look into what's material UI is doing in
31:25 - that tab component I don't know but I
31:28 - assume there's disree rendering going on
31:33 - probably doesn't have to rerender all
31:36 - the tabs each time but I wouldn't guess
31:39 - at least the the previous like the
31:41 - current tab and then the new tab that
31:43 - you're switching to I don't know look
31:46 - that's like kind of a little bit more
31:47 - technical than I usually get with
31:49 - material UI I don't often look into how
31:51 - the components are made unless I have
31:53 - two T John says awesome man I love the
32:00 - terminal look thank you
32:02 - actually my reviewers so I mentioned I'm
32:06 - doing this for a react manner or at
32:08 - udacity nanodegree and so you have to
32:11 - have your project reviewed until it you
32:14 - meet all the requirements and my first
32:16 - reviewer really love the retro kind of
32:18 - UI look so that was that was cool I was
32:22 - worried I'd sent a message when I sent
32:24 - it into review and I'm like listen the
32:26 - UI is like it's a joke it's just for fun
32:28 - so if it's an issue let me know I can
32:31 - change it but they were totally cool
32:33 - with it
32:41 - uh-huh a boo now says okay I just found
32:45 - where I belong huh so I'm assuming
32:48 - you're saying you belong here if that's
32:51 - the case that's awesome welcome
32:58 - all right cool so thank you a few more
33:01 - people are saying that they like like
33:04 - the app this one how it looks so cool
33:08 - glad you like it yes would probably
33:11 - never make anything for real like this
33:14 - it's just for fun but yeah I don't know
33:20 - it is cool
33:21 - it's like it's the Souchak you know
33:25 - let's see okay I banal says please what
33:32 - can you tell a beginner like me what
33:35 - preliminaries do I need in order to
33:37 - catch up I know just HTML CSS and I'm
33:40 - self-taught okay well I think the next
33:43 - step for you would be JavaScript so that
33:47 - will allow you to do a lot more like if
33:50 - you wanted to move on to react probably
33:53 - should learn at least some basics of
33:54 - JavaScript first if not more but pretty
33:58 - much anything anything more advanced in
34:01 - terms of front-end development anything
34:03 - more advanced than HTML CSS you get into
34:06 - JavaScript land so you can check out you
34:10 - know free code camps lessons if you
34:13 - wanted to or if there's a lot of places
34:15 - that have materials free materials to
34:17 - learn JavaScript so depending on how you
34:20 - like to learn there's something out
34:21 - there for you there's a great book
34:23 - called you don't know Jay s and it's
34:26 - available for free on github I don't
34:28 - really have the link right now but if
34:31 - you search for the title of that book
34:33 - the whole thing is available on github
34:35 - for free so if you liked reading that's
34:38 - it if you like in browser exercises you
34:41 - know go with free code camp or code
34:45 - Academy if you like YouTube videos
34:47 - there's a ton of great JavaScript
34:49 - YouTube videos on our Channel
34:51 - so bo Carnes does a lot of JavaScript
34:54 - tutorial videos all the way from the
34:56 - basics to more advanced stuff and then
35:00 - there's a lot of other YouTube channels
35:01 - that have tutorials as well so so check
35:04 - that out and then you can always you
35:06 - know come in to live chat when I'm
35:08 - streaming and ask any questions that you
35:09 - want or you can you know send me a send
35:13 - me message on Twitter or something I'd
35:14 - be happy to help you out as much as I
35:16 - can Alexander says just to send love and
35:23 - I'm on my way to work well awesome I
35:26 - have a great day at work thanks for
35:28 - stopping in let's see John B says I
35:34 - can't share the link but search in
35:37 - Google github free programming books and
35:39 - the first link or second link has all
35:41 - sorts of free books including you don't
35:43 - know J s alright cool thank you for that
35:47 - John B alright so yeah I'm really glad
35:51 - that we could help let's see oh one more
35:58 - thing I want to say before I wrap things
36:00 - up and if you if someone puts in another
36:02 - question I'll answer that as well but
36:06 - this is totally not programming related
36:09 - but it may help you with your
36:10 - programming so if you like to listen to
36:12 - music while you while you code I just
36:16 - found out I got an email from Spotify
36:19 - about a new playlist that they have and
36:21 - it's called your time capsule and so
36:24 - they I don't know how they've figured
36:27 - out I mean maybe they have my age but
36:30 - somehow they figured out like what time
36:31 - period would be nostalgic for me
36:34 - so they've suggested all these nineties
36:37 - songs for me and so far the playlist is
36:40 - is pretty spot-on in terms of songs that
36:44 - I did listen to back in the day and that
36:47 - I still like so so I don't know about
36:52 - you but I'm always looking for new music
36:53 - yeah sometimes it's a struggle to find
36:56 - new things you know so long just get old
36:59 - after a while so anyway check that out
37:01 - the your time
37:02 - so playlist I don't know I think the
37:06 - right music can really help you be
37:08 - productive when you're coding so see me
37:14 - check that out okay at E John says what
37:17 - was the biggest challenge with learning
37:18 - Redux probably I'm like figuring out how
37:32 - to organize the state like so this the
37:34 - store so in the class I was taking it
37:39 - said like you should figure out how you
37:41 - want to structure your store first and I
37:46 - didn't really know enough that I felt
37:48 - comfortable doing that so I started
37:50 - doing the project and then I had to
37:52 - restructure the store you know like
37:55 - several times before I got it to the
37:57 - point you know where it's like this so
37:59 - that was frustrating for me that I had
38:02 - to constantly keep changing my reducers
38:05 - and then my actions accordingly to
38:10 - restructure this store and so I got it
38:12 - to this point where a lot of all my post
38:17 - stuff is here and then each view is
38:21 - pulling from here and then when
38:23 - something updates it updates
38:25 - automatically in every view you know
38:27 - which is the whole point of Redux but
38:30 - coming from a place where like each
38:32 - component has their own state and you
38:36 - might have a parent component so you
38:38 - could share state it was it was weird
38:40 - it was definitely different so it just
38:43 - it's what we want to get used to that
38:45 - idea of like you're not directly
38:49 - changing things you know like within a
38:51 - component it's very simple to say okay
38:53 - I'm gonna change state it's just right
38:56 - there you change it but now it's like a
38:58 - roundabout way of like I'm going to fire
39:01 - off an action and there'll be a reducer
39:04 - and then the state will change and then
39:06 - the store will change and then that'll
39:08 - get passed down and then it'll get put
39:11 - into props for each component and so
39:13 - there's like this whole flow
39:16 - that happens that it just took a lot for
39:19 - me to get my head around that I mean I
39:21 - know that's not really as a specific
39:23 - answer but Redux is like it only works
39:28 - if all the parts are in place it's
39:30 - really hard to just take a chunk of
39:32 - Redux and try to learn it you have to
39:34 - learn the whole thing at once because
39:35 - you can't just say like all right I'm
39:36 - gonna learn actions well actions by
39:39 - themselves will not do anything you
39:41 - can't just learn reducers right you have
39:43 - to learn it all so that was it was tough
39:45 - to just get my mind around the entire
39:47 - thing so there was a ton of refactoring
39:50 - that went into it and rethinking
39:53 - everything but eventually I eventually I
39:56 - just found myself like being able to
39:58 - delete huge portions of things to say
40:02 - like alright I I was knowing it like
40:04 - this but I don't need all this stuff so
40:07 - it just took a lot to get down to that
40:09 - it took me more time and I thought it
40:12 - would but now I think I'm finally you
40:20 - know getting it I would I'm like by no
40:24 - means an expert right this is my first
40:26 - crack at it so I'm sure there's a lot of
40:29 - things I could be doing better but but
40:33 - so far the reviewers have said that I've
40:35 - structured my reducers you know well and
40:38 - my storage structured well with the
40:39 - exception of the redundancy with the
40:41 - comments so I'm happy about that
40:47 - let's see
40:53 - I got some these new questions in here
41:06 - Swallow says kulap and I don't know if
41:09 - it is just me but I like the theme more
41:12 - than others used for the editor at least
41:15 - for presentation like this what idea is
41:23 - do you mean this this theme I mean this
41:30 - is the this is dev tools chrome dev
41:34 - tools and with the redux extension and
41:38 - it's just kind of like a middleware so
41:41 - you have to tie this in when you first
41:44 - initialize your your store dart says
41:53 - what IDE would you suggest I don't
41:55 - really use an IDE per se but my code
41:58 - editor is Adam I also use Visual Studio
42:00 - code I like them both
42:10 - santosh acid doesn't help in terms of
42:12 - performance Redux there's just plain
42:14 - reacts I don't I don't know I haven't
42:19 - tested it out myself and I haven't
42:21 - really read anything about it whether or
42:23 - not Redux is more performant than just
42:26 - handling state you know within
42:28 - components depending on the size and
42:32 - complexity of your application it can
42:35 - help keep everything straight reduce
42:40 - bugs because you don't have like you're
42:43 - not trying to pass down state through a
42:45 - ton of child components and you you
42:49 - never like mutate the store directly so
42:52 - there's it's almost like there are these
42:53 - safeguards in place so that things are
42:57 - consistent in terms of the state you
43:00 - know throughout so I don't know if that
43:04 - translates to any performance increase
43:07 - but it I it simplifies development I
43:13 - would think for a small application to
43:14 - definitely make things more complicated
43:16 - than it needs to be but for something
43:17 - larger and complex it can just simplify
43:20 - the way you reason about it
43:29 - t-jon says awesome job man thank you I
43:32 - appreciate that
43:35 - okay John B says asks if I know UML
43:40 - diagrams might help in future for
43:42 - helping map out how the stores should be
43:44 - structured actually no I've never heard
43:47 - of UML diagram so I'll have to check
43:50 - those out
43:51 - let me alright so I I just did a Google
44:00 - search for that and I'm gonna leave that
44:01 - up on my screen so when I come back on
44:03 - Monday out it'll be right there and I
44:05 - can check that out so anyway it's just
44:10 - about the twenty minutes that I said I
44:13 - would do for for questions so I'm gonna
44:16 - wrap things up now thank you so much for
44:18 - watching sorry that it was not a normal
44:21 - stream and shorter than usual but still
44:26 - got some questions answered and
44:27 - hopefully you know some of you guess on
44:29 - some help and a little a little intro to
44:33 - redux maybe let's see yeah that's it I
44:38 - should be back on Monday Monday
44:40 - afternoon at some point or at least
44:43 - afternoon in Eastern Time but have a
44:46 - great weekend everyone and I'll see you
44:48 - on Monday

Cleaned transcript:

hey everybody welcome to livestreaming with Jessie and today is going to be probably one of the shortest streams that I've done since I first started so I had something that was supposed to happen at 500 and now it got bumped way up to 330 and it would take me a little while to drive there so that means we have we got to be done pretty quickly so if you've watched before you know usually the streams go like at least an hour and a half so what I it's gonna be a little different than normal for today's stream so I wanted to implement some material design tabs and like this I thought it was going to take me a lot longer than that really did so since I knew it had to be a short stream I started working on it before the stream and thinking that I could get some of it out of the way and then just finish it up and I ended up getting it finished so what I figured we'll do through the stream is first part of the stream I'll just go through how I implemented it and it was it was so easy I don't know why I thought it was gonna be more difficult than this but I'll run through how I implemented it and of course I'll answer any questions about it then I want to demo another react project that I'm almost finished with so I just have just like one or two like tiny bugs that I need to fix but basically is completely functional so I want to demo that for you that's the the react project I was working on for that Udacity nano degree and then after that we'll do our normal question and answer session and then we'll finish up so I wish I had I had already scheduled the stream before I knew that I would have to be out of here around 300 so otherwise I would have scheduled the stream earlier but it I think it worked out so let's get to it let me show you first of all I'll show you what it looks like so you can see you know we have we have tabs now so just to give you an idea of what it what it did look like if you don't remember let me pull it over from the other screen so this is what we had so we didn't if it wasn't really tabs it was just kind of like a menu there was nothing nothing to indicate what tab you were actually on so I think we had talked about changing these at some point but I never got around to it so now not only does it look more like material design should look I mean normally you wouldn't have this many tabs but you know we're kind of stuck with this many categories right now I was able to remove one category but now there's actually an indication of what's happening so you have this little underline so I think that's nice and also by default it defaults to the franciscans before we had the default to all but I talked to one of the designers so the graphic designers and he thought it was a little bit confusing to have all of the logos right there and they were kind of intermixed so they thought this might be a better better way to start out and now that we have an indicator it makes more sense so users can still get all over you know once but now it's just not quite as many you're right away so that's what we've well that's what I've done today among other things and this is actually you can see I'm on the live version of this site so if you want to check it out it's our C dot Franciscan University slash logos so you can check that out I think this is going to go it's going to go live you know obviously it's already live in the sense that it's available online but I'm I'm actually gonna link to it for university employees on Monday so think I've got you know all the major things completed I just tested out both the forms on the live version they were going where they were supposed to go all the data I probably I think the only thing I want to do is set up some sort of backup for the data so it may end up just being a Google sheet that gets populated but I'm open to other ideas so if anybody has an idea for a way for there to be a backup of all the form data that gets sent so I just need you know the info from the fields somewhere in some other place other than just being sent by email and being sent to the project management system so if you all have any ideas of something that's really kind of lightweight easy to implement let me know otherwise I'm just going to send it to a Google sheet and that'll help our project manager out a lot just to be able to doublecheck have a backup to tell if you know maybe some slip through the cracks or just to get some data it's a lot easier to look at a Google sheet and see how many people requested what services then to try to go through our project management system so alright so let me check the live chat just quickly there's some some of you saying hi hey everyone santosh says I love the material design good I'm glad glad you liked it gee CPR says the logo designs look great awesome I'm glad you like I can't take credit for them our graphic designers they don't hide skillful mess says congrats on 100k and 200k thank you thank you yeah we got if you haven't seen the video already check out the video Quincy put out earlier in the week and it's we got a silver play button from from Google so really cool you get that when you pass up a hundred thousand subscribers rollin says you could add it to sequel light database harsh it says firebase from back up okay cool I'll look into those I'd like to get implemented as soon as I can but actually I'm interested in firebase I've had a few people recommend it to me so I'll check those out all right well let me let me get to the code now so I think the easiest way to do this is just going to be to bring up github just to see the difference so obviously right I I added to our package JSON because you know we get if you tried to download this project you know we get like warnings and stuff are our linter won't work if we have things basically functions that we're using that we haven't declared so anyway that's all this is I just added it to the the package JSON it's just yet another thing to ignore and so I've added a handle of tab change which it just simply changes the state so not really a big deal before I was changing the state like right inside the render but I vaguely remember someone saying at some point that you shouldn't do it like that so I pulled it out into this handle that change function all right so that's that's just basic stuff this is where the change actually happened so let me show you here's what we had before so we had a ul with Li so each each menu item was an Li so basically we just had a click handler that when you clicked on it it was setting this the active tab you know based on whatever that value was the tab key and then that would change which you saw in terms of logos now the problem when I initially looked at the tabs from material UI and why I thought it would take a long time is so check this up so the way these tabs work or you have your tab but then within the tab you have markup and this is what gets displayed when you change tabs so I thought that's not gonna work with what we're doing right because we were using a masonry component and filtering things right so I thought that it's just going to be way too much work to redo everything like this but when I started to get into it earlier today I thought maybe it's worth a shot to just leave this out and see if we can put the click you know the click handler here where we have this on change and see what what happens see if that would work and it actually did work and that's why I was able to get it done you know so quickly it was like less than 20 minutes and I will here in my code go here we go so here's what I ended up doing and it actually is you know even you know more concise so that ul now becomes the tabs component are what used to be our click handler now becomes the on change and then instead of changing the state here we just call this handle tab change and we change the state up there okay so we're passing it right the value from this from tabs and then we're setting the state of active tab to that value and then here we're adding instead of an L is we're adding tabs and then we simply took the same thing that we had you know we had on tabs right we were put inserting into this a tag tabs key and I was giving us the the actual display of what users were seeing in terms of menu items and now we've put that same thing in as the label all right we've had it we have the same value our value as is the tab key and then we've just added the key right because anytime you you know iterate over something in react and have multiple elements here you need to have a key right so that's basically it and and it worked so that's all we had to do and because we already you know we already had it all set up so that the logos show up based on the value of the active tab and state all we had to do was make sure that when we click a tab we change that value so we change the state and that was it it works so this is actually how it came up pretty much by default the only other thing I had to change so we had a little bit of space on each side and that was because originally we had we had all of this inside a column in a row and that put our padding on the sides there so I just removed this from being inside a column in a row and I moved this name hide on medium and down this class I move that directly on to the tab so it's I don't need him and down and that gives us the drop down so when it gets too small you see it starts to get really crowded here and then it drops out and then we get our drop down which still works I mean it just changes state so that was it it was it was so simple so sorry that you know normally I do code live obviously it's that's the whole point of the show but I just like I said this ended up being way easier than I thought and I finished it before the stream started so if anyone has any questions about how that worked or what I did I'll take them right now and then I'll do the demo for my other project so let me just scan through the live chat quickly Zubair says suggestions continue this project further with react native that would be cool actually I really like that idea I'm I'm working on a react native project right now so after I finished that maybe I'll give it a shot at using doing this and react native that would be really cool to be able to tell you know users that if they wanted to they could have this as an app as well so maybe I'll give that a shot let's see hi John handsome said and react is supposed to be difficult for the easy stuff yeah I've heard that before when people's the Arak reactor might's hard stuff easy and easy stuff hard tea John says nice tab is a controlled component you're lifting state up yeah so if you check out even a material you I so I went with I went with the controlled example of the tabs so there's there are different ways you can do it but this one fit I think the best for what I needed it for so yeah basically the tab is a controlled component and by that and correct me if I'm explaining this wrong but normally you have inputs as controlled components in react very rarely would you not want to have an input as control component but in this case we have this tab which is not exactly an input but it functions in the same way in this case so the value of the tab is based on the state value and then when you click a tab it changes state value right and then it renders and the tab value gets updated right so you're not directly changing the value of tab with the click the click changes state and then the change is they triggers a change in the value here so that's basically what a controlled component is and that's normally how you would do forms so if you notice all the forms that we've done they work like that it's also kind of cool that when you go when you need to work with that form data you already have it there in state right as you know it's already there is an object so I I think it makes working with forms a little bit easier than normal but anyway that's that's controlled controlled component alright so let me show you and I'll get ready for this so brace yourselves and let's let's take a trip back in time and imagine what it would be like if we had react back in let's just say the 90s and we wanted to make a blog with comments and voting right so here's what it would be like in my mind so so here is here is my latest react project and I use Redux for this so with Redux we have a store and that's the source of truth for the state throughout the application so I did use some local state for this mainly for the inputs so that they were controlled right and I may have a UI element somewhere in here that uses yeah actually I do so I have some things that appear or disappear based on the state and that's best handled with local state so anyway it's really basic whoops I don't even know what I clicked on let me go back so here you have post right here so post title it tells you the author you can vote on it so I can vote to increase the score or do increase the score tells me how many comments there are I can delete the post if I want I can add new posts so we can't oops actually I just saw something weird it's using a different font here I didn't know that I have to change it and now we have our new post and I can vote it up and you can see as I vote it up it's changed the order because by default it puts the posts that have the highest score here but we can change that and go lowest score first or we can go date first so the newest first or the oldest we can check out more about this post so let's go to this one since it has comments so here we have the post here's the content the body of the post I could edit it if I wanted to and if I edited it oops is it broken did I break my submit ha ha I did make some changes yesterday and then committed them without testing so it's possible that I broke it and I think I did in fact whoa Fiona said 445 oh okay actually I did know about that I just think it's chance to fix it yet so anyway normally you'd click Submit and then immediately you'd see the change let's see we have our comments we can actually sort our comments the same way so we can sort by votes or by date and then you can edit a comment in line like this the comments should work so let's add something submit there we go so we added it added the comment there it could add some votes and we could delete comments if we want and then at the bottom we could we could add a new comment so just add so now we have a new comment let me think the only other thing we could sort we have categories so we sort by categories so that's it that's my that's my project and if you want to check out what's going on behind the scenes there is a Redux I get plugin or something for for Chrome what do they call them for Chrome extension a redux extension so we can see what's going on with the state so here's how I have my state organized right we have our posts each post has a unique ID and comments also have unique IDs we're also grabbing the categories now I have the comments here as well because initially I did not put the comments with the posts is it's two different API calls to get them so I may end up changing this so that it's not redundant in that we have the same comment data repeated there so once I figure out a way to make everything work with that maybe I'll do it we'll see if I have time but right now it works as is our sorting also this is in the in the store so how we want to sort both the posts and the comments is kept in in the store so this is kind of a cool a cool way to see what's going on so we can see let's make some changes and then it'll show you what changed so right now the only thing that changed is that we we updated from 7 to 8 in our our votes core for that particular post so really cool shows you what action was set off anyway so this is my kind of fun fun projects it was interesting the first thing I've ever done with Redux so I've learned a lot about Redux and that's kind of why I went with this minimal UI I've been wanting to do something like this with a really like kind of oldschool looking UI and I thought this project would be great because I had so much to learn with using Redux for the first time I didn't want to get caught up in the UI so much so this is very simple not that I didn't put any thought into the UI it did you undergo some revisions but because it's mainly text base there's a lot of things I don't worry about like like borders you know it for luck cards and you know what I'd normally do or worrying about colors right there's all just one color so anyway I just wanted to share that with you all if you want to see the code for this it's on my github profile so if you check it out to get up its Jesse or waggle its my github profile and then its Udacity react nd readable so I will be working on this you know so it'll be updated but for now it's almost complete and you can check out everything I'm doing there's instructions for how to get the the server up and running so that you can use it if you wanted to you know you could create posts and and have it all work just like you know it's working here so you'll need to get the servers a separate repository I at some point I may end up integrating the server into the project so you don't have to download two things but for now it's like this I think that's it so anybody have any questions about that I'll answer that otherwise I'm gonna take questions right now we'll do our questionandanswer session and I'd like to be definitely need to be finished with the stream before three it would give me a little extra time if we finish before three which would be cool but I'll certainly take questions up until I don't know let's say like well actually it's a different time zone for you all so I'm not gonna say three let's say probably for another 20 minutes I'm good to take questions so I don't know if it'll take that long but it's about 20 minutes so you have any questions go ahead and throw them in the in the chat now and I'll get to them and if you don't have questions but you can stick around that would be awesome too and then I'd love for you all to help me answer the questions and if you can't stick around for the questionandanswer thank you for watching this was kind of odd that it was such a short string today if this is your first time watching it doesn't normally work like this usually we get at least an hour of real live coding in before we get to the question and answer so if you can join us for another stream later on you'll get kind of the real deal so alright let me go through the questions now if there are any ok Harsha did mention that react 16 is out all right and that's the react fibre it's also the one that has the new license I think reacts under MIT license now so and there's a there's other cool stuff I haven't gone through all the changes in the new version of react but one that I heard that I thought would have saved me some time and earlier project was that you don't need to have everything wrapped in a div so before I don't know if I have an example of this so that I could quickly show but before you would need alright we can show it on here so like in this return everything's wrapped in this one tabs right but what if we didn't want to wrap it what if we left off the tabs and we just had these two sibling components with no parent we would get an error before but I guess from what I've seen basically just from what I've seen people saying in Twitter you can now do that where you could have two sibling components with no parent and it'll work and you won't get an error so I think that's really cool I know especially when I'm trying to convert something that's not react and then make a react version of it you copy and paste a lot of code and you end up adding a lot of extra divs in there that you didn't have originally because you're trying to break everything out into components and when you do that you you need to wrap everything in div so this this I think will save time and be useful I don't know about the other changes I've heard there's some differences in the way you do serverside rendering and it's faster it's supposed to be faster than than before so anyway so it seems cool I'll have to maybe read up more on on react 16 so the next react project that we do will most likely use react 16 and then we can get into some more of the changes but I probably won't get into the new react project for a little while so next week when I come back we'll probably be working on project 1 again and that was that catechetical Institute site so we're gonna be doing some updates for that now that is react but it's we're doing some weird stuff because that's that uses some react and it uses some jQuery so I'll be I'm interested to revisit that and and try to remember like what I was thinking when I did that but hopefully we can improve upon what we had before and get some things done that we just you know ran out of time and couldn't get done ok you go back to the live chat John Henson says that looks more like the 80s yeah you're right yeah in the 90s like we actually had I mean Windows was already out in the 90s so you wouldn't really see this my original inspiration for this was the matrix you know where you had the screen with all the green letters and everything so that's where I got my my idea for the green at least and then I just looked on google fonts for the most oldschool looking font I could find it looks kind of like pixelated you know anyway okay Santosh asks Heywood rerender the tabs also on tab change let me see let's go back it it will need to render in the sense and see right so it will need to change right this this underlined so I'm I'm assuming I didn't look behind the scenes to see what all is going on with this underlying and the effect here so to really know I have to look into what's material UI is doing in that tab component I don't know but I assume there's disree rendering going on probably doesn't have to rerender all the tabs each time but I wouldn't guess at least the the previous like the current tab and then the new tab that you're switching to I don't know look that's like kind of a little bit more technical than I usually get with material UI I don't often look into how the components are made unless I have two T John says awesome man I love the terminal look thank you actually my reviewers so I mentioned I'm doing this for a react manner or at udacity nanodegree and so you have to have your project reviewed until it you meet all the requirements and my first reviewer really love the retro kind of UI look so that was that was cool I was worried I'd sent a message when I sent it into review and I'm like listen the UI is like it's a joke it's just for fun so if it's an issue let me know I can change it but they were totally cool with it uhhuh a boo now says okay I just found where I belong huh so I'm assuming you're saying you belong here if that's the case that's awesome welcome all right cool so thank you a few more people are saying that they like like the app this one how it looks so cool glad you like it yes would probably never make anything for real like this it's just for fun but yeah I don't know it is cool it's like it's the Souchak you know let's see okay I banal says please what can you tell a beginner like me what preliminaries do I need in order to catch up I know just HTML CSS and I'm selftaught okay well I think the next step for you would be JavaScript so that will allow you to do a lot more like if you wanted to move on to react probably should learn at least some basics of JavaScript first if not more but pretty much anything anything more advanced in terms of frontend development anything more advanced than HTML CSS you get into JavaScript land so you can check out you know free code camps lessons if you wanted to or if there's a lot of places that have materials free materials to learn JavaScript so depending on how you like to learn there's something out there for you there's a great book called you don't know Jay s and it's available for free on github I don't really have the link right now but if you search for the title of that book the whole thing is available on github for free so if you liked reading that's it if you like in browser exercises you know go with free code camp or code Academy if you like YouTube videos there's a ton of great JavaScript YouTube videos on our Channel so bo Carnes does a lot of JavaScript tutorial videos all the way from the basics to more advanced stuff and then there's a lot of other YouTube channels that have tutorials as well so so check that out and then you can always you know come in to live chat when I'm streaming and ask any questions that you want or you can you know send me a send me message on Twitter or something I'd be happy to help you out as much as I can Alexander says just to send love and I'm on my way to work well awesome I have a great day at work thanks for stopping in let's see John B says I can't share the link but search in Google github free programming books and the first link or second link has all sorts of free books including you don't know J s alright cool thank you for that John B alright so yeah I'm really glad that we could help let's see oh one more thing I want to say before I wrap things up and if you if someone puts in another question I'll answer that as well but this is totally not programming related but it may help you with your programming so if you like to listen to music while you while you code I just found out I got an email from Spotify about a new playlist that they have and it's called your time capsule and so they I don't know how they've figured out I mean maybe they have my age but somehow they figured out like what time period would be nostalgic for me so they've suggested all these nineties songs for me and so far the playlist is is pretty spoton in terms of songs that I did listen to back in the day and that I still like so so I don't know about you but I'm always looking for new music yeah sometimes it's a struggle to find new things you know so long just get old after a while so anyway check that out the your time so playlist I don't know I think the right music can really help you be productive when you're coding so see me check that out okay at E John says what was the biggest challenge with learning Redux probably I'm like figuring out how to organize the state like so this the store so in the class I was taking it said like you should figure out how you want to structure your store first and I didn't really know enough that I felt comfortable doing that so I started doing the project and then I had to restructure the store you know like several times before I got it to the point you know where it's like this so that was frustrating for me that I had to constantly keep changing my reducers and then my actions accordingly to restructure this store and so I got it to this point where a lot of all my post stuff is here and then each view is pulling from here and then when something updates it updates automatically in every view you know which is the whole point of Redux but coming from a place where like each component has their own state and you might have a parent component so you could share state it was it was weird it was definitely different so it just it's what we want to get used to that idea of like you're not directly changing things you know like within a component it's very simple to say okay I'm gonna change state it's just right there you change it but now it's like a roundabout way of like I'm going to fire off an action and there'll be a reducer and then the state will change and then the store will change and then that'll get passed down and then it'll get put into props for each component and so there's like this whole flow that happens that it just took a lot for me to get my head around that I mean I know that's not really as a specific answer but Redux is like it only works if all the parts are in place it's really hard to just take a chunk of Redux and try to learn it you have to learn the whole thing at once because you can't just say like all right I'm gonna learn actions well actions by themselves will not do anything you can't just learn reducers right you have to learn it all so that was it was tough to just get my mind around the entire thing so there was a ton of refactoring that went into it and rethinking everything but eventually I eventually I just found myself like being able to delete huge portions of things to say like alright I I was knowing it like this but I don't need all this stuff so it just took a lot to get down to that it took me more time and I thought it would but now I think I'm finally you know getting it I would I'm like by no means an expert right this is my first crack at it so I'm sure there's a lot of things I could be doing better but but so far the reviewers have said that I've structured my reducers you know well and my storage structured well with the exception of the redundancy with the comments so I'm happy about that let's see I got some these new questions in here Swallow says kulap and I don't know if it is just me but I like the theme more than others used for the editor at least for presentation like this what idea is do you mean this this theme I mean this is the this is dev tools chrome dev tools and with the redux extension and it's just kind of like a middleware so you have to tie this in when you first initialize your your store dart says what IDE would you suggest I don't really use an IDE per se but my code editor is Adam I also use Visual Studio code I like them both santosh acid doesn't help in terms of performance Redux there's just plain reacts I don't I don't know I haven't tested it out myself and I haven't really read anything about it whether or not Redux is more performant than just handling state you know within components depending on the size and complexity of your application it can help keep everything straight reduce bugs because you don't have like you're not trying to pass down state through a ton of child components and you you never like mutate the store directly so there's it's almost like there are these safeguards in place so that things are consistent in terms of the state you know throughout so I don't know if that translates to any performance increase but it I it simplifies development I would think for a small application to definitely make things more complicated than it needs to be but for something larger and complex it can just simplify the way you reason about it tjon says awesome job man thank you I appreciate that okay John B says asks if I know UML diagrams might help in future for helping map out how the stores should be structured actually no I've never heard of UML diagram so I'll have to check those out let me alright so I I just did a Google search for that and I'm gonna leave that up on my screen so when I come back on Monday out it'll be right there and I can check that out so anyway it's just about the twenty minutes that I said I would do for for questions so I'm gonna wrap things up now thank you so much for watching sorry that it was not a normal stream and shorter than usual but still got some questions answered and hopefully you know some of you guess on some help and a little a little intro to redux maybe let's see yeah that's it I should be back on Monday Monday afternoon at some point or at least afternoon in Eastern Time but have a great weekend everyone and I'll see you on Monday
