With timestamps:

00:00 - this week is a
00:02 - struggle
00:14 - [Music]
00:22 - [Music]
00:31 - my problem right now is simply the order
00:33 - i'm not sure what should be done after
00:35 - what thing and when i
00:38 - have a list
00:39 - that i prepared what i need to do that
00:41 - still needs to be implemented um still
00:44 - i'm not sure
00:46 - what should be done after which thing
00:49 - and this makes things problematic
00:51 - because sometimes i start implementing a
00:53 - thing that without other thing wouldn't
00:56 - work and so that's why
00:59 - i get stuck um
01:00 - and
01:01 - even if i find the solution or if i know
01:04 - from react recommendation how to
01:06 - implement a given thing how to connect
01:08 - the components how to make it
01:11 - display despite all these things
01:16 - i find the moments when i get stuck
01:17 - because the order was wrong just because
01:20 - something else should have been
01:22 - implemented fast
01:24 - in order to make this new thing that i'm
01:26 - implementing working so this top level
01:29 - logic on the level of pages and
01:31 - connecting everything with storage turns
01:33 - out to be the hardest point in this
01:35 - project
01:43 - [Music]
01:48 - [Music]
02:04 - it is a process and
02:06 - you know the more i code
02:08 - the better you will be added
02:11 - i hope
02:17 - [Music]
02:19 - when i get stuck and i don't know what
02:21 - to do next
02:22 - with the code which option to implement
02:24 - what to do
02:25 - and why i get a bug like that
02:28 - i reach to these steps
02:31 - i write down the plan on paper and i try
02:34 - to write it down with the smallest steps
02:37 - so what i should do next
02:40 - what generally should be done what's the
02:42 - order of these things at least what i
02:44 - think that the order should be
02:46 - i talk with other programmers i consult
02:48 - the things on various forums i look for
02:51 - tutorials that have similar projects i
02:54 - look for tutorials that solve similar
02:57 - problems
02:58 - i assertions like overflow or i post on
03:01 - twitter or try to look for the solution
03:04 - on forums
03:05 - and sometimes i simply take a break from
03:08 - a given project
03:09 - from a given problem i try to go to the
03:12 - next issue that can be dealt with or i
03:15 - go for a walk and you what do you do
03:18 - when you have the problems with focus
03:20 - and what to do next in your project
03:22 - please share your solutions
03:24 - in the comments below
03:26 - [Music]
03:41 - i want to make each image
03:44 - that is
03:45 - loaded to the recipe
03:48 - the same size and to be displayed as
03:52 - cover
03:53 - so this is another step that i have to
03:55 - take right now
03:58 - [Music]
04:45 - velocity is not a function
04:48 - what
04:49 - what does it even mean and how to solve
04:51 - it
05:03 - please
05:05 - [Music]
05:12 - the top of the ground
05:16 - [Music]
05:37 - yes
05:44 - [Music]
06:01 - to go for a walk or to continue
06:04 - coding that is a question
06:08 - especially
06:09 - if you are struggling with some problem
06:11 - for the last few hours
06:14 - this is my answer
06:17 - [Music]
06:24 - of the ground
06:27 - [Music]
06:55 - [Music]
07:20 - so
07:25 - [Music]
08:05 - [Music]
08:13 - this project is the example
08:15 - how the decisions previously made
08:17 - influence the time needed
08:19 - for the final implementation
08:21 - why
08:22 - to give you some examples if i hadn't
08:24 - decided to implement images i would save
08:28 - tons of time you have to resize and crop
08:32 - the images in order to allow the users
08:35 - to
08:36 - add more recipes because local storage
08:40 - has their limits if not
08:44 - a user will be able to upload just only
08:46 - a few recipes
08:48 - because of the huge photo but because i
08:50 - believe that images are crucial when it
08:53 - comes to recipes
08:54 - and you eat it with your eyes i think
08:56 - that this is another thing that i will
08:58 - resign from
08:59 - another example of how previous
09:01 - decisions
09:02 - influence the way influence the time you
09:05 - have to devote to
09:07 - implement a project is using materialize
09:10 - in this project i used materialize in
09:13 - order to save time but right now i'm not
09:16 - sure if i wouldn't have to deal with
09:18 - velocity is not a function ever
09:20 - that's hard to debug because it is
09:23 - connected with materialize
09:26 - and with the ui components that i use
09:28 - from there
09:29 - [Music]
09:33 - i want to finish this project as soon as
09:36 - possible and make it
09:39 - decent um
09:41 - that's why
09:42 - i wanna resign from those things that i
09:45 - decided that at this stage they are too
09:47 - overwhelming for me
09:49 - because they adapt to the overall
09:52 - complexity of the project and they are
09:55 - not in the
09:56 - project's requirements
09:58 - this way i'm resigning from search
10:01 - why for example from search well i
10:06 - wrote down the plan how to implement it
10:08 - what would be needed in order to do it
10:11 - and there are many steps that will take
10:14 - a lot of time right now to finish
10:16 - that extra functionality that can be
10:18 - added later in some iterations
10:21 - each step from clicking the search icon
10:25 - to
10:26 - displaying the result
10:28 - and
10:30 - going to give the result
10:32 - and later coming back to home page or to
10:35 - the result list
10:36 - everything that should be referred
10:39 - and designed and implemented not just
10:42 - only in logic but also in the ui that
10:45 - would be user friendly
10:48 - it's possible but it takes time that i
10:51 - don't want to devote right now
10:53 - maybe it's because i'm a bit fed up with
10:55 - this project and when i really finished
10:57 - it because it was quite hard but for the
10:59 - time being search is not needed
11:02 - sometimes you have to give up in order
11:04 - to have the power to come back to the
11:06 - project
11:07 - especially if it's not for the client
11:09 - because if you decided that it should be
11:11 - designed this way
11:13 - you can also resign from a given point
11:15 - at a given iteration
11:17 - it's sunday in the evening this is how
11:19 - it looks now
11:20 - i can add a recipe
11:25 - add a photo
11:46 - add the ingredients
12:01 - some instructions
12:10 - and save the recipe
12:12 - automatically it is added to the list
12:15 - and the list is created alphabetically
12:18 - so if it was fries it's after b and
12:21 - before
12:23 - and when i come into this
12:26 - recipe
12:27 - i can edit it or delete it
12:29 - if i edit it
12:31 - i can
12:33 - resign from tags
12:35 - add some tags
12:47 - still i need to fight
12:50 - with this overlap
12:53 - this will be the next step
12:56 - i can change the photo
13:01 - and save the recipe if a user wants to
13:03 - delete a recipe they click delete
13:07 - and when they reassure this recipe is no
13:10 - longer in the storage in the local
13:12 - storage and this fries recipe is no
13:15 - longer here looking at the user stories
13:18 - um from number one
13:21 - um i can create recipes that have the
13:23 - names and ingredients yes i can i can
13:25 - see the index view where the names of
13:28 - all recipes are visible yes i can it's
13:30 - the home page i can click into any of
13:32 - those recipes to view it yes i can and
13:34 - then i go to the detailed view i can
13:36 - edit the recipes yes i can this is what
13:39 - we did
13:40 - and i can delete the recipes
13:43 - yes we could delete the recipes all the
13:46 - recipes i add are saved in my browser's
13:48 - local storage if i refresh the page
13:50 - these recipes will still be there yes
13:53 - it's done
13:55 - if i refresh
13:56 - there's a disaster
13:58 - here so looking at these user stories
14:00 - while they are implemented but
14:04 - still the app
14:05 - needs a lot of work i mean
14:09 - it could be better
14:10 - it shows that
14:12 - fulfilling user stories doesn't mean
14:15 - that the project is done
14:17 - next week i'm going to test this project
14:20 - once again
14:21 - and to go to smaller js apps
14:24 - and
14:25 - re-establishing my js phenology
14:29 - knowledge
14:30 - learning to code has to do a lot with
14:33 - self-awareness i think that is also a
14:35 - courage to experiment and
14:37 - to choose to try
14:39 - to
14:41 - take the knowledge from different
14:43 - sources
14:44 - having a major plan of course in it like
14:47 - having the main path that you want to
14:48 - follow so i want to go straight away
14:51 - to the next react
14:53 - free code cam project
14:55 - because i want to work more with js and
15:00 - stop for a moment on some smaller
15:02 - project
15:04 - or some smaller projects
15:06 - with javascript
15:07 - to make me stronger in javascript
15:11 - and to make me think clearer in
15:14 - javascript this is what i feel that i
15:16 - need right now
15:18 - let's check that we will see if it was
15:20 - the right move keep on doing remember
15:22 - that learning to code is not a race you
15:25 - get your own path your own journey and
15:29 - take the decisions that you feel that
15:30 - are good for you at this moment see you
15:33 - next week
15:36 - [Music]
15:42 - you

Cleaned transcript:

this week is a struggle my problem right now is simply the order i'm not sure what should be done after what thing and when i have a list that i prepared what i need to do that still needs to be implemented um still i'm not sure what should be done after which thing and this makes things problematic because sometimes i start implementing a thing that without other thing wouldn't work and so that's why i get stuck um and even if i find the solution or if i know from react recommendation how to implement a given thing how to connect the components how to make it display despite all these things i find the moments when i get stuck because the order was wrong just because something else should have been implemented fast in order to make this new thing that i'm implementing working so this top level logic on the level of pages and connecting everything with storage turns out to be the hardest point in this project it is a process and you know the more i code the better you will be added i hope when i get stuck and i don't know what to do next with the code which option to implement what to do and why i get a bug like that i reach to these steps i write down the plan on paper and i try to write it down with the smallest steps so what i should do next what generally should be done what's the order of these things at least what i think that the order should be i talk with other programmers i consult the things on various forums i look for tutorials that have similar projects i look for tutorials that solve similar problems i assertions like overflow or i post on twitter or try to look for the solution on forums and sometimes i simply take a break from a given project from a given problem i try to go to the next issue that can be dealt with or i go for a walk and you what do you do when you have the problems with focus and what to do next in your project please share your solutions in the comments below i want to make each image that is loaded to the recipe the same size and to be displayed as cover so this is another step that i have to take right now velocity is not a function what what does it even mean and how to solve it please the top of the ground yes to go for a walk or to continue coding that is a question especially if you are struggling with some problem for the last few hours this is my answer of the ground so this project is the example how the decisions previously made influence the time needed for the final implementation why to give you some examples if i hadn't decided to implement images i would save tons of time you have to resize and crop the images in order to allow the users to add more recipes because local storage has their limits if not a user will be able to upload just only a few recipes because of the huge photo but because i believe that images are crucial when it comes to recipes and you eat it with your eyes i think that this is another thing that i will resign from another example of how previous decisions influence the way influence the time you have to devote to implement a project is using materialize in this project i used materialize in order to save time but right now i'm not sure if i wouldn't have to deal with velocity is not a function ever that's hard to debug because it is connected with materialize and with the ui components that i use from there i want to finish this project as soon as possible and make it decent um that's why i wanna resign from those things that i decided that at this stage they are too overwhelming for me because they adapt to the overall complexity of the project and they are not in the project's requirements this way i'm resigning from search why for example from search well i wrote down the plan how to implement it what would be needed in order to do it and there are many steps that will take a lot of time right now to finish that extra functionality that can be added later in some iterations each step from clicking the search icon to displaying the result and going to give the result and later coming back to home page or to the result list everything that should be referred and designed and implemented not just only in logic but also in the ui that would be user friendly it's possible but it takes time that i don't want to devote right now maybe it's because i'm a bit fed up with this project and when i really finished it because it was quite hard but for the time being search is not needed sometimes you have to give up in order to have the power to come back to the project especially if it's not for the client because if you decided that it should be designed this way you can also resign from a given point at a given iteration it's sunday in the evening this is how it looks now i can add a recipe add a photo add the ingredients some instructions and save the recipe automatically it is added to the list and the list is created alphabetically so if it was fries it's after b and before and when i come into this recipe i can edit it or delete it if i edit it i can resign from tags add some tags still i need to fight with this overlap this will be the next step i can change the photo and save the recipe if a user wants to delete a recipe they click delete and when they reassure this recipe is no longer in the storage in the local storage and this fries recipe is no longer here looking at the user stories um from number one um i can create recipes that have the names and ingredients yes i can i can see the index view where the names of all recipes are visible yes i can it's the home page i can click into any of those recipes to view it yes i can and then i go to the detailed view i can edit the recipes yes i can this is what we did and i can delete the recipes yes we could delete the recipes all the recipes i add are saved in my browser's local storage if i refresh the page these recipes will still be there yes it's done if i refresh there's a disaster here so looking at these user stories while they are implemented but still the app needs a lot of work i mean it could be better it shows that fulfilling user stories doesn't mean that the project is done next week i'm going to test this project once again and to go to smaller js apps and reestablishing my js phenology knowledge learning to code has to do a lot with selfawareness i think that is also a courage to experiment and to choose to try to take the knowledge from different sources having a major plan of course in it like having the main path that you want to follow so i want to go straight away to the next react free code cam project because i want to work more with js and stop for a moment on some smaller project or some smaller projects with javascript to make me stronger in javascript and to make me think clearer in javascript this is what i feel that i need right now let's check that we will see if it was the right move keep on doing remember that learning to code is not a race you get your own path your own journey and take the decisions that you feel that are good for you at this moment see you next week you
