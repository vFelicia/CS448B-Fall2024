With timestamps:

00:07 - hey everybody welcome to live coding
00:08 - with jesse i'm jesse
00:10 - and
00:12 - today we're going to try to
00:14 - make the search inputs in the app bar
00:17 - and the side drawer work
00:20 - okay so the idea is a user would type
00:23 - into that input and then hit enter or
00:26 - click on the little search icon
00:28 - and then uh the
00:31 - user would go then be taken to the
00:34 - search page
00:35 - and a search would automatically occur
00:38 - okay so i have a few ideas for how this
00:40 - could work uh we're gonna try them out
00:42 - and we can talk about it if you all have
00:44 - any ideas
00:45 - please feel free to mention it in the
00:47 - live chat for those of you who are new
00:49 - to this show
00:51 - you are watching me work on an actual
00:54 - project
00:55 - for my job i'm a full-time front-end
00:57 - developer employed by a small university
01:00 - so we're working on the the new main
01:02 - website
01:04 - for the university
01:06 - uh so this is not rehearsed it's not
01:08 - exactly a tutorial it's just me going
01:10 - through what i'm doing but i do my best
01:12 - to explain things and feel free to ask
01:14 - any questions if you need me to explain
01:16 - things in more depth
01:20 - i will make mistakes and that's kind of
01:22 - the point
01:23 - you all can see
01:25 - how many mistakes i make and how i work
01:27 - through the mistakes
01:29 - i
01:30 - break things up by pomodoro sessions so
01:32 - pomodoro session is usually a 25-minute
01:34 - period followed by a five-minute break
01:37 - and so for 25 minutes we'll code and
01:39 - i'll have minimal interaction with the
01:41 - live chat
01:42 - and then for five minutes i'll go back
01:44 - to the chat answer any questions and
01:47 - read all the comments that you have
01:49 - we'll probably go back and forth and do
01:51 - two pomodoro sessions and then at the
01:52 - end of the second session
01:55 - i will go through all the questions in
01:57 - the chat and answer you know any
01:59 - anything that
02:01 - uh that you all have asked to the best
02:02 - of my ability
02:04 - so the stream will probably last
02:07 - somewhere between an hour and hour and a
02:09 - half that's usually the
02:11 - uh the time frame that we have
02:13 - okay
02:14 - i think i got all the intro stuff out of
02:16 - the way i'm doing my best to try to
02:17 - remember to do that for uh for all the
02:19 - new new people
02:22 - so enough looking at my face let me
02:25 - switch over to the code
02:28 - all right
02:30 - here we are
02:31 - um
02:32 - let's start with the ui first so you can
02:34 - see how this this actually looks and
02:36 - i'll start up an ngrok server
02:40 - i'm going to paste the link here into
02:41 - the live chat
02:43 - if you go to this url you will be able
02:45 - to see the site i'm working on and it
02:47 - will update live as i am working on it
02:50 - here
02:53 - alright so that link is is now in the
02:55 - chat
02:58 - and
02:58 - here we are looks like you're clicking
03:00 - on it awesome
03:02 - so let me
03:04 - uh that's the dev site
03:10 - i guess i don't have the loc oh is that
03:12 - it
03:13 - localhost okay
03:18 - all right
03:19 - so
03:22 - we have two search boxes we have this
03:24 - one up top
03:26 - and we have this one and the the side
03:29 - nav so those are what we're going to be
03:31 - working on and then we have a search
03:33 - page
03:35 - that we're going to navigate to so just
03:38 - just so you get an idea of where things
03:39 - are at and these are available from any
03:41 - page on the website so they're always
03:43 - going to have this unless you're on
03:45 - mobile then we get rid of this on the in
03:48 - the app bar but it's always there in
03:50 - that side drawer
03:52 - and let me start my timer because we're
03:54 - going to get into the code now
03:58 - so i have the component
04:01 - for
04:02 - search
04:03 - dot js here and if you are interested in
04:05 - looking at the code there's a link to
04:07 - the github repo in the description
04:12 - so this is quite a large component and
04:15 - could probably use some refactoring but
04:18 - for now we're gonna we're gonna leave it
04:19 - like this
04:21 - and
04:24 - what we
04:25 - we need to do in this component is
04:28 - create some way to trigger the search
04:31 - okay when we navigate to that
04:34 - so we need to make sure that we can get
04:36 - the value from the the input
04:40 - and then
04:41 - use that to search
04:44 - now over here i have the side drawer
04:46 - component
04:48 - so on the right
04:49 - and with this component we've already
04:51 - i've already done a little bit with it
04:53 - okay so just some basic
04:55 - uh stuff i've put in
04:58 - let's see
05:00 - an on click handler
05:02 - and
05:04 - it goes to the handle search function so
05:07 - let's go up to see the handle search
05:09 - function and see what we're doing
05:11 - let's see okay so in handle search
05:14 - all we're doing is saying
05:16 - if a user has actually entered in
05:18 - something into that search box
05:21 - then we're going to do a router.push now
05:24 - this uses the next js built-in router
05:28 - okay so
05:29 - if you want to learn more about that
05:31 - you can go to the documentation for next
05:34 - js it's on github they have a website so
05:39 - if you type in next.js github it'll
05:41 - probably be the first result that comes
05:43 - up
05:44 - and it has a lot more about how their
05:45 - router works but in this case we're
05:47 - giving it a path name and then
05:51 - we are
05:53 - using that search
05:54 - term so whatever the user had typed into
05:56 - that input
05:58 - gets saved in state so we're just
06:00 - accessing that that state
06:03 - for the search input and we're passing
06:05 - that along as a query string
06:08 - so let me show you how this this looks
06:10 - uh when we do this
06:12 - it's going to be hard to see because the
06:14 - you know the app
06:16 - um
06:17 - the address bar is is a little small
06:20 - but we could type in something basic
06:22 - like that and if i hit
06:25 - actually i didn't enable the enter key
06:26 - yet i just have the click working so if
06:28 - i click
06:32 - maybe it's not working
06:34 - let's try that again
06:40 - there we are okay so when i clicked
06:43 - it took me up here and just in case you
06:45 - can't read it i'll read this out so we
06:47 - now have we're on the search page so
06:48 - it's slash search and then question mark
06:52 - search equals the
06:54 - okay so we we have in the url
06:58 - the search term
07:00 - so i figured that will probably be the
07:02 - main way
07:03 - that
07:05 - we can we can grab that data the other
07:07 - idea i had is passing it uh by props
07:12 - but
07:14 - either way it might not be a bad idea to
07:16 - put the search term in the url because
07:18 - if we can get that working it would
07:20 - enable users to then
07:22 - save
07:23 - a um a search term or save a search and
07:26 - then they can come back
07:28 - you know let's say they bookmarked a
07:29 - search and those same results will will
07:32 - be there
07:33 - okay so
07:34 - there's
07:35 - there's definitely some other benefits
07:37 - to doing it this way it may not be the
07:39 - most direct way i think props would be a
07:41 - little bit more direct but uh
07:43 - i think this is something that we
07:44 - probably should do
07:47 - okay
07:50 - let me
07:53 - let me go back then
07:57 - so
08:00 - unless someone has a um a different
08:04 - idea for how to do this
08:08 - i guess we'll move along and basically
08:10 - start working in the search component to
08:14 - do two things one
08:16 - check to see if there's a search term in
08:18 - the url
08:21 - and then if there is
08:23 - initiate a
08:24 - search okay so that's what we want to do
08:27 - here
08:29 - if we run into a dead end there
08:32 - we could potentially
08:34 - attempt to
08:36 - pass a search term by props and maybe
08:38 - that would be a little bit easier
08:40 - i'm not sure about it though
08:43 - so i'm going to make a little bit of
08:44 - space so we can focus on this let me
08:47 - know if the font's too small i could
08:48 - make it a little bigger
08:53 - so right now
08:56 - a search is is triggered
08:59 - on um
09:01 - on a change in the search input
09:06 - so
09:10 - i guess we could
09:13 - hmm
09:18 - okay it looks like the font's too small
09:20 - so let me i'll make that bigger
09:22 - okay
09:24 - i don't think i can go much bigger than
09:26 - that without it being pretty hard to see
09:29 - i just wouldn't be able to see that much
09:30 - code at once but so hopefully this is
09:32 - okay
09:37 - so i'm thinking
09:38 - you know
09:39 - there's a few ways we could do this we
09:41 - could um
09:43 - put the search
09:44 - term into the input
09:49 - um in
09:51 - in this page
09:54 - or we could
09:56 - manually trigger
09:58 - uh a search so what i mean by that is
10:00 - let's say like when the component loads
10:04 - we'll just call fetch search term
10:07 - all right after we've already set the
10:09 - state
10:10 - for the the search string
10:13 - okay so
10:15 - either way
10:16 - um
10:19 - i i think we can get it to work
10:22 - uh michael says why not cash the search
10:24 - on the client side
10:27 - i think that's a great idea
10:30 - and that's definitely a feature we could
10:31 - work on today i'm just i'm worried about
10:33 - doing this though
10:44 - okay
10:51 - all right so let's try
10:57 - first off let's let's take the first
10:58 - step let's just see if we can get
11:01 - the url uh the search term out of the
11:04 - url so
11:07 - i suppose you know we want to do this on
11:11 - on a mount so we'll try component
11:14 - did mount
11:17 - and this is a built-in life cycle method
11:22 - so that means it comes by default with
11:24 - with free
11:25 - with react and this will run when the
11:28 - component mounts
11:30 - so within here
11:32 - um
11:33 - let's try
11:36 - we'll just try to do a console though
11:44 - um
11:45 - actually you know what
11:47 - we could do
11:51 - search term
11:54 - let's just have the uh have it appear
11:57 - right in the the input so we'll have the
11:58 - search term appear in the input
12:00 - i just need to
12:03 - remember
12:07 - what part of the state that goes into
12:10 - where we at
12:22 - okay
12:24 - value is search term okay
12:27 - so instead of console.log we could say
12:31 - uh this
12:33 - state
12:36 - search term
12:39 - equals
12:41 - um and then
12:43 - just to start out let's do
12:44 - like a window location
12:50 - and then
12:53 - i can't remember what to what it is
12:57 - i might have to look this up anybody
12:59 - remember off the top of their head it's
13:00 - window location
13:02 - what to get the um
13:04 - the query string is it query no
13:08 - um
13:11 - yeah let me let me look this up on my
13:14 - other screen
13:26 - okay um
13:40 - all right so i'm just checking out
13:41 - window.location uh on mdn mozilla
13:44 - developer network that's a really good
13:47 - resource
13:49 - and i'm hoping that they show all of the
13:52 - different options for
13:54 - window.location
14:15 - all right
14:21 - all right it returns an object let me
14:23 - just check this here in our um
14:27 - in our
14:28 - console clear this out
14:37 - window location
14:40 - and
14:42 - let's see what we get search
14:47 - there we are search
14:49 - window location search
14:54 - okay so we'll
14:56 - get you see the the value of search here
15:00 - make it a bit bigger
15:02 - um
15:05 - we are going to have to do some some
15:08 - stuff to get this this value out of
15:10 - there
15:11 - so let's not worry about this for now i
15:12 - just want to see if we get something
15:15 - so we can do
15:17 - search
15:19 - okay and let's see if this works
15:22 - oops
15:26 - i'm sorry i definitely should not have
15:27 - done that
15:29 - i'm sure one of you uh probably caught
15:31 - that and are already telling me in the
15:33 - chat so
15:34 - this states are sure
15:37 - um
15:45 - oops
15:52 - this set state and
15:55 - now we're gonna do
15:58 - search term
16:02 - and
16:03 - this is what we're gonna do
16:08 - okay
16:09 - all right that's what we want to do
16:11 - the only thing i'm a little bit worried
16:12 - about here is we are doing server-side
16:15 - rendering so obviously window is not
16:19 - going to work
16:20 - for side rendering so we'll see how that
16:22 - that works out
16:24 - let's see if this even works
16:27 - um
16:28 - i guess so refresh
16:35 - okay i guess it didn't work we can
16:39 - let's be 100 sure by going to
16:42 - our react dev tools
16:45 - and
16:49 - let's see
16:51 - what our state is
16:56 - search term yep search term is still
16:58 - blank
17:00 - okay so
17:03 - for whatever reason uh i suppose
17:06 - component did mount is not working
17:09 - so
17:11 - um
17:14 - let's see
17:19 - all right michael says window location
17:21 - search dot sub string
17:24 - uh one
17:27 - actually let's let's try that in the uh
17:29 - in the console to see if that would that
17:32 - would work
17:38 - no it's still giving us the same
17:44 - yeah
17:44 - it's just taking out the uh question
17:46 - mark
17:52 - which i guess i mean it's a little bit
17:54 - better without the question mark
17:56 - okay
18:04 - oh okay nikki says uh i can't find that
18:07 - response again but
18:08 - get initial props has access to the
18:11 - query param so you can check for one
18:13 - there for the first search making the
18:16 - url url shareable
18:22 - sorry
18:23 - sorry about the yawns for some reason
18:27 - i just yawn so much when i'm streaming
18:30 - okay
18:31 - uh all right let's try that let's try to
18:32 - run get initial props and see if we have
18:35 - uh more luck with that okay it looks
18:37 - like we can access the query param so i
18:40 - think we ought to go to the
18:41 - documentation
18:43 - first to see exactly how we do this so
18:46 - i'm going to go to next js
18:49 - on github
18:52 - and let me make this bigger
18:56 - and
18:58 - i'm going to try to find gets initial
19:02 - props
19:04 - okay
19:05 - there we are
19:07 - so fetching data and component life
19:09 - cycle
19:14 - hmm
19:30 - actually this is good to know i didn't
19:32 - realize you could use these for uh
19:33 - stateless components cool
19:36 - those are props all right here we are so
19:38 - get initial props receives
19:41 - an object with these properties pathname
19:44 - query
19:45 - okay cool we should be able to get the
19:46 - query then
19:50 - awesome
20:00 - nikki said types next in browser the
20:03 - first result is next.js github page
20:05 - sounds about right yeah
20:08 - i'm there often
20:11 - okay
20:15 - all right let's see
20:19 - i don't think they have example of
20:20 - getting the query
20:22 - that would be kind of cool
20:24 - but
20:24 - it shouldn't be too difficult
20:39 - all right this is actually another way
20:40 - to do it
20:43 - we could have made that a link
20:46 - all right it's fine it works the way we
20:48 - do it
20:48 - yeah we do uh use without instead
21:02 - all right let's just see what we get
21:03 - with uh with query here
21:06 - so i guess i can copy and paste this
21:09 - oops
21:11 - this one and then we'll just change it
21:13 - to what we need
21:16 - okay
21:17 - let's get rid of this one
21:18 - uh
21:19 - actually let's keep that for now and
21:21 - then we'll copy and paste what we need
21:23 - into there
21:24 - so
21:26 - right we want the query
21:30 - and
21:32 - let's see
21:48 - let's just do this for now
22:02 - oops guinness would prob should resolve
22:04 - an object but found a defined set
22:14 - hmm
22:27 - i wonder if i have to return it
22:28 - something
22:31 - there we are
22:34 - hmm
22:39 - all right nothing's happening there
22:44 - okay why maybe i can do this
22:48 - props
22:49 - query
22:52 - oops we'll do a console log
23:13 - hmm
23:14 - that's weird for some reason nothing
23:16 - we're doing in component dead mount is
23:18 - is actually
23:20 - working
23:32 - okay
23:34 - check my time okay about five minutes
23:36 - i'll come back to the live chat and uh
23:38 - and answer some questions
23:42 - okay
23:43 - all right let me think
24:00 - actually you know what
24:01 - we can we can see what's uh what's here
24:04 - if we go to react
24:08 - oops
24:11 - let's check out this and we should be
24:13 - able to see it in props okay so props
24:16 - query oh
24:24 - okay so we're getting the older version
24:28 - so
24:29 - in the documentation
24:32 - down here it says
24:37 - if you're using
24:41 - with router
24:47 - you just get these three in which our
24:50 - query then is an object
24:52 - and it didn't
24:53 - give us the info that we needed
24:56 - so
25:02 - all right let me see why it's doing this
25:05 - instead of another one i usually don't
25:07 - like to just read when i'm streaming but
25:10 - i i think this section is
25:13 - definitely going to help us here each
25:15 - type of curse
25:19 - with router instead
25:48 - hmm
25:59 - oh curtain coal says is there two
26:01 - component did not have do i have it
26:03 - twice that might explain why it's not
26:04 - working
26:14 - that's excellent awesome okay so
26:19 - evidently
26:20 - our component did mount
26:22 - we have two of them and that's why it's
26:23 - not working
26:27 - um
26:31 - actually though
26:39 - i think
26:44 - yeah actually let's let's do that let's
26:50 - um yeah let's go back to what we're
26:53 - doing and then we don't even have to
26:54 - worry about
26:56 - why we're getting uh you know one form
26:59 - of
27:00 - the information we should get and get
27:02 - industrial props instead of the the
27:04 - other form that we want
27:05 - okay
27:06 - so what we'll do then is
27:10 - get rid of that and put it
27:14 - down
27:18 - here okay
27:20 - why am i getting this oh because it's
27:22 - the second
27:27 - good job
27:28 - catching that that's uh
27:32 - i didn't even see that uh so you did a
27:34 - curtain call thank you
27:43 - all right
27:45 - okay so let's see now if
27:48 - uh it'll actually change
27:50 - all right cool okay so that that
27:52 - actually did work
27:55 - so it changed this and now it it has
27:59 - what we want but well not exactly what
28:01 - we want right
28:02 - so
28:03 - let me go up some of you put in
28:06 - who did albert okay so albert said uh we
28:09 - could split
28:10 - um
28:13 - split what we've got here okay
28:24 - well i think my timer is yeah my timer
28:25 - is going to go off okay so next step in
28:28 - our next pomodoro session
28:30 - is going to be let's grab the actual
28:32 - term out of here and leave all the rest
28:34 - off
28:35 - and then we'll initiate a search
28:38 - which i actually this shouldn't be too
28:40 - too hard the rest of it uh is pretty
28:44 - i think it's pretty straightforward
28:48 - okay
28:51 - let me set
28:53 - set this timer to five minutes i'm going
28:55 - to scroll all the way to the top of the
28:57 - chat and just work my way down so if you
28:59 - just asked something i may not get to it
29:01 - in this five minute session but i'll get
29:03 - to it after the next pomodoro session
29:10 - all right
29:14 - all right i'm just kind of skimming down
29:15 - and trying to find the questions here
29:22 - uh
29:23 - nikki says
29:24 - uh how are you doing how's the wrist
29:27 - i'm doing way less coding lately need a
29:29 - break uh just watching revlon relevant
29:32 - video daily uh
29:34 - this is this is the one no pressure
29:38 - um
29:40 - yeah my wrist is i mean it's doing okay
29:42 - it's just it still hurts um
29:44 - so the timeline i think is like
29:46 - it'll actually feel worse than it did
29:48 - before the surgery for about six weeks
29:50 - then it'll start to feel better uh but
29:52 - i'm looking at maybe like three months
29:54 - before i should i'm really feeling
29:57 - normal so
29:59 - i'm going to try to strengthen it just
30:01 - maybe like stretch it a little bit
30:03 - because right now it's pretty stiff
30:06 - so i'm just going gonna try to do more
30:07 - and more with it every day and and see
30:09 - how that goes
30:11 - but i mean just typing all day
30:14 - like at the end of the day my wrist is
30:15 - sore just from that so
30:17 - like without putting any weight on it at
30:19 - all it's just gets sore so um
30:23 - it'll just it'll just take time
30:25 - you know i mean which is expectable uh
30:29 - you know after after surgery
30:33 - it's expected
30:36 - yeah it's expected after surgery
30:38 - [Music]
30:42 - nikki says add a dot trim
30:44 - to that check and handle search prevents
30:47 - spaces from triggering search oh that's
30:50 - a good idea
30:51 - that's a really good idea
30:59 - um
31:02 - let's see
31:12 - nikki says i posted something on an
31:14 - issue a while ago about making the
31:15 - search your url shareable going to look
31:18 - for it yeah i remember i remember you
31:19 - posted on that issue
31:22 - uh so yeah i remember you posted that
31:24 - and i remember thinking it's a good idea
31:25 - at the time but i wasn't sure if that
31:26 - was something we'd be able to get in
31:28 - before launch
31:29 - and remind me after the next session to
31:31 - give you an update on launch date i just
31:33 - had a pretty long meeting this morning
31:36 - where we talked a lot about what's going
31:38 - to happen on the website so i do have
31:40 - some updates on that
31:46 - curtain closes font size is okay but
31:48 - it's so very bright and clumsy
31:50 - it is bright
31:52 - uh it is bright i'm not sure what a
31:54 - clumsy font means but
31:57 - um
31:59 - i guess i'm open to suggestions for
32:01 - fonts though
32:03 - uh gino asks uh should new junior
32:06 - developers skip ruby on rails python
32:08 - django and php laravel and just focus on
32:11 - angular react view node and express in
32:13 - mongodb
32:14 - it just depends on what you want to work
32:16 - on
32:18 - if if you have the ability to just pick
32:20 - what you want to work on
32:22 - i mean i would go more with the full
32:24 - stack javascript
32:26 - you know type
32:27 - type of stuff like i
32:29 - to me it's like
32:31 - if you can learn one language and do
32:32 - front end and back end like why not you
32:35 - know instead of trying to learn two
32:36 - different languages all right you're
32:38 - gonna have to know javascript no matter
32:40 - what if you're gonna do anything at all
32:41 - with front end so
32:43 - that that would be my my option but you
32:46 - don't always have that luxury sometimes
32:47 - you get a client or you get a job and
32:49 - you have to learn you know what you need
32:52 - to to get the job done so
32:54 - um
32:55 - you know i think it would be fine either
32:56 - way but
32:57 - i would lean more towards uh the full
33:00 - stack javascripts
33:03 - um
33:04 - po
33:05 - pokken puken lung sorry if i'm
33:07 - mispronouncing that but phuket long says
33:09 - actually
33:10 - what is this project it is a
33:12 - the main website for the university that
33:15 - i work for
33:21 - all right
33:28 - albert says isn't this project a little
33:30 - too big for just one developer
33:32 - i don't know maybe it is but i'm the
33:33 - only one working on it well i shouldn't
33:36 - say that you are helping a lot so
33:39 - um
33:40 - yeah but it's just me so at some point
33:43 - in the future it'd be awesome if we
33:44 - could hire some more developers here and
33:46 - i would have a team but right now
33:48 - there's only two developers in my
33:49 - department and we both work on totally
33:52 - separate projects
33:54 - uh so
33:55 - this is what i have right now
34:00 - okay
34:01 - my timer is up
34:04 - i'm gonna jot down
34:08 - where i'm leaving off here in the
34:09 - comments
34:15 - okay
34:17 - all right so let's reset this
34:20 - timer here for 25 minutes after the
34:22 - session's up i'll get to the rest of
34:25 - your your questions
34:28 - and
34:30 - all right where were we
34:32 - oh okay you know what let's
34:34 - we're on the search
34:38 - now what did we want to do
34:40 - i think it was nikki had an idea to do
34:42 - the the trim um
34:48 - actually i'm not going to worry about
34:49 - that right now
34:50 - because then i'm going to lose track
34:52 - i'll just try to remember that if i
34:54 - forget it um and you have time nikki uh
34:57 - please just make it an issue or
34:59 - something uh or i mean
35:02 - if i if you don't have time don't worry
35:04 - about it i'll try to remember
35:06 - uh but i really want to get this working
35:08 - in this next pomodoro session so i'm
35:10 - just going to go straight to it even if
35:11 - it's not ideal
35:14 - okay so we now have the data
35:16 - and
35:18 - we just need to
35:20 - split this string
35:26 - all right so let's see
35:31 - let's see what we can do
35:34 - um
35:40 - let's see
35:44 - actually let's just look up
35:52 - okay
35:52 - so
35:54 - for those of you especially for those
35:56 - who are new and i don't want this i want
35:57 - the mdn especially for those of you who
36:00 - are new sometimes it can seem like
36:01 - there's a lot of stuff to learn you have
36:03 - to remember it but like realistically
36:05 - i've been doing this for at least five
36:06 - years i'm getting paid full time to do
36:08 - this and i can't remember exactly how to
36:10 - use split right so it's not a big deal
36:13 - to have this stuff memorized when all
36:15 - you have to do is type it in the search
36:17 - bar and now you have it so
36:19 - and i kind of like doing this because i
36:21 - usually learn something new
36:23 - about a thing so even though i'm just
36:25 - trying to figure out what's the syntax
36:27 - if i spend a little extra time reading
36:29 - this
36:30 - i find out you know new stuff so anyway
36:33 - what i'm trying to say is just don't get
36:34 - too bad out of shape if you can't
36:36 - automatically remember syntax for how to
36:38 - do things because
36:41 - really it's it's not a big deal
36:45 - okay so
36:47 - we got our separator
36:49 - uh and then our limit so our separator
36:51 - in this case is going to be that equal
36:53 - sign
36:54 - so we need our string dot split and then
36:57 - the equal sign and that will give us
37:00 - an array and we should need the second
37:03 - value in the array which in this case
37:05 - would be 1 because the array started
37:07 - zero okay
37:09 - so let's go back and and try this out
37:12 - uh where do we do this
37:16 - oops it's in our um
37:19 - component did mount here we are so
37:24 - instead of just this set state and we're
37:26 - adding window location search it's going
37:27 - to be window location search dot split
37:32 - um
37:33 - and then it's going to be
37:35 - one
37:38 - and
37:40 - oops no no equals sorry equals
37:46 - and
37:47 - i don't know if we can do this all at
37:49 - once but i'm a little bit curious so i'm
37:52 - going to say oops this should be
37:55 - parentheses
37:57 - uh equals
37:59 - and it probably should put this area
38:02 - okay equals and i'm gonna try to do this
38:06 - i don't think i don't know if it'll work
38:08 - but if it does that'll be kind of cool
38:09 - and it'll let us keep this all in one
38:11 - line
38:12 - uh so let's save that and we should see
38:15 - the result now
38:18 - yay it worked okay cool so if if you're
38:21 - not sure what i just did there
38:25 - so from this this value is giving us
38:28 - that whole search thing with the
38:29 - question mark and the equal sign and
38:31 - then once we split it now it returns an
38:34 - array
38:35 - right that has two items in the array
38:38 - the zeroth item and the first item right
38:41 - so now we say we just want the first
38:44 - item so what gets returned out of here
38:47 - is a string
38:49 - that's that search term that we're
38:50 - looking for okay so this is actually
38:52 - going to work perfectly unless for some
38:55 - reason we have more than one uh
39:00 - parameter there in the query string
39:04 - in which case
39:05 - we would have to modify this i can't
39:07 - really foresee a reason why we would
39:09 - have more than one on the search page
39:12 - so i think this should be safe for now
39:13 - but just just
39:15 - for you all if you're trying to do
39:16 - something like this
39:18 - if you think you may have more than one
39:20 - thing
39:21 - you're you're definitely not going to be
39:23 - able to do it
39:24 - like this just like this you have to
39:26 - modify it a bit okay
39:28 - so now that we have this and we've put
39:30 - it into state
39:32 - uh what we can do
39:36 - so we've set the state and then we can
39:38 - trigger
39:40 - let me be i want to double check this
39:42 - function and make sure this will work
39:45 - we can trigger fetch search term okay we
39:48 - don't have to pass anything
39:51 - yeah
39:53 - so let's do that and let's say
39:56 - this
39:57 - dot
39:59 - fetch search term
40:04 - okay let's see if that works
40:11 - hmm
40:20 - all right that's interesting
40:24 - okay so let's see what this
40:27 - oops
40:29 - i want to see what the uh
40:34 - this ended up being oh interesting
40:37 - okay uh maybe that's pulling from
40:40 - somewhere else
40:41 - let's double check
40:44 - so we're setting the state
40:46 - to that value uh which part i say we're
40:49 - setting search term to equal that but
40:51 - maybe it's pulling from somewhere else
40:52 - this fetch search term so
40:56 - say
40:57 - base search string
41:01 - this state
41:03 - search term okay it is supposed to be
41:05 - grabbing the search term
41:11 - and then also the search type is
41:13 - supposed to be on the end of that
41:17 - um
41:28 - so we shouldn't have anything
41:31 - so by default
41:32 - there's not going to be any parameters
41:34 - at the end
41:44 - this is weird
41:47 - to the search term
41:55 - yeah this this should be okay it
41:58 - this state search term
42:10 - hmm
42:19 - all right i'm gonna console.log within
42:21 - here
42:22 - um
42:36 - let's see if that'll work it's giving me
42:37 - a
42:38 - an error there but
42:46 - also
43:03 - all right let's see
43:16 - all right
43:24 - all right let me go back let's double
43:26 - check in our react
43:29 - um
43:30 - dev tools
43:36 - let's see what we have
43:40 - a search
43:44 - search term is the
43:47 - okay
43:55 - all right that's interesting
43:58 - all right i'm gonna i want to see what
44:02 - what gets triggered
44:05 - on this search here on change this get
44:08 - search results
44:10 - maybe we should do that instead
44:25 - yeah let's do git search results i think
44:27 - i was skipping a few functions and
44:29 - trying to go straight to that one uh so
44:32 - not sure if this will solve the problem
44:33 - but this is probably the way we want to
44:34 - go anyway
44:36 - so let's do that
44:43 - all right you know what i'm going to
44:45 - move these up
44:47 - because i'm used to these being up at
44:48 - the top
44:50 - i just feel more comfortable if they are
44:55 - okay
44:56 - i like having the default like life's um
44:59 - life cycle methods there at the top
45:01 - okay so
45:05 - instead of fetch search term it's going
45:08 - to be get search results
45:10 - okay
45:19 - cannot read property oh there we go
45:22 - can i probably target him undefined
45:26 - stop value
45:38 - i'm at 50
45:40 - oh 96.
45:50 - why am i using there
45:57 - okay
45:58 - um
46:07 - okay so the search term is getting set
46:09 - to value
46:11 - um but
46:12 - there is no value
46:18 - all right so maybe then what we want to
46:20 - do is uh debounced search
46:24 - okay
46:24 - let's do that then
46:40 - t-balance okay
46:44 - hey there we are it worked this time
46:47 - cool
46:48 - okay let's verify that again
46:51 - make sure it worked
46:55 - okay great now let's try it let's try it
46:58 - again straight from this this search
47:03 - oops
47:10 - awesome so we've actually added two um
47:13 - kind of layers of functionality not only
47:15 - will that work
47:17 - uh from that search input but also
47:21 - now
47:22 - any uh url
47:25 - you know we can type whatever we want in
47:30 - and it'll automatically do a search so
47:34 - this will enable
47:36 - you know being able to
47:38 - bookmark search results uh which is
47:41 - awesome now the only thing we need to
47:42 - change is right now
47:44 - if i were to do a search straight from
47:46 - this page
47:53 - then you see this stays the same
47:57 - right so we need to update it so a
47:59 - search from the search page actually
48:01 - updates this as well and we can do that
48:06 - with the the next router so that will be
48:08 - the next steps for then
48:10 - and then also we're going to have to
48:12 - hook up this one instead of just a side
48:14 - drawer but that shouldn't be too hard
48:15 - it's just going to be a copy and paste
48:18 - into this app bar component
48:21 - so let's see how much time we have how
48:22 - much we can get done okay a little over
48:24 - 10 minutes
48:25 - let me check the the real time 2048
48:29 - okay actually
48:32 - you know what
48:33 - i'm going to since we got this working
48:35 - and the rest of it is just going to be a
48:37 - matter of kind of copying what we've
48:39 - already done
48:40 - i'm going to end now even though it's a
48:42 - little bit early and go to the questions
48:45 - that way i have a little bit more time
48:46 - for questions i do have to make it over
48:49 - somewhere else here on campus to um do
48:52 - some paperwork
48:53 - and the person i need to meet i believe
48:56 - is leaving
48:58 - in about an hour so i want to make sure
49:00 - i can get over there in enough time
49:04 - so
49:05 - i should probably double check i'm gonna
49:07 - double check the email and do one to
49:09 - four
49:10 - oh actually no i think i have more time
49:12 - than that
49:15 - yeah i do have more time all right let's
49:17 - try to get something done then
49:20 - sorry about that
49:24 - uh so i think they're gonna be here for
49:25 - another two hours so so we do have time
49:28 - so let's um
49:36 - all right well let's add this in over
49:38 - here as well
49:40 - uh so
49:41 - so that this also will work uh also it'd
49:44 - be cool to add uh at make it so that we
49:47 - could hit enter
49:48 - so that's actually the only new
49:50 - functionality
49:52 - that i think will will be added with
49:53 - this so
49:54 - let's let's do that
50:01 - and i'm not sure if i've ever done that
50:02 - before
50:03 - with react
50:06 - i don't think i have all right so this
50:08 - would be cool i'll learn
50:10 - um
50:12 - i'll learn something new here okay
50:16 - hmm
50:20 - oh so i'm not going to do it on here
50:21 - it'll be
50:23 - over here in the drawer component
50:36 - alright so the handle search needs to be
50:38 - triggered
50:42 - when we hit enter
50:44 - all right so i'm just going to look this
50:46 - up if anybody knows how to do it put it
50:47 - in in the chat please otherwise let's
50:50 - look this up and let's say
50:52 - detect
51:00 - okay
51:04 - awesome so stack overflow to the rescue
51:07 - this is exactly what we need we need to
51:09 - call an event after pressing whoops
51:11 - enter key
51:14 - i don't know what i just did okay
51:17 - according to react docs
51:20 - there we are all right let's just read
51:21 - the react docs instead
51:24 - keyboard events all right awesome so
51:27 - there's an on key press
51:29 - and then
51:31 - we can do the
51:32 - character code
51:36 - nice
51:53 - all right so on
51:54 - yeah on key press
51:58 - so let's add that into
52:01 - where it's we'll put it here on our
52:03 - input
52:09 - on key press
52:12 - and
52:14 - let's see
52:18 - let's see if there's an example here
52:25 - key press
52:28 - okay interesting
52:40 - okay so we're gonna add
52:46 - okay
52:47 - all right this works so
52:50 - this handle
52:53 - search
52:54 - change
53:00 - let's see
53:10 - all right curtain call is saying key
53:11 - press which
53:12 - 13 actually is there a way i could do it
53:15 - right there
53:28 - hmm
53:49 - all right i'm not sure michael's sitting
53:51 - in a switch
53:54 - yeah nobody i know the answer value uh
53:57 - is 13 but i was just wondering
54:00 - if there was some like
54:02 - shorthand way
54:04 - that i could do that uh like here
54:07 - right or if i actually had to modify
54:09 - this uh handle search um
54:13 - oops it shouldn't have been handle
54:15 - search change it should it
54:20 - search change
54:36 - no it should be handle search
54:43 - there we are
54:44 - okay
54:54 - all right nikki saying doesn't an input
54:56 - inside a form automatically submit on
54:58 - enter or does react prevent that
55:00 - um
55:02 - yeah i don't
55:05 - well i don't know if we even want to
55:07 - submit in this case you know
55:10 - oh okay justin has some
55:12 - some code here
55:17 - all right this looks really cool let me
55:19 - do that
55:25 - all right where am i at
55:36 - okay let me see if this works and then
55:37 - if it does i'll go in and explain what's
55:40 - happening
55:49 - oops
56:00 - unexpected character
56:04 - that's weird okay so that did not work
56:08 - okay here's another one
56:18 - all right so that didn't work so i'm not
56:19 - going to go over it since it didn't work
56:20 - but
56:21 - um
56:23 - it would have been cool it looked cool
56:31 - all right i guess we could just
56:37 - um
56:40 - just do it like like we saw in the
56:41 - example on stack overflow right
56:46 - it would be cool to do it differently
56:47 - but this will definitely work
56:49 - okay
56:51 - why am i still having this
57:03 - this is weird
57:04 - why is it still giving me an error
57:16 - actually this is really weird i think
57:21 - let me try this again
57:24 - i think something may have gotten copied
57:31 - somebody getting copied weird let me try
57:33 - this one more time
58:17 - all right shake this out
58:28 - so
58:41 - okay andrew's not doing anything
58:43 - what
59:04 - okay so that's i mean we're not getting
59:06 - an error or anything but nothing's
59:08 - happening when i hit enter
59:23 - your key
59:42 - i wonder if we're getting uh the right
59:47 - let's try
59:51 - key code
59:53 - and um
59:54 - we'll go with
59:56 - 13.
60:00 - try this i never tried to just use the
60:01 - name of the key before so i mean maybe
60:04 - it works it but
60:06 - let's just try it like this and see if
60:08 - that is the the issue
60:14 - nope not the issue
60:17 - oh well
60:18 - um
60:19 - justin i think that was an awesome
60:22 - awesome idea not 100 sure why it's not
60:26 - working
60:30 - curtain call says try e key
60:32 - which
60:34 - try enter lower case instead of enter
60:36 - uppercase that's what albert says
60:39 - e key console log okay we could uh a
60:42 - console log it yeah that makes sense
60:44 - uh so let's do that
60:48 - for now let's just get rid of that and
60:51 - do
60:53 - um
60:59 - e key
61:03 - okay so what this should do is just tell
61:05 - us what key is being pressed
61:08 - in the console
61:14 - all right that should work
61:15 - right enter should definitely be working
61:17 - there okay
61:19 - so
61:24 - go
61:27 - so this should definitely work if e and
61:29 - so now we're doing uh a tern area right
61:32 - so
61:36 - shouldn't you do on key press e
61:39 - without the braces
61:47 - curtain call says shouldn't you do on
61:49 - key press e without the braces no we
61:51 - need the braces in react because
61:53 - otherwise it won't interpret that as
61:55 - javascript
61:57 - um
61:58 - okay
61:59 - so if e key equals
62:03 - enter
62:04 - um
62:06 - if it does equal enter then let's call
62:09 - this dot
62:11 - handle
62:12 - search
62:15 - otherwise
62:16 - we're going to say no
62:19 - okay
62:35 - okay so what is happening
62:39 - let's
62:49 - all right let's just try
62:51 - try to figure out where the problem is
62:53 - happening
62:57 - okay
62:58 - so we're just going to console.log the
63:00 - word search
63:01 - it should console.log when the enter key
63:03 - is pressed
63:05 - right
63:06 - oops
63:07 - there we go
63:18 - okay
63:19 - awesome the so okay cool
63:22 - all right so we just had um
63:31 - the
63:35 - we know that this is working
63:38 - so the issue
63:40 - let's check this out
63:41 - handle
63:42 - search
63:44 - if this state search
63:48 - is not equal router push past n okay
63:51 - um
63:54 - so we need to do
63:55 - [Music]
63:57 - oh you know what i wonder if it's a this
63:59 - issue
64:02 - so um
64:08 - that's that's gonna be my guess it's
64:09 - it's at this issue within here so
64:13 - um
64:20 - nikki just said the same thing it's this
64:22 - issue isn't it
64:23 - yeah i think so so let's see how we can
64:40 - all right let me see what okay so
64:42 - justin's saying
64:51 - try it like that okay
64:53 - i'm gonna try that first because
64:56 - that's gonna be the easiest thing if
64:58 - this works then this would be very easy
65:04 - all right awesome that was it
65:06 - that was it so with so normally um in in
65:10 - react you can
65:14 - you can just do this right you can say
65:16 - this dot handle search right and you
65:17 - don't need and in fact you don't want to
65:20 - actually you know put the parentheses
65:22 - here you'd normally do to invoke a
65:24 - function
65:24 - right but in this case since it's not
65:26 - exactly the same right we're actually
65:28 - entering into
65:29 - uh the inside of another function
65:32 - right
65:33 - uh we need to invoke that so awesome uh
65:37 - great job justin uh just for coming up
65:40 - with this in the first place and then
65:41 - also for figuring out what the problem
65:43 - was so
65:44 - i really appreciate that and that took a
65:46 - little bit longer but this is
65:49 - honestly this looks really clean i like
65:51 - it
65:53 - and
65:54 - we didn't have to modify
65:57 - handle search
65:59 - and clutter it up there with uh with
66:01 - some if statements so
66:04 - actually i really like this right so
66:06 - we we avoid even having to call that
66:08 - function
66:09 - right uh so we do our check here
66:12 - otherwise we would have been actually
66:13 - calling this other function and then
66:16 - doing the check so i i don't know
66:19 - the difference in performance is
66:20 - probably so so small it's insignificant
66:23 - but i like how it looks uh and it was
66:25 - kind of cool uh cool to learn you know
66:28 - how to do that so
66:30 - anyway that's all i'm going to do for
66:32 - today because our my timer ran out a
66:34 - while ago i was just so into it i wanted
66:36 - to keep going until we got it so
66:39 - we pretty much got almost everything
66:41 - that i wanted well we definitely
66:43 - achieved what i wanted to achieve
66:45 - we added some extra things i'd like to
66:47 - do there and we didn't get to all of
66:49 - those but
66:50 - uh
66:52 - pretty close so
66:55 - i think it's definitely a good a good
66:57 - stream in terms of getting things
66:58 - accomplished
67:00 - status
67:05 - and
67:06 - we're going to com i'm going to commit
67:08 - this so you all can have the code
67:09 - available to you on github immediately
67:13 - so let's add this new feature
67:16 - and
67:17 - let's say
67:20 - enable side drawer
67:25 - search
67:26 - input and then we'll decide your search
67:28 - yeah that that works
67:32 - uh this does affect an open issue so
67:34 - let's put yes and
67:36 - let me see
67:38 - let's figure out what issue
67:46 - i love it when i type g and and github
67:49 - actually is higher than gmail in my
67:51 - uh suggested sites that's pretty awesome
67:55 - all right so i'm gonna go check out the
67:56 - issues here
67:58 - i know i have an issue about this
68:15 - i guess would just be under implement
68:16 - search
68:19 - maybe i don't have a separate issue
68:22 - okay i don't think i made a separate
68:23 - issue about it i do have a separate um
68:27 - kind of card in my trello board for it
68:29 - but it's the same issue so that's issue
68:31 - number 74. so we're just going to say
68:34 - re for regarding
68:36 - number 74.
68:38 - okay and when we add that in
68:40 - uh then there's going to be a little um
68:44 - spot and i guess i could show you how
68:45 - this looks right now because i think
68:47 - i've done it before so you can see here
68:50 - the reference oh yeah did i say
68:53 - regarding i mean reference
68:54 - i don't know why i thought it was
68:55 - regarding okay anyway so this issue is
68:58 - now referenced in this commit
69:01 - it's referenced in this commit and this
69:03 - commit and this commit so at least kind
69:05 - of a nice
69:06 - uh log of
69:09 - you know hey this is getting worked on
69:11 - and here's what we've done to work on it
69:12 - okay so you don't want to have to
69:14 - manually come here and and give an
69:15 - update but this lets everybody know that
69:18 - you know this issue isn't dead right
69:19 - it's it's being actively worked on and
69:21 - here's what's been done
69:27 - all right
69:28 - so that went through it passed all the
69:29 - tests and now i can do a get push
69:32 - and this will go straight up to github
69:35 - and you all can check it out
69:38 - uh feel free to fork this repo
69:41 - and
69:43 - make any contributions that you want
69:45 - submit a pull request i'm definitely
69:47 - open to that and i'll help you out if
69:49 - you have any trouble with it all right
69:50 - cool so let's check this we won't get an
69:53 - auto refresh on on github
69:56 - at least i don't think you will but
69:58 - here we are there's there's our our
70:01 - commit so enable side drawer search
70:06 - all right cool
70:08 - so i'm going to scroll back up
70:10 - to where i left off in the chat so if
70:12 - you have any questions or anything or
70:14 - comments put it in there uh and when it
70:17 - comes to the comments i i
70:19 - totally enjoy compliments and nice
70:21 - things but if you have something
70:23 - critical to say feel free to say it i
70:25 - want to make these streams as good as
70:27 - they possibly can be so that they're
70:28 - helpful to you all so if you think that
70:31 - there's something i'm doing
70:32 - wrong or something that i i could do
70:36 - that i'm not doing please you know let
70:38 - me know i can't always do everything you
70:40 - know that you say
70:42 - but i definitely want to hear what what
70:44 - you think so don't be afraid to uh to
70:47 - put critical comments in there
70:49 - some occasionally people put you know
70:51 - comments that are pretty pretty rude um
70:53 - and i'm totally cool with that it
70:55 - doesn't bother me um especially because
70:57 - 99.9 of you are super positive and nice
71:01 - about it uh that definitely outweighs uh
71:03 - everything else
71:06 - and if i ever get to the point where 99
71:08 - of them are all negative then i'll know
71:10 - that maybe it's time to stop because
71:12 - this is not useful for you all
71:15 - okay
71:18 - scifaldine
71:20 - says hi hey how's it going
71:23 - welcome to the stream
71:30 - uh alex alexandro says hello afternoon
71:34 - i'm brazilian hey how's it going thanks
71:37 - for watching
71:40 - uh
71:41 - anand uh wants to know where the first
71:43 - video in the series is or the playlist
71:45 - uh there's a play playlist on so if you
71:49 - click on playlists on free code camp go
71:51 - to um the project number five playlist
71:55 - for live coding with jesse i think it it
71:57 - might be called react project five or
71:59 - something but if you go to that playlist
72:01 - that should have all the videos in order
72:03 - there's quite a few videos this is
72:05 - number 91 just in this playlist and with
72:08 - project five
72:10 - so um
72:11 - you know i definitely recommend if
72:13 - you're gonna watch maybe try to watch it
72:15 - on two-time speed
72:16 - and you know maybe skip around videos
72:20 - just to focus on what you're interested
72:22 - in
72:23 - if you have the time to watch them all
72:24 - that's that's awesome but if you don't
72:26 - have the time then that's probably the
72:28 - best way to go about it
72:31 - okay
72:33 - and it says hey hey anna how's it going
72:35 - i feel like i haven't talked to you in a
72:37 - really long time i guess it has been
72:39 - because i i didn't stream for a while
72:40 - after my surgery and stuff so
72:43 - um yeah let me know how how's how's it
72:45 - going what's new with you i'm really
72:47 - glad you get to catch the stream today
72:58 - a curtain call at one point said it's
73:00 - bad to code when you get got so very
73:01 - tired yeah that is it's for sure
73:04 - um
73:05 - so this is just a little tip uh from
73:08 - curtain call and from me
73:10 - in case you haven't been there yet
73:14 - um sometimes it seems like a good idea
73:16 - to stay up really late in code
73:19 - but i've found that i definitely make
73:21 - more mistakes after a certain point like
73:23 - i stay up late and i could i do good for
73:25 - a while but after a certain point it's
73:27 - just not worth it right because you mess
73:29 - things up
73:30 - so uh it'd be a good idea to like find
73:33 - out where that point is for you
73:35 - and then stop
73:36 - uh whenever i when i first moved into
73:38 - the house that i live in right now uh it
73:41 - needed a lot of work it was the house
73:43 - was like completely trashed so we got a
73:45 - good deal on it but we had to work so i
73:47 - used to have a rule
73:49 - that
73:50 - if
73:50 - if i messed up twice in a row i had i'm
73:54 - done for the night so that means like if
73:56 - i measured wrong twice
73:58 - if i cut if i had to cut something twice
74:00 - in a row because you know i was like
74:02 - building walls and stuff says cutting
74:04 - two by fours and drywall and stuff like
74:06 - that
74:07 - so i would say okay if i had to recut
74:10 - something twice i'm done because at that
74:12 - point i would just be wasting materials
74:14 - and wasting my time so i kind of have a
74:16 - similar thing with my code right if i
74:19 - start really messing up like
74:21 - consistently
74:22 - then i'm done because at that point
74:25 - there's not
74:27 - it's just not efficient anymore like i
74:29 - would get more benefit if i slept for a
74:31 - little bit and then woke up and started
74:32 - to code again so i mean sometimes it's
74:34 - an emergency like server's down or
74:36 - something you really got to do it
74:38 - but if you can
74:40 - that's a good point to go to sleep so
74:43 - anyway hopefully that rule will help
74:44 - somebody at some point
74:49 - uh
74:50 - lakshan says which js framework is best
74:52 - for mobile app development
74:55 - i i would recommend react so react
74:58 - native
74:59 - okay i i think react native is good uh
75:01 - i've messed with um
75:03 - like doing ionic before
75:05 - uh it's pretty good but but honestly uh
75:08 - i've been super impressed with react
75:09 - native with how easy it is to get things
75:11 - going with the quality of the apps
75:14 - uh
75:15 - i i really i like react native so that's
75:17 - my
75:19 - my recommendation
75:21 - i've heard you
75:22 - view either already has something to do
75:24 - native apps with you or they're going to
75:26 - come out with it
75:28 - so i don't know what
75:30 - uh how far along they are with that or
75:32 - if it's possible yet but i mean that's
75:34 - another option but
75:35 - obviously i've never used it so i can't
75:37 - really comment on
75:39 - you know the the pros and cons of it
75:47 - oh nikki said uh also flutter
75:50 - nikki sorry the flutter is pretty
75:52 - awesome has anybody used flutter so if
75:54 - you're not sure what flutter is it's um
75:56 - it's like a framework or uh some type of
75:59 - system to build native uh apps
76:02 - so um
76:05 - i didn't do they
76:07 - i don't know if they just announced it
76:09 - at the google i o conference or it was
76:13 - already out and they just talked about
76:14 - it but that was the first time i heard
76:16 - about it but i haven't used it yet and i
76:18 - haven't really i haven't watched any
76:20 - videos on it or anything like that but i
76:22 - would like to know how it is so if
76:24 - anybody has used flutter uh to build an
76:26 - app or anything like that let me know in
76:28 - the chat please or in the comments down
76:30 - below uh if you're watching the
76:32 - recording of this because i'm i'm
76:33 - definitely interested in it i mean i'm
76:35 - still like
76:36 - i like react native but i'm always open
76:38 - to learning you know new things
76:46 - exxon says i think i have to learn a lot
76:49 - to learn react framework
76:51 - well i mean
76:53 - you don't have to know that much to just
76:54 - get started with it but to really do
76:57 - more advanced thing it things it does
76:59 - take a little while
77:00 - for bigger apps like state management
77:02 - becomes a big issue
77:05 - so there are some things about react
77:07 - that take a lot of time to learn but you
77:09 - know just to get up and started with
77:10 - something basic
77:13 - it shouldn't take too much work it does
77:15 - depend on how familiar you are you are
77:17 - already with javascript though uh but
77:20 - you know don't
77:21 - don't be intimidated by it it i was
77:23 - really intimidated by it at first but it
77:25 - ended up being a lot easier than i
77:27 - thought it would be especially react
77:29 - native react native was so much easier
77:32 - than i thought for some reason i was
77:33 - just super intimidated by it
77:35 - but it ended up being
77:37 - not only easier than i thought but way
77:39 - more fun than i imagined
77:46 - uh not bad actually like my my wrist
77:48 - hurts
77:49 - uh but the doctor said that's normal it
77:52 - should hurt um he actually i was able to
77:54 - give him like a normal handshake with my
77:56 - right hand which is the one that i had
77:57 - surgery on and he was pretty impressed
77:59 - that i was able to shake his hand like
78:02 - like i did so i guess that means i'm
78:03 - doing well
78:05 - so
78:06 - i just need to relax and take it take it
78:08 - slow other than that i feel pretty good
78:11 - i i haven't really been able to do like
78:13 - my normal exercise routine so that's got
78:15 - me thrown off a bit and um
78:19 - from all that time off that i had
78:22 - it like not working out my sleep
78:24 - schedule is so thrown off so like so
78:26 - hard for me to go to sleep
78:28 - which is probably why i'm yawning
78:29 - because i'm running off of less sleep
78:31 - than i normally get because i just
78:33 - have trouble falling asleep but
78:35 - uh anyway and thanks for asking i'm not
78:37 - going to go on anymore because i don't
78:38 - know how many people actually care about
78:40 - uh my sleeping habits right now but
78:43 - uh i i appreciate you asking that
78:50 - all right nikki says do you have a thick
78:52 - elastic band those are great for wrist
78:53 - exercises oh i'm sure i have one
78:56 - somewhere
78:57 - i have to see i think right now i don't
78:58 - want to actually add any weight or
79:00 - resistance because my wrist like hurts
79:02 - enough just with without anything like i
79:05 - don't see like me just doing this right
79:07 - now hurts
79:09 - like and if i try to actually like spin
79:10 - it in a circle like that that hurts
79:13 - so i don't really don't need to add any
79:15 - weight
79:21 - and it says my branch is waiting for
79:22 - merge ah awesome
79:25 - awesome i'm gonna check that out after
79:27 - um after the stream's over so hopefully
79:30 - i'll have time to get it merged in today
79:32 - i'm super excited about that thank you
79:34 - so much for uh for contributing
79:37 - uh curtin calls this question do you
79:39 - manually normalize search input query
79:41 - somehow or it's react router's duty
79:45 - um
79:51 - i imagine things are happening on re so
79:53 - i'm not doing anything to normalize it
79:55 - so i'm kind of trusting that uh the
79:57 - router and so i'm not using react router
79:59 - i'm using the next router
80:03 - so although i love react router
80:06 - since next
80:07 - js has a router built in when i use next
80:10 - i do that if i use create react app i
80:12 - use react router if i use rack native i
80:15 - use react router
80:17 - or actually it's called react native
80:19 - router but
80:20 - same
80:22 - same but just for for react native
80:28 - michael says his first day of school
80:31 - uh for for the kid freshman high school
80:33 - i love him but he's been getting on my
80:35 - last nerve now the teachers can have him
80:37 - back yeah my uh my kids are gonna go to
80:39 - school soon too i have mixed feelings
80:41 - about it so like i'm not home with them
80:43 - all day so i i don't know like i'm gonna
80:46 - miss them but at the same time like
80:48 - usually i'm at work during that time so
80:50 - it's not gonna be that different for me
80:53 - the only difference is like i'm gonna
80:54 - have to be more strict about getting
80:56 - getting them to bed on time and i'll
80:58 - probably have to wake up earlier so i
81:00 - can get him ready help get him ready for
81:01 - school
81:02 - and and driving to school so
81:04 - um
81:06 - yeah i actually my youngest son ambrose
81:10 - is
81:11 - he just turned four and he's gonna go to
81:12 - four-year-old preschool so he hasn't
81:14 - been to school before uh and he was
81:16 - really excited but then he told me a few
81:18 - days ago that he was nervous about it uh
81:21 - so i hope he does all right i'm worried
81:22 - about him
81:23 - uh i don't want him to be sad for uh for
81:26 - preschool so we'll see how that goes
81:32 - uh ocean at some point said late again
81:35 - what did i miss uh i'm not sure how far
81:38 - along we are when you came in so
81:40 - i guess
81:42 - i'm not sure
81:44 - you could definitely check out the
81:45 - recording though but i can't remember
81:47 - what point we were when when you asked
81:49 - that
81:56 - uh curtin call asks it looks like you're
81:59 - using headless wordpress as a json
82:01 - backend any optimizations done or it's
82:03 - good out of the box uh so yeah for the
82:05 - search we're just using the rest api i
82:08 - added a plugin
82:09 - to get
82:10 - multiple post types
82:13 - so normally with the rest api you can
82:15 - only get one post type at a time since
82:17 - we're trying to search for everything at
82:19 - once
82:20 - we are using that plugin otherwise
82:21 - there's no optimizations now for some of
82:24 - the other sections on the website i'm
82:25 - using graphql so we have a graphql
82:29 - plugin
82:30 - that lets you use graphql with wordpress
82:34 - so but in terms of just what we worked
82:36 - on today it's just rest api with one
82:39 - additional plugin
82:45 - and i don't know how familiar you all
82:47 - are with wordpress but
82:49 - the rest api used to be an additional
82:52 - plugin and it was kind of like in a
82:54 - testing phase it's now merged into
82:56 - wordpress core so that means it comes by
82:59 - default with wordpress and it's turned
83:01 - on by default
83:02 - and it's stable so it's safe to use
83:05 - in production
83:14 - okay
83:19 - i'm skipping over some of the questions
83:21 - because they here because they had to do
83:22 - with debugging what was happening there
83:24 - so they're not really relevant anymore
83:41 - uh nikki says oh cool a loading
83:43 - indicator when did that get added uh
83:45 - monday all right michael already
83:46 - answered that yeah we did that on monday
83:51 - okay nikki mentioned the dot trim again
83:54 - all right i'm glad you mentioned that
83:55 - again because i would be likely to
83:57 - forget
84:05 - mm-hmm
84:21 - uh gia says hi just tuned in please tell
84:23 - me you're going to take a look on login
84:26 - uh with the routing so admin slash user
84:34 - i'm i'm not exactly sure what you're
84:35 - asking there so geo if you could explain
84:37 - that a little bit more what you mean by
84:39 - that i'd definitely be happy to answer
84:40 - it but i'm i'm not sure
84:42 - uh right now how to answer that
84:58 - all right phoenix says hey i had a
85:00 - one-on-one call with quincy today uh
85:03 - such an amazing guy he is uh it was
85:05 - great talking to him oh that's awesome
85:08 - um
85:09 - yeah quincy is really cool um so i've
85:13 - i've talked to him a few times
85:16 - like mostly through email and things
85:19 - and also by a video call and
85:22 - yeah really nice and uh really good guy
85:25 - so i'm actually going to get a chance to
85:27 - meet him and a lot of the other free
85:29 - code camp people in person
85:31 - um
85:33 - next week so
85:35 - like next weekend i will be in in new
85:38 - york
85:39 - for like a
85:41 - free code camp meetup type of thing
85:44 - so i'm really excited for that
85:51 - so i know i mentioned this i think on
85:53 - monday but i'll mention it again because
85:55 - i'm sure there's different people
85:56 - watching with just a different time slot
85:58 - that i i streamed in next week i will be
86:01 - in salt lake city utah for a while and
86:04 - then i'll also be in new york city i'll
86:06 - be staying in in brooklyn uh so if
86:08 - anybody is
86:10 - is anywhere near salt lake city utah or
86:12 - new york city uh and would like to hang
86:15 - out
86:16 - please let me know um
86:19 - i
86:20 - that would be kind of cool so i just i
86:22 - don't know send me a dm on some social
86:25 - media or whatever and be happy to like i
86:28 - don't know go get a coffee or or
86:29 - whatever you know
86:31 - um
86:33 - so let's see i lost my place sorry
86:48 - let's see
86:58 - all right cool uh kingsley says great
87:00 - job
87:01 - um
87:02 - it curtails this drum roll
87:05 - uh no um let's see tech trick said good
87:08 - job
87:09 - uh thank you those all came right at the
87:11 - time when we finally got it to work so
87:13 - thank you i appreciate that i mean it's
87:15 - i mean it was kind of like a matter of
87:17 - time before we narrowed down what the
87:18 - problem was uh and really it was uh
87:21 - justin who who came up with the final
87:23 - uh final solution there
87:27 - um curtain call says what's the name of
87:29 - the plug-in for uh committing from
87:32 - console uh the one referencing
87:34 - repository fixes and so on uh it's
87:36 - called commitizen okay michael already
87:38 - answered that yeah so check out
87:39 - commedicine uh it's it's really cool um
87:43 - harshit
87:45 - who frequently watches this the stream
87:47 - and has done a lot of contributing
87:49 - harshit found that and set that up for
87:50 - this project so
87:52 - when i want to give credit uh where
87:54 - that's due it wasn't i didn't find out
87:56 - about it he did but i'm glad he did
88:02 - uh
88:03 - uh mammy says sorry if i'm
88:05 - mispronouncing that let me know how i
88:06 - should pronounce it but miami says
88:08 - thanks uh this really helped me a lot
88:10 - you're a great teacher i just can't see
88:13 - it but i listen
88:14 - okay yeah i'm really sorry about the the
88:16 - font if it's hard to see i really i
88:19 - can't really go any bigger because we
88:20 - wouldn't be able to see enough code on
88:22 - the screen for it to make sense um but
88:25 - uh i'm i'm really glad that it that it
88:27 - helped you out though
88:33 - um
88:35 - if e4
88:38 - i don't know how to pronounce that uh
88:40 - but says
88:41 - what's the name of your uh night github
88:43 - theme extension
88:45 - uh github dark
88:47 - i think it's just called github dark
88:57 - umberto says i tend to think more
88:58 - clearly when i'm exhausted
89:00 - yeah i mean sometimes the
89:03 - there is some things about being a
89:05 - little bit tired that can't help you
89:07 - but
89:08 - uh at some point tired is just not good
89:11 - for work
89:12 - at least that's been my experience
89:18 - uh
89:19 - pukin lung says it's so interesting uh
89:22 - this live hope to see more often
89:24 - oh awesome i'm glad you liked it yeah
89:26 - i'm gonna i'm gonna try to do this
89:29 - um as as many times a week as i as i can
89:33 - and uh i'm i'm gonna get a new computer
89:36 - for my home office soon that should make
89:38 - it
89:39 - so that i can stream better with better
89:41 - quality from home so
89:43 - hopefully that'll that'll mean i get to
89:45 - stream more often
90:14 - oh cool uh so nikki uh added a pr that
90:17 - had trim awesome thank you nikki
90:26 - he says pretty sure it's the smallest pr
90:28 - ever
90:29 - it might be
90:35 - let's see
90:39 - michael says i i think i did once that
90:42 - fixed a one word typo and a readme
90:44 - that's okay it does it still counts as a
90:46 - full request
90:50 - keytron says the word headless triggers
90:52 - me i mean a person completely wrecked my
90:55 - life with their raspberry pi headless
90:57 - server
91:01 - uh let's see
91:02 - monir uh says hi hey how's it going
91:05 - thanks for watching uh adrian says hi
91:07 - how are you
91:08 - pretty good pretty good how are you
91:10 - doing
91:13 - nikki says haven't written any code for
91:15 - a while and don't plan to either but
91:17 - that that hit felt good
91:20 - good
91:25 - uh curtin cole says just return to
91:27 - wordpress after many years and it's
91:28 - getting better now includes json rest
91:30 - api it looks okay yeah and actually
91:32 - there's going to be a new um like
91:34 - wordpress editing experience is called
91:36 - gutenberg
91:38 - i believe it's built with react and it
91:40 - uses the rest api
91:43 - so i haven't tried it yet but it's gonna
91:45 - go live with the next release of
91:47 - wordpress so
91:49 - um you can
91:51 - you can choose to go back to the old
91:53 - experience if you
91:56 - new download
91:58 - is going to be live so
92:00 - be ready for that if you have wordpress
92:02 - or if you're if you're away from
92:04 - wordpress and just want to check out
92:05 - check it out then
92:07 - i don't know exactly when the new
92:08 - release is coming but
92:10 - that's whenever it does come it's
92:13 - gutenberg will be will be there
92:39 - uh curtin cole says i enjoy the teamwork
92:41 - yeah that's awesome
92:46 - all right michael so speaking of which
92:47 - uh where's where's harship been uh
92:50 - nietzsche's he's on vacation yeah he's
92:52 - on vacation right now
92:54 - he stopped in just like really briefly
92:56 - on monday and said hi and said he was on
92:58 - vacation
93:04 - uh hihi haha says will you make a
93:06 - discord server
93:08 - do we have a discord server yet or not
93:10 - i don't think we do
93:12 - we had a lot of other things
93:15 - uh but not a discord server actually let
93:18 - me know
93:19 - if you all think it would be cool to
93:20 - have a discord server
93:22 - for for this stream
93:25 - let me know
93:27 - i could
93:28 - maybe think about starting one
93:30 - i know we already have several other
93:32 - places things that we've started up and
93:34 - like none of them has ever i think
93:36 - really taken off you they usually die
93:38 - out um
93:40 - but i don't know i have several other uh
93:42 - discord servers that i'm checking
93:44 - regularly so
93:47 - for me it
93:49 - might not be a bad thing since i already
93:51 - am on discord frequently so
93:54 - anyway just let me know
94:11 - um barakah says which date and time is
94:13 - the meet up in new york
94:15 - um
94:16 - whatever let me see
94:19 - i don't remember what the date is it's
94:21 - like the
94:22 - 19th
94:24 - i'm gonna bring my calendar up on my
94:25 - other screen so i can tell you what the
94:26 - date is
94:28 - uh
94:30 - okay so i'm flying into new york on the
94:32 - 18th
94:33 - and then the meetup is that night
94:36 - so uh the the meetup is like invite only
94:40 - um
94:42 - but i will be there on the 18th and the
94:45 - 19th and then i will fly back on the
94:48 - 20th
94:50 - so
94:52 - um i will be around not that long but
94:54 - i'll be around for a little bit
94:56 - and then i'll be in
94:59 - salt lake city
95:00 - i'll get there on the 15th and i will
95:02 - leave
95:03 - um
95:05 - like around midnight on the on the 17th
95:18 - uh he
95:19 - says what languages do you know
95:21 - um
95:22 - i'm assuming that's programming
95:23 - languages uh so javascript um
95:29 - some php
95:31 - uh i've done some stuff but i wouldn't
95:34 - say that i know
95:36 - python java c plus plus
95:40 - c um
95:43 - i think that's it oh solidity
95:47 - yeah so those are those are the
95:49 - programming languages that i've i've
95:50 - done things with
95:52 - of course i'm not counting html or css
95:54 - as programming languages and i'm not
95:56 - interested in arguing whether they are
95:58 - or not but i mean i think it kind of
95:59 - goes without saying if you're
96:01 - front end dev you know html css
96:23 - uh justin says i'm giving a lunch and
96:24 - learn at work on progressive web apps in
96:27 - two weeks do you have any advice for me
96:29 - um
96:33 - i don't know honestly i think it would
96:34 - be cool uh if you're gonna give a talk
96:36 - on progressive web apps i think it might
96:38 - be really cool to have a demo app
96:40 - available
96:42 - just so that people can
96:44 - can download it on their phone and then
96:46 - have them put their phone on airplane
96:48 - mode
96:49 - and then use it
96:51 - that's kind of cool just to demonstrate
96:53 - that you can use stuff offline
96:56 - uh because that that like generally is
96:59 - like that's the most impressive thing
97:00 - about progressive web apps uh for most
97:03 - people so i think that would be kind of
97:05 - a fun like hands-on thing
97:07 - uh and it could be something like right
97:09 - at the beginning you put the url up
97:11 - there and then they can just choose to
97:13 - go to it or not and you know let them
97:15 - know throw an airplane mode and
97:17 - so
97:18 - um i don't know that would be kind of
97:20 - cool so they wouldn't just be sitting
97:22 - there listening uh they'd also see it
97:25 - you know uh firsthand so
97:28 - i don't know that would be my my uh
97:30 - advice for that
97:35 - uh he haha says can you combine xml and
97:38 - java with
97:40 - uh intellige i'm not sure how to
97:42 - pronounce that uh to make an app
97:45 - i have i have no idea
97:47 - um
97:49 - if anybody else has any experience with
97:50 - that please let us know but i i
97:53 - i have no idea if you could
98:10 - okay
98:21 - all right justin says i would not have
98:23 - thought of that good idea thank you oh
98:24 - yeah no problem
98:27 - uh if you if you can it'd be awesome if
98:29 - you could let me know how it goes so
98:31 - after you give the talk if you you know
98:33 - come back to one of the the live streams
98:35 - in the chat i'd i'd love to hear how it
98:37 - goes
98:39 - and if you end up like publishing any
98:41 - slides or anything or a video of your
98:43 - your presentation i'd love to see it
99:05 - he says you should make live stream
99:07 - tutorials teaching us to code
99:09 - um
99:11 - i don't know i have to think about that
99:12 - i actually i'm i keep seeing emails
99:15 - popping up uh while i've been streaming
99:18 - um and i'm on currently on an email
99:20 - chain with some people at the university
99:22 - discussing the possibility of me
99:24 - actually becoming a professor and
99:27 - teaching uh
99:28 - some web development courses so
99:32 - i might be like legit teaching
99:35 - so we'll see how that goes if that
99:37 - actually happens i could definitely see
99:38 - it being really beneficial to do a lot
99:41 - of video tutorials
99:43 - for for you all and for my students
99:46 - uh so that way
99:47 - um
99:49 - yeah it'd be difficult if i just go into
99:51 - classroom demo demonstrate something and
99:54 - leave it at that right it it's it's so
99:57 - much better if they would have the
99:58 - ability to re-watch things right um
100:02 - so
100:03 - i'll probably end up doing that so i
100:05 - don't know when that will happen uh but
100:08 - based on like the tiny preview messages
100:10 - that i've been seeing going back and
100:11 - forth it seems like it's a possibility
100:17 - oh cool i had a few congratulations for
100:20 - that oh thank you it hasn't happened yet
100:22 - but it would be cool if it does happen i
100:24 - would be an adjunct professor which i
100:26 - don't know how adjunct professors work
100:28 - in other countries but in the united
100:29 - states they're usually not paid very
100:31 - much so it wouldn't be like i'd make a
100:33 - bunch of money off it but it would kind
100:34 - of be like a fun thing
100:37 - to do and i think it would be helpful
100:39 - it'd be helpful for me
100:41 - because i would really have to kind of
100:43 - learn even more to be able to teach it
100:45 - and i think it would be really helpful
100:47 - for the students as well uh to get some
100:49 - like practical you know kind of cutting
100:51 - edge
100:52 - experience with what the latest and web
100:54 - development is
100:57 - okay let me see what time it is
101:00 - all right well
101:01 - this stream is going on almost two hours
101:03 - now and i've gotten through everything
101:05 - in the live chat if i skipped over your
101:07 - question it was definitely not
101:09 - intentional
101:10 - uh so you know you can ask me in the
101:12 - comments uh or dm me or something and
101:15 - i'd be happy to ask or you know wait for
101:17 - the next stream
101:19 - uh let's see i'll be back in the office
101:21 - tomorrow so i should be able to stream
101:24 - and thank you all so much for all your
101:26 - help today i definitely couldn't have
101:29 - gotten this far without you all i was
101:31 - you know super helpful
101:33 - and
101:35 - um
101:37 - yes i think that's it for me today uh so
101:40 - i'll see see you all tomorrow hopefully
101:42 - and until then have a great day

Cleaned transcript:

hey everybody welcome to live coding with jesse i'm jesse and today we're going to try to make the search inputs in the app bar and the side drawer work okay so the idea is a user would type into that input and then hit enter or click on the little search icon and then uh the user would go then be taken to the search page and a search would automatically occur okay so i have a few ideas for how this could work uh we're gonna try them out and we can talk about it if you all have any ideas please feel free to mention it in the live chat for those of you who are new to this show you are watching me work on an actual project for my job i'm a fulltime frontend developer employed by a small university so we're working on the the new main website for the university uh so this is not rehearsed it's not exactly a tutorial it's just me going through what i'm doing but i do my best to explain things and feel free to ask any questions if you need me to explain things in more depth i will make mistakes and that's kind of the point you all can see how many mistakes i make and how i work through the mistakes i break things up by pomodoro sessions so pomodoro session is usually a 25minute period followed by a fiveminute break and so for 25 minutes we'll code and i'll have minimal interaction with the live chat and then for five minutes i'll go back to the chat answer any questions and read all the comments that you have we'll probably go back and forth and do two pomodoro sessions and then at the end of the second session i will go through all the questions in the chat and answer you know any anything that uh that you all have asked to the best of my ability so the stream will probably last somewhere between an hour and hour and a half that's usually the uh the time frame that we have okay i think i got all the intro stuff out of the way i'm doing my best to try to remember to do that for uh for all the new new people so enough looking at my face let me switch over to the code all right here we are um let's start with the ui first so you can see how this this actually looks and i'll start up an ngrok server i'm going to paste the link here into the live chat if you go to this url you will be able to see the site i'm working on and it will update live as i am working on it here alright so that link is is now in the chat and here we are looks like you're clicking on it awesome so let me uh that's the dev site i guess i don't have the loc oh is that it localhost okay all right so we have two search boxes we have this one up top and we have this one and the the side nav so those are what we're going to be working on and then we have a search page that we're going to navigate to so just just so you get an idea of where things are at and these are available from any page on the website so they're always going to have this unless you're on mobile then we get rid of this on the in the app bar but it's always there in that side drawer and let me start my timer because we're going to get into the code now so i have the component for search dot js here and if you are interested in looking at the code there's a link to the github repo in the description so this is quite a large component and could probably use some refactoring but for now we're gonna we're gonna leave it like this and what we we need to do in this component is create some way to trigger the search okay when we navigate to that so we need to make sure that we can get the value from the the input and then use that to search now over here i have the side drawer component so on the right and with this component we've already i've already done a little bit with it okay so just some basic uh stuff i've put in let's see an on click handler and it goes to the handle search function so let's go up to see the handle search function and see what we're doing let's see okay so in handle search all we're doing is saying if a user has actually entered in something into that search box then we're going to do a router.push now this uses the next js builtin router okay so if you want to learn more about that you can go to the documentation for next js it's on github they have a website so if you type in next.js github it'll probably be the first result that comes up and it has a lot more about how their router works but in this case we're giving it a path name and then we are using that search term so whatever the user had typed into that input gets saved in state so we're just accessing that that state for the search input and we're passing that along as a query string so let me show you how this this looks uh when we do this it's going to be hard to see because the you know the app um the address bar is is a little small but we could type in something basic like that and if i hit actually i didn't enable the enter key yet i just have the click working so if i click maybe it's not working let's try that again there we are okay so when i clicked it took me up here and just in case you can't read it i'll read this out so we now have we're on the search page so it's slash search and then question mark search equals the okay so we we have in the url the search term so i figured that will probably be the main way that we can we can grab that data the other idea i had is passing it uh by props but either way it might not be a bad idea to put the search term in the url because if we can get that working it would enable users to then save a um a search term or save a search and then they can come back you know let's say they bookmarked a search and those same results will will be there okay so there's there's definitely some other benefits to doing it this way it may not be the most direct way i think props would be a little bit more direct but uh i think this is something that we probably should do okay let me let me go back then so unless someone has a um a different idea for how to do this i guess we'll move along and basically start working in the search component to do two things one check to see if there's a search term in the url and then if there is initiate a search okay so that's what we want to do here if we run into a dead end there we could potentially attempt to pass a search term by props and maybe that would be a little bit easier i'm not sure about it though so i'm going to make a little bit of space so we can focus on this let me know if the font's too small i could make it a little bigger so right now a search is is triggered on um on a change in the search input so i guess we could hmm okay it looks like the font's too small so let me i'll make that bigger okay i don't think i can go much bigger than that without it being pretty hard to see i just wouldn't be able to see that much code at once but so hopefully this is okay so i'm thinking you know there's a few ways we could do this we could um put the search term into the input um in in this page or we could manually trigger uh a search so what i mean by that is let's say like when the component loads we'll just call fetch search term all right after we've already set the state for the the search string okay so either way um i i think we can get it to work uh michael says why not cash the search on the client side i think that's a great idea and that's definitely a feature we could work on today i'm just i'm worried about doing this though okay all right so let's try first off let's let's take the first step let's just see if we can get the url uh the search term out of the url so i suppose you know we want to do this on on a mount so we'll try component did mount and this is a builtin life cycle method so that means it comes by default with with free with react and this will run when the component mounts so within here um let's try we'll just try to do a console though um actually you know what we could do search term let's just have the uh have it appear right in the the input so we'll have the search term appear in the input i just need to remember what part of the state that goes into where we at okay value is search term okay so instead of console.log we could say uh this state search term equals um and then just to start out let's do like a window location and then i can't remember what to what it is i might have to look this up anybody remember off the top of their head it's window location what to get the um the query string is it query no um yeah let me let me look this up on my other screen okay um all right so i'm just checking out window.location uh on mdn mozilla developer network that's a really good resource and i'm hoping that they show all of the different options for window.location all right all right it returns an object let me just check this here in our um in our console clear this out window location and let's see what we get search there we are search window location search okay so we'll get you see the the value of search here make it a bit bigger um we are going to have to do some some stuff to get this this value out of there so let's not worry about this for now i just want to see if we get something so we can do search okay and let's see if this works oops i'm sorry i definitely should not have done that i'm sure one of you uh probably caught that and are already telling me in the chat so this states are sure um oops this set state and now we're gonna do search term and this is what we're gonna do okay all right that's what we want to do the only thing i'm a little bit worried about here is we are doing serverside rendering so obviously window is not going to work for side rendering so we'll see how that that works out let's see if this even works um i guess so refresh okay i guess it didn't work we can let's be 100 sure by going to our react dev tools and let's see what our state is search term yep search term is still blank okay so for whatever reason uh i suppose component did mount is not working so um let's see all right michael says window location search dot sub string uh one actually let's let's try that in the uh in the console to see if that would that would work no it's still giving us the same yeah it's just taking out the uh question mark which i guess i mean it's a little bit better without the question mark okay oh okay nikki says uh i can't find that response again but get initial props has access to the query param so you can check for one there for the first search making the url url shareable sorry sorry about the yawns for some reason i just yawn so much when i'm streaming okay uh all right let's try that let's try to run get initial props and see if we have uh more luck with that okay it looks like we can access the query param so i think we ought to go to the documentation first to see exactly how we do this so i'm going to go to next js on github and let me make this bigger and i'm going to try to find gets initial props okay there we are so fetching data and component life cycle hmm actually this is good to know i didn't realize you could use these for uh stateless components cool those are props all right here we are so get initial props receives an object with these properties pathname query okay cool we should be able to get the query then awesome nikki said types next in browser the first result is next.js github page sounds about right yeah i'm there often okay all right let's see i don't think they have example of getting the query that would be kind of cool but it shouldn't be too difficult all right this is actually another way to do it we could have made that a link all right it's fine it works the way we do it yeah we do uh use without instead all right let's just see what we get with uh with query here so i guess i can copy and paste this oops this one and then we'll just change it to what we need okay let's get rid of this one uh actually let's keep that for now and then we'll copy and paste what we need into there so right we want the query and let's see let's just do this for now oops guinness would prob should resolve an object but found a defined set hmm i wonder if i have to return it something there we are hmm all right nothing's happening there okay why maybe i can do this props query oops we'll do a console log hmm that's weird for some reason nothing we're doing in component dead mount is is actually working okay check my time okay about five minutes i'll come back to the live chat and uh and answer some questions okay all right let me think actually you know what we can we can see what's uh what's here if we go to react oops let's check out this and we should be able to see it in props okay so props query oh okay so we're getting the older version so in the documentation down here it says if you're using with router you just get these three in which our query then is an object and it didn't give us the info that we needed so all right let me see why it's doing this instead of another one i usually don't like to just read when i'm streaming but i i think this section is definitely going to help us here each type of curse with router instead hmm oh curtain coal says is there two component did not have do i have it twice that might explain why it's not working that's excellent awesome okay so evidently our component did mount we have two of them and that's why it's not working um actually though i think yeah actually let's let's do that let's um yeah let's go back to what we're doing and then we don't even have to worry about why we're getting uh you know one form of the information we should get and get industrial props instead of the the other form that we want okay so what we'll do then is get rid of that and put it down here okay why am i getting this oh because it's the second good job catching that that's uh i didn't even see that uh so you did a curtain call thank you all right okay so let's see now if uh it'll actually change all right cool okay so that that actually did work so it changed this and now it it has what we want but well not exactly what we want right so let me go up some of you put in who did albert okay so albert said uh we could split um split what we've got here okay well i think my timer is yeah my timer is going to go off okay so next step in our next pomodoro session is going to be let's grab the actual term out of here and leave all the rest off and then we'll initiate a search which i actually this shouldn't be too too hard the rest of it uh is pretty i think it's pretty straightforward okay let me set set this timer to five minutes i'm going to scroll all the way to the top of the chat and just work my way down so if you just asked something i may not get to it in this five minute session but i'll get to it after the next pomodoro session all right all right i'm just kind of skimming down and trying to find the questions here uh nikki says uh how are you doing how's the wrist i'm doing way less coding lately need a break uh just watching revlon relevant video daily uh this is this is the one no pressure um yeah my wrist is i mean it's doing okay it's just it still hurts um so the timeline i think is like it'll actually feel worse than it did before the surgery for about six weeks then it'll start to feel better uh but i'm looking at maybe like three months before i should i'm really feeling normal so i'm going to try to strengthen it just maybe like stretch it a little bit because right now it's pretty stiff so i'm just going gonna try to do more and more with it every day and and see how that goes but i mean just typing all day like at the end of the day my wrist is sore just from that so like without putting any weight on it at all it's just gets sore so um it'll just it'll just take time you know i mean which is expectable uh you know after after surgery it's expected yeah it's expected after surgery nikki says add a dot trim to that check and handle search prevents spaces from triggering search oh that's a good idea that's a really good idea um let's see nikki says i posted something on an issue a while ago about making the search your url shareable going to look for it yeah i remember i remember you posted on that issue uh so yeah i remember you posted that and i remember thinking it's a good idea at the time but i wasn't sure if that was something we'd be able to get in before launch and remind me after the next session to give you an update on launch date i just had a pretty long meeting this morning where we talked a lot about what's going to happen on the website so i do have some updates on that curtain closes font size is okay but it's so very bright and clumsy it is bright uh it is bright i'm not sure what a clumsy font means but um i guess i'm open to suggestions for fonts though uh gino asks uh should new junior developers skip ruby on rails python django and php laravel and just focus on angular react view node and express in mongodb it just depends on what you want to work on if if you have the ability to just pick what you want to work on i mean i would go more with the full stack javascript you know type type of stuff like i to me it's like if you can learn one language and do front end and back end like why not you know instead of trying to learn two different languages all right you're gonna have to know javascript no matter what if you're gonna do anything at all with front end so that that would be my my option but you don't always have that luxury sometimes you get a client or you get a job and you have to learn you know what you need to to get the job done so um you know i think it would be fine either way but i would lean more towards uh the full stack javascripts um po pokken puken lung sorry if i'm mispronouncing that but phuket long says actually what is this project it is a the main website for the university that i work for all right albert says isn't this project a little too big for just one developer i don't know maybe it is but i'm the only one working on it well i shouldn't say that you are helping a lot so um yeah but it's just me so at some point in the future it'd be awesome if we could hire some more developers here and i would have a team but right now there's only two developers in my department and we both work on totally separate projects uh so this is what i have right now okay my timer is up i'm gonna jot down where i'm leaving off here in the comments okay all right so let's reset this timer here for 25 minutes after the session's up i'll get to the rest of your your questions and all right where were we oh okay you know what let's we're on the search now what did we want to do i think it was nikki had an idea to do the the trim um actually i'm not going to worry about that right now because then i'm going to lose track i'll just try to remember that if i forget it um and you have time nikki uh please just make it an issue or something uh or i mean if i if you don't have time don't worry about it i'll try to remember uh but i really want to get this working in this next pomodoro session so i'm just going to go straight to it even if it's not ideal okay so we now have the data and we just need to split this string all right so let's see let's see what we can do um let's see actually let's just look up okay so for those of you especially for those who are new and i don't want this i want the mdn especially for those of you who are new sometimes it can seem like there's a lot of stuff to learn you have to remember it but like realistically i've been doing this for at least five years i'm getting paid full time to do this and i can't remember exactly how to use split right so it's not a big deal to have this stuff memorized when all you have to do is type it in the search bar and now you have it so and i kind of like doing this because i usually learn something new about a thing so even though i'm just trying to figure out what's the syntax if i spend a little extra time reading this i find out you know new stuff so anyway what i'm trying to say is just don't get too bad out of shape if you can't automatically remember syntax for how to do things because really it's it's not a big deal okay so we got our separator uh and then our limit so our separator in this case is going to be that equal sign so we need our string dot split and then the equal sign and that will give us an array and we should need the second value in the array which in this case would be 1 because the array started zero okay so let's go back and and try this out uh where do we do this oops it's in our um component did mount here we are so instead of just this set state and we're adding window location search it's going to be window location search dot split um and then it's going to be one and oops no no equals sorry equals and i don't know if we can do this all at once but i'm a little bit curious so i'm going to say oops this should be parentheses uh equals and it probably should put this area okay equals and i'm gonna try to do this i don't think i don't know if it'll work but if it does that'll be kind of cool and it'll let us keep this all in one line uh so let's save that and we should see the result now yay it worked okay cool so if if you're not sure what i just did there so from this this value is giving us that whole search thing with the question mark and the equal sign and then once we split it now it returns an array right that has two items in the array the zeroth item and the first item right so now we say we just want the first item so what gets returned out of here is a string that's that search term that we're looking for okay so this is actually going to work perfectly unless for some reason we have more than one uh parameter there in the query string in which case we would have to modify this i can't really foresee a reason why we would have more than one on the search page so i think this should be safe for now but just just for you all if you're trying to do something like this if you think you may have more than one thing you're you're definitely not going to be able to do it like this just like this you have to modify it a bit okay so now that we have this and we've put it into state uh what we can do so we've set the state and then we can trigger let me be i want to double check this function and make sure this will work we can trigger fetch search term okay we don't have to pass anything yeah so let's do that and let's say this dot fetch search term okay let's see if that works hmm all right that's interesting okay so let's see what this oops i want to see what the uh this ended up being oh interesting okay uh maybe that's pulling from somewhere else let's double check so we're setting the state to that value uh which part i say we're setting search term to equal that but maybe it's pulling from somewhere else this fetch search term so say base search string this state search term okay it is supposed to be grabbing the search term and then also the search type is supposed to be on the end of that um so we shouldn't have anything so by default there's not going to be any parameters at the end this is weird to the search term yeah this this should be okay it this state search term hmm all right i'm gonna console.log within here um let's see if that'll work it's giving me a an error there but also all right let's see all right all right let me go back let's double check in our react um dev tools let's see what we have a search search term is the okay all right that's interesting all right i'm gonna i want to see what what gets triggered on this search here on change this get search results maybe we should do that instead yeah let's do git search results i think i was skipping a few functions and trying to go straight to that one uh so not sure if this will solve the problem but this is probably the way we want to go anyway so let's do that all right you know what i'm going to move these up because i'm used to these being up at the top i just feel more comfortable if they are okay i like having the default like life's um life cycle methods there at the top okay so instead of fetch search term it's going to be get search results okay cannot read property oh there we go can i probably target him undefined stop value i'm at 50 oh 96. why am i using there okay um okay so the search term is getting set to value um but there is no value all right so maybe then what we want to do is uh debounced search okay let's do that then tbalance okay hey there we are it worked this time cool okay let's verify that again make sure it worked okay great now let's try it let's try it again straight from this this search oops awesome so we've actually added two um kind of layers of functionality not only will that work uh from that search input but also now any uh url you know we can type whatever we want in and it'll automatically do a search so this will enable you know being able to bookmark search results uh which is awesome now the only thing we need to change is right now if i were to do a search straight from this page then you see this stays the same right so we need to update it so a search from the search page actually updates this as well and we can do that with the the next router so that will be the next steps for then and then also we're going to have to hook up this one instead of just a side drawer but that shouldn't be too hard it's just going to be a copy and paste into this app bar component so let's see how much time we have how much we can get done okay a little over 10 minutes let me check the the real time 2048 okay actually you know what i'm going to since we got this working and the rest of it is just going to be a matter of kind of copying what we've already done i'm going to end now even though it's a little bit early and go to the questions that way i have a little bit more time for questions i do have to make it over somewhere else here on campus to um do some paperwork and the person i need to meet i believe is leaving in about an hour so i want to make sure i can get over there in enough time so i should probably double check i'm gonna double check the email and do one to four oh actually no i think i have more time than that yeah i do have more time all right let's try to get something done then sorry about that uh so i think they're gonna be here for another two hours so so we do have time so let's um all right well let's add this in over here as well uh so so that this also will work uh also it'd be cool to add uh at make it so that we could hit enter so that's actually the only new functionality that i think will will be added with this so let's let's do that and i'm not sure if i've ever done that before with react i don't think i have all right so this would be cool i'll learn um i'll learn something new here okay hmm oh so i'm not going to do it on here it'll be over here in the drawer component alright so the handle search needs to be triggered when we hit enter all right so i'm just going to look this up if anybody knows how to do it put it in in the chat please otherwise let's look this up and let's say detect okay awesome so stack overflow to the rescue this is exactly what we need we need to call an event after pressing whoops enter key i don't know what i just did okay according to react docs there we are all right let's just read the react docs instead keyboard events all right awesome so there's an on key press and then we can do the character code nice all right so on yeah on key press so let's add that into where it's we'll put it here on our input on key press and let's see let's see if there's an example here key press okay interesting okay so we're gonna add okay all right this works so this handle search change let's see all right curtain call is saying key press which 13 actually is there a way i could do it right there hmm all right i'm not sure michael's sitting in a switch yeah nobody i know the answer value uh is 13 but i was just wondering if there was some like shorthand way that i could do that uh like here right or if i actually had to modify this uh handle search um oops it shouldn't have been handle search change it should it search change no it should be handle search there we are okay all right nikki saying doesn't an input inside a form automatically submit on enter or does react prevent that um yeah i don't well i don't know if we even want to submit in this case you know oh okay justin has some some code here all right this looks really cool let me do that all right where am i at okay let me see if this works and then if it does i'll go in and explain what's happening oops unexpected character that's weird okay so that did not work okay here's another one all right so that didn't work so i'm not going to go over it since it didn't work but um it would have been cool it looked cool all right i guess we could just um just do it like like we saw in the example on stack overflow right it would be cool to do it differently but this will definitely work okay why am i still having this this is weird why is it still giving me an error actually this is really weird i think let me try this again i think something may have gotten copied somebody getting copied weird let me try this one more time all right shake this out so okay andrew's not doing anything what okay so that's i mean we're not getting an error or anything but nothing's happening when i hit enter your key i wonder if we're getting uh the right let's try key code and um we'll go with 13. try this i never tried to just use the name of the key before so i mean maybe it works it but let's just try it like this and see if that is the the issue nope not the issue oh well um justin i think that was an awesome awesome idea not 100 sure why it's not working curtain call says try e key which try enter lower case instead of enter uppercase that's what albert says e key console log okay we could uh a console log it yeah that makes sense uh so let's do that for now let's just get rid of that and do um e key okay so what this should do is just tell us what key is being pressed in the console all right that should work right enter should definitely be working there okay so go so this should definitely work if e and so now we're doing uh a tern area right so shouldn't you do on key press e without the braces curtain call says shouldn't you do on key press e without the braces no we need the braces in react because otherwise it won't interpret that as javascript um okay so if e key equals enter um if it does equal enter then let's call this dot handle search otherwise we're going to say no okay okay so what is happening let's all right let's just try try to figure out where the problem is happening okay so we're just going to console.log the word search it should console.log when the enter key is pressed right oops there we go okay awesome the so okay cool all right so we just had um the we know that this is working so the issue let's check this out handle search if this state search is not equal router push past n okay um so we need to do oh you know what i wonder if it's a this issue so um that's that's gonna be my guess it's it's at this issue within here so um nikki just said the same thing it's this issue isn't it yeah i think so so let's see how we can all right let me see what okay so justin's saying try it like that okay i'm gonna try that first because that's gonna be the easiest thing if this works then this would be very easy all right awesome that was it that was it so with so normally um in in react you can you can just do this right you can say this dot handle search right and you don't need and in fact you don't want to actually you know put the parentheses here you'd normally do to invoke a function right but in this case since it's not exactly the same right we're actually entering into uh the inside of another function right uh we need to invoke that so awesome uh great job justin uh just for coming up with this in the first place and then also for figuring out what the problem was so i really appreciate that and that took a little bit longer but this is honestly this looks really clean i like it and we didn't have to modify handle search and clutter it up there with uh with some if statements so actually i really like this right so we we avoid even having to call that function right uh so we do our check here otherwise we would have been actually calling this other function and then doing the check so i i don't know the difference in performance is probably so so small it's insignificant but i like how it looks uh and it was kind of cool uh cool to learn you know how to do that so anyway that's all i'm going to do for today because our my timer ran out a while ago i was just so into it i wanted to keep going until we got it so we pretty much got almost everything that i wanted well we definitely achieved what i wanted to achieve we added some extra things i'd like to do there and we didn't get to all of those but uh pretty close so i think it's definitely a good a good stream in terms of getting things accomplished status and we're going to com i'm going to commit this so you all can have the code available to you on github immediately so let's add this new feature and let's say enable side drawer search input and then we'll decide your search yeah that that works uh this does affect an open issue so let's put yes and let me see let's figure out what issue i love it when i type g and and github actually is higher than gmail in my uh suggested sites that's pretty awesome all right so i'm gonna go check out the issues here i know i have an issue about this i guess would just be under implement search maybe i don't have a separate issue okay i don't think i made a separate issue about it i do have a separate um kind of card in my trello board for it but it's the same issue so that's issue number 74. so we're just going to say re for regarding number 74. okay and when we add that in uh then there's going to be a little um spot and i guess i could show you how this looks right now because i think i've done it before so you can see here the reference oh yeah did i say regarding i mean reference i don't know why i thought it was regarding okay anyway so this issue is now referenced in this commit it's referenced in this commit and this commit and this commit so at least kind of a nice uh log of you know hey this is getting worked on and here's what we've done to work on it okay so you don't want to have to manually come here and and give an update but this lets everybody know that you know this issue isn't dead right it's it's being actively worked on and here's what's been done all right so that went through it passed all the tests and now i can do a get push and this will go straight up to github and you all can check it out uh feel free to fork this repo and make any contributions that you want submit a pull request i'm definitely open to that and i'll help you out if you have any trouble with it all right cool so let's check this we won't get an auto refresh on on github at least i don't think you will but here we are there's there's our our commit so enable side drawer search all right cool so i'm going to scroll back up to where i left off in the chat so if you have any questions or anything or comments put it in there uh and when it comes to the comments i i totally enjoy compliments and nice things but if you have something critical to say feel free to say it i want to make these streams as good as they possibly can be so that they're helpful to you all so if you think that there's something i'm doing wrong or something that i i could do that i'm not doing please you know let me know i can't always do everything you know that you say but i definitely want to hear what what you think so don't be afraid to uh to put critical comments in there some occasionally people put you know comments that are pretty pretty rude um and i'm totally cool with that it doesn't bother me um especially because 99.9 of you are super positive and nice about it uh that definitely outweighs uh everything else and if i ever get to the point where 99 of them are all negative then i'll know that maybe it's time to stop because this is not useful for you all okay scifaldine says hi hey how's it going welcome to the stream uh alex alexandro says hello afternoon i'm brazilian hey how's it going thanks for watching uh anand uh wants to know where the first video in the series is or the playlist uh there's a play playlist on so if you click on playlists on free code camp go to um the project number five playlist for live coding with jesse i think it it might be called react project five or something but if you go to that playlist that should have all the videos in order there's quite a few videos this is number 91 just in this playlist and with project five so um you know i definitely recommend if you're gonna watch maybe try to watch it on twotime speed and you know maybe skip around videos just to focus on what you're interested in if you have the time to watch them all that's that's awesome but if you don't have the time then that's probably the best way to go about it okay and it says hey hey anna how's it going i feel like i haven't talked to you in a really long time i guess it has been because i i didn't stream for a while after my surgery and stuff so um yeah let me know how how's how's it going what's new with you i'm really glad you get to catch the stream today a curtain call at one point said it's bad to code when you get got so very tired yeah that is it's for sure um so this is just a little tip uh from curtain call and from me in case you haven't been there yet um sometimes it seems like a good idea to stay up really late in code but i've found that i definitely make more mistakes after a certain point like i stay up late and i could i do good for a while but after a certain point it's just not worth it right because you mess things up so uh it'd be a good idea to like find out where that point is for you and then stop uh whenever i when i first moved into the house that i live in right now uh it needed a lot of work it was the house was like completely trashed so we got a good deal on it but we had to work so i used to have a rule that if if i messed up twice in a row i had i'm done for the night so that means like if i measured wrong twice if i cut if i had to cut something twice in a row because you know i was like building walls and stuff says cutting two by fours and drywall and stuff like that so i would say okay if i had to recut something twice i'm done because at that point i would just be wasting materials and wasting my time so i kind of have a similar thing with my code right if i start really messing up like consistently then i'm done because at that point there's not it's just not efficient anymore like i would get more benefit if i slept for a little bit and then woke up and started to code again so i mean sometimes it's an emergency like server's down or something you really got to do it but if you can that's a good point to go to sleep so anyway hopefully that rule will help somebody at some point uh lakshan says which js framework is best for mobile app development i i would recommend react so react native okay i i think react native is good uh i've messed with um like doing ionic before uh it's pretty good but but honestly uh i've been super impressed with react native with how easy it is to get things going with the quality of the apps uh i i really i like react native so that's my my recommendation i've heard you view either already has something to do native apps with you or they're going to come out with it so i don't know what uh how far along they are with that or if it's possible yet but i mean that's another option but obviously i've never used it so i can't really comment on you know the the pros and cons of it oh nikki said uh also flutter nikki sorry the flutter is pretty awesome has anybody used flutter so if you're not sure what flutter is it's um it's like a framework or uh some type of system to build native uh apps so um i didn't do they i don't know if they just announced it at the google i o conference or it was already out and they just talked about it but that was the first time i heard about it but i haven't used it yet and i haven't really i haven't watched any videos on it or anything like that but i would like to know how it is so if anybody has used flutter uh to build an app or anything like that let me know in the chat please or in the comments down below uh if you're watching the recording of this because i'm i'm definitely interested in it i mean i'm still like i like react native but i'm always open to learning you know new things exxon says i think i have to learn a lot to learn react framework well i mean you don't have to know that much to just get started with it but to really do more advanced thing it things it does take a little while for bigger apps like state management becomes a big issue so there are some things about react that take a lot of time to learn but you know just to get up and started with something basic it shouldn't take too much work it does depend on how familiar you are you are already with javascript though uh but you know don't don't be intimidated by it it i was really intimidated by it at first but it ended up being a lot easier than i thought it would be especially react native react native was so much easier than i thought for some reason i was just super intimidated by it but it ended up being not only easier than i thought but way more fun than i imagined uh not bad actually like my my wrist hurts uh but the doctor said that's normal it should hurt um he actually i was able to give him like a normal handshake with my right hand which is the one that i had surgery on and he was pretty impressed that i was able to shake his hand like like i did so i guess that means i'm doing well so i just need to relax and take it take it slow other than that i feel pretty good i i haven't really been able to do like my normal exercise routine so that's got me thrown off a bit and um from all that time off that i had it like not working out my sleep schedule is so thrown off so like so hard for me to go to sleep which is probably why i'm yawning because i'm running off of less sleep than i normally get because i just have trouble falling asleep but uh anyway and thanks for asking i'm not going to go on anymore because i don't know how many people actually care about uh my sleeping habits right now but uh i i appreciate you asking that all right nikki says do you have a thick elastic band those are great for wrist exercises oh i'm sure i have one somewhere i have to see i think right now i don't want to actually add any weight or resistance because my wrist like hurts enough just with without anything like i don't see like me just doing this right now hurts like and if i try to actually like spin it in a circle like that that hurts so i don't really don't need to add any weight and it says my branch is waiting for merge ah awesome awesome i'm gonna check that out after um after the stream's over so hopefully i'll have time to get it merged in today i'm super excited about that thank you so much for uh for contributing uh curtin calls this question do you manually normalize search input query somehow or it's react router's duty um i imagine things are happening on re so i'm not doing anything to normalize it so i'm kind of trusting that uh the router and so i'm not using react router i'm using the next router so although i love react router since next js has a router built in when i use next i do that if i use create react app i use react router if i use rack native i use react router or actually it's called react native router but same same but just for for react native michael says his first day of school uh for for the kid freshman high school i love him but he's been getting on my last nerve now the teachers can have him back yeah my uh my kids are gonna go to school soon too i have mixed feelings about it so like i'm not home with them all day so i i don't know like i'm gonna miss them but at the same time like usually i'm at work during that time so it's not gonna be that different for me the only difference is like i'm gonna have to be more strict about getting getting them to bed on time and i'll probably have to wake up earlier so i can get him ready help get him ready for school and and driving to school so um yeah i actually my youngest son ambrose is he just turned four and he's gonna go to fouryearold preschool so he hasn't been to school before uh and he was really excited but then he told me a few days ago that he was nervous about it uh so i hope he does all right i'm worried about him uh i don't want him to be sad for uh for preschool so we'll see how that goes uh ocean at some point said late again what did i miss uh i'm not sure how far along we are when you came in so i guess i'm not sure you could definitely check out the recording though but i can't remember what point we were when when you asked that uh curtin call asks it looks like you're using headless wordpress as a json backend any optimizations done or it's good out of the box uh so yeah for the search we're just using the rest api i added a plugin to get multiple post types so normally with the rest api you can only get one post type at a time since we're trying to search for everything at once we are using that plugin otherwise there's no optimizations now for some of the other sections on the website i'm using graphql so we have a graphql plugin that lets you use graphql with wordpress so but in terms of just what we worked on today it's just rest api with one additional plugin and i don't know how familiar you all are with wordpress but the rest api used to be an additional plugin and it was kind of like in a testing phase it's now merged into wordpress core so that means it comes by default with wordpress and it's turned on by default and it's stable so it's safe to use in production okay i'm skipping over some of the questions because they here because they had to do with debugging what was happening there so they're not really relevant anymore uh nikki says oh cool a loading indicator when did that get added uh monday all right michael already answered that yeah we did that on monday okay nikki mentioned the dot trim again all right i'm glad you mentioned that again because i would be likely to forget mmhmm uh gia says hi just tuned in please tell me you're going to take a look on login uh with the routing so admin slash user i'm i'm not exactly sure what you're asking there so geo if you could explain that a little bit more what you mean by that i'd definitely be happy to answer it but i'm i'm not sure uh right now how to answer that all right phoenix says hey i had a oneonone call with quincy today uh such an amazing guy he is uh it was great talking to him oh that's awesome um yeah quincy is really cool um so i've i've talked to him a few times like mostly through email and things and also by a video call and yeah really nice and uh really good guy so i'm actually going to get a chance to meet him and a lot of the other free code camp people in person um next week so like next weekend i will be in in new york for like a free code camp meetup type of thing so i'm really excited for that so i know i mentioned this i think on monday but i'll mention it again because i'm sure there's different people watching with just a different time slot that i i streamed in next week i will be in salt lake city utah for a while and then i'll also be in new york city i'll be staying in in brooklyn uh so if anybody is is anywhere near salt lake city utah or new york city uh and would like to hang out please let me know um i that would be kind of cool so i just i don't know send me a dm on some social media or whatever and be happy to like i don't know go get a coffee or or whatever you know um so let's see i lost my place sorry let's see all right cool uh kingsley says great job um it curtails this drum roll uh no um let's see tech trick said good job uh thank you those all came right at the time when we finally got it to work so thank you i appreciate that i mean it's i mean it was kind of like a matter of time before we narrowed down what the problem was uh and really it was uh justin who who came up with the final uh final solution there um curtain call says what's the name of the plugin for uh committing from console uh the one referencing repository fixes and so on uh it's called commitizen okay michael already answered that yeah so check out commedicine uh it's it's really cool um harshit who frequently watches this the stream and has done a lot of contributing harshit found that and set that up for this project so when i want to give credit uh where that's due it wasn't i didn't find out about it he did but i'm glad he did uh uh mammy says sorry if i'm mispronouncing that let me know how i should pronounce it but miami says thanks uh this really helped me a lot you're a great teacher i just can't see it but i listen okay yeah i'm really sorry about the the font if it's hard to see i really i can't really go any bigger because we wouldn't be able to see enough code on the screen for it to make sense um but uh i'm i'm really glad that it that it helped you out though um if e4 i don't know how to pronounce that uh but says what's the name of your uh night github theme extension uh github dark i think it's just called github dark umberto says i tend to think more clearly when i'm exhausted yeah i mean sometimes the there is some things about being a little bit tired that can't help you but uh at some point tired is just not good for work at least that's been my experience uh pukin lung says it's so interesting uh this live hope to see more often oh awesome i'm glad you liked it yeah i'm gonna i'm gonna try to do this um as as many times a week as i as i can and uh i'm i'm gonna get a new computer for my home office soon that should make it so that i can stream better with better quality from home so hopefully that'll that'll mean i get to stream more often oh cool uh so nikki uh added a pr that had trim awesome thank you nikki he says pretty sure it's the smallest pr ever it might be let's see michael says i i think i did once that fixed a one word typo and a readme that's okay it does it still counts as a full request keytron says the word headless triggers me i mean a person completely wrecked my life with their raspberry pi headless server uh let's see monir uh says hi hey how's it going thanks for watching uh adrian says hi how are you pretty good pretty good how are you doing nikki says haven't written any code for a while and don't plan to either but that that hit felt good good uh curtin cole says just return to wordpress after many years and it's getting better now includes json rest api it looks okay yeah and actually there's going to be a new um like wordpress editing experience is called gutenberg i believe it's built with react and it uses the rest api so i haven't tried it yet but it's gonna go live with the next release of wordpress so um you can you can choose to go back to the old experience if you new download is going to be live so be ready for that if you have wordpress or if you're if you're away from wordpress and just want to check out check it out then i don't know exactly when the new release is coming but that's whenever it does come it's gutenberg will be will be there uh curtin cole says i enjoy the teamwork yeah that's awesome all right michael so speaking of which uh where's where's harship been uh nietzsche's he's on vacation yeah he's on vacation right now he stopped in just like really briefly on monday and said hi and said he was on vacation uh hihi haha says will you make a discord server do we have a discord server yet or not i don't think we do we had a lot of other things uh but not a discord server actually let me know if you all think it would be cool to have a discord server for for this stream let me know i could maybe think about starting one i know we already have several other places things that we've started up and like none of them has ever i think really taken off you they usually die out um but i don't know i have several other uh discord servers that i'm checking regularly so for me it might not be a bad thing since i already am on discord frequently so anyway just let me know um barakah says which date and time is the meet up in new york um whatever let me see i don't remember what the date is it's like the 19th i'm gonna bring my calendar up on my other screen so i can tell you what the date is uh okay so i'm flying into new york on the 18th and then the meetup is that night so uh the the meetup is like invite only um but i will be there on the 18th and the 19th and then i will fly back on the 20th so um i will be around not that long but i'll be around for a little bit and then i'll be in salt lake city i'll get there on the 15th and i will leave um like around midnight on the on the 17th uh he says what languages do you know um i'm assuming that's programming languages uh so javascript um some php uh i've done some stuff but i wouldn't say that i know python java c plus plus c um i think that's it oh solidity yeah so those are those are the programming languages that i've i've done things with of course i'm not counting html or css as programming languages and i'm not interested in arguing whether they are or not but i mean i think it kind of goes without saying if you're front end dev you know html css uh justin says i'm giving a lunch and learn at work on progressive web apps in two weeks do you have any advice for me um i don't know honestly i think it would be cool uh if you're gonna give a talk on progressive web apps i think it might be really cool to have a demo app available just so that people can can download it on their phone and then have them put their phone on airplane mode and then use it that's kind of cool just to demonstrate that you can use stuff offline uh because that that like generally is like that's the most impressive thing about progressive web apps uh for most people so i think that would be kind of a fun like handson thing uh and it could be something like right at the beginning you put the url up there and then they can just choose to go to it or not and you know let them know throw an airplane mode and so um i don't know that would be kind of cool so they wouldn't just be sitting there listening uh they'd also see it you know uh firsthand so i don't know that would be my my uh advice for that uh he haha says can you combine xml and java with uh intellige i'm not sure how to pronounce that uh to make an app i have i have no idea um if anybody else has any experience with that please let us know but i i i have no idea if you could okay all right justin says i would not have thought of that good idea thank you oh yeah no problem uh if you if you can it'd be awesome if you could let me know how it goes so after you give the talk if you you know come back to one of the the live streams in the chat i'd i'd love to hear how it goes and if you end up like publishing any slides or anything or a video of your your presentation i'd love to see it he says you should make live stream tutorials teaching us to code um i don't know i have to think about that i actually i'm i keep seeing emails popping up uh while i've been streaming um and i'm on currently on an email chain with some people at the university discussing the possibility of me actually becoming a professor and teaching uh some web development courses so i might be like legit teaching so we'll see how that goes if that actually happens i could definitely see it being really beneficial to do a lot of video tutorials for for you all and for my students uh so that way um yeah it'd be difficult if i just go into classroom demo demonstrate something and leave it at that right it it's it's so much better if they would have the ability to rewatch things right um so i'll probably end up doing that so i don't know when that will happen uh but based on like the tiny preview messages that i've been seeing going back and forth it seems like it's a possibility oh cool i had a few congratulations for that oh thank you it hasn't happened yet but it would be cool if it does happen i would be an adjunct professor which i don't know how adjunct professors work in other countries but in the united states they're usually not paid very much so it wouldn't be like i'd make a bunch of money off it but it would kind of be like a fun thing to do and i think it would be helpful it'd be helpful for me because i would really have to kind of learn even more to be able to teach it and i think it would be really helpful for the students as well uh to get some like practical you know kind of cutting edge experience with what the latest and web development is okay let me see what time it is all right well this stream is going on almost two hours now and i've gotten through everything in the live chat if i skipped over your question it was definitely not intentional uh so you know you can ask me in the comments uh or dm me or something and i'd be happy to ask or you know wait for the next stream uh let's see i'll be back in the office tomorrow so i should be able to stream and thank you all so much for all your help today i definitely couldn't have gotten this far without you all i was you know super helpful and um yes i think that's it for me today uh so i'll see see you all tomorrow hopefully and until then have a great day
