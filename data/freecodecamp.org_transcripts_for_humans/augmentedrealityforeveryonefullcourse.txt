With timestamps:

00:00 - in this course you are going to learn
00:01 - about augmented reality from both a
00:04 - theoretical and practical perspective
00:07 - this course is for absolute beginners
00:10 - and you will learn the fundamentals
00:12 - along with ar development with unity
00:15 - c-sharp and other tools
00:18 - hello everyone and welcome to this
00:19 - course of augmented reality this course
00:22 - teaches you the theoretical and
00:24 - practical prospects of augmented reality
00:26 - from the very basics to a level where
00:29 - one can develop any augmented reality
00:31 - application they want
00:33 - after this course you'll be able to
00:34 - develop your own augmented reality
00:37 - applications and filters so this is
00:40 - about the course now let's know a little
00:42 - bit about me
00:43 - so i am priyanshi bhattacharjee i have
00:46 - worked with multiple startups as an exar
00:48 - developer and have taught over 200
00:50 - students about extended reality at
00:52 - different colleges and universities
00:54 - i also run a youtube channel called
00:57 - coded reality where i make content on
00:59 - augmented reality virtual reality and
01:00 - mixed reality so now let's you know
01:03 - discuss about the syllabus of the our
01:05 - augmented reality course
01:07 - so we will start by understanding the
01:09 - fundamental concepts of augmented
01:11 - reality virtual reality and mixed
01:13 - reality and at the end of our first
01:15 - module we're getting an idea about the
01:17 - market size and growth of extended
01:19 - reality over the years
01:21 - in module 2 we will start to learn about
01:25 - a game engine called unity3d which we'll
01:27 - be using to design and develop our
01:29 - augmented reality applications
01:31 - then in module 3 we'll be starting with
01:34 - a programming language
01:36 - c
01:36 - that will be using to code our augmented
01:39 - reality applications in which we'll be
01:41 - learning about the basics of programming
01:42 - with c-sharp and many other fundamental
01:44 - concepts
01:46 - then in module 4 we will start with
01:48 - developing our ar applications we learn
01:50 - about market-based ar in depth including
01:52 - its architecture and how marker-based ar
01:56 - really works then we'll be learning
01:58 - about the sdks and start developing
02:00 - applications with an ar sdk called view
02:03 - fourier engine
02:05 - after the completion of this module we
02:07 - will be moving forward with module 5 in
02:09 - which we'll be developing three ar
02:12 - application which includes ar card
02:13 - customizer air business card and ar
02:17 - encyclopedia after we learned to develop
02:20 - ar applications we'll move on to
02:22 - module 6 which is a bonus section
02:25 - where we will be learning to develop our
02:27 - own ar filters for instagram and
02:30 - facebook and then in module 7 which is
02:33 - also a bonus module we will end this
02:36 - course by creating our
02:38 - very own 3d ar filter
02:41 - here i present to you some of the ar
02:43 - applications and filters we will be
02:46 - building throughout the course so this
02:48 - is
02:49 - an ar filter which will be building
02:51 - and this is an ar application which we
02:54 - will be building all right this is an ar
02:56 - encyclopedia
02:58 - app
02:59 - but these are not only the one which
03:02 - we will be building during the course
03:05 - we'll be developing two more
03:06 - applications
03:08 - like ar car customizer and another one
03:10 - is ar business card
03:13 - so who can
03:15 - uh follow this
03:16 - course this course is made for beginners
03:20 - so you don't need any working knowledge
03:22 - of augmented reality to follow this
03:23 - course i'll be teaching you everything
03:26 - from the very basics so if you don't
03:28 - know about augmented reality don't worry
03:31 - you will be learning to develop
03:32 - augmented reality applications from
03:34 - scratch
03:35 - you can get more detailed information
03:37 - about the course from the website
03:39 - www.ar course.netlife.app
03:43 - thank you
03:44 - hello folks welcome to this lecture this
03:47 - is the first lecture of our course uh
03:49 - augmented reality for everyone in this
03:51 - course we are going to get an idea of uh
03:54 - what exactly is
03:56 - extended reality what comes under the
03:58 - hood of extended reality that is we are
04:00 - going to learn about augmented reality
04:02 - virtual reality mixed reality we are
04:04 - going to learn about the mixed reality
04:06 - continuum all right then uh we will end
04:09 - this part of the lecture by uh
04:11 - understanding the growth of you know the
04:14 - growth of extended reality over the
04:15 - years and what we are projecting by the
04:18 - year 2025
04:20 - all right so without any further ado
04:21 - let's uh
04:23 - understand all right see
04:25 - uh extended reality now try to
04:27 - understand extended reality in this way
04:30 - it is the extension all right it is the
04:32 - extension of our current reality all
04:35 - right you can say that it is the a
04:37 - virtual all right it is a virtual
04:39 - extension of our current reality all
04:42 - right you can understand extended
04:44 - reality uh like this all right there
04:46 - isn't any specific all right there isn't
04:49 - any specific definition that would you
04:50 - know uh
04:52 - do justice to this uh whole domain all
04:55 - right
04:56 - but how i like to explain extended
04:59 - reality is it is the extension of our
05:01 - current reality or like that and it is
05:03 - the virtual extension of it is the
05:05 - virtual extension of our current
05:06 - clearance
05:08 - you can say extended reality is the hood
05:10 - all right means it is the roof and that
05:12 - roof has three children all right
05:15 - those three children are named as
05:16 - augmented reality virtual reality and
05:18 - mixed reality all right so extended
05:21 - reality is the main hood and it contains
05:24 - three other domains augmented reality
05:26 - virtual reality and mixed reality
05:28 - all right extended reality is the parent
05:30 - domain
05:31 - all right now as we have understood what
05:34 - exactly uh is extended reality right
05:36 - what are the subdomains of extended
05:38 - reality let's you know let's understand
05:40 - what is augmented reality all right you
05:42 - see you might have already you might
05:44 - have
05:45 - experienced augmented reality in your
05:48 - life but you it might happen that you
05:51 - didn't knew that it was augmented
05:52 - reality like you know when you used to
05:54 - play uh pokemon go when i i guess it
05:57 - released in 2016 at that point of time
06:01 - i i was very excited to play that game
06:03 - all right just because i could uh you
06:04 - know the spawn the pokemon all right i
06:08 - could bring the pokemon into the real
06:09 - world all right it had a ar feature that
06:12 - could you know by pressing the ar camera
06:14 - we could bring the pokemon into our real
06:16 - world on it i was very excited about
06:18 - that feature all uh the reason why i
06:20 - didn't uh was i wasn't able to play the
06:22 - game because you know uh i wasn't able
06:24 - to roam around for free like it had gps
06:26 - enabled right so i the only reason why i
06:29 - played the game was because of its ar
06:30 - feature and at that point of time i
06:32 - didn't know what exactly augmented
06:33 - reality was i didn't even know how this
06:35 - thing works all right
06:37 - at that point of time i just started
06:39 - with programming all right so
06:41 - uh we have we all have used augmented
06:43 - reality at some point in our life and
06:46 - didn't know exactly what it was
06:48 - right so
06:50 - one example you already got all right
06:53 - the one with pokemon go now people used
06:55 - to think uh that pokemon go is one of
06:57 - the biggest big breakthrough in
06:59 - augmented reality but it is not the
07:00 - truth is this because see if i if you
07:03 - look in after this course alright after
07:05 - this course if you look into that now
07:08 - the creating the mechanism all right
07:10 - that is the pokeball throwing mechanism
07:12 - to the uh pokemon it uh that mechanism
07:16 - is very simple to make all right that
07:18 - mechanism is very simple to develop it's
07:21 - just we are throwing it through a
07:22 - projectile so uh understand it like this
07:25 - okay
07:26 - basically augmented reality is nothing
07:29 - augmented reality is nothing but you
07:30 - know uh bringing all right that is uh
07:34 - augmenting or you know putting the
07:35 - digital objects all right in in our case
07:38 - the digital objects like uh in pokemon
07:40 - go pikachu is a digital object right so
07:43 - we are taking the digital object all
07:45 - right and placing it into our real world
07:47 - that is what augmented reality is how we
07:49 - are placing it we are placing it through
07:51 - our device all right and uh don't worry
07:54 - we are going to understand all right how
07:56 - all this thing works all right how
07:58 - augmented reality actually works right
08:01 - how what is the architecture in our
08:03 - future videos but for now understand it
08:05 - like this way that we augmented reality
08:07 - is basically the augmentation or you can
08:09 - say the placement of digital object in
08:11 - real world like for example take your
08:13 - favorite cartoon all right for uh a long
08:15 - time back uh my favorite cartoon cartoon
08:17 - was doremon
08:18 - all right i used to watch it like
08:21 - all day i love that cartoon when i was
08:23 - like in class
08:24 - third or fourth so at that time uh if i
08:27 - knew about augmented reality i would
08:28 - have surely tried that he uh i would
08:31 - have tried augmenting dorem on into into
08:34 - my room alright i would have tried that
08:36 - so just think of it this way you are
08:39 - actually bringing your favorite digital
08:41 - uh character all right
08:43 - into your real world so that is what
08:45 - augmented reality is that is basically
08:47 - what augmented reality is all right it
08:49 - is basically the placement of data
08:51 - object into the real world like all
08:52 - right and now as i have told you as i
08:54 - have told you now you you might know all
08:57 - right you you right now you are aware of
09:00 - what exact uh how you know
09:03 - pokemon go uses augmented reality right
09:07 - now what i want you to do is after
09:10 - finishing this lecture install that game
09:11 - and try it out try it out by yourself
09:14 - see how exactly the ar feature is
09:15 - working all right it would be really fun
09:17 - believe me
09:19 - now
09:20 - there are
09:21 - uh mainly there are many majorly two
09:24 - types of augmented reality marker based
09:26 - augmented reality marker less augmented
09:27 - reality all right in markerless there
09:29 - are four other types of augmented
09:31 - reality that is superimposition location
09:34 - based projection and outlining all right
09:38 - don't worry i'm going to uh make you
09:40 - understand what exactly are these all
09:42 - right so let's start with marker based
09:44 - see
09:45 - the meaning of this already the meaning
09:47 - of marker based is in its name only
09:50 - marker based ar means the augment that
09:53 - or the augmented reality feature works
09:55 - only if
09:57 - there is a marker all right
10:00 - only if it there is a marker to help
10:02 - augment the object all right that is
10:03 - what augment marker based augmented
10:05 - reality is basically now this type of
10:08 - ar basically works on the concept of
10:10 - tracking and recognition all right it
10:13 - first tracks the
10:14 - marker means it first recognizes the
10:17 - marker and then tracks it tracks it all
10:20 - the way long all right so that is how
10:22 - this marker based ar work all right
10:24 - basically in this type of ar now you
10:26 - would be you will be needing all right
10:28 - you will be needing a marker to augment
10:30 - you would be needing a marker
10:32 - uh to help augment uh
10:35 - the digital object in the into the world
10:37 - all right like like in here all right
10:40 - like in this you can see that this uh
10:42 - lego batman all right or you can save
10:44 - this minecraft blocked batman all right
10:47 - it's being augmented this
10:50 - uh this particular minecraft
10:52 - shaped
10:54 - batman is being uh
10:56 - me
10:57 - what can i say is being augmented on top
10:59 - of uh a marker all right here you can
11:01 - see it is being augmented on top of a
11:02 - marker so this is what marker-based
11:04 - augmented reality is to augment this
11:06 - kind of uh to augment digital object we
11:09 - would be needing a marker all right so
11:11 - that is what marker-based augmented
11:12 - reality is all right and in this course
11:14 - we will be developing marker-based ar
11:16 - all right so if you're not clear with
11:17 - the concept right now that's totally
11:19 - fine all right
11:21 - uh you you would be when you will be
11:22 - developing uh the marker-based app by
11:26 - yourself you'll be very clear that how
11:27 - exactly that those things work all right
11:29 - but for now in simple words
11:31 - uh
11:32 - market-based ar is something all right
11:35 - that would be needing all right in which
11:38 - we will be will be needing it is
11:40 - mandatory to have a marker all right it
11:42 - is mandatory to have a marker to
11:44 - augment the digital object on top of it
11:47 - or or else you won't be able to you know
11:50 - or else you won't be able to augment it
11:52 - all right so that is what marker based
11:53 - augmented reality is all right now uh
11:56 - pokemon go is not an example of marker
11:58 - based augmented reality all right i
12:00 - would tell you uh
12:01 - what example is it for all right
12:05 - now
12:06 - let's understand
12:08 - what is
12:09 - uh markle sayer all right now as you
12:12 - have understood about marker based er
12:14 - martin luther is the total opposite
12:16 - alright the difference between them is
12:18 - all right the difference between them is
12:21 - marker based ar needs marker all right
12:24 - that is it needs some you know point or
12:26 - you can say some something to all right
12:29 - it needs something to augment all right
12:32 - it needs and that thing is a marker
12:36 - so market based augmented reality needs
12:37 - a marker to augment but markless ar
12:40 - doesn't
12:41 - now there are some algorithms all right
12:44 - like simultaneous localization and
12:46 - mapping is an algorithm that ah is used
12:49 - all right that is used to map the whole
12:51 - you know the whole environment around us
12:53 - and then place
12:55 - the objects in there all right
12:57 - so markerless ar doesn't needs all right
13:00 - markless ar doesn't need any sort of
13:02 - marker what it does it will scan the uh
13:05 - let's say if i'm trying to augment uh
13:07 - some object in my room what will it do
13:09 - it will scan the surface it will scan
13:11 - the walls all right it would uh create
13:14 - you can say it it creates a virtual you
13:16 - know visualization of itself and then
13:17 - you know
13:18 - it will place all right it will place
13:20 - the object right in there all right so
13:23 - it will first scan the room alright it
13:25 - will first scan the root
13:27 - after scanning
13:29 - it will place the object all right now
13:31 - how it will scan there is an algorithm
13:33 - it's a it's a very widely used algorithm
13:36 - it is also used in robotics but it is
13:38 - also used in virtual reality augmented
13:39 - reality and mutuality so it is known as
13:42 - slam that is simultaneous localization
13:44 - and mapping
13:45 - all right so that's how we um you know
13:48 - build marketless ar features all right
13:50 - so markless air is
13:52 - is very simple it will this ar will you
13:54 - know simply detect your room or means
13:57 - the plane
13:58 - the vertical and horizontal surfaces of
14:00 - your room all right that is the planes
14:02 - and perform the augmented augmentation
14:04 - on those particular planes of those
14:07 - objects all right
14:08 - means it will augment the digital
14:10 - objects on on top of those planes that
14:13 - your ar have has detected right now for
14:16 - example in this you can see this ikea
14:18 - place app all right this is the demo of
14:20 - ikea place basically this is a very
14:22 - famous you know uh furniture app that
14:25 - you know
14:26 - makes use of marketless augmented
14:28 - reality to help you decorate your room
14:31 - all right like if i let's say if i want
14:33 - to buy a sofa all right like you can see
14:35 - it in here what i'm doing is i'm
14:37 - installing the ikea place app i'm
14:38 - searching for some sofa in there i like
14:41 - that sofa very much but i don't know
14:43 - will uh that sofa will you know fit my
14:46 - home or not fit my in the sense it will
14:48 - look good in my room or not something
14:49 - like that all right
14:51 - now what i can do is i can make use of a
14:53 - marketless augmented reality scan my
14:55 - room and then place the object in there
14:58 - all right and then uh through my mobile
15:01 - i can see that if uh the sofa is
15:04 - adjusting at my place or not all right
15:06 - and based on that i can buy the sofa
15:09 - so that is how mark that is what markle
15:11 - is saying all right
15:13 - now there are multiple use cases of
15:15 - markle is here all right
15:17 - and uh decoration all right it means
15:19 - this putting furnitures and all this is
15:22 - one all right is one industry focused
15:25 - all right uh it is uh of in interior
15:28 - design is another industry all right in
15:30 - where mixed reality all right and where
15:32 - mixed reality and augmented reality are
15:34 - are widely used all right like for
15:36 - decorate decorating the homes and all
15:39 - those things all right so hi i hope
15:41 - market based and marketless
15:43 - ar is clear so basically marker based ar
15:45 - is nothing marker based uh ar needs a
15:48 - marker to perform the augmentation of
15:50 - for digital objects into on top of the
15:52 - marker whereas markless air doesn't
15:55 - doesn't need any marker all right what
15:57 - it will do it will scan the surface and
15:59 - then augment the digital objects on top
16:01 - of the surface all right so that is what
16:03 - that is the basic difference and that is
16:05 - what they do
16:06 - all right now let's get into the concept
16:09 - of superimposition based ar
16:11 - all right
16:12 - see superimposition based augmented
16:14 - reality all right is basically a
16:16 - technique
16:17 - that you know uses object recognition
16:20 - now in this diagram all right in this
16:22 - diagram you can see
16:23 - the there is a person's hand all right
16:25 - there is a person's hand and on top of
16:28 - that hand
16:29 - we what we are what this app is doing is
16:32 - you know displaying
16:33 - displaying a skeleton of the hand on top
16:36 - of the person's hand alright so that is
16:38 - what superimposition based ar is
16:40 - it superimposes all right it's super
16:43 - imposes
16:44 - that means it put all right it puts
16:48 - and digital object on top of a real
16:50 - object all right and that works with the
16:52 - help of object recognition
16:55 - all right so that is what uh
16:57 - superimposition based ar is it's very
16:59 - simple all right it's it's very simple
17:02 - now all right
17:04 - see
17:05 - what is happening in here
17:08 - basically with this photo all right you
17:10 - can see that we are able to you know
17:13 - augment a skeleton skeleton of hand
17:16 - on top of another person's hand alright
17:18 - so what is happening uh the algorithm
17:21 - all right that is the ar app is
17:22 - recognizing the hand then putting all
17:24 - right or you can say then uh
17:27 - superimposing all right superimposing
17:29 - the
17:31 - skeleton on top of that hand all right
17:33 - that is what it is doing that is what
17:35 - superimposition based ar is all right
17:38 - very simple all right
17:41 - now
17:42 - these type of ayana is very helpful all
17:45 - right in medical industry all right like
17:47 - you can say you can uh superimpose an
17:49 - x-ray all right on a patient's body and
17:52 - look into it real time in 3d so how cool
17:55 - that would be and how efficient that
17:56 - would be right that would make the
17:58 - doctor's job more easier right so that
18:02 - is
18:03 - how we use superimposition based ar all
18:05 - right and superimposition based ar are
18:07 - used in you know in many different ways
18:10 - so you can do your research on that all
18:12 - right and even if you if you like you
18:14 - can uh try developing something
18:17 - with superimposition ar also all right
18:20 - so
18:21 - you can totally do that that would be
18:23 - real fun all right so that is what
18:25 - superimposition based ar is so i hope
18:27 - you are clear with the very fundamental
18:30 - concepts right now
18:31 - after this
18:32 - we are going to get into this location
18:35 - based area all right
18:37 - see loca uh location based area now
18:39 - uh let me tell you
18:41 - uh you you uh i'm sure you know about uh
18:46 - gps right you know about uh
18:50 - or what can i say google maps
18:52 - right so you can say this is google maps
18:55 - in augmented reality all right like in
18:57 - google maps when you search for a place
18:59 - what it does it it gives you the address
19:01 - of that place or that means it marks the
19:03 - uh road it will you know highlight the
19:06 - road through which you can go go how
19:08 - much time will it take all right it will
19:10 - label the places or that will come
19:13 - while you are going in there right it
19:15 - will label those places
19:17 - you but what you are doing in there you
19:19 - are uh seeing all those in a 2d screen
19:22 - all right
19:23 - what location based ar does is it's also
19:25 - you know does the things almost same
19:28 - but in augmented reality it would give
19:31 - you the live feed all right in 3d
19:33 - it will give you the live feed in 3d
19:36 - like you will if you are going somewhere
19:38 - you uh if you turn around you would be
19:41 - seeing a name plate all right hovering
19:42 - over a building all right that would uh
19:45 - give you an idea yeah this is the
19:47 - building what i'm looking for all right
19:49 - then you can go in there so
19:50 - this type of ar experience makes it more
19:53 - easier all right to you know use
19:56 - us like locate places all right so that
19:59 - is what location based ar is location
20:01 - based ar basically you know ties digital
20:03 - content and the experience it creates to
20:06 - a specific place all right the objects
20:08 - are mapped out so that when a user's
20:10 - location matches the predetermined spot
20:12 - it is displayed on the screen all right
20:14 - so that's what i told you just just now
20:17 - right this is the this definition i gave
20:19 - you the very simple explanation of the
20:22 - same definition
20:23 - written in here all right so location
20:26 - based ar is just like google maps but in
20:28 - ar all right and more efficient more
20:30 - better
20:32 - all right in a more better way of course
20:33 - now you guys might be thinking why we
20:36 - are going to you know uh held our phone
20:38 - in uh held our phone in hand and start
20:41 - looking for places all right it's going
20:43 - to be very hectic i totally understand
20:45 - that all right and that's not how we are
20:48 - going to you know use
20:50 - location based ar
20:52 - currently there are multiple ar glasses
20:54 - that are being released all right like
20:57 - geo glass is releasing their own ar
20:59 - headset then qualcomm right qualcomm is
21:02 - releasing their own ar headset all right
21:06 - so many people many industries all right
21:09 - are working on their own ar and mr
21:11 - headset then a magic leap is there so
21:14 - when those glasses will release now
21:16 - after a few years alright or maybe in
21:19 - this year only you will be seeing
21:20 - location based ar all right
21:23 - it would be gps but in ar so how cool
21:25 - that experience would be
21:27 - right so that is how these things will
21:30 - work
21:31 - so i hope this uh the concept of
21:33 - location based ar is clear
21:35 - all right now here comes projection
21:37 - based area now let me make it simpler
21:39 - for you all right projection based ar is
21:42 - another name of holograms all right i
21:44 - know you guys might uh have an idea
21:46 - about what exactly a hologram is right
21:48 - it basically project solid it is
21:50 - projecting with you know a projector
21:53 - role
21:54 - uh into uh
21:56 - means
21:57 - into the means uh what let me let me
21:59 - explain it in a simple way
22:01 - what it is doing it is like
22:04 - with a normal augmented reality all
22:06 - right that is being used by a fort the
22:08 - difference between projection based ar
22:09 - and normal ar is
22:12 - we are in normal here we are using our
22:14 - phone to augment all right we are using
22:16 - our phone to augment
22:18 - but in projection based art we are using
22:21 - some other device to project all right
22:24 - to project
22:26 - the digital object into the real world
22:28 - all right that gives a more immersive
22:30 - experience in that case you are not you
22:32 - are not going to need and phone all
22:34 - right you are just having some project
22:36 - and it is projecting all right it is
22:38 - projecting the 3d object in the real
22:41 - world
22:42 - people are working on this kind of uh
22:44 - technology all right although right now
22:47 - uh it hasn't been that successful all
22:49 - right but people are working on that and
22:51 - i'm sure this is something that we are
22:53 - going to get in future all right and
22:55 - people are really working like
22:57 - working hard
22:59 - on this kind of ar alright it would be
23:01 - like really cool like you will be the
23:03 - tony stark
23:04 - all right of real world
23:07 - so
23:08 - yeah augmented reality virtual reality
23:10 - mixed reality has the potential to bring
23:12 - all the things that you see in the iron
23:15 - man movie of course not the arc reactor
23:17 - but all the digital things like the
23:19 - jarvis all right
23:20 - artificial intelligence is also having
23:22 - those potential so if we combine these
23:24 - technologies now we can have something
23:26 - like java so
23:28 - understand it this way all right
23:29 - augmented reality virtual reality and
23:31 - mixed reality is the future of our world
23:33 - all right maybe within five to ten years
23:35 - you won't be even using your phone you
23:37 - will be have having slim glasses all
23:39 - right you will be having slim glasses
23:41 - through which you will be able to
23:42 - augment the digital objects alright and
23:44 - that is going to be true because we have
23:46 - those glasses now all right yes they are
23:48 - they are bulky like if i talk take an
23:50 - example
23:51 - there's a
23:53 - microsoft hololens all right
23:55 - if you if you have used that uh before
23:58 - you you would get the same experience
24:00 - like uh
24:01 - tony stark right similarly then uh the
24:05 - uh
24:06 - other ar glasses is being released like
24:08 - geoglass is releasing their own then uh
24:11 - qualcomm is releasing their own so
24:13 - within five to ten years all right you
24:16 - won't be using your phone to communicate
24:18 - or you know do things you will be using
24:20 - your ar glasses to do all the things all
24:22 - right there's snapchats lens all right
24:25 - so a lot of things are there that you
24:26 - can do
24:27 - all right so now as you have as we have
24:29 - understood uh the very basic concepts
24:31 - you know the concepts of extended
24:33 - reality or we have understood the basics
24:35 - of augmented reality we have understood
24:37 - marker based ar markerless air
24:39 - superimposition location based and
24:41 - projection based and the last one we
24:44 - have and you know the topic of
24:48 - augmented reality is outlining ar
24:51 - all right now what exactly is it all
24:53 - right
24:55 - outlining ayana is uh
24:57 - are mostly used in cars all right you
25:00 - might not be seeing them more often all
25:02 - right
25:02 - although uh i guess even tesla is
25:05 - working on implementing ar in their
25:07 - uh cars all right so basically outlining
25:10 - it will outline the direction all right
25:13 - it will outline the it will map the
25:15 - world and then outline the direction all
25:17 - right with these uh trails here you can
25:19 - see right here you can see
25:22 - so they will outline those trails and
25:24 - help you you know
25:26 - go
25:27 - through all the paths all right it would
25:29 - recognize the boundaries all right it
25:31 - would uh recognize the lines it would
25:33 - help in many situations all that when
25:35 - human aware human i can't all right so
25:39 - augment augmented reality is the future
25:42 - all right augmented reality which in
25:44 - virtual reality is the future so this is
25:47 - how outlining ar is used all right even
25:51 - if tesla is working on implementing
25:53 - augmented reality alright then why can't
25:56 - we right we are developers we can do
25:58 - that of course we can do that so
26:01 - you can see people are working on
26:03 - implementing ar in their cars right how
26:06 - cool is that
26:07 - right so that is what outlining ar is
26:10 - all right now as we've understood the
26:12 - fundamental concepts of augmented
26:14 - reality
26:15 - let's uh get into the virtual reality
26:18 - all right virtual reality is the total
26:20 - opposite of augmented reality in
26:22 - augmented reality what what did we do in
26:25 - augmented reality we were augmenting all
26:27 - right or you could say putting the
26:28 - digital objects in the real world but in
26:30 - virtual reality we are taking all right
26:33 - we are taking the person itself to the
26:36 - virtual world all right or you can say
26:37 - we are teleporting the person to the
26:39 - virtual world
26:40 - right so that is what uh virtual reality
26:43 - is and
26:44 - it gives a very good sense of
26:46 - immersiveness all right for example all
26:49 - right
26:49 - see even i don't have a vr headset all
26:52 - right
26:54 - let the truth be told alright i don't
26:55 - have a vr headset i don't
26:58 - but i do have the understanding how it
26:59 - feels all right because i
27:01 - s at somewhere all right at somewhere i
27:03 - have used at some point of my life i
27:05 - have used a virtual reality headset yeah
27:07 - of course not
27:08 - at my home but when i you know used to
27:11 - go to some game parlor all right they
27:13 - had a virtual reality experience alright
27:15 - i
27:16 - i am i have used i know how that feels
27:19 - all right and i'm glad that i can
27:21 - explain it to you that
27:23 - uh try to understand it like this all
27:25 - right let's say you you are playing a
27:26 - game alright
27:27 - take any of your favorite game all right
27:30 - one of my favorite game is you know gta
27:32 - 5
27:33 - right although i don't play games much
27:35 - nowadays but
27:36 - if i if i had to say one of my favorite
27:38 - games is gta 5 and gps and andreas all
27:40 - right so what i'm going to do is i'm i'm
27:42 - going to close my eyes and you know
27:44 - think of or think of
27:46 - think of a character in there all right
27:48 - think of a character in there and try to
27:50 - you know close my eyes and try to
27:52 - experience all right all that thing by
27:54 - myself all right and
27:56 - the level of uh immersiveness you will
27:58 - get there now after like while thinking
28:01 - or while imagining you are
28:03 - in uh in there in real time in the game
28:05 - and playing all the things doing all the
28:07 - things that the game's character can do
28:10 - will give you uh you know a sense of
28:12 - immersiveness
28:13 - and using virtual reality that sense of
28:16 - immersiveness
28:17 - increases by 100 all right because at
28:19 - that point of time you are actually in
28:21 - there you are actually controlling the
28:23 - person
28:24 - available inside the game right you are
28:26 - actually able to control the
28:28 - you know you are actually able to
28:30 - control the
28:31 - character available inside the game so
28:33 - virtual reality is nothing but you know
28:35 - it is a technology that
28:37 - teleports uh
28:39 - you to
28:40 - a virtual world all right
28:43 - so that is what exactly it is now
28:46 - there are you know multiple games and uh
28:48 - educational applications available right
28:51 - for example um anatomy all right it
28:54 - teaches you about the human anatomy all
28:56 - right so
28:58 - that that is an educational app all
29:00 - right then there there is beats about
29:02 - one of the very famous game like uh in
29:04 - the in the first image you can see this
29:06 - is the gameplay of a beat saver already
29:08 - the second image this is the gameplay of
29:11 - half-life alex all right in the third
29:13 - image this is the battle royale game
29:15 - yeah there is also a battle royale game
29:16 - in virtual reality so you can see the
29:18 - level of immersiveness the
29:20 - level of realism you will be getting
29:22 - this is called uh what can i say
29:24 - stand out vr battle royale all right so
29:27 - the vr can be used in multiple sectors
29:29 - it can be used in healthcare it can be
29:31 - used in a military training already it
29:33 - can be used in flight training it can be
29:35 - used in manufacturing all right
29:38 - you it can be used in education it can
29:41 - be used in gaming so
29:42 - the you know what can i say the
29:45 - level all right or you can say the
29:48 - limitation of vr is you know unreachable
29:51 - right yeah there is some limitation
29:53 - alright like the cost is there all right
29:55 - but
29:56 - cost you know cost is decreasing like uh
29:59 - previously in india already i'm talking
30:02 - about in india in india previously uh
30:04 - oculus quest already the vr headset it
30:07 - used to cost around 80 to 90 000 i guess
30:09 - all right and now calculus quiz 2 costs
30:12 - you around 30 to 40 000 all right so you
30:15 - can see how
30:16 - drastically has the the price has you
30:18 - know the price has decreased by half
30:21 - all right so the price of vr headsets
30:24 - are decreasing all right and also the
30:26 - quality and the technology is
30:28 - improving and increasing all right so
30:30 - just a few more more years and you'll be
30:32 - getting uh
30:34 - vr headsets maybe in 10 000 or 20 000 so
30:38 - things are you know things are happening
30:40 - real quick and uh mixed reality
30:43 - is actually mixed reality is going to
30:46 - help us a lot if i talk about in the
30:49 - manufacturing industry all right if i
30:51 - talk about uh the military training
30:53 - industry all right and as we have
30:56 - understood about the virtual reality
30:58 - augmented reality it's our high time to
31:00 - go to mixed reality all right now
31:04 - let me tell you all right also one thing
31:06 - i forgot to tell you that if you are
31:08 - using virtual rear uh vr now you'd be
31:10 - needing an headset that headset is
31:12 - called head mounted display all right so
31:14 - you make sure you know that this term
31:16 - all right or you can say it's uh in
31:19 - abbreviated form it is also called hmd
31:21 - all right or head mounted display now
31:24 - see
31:25 - mixed reality all right
31:28 - mixed reality you can mix reality now is
31:30 - the you can say it is the brother all
31:32 - right
31:33 - this is the brother or the twin brother
31:36 - you can say or you can say just just the
31:37 - brother of augmented reality all right
31:40 - why because see it is
31:44 - let me let me simplify this term to you
31:46 - mixed reality is just like
31:49 - augmented reality but yeah there's a but
31:52 - but
31:53 - it is more advanced all right it has
31:56 - more capabilities than normal augmented
31:59 - reality why all right see
32:02 - there's something called already mixed
32:04 - reality continuum or you can say mixed
32:05 - reality spectrum what does that mean
32:09 - it means that the you know the merge all
32:12 - right
32:13 - the merge
32:15 - of
32:16 - augmented reality and virtual reality or
32:18 - you can say the real world and virtual
32:20 - world or digital world all right we
32:21 - combine them you can you know
32:24 - go virtual
32:26 - and real at the same time all right with
32:29 - with mixed reality so mixed reality has
32:33 - a larger potential if we talk about the
32:36 - uh
32:37 - like
32:38 - training industry all right like in
32:40 - manufacturing industry mixed reality can
32:42 - help you know to recognize those
32:45 - items all right it can help you through
32:47 - the manufacturing process in healthcare
32:49 - all right it can help you you know
32:51 - operate a patient alright it can guide
32:53 - you through all the things you don't
32:55 - even need to you know distract yourself
32:57 - uh to any other computers or uh you know
33:01 - digital objects available
33:03 - in the
33:05 - uh in the icu all right you can say or
33:08 - in the patient squad all right where uh
33:10 - basically the operation is happening all
33:13 - right you don't even have to move from
33:14 - the patient you can
33:16 - stay in there uh monitor all the things
33:19 - all right in your mr headset all right
33:20 - monitor all the you know how let's say
33:23 - heart rate or
33:25 - blood pressure or any any data through
33:28 - your mr headset only
33:30 - all right so this is how it can help in
33:32 - uh
33:33 - you know medical industry then uh
33:35 - military training recently i guess i
33:37 - just read somewhere
33:39 - a bite in 2018 all right in 2018 uh
33:42 - military all right i guess the u.s
33:44 - military uh
33:46 - reached microsoft and offered around you
33:48 - know 400 to 500 billion dollars
33:52 - to build mixed reality headsets for them
33:55 - all right for training military all
33:56 - right for training the military so you
33:59 - can you can you can you know you can
34:02 - just think how
34:04 - powerful these headsets are all right it
34:06 - can help in training so mixed reality
34:09 - can help you uh anyway like for example
34:12 - in india there's a startup called ajna
34:14 - lens all right what they are doing they
34:16 - are uh
34:17 - creating headsets for government which
34:19 - are being you know used to uh train
34:22 - military all right indian military so
34:25 - uh it is being used to train navy seals
34:28 - they are it is used being used to you
34:30 - know train
34:32 - numerous people out here in india so you
34:35 - can see how mixed reality is exactly
34:37 - helping right
34:39 - so mixed reality uh i would say mixed
34:42 - reality is future all right
34:45 - extended reality is the future of our
34:47 - world
34:48 - all right it is the future of our world
34:51 - so mixed reality is nothing but you know
34:52 - it is the advanced form of augmented
34:54 - reality all right it contains both it
34:57 - means it can go both virtual
34:59 - and
35:00 - are real all right so that's what makes
35:03 - reality is all right and you have
35:04 - already understood the mixture
35:06 - about the mixed reality spectrum that is
35:08 - the combination all right that is the
35:10 - combination of physical and digital
35:11 - world
35:12 - all right
35:14 - so that is what mixed reality is all
35:16 - right and also this image is taken from
35:17 - microsoft's website so yeah
35:20 - now
35:21 - as we've understood all right about
35:24 - all the things already about mixed
35:26 - reality augmented reality virtual
35:28 - reality
35:29 - let's you know let's
35:31 - get our heads into x the growth of xr
35:34 - all right or you can see the growth of
35:37 - market of extended reality all right see
35:40 - the extended reality market size all
35:42 - right
35:44 - uh is going to reach all right around
35:46 - you know
35:48 - 393 billion dollars by in 2025 at uh at
35:52 - a growth rate of 69.4 percent cagr all
35:56 - right it is a report by market research
35:58 - future
35:59 - all right now you can see that by in
36:02 - 2017
36:03 - uh the growth was
36:06 - the growth was so less all right means
36:09 - there wasn't any awareness of
36:12 - augmented and virtual reality but you
36:14 - can see by 2025 what will be the growth
36:16 - all right you can read this chart by
36:18 - yourself all right so
36:20 - you can see how
36:21 - how it is impacting now i want to tell
36:23 - you that
36:24 - this chart already this chart is
36:27 - you know this chart is not stable all
36:30 - right uh
36:32 - right now in 20 in 2022 only
36:34 - uh the market has reached
36:36 - more than 200 billion dollars all right
36:38 - so you can see you can see how how the
36:41 - growth is actually but it can even
36:43 - happen by 2020 uh three already by 2023
36:47 - it can even reach 393 billion dollars
36:49 - that is estimated by 2025 so
36:52 - all right so make sure you know you go
36:53 - through all these notes all right all
36:55 - the notes will be available in the
36:56 - website so make sure you go through that
36:58 - so yeah that's it for this lecture thank
37:00 - you
37:02 - hey folks um
37:04 - welcome to our module 2 and in this
37:06 - module i'm going to tell you how to
37:08 - install unity
37:10 - and after that uh i'm going to
37:13 - uh
37:15 - show you or tell you how to use unity
37:17 - all right what are its interfaces and
37:18 - all those things all right so
37:21 - sit tight on your uh
37:24 - seat and watch the video all right if
37:26 - you want you can uh
37:28 - grab some popcorns also
37:31 - so
37:32 - yeah
37:33 - first of all
37:34 - what is unity before downloading we must
37:36 - know what is unity if we don't know
37:38 - about that then
37:40 - how could we work out with that so we
37:42 - need to know what is unity see unity is
37:45 - a
37:46 - engine all right it's sort of a tool
37:48 - it's a as not sort of a tool it's a tool
37:51 - it's a definitely a tool
37:53 - it's a tool for developing games
37:55 - for developing simulations for
37:57 - developing ar vr applications
38:00 - all right uh you can even make your own
38:02 - simulations like you can develop your
38:04 - own um robot inside of unity you can
38:07 - develop your own
38:09 - let's say
38:10 - self-driving car you can implement your
38:12 - own self-driving car inside of unity
38:14 - yeah that's possible
38:16 - that is 3d simulation so
38:19 - uh and one of the most like most one of
38:23 - the best things about uh unity is
38:25 - it is multi it can it works on me unit
38:29 - uh linux it works on mac os or works on
38:32 - um
38:33 - windows all right and also you can build
38:36 - uh actually you can actually build
38:38 - applications all right uh you can build
38:41 - your games your apps for multiple
38:43 - platform windows mac os linux then
38:47 - android ios playstation then i guess it
38:50 - also has a feature for xbox or also i'm
38:53 - not sure about that i haven't researched
38:55 - about it then
38:56 - there's also
38:58 - lumen luminous then uh
39:01 - there's uh
39:03 - webgl so yeah multiple things are
39:05 - available all right so yeah that's what
39:07 - unity infinity is a very good tool for
39:10 - developing these things
39:11 - now
39:13 - what you need to do
39:15 - you have to go to this page all right
39:17 - i'll be providing the link down below
39:19 - right and uh
39:22 - click on this all right just just click
39:24 - on this download unity hub all right
39:27 - after you have downloaded install it all
39:29 - like this these processors are very
39:30 - simple i need not to show you i'm pretty
39:32 - sure about that
39:34 - now
39:36 - what do we do after you've installed on
39:38 - it open your unity hub it will
39:41 - it might not look something like this
39:43 - all right because this is a beta version
39:46 - on it uh it's in currently in beta
39:48 - testing all right it does have some bug
39:49 - like recently if a
39:51 - phased one that it wasn't grabbing my
39:53 - license but i had to restart it and it
39:56 - like worked really well so
40:00 - yeah
40:01 - so basically
40:03 - uh it might seem a bit white alright the
40:06 - interface might be white but
40:08 - components are same so when you first
40:11 - open your unity already
40:12 - log in log in to your account alright
40:14 - activate your license uh it will only
40:16 - show you like it will by default uh show
40:19 - you how to activate your license all
40:20 - right you just need and if it doesn't uh
40:23 - go to this click on this like
40:25 - preferences option all right
40:28 - uh go to this licenses all right i have
40:30 - a professional license i got it through
40:33 - student plan and click on add and
40:35 - choose any license you want all right
40:38 - now
40:41 - let me show you one thing right
40:46 - this is the basic interface of our whole
40:49 - unity hub all right through this we have
40:51 - to run our unity
40:52 - this is the project section alright in
40:55 - this project section multiple projects
40:57 - of yours will be like
40:59 - put it in here like will be listed down
41:01 - here uh
41:03 - as you will be installing unity for the
41:05 - first time
41:07 - it won't show any of the projects it
41:10 - will be totally empty these are my
41:11 - projects all right
41:14 - then there are other tabs also i'm sure
41:16 - you would explore this learn and
41:18 - community tab but for now let's go to
41:21 - this install tab so to install our own
41:23 - unity version all right now
41:26 - this is my unity versions alright these
41:28 - are my unit version that i am having
41:30 - that is 20 20 20 90 and 2018 all right
41:34 - uh these are my unity versions
41:36 - i've installed those i
41:38 - work with these uh
41:40 - mostly these two version more often all
41:42 - right
41:45 - now
41:46 - this this panel would be empty alright
41:48 - this panel would uh would uh be empty if
41:51 - you haven't installed any
41:53 - um
41:55 - if you haven't installed any of your uh
41:58 - unity versions till now so to install
42:01 - one just click on install uh editor all
42:04 - right
42:05 - after that it will prompt upper menu
42:08 - alright there are multiple uh versions
42:10 - uh
42:12 - in here all right there multiple
42:13 - versions in here i'd recommend go for
42:16 - 2020 all right even unity recommends
42:19 - this as of now and also always download
42:21 - the lts version why lts is limited time
42:25 - support and it's it's the most stable
42:27 - version all right it's the most stable
42:29 - version that we would have
42:31 - so
42:33 - would always download a
42:34 - stable version and we'd also if doing
42:37 - our development in unity 2020 only so i
42:39 - would recommend download it right so
42:41 - then click on install
42:44 - now you can either install this all
42:47 - right any actually any id or code editor
42:49 - would work but maybe you won't get that
42:52 - a code completion on that autocomplete
42:54 - but i would suggest downloading it all
42:56 - right
42:57 - so download this to all right
42:59 - if you want linux you might not get this
43:01 - option then you have to use any other
43:03 - code later only
43:04 - but another thing i would want you to do
43:06 - this is click on this android build
43:08 - support under sdk and indicators and
43:10 - open jdk all right and remove this check
43:12 - mark from the documentation we don't we
43:14 - can access it from web
43:16 - all right and there are other like build
43:18 - versions too you can also
43:21 - like take a look at these and download
43:23 - them
43:24 - then click on continue all right click
43:26 - on this i have agree and all those terms
43:29 - and things click on this alright
43:31 - and then click on install all right and
43:34 - it would start installing
43:36 - your editor
43:38 - right and after it gets installed all
43:40 - right just click on this download
43:42 - and it will show if any of you
43:44 - if any of your data is installing or not
43:48 - and now if we want to create our own
43:50 - project click on this new project option
43:54 - alright sorry it's taking a bit of time
43:56 - i it's it's uh it's a bit buggy
44:00 - so yeah
44:02 - i'm really sorry about this thing yeah
44:05 - so as you can see here are multiple
44:06 - templates available right multiple
44:08 - templates available there is microgram
44:11 - 2d mobile karting micro game lego 3d
44:14 - mobile auto showroom all right but for
44:17 - now
44:18 - we have to work with these two only not
44:20 - even the 2d one we have to work with the
44:22 - 3d only all right
44:24 - so
44:27 - what we have to do see there are
44:28 - multiple options like another is this 3d
44:31 - uh sample scene hdrp and urp so
44:34 - basically uh
44:37 - what this does is this basically gives
44:39 - you a more better graphics more
44:40 - optimized graphics alright urp
44:43 - better best works for
44:47 - uh
44:48 - best works for
44:50 - us like computer systems
44:54 - and uh
44:56 - the urp best works for mobile phones all
44:59 - right so yeah
45:01 - and then uh you need to name your
45:03 - project alright name your project in
45:04 - here i want to name my project let's say
45:08 - learn
45:09 - to
45:11 - develop
45:13 - all right
45:14 - i'm sorry for the spelling
45:16 - mistake all right and then you can
45:19 - simply create project and your project
45:21 - will start creating all right
45:23 - so yeah that's it this is the base
45:25 - procedure and i have also shown you how
45:27 - to install unity so
45:29 - yeah
45:30 - thank you
45:32 - so hey folks welcome to this uh video
45:36 - and in today's uh this is the second uh
45:39 - part of module two alright in the first
45:41 - part of the module i gave you an
45:42 - introduction to unity and also uh told
45:45 - you how to install unity and create uh
45:47 - your first project with it all right
45:50 - but now in today's video we'll be
45:52 - covering rest of the topics or the rest
45:54 - of the imported topics that are left all
45:56 - right so without any further delay let's
45:58 - get started so our first topic to cover
46:01 - is navigating through interface all
46:02 - right so we've been navigating through
46:04 - our interface learning about what how
46:06 - like what are the different components
46:08 - of our interfaces all right so first we
46:10 - have to start with our project window
46:14 - all right so the part here you are
46:16 - seeing all right like the folders here
46:18 - are this panel is particularly known as
46:22 - the project panel all right
46:24 - this panel uh in this panel we can
46:27 - create multiple all right we can kill
46:29 - multi as many as folders we can we can
46:32 - add our own 3d models and all those
46:36 - right so
46:37 - just
46:38 - to create your own folder in here in the
46:40 - patch project panel just
46:43 - right click in the panel uh go to this
46:45 - create option and click on a folder all
46:48 - right so i want to create a folder named
46:50 - materials all right where i would be
46:52 - storing
46:53 - my materials
46:55 - right
46:56 - so
46:57 - this is my my material folder
47:00 - right
47:01 - now
47:02 - in the project panel i can even add
47:04 - numerous amount of assets right like if
47:08 - i if i show you um just just wait i'll
47:11 - be adding an audio file in it all right
47:14 - so this is a burden beach file all right
47:17 - i'm going to add this audio file in it
47:20 - just wait for a few seconds and uh
47:24 - the file will be imported it does take
47:26 - some time all right because currently
47:28 - i'm also recording so it took some
47:30 - amount of time but it's usually fast so
47:32 - here i have uh just what i did i just
47:35 - dragged and dropped that particular
47:38 - audio in here all right if you click in
47:41 - here you can even play that audio but i
47:44 - don't want to play it
47:45 - right now so
47:48 - yeah so we learned about our project
47:50 - window now while we develop all right
47:53 - while we develop our own games our own
47:55 - application
47:58 - we face multiple bugs we face multiple
48:01 - errors right
48:03 - don't we we do
48:05 - so where do
48:06 - where can we see those errors where can
48:09 - we look for those errors
48:11 - right
48:12 - so
48:13 - uh unity has provided us something known
48:16 - as the console window all right it's
48:18 - just right here all right us uh like
48:20 - only after the
48:22 - uh project if you don't have this
48:24 - console panel or console window just uh
48:27 - go in this top section name window click
48:29 - on this click on panels and
48:32 - just
48:33 - select that panel that is not available
48:35 - in this in your workspace right
48:38 - so currently it's and empty right
48:41 - currently it's empty i will show you how
48:43 - an error will look like but
48:45 - yeah in here you will get all the errors
48:48 - and warnings and particular debug text
48:51 - in here right so this is our
48:53 - console window
48:56 - now here comes our another window or
48:59 - panel that is the hierarchy panel
49:01 - so what is the hierarchy panel all right
49:04 - see
49:05 - there are multiple objects in this the
49:07 - scene all right don't worry i will make
49:09 - you make sure that you understand what
49:11 - this scene is but
49:13 - currently
49:15 - uh currently
49:16 - there are
49:18 - like two objects that is a one light
49:20 - object another is a main camera object
49:23 - right so hierarchy panel what it does is
49:25 - it lists down all right with the help of
49:28 - hierarchy panel we can just right click
49:30 - and create our another object right i
49:32 - will show you how to create one but
49:33 - hierarchy is basically uh the
49:36 - structuring of
49:37 - like
49:38 - the objects it is a panel where you
49:41 - would be able to see what objects are
49:42 - available uh inside of the scene all
49:45 - right and through the hierarchy panel
49:47 - you can create your objects you can
49:49 - modify them and all those things all
49:50 - right
49:51 - modifying is done by another panel
49:53 - actually i would show you
49:55 - right name after the hierarchy all right
49:57 - so
49:59 - this is what our hierarchy panel does
50:01 - right so we understood what our
50:03 - hierarchy panel does now here comes our
50:05 - inspector panel all right so what is
50:08 - this inspector panel man
50:10 - what is so
50:13 - this inspector panel is basically used
50:16 - for
50:18 - what can i say it is basically used for
50:20 - modifying the components all right it
50:21 - displays the
50:23 - properties of the object all right like
50:25 - if i click on the main camera right so
50:28 - here you can see here multiple multiple
50:31 - uh components here there multiple
50:32 - options are there we can manipulate
50:34 - those of these options and
50:37 - uh
50:38 - like we can manipulate this and
50:40 - make the camera component look our own
50:43 - way all right we can
50:45 - uh edit these components right
50:49 - so inspector panel gives you an
50:51 - inspection of that object right it gives
50:53 - uh it helps you to edit those options
50:56 - inside the object all right now
50:59 - as with
51:00 - so tell us what uh which panels have we
51:02 - looked
51:03 - we have looked into the project
51:05 - panel the console panel the inspector
51:07 - panel and the hierarchy panel now it's
51:10 - our time to look into the scene panel
51:12 - all right see seen the scene panel is
51:15 - nothing but uh a whole different like
51:19 - um it's a it's a workspace all right
51:21 - it's it's a workspace where we can
51:23 - actually
51:25 - uh put our models in right like our 3d
51:28 - objects in there we can put our 3d
51:30 - object into
51:31 - like main camera main camera is inside
51:34 - the scene main camera is inside this
51:37 - uh whole scene right it's in this 3d
51:40 - workspace so scene is the 3d workspace
51:43 - right now after that there is another
51:45 - panel that is this game panel
51:48 - right
51:49 - now what is this game panel
51:51 - see
51:53 - uh this scene is for navigating through
51:55 - all right we can manipulate these
51:57 - objects like like this all right we can
51:59 - i will show you what are these but we
52:01 - can manipulate these we can put our 3d
52:03 - objects in there but game
52:05 - game is the rendering part all right
52:07 - like after our uh like let's say i have
52:10 - made a 2d game for now all right but i
52:12 - uh now i want to test it out i want to
52:14 - play so what i would do is i would play
52:17 - that uh particular game and or in this
52:19 - screen all right in this particular
52:21 - screen or in this particular panel
52:24 - the game will start showing
52:26 - right
52:27 - so
52:28 - yeah
52:29 - now here comes oh another thing
52:32 - uh here you can see three buttons all
52:34 - right
52:35 - uh these are three buttons
52:38 - this one is the play button this one is
52:39 - the pause button this one is the step
52:41 - button right
52:43 - so uh what this play button does is just
52:45 - plays the scene all right that is starts
52:47 - the rendering this is like the pause
52:49 - button it will pause while you are like
52:53 - like rendering it and the step now the
52:57 - statements it will like after you have
52:59 - paused you can click on this step button
53:01 - it will
53:02 - uh like move one by one
53:05 - all right
53:06 - i'll show you those all right i will
53:07 - show you these
53:09 - now here comes another panel this is the
53:11 - asset store panel all right
53:13 - now one thing to note is uh here you can
53:16 - see it has told that they have moved uh
53:18 - like the asset store
53:20 - to uh the web all right and uh
53:26 - i don't know why they did so but
53:27 - actually i prefer that more uh because
53:30 - in my system the
53:31 - unity asset store uh used to lag all
53:34 - right uh instead of unity so i think
53:37 - that was a good idea but uh the main
53:40 - difference already that you would notice
53:42 - as a beginner
53:43 - uh in unity 2019 and 2020 is that uh in
53:46 - 2019 the asset store is already
53:49 - integrated
53:51 - in your like
53:54 - whole
53:56 - uh unity and in 2020
53:59 - uh the asset store is
54:02 - uh on the web browser all right
54:04 - so you can access it on uh from the web
54:06 - browser all right so we don't need this
54:08 - panel as of now so i will just right
54:10 - click on it and close that
54:12 - all right
54:13 - one more thing i would like to show you
54:14 - is there are multiple layouts available
54:16 - in unity all right just like go to the
54:19 - right of your screen and click on this
54:21 - layout alright there are multiple
54:22 - layouts
54:23 - all right you can try one of these and
54:26 - one of my very favorite all right just
54:28 - just wait for it oh yeah one of my very
54:30 - favorite uh layout is this one
54:33 - why uh because this gives a like
54:36 - more broader view all right this gives a
54:39 - more uh broader view of this
54:41 - scene all right it gives some it gives
54:43 - more free space to work on so i like
54:45 - this one
54:46 - the most
54:47 - uh but for now let's go to the default
54:51 - all right we'll be working on the in the
54:53 - default only as of now
54:55 - so
54:56 - yeah
54:58 - so uh let me save this yeah
55:01 - so we have understood that
55:03 - the very basic interface now let's go
55:06 - and
55:07 - look at the tools all right
55:09 - the tools that we have so first of all
55:12 - we need but before that before looking
55:15 - into the tools we have to understand our
55:17 - game objects all right
55:19 - so
55:21 - see we have uh
55:24 - got into another section that is game
55:26 - objects and what are game objects
55:29 - so see game objects are digital objects
55:32 - all right game objects are those digital
55:35 - objects that we can use digitally
55:37 - all right
55:39 - game objects can be anything alright i
55:41 - mean anything it can be 3d game object
55:43 - or to the game object
55:45 - all right so what our game object
55:47 - basically game objects are virtual
55:48 - objects nothing else right so like uh
55:51 - like an example this main camera it's a
55:54 - game object all right
55:55 - it's it's it's a gaming a game object
55:58 - now this directional light all right
56:00 - this is a game object
56:02 - right
56:03 - so
56:04 - yeah similarly we can create our own
56:06 - game objects like just just
56:08 - uh go to this hierarchy right click in
56:10 - here
56:12 - uh click on this 3d object all right
56:15 - click on this
56:16 - cube
56:19 - right
56:20 - so we have created our own cube
56:23 - right so now
56:27 - here you can see there are multiple
56:28 - anchors right there multiple anchors i
56:31 - will tell you what are these
56:33 - in the top here you can see here is a
56:36 - tool bar
56:37 - right here is a toolbar so what does
56:39 - this toolbar does first first of all
56:42 - first and foremost there is a tool named
56:45 - hand tool this is uh used
56:49 - to
56:50 - like uh grab the screen and navigate
56:52 - through it grab the scene and navigate
56:55 - just just for that now after that after
56:57 - that we have move tool
56:59 - this move tool gives you some certain
57:01 - anchors all right uh where you can hook
57:04 - on
57:05 - all right you can hook uh
57:07 - with those anchors you can move your
57:08 - game object throughout the screen
57:11 - right
57:12 - so
57:13 - that's what it does
57:15 - after that we have a rotate tool like if
57:17 - you want to rotate your object i can i
57:19 - can do that it gives rotational accesses
57:22 - through which i can do that right
57:25 - isn't it like really fun
57:27 - now after that rotate tool there's
57:29 - another tool that is a scale tool it
57:31 - helps us to scale the object
57:33 - scale the object all right like we can i
57:35 - can scale it in any any uh axis
57:39 - scaling it at any axis right
57:42 - after that we have a rectangle tool or
57:44 - wreck tool all right what is this it it
57:47 - just like helps you to resize the object
57:49 - in a rectangular manner nothing else
57:52 - now then we have a universal tool
57:55 - uh i guess this is called uh oh this
57:58 - doesn't have a name actually but i will
57:59 - call it universal tool all right
58:02 - so
58:03 - it is a combination of all the tools we
58:06 - discussed previously all right
58:08 - except the hand tool and if you would
58:10 - see uh i'm able to use the hand tool uh
58:13 - even when i'm like not uh selecting it
58:16 - already like externally selecting it
58:19 - it's automatically getting selected so
58:21 - the basic shortcut for that is
58:25 - sorry to click the uh middle mouse
58:28 - button
58:29 - right so
58:33 - i'm really sorry about that so yeah
58:37 - uh we have created our own cube we
58:40 - learned about game object right
58:42 - we learned about game objects
58:45 - now
58:48 - our uh just just wait i want to like
58:51 - reset all the things
58:53 - now i want uh to play with it right i
58:56 - want to manipulate it
58:58 - i want to manipulate this game object
59:01 - how to do that
59:02 - first of all i can use these uh these
59:04 - several tools these fancy tools
59:06 - available or i can uh go to my like
59:10 - simple methods like
59:12 - uh as i previously told that in the
59:14 - inspector menu inspector menu gives us
59:16 - the properties of the game object so
59:20 - we with the inspector menu we can edit
59:23 - those properties too right we can
59:27 - so how do we do that first of all let's
59:30 - say i want to edit the transforms all
59:32 - right so what are the transforms man
59:34 - what are transforms
59:36 - like see i am moving this right i'm
59:38 - moving this like this i'm i'm able to
59:40 - rotate it also so what is that
59:43 - the
59:44 - things are like moving at a particular
59:47 - direction we can also do the same thing
59:49 - through this like inspector menu like
59:52 - here you can see there are three
59:53 - parameters like first of all see the
59:55 - transform
59:57 - here first of all see the transform
59:59 - here comes the position
60:02 - so that what does what does it does
60:04 - it changes the position like i want to
60:06 - be it at
60:07 - 10 of x axis right so it has got to tend
60:11 - and
60:11 - uh
60:13 - yeah you can simply manipulate your
60:15 - position from this but for now i want it
60:16 - to be in zero
60:18 - right
60:19 - now
60:21 - rotational values all right let's say i
60:23 - i i want uh my cube to be rotated 45
60:26 - degrees at uh x 90 degrees at uh y
60:31 - and uh let's 45 degrees at z
60:35 - so i rotated my cube right i i did
60:37 - rotated it
60:39 - now one one thing you'd be seeing like
60:40 - let's say you messed up with all these
60:42 - uh
60:44 - parameters now you want to reset it how
60:46 - would you do that just click on this
60:47 - three little dots
60:50 - click on reset
60:51 - as simple as that nothing much all right
60:54 - you can also scale it all right now this
60:56 - is your homework you have to try this
60:58 - scale portion by yourself all right you
61:00 - have to try the scale portion by
61:02 - yourself
61:03 - now here are some other all other
61:05 - parameters too all right
61:07 - now this is a cube mesh filter all right
61:10 - then there's a mesh renderer i want to
61:11 - show you something if i
61:13 - remove this mesh renderer
61:15 - you won't see any sort of mesh all right
61:18 - what are these green lines
61:20 - this green lines are the box collider if
61:23 - i remove it
61:24 - you you would see the very light green
61:26 - right very light green now these other
61:29 - light greens are this this of cube mesh
61:31 - filters
61:33 - but this box collider lines are also
61:34 - getting attached to it
61:36 - now
61:39 - here is the mixed random mission day is
61:40 - basically the mesh of the queue nothing
61:42 - else all right
61:44 - so
61:45 - till now we have learnt manipulating our
61:47 - cube
61:49 - we have learnt uh
61:50 - uh
61:52 - navigate our interfaces all that we have
61:55 - learnt about game objects right
61:58 - so
62:00 - yeah we have learned this much by now
62:04 - now
62:06 - let's talk about materials what are
62:09 - materials see
62:11 - of course you want uh your uh
62:14 - like game objects to be colorful right
62:16 - you want your game objects to be like
62:19 - texturified like they they should have
62:22 - some sort of skin
62:24 - right even humans does have skin why
62:26 - won't a game object that's like
62:28 - that's really bad
62:31 - right so our
62:33 - game objects also wants
62:35 - uh
62:36 - materials
62:38 - like just uh humans we want our skin
62:42 - similarly the game objects also want
62:44 - their skin
62:45 - so
62:46 - the skin is known as materials in
62:50 - this terminology in technical
62:52 - terminology all right
62:54 - so just just uh
62:56 - as you can see i previously
62:58 - created a folder right
63:00 - go to that folder
63:02 - right click
63:04 - click on create
63:06 - find the material i found it in here
63:09 - click on it and let's
63:11 - name it i want to name it red right i
63:14 - want my material to be red
63:16 - now what
63:18 - now what
63:19 - now i want to change the color all right
63:21 - see simply click on this material and
63:23 - here you can see that you uh the
63:25 - properties of those one that material is
63:27 - available in the inspector now after
63:29 - that click on this white box all right
63:31 - this is this uh
63:33 - at the right of albedo
63:35 - click on this all right and select a
63:37 - color let's say let's say i want it uh
63:39 - to be
63:40 - um
63:42 - red
63:44 - yeah so that's sort of a bit pink also
63:48 - but well that would work for me so now
63:51 - uh
63:53 - man i have like
63:55 - i have edited the color i have put uh
63:58 - put something color in it but why isn't
64:00 - it reflecting in the cube why is it
64:02 - showing on the cube is the cube angry
64:05 - that with the color is the cube angry no
64:08 - it is not of course not so
64:11 - we we have to apply this material in the
64:14 - cube right we have to apply it so how
64:15 - would you do that
64:17 - two simple ways click on this cube
64:20 - one way i'm showing you one way that is
64:22 - click on this cube
64:23 - drag and drop this material inside its
64:25 - inspector
64:27 - voila you got the material now our cube
64:30 - is happy just like us humans
64:32 - the cube has also got
64:34 - its skin another way is just drag drag
64:37 - this and put drop it in the scene view
64:40 - without also using the inspector this
64:42 - can also be done
64:43 - right so our cube is now really happy
64:45 - because we have provided him a skill
64:48 - right
64:49 - voila
64:51 - so now we learned about materials now
64:53 - one more thing if you want to add
64:55 - textures it is really easy click on this
64:57 - like albedo here you are seeing a blank
64:59 - box and after that there's a zero sort
65:02 - of click on this all right
65:04 - now
65:05 - let's say what what sort of material i
65:08 - want i want all right let's see
65:10 - um
65:11 - oh no no
65:13 - not not this not this of course not this
65:15 - uh let's say this
65:18 - yeah this this looks something like
65:20 - a bit good right so yeah we give our
65:24 - cube a texture also
65:27 - see now our cube is more than happy
65:29 - so
65:30 - we successfully
65:32 - made our cube happy and also learnt
65:34 - about materials and texturing find those
65:37 - all right
65:38 - now
65:40 - how to create a scene all right see what
65:42 - are scenes
65:43 - scenes are nothing but different
65:46 - environments
65:47 - right
65:48 - they are different environment like this
65:50 - is a sample scene i want to name it
65:52 - let's say i want to name it where where
65:55 - is the name yeah i want to name it
65:57 - a main scene all right mean scene
66:01 - this is the scene i want to name
66:04 - right this is my main scene
66:08 - so this is the scene all right and where
66:10 - did the material go
66:13 - that's weird
66:15 - first i guess this is the bug of unity
66:17 - but this is really weird
66:20 - or i guess it happened because i didn't
66:22 - saved it i'm not sure but yeah but we
66:24 - managed to get it back
66:26 - now scene is a
66:28 - separate environment so that we can
66:30 - create another scene
66:32 - all right i would also like uh
66:34 - while uh getting into euphoria i will be
66:36 - i will also be showing how to navigate
66:39 - through different scenes all right so
66:41 - don't worry about anything how to
66:42 - navigate and all those things so i just
66:45 - want i just have to click right then
66:47 - create
66:49 - then here's always the scene man oh yeah
66:52 - got this scene now and
66:54 - create a new scene that is test scene
67:00 - see i got another scene with uh
67:03 - main camera and directional light by
67:04 - default all right but currently i want
67:06 - to be in the main scene right
67:09 - so
67:10 - we successfully created our cube and
67:11 - also managed to make it happy by giving
67:14 - it a skin
67:16 - now let's learn a bit a bit about
67:19 - project structure
67:20 - right
67:21 - what is the project structure
67:23 - what is it
67:26 - a project structure is a way of
67:27 - structuring your project all right
67:29 - nothing else see why uh see this is not
67:31 - something like
67:33 - many people teaches you all right this
67:35 - this or this thing you gain but you gain
67:37 - by experience but today i'll be teaching
67:39 - you
67:40 - all right see maintaining your project
67:44 - on it maintaining a project is really
67:45 - important like when i was a beginner
67:47 - even uh i remember when i was a beginner
67:50 - i
67:51 - used to like
67:52 - make my whole project very much
67:54 - cluttered right
67:56 - i used to make everything cluttered out
68:00 - and that actually caused a real problem
68:03 - for me like later on
68:05 - all right because managing those were
68:07 - really like hectic
68:09 - so with
68:11 - after like after working with unity i
68:13 - learned that uh it is really important
68:15 - to manage your project so how do i
68:17 - manage i create separate folders all
68:20 - right for separate
68:22 - type of file or like for materials like
68:24 - for skins i created this particular uh
68:28 - folder named materials all right to add
68:30 - some sort of assets all right some sort
68:32 - of assets
68:34 - i would name another folder name assets
68:36 - where i'll be storing my assets like 3d
68:39 - model like
68:41 - 3d images right like to store audio i'd
68:44 - be creating another folder that is audio
68:47 - folder all right so i create separate
68:50 - types of
68:51 - folders all right for separate types of
68:53 - files
68:54 - right so similarly
68:58 - throughout this video would be saying
68:59 - how am i creating folder for each type
69:01 - of file right so
69:04 - i recommend to stay
69:06 - along with the video till the end right
69:09 - so till now we have learned
69:11 - uh about navigating through our
69:12 - interface about game objects about
69:14 - manipulating those all right
69:16 - uh about uh materials all right like the
69:19 - skins then we have learned about the
69:21 - scenes what are scenes
69:23 - right
69:24 - uh then we have learned about our
69:26 - project structure
69:29 - isn't it cool like
69:31 - within a half an hour we have done so
69:33 - much
69:34 - so
69:36 - yeah so we learned about structuring our
69:38 - project
69:39 - all right
69:41 - now
69:42 - some more parts are left like creating
69:44 - our own c sharp script all right then we
69:47 - will be learning to modify our own
69:50 - components then prefabs
69:52 - uh then
69:54 - physics and collision then we'll be
69:56 - learning about audio and then at last
69:59 - we'll wrap up this
70:00 - module after
70:03 - designing our interfaces
70:05 - all right
70:06 - so
70:07 - yeah let's let's do it let's get the
70:10 - energy back and let's do it so
70:12 - to to keep the scripts all right to keep
70:16 - the scripts uh what i want to do i want
70:18 - to create another folder
70:20 - name scripts folder or that it would be
70:23 - containing all the scripts in here
70:26 - just then right click click click shisha
70:30 - all right i want to name it a test
70:33 - script
70:36 - all right
70:37 - now as you can see in here there's a
70:39 - like buffering going on this buffering
70:42 - is basically the
70:48 - is getting compiled
70:50 - right so just wait for a few seconds and
70:53 - it would
70:54 - be done
70:55 - actually my system like my system has
70:57 - got really slow and because of that it's
70:59 - taking a lot of time but
71:02 - i guess we can manage with that right so
71:04 - yeah voila our test script is created
71:09 - now
71:09 - i'll be using my own text editor all
71:12 - right i'm dragging and dropping it into
71:15 - the one
71:17 - um just wait
71:20 - just just uh just wait
71:22 - uh so
71:25 - yeah
71:26 - now let me drag and drop it in here all
71:28 - right now see don't look into these
71:30 - windows all right um i have set up my
71:32 - sublime text for competitive programming
71:34 - so don't look into this but let's
71:36 - understand what are these all right see
71:38 - if uh don't worry i'll be explaining all
71:41 - these things all right what is like
71:43 - public class what is
71:45 - like what is void then uh what is using
71:48 - so i'd be under make you understand all
71:51 - these things all right if you don't
71:53 - understand something in here don't worry
71:55 - i am there for you all right i'm your
71:57 - instructor i'm always there for you if
72:00 - you have any doubt join our community
72:02 - all right join our community ask your
72:04 - doubts in there you would i promise you
72:06 - would get instant doubt support in there
72:09 - all right
72:11 - so yeah
72:12 - as you can see in here all right
72:16 - just wait let me uh make the font a bit
72:19 - bigger yeah so
72:21 - first of all
72:23 - we are including all these system
72:25 - packages like unity packages all right
72:27 - these are packages we are including
72:29 - now we have created a class of
72:31 - transcript all that that is inheriting
72:33 - another class all right that is
72:35 - monobehaviour class
72:38 - all right
72:40 - there's the monobehaviour class
72:43 - now inside that mono behavior class c
72:45 - remember this monobehaviour class
72:47 - consists of these functions
72:50 - all right so it is important to inherit
72:52 - this monobehaviour class
72:54 - now if you don't understand what
72:55 - inheritance is don't worry i am there
72:59 - now this is uh
73:01 - [Music]
73:02 - with the void uh start function there's
73:04 - the update function
73:06 - what happens in start is
73:08 - so the first time all right the first
73:10 - time i'm playing my
73:12 - unity
73:13 - like playing uh the particular scene all
73:16 - right
73:17 - it will show at first like in the first
73:20 - frame it will
73:21 - do some function that i will define all
73:23 - right and what the update does is
73:26 - what it does it basically updates
73:29 - uh every frame like it will do that
73:32 - function it will do that particular
73:34 - function in each and every frame all
73:37 - right and it will be called once like if
73:40 - if the frame is one
73:42 - the update function will be called once
73:44 - the frame is two
73:45 - again one so
73:47 - yeah so it
73:48 - in every frame this update function is
73:50 - called once
73:51 - now let's let's try it out right try it
73:54 - out
73:55 - so
73:57 - to uh print something i'll try to print
73:59 - something that is
74:01 - to print something in like
74:04 - unity or like in the console we do
74:06 - debug.log and let's name it
74:11 - start function
74:13 - right and also remember to put the
74:15 - semicolon i all i
74:16 - sometimes forget and this gives us
74:19 - all right so it's compiling the script
74:21 - alright just just wait for it all right
74:24 - it will
74:25 - it will compile the script and then we
74:27 - are good to go i will also show you how
74:29 - to execute a script
74:31 - all right
74:33 - um
74:34 - just just do it ah yeah
74:36 - we are good to go
74:38 - right
74:39 - so
74:40 - yeah now let's play all right how to
74:43 - play click on this play button
74:45 - all right just wait this would take some
74:48 - time all right
74:49 - all right it is telling us to hold on
74:51 - and we will hold on like
74:55 - here it is really good it notifies us
74:57 - everything
75:00 - so yeah
75:01 - as you can see we have got into our
75:03 - games and started playing it let's go to
75:05 - the console
75:07 - oh my god
75:08 - why isn't it printing have i have i done
75:10 - something wrong like have i coded
75:12 - something wrong let's check the script
75:14 - again
75:16 - no
75:17 - nothing is wrong in here
75:19 - i guess everything is okay yeah it looks
75:21 - good to me but why didn't
75:23 - it actually work
75:26 - let me show you
75:28 - so i got out of my play screen all right
75:30 - go to the scene yeah
75:32 - see the script is in here all right it
75:35 - is in here in the project but we haven't
75:37 - executed it right we haven't executed it
75:40 - so how to execute pick an object all
75:43 - right i want this cube object then just
75:45 - drag and drop the script all right
75:48 - drag and drop in it there's another
75:50 - option alright that is click on add
75:52 - component
75:53 - all right
75:54 - and type the script name all right like
75:56 - test script so here you got the test
75:59 - script right
76:01 - so similarly there are two ways to add
76:03 - on you can also drag and drop in here
76:04 - also all right that's another option now
76:08 - another got added here but i don't want
76:10 - it so i will remove it
76:12 - all right
76:14 - so let's play it now let's let's try
76:17 - playing it now
76:20 - just wait hold on
76:22 - our unity is telling us to hold on
76:27 - it is entering the play mode
76:31 - so
76:32 - now let's see what has happened
76:34 - in our console
76:36 - cool
76:37 - now you can see in the console there's
76:38 - something written
76:40 - it is written start function
76:43 - that's what we
76:44 - wrote in the debug.log right that's what
76:46 - we wrote
76:48 - so
76:49 - what happens
76:51 - the start function walk
76:53 - works in
76:55 - first frame
76:56 - right
76:57 - now this is the update function all
76:59 - right now we want to check the update
77:01 - function right
77:05 - just wait
77:07 - try it
77:09 - so yeah
77:11 - so i have saved it it will take some
77:14 - time to compile it let it do its
77:16 - compilation we won't bother him all
77:18 - right unit is good
77:20 - he does everything for us all right
77:24 - so
77:24 - let's uh let's hold on let's
77:27 - just do it it will take some time
77:33 - oh
77:33 - cool
77:34 - so it got
77:36 - like
77:37 - compiled and let's play it let's see
77:40 - what happens
77:50 - just wait
77:54 - uh now let's are you ready to see the
77:57 - console window are you guys ready
77:59 - let's see it
78:00 - oh my god
78:02 - what's it doing it's continuously like
78:05 - putting giving the function update
78:06 - function like each frame it is doing
78:08 - this
78:09 - on each frame
78:10 - see it continuously updates the function
78:14 - in each frame
78:16 - so
78:18 - actually i think you got a very basic
78:21 - idea of what this this function is doing
78:23 - right
78:24 - i guess you got that very basic idea so
78:27 - for now
78:28 - uh this is the like you learned how to
78:32 - uh
78:33 - basically learn unity sorry
78:35 - i'm not the only teaching unity
78:37 - basically you learned how to
78:40 - create your own script all right and
78:42 - understood the functions in there all
78:44 - right now
78:46 - there's another section known as
78:48 - modifying components we already learned
78:50 - how to modify components all right so
78:52 - yeah
78:53 - now here comes prefabs what are prefabs
78:58 - prefabs you can say these are the
78:59 - collections all right these are
79:01 - collection let me create another folder
79:02 - i would also show you how to create a
79:04 - prefab
79:08 - so
79:09 - what is the prefab man
79:11 - a prefab basically helps us to create a
79:15 - collection
79:16 - right like it is sort of a storage
79:20 - particular thing right see uh
79:23 - let's say right now let's let's take a
79:25 - scenario all right let's take a scenario
79:28 - you are developing a game all right so
79:30 - that's a a first person shooter game
79:33 - all right you have implemented it uh on
79:35 - one scene all right now you have created
79:38 - your own first level now you want to go
79:40 - to a second level and you want that same
79:42 - particular fps player alright same
79:45 - particular fps player in this in another
79:48 - scene that you are going to create that
79:49 - is in another level what you would do
79:53 - you have uh
79:54 - one way
79:55 - all right one way is to
79:58 - like
79:59 - create like assemble all the components
80:01 - that you made previously again all right
80:04 - and that would consume your time all
80:06 - right and of course that isn't a good
80:08 - thing
80:09 - another way is to create a prefab
80:11 - so prefab creates an another like
80:15 - a package of that particular object
80:17 - right it's it's a package of that
80:19 - particular object
80:22 - it helps to create uh like a package
80:24 - like okay if i our cube has certain
80:26 - properties all right i need the same
80:28 - cube one that's
80:30 - next scene
80:31 - right i need the same cue on the next
80:33 - scene
80:34 - then one way is to recreate it another
80:37 - way is to create a prefab and just use
80:39 - that
80:40 - now how to create a prefab
80:43 - click on this wallet click on this cube
80:45 - drag it and bring it in this project
80:47 - section
80:49 - put it in there and voila your prefab is
80:51 - created now here you can see the cube
80:53 - has turned like this this thing is
80:55 - turned blue this is the indication that
80:57 - it is a prefab now let's create another
80:59 - scene and let's see does it does uh oh i
81:02 - i have already one
81:04 - does this work on this on this another
81:06 - scene i want to save it right i
81:08 - definitely want to save it
81:10 - uh
81:11 - so yeah
81:13 - let's go to this uh
81:16 - where is it prefab all right now let's
81:19 - drag and drop it in here
81:20 - wow i got it in here just to reset the
81:23 - transform yeah
81:24 - i got it in here let's let's try playing
81:27 - it let's say the functionality works or
81:28 - not
81:33 - just wait
81:35 - for a few seconds
81:37 - to run
81:39 - um
81:41 - it is doing its job
81:42 - uh so yeah now let's look at in the
81:45 - console wow
81:47 - the same thing that was
81:49 - working on the previous scene is the
81:50 - same thing is working in here so yeah
81:53 - one more thing i forgot to tell you i
81:55 - just okay it just came up in my mind
81:57 - just
81:58 - let me like
82:00 - go back to my main scene
82:03 - uh wait let me lower down the desktop
82:06 - volume yeah
82:08 - so
82:09 - now so now what all right so what now
82:14 - it's uh
82:16 - what we have to do uh
82:18 - see
82:20 - now i would be telling you something
82:22 - really important all right i forgot to
82:25 - tell you
82:26 - that previously
82:28 - and
82:29 - object all right an object can have its
82:32 - child object all right like you can
82:34 - branch the objects like if i if i want
82:36 - to want the cube to be a child of main
82:39 - camera i would just click on the cube
82:41 - drag and drop it in here and see
82:43 - my cube is now the child of the main
82:45 - camera
82:46 - right and main camera is the parent
82:49 - similarly i can also create empty
82:52 - empty objects that is click on create
82:54 - and create empty all right i won't
82:57 - change its name i will just reset its
82:59 - transform and put this cube underneath
83:02 - of that
83:04 - game object all right now i can make
83:06 - multiple childs of this cube all right i
83:08 - just control d all right to duplicate
83:10 - control d
83:11 - ah
83:13 - so yeah again ctrl d
83:18 - again ctrl d
83:21 - so similarly like this i i i am able to
83:24 - like
83:25 - oh wait uh yeah i'm able to create
83:27 - multiple child objects inside another
83:30 - empty game object
83:32 - right so you can do those things
83:34 - similarly
83:35 - nothing much different
83:37 - right
83:39 - so
83:39 - till now we have learnt a lot of things
83:42 - all right we have learned
83:43 - also modifying our own components we
83:46 - have learnt about prefabs now three more
83:49 - important sections are left
83:51 - that is physics and collision
83:54 - all right physics and collision
83:56 - another
83:58 - one is audio how to work with audio
84:00 - files all right audio is really simple
84:02 - all right
84:03 - then we have
84:04 - the last but not the least
84:06 - designing our interfaces
84:09 - all right and at last of that i would
84:11 - also be showing you another thing
84:14 - all right ah so
84:19 - yeah
84:20 - let's move on with physics and collision
84:22 - what is a collision man what is it
84:26 - see collision is nothing all right
84:28 - collision is nothing but
84:31 - the
84:32 - hit or like the hit of an object
84:35 - for on another object all right it is
84:37 - flexi these two objects are colliding
84:39 - with each other all right these two
84:41 - objects are colliding collision is
84:42 - basically the
84:44 - like
84:45 - interfering of two object
84:47 - with one another
84:49 - right
84:51 - so
84:53 - that's what collision is all right now
84:55 - if i if i had to say you all right
84:58 - game like this this whole unity engine
85:02 - is a replica of our real world physics
85:05 - are we showing you how all right just
85:08 - just wait all right first of all i will
85:10 - be deleting all those other game objects
85:12 - just wait uh first i need to uh set up
85:15 - my environment to show you how
85:18 - right
85:18 - uh
85:21 - oh no no why let me let the y be 0.4
85:25 - right and the vb for
85:28 - one b four right
85:31 - so
85:31 - this is how it is
85:33 - all right now
85:36 - let's take another
85:38 - 3d object that is a spear
85:40 - we would call it a ball right
85:43 - it is a ball
85:44 - for uh for us it is a ball
85:47 - right
85:48 - just wait
85:53 - so
85:59 - so yeah
86:01 - this is a ball right now i want to
86:03 - implement a real world physics
86:05 - so as of now all right let me let me
86:07 - first de-attach the script right now or
86:10 - else it would be
86:11 - working continuously i don't want the
86:13 - script to be interfere to interfere
86:15 - alright
86:18 - just wait
86:20 - oh
86:21 - and let me apply to a brief habit
86:26 - so our 3d uh our script has been removed
86:31 - all right like here one thing you can
86:33 - see of it here's the shadow that's
86:35 - because of the lightning all right you
86:38 - can play with the light lighting later
86:42 - all right so let's play it now so
86:44 - in real world what happens
86:47 - in real world if we have a plane and if
86:49 - we throw a ball from the from the top
86:53 - it will fall down right it will fall
86:56 - down and bounce
86:57 - let's check that it happens in here or
86:59 - not
87:05 - just wait keep patience
87:08 - all right keep patience
87:14 - oh my god why isn't it falling it should
87:17 - fall right it should
87:19 - because i i recently told that unit
87:21 - engine is a replica of our real world
87:24 - physics
87:25 - but
87:26 - you have to implement those physics
87:28 - right you have to implement those how
87:30 - how would we implement those
87:34 - unity is really really caring about us
87:37 - and what unity developers did they
87:39 - already created those physics objects
87:42 - for us those physics components that
87:44 - will help us replicate the real world
87:46 - situations
87:47 - all right now how do we do that
87:51 - so see we are first of all we are in the
87:53 - game scene all right we are in the game
87:55 - scene i'd be editing this whole thing
87:59 - while being in the game scene all right
88:01 - so just put it aside in here all right
88:03 - because we need the view only nothing
88:05 - else
88:08 - one more thing i would like to say that
88:10 - after
88:12 - i get out of the this game view object
88:15 - will get resetted because though won't
88:17 - be saved uh during the game view
88:20 - remember that all right
88:21 - so now
88:23 - i want this ball to fall due to gravity
88:26 - all right
88:27 - i want this ball to fall
88:29 - how do i do that so far there click on
88:32 - this add component all right there's
88:34 - something known as a rigid body
88:37 - all right
88:38 - click on this rigid body and see the
88:40 - effect
88:41 - cool isn't it like after i added this
88:43 - rigid body it's the ball started falling
88:45 - now it isn't bouncing right see to make
88:48 - it bounce there's another sort of
88:50 - physics all right we need to create a
88:52 - physics material all those things
88:54 - but we won't be doing that in here but
88:56 - as of now you understood that
88:58 - uh we were able to add
89:03 - the gravity like we would be able to add
89:06 - make the ball uh physical like we are we
89:08 - are able to add physics to the ball
89:10 - right
89:12 - now
89:13 - in the rigid body component
89:15 - you can uh play with the values in here
89:18 - all right like
89:19 - the mass value the drag the angular drag
89:22 - you can like
89:23 - click on this huge gravity let me let me
89:25 - show you one thing
89:28 - if i click on this
89:30 - uh see it isn't falling because it is
89:32 - not using gravity
89:35 - so
89:36 - see cool isn't it
89:40 - great now here's another
89:42 - option collision detection all right
89:46 - uh before explaining this collision
89:48 - detection thing right i would be telling
89:50 - you
89:51 - how this collision is happening
89:54 - how is it
89:55 - is there any sort of magic
89:57 - before that i need to replicate this
89:59 - object already because i don't want the
90:00 - ball to fall
90:02 - all right i literally don't want it to
90:04 - fall
90:06 - so
90:08 - here you can see here some options box
90:10 - collider all right
90:12 - this box colliders are basically
90:14 - provides the collision platforms
90:17 - all right it provides a platform
90:19 - like uh like in the ground we are moving
90:22 - all right we aren't falling like we are
90:24 - fall we aren't falling through that
90:27 - uh whole road right went
90:29 - like penetrating that road and
90:31 - going to the bottom of that road are
90:35 - like does that does that thing happened
90:37 - doesn't right
90:39 - similarly
90:40 - in terms of games we could say there are
90:43 - some platforms right those platform has
90:45 - some colliders
90:47 - all right those are book box collider so
90:52 - here if i click on this box color you
90:54 - can see all right you you just saw that
90:56 - the ball got it through that because
90:59 - there aren't any collision
91:01 - like there aren't any collision
91:03 - happening to stop that ball right in
91:05 - there because we have disabled the uh
91:07 - box collider right so box collider
91:10 - actually helps us
91:11 - to uh like this colliders there are
91:13 - multiple types of colliders actually box
91:15 - color is one of which type like this
91:16 - pier collider all right
91:18 - so
91:20 - box collider is basically helps us
91:24 - to pro uh to provide collision to that
91:27 - particular platform
91:28 - right
91:31 - just just wait
91:34 - uh
91:37 - so yeah
91:40 - so uh this is how everything is
91:42 - happening right cool isn't it
91:46 - so
91:48 - we have understood about colliders one
91:50 - more thing there like there are many
91:51 - multiple you can have multiple uneven
91:53 - shapes right like like a terrain
91:56 - all right like a road there like a road
91:59 - is uneven all right a desert it is
92:01 - uneven it doesn't have a flat surface it
92:04 - is totally uneven there are
92:06 - highs and lows right
92:10 - so for that type of like if you want uh
92:14 - want to provide collider to that
92:16 - platform
92:17 - we can't use box collider in there right
92:19 - because then it will be totally plain
92:21 - we want we don't we won't be able to use
92:24 - it
92:24 - so there's another collider named mesh
92:28 - collider all right
92:30 - it is in the component only alright i
92:32 - want you to try that collider out all
92:34 - right by yourself just close to have
92:36 - component click on mesh collider and you
92:39 - can use it now the problem with mesh
92:41 - collider is
92:43 - uh it is a
92:44 - a bit more cpu intensive all right then
92:47 - this box collider or
92:49 - spear collider or any other collider the
92:51 - reason being there is it uh does
92:55 - more calculations
92:57 - than box and spear collider because uh
92:59 - the mesh collider what it does it it
93:02 - gets the accurate shape based on that
93:04 - particular terrain or the particular
93:06 - model right isn't it so
93:09 - so what uh
93:11 - they gave that particular
93:13 - shape so it does more calculation
93:15 - now in the rigid body i was going to
93:18 - show you something known as collision
93:19 - detection what is that the multiple
93:21 - option all right we'll be looking into
93:24 - two main of these discrete and
93:25 - continuous
93:27 - now there's a huge difference between
93:29 - those all right
93:31 - see
93:32 - what is the difference discrete is
93:34 - performant all right discrete uh gives a
93:37 - lot of performance it is like in
93:39 - performance wise
93:40 - it is better than continuous
93:43 - all right but the prob the problem
93:46 - there is
93:47 - it
93:48 - does like it doesn't do accurate
93:51 - calculations
93:53 - it doesn't like
93:55 - it can if you if you throw it from a
93:57 - really high like at a really high
93:59 - position it will penetrate
94:01 - through this whole um collider all right
94:05 - through this whole platform
94:08 - but
94:09 - continuous continuous is
94:11 - is better than discrete already because
94:14 - uh with the use of continuous there are
94:17 - very less chances that it will penetrate
94:19 - through because it does more calculation
94:21 - than discrete but the problem is
94:23 - continuous is cpu intensive so that's
94:25 - the difference major differences all
94:28 - right
94:29 - so we also learned about the very basic
94:31 - physics
94:32 - right we learned about the very basic
94:34 - physics of
94:36 - unity
94:37 - now
94:38 - it's our time
94:40 - it's our time to learn
94:43 - uh
94:44 - this audio
94:46 - right
94:47 - so
94:48 - for that
94:50 - first of all to play that audio all
94:51 - right first of all to play that audio oh
94:53 - my god i did i deleted everything uh so
94:56 - yeah
94:58 - all right i would be getting those
94:59 - objects back because
95:01 - i did that with
95:03 - our
95:05 - whole environment now i want to create
95:07 - an audio object how do i do that
95:10 - go to this uh
95:12 - click on this
95:13 - go to this thing all right
95:15 - click on audio source
95:17 - all right so we created a simple audio
95:20 - source right we created it
95:22 - now there are some particular options in
95:24 - there all right
95:26 - click on this
95:27 - select the audio
95:30 - and uh
95:31 - let's let's play it
95:34 - all right
95:35 - just wait this is a uh this audio is the
95:37 - birds and beach audio all right like
95:41 - bird chirping are in the big uh beach
95:44 - all that or do you think
95:47 - are you able to listen it i am sure that
95:49 - you are able to listen
95:51 - so the audio is playing right
95:55 - so uh
95:57 - the audio is playing in here right the
95:59 - audio is playing
96:01 - that's cool isn't it so we implemented
96:03 - our own audio source
96:05 - all right now uh soon in our pre uh in
96:08 - our future lectures all right we'll also
96:10 - be learning how to control our audio
96:11 - sources through scripts alright but for
96:13 - now if we look into these like uh
96:16 - properties there's a
96:18 - uh option for mute now i won't be
96:21 - actually explaining all the things in
96:23 - here you have to explore it by yourself
96:25 - like
96:25 - uh you can explore this bypass effects
96:28 - bypass listener effects bypass reverb
96:30 - zones all right now these this loop is
96:33 - basically uh will loop the audio all
96:36 - right because without loop
96:39 - initiated all right without click
96:40 - checked on loop
96:42 - uh what will happen your audio will only
96:44 - play once but with loop it will play all
96:47 - the time all right now here's another
96:49 - option that is play on awake all right
96:52 - uh play play on awake what it does is it
96:54 - like when you
96:56 - just play your game all right it will
96:58 - start the audio at that time only if i
97:00 - if i uh
97:02 - like remove it and then start playing it
97:08 - just wait
97:20 - so uh it has started playing but you uh
97:23 - won't be seeing anything like you won't
97:25 - be hearing anything because
97:27 - player awake is disabled now to play
97:29 - that audio i need to add some trigger or
97:31 - some sort of script to play that audio
97:33 - all right so play when on away
97:35 - what it does
97:37 - it basically
97:39 - uh
97:40 - plays the audio whenever you start now
97:42 - here's another thing that is volume all
97:44 - right
97:45 - now this is the volume it uh varies from
97:48 - zero to one all right now there are
97:49 - multiple other
97:51 - uh audio editing uh feature you can
97:54 - check them out by yourself all right you
97:56 - can
97:56 - do some research on them
98:00 - all right
98:01 - so till now we have als we have
98:03 - completed most of our topics all right
98:06 - we have completed most of our topics
98:08 - now
98:10 - now
98:11 - the last
98:13 - but not the least
98:15 - creating our own user interfaces
98:18 - how do we do that
98:20 - all right see i'd be creating a very
98:21 - simple user interface all right nothing
98:23 - too complicated already nothing to like
98:25 - nothing of
98:27 - very complicated user interface a very
98:28 - simple one just to show you all that how
98:30 - to create one all right but we'll be
98:33 - creating uh beautiful interfaces during
98:36 - uh like
98:38 - during the making of our
98:41 - uh course
98:42 - like the uh projects
98:46 - all right
98:47 - so just let me delete this particular
98:50 - thing because i don't need it now
98:53 - all right
98:54 - so let's save it
98:56 - now how to design our own interfaces
98:59 - all right
99:00 - let me dock this game view in here
99:03 - and uh
99:04 - for that first of all i
99:06 - want to go to my wide view right
99:09 - because it helps me a lot
99:14 - all right
99:16 - so first of all click on this 2d option
99:19 - here you can see alright this will give
99:20 - you a 2d view alright this would give
99:22 - you a 2d view so i got the 2d view
99:25 - all right i would like to click on here
99:27 - this this y thing the reason because
99:29 - this will give you a grid and it's
99:31 - really helpful
99:33 - now
99:35 - uh
99:37 - first of all
99:39 - we have to uh right click
99:41 - and click on the ui option then create a
99:44 - canvas all right
99:46 - what is this canvas
99:48 - right
99:49 - what is this canvas basically this
99:52 - canvas is basically
99:54 - the like uh
99:57 - the basic framework all right the basic
99:59 - wireframe of the or you could say the
100:02 - frame for handling the user interfaces
100:05 - right
100:06 - so
100:08 - click on this canvas alright here are
100:10 - some options what i would like you to do
100:12 - is
100:13 - uh first of all uh click on random mode
100:16 - all right keep its screen space overlay
100:18 - as of now there are multiple options and
100:20 - definitely will be looking forward to uh
100:23 - these in our future lectures
100:26 - all right and this world space is going
100:27 - to be really useful during the like
100:30 - during our
100:32 - making of those projects
100:34 - right
100:35 - now here are some options all right
100:38 - now go to this canvas scaler
100:41 - thing all right now ui scale mode
100:44 - constant pixel size
100:46 - do to scale with screen size all right
100:48 - and give it a default resolution for me
100:51 - as of now uh this
100:53 - 800 by 600 is okay
100:56 - and leave all those parameters
100:58 - same all right
101:01 - for now this is what i need
101:05 - now
101:06 - our canvas is ready right our canvas is
101:09 - ready now i want to like get the display
101:13 - of my laptop in here like the resolution
101:15 - of my laptop in here
101:18 - okay uh
101:19 - very well
101:20 - sorry my mouse is like sometimes
101:22 - creating the problem of navigation like
101:24 - the mouse button
101:25 - middle mouse button so as we've created
101:28 - our canvas all right now we need to uh
101:31 - create a background image for it so how
101:33 - do we do that so click on canvas click
101:36 - on ui
101:38 - then there's something known as panel
101:40 - all right click on this panel
101:43 - right
101:45 - see you got a sort of background all
101:48 - right now i need to color the background
101:49 - right uh first of all i name it uh
101:52 - background image right although i
101:54 - haven't imported any image so i will
101:56 - take
101:57 - coloring it all right
101:59 - first of all how to do that
102:02 - uh click on this panel
102:04 - all right uh click on this image section
102:06 - right here from here you can select the
102:08 - image you want all right
102:10 - so already one is selected i don't want
102:12 - to change it click on this color option
102:14 - and here we see that this this thing is
102:16 - transparent how to make it opaque
102:20 - see here's an option known as a also
102:22 - known as alpha
102:24 - so just just click it in here and
102:27 - like make it 255 like make it to full
102:32 - i want a yellowish orange color
102:35 - so this is the color i wanted and i got
102:38 - right
102:40 - so
102:40 - now this is my background i'll be
102:42 - scaring the background a bit
102:44 - how do i do so uh choose the scale tool
102:47 - click on the middle uh option and just
102:49 - scale it
102:51 - right
102:54 - now as we are have created our own
102:56 - background now what we want we want is
102:59 - to create a heading text for it how do
103:01 - we do that
103:02 - how do we so click on ui
103:05 - then i there are two option text and
103:08 - text mesh pro all right i haven't
103:10 - imported text mesh pro although
103:12 - text mesh pro is the better option to go
103:14 - for
103:15 - all right because it pro
103:17 - the quality of the text and text mesh
103:19 - pro is really good alright so i'll be
103:21 - clicking on it
103:22 - all right uh just wait uh so yeah
103:26 - uh i'll be uh importing the uh text
103:29 - message essentials all right it would
103:31 - take some amount of time all right don't
103:33 - worry
103:34 - all right
103:36 - let it uh
103:38 - take the time it want
103:40 - all right all right because that is
103:42 - importing all those assets so it's
103:44 - important for it
103:45 - to be important clearly
103:48 - just wait
103:56 - [Music]
104:02 - yeah it is getting imported uh just it
104:04 - would take some amount of time
104:09 - actually i guess i should have like
104:10 - imported it previously only
104:12 - but uh if i did so you wouldn't have
104:15 - like caught how to do that so here we
104:18 - got our text in here right we got our
104:21 - text in here all right now we want or to
104:24 - edit the text and let's let's let's name
104:26 - something all right
104:28 - let's name it
104:29 - uh
104:32 - our new ui all right i know this is like
104:35 - a very bad name
104:37 - now i want the textile to be like
104:40 - something like h1 right but it's giving
104:43 - a color no no
104:45 - let's leave it let's let's keep it
104:47 - normal only
104:48 - and click on bold right we can even
104:51 - resize it how
104:52 - uh like zoom it in here and you will
104:54 - find these anchors all right do this do
104:57 - this right
104:58 - another thing we want is to
105:00 - center our text so we did that
105:03 - all right
105:04 - so
105:05 - you can uh we also have some other fonts
105:07 - all right
105:09 - uh
105:10 - okay we don't have one
105:11 - oh i sorry i forgot to import that
105:15 - a extra package came with uh
105:19 - text method but no worries
105:21 - uh we don't need that as of now now here
105:24 - you can see here is that a wreck
105:25 - transform option
105:27 - click on alt alright click on alt click
105:30 - on uh so as you can see if you just open
105:32 - it all right and click or not there are
105:34 - multiple options here
105:35 - i want you to click on this top one
105:39 - see
105:40 - our
105:42 - text automatically got and then i want
105:44 - to
105:45 - reposition it and voila
105:48 - we got our text or just wait
105:51 - yeah we got our text to where we want
105:54 - and this is our
105:56 - ui all right our new ui or let's say
106:00 - uh let's name it to
106:02 - learning
106:04 - unity
106:07 - right
106:08 - so this is our new ui
106:12 - isn't it now we want to add uh some
106:15 - buttons right we want to add some
106:17 - buttons how would we do that
106:19 - click on canvas
106:21 - click on ui
106:23 - here is an option known as button and
106:25 - button text mesh pro i would i want you
106:27 - to go for button text mesh pro it's
106:30 - better
106:31 - believe me it's a lot better all right
106:32 - now
106:34 - we can even add some functionalities
106:36 - alright first of all i want to like
106:39 - put a transform to it i wanted to want
106:41 - it to be in center only let's name it as
106:44 - a play button
106:46 - all right
106:47 - let's name it a play button
106:50 - and let's name it play
106:53 - see in future or we today we are
106:55 - learning just how to
106:57 - implement our own ui all right in future
107:00 - in future lectures we will be learning
107:02 - uh like
107:03 - how to navigate through uh uh
107:07 - uh our scenes how to like add
107:09 - functionalities to our button right so
107:12 - for now this is what i want
107:16 - so we created our play button all right
107:19 - even
107:20 - i can change the color all right there
107:22 - are some
107:24 - many things all right like if i if i
107:25 - click on this placed color i want to
107:27 - make it green when it gets pressed
107:30 - right now if i play this if i play this
107:33 - just wait
107:34 - it would take some amount of time
107:37 - because unity takes time
107:41 - all right so
107:42 - uh just just wait
107:45 - it's entering the play mode
107:51 - cool now if i click on this see
107:54 - when i'm clicking or clicking on it it
107:57 - is
107:59 - getting green now if i if i select the
108:01 - highlight color and
108:03 - like make it a blue
108:05 - let's see what happens
108:08 - oh well nothing happened
108:10 - uh let's let's check out the
108:14 - selected color
108:15 - let's make it sort of like yellow wow
108:20 - now oh highlight collect worked finally
108:22 - i i don't know what why it didn't work
108:25 - so
108:26 - when i'm hovering on it it is
108:28 - highlighting the color as
108:30 - blue when i'm pressing it that is
108:33 - the pressed color it is green
108:35 - after it is selected
108:37 - it got
108:40 - pink
108:41 - right so
108:43 - isn't it really cool all right similarly
108:46 - we can add some functionalities alright
108:48 - like there's an option on click all
108:50 - right if i want i can like add some
108:53 - particular function like for now uh
108:55 - let's say i want to disable the text all
108:57 - right so whatever do i would uh drag and
108:59 - drop this text first of all let me show
109:01 - you from a again
109:03 - there is an on click parameter click on
109:06 - this add
109:08 - then
109:09 - take the text in here all right now in
109:13 - here there is written no function click
109:14 - in here
109:16 - go to game object
109:18 - uh click on set active all right and
109:21 - just don't check that button out all
109:23 - right we have we can create another
109:25 - button something like this
109:27 - name it uh active first of all i would
109:30 - name it active
109:32 - sorry deactive deactivate
109:34 - d
109:35 - activate
109:37 - and
109:38 - this one is
109:42 - wait
109:43 - all right i just want to
109:45 - like
109:46 - wait
109:51 - this is going to like
109:52 - activate
109:54 - like
109:55 - activate the whole thing
109:57 - all right
109:58 - just to wait
110:01 - let me drag and drop drag it down in
110:03 - here all right
110:07 - uh
110:11 - cool isn't it now let's let's try this
110:14 - out what happens let's see
110:23 - just wait it would take some amount of
110:25 - time but it will uh it will get done
110:28 - all right so just wait
110:33 - cool
110:34 - now if i want to like deactivate on it i
110:36 - don't want this learning unity i want to
110:38 - hide it click on the activate see it got
110:41 - deactivated but i but i want it back
110:44 - see it came back
110:46 - see
110:48 - i'm making my button do some activities
110:51 - so
110:53 - we also learned
110:55 - how to uh
110:56 - design our own interfaces if you want to
110:58 - add some sort of image you can just
111:00 - click in here ui then
111:03 - raw image all right i
111:06 - i don't know i have any image for this
111:09 - all this
111:10 - oh i do uh let's say i want uh i want
111:13 - this emoji one right i want this
111:15 - one
111:16 - to be in there and i can also resize it
111:20 - um sorry
111:22 - it got resized wrongly
111:24 - i'm in a wrong manner so yeah see
111:28 - isn't this ui looking good
111:30 - actually it isn't looking good but yeah
111:32 - for now it's it's okay it's fine
111:35 - right
111:36 - so
111:37 - we
111:38 - also learned how we learned today we
111:40 - learned
111:41 - a lot of things in unity
111:43 - right so
111:46 - see you in the next lecture
111:47 - thank you
111:49 - so hey folks uh welcome to our first
111:52 - lecture of module three in this module
111:53 - i'm going to introduce you to uh c sharp
111:56 - so
111:57 - without any further ado let's get
111:59 - started so what is c sharp right see c
112:02 - sharp uh first of all one of the most
112:04 - important thing i'm going to tell you
112:05 - right now is
112:07 - pronounce c sharp as c sharp only not c
112:10 - hash like
112:12 - i have seen many people they like uh
112:14 - they don't know that how it is
112:16 - pronounced or they even sarcastically
112:18 - tell that it is c hash
112:21 - guys it's not c it's c sharp right uh so
112:24 - yeah
112:26 - so see c sharp is an object-oriented
112:28 - general purpose programming language all
112:29 - right it was developed by microsoft uh
112:32 - in the early 2000s right uh the
112:35 - development team was led by uh anders
112:38 - hillsborough and it is a part of the dot
112:40 - net framework
112:42 - it can be used to develop different
112:43 - types of uh software's like uh console
112:46 - applications windows applications uh
112:48 - then
112:49 - web applications mobile applications and
112:51 - games and uh so yeah and it is also you
112:55 - being used in arvr development so yeah
112:58 - so c sharp is a multi multi uh like the
113:01 - general purpose program language it can
113:02 - do anything
113:05 - right
113:06 - so
113:06 - yeah this is a very basic introduction
113:08 - to c this is what c sharp is
113:11 - now let's get into the coding part all
113:13 - right
113:14 - so
113:15 - this is a very basic code structure all
113:17 - right so using system name space hello
113:20 - world
113:21 - then class program
113:23 - then
113:24 - static void main then
113:26 - console.writeline then
113:29 - console.read right
113:31 - so don't worry uh
113:33 - the
113:34 - if you are not able to understand what
113:36 - are these don't worry i am there
113:38 - right now i'll be coding this all right
113:40 - and after that i'll be making you
113:41 - understand what is this all right so
113:43 - here is my c sharp compiler
113:46 - right this is my c compiler so
113:49 - i'm going to write using
113:52 - system
113:55 - name space
113:57 - hello world
114:00 - right
114:01 - class
114:03 - uh let's say
114:04 - program
114:08 - public
114:11 - static
114:13 - void mean
114:18 - string
114:25 - args
114:28 - then console
114:30 - dot
114:32 - right line
114:36 - hello
114:38 - viewers
114:42 - sorry
114:44 - then console
114:46 - dot read
114:50 - let's run this program
114:53 - let's see what happens
115:00 - wait it's compiling the program
115:06 - cool now if i click enter
115:09 - the program will be finished
115:11 - so what did just happened man it printed
115:14 - something right it printed something in
115:15 - the console can you see it in here it's
115:18 - it's printing something right it's
115:19 - printing definitely it's printing
115:21 - so
115:23 - let's understand
115:25 - how is this working what are these
115:27 - gibberish
115:29 - right
115:30 - let's understand so by the way
115:31 - congratulations you uh coded your first
115:34 - uh
115:35 - program
115:37 - so let's get back to the notes
115:42 - so yeah first of all let's let's know
115:46 - what a directive is right what is a
115:48 - directive
115:49 - see a directive basically tells our
115:52 - program all right
115:55 - so not the program uh directive
115:57 - basically tells of a compiler what is
116:00 - the compiler compiler compiles the
116:01 - program all right we haven't set up any
116:04 - sort of local compiler because we are
116:06 - using our own online
116:08 - ide for coding all right so
116:13 - directives basically directs our
116:16 - compiler all right it tells our compiler
116:19 - that our program is using this name
116:21 - spaces our program is using this certain
116:24 - name spaces all right so what is the
116:25 - directive
116:26 - right see this using system
116:29 - this this using system is a directive
116:31 - this
116:32 - using system is a directive all right
116:34 - similarly there are others also like
116:36 - system.collections and all those things
116:38 - all right
116:39 - uh like you uh watched in the
116:43 - that uh unity video right in in that
116:46 - unity tutorial that there was uh using
116:48 - unity engine right so yeah there are
116:51 - multiple name spaces sorry multiple
116:53 - directives
116:54 - so yeah
116:56 - this
116:58 - directives basically this using system
117:00 - directive
117:01 - tells us all right this using system
117:03 - directive tells us that our program is
117:06 - using
117:07 - this system name space all right it is
117:10 - telling that to our compiler it is
117:12 - telling to our compiler that
117:14 - hey compiler i am your c program this
117:18 - person created me
117:19 - so i'm using this uh system name space
117:23 - are you okay with that and that compiler
117:26 - replied yes i'm totally okay with that
117:28 - because this uh using system is already
117:31 - pre-defined in my
117:33 - compiler code base right so i am totally
117:36 - okay with that we can run the program so
117:38 - yeah compiler happy our code happy that
117:41 - you are the code are happy right so yeah
117:45 - now
117:46 - as i told you about namespaces right
117:50 - see name spaces now they are basically a
117:54 - collection
117:56 - all right they are collection
117:58 - collection of whom
118:00 - namespaces are collection of whom i just
118:02 - told that namespaces are a collection
118:04 - but collection of whom see name spaces
118:07 - are basically a collection of other code
118:09 - properties you can say or other code
118:11 - structures right or other code elements
118:14 - all right
118:16 - so
118:17 - these code elements can include classes
118:19 - like see recurrently we only created our
118:23 - own namespace this is our hello world
118:25 - namespace it is containing a class right
118:29 - it is containing a class it is
118:31 - containing a program class
118:33 - so we
118:34 - certainly created our own name space
118:36 - right we certainly created our own
118:38 - namespace
118:39 - so
118:41 - yeah
118:42 - now
118:45 - we understood what are namespaces all
118:48 - right what a namespace says
118:50 - is
118:51 - see and uh if i have to repeat
118:53 - namespaces are a collection of code
118:55 - elements all right it is basically a
118:57 - collection of code elements it contains
119:00 - other classes other interfaces other
119:02 - enums other structure a structs all
119:05 - right so
119:06 - name spaces are a collection of those
119:08 - things
119:10 - all right see c sharp our c sharp is a
119:13 - programming language right
119:16 - c sharp has a large amount of code all
119:19 - right c sharp has a large amount of
119:22 - pre-written code that like the team who
119:24 - developed c they already wrote
119:27 - codes for us all right useful codes for
119:30 - us that we are using
119:32 - all right that we are using but can you
119:34 - can you tell that if
119:36 - the programmers if the programmers took
119:39 - all those programs and just put uh put
119:42 - it in only one file
119:46 - or wouldn't it be cluttered up like
119:49 - there are multiple hundreds like
119:51 - hundreds thousands code files wouldn't
119:53 - it be clutter up and now if i had to
119:55 - find one file then wouldn't it be
119:57 - cluttered up so what they did
119:59 - they
120:00 - divided those pre-written code into
120:02 - different namespaces all right see using
120:05 - system is not on is
120:07 - not the only namespace available all
120:10 - right there are many other
120:12 - all right so
120:15 - yeah
120:16 - so our code the like the c sharp the
120:19 - developers who wrote c sharp they they
120:21 - actually
120:22 - divided all those code all right so
120:25 - divided all those code into different uh
120:28 - name spaces
120:31 - all right uh the system namespace all
120:34 - right the system namespace that is
120:35 - available it actually uh contains the
120:38 - code all right codes for methods
120:40 - that allows us to do certain functions
120:43 - all right like if we want to print we
120:44 - can do that
120:46 - so
120:47 - uh i already told that we can actually
120:49 - declare our own namespace we even did we
120:52 - even did uh declared our own namespace
120:54 - all right we can copy this and create
120:56 - our another namespace all right i would
120:58 - show you how to do that
121:00 - and you know
121:02 - uh what are the advantages of
121:04 - using namespaces right see
121:07 - first of all one more thing if you are
121:09 - creating two or three your n numbers of
121:11 - name spaces it is really important for
121:13 - you to name it differently all right the
121:16 - namings should not be same so then if
121:19 - the
121:20 - first name is hello world or you may i
121:23 - mean your first name space name is hello
121:25 - world the second name space name should
121:28 - be hello priyanshu or any other name
121:30 - right or your name so
121:32 - remember that
121:33 - and
121:35 - one of the major things of like helpful
121:38 - things of uh name spaces are
121:40 - name spaces are two different
121:42 - environment you could say all right
121:46 - in namespace one
121:49 - see
121:50 - namespaces basically help us to prevent
121:52 - the conflicts name conflicts like see if
121:54 - we if we if i show you here all right if
121:57 - i if i create if i
122:00 - let's say if i created a same type of
122:04 - variable i know that you won't
122:05 - understand this as of now all right
122:09 - you won't understand this all right
122:14 - i'm pretty sure about that but don't
122:16 - worry all right don't worry i'm going to
122:18 - cover about variables comments and all
122:20 - those things now let's play it let's
122:22 - just play see see it is giving us error
122:24 - you know why it is giving us error
122:27 - it is giving us error the reason is
122:29 - that we are using
122:31 - at the same name
122:33 - the same name all right so in uh in c we
122:36 - can't use the same name
122:39 - all right we can't use
122:41 - so it's really important to give
122:43 - different names but but but
122:47 - if i had to show you all right
122:50 - we can declare we can give the same
122:52 - names in second namespace all that like
122:54 - this is one of our namespace right so
122:56 - namespace
122:58 - hello priyanshu all right this is
123:02 - uh another
123:03 - this is another instance i'm creating so
123:05 - class
123:06 - program can you see i am giving the same
123:09 - name in here right the same name in here
123:12 - now now let's let's try running it man
123:15 - let's try running it
123:22 - see it didn't returned us any sort of
123:24 - error it didn't
123:26 - why because
123:28 - namespaces you can think of namespaces
123:30 - are different environments actually
123:33 - they have the uh
123:35 - in there if namespace one has program
123:38 - and namespace2 has program
123:40 - the same names then it won't conflict it
123:43 - won't create any problem
123:44 - so yeah
123:47 - i hope you understand right i hope you
123:49 - understood this thing
123:51 - now
123:52 - uh
123:54 - we looked into the example right we
123:56 - looked into the example
123:59 - oh yeah one more thing i forgot to tell
124:00 - you that is that this this main method
124:03 - all right see this main method the main
124:06 - method you could see
124:07 - this is the starting point all right
124:09 - this is the starting point of our
124:10 - program
124:12 - the main method is basically the
124:13 - starting point of a program it's where
124:16 - our program starts all right if i if i
124:18 - give the same thing all right let me
124:20 - copy this and put it in here if i give
124:22 - the same thing in here
124:25 - where it didn't got printed
124:28 - or why is it happening
124:30 - wait
124:36 - copy
124:40 - paste
124:41 - all right it isn't pasting i don't know
124:43 - oh oh oh i got to know i didn't ended
124:45 - the program right sorry i'm really sorry
124:47 - about that
124:48 - i was like oh god
124:50 - now let's let's try running this and i'm
124:53 - sure you would get error see it is
124:55 - giving as error see it is writing
124:58 - program a dot out has more than one
125:00 - entry point defined
125:01 - do you know what it means
125:03 - it means that there are two entry points
125:06 - and main method is the entry point so
125:09 - in a program in a particular file there
125:11 - should be only one
125:13 - method alright there should be only one
125:15 - main method
125:17 - because it is the starting point of our
125:19 - program right because if we have if we
125:21 - give two
125:22 - main methods in diff two separate uh
125:25 - name spaces then our compiler will be
125:27 - like hey man
125:29 - which which main method should i go for
125:31 - i'm confused
125:33 - and because of that
125:34 - and because of that you you are very
125:36 - rude to me you gave me
125:38 - two main method i am really angry about
125:40 - that so i will what i will give you i
125:42 - will give you error and you won't be
125:44 - able to run your program
125:46 - so our compiler will tell this
125:49 - so to make our compiler happy to make
125:51 - our compiler
125:52 - work fine means to make our program work
125:55 - fine we need to uh provide only one main
125:58 - method in our
126:00 - but in our any in any of our namespace
126:04 - all right
126:05 - now no no no
126:08 - yeah oh okay okay i also forgot to tell
126:11 - you about these this too right
126:13 - my bad my bad so what
126:17 - see you have already seen that what this
126:19 - console.writeline does this
126:21 - console.writeline basically prints all
126:23 - right this console.writeline prints a
126:26 - statement but what what this
126:28 - console.read read does all right i have
126:31 - written it in here see the console.read
126:33 - all right it basically waits for a key
126:35 - press from the user before code seeing
126:37 - the console execution like if i execute
126:41 - it all right if i if i let's say execute
126:43 - i will show you all right i will show
126:45 - you now if i let's say i try doing
126:47 - something like editing this program can
126:49 - you see you can't edit the source for
126:50 - when programming is running
126:53 - you can you can't edit the source code
126:55 - when program is running means our
126:56 - program is running it hasn't ended
126:59 - if i press enter see our program ended
127:02 - now if i if i had to comment this
127:04 - download i know you don't know about
127:05 - comments don't worry or let's say i
127:07 - remove this i'll remove this particular
127:10 - code line all right
127:12 - if i remove this
127:14 - see i didn't even need to press enter it
127:16 - just uh exited so that's what our
127:20 - console.read does all right so let's
127:22 - let's get uh get an idea about our main
127:26 - method all right so what is it so see
127:29 - the main method in here the main method
127:32 - is basically the starting point or at
127:34 - the starting point of any of any of our
127:37 - uh c sharp program all right
127:41 - yeah so our the main method the main
127:44 - method in here the main method here
127:46 - is our entry point or the starting point
127:49 - of our c program
127:51 - right
127:51 - uh whenever whenever we run a program
127:55 - all right why did why did when we saw
127:58 - the example where we uh like added
128:00 - another added another public static void
128:03 - mean in in our second namespace why
128:06 - didn't it ran
128:07 - it didn't ran because there should be
128:10 - only one entry point of the program i
128:12 - already told you what would the compiler
128:14 - will feel if you give
128:16 - two entry points right the compiler will
128:19 - be angry
128:20 - it will be an insult for him
128:22 - i guess so
128:23 - so yeah
128:25 - there should only be one entry point all
128:28 - right
128:28 - one
128:29 - main method
128:31 - and also one thing that
128:33 - these entry points are called first all
128:36 - right than any other methods like if you
128:37 - define any other methods they won't be
128:39 - called first
128:41 - the first thing that will be called is
128:43 - this main method
128:45 - all right i hope you understand
128:48 - so yeah there's another parameter this
128:50 - string args all right if you don't know
128:51 - what a string is
128:53 - man don't worry i am there now i am
128:55 - there for you i am there for you to make
128:57 - you understand it is i i will make you
128:59 - understand this uh why what is this
129:01 - string args all right what is this
129:02 - string guy this is an array all right
129:04 - this is a collection it can take a
129:06 - collection of strings all right it can
129:08 - takes a collection of string if if
129:10 - you're not able to understand what is
129:12 - this don't worry next lecture is there
129:14 - all right next lecture is there for you
129:16 - after that lecture you will understand
129:18 - what it is what it does all right and i
129:20 - will recapitulate or recapture this
129:22 - particular portion in that
129:23 - don't worry
129:25 - so basically it can take this the string
129:28 - method can take sorry the string
129:29 - argument can take
129:32 - multiple multiple amounts of
129:36 - string data right and i already told you
129:40 - what this console.writeline is
129:44 - and what this console.read is all right
129:46 - so
129:47 - for the for today list for this lecture
129:50 - our our uh first first lecture is
129:53 - completed all right so our module three
129:56 - first lecture is done all right
129:59 - see ya bye bye see you in the next
130:01 - lecture thank you
130:03 - so hey folks uh this is model 3.2 and in
130:06 - this module we are going to learn about
130:07 - comments variables data types and type
130:09 - casting
130:10 - all right and in our previous module
130:12 - that is 3.1 we learned about uh c sharp
130:15 - we learned the basic structure of c
130:17 - sharp or all the very basics of means
130:20 - what is that using a system what is uh
130:25 - like we learned a lot of things all
130:27 - right what is console.writeline right so
130:32 - in this module we are going to learn
130:33 - about uh
130:35 - comments
130:36 - then we are going to move on to
130:37 - variables then
130:40 - data types and last but not the least
130:42 - and one of the important concept that is
130:44 - typecasting all right so without any
130:46 - further ado let's get started
130:49 - so what are comments alright see
130:51 - comments are basically uh some sort of
130:54 - statement or you could say some sort of
130:56 - keywords or something like that all
130:58 - right it has some sort of specific lines
131:00 - that is ignored all right that is
131:03 - ignored by the compiler all right you
131:06 - already know what a compiler is a
131:08 - compiler is uh is a tool that converts
131:12 - the code to a binary form right that
131:14 - that is or you can say machine
131:16 - understandable code
131:18 - right
131:20 - why it does that it does that because uh
131:23 - machines cannot understand english all
131:25 - right it can't understand our words
131:27 - machines can only understand binaries
131:29 - that is zero and one all right so
131:32 - yeah uh so
131:34 - what comments does is comment uh the
131:37 - comments basically all right these
131:39 - comments are basically ignored by the
131:42 - compiler they they won't run that
131:44 - particular line all right they they will
131:46 - just ignore that that
131:48 - yeah it is a comment all right why
131:50 - should we run that it's a you
131:52 - it's a useless thing all right for a
131:53 - compiler for a compiler it is a useless
131:56 - thing they won't run it because uh
131:58 - nothing will come out of that right so a
132:01 - comment
132:02 - is basically uh a comment is basically
132:05 - uh some some sort of lines all right
132:07 - some sort of specific lines that are
132:10 - ignored by the compiler all right and uh
132:13 - how comments are useful all right how
132:14 - comments are useful see comments are
132:16 - useful in a in a way right it is uh
132:20 - useful
132:21 - see uh as a programmer all right we have
132:23 - to uh make our code understandable all
132:26 - right
132:27 - uh because let's say i'm working on some
132:29 - project right now all right i'm working
132:31 - on some project and in that project all
132:34 - right uh the code is of thousand lines
132:36 - or two thousand lines or let's say even
132:38 - uh hundred two hundred lines all right
132:41 - now uh the code is being passed to
132:43 - another developer he has to work on it
132:45 - all right without any proper
132:46 - documentation or
132:48 - comments all right or we can't uh the
132:51 - the coder all right the new developer
132:53 - can't understand what that program is
132:55 - doing all right we have to like
132:58 - put a lot of time to understand the
133:00 - whole code
133:01 - but we can make that thing easier right
133:04 - we can make that thing very simpler we
133:07 - can comment all right we can comment the
133:09 - lines
133:10 - we can comment the lines right we can
133:14 - means we can uh sort of create small all
133:17 - right small documents or you could say
133:19 - small
133:20 - small lines or small paragraphs spot for
133:22 - that particular code like let's say uh
133:26 - currently we are developing uh uh
133:29 - ar app and in there we have to rotate
133:32 - all right we have to rotate that 3d
133:33 - model right we have to rotate that 3d
133:36 - model so i have written some code for
133:38 - that
133:39 - and in the top of that all right in the
133:41 - top of that code
133:43 - what i did i wrote a comment all right i
133:45 - wrote a comment that this particular
133:47 - code right this particular code
133:50 - is rotating the 3d game object all right
133:53 - it is it is rotating the object
133:55 - all right so if i'm passing the code to
133:58 - another developer then he won't have any
134:01 - problem understanding the code all right
134:03 - he won't have any problem
134:05 - so that's why comments are useful
134:08 - all right now let's let's try this out
134:10 - and also uh there are actually two types
134:12 - of comments all right single line
134:13 - comment and multi-line comment
134:15 - so what is a single line all right
134:17 - single line comments works for only
134:18 - single lines all right like it if the
134:21 - line is one then it will be within line
134:24 - one only or it will uh if you
134:26 - are not understanding that don't worry
134:28 - you are going to do the practical all
134:30 - right so single line comments are
134:31 - basically
134:33 - uh they stay in one line already all
134:35 - right if you if you go to the next line
134:37 - that comment won't work all right that
134:40 - comment won't extend actually but this
134:43 - is not the case of with multi-line
134:45 - comment all right multi-line comment can
134:47 - help us in documenting also
134:50 - so multi-line comments uh starts from a
134:52 - particular point or let's say we are
134:54 - starting that multi-line comment from
134:56 - line number three all right and we are
134:58 - writing some multi lines all right we
135:00 - are writing some
135:02 - text within that comment all right in
135:04 - separate separate lines like you can see
135:07 - right in here all right right like you
135:09 - can see right in here
135:10 - we have taken three lines to write some
135:13 - content and
135:16 - in the in the fifth line all right we
135:17 - are ending it
135:19 - in the fifth line we are ending it so
135:21 - that's how we start a single uh
135:24 - multi-line comment all right so to start
135:26 - a single line comment we have to give uh
135:29 - double forward slash all right
135:32 - and to
135:34 - write a multi-line comment all right
135:36 - there are two things a starting point
135:38 - and an ending point all right the
135:39 - starting point is like forward slash
135:42 - star
135:43 - it is the start of the comment
135:45 - and to end that comment what we have to
135:48 - do is start backward slash
135:51 - all right i hope you understand
135:53 - right so let's try this thing out right
135:55 - before going to variables let's try this
135:58 - thing out
135:59 - all right
136:00 - so uh
136:02 - this is our code all right
136:04 - so
136:05 - first of all let's write some sort of
136:08 - code alright let's write console dot
136:12 - right
136:13 - line
136:16 - uh comments
136:21 - all right so this is our code right now
136:23 - let's try to run it
136:25 - let's run uh run this program see it is
136:28 - printing comments right let's
136:30 - let's uh
136:32 - try to give the single line comment
136:34 - notation all right
136:36 - see uh
136:37 - after i have given to forward slasher
136:39 - you can see the whole line has gone
136:41 - brown
136:42 - what does this indicate this indicates
136:45 - that this is a commented line all right
136:47 - this is a commenting commented line
136:50 - although the color will uh
136:52 - will be different in your editor if you
136:54 - are using some other kind of editor all
136:56 - right because this is the theme of it
136:58 - but don't worry about the color but it
137:00 - is highlighted all right when it is
137:02 - highlighted you are you will understand
137:04 - that your code is committed commented
137:06 - so let's run run it all right let's run
137:09 - it
137:10 - see it is not printing anything because
137:13 - it is not reading the line
137:15 - the compiler is just ignoring this
137:17 - particular line all right now let's try
137:20 - out something uh
137:21 - another thing can we add another line of
137:24 - code in the same same single line
137:26 - comment can we so let's try it out why
137:29 - not write it try it out right
137:31 - let's try it out and see
137:34 - so uh line two
137:37 - all right
137:38 - so let's try it out let's see that
137:41 - the single line comment is also ignoring
137:43 - the next one or not
137:46 - oh no it is not ignoring the next line
137:49 - okay do you know what what is the reason
137:51 - the reason it it works for only one line
137:54 - all right if if we give another
137:56 - set of uh forward slashes
137:59 - uh in line to comment means in the
138:02 - console.writeline line two then again it
138:04 - would perform its function all right but
138:07 - it is also like it's it is the task is
138:10 - also tedious to uh give every time uh
138:13 - the double slashes right double forward
138:16 - slashes so there's another thing all
138:18 - right let's say we want to give
138:21 - uh let's say we want to uh
138:23 - write multi-line comment all right or
138:25 - you could say we want to
138:27 - write multi-line things right so first
138:30 - of all let's give console.writeline
138:35 - comments
138:38 - all right
138:39 - console
138:40 - dot
138:42 - right line
138:44 - line
138:46 - two
138:47 - all right uh line two
138:49 - again uh console
138:51 - dot
138:52 - right line
138:56 - line
138:56 - 3 all right so
138:59 - let's try it out all right let's try it
139:01 - out
139:02 - let's run it
139:04 - see uh the code is running but we don't
139:06 - want the code to run we want to comment
139:08 - it all right we want the compiler to
139:10 - ignore it so how would we do that all
139:12 - right so simply give forward slash and
139:15 - star all right
139:17 - see uh as you can see here
139:20 - just as i have gave as soon as i uh
139:23 - gave this comment uh
139:25 - comment notation multiline comment uh
139:27 - starting point all right you can see it
139:30 - has highlighted all right or made the
139:32 - colors brown
139:34 - from where it started all right
139:36 - uh now we have to end it how would we do
139:39 - that so it's it's again as simple as
139:41 - that just start backward slash all right
139:45 - and you can see the
139:47 - commented portion is only brown
139:50 - right let's run it
139:54 - see
139:55 - the compiler is ignoring the codes it is
139:58 - as simple as that
139:59 - so i hope you understood what are
140:01 - comments all right comments are
140:02 - basically uh some set of lines all right
140:05 - that are ignored by the
140:08 - compiler
140:09 - that's it all right so now as we have
140:12 - understood about comments let's uh let's
140:15 - go for variables
140:16 - all right
140:18 - see
140:20 - variables are you can uh see variables
140:23 - are used to store some value all right
140:25 - variables in a programming language are
140:27 - used to store some value right so to see
140:32 - i won't be using any technical terms to
140:34 - uh make you understand about variables
140:36 - all right
140:37 - uh i would be using layman's term all
140:39 - right or you can say the simple term
140:42 - to uh make you understand about
140:44 - variables all right so first of all
140:46 - first of all think the variable as some
140:48 - sort of a container all right a
140:50 - container that can store something all
140:52 - right let's say uh uh let's take a
140:54 - common container all right let's say
140:56 - let's say a water bottle all right take
140:58 - a take and water bottle all right take a
141:00 - water bottle it is a variable all right
141:03 - for now think your variable as a water
141:05 - bottle
141:06 - all right and you are storing all right
141:09 - something in it all right what thing
141:11 - what is that thing that you are storing
141:13 - in that water bottle
141:14 - it is all right it is a liquid all right
141:17 - in a water bottle you will store some
141:20 - some kind of liquid doesn't matter what
141:22 - kind of liquid it is
141:23 - all right uh it can be a
141:26 - orange juice or a chocolate milkshake or
141:29 - a simple water right
141:31 - or it is a liquid
141:33 - all right doesn't matter what
141:35 - what liquid it is but it is a liquid
141:38 - right in the water bottle you are
141:40 - storing some kind of liquid
141:43 - all right
141:44 - and
141:46 - what liquid are you storing all right
141:48 - what is the liquid
141:50 - means is it water is it an orange juice
141:53 - or is it a chocolate milkshake
141:55 - so i want to store a chocolate milkshake
141:58 - in the water bottle right or even a
142:01 - simple water
142:03 - i can store water in the water bottle
142:06 - so
142:07 - you can you can imagine all right you
142:08 - can you can interpret this uh in
142:11 - technical terms how see the water bottle
142:14 - is acting like a variable or you can say
142:16 - a container because variables are
142:18 - containers variables are meant to store
142:21 - some value
142:23 - right
142:24 - variables are meant to store some value
142:28 - all right
142:29 - so variables are container and in our
142:31 - example
142:33 - a variable is our water bottle okay
142:35 - water bottle is our variable
142:37 - all right and the
142:39 - and
142:40 - we are storing a liquid right
142:43 - all right we are storing some sort of
142:45 - liquid
142:47 - in here the liquid is the type all that
142:50 - liquid is the type of the data we are
142:52 - storing
142:54 - all right see water comes in the type of
142:56 - liquid right we all know that chocolate
142:59 - milkshake also comes under the type
143:01 - liquid because it is liquid of course
143:05 - then orange juice also comes under the
143:07 - type of liquid right
143:09 - so
143:10 - we are storing some kind of liquid so
143:13 - that is a type or you can also say data
143:16 - type right we can also say data type
143:21 - right it is the data type right so water
143:24 - bottle is our variable
143:26 - uh liquid is our data type and
143:30 - and the type of liquid you are storing
143:32 - all right the type of liquid you are
143:34 - storing that is
143:35 - uh water or let's say chocolate
143:37 - milkshake
143:38 - that is the data all right that is the
143:41 - data we are storing
143:43 - in our variable all right or you can say
143:45 - in our water bottle so
143:47 - we are taking our water bottle all right
143:50 - we are taking some sort of liquid all
143:52 - right
143:52 - some sort of liquid is
143:55 - the uh chocolate milkshake i am storing
143:58 - my chocolate milkshake in the water
144:01 - bottle all right and the type of the
144:03 - chocolate milkshake
144:04 - is
144:05 - liquid
144:07 - all right so i hope you understand so
144:10 - variables are basically acts like as
144:12 - containers they are containers but in
144:16 - computer programming all right they are
144:18 - containers in computer programming
144:20 - right so let's uh to make you unmake
144:24 - make it more understandable let me show
144:26 - you all right see this won't execute of
144:28 - course this will give you error but let
144:30 - me tell you all right so this is
144:32 - the type all right liquid is the type
144:35 - water bottle
144:37 - water bottle right water bottle
144:40 - is our
144:43 - container all right water bottle is our
144:45 - container
144:46 - and the data we are storing in it all
144:48 - right the data we are storing in is
144:50 - is
144:52 - chocolate
144:54 - milkshake
144:55 - right
144:58 - so yeah here you can see this liquid is
145:01 - the data type all right this liquid is
145:03 - the type this water bottle is the
145:05 - container
145:06 - and this
145:07 - choco milkshake all right is our data
145:09 - this choco milkshake is our
145:12 - data all right and this is how right
145:15 - this is how we
145:17 - initialize all right or create a
145:19 - variable in
145:21 - our
145:22 - c programming all right this is how we
145:25 - create variable in many other
145:26 - programming languages too like java c
145:28 - plus plus so let's uh write a comment
145:31 - for it all right that is data type data
145:34 - type
145:35 - then we have to give the variable name
145:39 - right variable name
145:41 - then we have to initialize
145:44 - the data to it so this is how it works
145:47 - right or you can say if i remove this
145:49 - data only let's say type variable equals
145:52 - data as simple as that nothing too
145:54 - complicated
145:55 - all right
145:57 - so we are storing
145:59 - chocolate milkshake
146:01 - in our water bottle all right and what
146:03 - type of
146:04 - chocolate milkshake it is it is a liquid
146:07 - right it is a liquid so that's it
146:10 - right this is what variable is variable
146:12 - is a container nothing else
146:15 - so
146:16 - i i already show you how to de like what
146:18 - is the way of declaring a container
146:20 - right now let's try it out all right
146:23 - let's
146:24 - let's try uh actually initializing a
146:27 - variable right
146:29 - let's try out initializing a variable in
146:31 - in computing terms alright not and
146:33 - layman's term
146:35 - so it's simple first we have to give the
146:37 - type or you can say data type
146:39 - then we have to write the name of the
146:41 - variable all right let's say i want to
146:42 - store a number
146:44 - all right then we have to
146:47 - use the equals operator also known as
146:49 - assignment operator all right and we
146:51 - have to
146:52 - assign all right we have to put some
146:54 - sort of data
146:56 - in our case in this case the data will
146:58 - be number so i am trying going to put 12
147:00 - in here all right and let's say it works
147:04 - or not so i'm going what i'm going to do
147:06 - is
147:07 - i'm going to
147:08 - print it out right
147:10 - i am simply going to
147:12 - print this thing out
147:17 - let's see what happens yeah so it has
147:20 - printed our
147:23 - number that we stored in a variable
147:26 - right so
147:28 - we created a variable that is storing
147:30 - the value
147:31 - right so that's great it's a good start
147:33 - actually so
147:36 - we learned what is a variable all right
147:38 - we learned what is a variable how to
147:39 - create a variable one more thing i would
147:41 - like to say is
147:43 - now you you many of you might have a
147:45 - question that we are creating a variable
147:48 - right like uh where do we store our
147:50 - water bottle all right we can we store
147:52 - our water bottle in our backpack all
147:54 - right or in in some place at our house
147:57 - right
147:58 - that's right right
147:59 - so
148:01 - where do we store this variable all
148:03 - right where this variable gets stored
148:05 - see
148:06 - uh in our systems we have random access
148:08 - memory all right that is ram all right
148:11 - and uh
148:12 - this some sort of all right when we
148:14 - create a variable some sort of
148:16 - memory is allocated alright what memory
148:19 - like how much memory is allocated in the
148:21 - ram we will see in the latest sections
148:23 - we'll learn about data type all right
148:25 - but it
148:27 - it allocates all right or you can say
148:30 - makes some space for the variables to
148:33 - store in in the ram so our variables and
148:36 - values are stored in the ram
148:38 - all right
148:39 - so i hope you understand
148:42 - all right
148:43 - i hope you understand the concept of
148:45 - variable all right if you are confused
148:47 - in some point you can comment it down
148:49 - all right
148:50 - so uh now
148:54 - it is there's a dialogue that
148:56 - with great power comes great
148:58 - responsibility right similarly
149:01 - with variables there also comes rules
149:03 - all right and we have to maintain those
149:05 - rules
149:06 - the very first rule all right the very
149:07 - first rule is that a variable name in
149:09 - shisha can only contain
149:12 - numbers
149:13 - uh letters numbers or underscores all
149:15 - right what that means is all right we
149:18 - can't create a variable all right uh let
149:20 - me let me show you actually
149:22 - in
149:23 - dollar
149:24 - num
149:26 - equals 12 or
149:28 - right
149:30 - let's uh try to print it out and you
149:32 - will
149:32 - see what happens
149:35 - all right
149:38 - see
149:39 - it is giving us an error that is
149:41 - unexpected character
149:43 - because
149:44 - the reason is
149:46 - c sharp doesn't allows a variable to
149:49 - have dollar in in its variable naming
149:52 - all right these are called naming
149:54 - conventions
149:55 - but we can have underscores all right we
149:58 - already have letters right we already
150:00 - have letter
150:01 - we can have underscore all right we can
150:04 - have underscore two
150:07 - all right
150:08 - so
150:09 - yeah of course we can also have numbers
150:12 - now here comes another rule regarding it
150:15 - all right here comes another rule
150:16 - regarding it
150:17 - all right
150:18 - so variable name all right variable name
150:21 - can't start with a number
150:23 - see here it is written that we cannot
150:26 - start
150:27 - a variable name with a number that is it
150:30 - we cannot write a variable name as
150:32 - three
150:34 - abc or
150:35 - two
150:36 - name
150:37 - like that all right let's try it out and
150:39 - see all right let's try it out and
150:42 - see if that works or not
150:44 - right
150:46 - so two num
150:49 - let's try it out
150:52 - see it is uh
150:53 - giving us an error that is unexpected
150:56 - symbol
150:57 - but
150:58 - but we can have
151:00 - uh numbers in between all right we can
151:03 - have numbers in between of variable
151:06 - names all right like
151:07 - n to um
151:09 - i know it's it's weird but we can have
151:12 - like this we can have numbers like this
151:14 - all right similarly we can also add
151:16 - numbers to the end of the variable all
151:19 - right we can also
151:21 - put numbers to the end of the variable
151:23 - see it is working perfectly fine right
151:26 - so we learned about two rules that uh
151:30 - we can
151:32 - only add letters numbers and under
151:34 - underscores during any
151:36 - uh naming convention already during the
151:39 - naming of any variable
151:40 - and also a variable can't start with a
151:43 - number all right although it can have
151:46 - all right it can have number in between
151:48 - the name of the variable or at the end
151:50 - of the variable
151:51 - right
151:53 - uh
151:54 - so the next rule all right the next rule
151:56 - we have is that we cannot use a reserved
151:59 - keyword
152:00 - we cannot use a reserved keyword as a
152:03 - variable name
152:04 - because
152:06 - they already have their own meanings and
152:08 - purposes to fulfill right now what does
152:12 - this mean
152:13 - see there are multiple keywords all
152:16 - right or you can say reserved keywords
152:18 - in uh
152:20 - in our c program just like we saw
152:22 - previously like using all right using
152:25 - system
152:26 - they are reserved keywords all right
152:28 - using is a deserved keyword class is a
152:30 - reserved keyword all right int alright
152:34 - in is a reserved keyword if is a
152:37 - reserved keyword
152:38 - all right console it is a reserved
152:41 - keyword
152:43 - so
152:44 - we cannot use any sort of reserved
152:46 - keyword
152:47 - during a variable naming convention
152:49 - right
152:50 - so let's try it out all right let's uh
152:53 - let's give it
152:55 - a variable name as
152:57 - if
152:58 - all right and just let's try it out what
153:01 - happens let's see what happens
153:06 - wow it has given some errors right it is
153:09 - giving unexpected symbol equals then um
153:12 - unexpected symbol f it would it will
153:14 - give because this is not the syntax of f
153:17 - right that's why it is giving the error
153:19 - uh unexpected symbol equals
153:22 - all right so yeah so you uh you learned
153:26 - that we cannot use any sort of uh
153:30 - reserved keywords as variable names all
153:32 - right
153:33 - similarly uh another thing is variable
153:35 - names are case sensitive all right what
153:37 - does this mean see
153:39 - uh it means that if you write a variable
153:41 - like this all right
153:43 - let's say
153:45 - uh if you
153:46 - write a variable like this
153:49 - name equals priyanshu alright see uh
153:53 - this is a string data type all right i
153:55 - would uh tell you what is this but don't
153:57 - worry for now i'm just showing an
153:58 - example
153:59 - and uh let's try to print it out all
154:02 - right
154:06 - so let's try to print it out
154:08 - and let's see what happens right
154:13 - so you can see that it has printed my
154:15 - name right
154:16 - but let's say if i write the name in
154:19 - capital letters all in caps all right
154:22 - all in caps can you can you uh can can
154:25 - you tell that will it uh execute the
154:27 - program execute in the sense of course
154:29 - it will execute but will it give any
154:31 - sort of error or just print priyanshu as
154:34 - it is written right now
154:36 - all right so will it just take your time
154:38 - alright just take a few seconds and
154:40 - think about it all right think about it
154:42 - will it alright pause the video and
154:44 - think about it so let's let's run it now
154:47 - all right
154:50 - see it is giving us an error
154:53 - it is giving us us an error why because
154:57 - there is no variable defined as in a me
155:00 - that is capital letters n a m e
155:03 - there's a variable defined as
155:06 - n a m e as small letters all right this
155:09 - variable is in small letters and we
155:11 - wrote it in
155:12 - capital letters so both of them are
155:15 - totally different
155:16 - all right both of them are totally
155:18 - different
155:19 - so
155:21 - uh always remember that
155:23 - the variable names that is uh
155:26 - the type or you could say not exactly
155:29 - the type uh just check that if the
155:30 - variable name is in caps
155:33 - or in small letters already because
155:36 - these are uh
155:37 - case sensitives all right these
155:39 - variables are case sensitives all right
155:42 - so we can't have
155:46 - like if we write a name in small letters
155:48 - and we are trying to print that name in
155:50 - capital letters means
155:52 - in capital letters is
155:54 - means that we are uh trying to write
155:56 - that name variable in the
155:58 - console.writeline in capital letters it
156:00 - won't execute because it would uh then
156:03 - it would search for another set of
156:04 - variable alright it would search for
156:06 - another variable whose whose
156:09 - text is in a capital letter and is
156:12 - written name all right so i hope you
156:14 - understand
156:15 - that we can't have
156:17 - uh like variables means we can have
156:20 - variables but uh they are case sensitive
156:22 - all right like
156:24 - uh because
156:26 - the see in this example this first name
156:28 - all right this first name you can see
156:30 - that the first is written in a small
156:32 - little the n is written in cap capital
156:35 - letters and ame is written in small
156:37 - letters but in in another is
156:40 - in another
156:41 - uh text it is uh the f is caps but but
156:45 - the other
156:46 - letters are in a
156:48 - small letter all right are in small so
156:52 - this
156:53 - this name and this name are not same all
156:56 - right both are totally different
156:58 - all right
157:00 - now as we have learnt about variable its
157:02 - rules all right now it's our time
157:05 - to get into the data types all right
157:09 - see it is a very important concept all
157:11 - right data types is a very important
157:13 - concept so
157:16 - uh try to understand it all right if you
157:18 - are not able to understand something all
157:20 - right you can comment it down and also i
157:23 - would suggest re-watching this
157:24 - particular portion all right re-watching
157:26 - the particular portion you i have not
157:28 - understood then also you have you
157:30 - haven't understood you can comment it
157:32 - down and i would uh
157:34 - surely uh like to help you all right
157:37 - so
157:38 - yeah
157:40 - data types right
157:42 - see
157:44 - uh i already told you about an example
157:46 - right previously the water bottle
157:47 - example that the liquid is the data type
157:50 - or you can see the type of uh the value
157:53 - right similarly data types are also the
157:56 - same thing they they specify the type of
157:58 - a variable already specify the type of
158:01 - the variable
158:02 - all right the type of value it can store
158:07 - right
158:08 - so
158:10 - the very first data type we have is in
158:12 - all right so basically the int
158:15 - is basically a short for integer all
158:17 - right
158:18 - uh and it has a range all right it has a
158:21 - range of minus 2 1 4 7 4 8 3 6 4 8
158:26 - 2. two one four seven four eight three
158:30 - six four seven all right
158:32 - what this means that
158:34 - it has a range of
158:35 - this to this all right it has a range of
158:38 - this
158:38 - to this
158:40 - if we exceed that value all right let's
158:42 - say if i write 2 1 4 7
158:45 - 4 8 3 6 4 7 then it would return a error
158:49 - all right let's try it out all right
158:51 - let's copy this value first all right um
158:55 - let's copy this value first and uh let's
158:57 - try that in our
159:00 - code editor all right
159:02 - so
159:03 - um
159:04 - yeah
159:05 - int
159:06 - val
159:07 - equals
159:09 - all right
159:11 - so
159:14 - now let's try to print it out
159:16 - console.writeline
159:20 - val
159:22 - all right let's run
159:23 - run the program and see it is printing
159:26 - right it is printing the exact value
159:29 - but but for now let's change it to two
159:32 - one four
159:33 - seven four eight three six four eight
159:36 - can you tell me will it print or will it
159:40 - like
159:41 - give us some error
159:44 - pause the video and think about it all
159:46 - right think about it and
159:47 - just
159:48 - uh
159:50 - tell me that will it print the value
159:54 - all right just pause the video and think
159:55 - about it so let's run the program
159:58 - and let's see
159:59 - my god it is giving us some sort of
160:01 - error why it is giving that error
160:04 - because the range is exceeded all right
160:07 - means we have exceeded the range of
160:10 - integer like here you have seen that the
160:12 - max
160:13 - means the negative range is
160:15 - 2147 483 648 right
160:19 - and the positive range is up to
160:22 - 2147 483 647 but in there we wrote
160:27 - 2 1 4 7 4 8 3 6 4 8 so it is having
160:32 - a plus one value all right it is
160:35 - exceeding the range that's why it is
160:37 - giving error
160:39 - so ranges basically tells us that
160:43 - how much value all right how much value
160:46 - the a particular data type can store all
160:49 - right and we also learned how to
160:52 - uh
160:53 - use integer as that is end as an
160:55 - variable
160:57 - right
160:58 - so another is
161:00 - long all right it is you can say it is a
161:03 - big brother of int alright uh it also
161:06 - store integer value all right that is
161:09 - means non-decimal values you could say
161:11 - or you can also say integer values all
161:13 - right
161:14 - so
161:17 - it has a more higher range all right
161:19 - this long all right that's long has a
161:22 - more higher range
161:23 - than in all right so when you need more
161:26 - values to store all right when you need
161:28 - more values to store that is
161:30 - higher range of values to store then you
161:33 - should go for long all right like let's
161:35 - try out the same example right we like
161:37 - here we see that we put some uh
161:40 - using int
161:42 - it exceeded it uh its
161:45 - range right because
161:47 - the range was up to two one four seven
161:49 - four eight three six four eight right
161:52 - but let's try the same thing out with
161:55 - long will it exceed
161:57 - let's see
161:58 - no it won't it won't exceed
162:01 - do you know the reason
162:03 - the basic reason behind it is because
162:06 - the range of long is much much bigger
162:10 - than off
162:12 - integer all right
162:14 - it is really
162:16 - the range is very much bigger than
162:18 - integer
162:20 - right
162:21 - uh another thing all right
162:23 - as you can see in air basically uh we
162:26 - can also add a suffix all right we can
162:29 - also add a suffix l
162:31 - all right we can also add a suffix l in
162:34 - here and it is not mandatory all right
162:36 - it is not mandatory but it is
162:39 - recommended to add the suffix l all
162:43 - right it is recommended to add the
162:45 - suffix
162:46 - l
162:48 - all right
162:50 - so
162:50 - uh
162:52 - yeah
162:53 - now as we have understood about uh long
162:57 - all right as we have understood about
162:58 - long
163:00 - it is
163:02 - now a time all right it is now time to
163:05 - understand about
163:06 - bite
163:08 - so we are going to learn about uh byte
163:10 - right so
163:12 - another thing uh before going to buy it
163:14 - all right another thing i would like to
163:15 - suggest is whenever you are writing all
163:18 - right it means this suffix l all right
163:20 - in the long whenever you're writing this
163:23 - always remember that to use capital all
163:26 - right capital l
163:28 - there's a very uh specific reason for
163:30 - that because many people what many
163:32 - people does is they gets confused with a
163:35 - small letter l and one
163:38 - it's sometimes uh confusing and even c
163:40 - sharp uh
163:42 - recommends to use a capital letter l
163:45 - all right to use capital letter l in
163:48 - spite of small literal or all right
163:50 - although it will give a warning if you
163:52 - if you use small letter l but uh there
163:54 - won't be much uh issues with that but it
163:57 - is recommended to use capital letter l
164:00 - in spite of
164:02 - small letter l in the suffix of long all
164:04 - right long data type
164:06 - so uh let's get into the byte all right
164:10 - by data type see
164:11 - byte is also uh
164:15 - so uh sort of integer only all right it
164:17 - also stores uh
164:19 - integers but
164:21 - the byte all right bytes range is really
164:24 - low all right byte has a really low
164:27 - range
164:28 - all right
164:30 - byte has a really
164:32 - low range
164:34 - so uh the range of it is from 0 to 255
164:38 - all right it is it is the range of
164:41 - byte so if we try it out all right if we
164:44 - try this example out alright if we try
164:46 - this example out
164:50 - so basically if we try this example out
164:52 - that is byte
164:54 - all right
164:56 - byte
164:57 - val alright now if we give value uh
165:01 - exceeding already if we give value
165:03 - exceeding
165:05 - 255 that is let's say 300
165:08 - all right and then try to print console
165:11 - dot uh
165:13 - right
165:15 - line
165:17 - all right
165:18 - val
165:19 - so let's see what it does all right
165:21 - let's see what it basically
165:24 - does
165:25 - let's see all right so
165:28 - it is giving us some sort of error why
165:30 - it is giving error all right why it is
165:32 - giving it it is giving us error because
165:35 - we exceeded the limit all right now if
165:37 - we give something
165:39 - under the limit all right that is
165:40 - between the uh
165:42 - 0 to 255 all right let's say we give 255
165:45 - only
165:46 - all right if we give this
165:50 - see
165:51 - it is working perfectly fine
165:54 - so yeah that's what byte is it has a low
165:56 - range but it is an integer data type
165:59 - all right similarly we also have other
166:02 - data types all right now we are going
166:04 - getting into the floating the point data
166:06 - types or you can say decimal data types
166:08 - alright that
166:10 - these are the data types that has
166:12 - decimal decimal places
166:15 - all right these data types has decimal
166:19 - places so the very first data type we we
166:22 - will be learning in uh in decimal places
166:25 - uh
166:26 - all right uh that is floating point
166:28 - numbers or you can say
166:30 - float all right so float is a data type
166:32 - all right which can have a decimal means
166:36 - which have decimals places in numbers
166:38 - alright if you want to store
166:40 - the uh some value in points we can't
166:43 - store that in integer of course right so
166:46 - we have to use some sort of data types
166:48 - meant for it so similarly there are
166:50 - three data types all right
166:52 - meant for uh storing
166:55 - uh decimal placed uh values that is
166:58 - float double and decimal all right so
167:00 - the very first thing we are learning is
167:03 - float
167:04 - all right so
167:06 - floating point basically float refers
167:08 - all right to floating point numbers all
167:10 - right and they have decimal places in
167:13 - the numbers all right just like 1.34
167:16 - then 5.64
167:18 - all right these numbers have decimals
167:19 - decimal places and them
167:23 - and uh if we talk about the range all
167:24 - right
167:25 - the the float has a range of plus minus
167:27 - 1.5 into 10 to the power minus 45 all
167:30 - right
167:31 - 2
167:33 - plus minus 3.4 into 10 to the power
167:37 - 38 all right so this is the range of
167:40 - float
167:42 - all right and also float uh
167:44 - uses eight bytes of storage all right
167:47 - and it has a precision of about
167:50 - seven digits all right
167:52 - so basically
167:53 - um
167:56 - it has a precision of seven digits all
167:59 - right what that means is it mean that if
168:02 - you are storing a number like one point
168:04 - two three four five six seven eight nine
168:07 - all right if you are storing a numbers
168:09 - like this
168:10 - so it will be rounded off all right it
168:13 - would be rounded
168:14 - off to
168:17 - 1.2345
168:21 - 678
168:22 - all right so it would be rounded off to
168:26 - this
168:27 - all right so let's uh learn how to
168:31 - initialize this float variable
168:34 - right
168:35 - let's learn to do so
168:38 - so
168:39 - float
168:40 - all right
168:42 - float
168:44 - value
168:46 - equals
168:47 - all right float value equals
168:51 - let's give some sort of uh
168:53 - decimal value that is 12.5
168:56 - and also add a suffix
168:58 - f all right
169:00 - then what this suffix uh
169:03 - f does is it tells that it is a floating
169:05 - point value now by default all right by
169:08 - default
169:09 - the val the decimal value is all right
169:11 - the decimal values are in double all
169:13 - right are in the format of double so it
169:15 - is always recommended to
169:17 - give f in the uh back off
169:23 - float uh float numbers all right
169:25 - floating point numbers
169:28 - so val
169:30 - let's try and print it out all right
169:35 - see it is printing 12.5 now let's try it
169:38 - try it out without the f suffix
169:41 - all right
169:42 - let's see what happens it is giving us
169:44 - error the uh
169:45 - the reason is because the
169:47 - the means
169:49 - these decimal values all right by
169:51 - default these decimal values by default
169:54 - are in
169:56 - uh double all right are in the type of
169:58 - double so it is always
170:00 - recommended
170:02 - to
170:03 - uh you uh add
170:05 - f suffix
170:06 - at the last of
170:08 - float variables right
170:11 - so that's what
170:13 - it is
170:15 - all right
170:16 - so as simple as that
170:18 - so
170:19 - yeah
170:21 - let's uh let's see all right
170:25 - let's see other data types too that is
170:27 - double all right let's see
170:30 - double
170:31 - so
170:32 - as we have learned about float all right
170:35 - it is uh a really great data type to be
170:37 - used all right another is a double all
170:40 - right it has a higher range all right
170:43 - this double has a higher range and
170:48 - a good precision all right a good
170:50 - precision
170:52 - so
170:53 - double all right what is a double all
170:55 - right see double is also our data type
170:57 - and uh it is a 64 bit all right
171:02 - it is a 64 double precision floating
171:05 - point type all right
171:06 - and uh it has a precision of 14 to 15
171:09 - digit all right it has a good precision
171:13 - of around 14 to 15 digit
171:15 - and
171:17 - also all right also to initialize a
171:19 - double variable we have to use
171:22 - the suffix
171:23 - small d or capital d
171:26 - all right similarly in float also we can
171:28 - use capital f but i use
171:30 - small f all right
171:32 - okay uh so here in the example i guess i
171:36 - did a mistake uh i would fix this issue
171:39 - all right here you can see in the
171:40 - example i give
171:41 - float num equals 12f but don't worry in
171:44 - the in the final note that would be that
171:46 - you would be getting all right i wish
171:48 - i'd be fixing this issue all right but
171:50 - for now uh i will show you the actual
171:52 - example all right i will show you the
171:54 - example i'm really sorry about this
171:56 - mistake
171:57 - but uh in the actual uh note this issue
172:00 - will be fixed all right uh so the range
172:03 - all right so double has a range of uh
172:07 - plus my uh plus minus 5.0 into 10 to the
172:11 - power minus
172:12 - 324 2
172:15 - plus minus 1.7 into 10 to the power
172:19 - 308 all right so let's try it out let's
172:22 - try this double
172:24 - all right let's try this double out
172:27 - so
172:28 - in
172:29 - let's get to the
172:32 - editor of course all right and let's
172:35 - write
172:36 - double
172:37 - all right
172:39 - num
172:41 - equals
172:43 - 12.5
172:44 - all right
172:46 - d
172:47 - okay
172:48 - and then console
172:52 - dot log
172:53 - oh sorry not console.log i'm always
172:55 - writing this thing because in the unity
172:58 - it is uh to write any sort of comment
173:01 - we do debug.log so it's like
173:03 - uh it it is habituated to me
173:06 - so um
173:08 - yeah
173:09 - so let's try and print it out all right
173:11 - let's see if it gives any sort of errors
173:13 - or runs seamlessly so we can see that it
173:16 - has rams ran
173:19 - seamlessly all right
173:21 - so we have learned about double data
173:23 - type all right we have learnt about
173:24 - float we have learnt about int we have
173:26 - learnt about long we have learnt about
173:28 - byte we have learnt about float we have
173:29 - learnt about double now it's our time
173:32 - all right it is now it is our time
173:35 - to understand this decimal
173:39 - all right let's understand this
173:42 - decimal data type
173:43 - all right see decimal is another
173:45 - floating point data type alright where
173:47 - you can
173:49 - store decimal values all right even the
173:51 - name suggests it
173:53 - so
173:54 - but all right but
173:56 - this data this decimal all right this
173:59 - decimal uh
174:01 - has much greater precision all right
174:04 - than
174:05 - any other all right that is a float or
174:07 - double all right the precision of
174:10 - float and double is lower than
174:12 - decimal all right so the decimal has
174:15 - better precision all right it has a
174:16 - greater precision that is of
174:18 - approximately 28 to 29 digits all right
174:21 - approximately 28 to 29 digits
174:26 - so
174:27 - this double uh this decimal data type
174:29 - all right has an uh
174:30 - greater precision of approximately 28 to
174:32 - 29 digits all right and
174:35 - it is recommended all right it is always
174:36 - recommended to use the decimal data type
174:39 - all right in spite of double or
174:42 - float if you want a
174:45 - greater precision all right if you want
174:47 - a greater precision then you should use
174:49 - decimal all right but the range but the
174:51 - range of decimal data type is
174:54 - uh lower than
174:56 - that of
174:57 - double
174:58 - and float all right so
175:02 - it has basically a range of um
175:05 - plus
175:06 - plus minus 1.0 into 10 to the power
175:08 - minus 28
175:10 - to
175:11 - uh plus minus 7.9228
175:14 - into 10 to the power 28 so this is the
175:17 - range all right this is
175:18 - the range of decimal
175:21 - data type all right similarly let's um
175:24 - try it out let's try it out
175:28 - in our code editor all right so um it's
175:32 - very simple i already included uh
175:35 - the definition right and also the
175:38 - example all right nothing to uh to
175:40 - complicate it in here so
175:43 - decimal
175:45 - decimal
175:47 - num
175:49 - equals
175:52 - 25.5
175:56 - d
175:57 - sorry the suffix will be m not d i'm
176:01 - really sorry about that so the suffix
176:03 - will be
176:04 - m all right so the suffix for decimal is
176:07 - m so this is how we write a
176:10 - uh initialize a decimal data type all
176:14 - right this is how we do it
176:17 - so
176:18 - now as we have learned about uh decimal
176:21 - data type now it's our time to learn
176:22 - about three other data types all right
176:24 - that is cad bool and string
176:27 - these are very important data types all
176:29 - right all of the data types that i am
176:30 - teaching you all right all of them are
176:32 - very important for you to understand
176:36 - all right
176:37 - so
176:37 - care all right cad data type what does
176:40 - care all right what is care actually
176:43 - care is a care basically stands for
176:45 - character all right or you can see
176:47 - letter all right a particular letter all
176:50 - right it's like like uh like a is a
176:53 - particular letter or a character like b
176:56 - like c like d
176:58 - all right
177:00 - so these are characters all right these
177:02 - are characters
177:05 - similarly if you say have to all right
177:08 - if we want to define any sort of
177:09 - character in
177:12 - our program how do we do that all right
177:14 - how would we
177:16 - do that
177:17 - it's
177:18 - pretty simple all right it's pretty
177:20 - simple
177:21 - just to write
177:23 - care all right
177:24 - also i'm not changing the variable name
177:26 - i'm going to keep it numb only right or
177:28 - let's change it let's change it all
177:30 - right and let's say i want to store a
177:32 - character all right called a
177:35 - alright
177:37 - and if i
177:38 - put ch all right
177:40 - now i want to print it all right
177:42 - so let's see it gets print or printed or
177:44 - not so here it is being printed one more
177:47 - thing or there are some details that you
177:48 - should look out for first of all all
177:51 - right
177:52 - if you are a character alright a
177:54 - character data type can only store
177:57 - only one letter all right
177:59 - it can't store a b all right abc it can
178:03 - only store one letter all right
178:06 - another thing you have to uh
178:09 - put in your mind is that
178:11 - whenever we write a character
178:13 - we have to enclose that particular uh
178:17 - letter
178:18 - in single brackets like just like we did
178:21 - in here all right so similarly let's try
178:24 - another out that is b
178:26 - all right
178:27 - and
178:29 - let's
178:30 - run this program all right
178:32 - see it is printing b
178:34 - all right now what if all right if we
178:37 - what if we try to add
178:39 - multiple
178:41 - all right add
178:44 - multiple uh
178:47 - letters in it so here you can see it is
178:49 - giving us error because of course this
178:52 - is a single this can only store a single
178:54 - character it can only store as
178:56 - uh uh like only one only one character
179:00 - all right so that's we are giving it to
179:03 - it that is only one character so
179:04 - remember
179:06 - uh if you if you want to store only a
179:08 - single character then always go for
179:10 - care all right
179:13 - now
179:15 - our next all right uh let's see what is
179:18 - our next yeah our next topic is bool all
179:21 - right see bool uh is stands for boolean
179:24 - all right it is the short for boolean
179:27 - so
179:28 - bool data types uh can only contain true
179:31 - or false all right
179:33 - true means on all right true means it is
179:35 - executable all right true means uh it
179:38 - will work it true means on
179:40 - and false means
179:42 - off all right you can say it is off
179:45 - right
179:46 - right so if you take an example of a
179:48 - circuit all right or you can say your
179:50 - lights also all right your lights also
179:54 - so you have a switch in your house all
179:55 - right to turn on the light so when you
179:57 - turn on the light all right
179:59 - the value of that particular switch is
180:02 - becoming true
180:03 - all right or you can say the value of
180:05 - that particular switch is becoming on
180:08 - and because
180:09 - the the
180:11 - value is true alright because the value
180:13 - is true the current is flowing all right
180:16 - the current is flowing through the
180:18 - circuit
180:19 - and
180:20 - lighting
180:22 - and putting the lights on all right and
180:25 - and it is putting the putting the lights
180:26 - on similarly if you turn off
180:29 - the switch all right similarly if you
180:31 - turn off the switch then the value of
180:34 - the switch will be false and no current
180:36 - will pass through it all right it will
180:38 - just terminate so that's what true and
180:41 - false is in terms of programming
180:44 - similarly how would how can we uh
180:46 - basically um
180:49 - how can we basically initialize it i
180:52 - have also given you example also all
180:54 - right and i will also show you how to do
180:56 - that
180:57 - all right
180:59 - so
181:01 - bool
181:03 - is
181:04 - running so am i running
181:07 - no i'm sitting
181:09 - right i'm i'm sitting right
181:12 - so
181:14 - if i print it now all right if i
181:17 - print it now
181:20 - let's see what happens
181:24 - see it is uh printing us true that the
181:26 - value is
181:28 - true
181:29 - right that the value is
181:31 - true
181:32 - now if i if i turn it false that is yeah
181:35 - i am running
181:38 - then let's say what happened
181:42 - it is printing false see we uh we will
181:46 - understand the use of true and false all
181:47 - right this true and false in further
181:50 - lectures already because we'll be using
181:51 - this
181:52 - often
181:53 - uh especially in the if else all right
181:56 - in the if else and the development so
181:59 - you at that time you will understand the
182:01 - use case of
182:02 - bull and how important is it
182:06 - all right
182:07 - now
182:07 - similarly we have another alright string
182:10 - now previously uh
182:12 - you might think that it is also similar
182:14 - to care and
182:16 - it is somewhat true all right see a
182:18 - string all right a string is basically
182:21 - collection of characters all right the
182:23 - thing that we can't do
182:25 - in cad data type we can do that in
182:28 - string data type all right string is a
182:30 - collection you can say it is a
182:32 - collection of characters
182:34 - all right every letter in here is a
182:36 - character p is a character r is a
182:38 - character all right and we are able to
182:41 - contain it all right you can say ah we
182:43 - are able to
182:44 - unite them in a single variable
182:48 - all right that we can't do in character
182:50 - because it can only store a single
182:52 - letter
182:53 - right
182:55 - so that's what a string is string can
182:58 - store multiple characters in a single
183:00 - variable all right because it is a
183:02 - collection of
183:04 - characters
183:06 - all right let's try out string
183:09 - name
183:11 - you can write your own name all right my
183:14 - name is priyanshu
183:17 - all right
183:18 - so oh also i forgot to give the
183:20 - semicolon this happens a lot
183:23 - and then
183:25 - name let's try it out and see
183:28 - what happens
183:30 - see it is printing priyanshu it is not
183:33 - giving us any sort of error just like
183:36 - the candidate when we try to store abc
183:39 - right so string can store multiple
183:42 - characters because it is it can store a
183:44 - collection of characters
183:46 - all right
183:47 - so another thing already that is
183:49 - noticeable in here is uh whenever you
183:52 - are writing a string or that whenever
183:54 - you are using a string you cannot use
183:57 - uh single quotes alright you you should
183:59 - only use double quotes all right so
184:01 - whenever initializing a string remember
184:05 - to uh
184:06 - enclose the
184:08 - characters or you can say the let uh
184:10 - means the word all right the word that
184:12 - you are uh assigning in the string
184:16 - string type variable all right remember
184:18 - to enclose them in double quotes all
184:21 - right just like we did in here
184:23 - all right
184:25 - so
184:26 - yeah
184:27 - now
184:28 - it is our time alright it is our very
184:30 - time to understand or you can say learn
184:33 - all right it is our very time to learn
184:36 - uh about strings in depth all right
184:39 - because strings is one of the most
184:40 - important concepts all right in in
184:42 - programming
184:44 - so let's understand it all right the
184:46 - very first thing we are going to learn
184:47 - is concatenation all right what is
184:50 - concatenation all right see
184:52 - concatenation is uh nothing too much
184:55 - of a complicated thing all right it is a
184:57 - really simple thing
184:59 - all right see concatenation uh is
185:02 - basically the joining all right it is
185:04 - basically the joining of two strings all
185:07 - right
185:08 - concatenation means it is the joining of
185:10 - two particular strings all right that is
185:13 - what concatenation is
185:17 - so
185:17 - let's try it out practically right let's
185:20 - try it out in our code editor
185:22 - all right
185:23 - so
185:24 - see here we have the name right i'm not
185:27 - going to edit anything in it just i'm
185:28 - going to add
185:30 - some another instructions to it all
185:32 - right so add a plus in it all right add
185:35 - a plus
185:36 - and
185:38 - all right and
185:39 - then add
185:40 - the title all right that is
185:44 - rg all right this is my title right
185:47 - also i would like to give a space before
185:50 - bhattacharjee because then it would add
185:51 - some space to it
185:53 - then let's let's try to print it all
185:55 - right
185:58 - see we i am able to print my
186:01 - full name and we have successfully
186:03 - concatenated all right see uh you might
186:06 - think that
186:08 - hey man this ad is used for adding two
186:10 - numbers right we can use this ad
186:13 - to add two numbers
186:15 - right we can use this ad to add two
186:17 - numbers means addition operator
186:20 - but if we talk about in terms of strings
186:23 - alright if you talk about in terms of
186:25 - strings then this uh add operator
186:29 - becomes a concatenation operator right
186:31 - means it is used to
186:33 - uh concatenate
186:35 - two strings into one all right
186:38 - uh this is what this addition uh
186:43 - operator does in terms of strings all
186:46 - right as simple as that
186:48 - all right
186:50 - so yeah
186:52 - now as we have understood about
186:53 - concatenation concatenation is nothing
186:55 - but
186:56 - but
186:57 - the joining alright the joining of two
187:00 - different strings
187:02 - all right now here comes some
187:05 - very important uh string methods all
187:07 - right
187:08 - it is very important to understand
187:13 - all right
187:14 - so
187:16 - let's see see uh
187:18 - this
187:19 - uh length method all right it basically
187:22 - tells us what is the length of the
187:23 - string
187:24 - all right it basically tells us what is
187:27 - the length of the string
187:29 - let's try it out all right let's simply
187:32 - try it out let's uh see we are going to
187:34 - do it with a very simple string alright
187:36 - that a string that doesn't has a lot of
187:39 - characters all right so
187:42 - let's take a b c all right
187:44 - see this we all know that this this
187:48 - particular string has three characters
187:50 - right this particular thing has three
187:52 - characters
187:54 - so
187:55 - let's try to print the length of it
188:03 - and let's see what happens
188:09 - wow it has given three now let's add
188:11 - another all right let's add another
188:13 - character in it and let's see what it or
188:15 - what it does
188:24 - so as you can see it in here that it has
188:27 - printed four so our length means the
188:29 - strings length is four of course
188:32 - so
188:33 - that's what the length does all right
188:35 - and this is going to be really helpful
188:37 - in our further sections all right even
188:38 - in the development
188:40 - so
188:42 - always remember to go through these
188:44 - notes all right after
188:46 - watching a particular lecture all right
188:48 - so always go through these notes to
188:50 - clear your concepts again all right or
188:51 - you can say revision of your concept now
188:54 - here's another function all right that
188:56 - is equals
188:58 - all right
189:00 - what this equals does see
189:02 - uh this equals will just compare
189:05 - one string to another all right it would
189:07 - just compare one string to another
189:10 - nothing uh too much in here all right it
189:12 - would just compare one string to another
189:15 - all right so let's try it out in here
189:18 - right uh i give it uh
189:22 - let's write another string alright
189:25 - string name
189:27 - two all right
189:29 - equals uh let's say
189:32 - dc
189:33 - ba
189:34 - right and
189:36 - let's try to use this function all right
189:38 - how to use this function first of all
189:39 - select alright
189:41 - select a variable all right that you
189:43 - want or to compare to all right
189:46 - so i'm going to select name as my parent
189:49 - variable on it i want to compare name to
189:52 - with name
189:53 - with name all right so then
189:56 - you have to give name dot
189:59 - equals
190:01 - all right and then
190:03 - within the parenthesis all right within
190:04 - the parentheses of equals
190:06 - we have to pass the second variable that
190:09 - is
190:09 - name two all right and then
190:13 - simply print it out
190:15 - as simple as that
190:20 - all right guys uh
190:22 - sorry i had to change the ide
190:24 - all right the code editor i was using
190:26 - that is gdb compiler uh it had some
190:29 - server issues all right so now i'm using
190:31 - jdoodle all right and let's try to run
190:33 - this program again button jd all right
190:36 - and let's see uh what will be the output
190:38 - so here you can see false why is it
190:40 - false because of course
190:42 - of course
190:44 - dcba
190:46 - is not equals to abcd both are different
190:49 - all right now if we
190:52 - try to give
190:53 - abcd
190:55 - again all right
190:57 - let's say what will be its output
191:01 - see it is giving true
191:03 - why
191:04 - why is it giving true it is giving us
191:06 - true because abcd
191:09 - is equals to abcd both are same right
191:13 - so
191:16 - yeah of course
191:18 - now
191:19 - all right we are going to see two more
191:21 - methods or you can say two more
191:23 - functions of strings
191:25 - that is index of and element at but
191:28 - before that all right we have to be
191:30 - aware of the concept of indexing
191:34 - all right where uh where this uh concept
191:37 - comes in picture what is this uh what is
191:39 - that all right so yeah see indexing is
191:42 - basically tells the placement all right
191:44 - it basically tells the placement or you
191:47 - can say where the particular character
191:49 - is present in the string all right like
191:52 - it is it works sort of look uh sort of
191:54 - like a location
191:55 - in the particular string
191:57 - all right now
192:00 - in programming all right in programming
192:02 - indexing always starts from zero all
192:04 - right so remember the first character
192:06 - alright the very first character of the
192:08 - string all right the very first
192:09 - character of the string
192:11 - will always be
192:13 - zero all right will always be zero now
192:16 - if we take uh take an example of abc
192:19 - all right and we want all right we want
192:22 - the index of let's say b all right we
192:25 - want the index of
192:26 - b
192:27 - so basically the index of b would be 1
192:30 - how
192:31 - i already told you that the starting
192:33 - point all right it is the indexing
192:35 - always starts from zeroth position
192:38 - all right the indexing always starts
192:40 - from
192:41 - zeroth position
192:43 - so a would be zero b would be 1 and c
192:46 - would be 2
192:48 - so the b
192:49 - b's address is
192:51 - 1 the a's address is 0 and c's address
192:54 - is 2. that's what indexing is it tells
192:58 - us
192:58 - the index or you can say the level
193:00 - location
193:02 - now there are two or two certain
193:04 - functions all right there are two
193:05 - certain functions available all right
193:07 - there are two certain functions
193:09 - available for
193:10 - getting the index and
193:13 - getting the index and the element
193:15 - present at the index all right see the
193:18 - in what index office does all right in
193:20 - the index of function we have just um
193:23 - pass all right we have to pass
193:25 - a particular um
193:28 - means a particular character present in
193:30 - the string all right and it would return
193:33 - or you could say it would give us
193:35 - the index all right the index position
193:38 - of the
193:40 - particular character all right
193:43 - let's let's try it out
193:45 - let's try it out
193:46 - it would be as simple as that nothing
193:48 - nothing too much complicated in here
193:51 - all right
193:52 - so now
193:54 - if i if i had to remove this weight
193:57 - yeah
193:59 - so
194:00 - what we have to do is we have to just
194:02 - write index all right index
194:05 - off
194:06 - and then
194:09 - let's say i want the index all right i
194:11 - want the index of
194:13 - c
194:14 - how would i do that
194:16 - all right
194:17 - before this
194:18 - pause the video and try uh
194:20 - okay it's giving us error
194:25 - oh i understood why it is giving error
194:27 - actually i use single quote uh
194:29 - single quotes i'm really sorry about
194:31 - that although ah the quiz is still on so
194:34 - you have to guess all right you have to
194:36 - guess
194:37 - or not even guess try to
194:39 - try to calculate all right try to
194:41 - interpret by yourself that what will be
194:43 - the output of this all right because we
194:44 - are trying to get the index or that we
194:46 - are trying to get the index of
194:49 - c or at index value of c from that
194:52 - string that is containing a b c d all
194:55 - right now let's execute it all right
194:59 - so it is again giving me errors i'm not
195:01 - sure why wait
195:03 - a definition for index of no instruction
195:05 - type code string
195:09 - all right wait
195:13 - oh sorry yeah
195:15 - as i told uh case sensitivity i
195:20 - uh i actually used a small letter i
195:23 - that's uh that's why i was like confused
195:25 - why it is giving error it would the cap
195:28 - the first letter will be in caps all
195:30 - right
195:31 - so
195:33 - the index all right so the index of c is
195:37 - 2 how if we talk about a
195:40 - the index of a is 0 because it is the
195:42 - starting point so of course it would be
195:44 - 0 then index of b
195:46 - is uh
195:48 - 1 alright index of b is 1 and the index
195:50 - of c is
195:52 - 2 all right similarly after this all
195:55 - right similarly after this there's
195:57 - another unlike that is element of all
195:59 - right let's
196:01 - see let's see sorry element at i'm
196:03 - really sorry about that so uh
196:06 - it got a rhyming
196:08 - so uh yeah
196:10 - so the uh this is the element that
196:12 - function what it basically does is see
196:14 - we have to pass all that we have to pass
196:16 - some sort of index value alright we have
196:18 - to pass an index value in it and
196:22 - and after we pass the index value let's
196:24 - say i pass uh from the a from abcd i
196:28 - pass 2 all right then it would return c
196:31 - because the at index 2
196:34 - c is present right let's try it out
196:37 - let's try it out and
196:39 - you will uh you will also notice
196:40 - something all right now i will tell you
196:42 - what
196:46 - element
196:48 - at all right
196:50 - and we have to put the
196:52 - index value that is let's say i want
196:56 - the value present at index 3 all right
196:59 - let's see
197:01 - see it is giving it is giving some sort
197:03 - of error what error why is it giving
197:06 - that error
197:07 - see the reason
197:08 - that is giving the error
197:11 - basically in in the system
197:14 - in the system name space there is no dot
197:16 - element at function available right
197:19 - now to uh use this function we have to
197:22 - uh
197:23 - include another name space that is using
197:25 - system
197:28 - dot
197:29 - link
197:30 - all right and then if we run it all
197:33 - right and then if we run it
197:36 - see we got
197:37 - the element present at index 3 that is
197:42 - d all right now if i if i want element
197:45 - present at let's say
197:47 - 1 can you guess what
197:50 - in the index 1 which element is present
197:53 - pause the video and think all right
197:56 - pause the video and think and
197:57 - tell in the comments all right
198:00 - let's try it out
198:02 - let's see
198:03 - wow
198:04 - it is correct
198:06 - at
198:07 - index one element b is present that is
198:09 - uh at zero already at index 0 a is
198:13 - present at index 1 b is present right so
198:16 - it is as simple as
198:18 - that
198:19 - all right
198:20 - now
198:24 - uh i already told you about sys uh
198:27 - link all right so
198:29 - we used a system.link all right it is it
198:32 - is another namespace alright link is
198:34 - basically a part of system name space
198:36 - only all right and it contains the
198:38 - element at method
198:40 - nothing too complicated all right
198:43 - so till now we have learnt a lot all
198:45 - right we have learnt a lot about data
198:46 - types we have learnt a lot about
198:48 - comments we have learnt a lot about
198:49 - variables
198:51 - right and the lecture has almost crossed
198:54 - one hour point all right so now this is
198:56 - our last all right this is our last
198:58 - topic of today alright last but not the
199:00 - least because there are many other
199:01 - topics available that is operators loops
199:04 - conditionals and etc so
199:08 - now this concept all right now i also
199:11 - have a homework for you that you guys
199:12 - have to do all right i won't
199:14 - show you how to do it all right i won't
199:16 - show you how to do it but you have to do
199:18 - it by yourself already because
199:20 - after this type casting i'm pretty sure
199:23 - that you would be able to solve some
199:24 - like
199:25 - a problem uh
199:27 - only one problem means i would only give
199:29 - you one problem and i think you will be
199:31 - i think you will be able to solve it
199:32 - already
199:33 - so
199:35 - see sometimes alright sometimes it is
199:37 - really necessary for us all right to
199:40 - change the value already before
199:41 - assigning means to change not the value
199:43 - but the type of the value before
199:45 - assigning all right
199:47 - let's say if you if we want to assign
199:49 - already if we want to assign
199:52 - a floating point value to our integer of
199:54 - course of course it will give
199:56 - us an error right of course it will give
199:59 - us an error because of course we can't
200:01 - store a floating point value alright we
200:04 - can't store a floating point
200:06 - value
200:07 - in all right we can't store a floating
200:09 - point value
200:12 - in our integer right in our
200:16 - integer
200:18 - right so we we have to convert it all
200:20 - right we have to cast it we have to
200:23 - convert that uh type that typed value
200:26 - right that float type value so let's try
200:29 - it out all right so typecasting is
200:31 - basically changing the type of the value
200:33 - before assigning as simple as that all
200:35 - right so let's take another thing that
200:38 - is int
200:39 - val alright end val equals
200:43 - 23.2 all right
200:47 - if
200:48 - uh uh of course we have to uh add f
200:50 - suffix if we are going to add floating
200:53 - float
200:54 - float type value all right and let's try
200:57 - to print it out all right let's see it
200:59 - uh
201:00 - it works or not
201:03 - so
201:04 - val all right
201:06 - let's see it works or not
201:10 - oh my god it has it has given us some
201:12 - some error right constant value cannot
201:15 - be converted to a end right because of
201:17 - course it can't be converted because
201:19 - because uh a compiler cannot convert it
201:22 - by itself we have to give some sort of
201:23 - instruction to convert it right so how
201:26 - would we do that
201:27 - as simple as that
201:30 - we have to convert it to end right so
201:32 - before uh assigning the value all right
201:34 - like you have assigned this value before
201:36 - that
201:38 - give a parenthesis all right and give
201:40 - the data type you want to convert the
201:42 - value to so it currently uh this value
201:44 - is in float all right this value is in
201:46 - float we want to convert it to end to
201:49 - store in the
201:50 - in data and variable right
201:55 - see
201:56 - it has stored basically what is
201:58 - happening is it is removing that
202:00 - uh value from the point all right from
202:03 - the decimal it is removing that value
202:05 - all right and it is storing the exact
202:07 - value
202:09 - all right so this is what type casting
202:11 - is
202:11 - now all right now another thing i would
202:14 - like to show you is we can also do this
202:17 - with the variable also all right let's
202:20 - let's um create
202:23 - a variable all right that is float fl i
202:26 - have given any name i i could have
202:29 - imagined it all right so let's give 23
202:33 - point or let's say
202:35 - 24.5 f all right
202:37 - so let's give that all right and
202:41 - whatever i do is i will remove that
202:42 - value and instead of that value i'm
202:44 - going to put the variable all right i'm
202:46 - going to put the variable
202:48 - and
202:49 - let's let's remove this end also first
202:51 - try without converting and then let's
202:53 - see what will be the output right i'm
202:54 - trying to assign a float value in the
202:57 - integer see
202:59 - it is giving all right cannot implicitly
203:03 - convert
203:04 - type float to int all right
203:07 - and xp and explicit conversion
203:10 - exists are you missing a cast see the
203:13 - compiler is so kind that it is also
203:16 - telling us
203:17 - what
203:18 - what can help us fixing it all right so
203:21 - what thing can help us fixing it right
203:24 - so let's do it
203:26 - so open the brackets all right open the
203:29 - brackets and we are going to typecast it
203:31 - that is
203:32 - end all right we are going to type cast
203:34 - it to int all right and let's say it
203:37 - works or not let's see
203:39 - wow
203:40 - congratulations it has worked it has
203:43 - worked right we
203:45 - we have successfully make
203:47 - uh the
203:49 - floating point worked right we have
203:51 - successfully typecasted now
203:53 - now here's a task for you all right
203:56 - here's a task for you you have to
203:57 - convert
203:58 - an integer to float
204:00 - all right you have to convert an integer
204:01 - to float this is your task
204:04 - all right after after watching the video
204:07 - you can surely complete it all right it
204:09 - is as simple as that it is not that
204:10 - complicated task right
204:13 - so
204:14 - for today all right for today's lecture
204:16 - for a module 3.2 we have come
204:19 - successfully completed this lecture
204:21 - all right and in the next lecture we are
204:24 - going to learn about operators all right
204:26 - uh it is really important to learn about
204:28 - the operators so next lecture is on
204:31 - operators
204:33 - hey guys welcome to this lecture and in
204:35 - today's lecture we are going to learn
204:37 - about operators in shisha all right
204:40 - this particular topic is very important
204:43 - for us because whenever we'll be uh
204:46 - coding any solution or let's say we'll
204:47 - be solving any sort of problems all
204:49 - right or maybe coding our own uh
204:52 - mechanisms in augmented and virtual
204:54 - reality
204:56 - we'll be needing operators on a highly
204:59 - basis because this is the very
205:00 - fundamental concept all right all the
205:02 - operations that we perform within a
205:04 - program
205:05 - happens only because of operators
205:08 - all right
205:09 - because
205:10 - for example whenever we are assigning
205:12 - some value to a variable right when we
205:15 - whenever we are assigning some value to
205:16 - a variable
205:19 - the assignment that is the equal all
205:22 - right the equals to option uh or the
205:24 - equals to sign is called assignment
205:27 - operator yeah that is also operator or
205:30 - let's say for another example
205:33 - we let's say we are multiplying all
205:35 - right we are multiplying
205:37 - a particular speed
205:39 - all right to time dot delta time all
205:42 - right
205:43 - i'm just taking it as an example we will
205:45 - be covering time dot delta time in
205:46 - future videos whenever when we will be
205:49 - uh learning
205:51 - to code in unity and uh
205:54 - we'll be developing our ar applications
205:56 - all right but for uh time being just
205:59 - understand this uh there's some function
206:01 - that is time the delta time and we are
206:03 - multiplying
206:05 - uh the speed variable all right the
206:06 - speed variable with the time dot delta
206:08 - time all right and the you know the s
206:11 - means the multiplication sign
206:13 - all right that will be putting in there
206:14 - that is also an operator
206:17 - all right so
206:20 - operators are everywhere in program so
206:22 - it is very important for us to
206:24 - understand the concepts of operators all
206:26 - right so basically what are operators
206:28 - see an operator is basically used to
206:31 - perform some certain functions or
206:33 - calculations within the program all
206:35 - right for an example assigning some
206:37 - values to a variable all right uh
206:40 - just like an equals to operator or as i
206:42 - said the multiplication operator is
206:44 - there to multiply right
206:47 - so similarly we use operators for
206:49 - multiple tasks all right and in today's
206:52 - lecture we are going to see that
206:54 - now
206:56 - the there are multiple types of
206:57 - operators all right there are multiple
206:59 - types of operators there are majorly
207:00 - five that is uh arithmetic operators
207:03 - relational operators
207:05 - logical operators assignment operators
207:06 - and bitwise operators in this lecture
207:09 - all right
207:10 - uh we are going to learn about four the
207:12 - four of these operators all right that
207:14 - is arithmetic relational logical and
207:16 - assignment all right we won't be needing
207:18 - bitwise operators as of now so that's
207:20 - why i am not teaching it
207:22 - but uh if you want i can bring a whole
207:25 - lecture video on bitwise operators all
207:27 - right because uh
207:28 - to understand bitwise operators you need
207:30 - to understand binary operations all
207:32 - right how how we perform binary
207:34 - calculations because bitwise operator
207:36 - shifts those binaries right so that's
207:39 - why i'm not including this uh bitwise
207:41 - operator concept uh in
207:43 - you know
207:45 - in this lecture
207:46 - so in this lecture we are going to learn
207:48 - about only four of these and uh
207:50 - all right so let's start with our very
207:53 - first operator arithmetic all right so
207:57 - see the use all right the use of this
207:59 - operator's
208:00 - operator is only available in its name
208:03 - arithmetic
208:05 - means we use these operators to perform
208:07 - some sort of calculation all right
208:10 - we use this operators to
208:13 - perform some sort of calculation
208:16 - the calculation can be anything it can
208:19 - be division it can be multiplication it
208:21 - can be addition it can be subtraction
208:23 - all right and we are going to look into
208:25 - that
208:26 - so here are all the operators listed in
208:28 - you know in a table that is the plus
208:30 - operator it is used for addition of
208:32 - values you can do it like this a plus b
208:34 - equals 10. similarly there is
208:36 - subtraction then there is multiplication
208:38 - right then there is a division all right
208:41 - you might
208:43 - this might seem a bit unfamiliar all
208:46 - right means of course there's a
208:47 - percentage sign all right but
208:49 - in terms of programming we don't call it
208:51 - a percentage
208:53 - all right in terms of programming we
208:54 - don't call it a percentage we call
208:57 - it a modulo operator all right we call
209:00 - it a modulo operator all right a modulus
209:05 - what this operator does is
209:06 - this operator
209:08 - gives you the remainder all right it
209:11 - gives you the remainder of any division
209:14 - right like for an example divide seven
209:18 - by two all right
209:20 - there will always be a remainder of 1
209:24 - all right so
209:25 - that's how it gives us the remainder of
209:28 - you know
209:29 - a particular calculation
209:32 - right and
209:33 - here uh in the last two these are unary
209:36 - operators the what these basically does
209:38 - now this plus plus sign increments value
209:41 - all right increments value with one
209:46 - let me uh make you understand
209:48 - this plus plus sign all right we'll be
209:50 - incrementing the value as 1
209:54 - and this
209:55 - negative means negative negative that is
209:57 - double negative this will decrement the
210:00 - value
210:01 - all right this will decrement the value
210:03 - that's it
210:04 - now
210:05 - to you know understand it more all right
210:07 - understand it more wisely more carefully
210:10 - let's do one thing let's uh do a
210:12 - practical on it right so i'm going to
210:14 - open uh just uh give me a second all
210:16 - right okay here is the editor
210:19 - so i'm just going to open it all right
210:21 - and uh what i uh first the very first
210:24 - thing all right what i wanted to do is
210:26 - declare two variables all right
210:28 - that is the uh first variable i would
210:30 - like to be you know um let's say eight
210:33 - and uh you know the second variable
210:36 - let's uh be it four
210:38 - all right now
210:40 - i'm going to perform the calculations
210:43 - you can see there are two ways to
210:44 - perform the calculation you can create
210:46 - another variable that's in c equals a
210:48 - plus b all right another way around is
210:51 - um
210:53 - you just directly print it all right
210:55 - just directly print it that is a
210:57 - console.writeline a plus b alright both
210:59 - will do the same task but the difference
211:01 - between them is
211:02 - in here you are just printing you aren't
211:05 - means in this particular line you are
211:07 - just printing all right you are just
211:08 - printing the adding
211:10 - additive value but when you are
211:13 - assigning a variable and then uh doing
211:15 - addition in it just like uh like just
211:17 - like this all right
211:19 - what you are doing is you are storing
211:22 - the
211:23 - addition of a plus b that is addition of
211:26 - a and b
211:27 - in another variable c all right you can
211:29 - surely do that let me uh let's do it
211:32 - that way all right that would be better
211:34 - so here you can see
211:36 - all right here you can see
211:38 - that we are performing the addition now
211:41 - let's see it's uh
211:43 - is it even working let's start up
211:45 - yeah it's it's perfectly working what is
211:48 - the addition of eight plus four it is 12
211:50 - and we got it right now now uh let's try
211:53 - out uh you know subtraction so to do the
211:56 - subtraction it's very simple remove the
211:58 - addition operator and put that minus
212:00 - operator all right or you can say uh
212:03 - in your keyboard there would be a dash
212:04 - put that all right
212:06 - it is called a minus operator and you
212:08 - can see 8 minus 4 is 4
212:12 - right now
212:14 - let's do another thing all right let's
212:16 - multiply it
212:18 - all right let's see
212:21 - see eight forza is 32 so multiplication
212:24 - is also working now let's let's try out
212:27 - uh division okay uh before uh
212:30 - doing the division operator i want you
212:32 - to pause the video and do the
212:33 - calculation by yourself without using
212:35 - any program uh let's see if you get that
212:37 - get it correctly or not
212:40 - see yeah four to the eight so uh
212:43 - that uh outcome is two right
212:47 - so
212:48 - that's how it works alright so till now
212:50 - we have seen four operators
212:52 - or which one is uh means
212:56 - which are those addition subtraction
212:58 - multiplication and division now let's
213:00 - see all right
213:01 - let's see the remainder operator all
213:03 - right
213:04 - can you guess what would be the
213:06 - remainder of
213:07 - like what would be the output of this
213:10 - particular calculation
213:13 - just give it a thought all right
213:16 - do it manually all right and then again
213:18 - continue with the video
213:21 - it's zero because uh
213:24 - when we divide eight with four all right
213:27 - it's completely
213:28 - being divided all right the division is
213:31 - being completed so remainder is zero now
213:34 - let's say if i give uh let's say for now
213:37 - i remove eight and gave nine let's see
213:41 - the output is one
213:42 - because there's a remainder remaining
213:45 - all right the division is not being
213:47 - completed
213:50 - so that's how this remainder operation
213:52 - works
213:54 - all right it's fairly simple
213:57 - so
213:58 - we saw about uh you know addition
214:01 - subtraction multiplication division and
214:03 - remainder now there remains two more
214:06 - operator all right and those are called
214:08 - unary operator uh what that does is they
214:11 - increment or decrement the value
214:14 - all right
214:16 - see
214:17 - there are two ways
214:20 - all right there are two ways
214:22 - of using increment and decrement
214:25 - variables all right means a increment
214:27 - and decrement
214:29 - unary operators all right
214:31 - so understand it like this so now the
214:34 - basic see to understand unary operator
214:37 - all right first of all we have to
214:38 - understand what it does see unary means
214:41 - these increment and decrement operators
214:43 - now they
214:45 - increment the number
214:47 - or
214:48 - decrement the number all right means it
214:50 - will uh like if i let me show you by
214:53 - example only all right let's remove this
214:55 - particular uh particular calculation
214:57 - from here all right let's uh
215:00 - let's let's perform this increment
215:02 - operator on let's say b all right let's
215:04 - give b plus plus let's see what happens
215:07 - all right let's just see what happens
215:11 - so
215:12 - here you can see all right let let me
215:14 - show you again
215:16 - here you can see the operation is not
215:19 - working
215:20 - means uh
215:22 - i i promised you guys right that uh
215:26 - this particular plus plus operator will
215:28 - increment the value
215:30 - right
215:32 - let me tell you one thing
215:34 - it is incrementing now there's a whole
215:37 - round of concept behind it all right but
215:39 - before that let me show you by
215:41 - incrementing incrementing the value
215:43 - actually so give plus plus b
215:46 - right let's see if this works
215:49 - yeah it works but why didn't the first
215:52 - one work
215:54 - see
215:55 - let me uh
215:56 - let me wrap your head around it first of
215:58 - all
215:59 - the plus plus sign alright let me uh
216:01 - make a comment right in here all right
216:05 - see first of all understand all right
216:07 - this plus plus operator is always used
216:09 - for incrementing
216:12 - all right and this minus minus operator
216:14 - is always used for
216:18 - decrementing right increment means
216:21 - increasing the number by one all right
216:23 - means this operator will always
216:24 - increment a number by one
216:27 - and decrement means
216:29 - this operator will always decrement the
216:32 - number
216:33 - by one all right that is subtract one
216:36 - from the previous value let me show you
216:40 - something like this
216:46 - see our value was 4 right our value was
216:51 - 4
216:52 - and now it as it has decremented by 1 it
216:55 - is 3
216:56 - right
216:57 - so
216:57 - that's how increment and decrement works
216:59 - all right now the there's a underlying
217:02 - concept already there's an underlying
217:03 - concept behind increment and decrement
217:06 - operator all right that is post
217:08 - increment pre-increment
217:10 - all right
217:11 - and
217:12 - post decrement and pre-decrement
217:16 - all right now what are those first of
217:18 - all let's uh let's wrap up our head uh
217:21 - around pre-incur increment all right
217:23 - that is the uh
217:25 - pre and post increment so first write it
217:28 - pre increment all right so what this
217:32 - does all right pre means
217:34 - first
217:35 - all right means that it it will perform
217:38 - the tax task first then anything else
217:41 - all right understand this way
217:43 - pre-increment is that is it will be
217:46 - performing all right it will be
217:48 - performing
217:49 - the operation first
217:52 - means
217:53 - in our case the operation is
217:55 - incrementing so it will
217:57 - uh perform the incrementation
218:00 - first all right and how do we write it
218:02 - fairly simple plus plus first of all we
218:05 - would be giving this uh symbol plus plus
218:07 - and then write the variable name all
218:10 - right
218:11 - so that's how pre-increment work
218:14 - all right and post increment is
218:19 - after
218:20 - all right after performing the
218:23 - operation
218:25 - all right now i know this might get a
218:28 - bit confusing and we write it like this
218:30 - all right that is b plus plus post
218:31 - increment
218:32 - now
218:33 - see
218:35 - let me clear this message
218:37 - pre-increment
218:39 - pre-increment what is doing first it is
218:41 - all right first
218:42 - it is incrementing the value then
218:44 - assigning
218:45 - and post incrementing or post increment
218:47 - what is it doing is first it is
218:50 - uh you know
218:51 - assigning then incrementing all right in
218:54 - case of this variable that's why that's
218:57 - why previously the b plus plus didn't
219:00 - work
219:01 - that's the reason because it or it has
219:03 - already first it has already assigned
219:06 - the value of b
219:08 - to the variable c
219:10 - after assigning it then it is
219:12 - incrementing
219:13 - all right
219:14 - that's the difference between pre and
219:16 - post
219:17 - that's the difference all right
219:20 - nothing else or else in both the cases
219:22 - value is being incremented just the
219:24 - difference is one is doing doing it
219:26 - first then assigning it and the another
219:29 - one uh what the other one is doing it is
219:31 - first assigning it then and incrementing
219:33 - it that's that's the difference all
219:36 - right
219:37 - so that's how this thing works all right
219:39 - now let's try it again let's let's uh
219:41 - try pre-decrement all right that is plus
219:44 - plus b all right now
219:46 - just guess the output alright let's
219:48 - let's not uh get b let's uh let's get a
219:51 - all right
219:52 - guess the output what will be the output
219:56 - it would be nine
219:57 - right because why because first of all
219:59 - it is incrementing then assigning the
220:01 - value increment uh increase incrementing
220:03 - by how much it is incrementing by one
220:07 - all right now let's again uh
220:09 - try out a plus plus let's see how that
220:12 - works
220:15 - see
220:16 - uh it is
220:17 - it is not showing that uh it has
220:19 - incremented but
220:21 - but
220:23 - our particular all right
220:25 - this particular value has been
220:27 - incremented right
220:30 - now
220:32 - i know you might not be believing me all
220:34 - right you might think what what is the
220:35 - proof all right and your question is
220:37 - right it's totally right all right so
220:40 - let me first you know uh
220:42 - let's comment out this line let me show
220:44 - you if
220:45 - this this particular function is even
220:46 - incrementing it or not
220:48 - let's see
220:49 - all right let's see so give a uh go to
220:52 - console.writeline and
220:54 - write a plus plus let's see
221:03 - so here you can also see that
221:05 - it is not showing all right that it is
221:08 - incremented
221:09 - right
221:11 - i know it might be confusing now let me
221:13 - show you another way around
221:16 - here is the variable i wrote this
221:17 - variable in here all right and again do
221:20 - a plus plus in here all right don't
221:21 - assign it to any variable just do a plus
221:23 - plus
221:24 - and let's see yeah it worked
221:26 - how how see it is not assigning any
221:30 - variable we aren't printing any variable
221:32 - we are printing a variable but we have
221:34 - we haven't assigned this increment all
221:37 - right we haven't assigned this increment
221:39 - to any other variable all right just
221:41 - like we did in the
221:43 - variable c we didn't do that all right
221:45 - did we we didn't
221:47 - so it just incremented the value it
221:49 - didn't assign itself so it it has not
221:52 - stored
221:53 - now it as it has incremented the value
221:55 - that's why we are getting nine so here
221:57 - you can see that this particular thing
221:59 - is working right it's totally working
222:01 - fine
222:02 - so the major decrement uh sorry
222:05 - the major uh
222:06 - you know difference between uh
222:09 - pre-increment and post increment is
222:12 - that one works first and the other one
222:15 - works
222:16 - last something like that all right of uh
222:19 - means uh this that is the pre one all
222:21 - right the pre-increment will increment
222:23 - the value first then assign it and the
222:25 - post increment post increment will uh
222:27 - first of first of all assign and then
222:29 - increment that's the difference all
222:30 - right so same all right same concept
222:32 - goes around
222:33 - the decrement all right that is pre
222:37 - decrement
222:41 - that would be
222:42 - you know
222:44 - minus minus b and post
222:47 - decrement
222:50 - would be b minus minus
222:53 - right so let's let's try this one two
222:56 - right first of all let's try uh minus
222:58 - minus b all right so our current value
223:00 - for b is
223:02 - you know c and let's print the c right
223:08 - see
223:09 - we are getting 3 because
223:12 - first it is being decremented then
223:14 - assigned now let's again try all right
223:16 - let's again try b minus minus in here
223:18 - and let's see if that works or not
223:20 - no it's not working because
223:23 - the value is already assigned and we are
223:24 - printing that assigned value
223:27 - now to check whether
223:29 - uh
223:30 - act in real all right in real if it is
223:33 - being decremented or not
223:36 - okay i guess i ran it by mistake so um
223:40 - let's go and give
223:42 - b minus minus alright and let's remove
223:45 - the c and let's put b in here let's see
223:48 - if uh
223:50 - works yeah it worked it did work
223:53 - so you can see that this post decrement
223:55 - also works so
223:57 - that is what
223:58 - p pre and post agreement is all right
224:01 - very simple all right nothing too
224:02 - complicated so i'm going to erase this
224:04 - program all right i'm going to use this
224:05 - program and go towards our next
224:08 - set of operators all right so
224:12 - we are clear with this concept of
224:14 - operators all right
224:16 - addition operator is for addition
224:19 - subtraction operator is for subtraction
224:21 - this asterisk is for you know uh
224:23 - multiplication this slash is for
224:25 - division this mod uh module or you can
224:29 - say percentage operator is for remainder
224:31 - all right this
224:33 - plus plus operator is for incrementing
224:35 - and this
224:36 - minus minus operator is for decrementing
224:38 - all right
224:40 - so i hope you understand
224:42 - how arithmetic operative works right now
224:44 - here comes our relational operator all
224:47 - right see
224:48 - again
224:49 - the meaning of this operator is already
224:52 - told in uh is already listed in its name
224:56 - it relation it tries to
224:58 - uh you know tell us that if there is any
225:01 - relation between the two values right
225:05 - now in this operator there are
225:08 - you know uh how many types are there six
225:10 - total six types is there that is equals
225:12 - equals not equals greater than less than
225:15 - greater than equals less than equals
225:18 - uh if you are you know uh i know most uh
225:21 - everyone uh if you uh means every one of
225:24 - you uh have experience with uh maths
225:28 - right i know everyone every single
225:29 - person of you and you already know what
225:31 - uh greater than equals does less than
225:33 - equals does right
225:35 - so
225:36 - let me make this thing clear to you see
225:41 - if
225:42 - all right if the condition is correct
225:44 - then it will return true if the
225:46 - condition is correct then it will return
225:48 - to if the condition is false then sorry
225:51 - if the if if the condition is not
225:54 - correct all right or the condition is
225:56 - wrong
225:57 - all right or let's say the condition is
225:59 - not matching then it will return false
226:01 - all right
226:02 - and uh these operators alright these
226:05 - operators are
226:06 - wide very widely used all right these
226:09 - operators are very widely used in
226:12 - if else operations all right if else for
226:15 - loop operations so we'll be learning
226:17 - those two
226:18 - so don't worry all right
226:21 - the main focus currently for us is to
226:23 - understand all right is to understand
226:26 - how these operators works so for that
226:29 - let me open my uh you know let me open
226:31 - this particular
226:34 - you know
226:35 - this uh
226:37 - editor and let's
226:39 - see our relational operator so let's
226:42 - give it a comment all right relational
226:45 - operators
226:47 - see there are total six operators you
226:49 - know who are those and let me
226:51 - show you what do they do all right
226:56 - let me show you so
226:58 - take two very uh variable that is in
227:01 - a let's uh
227:03 - it 12 and let's take another variable
227:05 - that is
227:06 - no into b and let's assign it
227:10 - 10
227:11 - right
227:12 - now
227:14 - all right
227:14 - now
227:16 - do one thing write console.writeline
227:20 - rightline all right
227:22 - and the very first operator is equals
227:24 - equals operators now let's see
227:26 - what it will return
227:28 - let's see
227:30 - it's returning false why why see
227:32 - understand the concept behind equals
227:34 - equals this is a this
227:37 - operator all right this operator
227:39 - compares two values all right and if
227:41 - both the values are same all right if
227:43 - both the values are same then it will
227:46 - return true and if both the values are
227:49 - not same
227:50 - then it will return false all right so
227:53 - these equal equal to operator is used
227:55 - for comprising now as i have changed the
227:57 - value of v to 12 and also the value of a
227:59 - is 12. now let's see what it returns see
228:02 - it is returning true because the
228:04 - condition is true
228:06 - the condition means uh
228:07 - a and b
228:10 - is means a and b are equal all right a a
228:13 - is also 12 b is also 12. so that's what
228:16 - uh you know
228:18 - equals equals operators does now the
228:20 - second one for us was not equals all
228:22 - right it's the total opposite
228:24 - it will check
228:25 - if the value is equals to or not equals
228:28 - now let me show you all right
228:30 - a naught equals to b now can you guess
228:33 - what will be the output
228:35 - all right pause the video and think for
228:37 - a few seconds and
228:38 - uh you know try to answer it by yourself
228:41 - what will be the output
228:43 - so let's see
228:44 - it is returning us false why because the
228:47 - it is the the conditional
228:50 - is also is only telling us not equals to
228:52 - we don't want it to be equal all right
228:54 - it means if it if both the values are
228:56 - not equal to each other then only i will
228:58 - return true and if they are equal i will
229:01 - not i will return false now let's try to
229:03 - change the value to you know change the
229:05 - value of b to 10. now let's see
229:08 - it is returning true
229:10 - now
229:12 - we understood about equals equals
229:13 - operator we understood you know we
229:15 - understood about uh not equals operator
229:18 - what's next
229:21 - next is
229:22 - greater than all right next is greater
229:24 - than and less than operator now let me
229:26 - show you all right
229:28 - let's see a all right a greater than b
229:33 - of course you all know it will you know
229:34 - return false because uh sorry it will
229:36 - return true because of course a is
229:38 - greater than b a is 12 10 ah b is 10 now
229:41 - let's see
229:42 - yeah it is returning to now now you know
229:45 - let's uh let's uh
229:47 - let's
229:48 - give it 13 all right let's change the
229:50 - value of b to 13 let's see
229:52 - it is returning false
229:55 - right it is returning false
229:57 - because of course bro uh a is not bigger
230:00 - than 30 it means 12 is of course not
230:02 - bigger than 13 right that's where it is
230:04 - returning false so now let's let's back
230:06 - it up to 10 and let's try it again yeah
230:08 - it is returning true because
230:10 - 10 is less than 12 and 12 is greater
230:13 - than all right 12 is greater than 10
230:16 - so same again let's try out a less than
230:19 - b
230:20 - all right
230:23 - of course the the condition has to be
230:25 - true all right means uh means this
230:27 - condition is telling us the truth a
230:30 - is
230:30 - not less than b
230:32 - a is not less than b that is false that
230:35 - that's why the output is false how can
230:37 - 12 be
230:38 - less than 10
230:40 - it cannot be right so that's why it's
230:42 - returning false now let's say if i
230:43 - change the value of a to let's say five
230:46 - okay uh sorry yeah let's change it to 5
230:48 - and let's see the output
230:50 - now it's returning true
230:52 - because
230:54 - it is returning to because
230:56 - the value of a is of course less than b
230:58 - because the value of a is 5 the value of
231:01 - b is 10 and 5 is less than 10
231:04 - so
231:05 - that's how this you know this thing
231:07 - works now let's say all right let's
231:11 - give both the values you know equality
231:14 - that is let's make a to 10 b to 10 right
231:17 - now let's see it's returning us false
231:21 - it is returning us false because
231:23 - there isn't any option right because uh
231:26 - see that that means for these type of no
231:30 - for these type of values now
231:31 - uh
231:33 - less than equals and greater than equals
231:35 - comes in
231:36 - all right
231:37 - so we are going to
231:39 - see those uh operators now
231:41 - so till now what we did till now we
231:44 - learnt about
231:46 - uh you know arithmetic operators all
231:48 - right now we are going through
231:49 - relational operators and in relational
231:51 - operators we learned about equals equals
231:53 - not equals greater than or less than now
231:55 - uh here comes two more operators all
231:58 - right here comes two more operators
232:01 - less than equals greater than equals all
232:02 - right now let's see first of all you
232:05 - know let's again uh reset its value
232:08 - let's ab12 and bb10 right now in here
232:12 - it's very simple you just have to give a
232:14 - greater than equals b now let's uh
232:17 - try and run it here you can see
232:20 - here you can see it is returning us true
232:21 - there's no difference right you you
232:23 - might be thinking oh god what am i
232:25 - showing what am i showing it's just like
232:27 - the you know
232:28 - the previous one just like the previous
232:30 - uh greater than equal sign sorry greater
232:31 - than sign
232:33 - no there's a difference you just have to
232:34 - wait so here you can see it's returning
232:37 - true yes of course it will return to
232:38 - because 12 is greater than 10 now
232:41 - let's let's make it to
232:44 - 10 all right let's make it up to 10
232:46 - let's see
232:48 - oh my god it's again returning false why
232:50 - that's because he has an equals to sign
232:53 - it the condition is telling all right
232:56 - if
232:57 - the number
232:58 - is greater than
233:00 - equals to some other number then only
233:03 - return true
233:05 - and if the condition means if that
233:08 - condition is not matching then return
233:09 - false now let's let's try giving 9
233:13 - now let's see
233:14 - say it is giving us false
233:16 - right now let's again let's try less
233:19 - than equals
233:24 - it's returning as true because you know
233:26 - 9 is less than 10
233:28 - now again let's give you know
233:30 - 10 to a let's see
233:33 - again it is returning as 2 because 10 is
233:36 - equals to 10 right now let's give 12 to
233:40 - a
233:40 - let's see
233:42 - it is a returning false alright because
233:45 - then the condition is not matching now
233:47 - condition is not matching it is 12 is
233:50 - nor less than nor equals to you know
233:53 - what
233:55 - nor less than nor equals to
233:57 - 10
233:59 - so that's how this whole relational
234:01 - operators works
234:03 - i hope the concept behind the relational
234:06 - operators is clear
234:08 - all right
234:09 - now
234:10 - as we are very clear around
234:13 - relational operators let's understand
234:15 - the concept of logical
234:17 - all right
234:19 - see
234:22 - logical operators uh you know they are
234:26 - very simple to understand
234:28 - all right very simple
234:30 - some people like exaggerate it i've seen
234:32 - like some people uh exaggerated uh
234:36 - exaggerated it but currently in the
234:39 - beginning stage and operator and you
234:41 - know these or operators are very simple
234:43 - very simple to understand
234:46 - now
234:47 - logical operators
234:49 - what are they all right
234:52 - these type of operators now all right
234:56 - is used to you know
234:59 - um what can i say i'm not getting the
235:01 - right word
235:04 - these two operations have put put some
235:06 - condition between
235:08 - uh like you know another two condition
235:11 - all right
235:12 - i know it might get a bit confusing i
235:14 - will show you how to you know uh how
235:16 - this works right but for now understand
235:19 - all right it performs logical
235:21 - calculations all right
235:23 - understand it like this it performs
235:25 - logical calculation
235:27 - now you can see
235:28 - two ands all right that is two ampersand
235:31 - signs
235:33 - all right what this means we call it as
235:35 - an and operator
235:38 - what this means is
235:40 - in this example here you can see there
235:42 - are two condition that is a equals
235:44 - equals two
235:45 - and another condition is
235:47 - b equals equals four
235:49 - all right if both the conditions
235:52 - are returning true all right if both
235:54 - that is a equals equals
235:56 - 2 is true and b equals equals 4 is true
236:00 - then only it will return true let's say
236:03 - any of the condition
236:05 - in here let's say let's for example
236:06 - let's say b equals equals force is false
236:09 - but a equals equals 2 is true all right
236:12 - for example then it will return false
236:15 - that's how the and operators works all
236:17 - right so as we have understood the and
236:19 - operator let's you know let's uh
236:22 - try to code it
236:23 - right let's see
236:25 - how this thing works
236:27 - so first of all i wanted to remove this
236:29 - whole
236:31 - code all right
236:33 - now again right in here
236:36 - logical operator
236:42 - all right cool
236:44 - now here assign two values represent
236:46 - equals you know
236:48 - 10 and
236:49 - b sorry
236:51 - enter
236:53 - b equals again you know
236:56 - let's say 12
236:57 - all right and now you know go to uh
237:00 - console.writeline
237:03 - and in here
237:05 - in here what you have to do is
237:07 - first of all
237:09 - first write one condition that is
237:11 - a
237:12 - equals equals
237:15 - 10 all right we are comparing the value
237:18 - of a
237:19 - to another value 10 all right now here
237:21 - comes the and operator now let's again
237:24 - do the same thing for b that is b equals
237:26 - equals to s
237:27 - now let's try
237:29 - and run it
237:31 - it is returning us true because
237:33 - both in here both
237:35 - the conditions are true now let's let's
237:37 - change one value that is let's change
237:39 - the value of b to 11 let's see
237:42 - so it is returning false so here the
237:43 - concept of for you know and operator is
237:45 - very clear that two or two
237:48 - means to get the and operator return
237:51 - true we have to make sure that both the
237:53 - conditions
237:55 - all right both the conditions which are
237:57 - uh you know using the and operator
237:59 - should be true
238:01 - all right so that's what the purpose of
238:03 - and operator is
238:04 - now another operator is
238:07 - or operator
238:08 - all right it's like if this doesn't
238:10 - works then we will work with these
238:13 - all right
238:14 - so basically what it means is
238:16 - let's say there are two values a equals
238:19 - equals to b equals equals to all right
238:22 - that is uh in our case alright in here b
238:25 - equals 4 right
238:27 - that means in here
238:30 - b all right for b it is false the
238:32 - condition b is false because of course b
238:35 - is not equals to 4 all right
238:38 - means b is 4 of course sorry
238:41 - i just you know
238:42 - uh confused you i i think so
238:45 - let's understand it this way see b is b
238:48 - right in here is 4
238:50 - and we are comparing b with another
238:51 - value 2 right and of course 2 is not
238:54 - equal to 4 all right it is not so for
238:58 - this particular condition it will be
238:59 - false now for this all right that is a
239:02 - equals equals 2
239:05 - in here the value of a is 2 and 2 equals
239:07 - equals to that is
239:09 - this but for this condition it will
239:11 - return true so as one condition is true
239:15 - it is going to return us true
239:18 - all right
239:20 - so
239:20 - let me show you
239:23 - so here you can see i already have it
239:25 - assigned that as a equals equals 10 that
239:27 - is 10 equals equals 10 it will be 2 and
239:29 - b equals b equals equals 11 but in our
239:32 - case b is 12 and
239:33 - in we are comparing it with 11 let's see
239:38 - it is returning us true all right now
239:40 - let's do this the other way around let's
239:43 - change it to 10 and let's um
239:45 - you know
239:47 - let's change the b to 12. again it is
239:49 - returning us true because you know one
239:51 - of the condition is continuously
239:53 - matching now let's say change you know
239:55 - change uh both the
239:57 - let's make both the condition and false
239:59 - and let's see
240:00 - here you can see
240:01 - it is getting us it is giving us false
240:04 - right so that's how this thing works
240:06 - that's how odd operator works
240:08 - now this not operator now it's totally
240:11 - different
240:12 - all right now
240:14 - let me show you not operator knight will
240:15 - uh it will you know reverse or you can
240:18 - say inverse alright invert the result
240:21 - all right it will invert the results now
240:23 - for example
240:25 - let's give a equals equals you know or
240:28 - 10 all right
240:30 - the output for this will be
240:32 - true
240:33 - right the output for this will be true
240:34 - now if we all right
240:36 - patch this particular uh condition
240:40 - means wrap this condition with the
240:43 - you know round brackets
240:45 - and put you know and put
240:49 - what is this called exclamation mark or
240:50 - you know not all right
240:52 - not operator in front of that uh
240:57 - condition and then run it
240:59 - here you can see that it is
241:01 - although the condition is true it is uh
241:03 - returning us false why because this this
241:06 - particular not operator now it is uh
241:09 - inverting the result now if if it is you
241:12 - know if it is resulting to you know
241:13 - false
241:16 - it will return us true
241:17 - all right so that's
241:19 - how this not operator works all right so
241:23 - till now we have uh we have learnt about
241:25 - uh
241:26 - arithmetic operator relational operator
241:28 - and logical operator now here comes the
241:30 - last one that we are going to learn all
241:32 - right
241:33 - this one is
241:36 - assignment operator all right
241:38 - see assignment operators are you know
241:41 - going to be very useful to us
241:43 - all right they are really going to be
241:45 - very useful to us and
241:47 - you got to be like you know very
241:51 - uh like you need to understand how these
241:53 - things work all right uh understand it
241:55 - carefully because sometimes not because
241:56 - of these operations that might like
241:59 - especially in this case this uh
242:02 - these uh three for uh for case of these
242:05 - three it uh gets a bit confusing all
242:07 - right so don't worry i'm going to you
242:09 - know
242:10 - understand uh make you understand this
242:12 - concept brick by brick all right
242:15 - so
242:17 - let's remove this all right let's remove
242:19 - this again comment it
242:20 - and uh
242:23 - let's give it a name that is assignment
242:28 - all right assignment
242:31 - operator
242:33 - all right very cool very great now
242:36 - create a variable
242:38 - and a equals you know let's uh let's
242:40 - give it five all right
242:43 - now here we used our very first operator
242:46 - which one
242:47 - equals operator all right
242:50 - how see equals is an assignment operator
242:53 - it's in its team only see equals is
242:56 - assigning a value to a all right equals
242:59 - is assigning a value to a
243:03 - that's how it is working
243:05 - right
243:06 - that's how it is working
243:08 - so equals is an assignment operator we
243:10 - learned about our very first operator
243:13 - right it's not very first but
243:15 - learnt about our first operator in
243:17 - assignment operator category
243:19 - all right
243:20 - now
243:21 - next operator is plus equals all right
243:25 - see
243:26 - i hope you remember we learned about uh
243:29 - increment and decrement operator
243:31 - uh plus plus equals operators also does
243:34 - the same thing all right but it you know
243:36 - it is more modifiable
243:39 - all right it is more modifiable it also
243:41 - increments the value all right it also
243:43 - increments the value but
243:45 - we can determine how much value to
243:48 - increment all right like in the previous
243:51 - one we are giving you know uh a plus
243:53 - plus and it was only incrementing the
243:56 - value all right it was only incrementing
243:57 - the value by one we weren't able to you
244:00 - know change it
244:02 - means if we wan
244:03 - how to do like if we use this we won't
244:06 - be able to increment the value with
244:09 - two all right it will only be
244:10 - incremented with one all right but with
244:12 - the plus equals operator
244:15 - what we can do is a a plus equals two
244:19 - all right and now let's
244:21 - let's print it
244:27 - a
244:29 - let's see
244:32 - it is 7 because 5 plus 2 equals
244:34 - 7
244:35 - right now
244:37 - you know there's a more abbreviated it's
244:39 - not abbreviated there's a more expanded
244:41 - version of it all right let me show you
244:44 - a plus equals 1 all right a plus equals
244:47 - one okay so plus equals two all right it
244:50 - also has a
244:51 - uh you know big version that is
244:54 - a equals a plus two
244:57 - all right so basically this this would
244:59 - help you to understand how exactly it is
245:01 - working alright how this operator is
245:03 - working so pay attention carefully
245:05 - what is happening
245:08 - first of all it is performing the
245:09 - addition of a that is
245:11 - 5 plus 2 then it is assigning the
245:14 - addition to a
245:15 - to the variable a all right it is
245:17 - performing the addition on e then it is
245:19 - assigning
245:20 - that addition
245:21 - to the variable a
245:23 - that's how it is working
245:24 - all right
245:26 - so that's how
245:27 - this
245:28 - plus equals operator works
245:30 - all right now
245:32 - the next in our you know the
245:36 - so first uh first let's understand what
245:38 - we learned we learned about uh
245:39 - assignment that's equals operator now uh
245:42 - we learnt about plus equals operator all
245:44 - right now here comes minus equals
245:46 - operator this is the decrementing
245:48 - operator but
245:49 - is modifiable all right that is
245:53 - a minus equals 2
245:55 - let's try it out
245:58 - see 5 minus 2
246:00 - 3 all right now you know let's uh let's
246:03 - expand it that is a equals a minus 2
246:08 - again it's the do it's doing the same
246:10 - thing right just it is more expanded
246:12 - version what is doing it is first
246:14 - performing the calculation that is it is
246:16 - first
246:17 - you know decrement means decrementing
246:19 - the value by 2 then it is assigning it
246:21 - all right so that's how it is working
246:24 - now
246:25 - uh we learned about
246:26 - the three operators that is
246:30 - assignment
246:32 - plus equals
246:33 - all right that is equals plus equals and
246:36 - minus equals now here comes
246:38 - multiply equals now
246:41 - with the first chapter operators uh your
246:44 - i guess your concept might be clear but
246:45 - let's say if it isn't clear i will
246:48 - show it to you all right
246:49 - the syntax is something like this a
246:51 - asterisk equals 2
246:53 - all right so what will happen it will
246:56 - multiply 5 by 2 5 with 2 sorry
246:59 - let's try it out
247:01 - see it is multiplying it now if we if we
247:04 - look into the underlying all right
247:06 - means uh the underlying logic it will be
247:08 - like this a equals a into 2 all right
247:11 - and you know 5 into 2 is 10
247:14 - and then it is assigning it so that's
247:16 - the underlying logic behind it
247:19 - all right
247:21 - now
247:22 - as we understood
247:24 - this also there's another one that is
247:26 - divide equals a divide equals
247:29 - 2 so basically it will divide 5
247:32 - with 2 now of course i don't want to
247:34 - divide 5 by 2 so i'm going to change the
247:35 - value to 4 all right let's see for the
247:38 - simplicity here you can see 2 4 divided
247:40 - by 2 is 2 all right now let's you know
247:42 - let's simplify it a equals a divided by
247:45 - 2.
247:46 - it's doing the same thing right
247:49 - first it is
247:50 - dividing then it is assigning
247:53 - as simple as that
247:55 - all right that's how this thing works
247:57 - now again
247:58 - the last one remains that is modulo
248:01 - equals
248:04 - let's see
248:07 - it it is returning 0 because of course
248:08 - there's no you know it's a complete
248:11 - division if you divide 4 by 2 right now
248:13 - let let's try it out with 5 now let's
248:16 - see
248:17 - is returning also because one because it
248:19 - is it is not performing a complete
248:21 - division right so
248:23 - that's how this you know this whole
248:25 - thing works
248:26 - all right
248:27 - so uh let me show you the abbreviated
248:29 - version of it also a equals a modulo 2
248:33 - all right now you know let's uh let's
248:36 - remove this particular line and let's
248:37 - see if
248:39 - our you know our
248:41 - idea works or not see it is working
248:43 - right now let's change this value of a
248:45 - to 4 now let's see
248:48 - so here you can clearly see
248:51 - all right here you can clearly see
248:54 - we are
248:55 - able to do all the
248:57 - actions all right in the assignment
248:59 - operator and i hope it is clear how
249:01 - everything under you know under the hood
249:04 - is working
249:06 - right
249:07 - so
249:08 - let's get to our next topic
249:10 - all right
249:11 - and that is bitwise operators i'm just
249:14 - going to tell you the over like overall
249:16 - idea behind
249:19 - so you know let's see see
249:21 - bitwise operator works on uh bits and
249:24 - perform bit by bit operation all right
249:26 - now in here bit is binary all right so
249:28 - uh before rc
249:32 - the thing is you have to understand
249:34 - binary operations all right you have to
249:36 - understand binary hexadecimal uh octal
249:39 - operations before getting into bitwise
249:42 - operators all right because bitwise
249:43 - operators works on binary level all
249:46 - right and that's why bit by bit wise
249:47 - operators are fast
249:49 - alright so
249:52 - remember that
249:54 - remember this thing and uh i would like
249:56 - see i would like you guys all right
249:58 - after you are completed with the c topic
250:01 - i would really like you guys to do your
250:03 - research and learn about all right do
250:06 - your research
250:07 - and
250:09 - learn about bitwise operators more
250:11 - because it is one
250:13 - hell of an interesting topic
250:15 - all right so do that now here comes
250:18 - another topic operator precedence
250:20 - all right see operator precedence is you
250:23 - know a very interesting topic
250:27 - it's like the bodmas rule in maths
250:30 - all right
250:31 - it's like the body mass rule it maps
250:36 - what bodmas rule tells us all right
250:38 - first of all it is in bodmal's rule the
250:42 - associativity or you know the importance
250:44 - all right
250:45 - the importance
250:48 - is
250:48 - from
250:50 - left to right all right the importance
250:52 - of operators like in in the body mass
250:54 - rule the importance of all those
250:55 - operators start from left to right all
250:57 - right bracket of you know division
251:00 - subtraction multiplication uh
251:04 - sorry bracket you know bracket of
251:08 - division multiplication addition
251:10 - subtraction
251:11 - right so that's how it is means bracket
251:13 - has the very high importance and
251:15 - subtraction has very low importance all
251:18 - right and
251:19 - you know as bracket all right as bracket
251:22 - has
251:23 - very high importance
251:25 - uh the you know the calculations inside
251:28 - a bracket is performed
251:30 - first
251:31 - then other calculations are performed so
251:36 - these all right
251:38 - you know
251:40 - these all right these
251:43 - this is the whole concept of
251:45 - operator precedence so i would like you
251:47 - to go through this chart all right it's
251:49 - very important to have an understanding
251:51 - of this chart
251:53 - it's just that it is telling us
251:56 - all right about the precedence of
251:58 - operator all right that is how important
252:01 - an operator is
252:02 - and uh
252:04 - how much important is it from
252:06 - its next operator so it is telling us
252:09 - that all right and i want you guys to
252:11 - you know have an understanding of this
252:13 - all right so that's it for this lecture
252:16 - and i hope
252:17 - uh you guys are liking this whole series
252:20 - so
252:21 - make sure to press the subscribe button
252:22 - and
252:24 - more lectures are coming all right
252:26 - thank you
252:29 - in this lecture we are going to uh learn
252:31 - about conditional statements all right
252:33 - conditional statements in shisha
252:35 - uh the reason why we are learning is we
252:38 - we need to know how we you know uh drive
252:41 - our program all right means we how we
252:43 - drive our program to a certain direction
252:46 - all right and how do we uh drive a
252:49 - program to a certain direction it's by
252:51 - applying conditions
252:52 - all right it's uh you know it's just
252:55 - like that like when you know uh i guess
252:57 - you guys remember when
252:59 - parents uh used us to know uh
253:02 - tell us that uh we will buy you a thing
253:04 - if you bring 90 percent uh
253:07 - 90 marks in uh your exams like it's like
253:11 - that it used to know uh drive us to
253:14 - study harder to get that thing so that's
253:16 - how conditional works all right we give
253:18 - some condition all right and uh it works
253:21 - upon that condition
253:23 - that's what conditional are all right
253:25 - basically conditional uh statements now
253:28 - they help us to execute all right it
253:29 - helps us to execute some sort of
253:31 - programs all right some programs uh with
253:34 - respect to the conditions assigned to it
253:36 - all right now if the condition is true
253:38 - all right if the condition is true
253:40 - then
253:41 - you know uh
253:42 - a particular statement will get executed
253:44 - and if the condition is false it won't
253:46 - get executed all right so that's what
253:48 - conditional is all right so
253:51 - now
253:52 - uh first of all uh just let me rename
253:55 - this editor to you know uh conditionals
253:58 - um conditionals
254:01 - all right
254:03 - so
254:04 - yeah
254:05 - see
254:06 - there are uh you know there are three or
254:09 - you can say four uh conditional
254:11 - statements out there now let me list
254:13 - them down all right
254:16 - the very first one is
254:18 - if
254:19 - else all right or you can see if and
254:21 - else
254:22 - the next one is if
254:27 - else if
254:29 - and else
254:30 - all right
254:31 - the third one
254:33 - is
254:34 - inline
254:35 - if we are going to learn about that
254:37 - don't worry
254:38 - uh and the fourth one
254:40 - is switch statements
254:43 - alright or you can say uh
254:45 - switch
254:46 - case
254:47 - all right
254:49 - statements
254:52 - so
254:53 - ah there these are the four types of
254:54 - conditionals we have all right so now as
254:57 - we are clear with the like what
254:58 - conditionals are
255:00 - right
255:01 - we should you know get going with our
255:03 - very first
255:05 - you know our uh
255:07 - very first statement uh that is if and
255:09 - else statements all right
255:11 - see
255:13 - these if statements now it helps us you
255:16 - know it helps us to execute some
255:19 - condition already to use
255:21 - it helps us to uh execute some statement
255:24 - under some condition all right it's like
255:26 - that it's it's like you know uh let's
255:27 - say for an example um it's raining
255:30 - outside all right for an example uh it's
255:33 - raining outside or uh
255:36 - let's say uh how can i you know
255:38 - represent it um
255:40 - yeah let's say it is it is raining
255:42 - outside all right and uh
255:44 - you you want to take an umbrella why you
255:47 - want to take an um see the very first
255:49 - thing you are going out all right you
255:51 - see while going out you see that there
255:53 - rain is falling right
255:55 - and
255:56 - you are very sure
255:58 - as it is raining you want to take a
256:01 - condition sorry you want to take an
256:03 - umbrella with you right
256:06 - because uh
256:08 - it is raining and if you you know uh get
256:11 - wet in uh
256:12 - due to the rain uh it will you know uh
256:15 - it will give you fever all right you
256:17 - won't be well
256:18 - all right so you want to prevent it all
256:20 - right and because of that you are
256:22 - getting an umbrella so that you don't
256:24 - get wet
256:25 - right
256:26 - so in here can you all right can you
256:29 - guess
256:29 - what is the condition
256:33 - in here all right in this case
256:36 - the condition is
256:37 - rain
256:38 - all right
256:40 - how let me tell you see as it is raining
256:42 - you are taking the umbrella what if it
256:45 - didn't rain
256:46 - you won't be taking and taking an
256:47 - umbrella all right because of course
256:49 - dude it is not raining why would we need
256:51 - an umbrella we can walk freely
256:54 - right
256:55 - so the condition in here
256:57 - is rain and the statements that are
256:59 - being executed is
257:01 - will uh
257:03 - is that the person will
257:05 - take
257:06 - uh umbrella or he will not take daila
257:10 - all right so that's how it is working
257:12 - now to uh you know to implement all
257:15 - right
257:16 - the uh let me show or tell you about the
257:18 - syntax how we you know represent uh the
257:20 - syntax of ethernet i would uh like i
257:23 - would uh implement the example i told
257:25 - you all right i will do that right now
257:28 - just give give me a few seconds first
257:29 - let me make you uh you know go through
257:31 - with the condition the first thing is uh
257:33 - we have to give a you know
257:36 - first thing is we have to write if all
257:38 - right and within that if
257:41 - a condition goes all right a condition
257:43 - will go on
257:45 - and after that
257:47 - all right within the f block
257:49 - some sort of you know statement will be
257:51 - there statement in the sense some sort
257:53 - of program you have written or some sort
257:55 - of you know uh command you have written
257:57 - that would go on all right and let's say
257:59 - if the condition alright if the
258:01 - condition is you know if the condition
258:03 - is not satisfying or the condition is
258:04 - wrong then another set of already
258:08 - another set of statement will
258:10 - work on
258:12 - right
258:14 - so if the condition is not true then
258:17 - means if this particular kind uh
258:20 - statement condition is not true then
258:21 - this else block will execute now to
258:24 - understand it very you know uh very
258:27 - carefully let's code it first of all
258:29 - create a bool variable that is is
258:32 - raining and you know set it to false as
258:35 - of now or let's say set it to you know
258:38 - true all right that would be better now
258:41 - if is raining
258:43 - equals equals true
258:45 - what i want to do is i want to print
258:49 - i want to
258:51 - print
258:53 - that
258:55 - take your umbrella
258:57 - right
259:02 - let's see if it is working or not
259:05 - yeah it is working as it is raining all
259:07 - right as it is raining
259:10 - that's why we are taking our umbrella
259:12 - let's say what will uh what will be the
259:14 - outcome if we you know uh say false
259:19 - see it is telling us that your program
259:21 - did not output anything what does it
259:23 - mean
259:25 - it means that this if condition
259:28 - uh like you know here our condition is
259:30 - only that if it is raining alright if is
259:33 - raining equal is true then only execute
259:35 - this particular block of code all right
259:38 - or else
259:39 - means we haven't specified let's if if
259:43 - this is raining equals equals to
259:45 - condition doesn't execute all right
259:47 - let's say if it returns false then what
259:50 - all right
259:51 - then
259:52 - another block of code will uh you know
259:56 - show its you know uh what can i say show
259:58 - it's magic that is else block all right
260:01 - and what else block does is if any of
260:03 - the condition becomes false all right
260:06 - if any of the uh you know previous
260:07 - condition becomes false it will go to
260:09 - the else block all right
260:11 - and in the else block we can write
260:16 - okay just
260:17 - all right in the else block we can write
260:20 - don't
260:21 - take your
260:23 - umbrella
260:25 - right so
260:26 - now let's see as israel as it is not
260:29 - raining that is raining full fall so
260:31 - what is happening
260:32 - our code is telling don't take your
260:34 - umbrella all right
260:37 - so that's how if an else statement works
260:40 - it it helps us to drive a program to
260:43 - certain directions all right so it's
260:45 - like that it's it's just like the
260:47 - example i give you like the reigning
260:49 - example and you know the parents are uh
260:51 - like you know uh
260:53 - the parents uh
260:56 - giving us some you know some sort of
260:57 - gift like promising us to give some gift
261:00 - and uh
261:02 - they are telling uh they will only give
261:04 - the gift uh if we bring 90 marks in our
261:07 - exam so it it's something
261:09 - it is totally like that all right it's
261:11 - it's how we drive our code all right
261:13 - it's how we actually you know drive our
261:16 - code
261:18 - that's how this whole thing works
261:20 - all right
261:21 - so that is
261:23 - what it is
261:24 - now
261:26 - our next all right as this one is done
261:28 - right this one let's mark it down
261:32 - if an else is done we are clear with if
261:34 - an else statement now
261:38 - the next one
261:40 - all right the next one for us is
261:44 - if elsif
261:46 - and
261:48 - else statement
261:50 - right
261:52 - now
261:53 - see it is also similar all right it is
261:56 - also similar to um if an l statement
261:58 - just
261:59 - here comes another block that is else if
262:02 - elsif is also like you know if statement
262:05 - but let's say if statement doesn't
262:07 - executes it will go to the else if
262:09 - statement and if else if statement also
262:11 - doesn't execute
262:13 - then it will go to the else statement
262:15 - all right
262:16 - if the these kind of statements comes in
262:18 - real like
262:19 - comes really handy when whenever we are
262:22 - writing let's say uh solving some
262:24 - problem or uh let's say making our own
262:26 - ar application where we have to put some
262:28 - conditions right so this kind of
262:30 - statement comes really handy all right
262:32 - and they are used more oftenly
262:35 - all right they are used oftenly
262:37 - so make sure you understand it all right
262:39 - the syntax is uh you know very similar
262:41 - to the
262:42 - uh previous one you'd uh like
262:45 - just in between uh
262:47 - if and else block all right you have to
262:49 - uh write another block all right that is
262:52 - elsif and in here
262:54 - a condition goes on all right
262:57 - and uh within that uh condition we have
262:59 - to write and you know block and it would
263:02 - contain a statement all right it's uh
263:05 - it's like that now let's let's say uh
263:07 - let's take an example of voter voting
263:09 - age all right let's implement it let's
263:11 - uh take age let's uh currently my age is
263:14 - 17 all right
263:16 - as of now my age is 17.
263:19 - now for the very first condition i'm
263:20 - going to give is
263:22 - all right the very first condition i'm
263:25 - going to give is
263:28 - if
263:30 - sorry if
263:31 - age
263:32 - no is greater than equals 18
263:36 - then only all right
263:39 - then only
263:41 - i am eligible to vote in india right
263:45 - then only i am eligible to vote
263:52 - let's say
263:55 - what if
263:57 - all right else if
264:02 - our age is less than 18
264:05 - all right let's give another condition
264:07 - all right
264:10 - if
264:11 - our age
264:13 - is less than
264:15 - 18
264:16 - and all right
264:18 - and
264:19 - age
264:20 - greater than right greater than zero of
264:23 - course uh a child all right who who like
264:27 - who's not even born he won't be able to
264:29 - you know uh vote of course that's you
264:31 - know that's ridiculous right so console
264:37 - dot uh
264:38 - write line
264:39 - and give
264:40 - not
264:42 - eligible
264:43 - to vote
264:44 - all right
264:45 - so yeah and in the else block
264:49 - we give console
264:51 - dot
264:52 - write line
264:54 - if
264:55 - invalid edge
264:57 - all right
264:58 - invalid
265:00 - age
265:03 - now what does this means all right let's
265:05 - first give it you know let's give the
265:07 - age 19 all right let's see which one
265:11 - will get executed
265:13 - see
265:14 - the first condition is being executed
265:16 - that means the if block is being
265:17 - executed why because e of course
265:22 - of course uh uh the age the age we
265:24 - specified is greater than
265:27 - all right greater than equals
265:29 - 18 it is greater than 18
265:32 - right that's why we're eligible to vote
265:34 - now let's let's try out 17
265:36 - right
265:38 - we are not eligible to vote
265:40 - of course because you see i am not 18
265:42 - in india the minimum voting age is 18
265:45 - and i am not 18 so how how will i vote
265:47 - if i am not 18
265:49 - so
265:51 - 17 is
265:53 - like
265:54 - if you are 17 you can't vote right now
265:56 - let's try out you know four let's let's
265:58 - see if a four year old can
266:01 - vote or not no the
266:02 - four-year-old cannot uh can't vote now
266:05 - let's see if a zero all right if a zero
266:08 - your old
266:09 - kid can vote or not
266:12 - invalid age
266:14 - all alright because 0 is not an age
266:17 - right so
266:19 - here is the thing
266:22 - if else if and else that's how we use it
266:26 - all right
266:27 - that's how we use it and you you you are
266:30 - going to use more often when you will
266:31 - start coding your own ar or ar
266:33 - applications or games right or even uh
266:36 - like when you will uh you do go in
266:38 - competitive programming or solve
266:40 - problems you are going to use these
266:41 - statements oftenly all right so that's
266:43 - how
266:44 - you you know we use these statements
266:47 - all right so i hope uh you know the
266:49 - concept
266:51 - the concept of you know this is clear
266:54 - now we are going to you know do a bit of
266:56 - problem solving in here all right
266:59 - so
267:00 - for us uh there's a question
267:03 - all right for us there's a question let
267:04 - me write it down here first first of all
267:06 - let me remove all this you know
267:08 - uh this statement now let me
267:11 - you know write this question in here
267:15 - all right
267:16 - write a program to take
267:20 - certain
267:22 - numbers
267:24 - and if
267:25 - the numbers
267:27 - are
267:30 - if the number
267:31 - is divisible
267:35 - just to it if the number is divisible
267:39 - by 2
267:40 - then we have to print
267:43 - divisible
267:45 - by
267:46 - 2
267:49 - and if
267:52 - it is divisible
267:55 - by you know 3
267:58 - then we have to print
268:04 - divisible
268:06 - by 3
268:08 - all right
268:10 - else all right or else if none of the
268:13 - condition matches right then we have to
268:15 - print
268:20 - not
268:21 - divisible
268:23 - by two or three all right so this is a
268:26 - very simple program all right you
268:27 - learned about operators all right
268:30 - you know how to perform you know uh
268:32 - uh how to perform remainder operation
268:34 - right now let's understand the logic
268:37 - first all right
268:38 - to check all right if the program
268:41 - is fully divisible all right see to
268:44 - unders understand this if a program uh
268:47 - to to know if a
268:48 - number if a number is fully divided
268:51 - we have to make sure that the remainder
268:53 - is zero if the remainder is zero then
268:55 - only all right then only
268:57 - we say that
268:59 - that particular division is you know is
269:02 - valid or it means it is fully divided
269:04 - that's when we call like like for
269:06 - example uh 4 divided by 2 in this case
269:10 - the remainder all right in this case
269:12 - the remainder is 0
269:15 - right but let's say again let's take an
269:17 - example five uh
269:19 - let's divide five divided by two
269:22 - in this case there will be one as a
269:24 - remainder and we can't call it divisible
269:27 - by five so divisible by two
269:29 - right so make sure that uh
269:33 - keep this in mind all right keep this in
269:34 - mind
269:35 - any pro any number that is you know that
269:38 - whose remainder is coming zero off like
269:42 - is coming zero after the division
269:44 - it is divided that by specific number
269:47 - all right so make sure you know that now
269:50 - you already know which which one is the
269:51 - division operator this one already this
269:53 - amp or this
269:54 - percentage operator or you can some
269:55 - module operator all right and to perform
269:57 - the division it's very simple let me
269:59 - show you first of all take a value that
270:01 - is end n
270:03 - let's uh as of now let's give you know
270:05 - let's give it 4 now if
270:08 - n
270:10 - percent is 2 alright that is we are
270:13 - how this is working we are taking out
270:15 - the remainder all right remainder by
270:18 - dividing n
270:20 - with 2 we are trying to take out the
270:21 - remainder then we are checking all right
270:23 - then we are checking if
270:26 - the
270:26 - resultant remainder is equals equals
270:30 - 0 or not if it is 0
270:32 - then we are going to you know print
270:35 - console.writeline
270:41 - divisible
270:42 - by 2. similarly
270:45 - similarly
270:46 - we are going to do the same thing with 3
270:48 - that is n divided in modulo 3
270:52 - equals equal 0
270:53 - if that works that then it is divisible
270:56 - divisible
270:58 - by you know um
271:00 - 3
271:02 - by 3 all right now if if none of the
271:06 - condition works all right if none of the
271:08 - condition works then i want to print out
271:14 - not
271:15 - divisible
271:16 - by
271:17 - you know by both
271:19 - two and three
271:20 - all right so now let's check this out
271:23 - all right let's check this out and how
271:24 - these things works see as 4 is div as
271:28 - the remainder all right as the remainder
271:29 - of 4 divided by 2 is 0 and it is
271:32 - matching the condition
271:33 - that's why it is returning divisible by
271:35 - 2. now let's try try out
271:37 - 9
271:38 - all right
271:40 - it is returning us divisible by 3 the
271:42 - reason is 9 is divisible by 3 when we
271:44 - divide 9 by 3 the remainder comes 0 and
271:47 - as
271:48 - the remainder remainder of the resultant
271:50 - division is 0 and it is
271:53 - equals equal 0
271:55 - that's why it is returning divisible by
271:56 - 3 all right it's as simple as that now
271:59 - you know now uh
272:01 - let's uh let's give one
272:04 - it is not divisible by 2 not divisible
272:07 - by 3 all right
272:10 - so that's why in this block it is
272:11 - returning us not divisible by both 2 and
272:13 - 3. so i hope you understand how we
272:16 - exactly use if and else you know if else
272:19 - if an else statement
272:20 - all right and i hope it is uh you know
272:22 - uh clear
272:24 - so
272:25 - yeah let's uh you know uh we can
272:28 - conclude all right we can conclude that
272:31 - if else if an else statement is also
272:34 - done
272:36 - all right now here comes two other
272:38 - statements all right very important all
272:39 - right
272:40 - means actually uh
272:42 - see
272:43 - you are going to use inline if if
272:46 - you want to assign you know it doesn't
272:48 - have
272:49 - extra conditions in there like only one
272:51 - single condition
272:52 - means only one if
272:55 - actually let's let's you know write the
272:56 - program first all right let's understand
272:58 - the program first then you will
272:59 - understand what i am trying to say
273:01 - all right
273:03 - so
273:04 - see
273:05 - you can uh
273:07 - you saw the you know the syntax of if
273:10 - else statement it's a bit big right it's
273:12 - a bit big
273:13 - now inline if not is uh
273:16 - uh
273:17 - is basically now inline of a basically a
273:20 - shorter version of effects all right
273:22 - it's the shorter version
273:24 - uh
273:26 - of if and else and it is you know mostly
273:28 - used uh you know it is mostly used or
273:30 - you can say it is more convenient to use
273:32 - when you assign assign some value to a
273:34 - variable depending on you know some
273:37 - condition all right it's so you it's
273:39 - more convenient to use in there all
273:41 - right rather than using it any uh or for
273:44 - taking any input or something like that
273:46 - all right so it's uh it's
273:49 - uh it's very convenient to use those
273:50 - statements while uh you know being in
273:52 - the variable
273:54 - so make sure you keep this in mind right
273:56 - now if i talk about the syntax the
273:58 - syntax is you know pretty
274:00 - simpler all right
274:02 - first of all
274:04 - there's the condition all right
274:07 - after that there's a question mark
274:09 - all right then here's a value all right
274:13 - and it will be assigned all right only
274:16 - if the condition is true and then here
274:19 - comes the colon all right
274:21 - and
274:22 - this value will be assigned if the
274:24 - condition is false it's just like if an
274:26 - else statement
274:27 - right
274:28 - let's say you know let's try it out
274:31 - let's try it out let's create a string
274:33 - variable alright let's say string
274:34 - statement
274:36 - and let's uh
274:38 - give a condition that is 4 greater than
274:39 - 2 all right
274:41 - now
274:42 - let's give the equation mark and let's
274:44 - write 4 is
274:46 - greater than 2.
274:48 - all right else
274:50 - else
274:53 - what we can do is 2
274:56 - is greater than
275:00 - let's say 1
275:06 - or uh just uh give me a second just give
275:09 - me let's you know let's uh
275:12 - change this whole statement all right
275:14 - change it will uh actually confuse you a
275:16 - lot let's change this whole statement
275:19 - uh let's say if 4 is greater than 2 then
275:22 - you can say 4 is
275:25 - assigned
275:26 - all right else
275:30 - you can write 2 is assigned
275:34 - all right
275:35 - let's make this simpler
275:37 - so here you can see that what i'm i'm
275:39 - trying to say right now
275:41 - also let's print the statement to see if
275:44 - everything is working right or not
275:50 - all right now let's try it out
275:54 - see it is telling us 4 is assigned
275:56 - because
275:58 - this condition is true and if this
275:59 - condition is true then only the
276:02 - first one first one statement will be
276:04 - assigned if the condition is false then
276:06 - the second one will be assigned let's
276:08 - change this a greater than sign to you
276:09 - know less than sign let's see
276:12 - see as this condition is false
276:15 - that's why it didn't assign the first
276:17 - statement it uh
276:18 - rather
276:19 - than assigning the first statement it
276:21 - assigned the second statement so that's
276:22 - how it works all right
276:24 - so it's just like if an else statement
276:26 - all right just in you know
276:28 - abbreviated form
276:30 - so i hope you are clear with inline f
276:33 - all right
276:34 - this uh this statement is very simple to
276:36 - understand
276:37 - now let's mark it as done and here comes
276:39 - our last one
276:41 - that is
276:42 - switch case statements
276:44 - all right
276:46 - see switch case now it's like you know
276:48 - pressing some switch if you press a
276:51 - switch up certain perform will um
276:53 - a certain you know certain function will
276:56 - uh performed will be performed and if
276:58 - you press on the switch um
277:01 - another set of functions will be
277:02 - performed right it's something like that
277:05 - all right now
277:07 - you can uh
277:08 - say all right
277:10 - see
277:12 - let me you know make it simpler for you
277:14 - the uh i can say that you know the
277:16 - switch statement is uh you know very
277:18 - similar to an if statement all right
277:21 - just that all right just that it does
277:24 - not you know work with a range of values
277:26 - all right it's simple as that it it's
277:28 - just that it doesn't needs any uh range
277:31 - of value it doesn't works with that
277:33 - all right
277:34 - it's it's
277:35 - a switch case statement now it requires
277:38 - you know um
277:40 - a case all right it requires a case all
277:42 - right which which you know is based on a
277:44 - single value all right it will be based
277:46 - on a single value and uh depending on
277:48 - the value of the variable
277:50 - all right it will be it will switch you
277:53 - know uh it will turn
277:54 - it will switch to some statement all
277:56 - right
277:57 - and the program will execute the correct
277:59 - block all right i know what this
278:00 - definition you know uh this this
278:02 - wordings might get a bit confusing all
278:04 - right i totally understand already when
278:06 - if i was uh in in your place i would
278:09 - also have got you know confused
278:12 - now to remove our confusion all right to
278:14 - remove our
278:15 - confusion
278:16 - let's code it all right let's
278:19 - code it
278:21 - first of all let's understand the syntax
278:23 - so it's very important to for us to
278:25 - understand the syntax okay
278:27 - see
278:28 - the very first thing all right that
278:29 - comes to us
278:31 - the very first thing that comes to us
278:34 - is
278:36 - which one
278:37 - can you guess
278:40 - switch
278:41 - all right
278:42 - in
278:44 - inside that switch you know inside that
278:46 - uh
278:48 - switch statement we
278:50 - pass a variable all right
278:53 - you pass a variable that would work as
278:55 - our choice all right
278:57 - and then we start you know two uh curly
279:00 - braces brackets
279:02 - and then we write a statement that is no
279:06 - case ah wait
279:08 - case all right and in that we pass some
279:10 - value
279:11 - and
279:14 - we give a colon all right and we say
279:16 - that bro do something all right
279:19 - do something and now see this choice now
279:22 - this choice will work as this value now
279:25 - if this choice all right if the value of
279:27 - this choice is similar to this value
279:30 - then this switch case statement will
279:31 - work all right and then we you know uh
279:34 - give another statement that is a break
279:36 - statement all right i would tell you
279:38 - what that uh what is that all right and
279:41 - what happens if you don't put that in
279:43 - there now here comes another case all
279:45 - right that is yeah
279:47 - let's give another value to all right
279:50 - and uh let's again say bro do something
279:54 - all right
279:55 - do something
279:57 - now again break
279:59 - now after that
280:00 - here comes default statement alright
280:03 - default is basically
280:06 - this default statement will occur
280:09 - if all right this default statement will
280:11 - occur
280:12 - if none of the you know none of the
280:14 - value works all right means none of the
280:17 - case
280:18 - works alright so this is
280:20 - the basic syntax
280:23 - right this is the basic syntax of switch
280:25 - case now
280:26 - there's no need you know there's no need
280:28 - to get confused
280:31 - all right there's no need to
280:33 - uh
280:35 - be confused let's you know let's
280:38 - create a
280:39 - a simple very simple grading system
280:42 - right like uh let me make you understand
280:45 - the logic in here basically what it will
280:47 - do now it will tell us all right
280:50 - we have to tell that
280:52 - uh which grade we got all right and then
280:55 - based on that grade it will tell us that
280:57 - the grade is good or not all right if it
281:00 - is good if it is bad it will tell us
281:02 - that all right so
281:04 - that is what we are going to code so the
281:06 - first thing i want you to create a
281:07 - variable all right that is
281:09 - care
281:10 - ch and
281:12 - assign it like let's say first for now
281:14 - let's assign it some you know value
281:16 - eight
281:17 - right now here what you have to do is
281:20 - write the switch statement and here pass
281:22 - the ch variable it will be work as our
281:24 - choice variable that i uh told you about
281:26 - right and in here
281:28 - right case alright and in that case give
281:30 - a single uh you know single colons and
281:34 - write a all right
281:36 - then if you want you can indent it then
281:38 - you know console.
281:40 - right line
281:42 - what i have to do
281:44 - as the grade is a
281:46 - i'm going to save very good right very
281:49 - good
281:50 - because you know the grade is really
281:52 - impressive
281:54 - right
281:54 - so now after that
281:57 - after that
281:59 - let's uh give another case that is case
282:01 - b
282:03 - now again write console.writeline
282:07 - we'll just going to write good all right
282:09 - b is also g grade b is also no bad
282:12 - all right so as we have defined
282:14 - two grades all right you can you can you
282:16 - know
282:17 - give more such grades in there all right
282:20 - you can add c grade you can add d grade
282:23 - all right you can get add e grade you
282:26 - can add f grade all right but for now
282:28 - for this example
282:30 - uh this this one is enough
282:32 - all right
282:34 - so see
282:37 - now
282:39 - let's give default all right one thing
282:41 - you would notice that i haven't uh you
282:43 - know
282:44 - uh gave the you know break statement all
282:46 - right i would show you why
282:49 - i'm actually wait let me write the break
282:51 - statement first because
282:54 - what will happen it will be more easy to
282:55 - make you understand how how this break
282:57 - statement is working let's give the
282:59 - break to every you know every particular
283:01 - step
283:03 - or you can say case
283:09 - all right now
283:11 - let's uh
283:12 - try and run it
283:14 - see as uh the you know as a grade is a
283:18 - it is retaining us very good now try
283:20 - with b
283:22 - it is telling us good now let's try with
283:24 - c
283:27 - it is telling us default why default
283:29 - because uh
283:31 - we haven't defined all right kc we
283:34 - haven't defined case c
283:35 - that's why it is uh going to the default
283:37 - block
283:38 - all right it's also you know very
283:40 - similar to if an else statement there's
283:42 - just a you know bit of difference now
283:44 - let's try and remove this break
283:46 - statements from there all right let me
283:49 - show you
283:50 - what is it exactly doing
283:54 - now let's let's start with a grade
284:00 - so here you can see
284:03 - it is giving us
284:05 - all right
284:06 - it is giving us some error or it cannot
284:09 - fall through from one case label case a
284:11 - to another all right in general all
284:14 - right in c sharp it is giving us error
284:16 - in java if you would code in java or any
284:19 - other language you will find that uh
284:21 - they are not skipping
284:23 - like uh
284:24 - after they are as i've stated uh a
284:27 - they printed the case a then without the
284:30 - break statement they are going to case b
284:32 - and without the
284:34 - break statement in case b they are going
284:35 - to default so
284:37 - that's why we use break statement in
284:39 - here of course in shop it's giving error
284:41 - but in java
284:43 - all right in java if you don't give
284:44 - break statement it will print like
284:47 - every other statement in there all right
284:50 - so that's why i hope you understood the
284:52 - reason why we give break statements
284:55 - right so
284:57 - yeah so make sure all right so make sure
285:00 - you understand alright you understand
285:02 - this concept uh very carefully all right
285:05 - because this concept is you know going
285:07 - to be
285:08 - very very very very useful all right and
285:11 - always remember this break statement now
285:13 - it it
285:15 - it is a jump statement alright statement
285:18 - is a jump statement it basically breaks
285:20 - the execution of after some condition is
285:22 - met all right you can understand that it
285:25 - like that all right
285:26 - so
285:28 - break statement is just
285:30 - breaks the work work like breaks the
285:33 - working of the statement right so this
285:36 - is it for uh this lecture all right see
285:38 - you in the next lecture thank you have a
285:40 - good day
285:42 - guys welcome to this lecture and in this
285:44 - lecture we are going to learn about
285:46 - loops all right uh see
285:49 - this is a very important concept already
285:51 - because we are going to uh use
285:53 - loops a lot all right we are going to
285:56 - use a loop or like loops a lot because
285:59 - whenever you will be developing
286:00 - something all right you uh you won't be
286:02 - like uh like if you don't want to do
286:05 - everything manually right you can loop
286:07 - through it all right for example if you
286:09 - are um
286:11 - what can i say let's say uh if you are
286:14 - let's say you uh like created an array
286:16 - all right you create an array i know you
286:18 - you might
286:19 - you you don't know the meaning of array
286:21 - as of now all right but that's totally
286:23 - okay i would uh like in in the next
286:25 - lecture only we are going to discuss
286:27 - arrays all right and for arrays we are
286:29 - going to uh
286:31 - need
286:32 - loops all right we have to understand
286:33 - the loops to like work with arrays right
286:38 - so
286:38 - see we can use loops in multiple ways
286:41 - like for example
286:43 - uh let's say uh we want to apply some
286:46 - materials all right
286:48 - so i i'm taking an example all right in
286:51 - terms of
286:52 - er like the application we are going to
286:55 - make during uh
286:57 - like after we learn euphoria right so
287:01 - the basic all right the basic
287:03 - understanding of
287:04 - the basic concept of looping is to loop
287:07 - through something all right look through
287:09 - something
287:10 - loop uh see
287:14 - the formal definition all right for loop
287:15 - would be loops are basically a way to
287:18 - you know iterate over something for
287:21 - finite or infinite number of times all
287:24 - right
287:25 - so
287:26 - let's say for an example
287:28 - all right
287:30 - let's say for an example
287:33 - do you remember uh i'm not sure if this
287:35 - happened with you uh but this happened
287:37 - with me a long time back i was in like
287:40 - you know in class fifth and at that
287:42 - point of time uh i was in uh like i i
287:46 - learned my first programming language
287:48 - all right that was q basic all right in
287:50 - class fifth i learned my first
287:52 - programming language and uh
287:55 - you know uh i got punishment at that
287:57 - time i was like uh like you know
288:00 - very
288:01 - you know what can i say a very naughty
288:02 - kid i used to like you know disturb my
288:05 - friends and because of that uh what i
288:08 - got it was uh they the teacher punished
288:10 - me told me that you have to write
288:12 - something i exactly don't remember i
288:14 - think it was i'm sorry you have to write
288:17 - i am sorry a hundred times all right and
288:20 - uh you know
288:22 - at that point of time uh
288:24 - i knew how to use for loops right i i
288:26 - understood the concept of follow-up i
288:28 - understood uh how to use it so then it
288:31 - came to my thought let's why not see the
288:34 - teacher is you know teacher is trying to
288:36 - tell us that
288:38 - you know
288:38 - uh you have to write i am sorry a
288:41 - hundred times
288:43 - right
288:44 - and you know teacher just wants it a
288:47 - hundred times she didn't told me how to
288:50 - write like i have to write it manually
288:52 - or i can you know use some dynamic way
288:54 - like you using a for loop tighter to
288:57 - iterate over 400 times and
289:00 - print right uh print i'm sorry right so
289:04 - what i did is all right what i did
289:07 - i basically
289:09 - i uh use the technique of for loop all
289:12 - right to you know iterate hundred times
289:15 - i use the technique of follow titrate
289:17 - hundred times and print
289:19 - uh i'm sorry a hundred times all right
289:21 - it like it uh completed in four to five
289:24 - lines and uh after i shown it to the
289:26 - teacher the teacher you know scolded me
289:28 - a lot all right and then
289:30 - gave me uh then told me that you have to
289:32 - write
289:34 - i'm sorry 200 times uh
289:37 - for you know manually
289:39 - and
289:40 - after that i never tried tried this with
289:42 - any teacher all right after that
289:44 - actually i never got punishment from
289:46 - class six so it never happened so uh in
289:49 - class fifth this incident was you know
289:51 - was a very funny incident for me because
289:53 - that was the first time i actually used
289:55 - for loop to save myself from you know
289:57 - writing the whole thing so that's the
289:59 - concept of loops all right
290:01 - loop actually helps us to you know
290:03 - reduce
290:04 - all most of the work right like for
290:06 - example
290:07 - uh right now i can give you all right
290:10 - hey brother uh write you know hello
290:13 - world a hundred times all right so you
290:15 - right now you don't know the concept of
290:17 - loops but you are a very obedient
290:19 - student uh and you will start writing
290:22 - like a console
290:23 - dot uh
290:25 - right line all right
290:27 - hello world right you will be writing
290:29 - that uh
290:30 - a hundred times
290:32 - right you'd be writing that
290:34 - a hundred times all right and that
290:36 - that's going to take a lot of time right
290:38 - that's going to take a lot of time so
290:41 - what we can do is we can use you know a
290:43 - loop all right we you we can use a loop
290:48 - to actually do it for us a hundred times
290:51 - all right so that
290:52 - it uh the computer will only perform the
290:55 - you know the function we don't have to
290:56 - do anything currently we are doing it
290:58 - manually but with the with the loop we
291:00 - can
291:01 - like
291:02 - make our computer do the you know write
291:05 - the hello world all right so i will show
291:08 - you how to do that but before that let's
291:10 - understand what a loop so loops
291:11 - basically are a way to iterate over
291:12 - something for finite or infinite amount
291:14 - of time all right
291:17 - so
291:18 - you know
291:19 - first uh let's understand how many types
291:21 - of loops are there all right
291:23 - see there are um three types of lopez
291:26 - all right that is let's first write it
291:28 - down in here all right the first type
291:30 - all right the very common used is for
291:33 - loop
291:34 - all right then another one is while loop
291:38 - and the third one is very least used all
291:40 - right
291:41 - actually i
291:43 - really don't use this loop anymore like
291:45 - i don't need it all right but
291:47 - you have to
291:49 - you have to have an idea about do while
291:50 - loop right
291:52 - so me that's why i'm teaching it right
291:54 - now although i don't think you will also
291:56 - be using do while loop in your career
291:59 - yet uh but uh i i never use like you
292:02 - know whenever developing
292:04 - applications i never use do i loop it it
292:07 - never came handy to me whereas i used
292:10 - for loop and while loop a lot right so
292:14 - that's why uh i'm going to teach you all
292:16 - the three loops today all right and
292:18 - we're going to start with uh fall all
292:21 - right see remember
292:23 - the concept of looping is sim simple all
292:25 - right concept of looping is simple it
292:28 - just tells that we are you know uh
292:30 - repeating ourselves all right looping
292:32 - means repeating all right we or looping
292:35 - totally means repeating ourselves over
292:37 - something right so that's the concept of
292:39 - looping
292:40 - but there are three different ways
292:43 - to loop all right that is one is for
292:45 - loop another one is while loop another
292:47 - one is do value all right and i would
292:50 - tell you all right when to use for loop
292:52 - and when to use while loop all right
292:55 - so
292:55 - make sure to you know listen to this
292:57 - lecture carefully
292:59 - so first of all let's understand the
293:01 - syntax of follow the syntax of for loop
293:03 - is very simple all right so the first is
293:06 - we have to write 4 all right inside the
293:08 - 4 we have to give
293:09 - brackets and
293:12 - the first all right the first would be
293:14 - you know first statement we have to
293:15 - write is start
293:17 - then
293:18 - we have to give a semicolon then we have
293:20 - to give a condition all right
293:22 - condition that for uh how many steps we
293:25 - want to run means for for how many times
293:28 - we want to run right
293:30 - now the next would be alright the last
293:32 - one would be steps all right that is how
293:34 - many steps we want to take steps means
293:36 - how many you know let's say if we give
293:38 - step as 2 then let's say we are trying
293:41 - to uh print
293:42 - numbers from 1 to 10 right so let's say
293:46 - if we give step as 2 then it would only
293:49 - uh like you know if we start from 0 then
293:52 - 0 plus 2 let's say it would give us 2
293:54 - then 4 then some like it would give us
293:57 - like this all right then inside that
294:00 - would be printing uh like it would we
294:03 - would be instructing the program to do
294:05 - something all right so this is
294:07 - basically the syntax of follow
294:10 - all right now
294:12 - i told you you know my story of how i
294:15 - was punished right now let's try to
294:18 - implement that punish like
294:20 - let's try to implement that all right
294:22 - so for
294:24 - you have to declare a variable right so
294:26 - i'm going to declare a variable within
294:28 - the for loop only so for i
294:31 - equals
294:32 - 0 yeah it's uh and remember that i'm
294:34 - starting the value of i from 0 all right
294:37 - then i want to go till i
294:39 - less than equals 100 i want to go
294:42 - till 100 then
294:45 - i have to give how many steps i want to
294:48 - increment all right how many steps i
294:50 - want to go with
294:52 - so
294:52 - i plus plus
294:54 - means
294:55 - 1 all right
294:56 - every step will be incremented by one
294:58 - now if we if we want to you know uh
295:01 - let's say if we want to increment every
295:02 - step by two what we can do is plus sorry
295:05 - plus equals two all right but for now
295:07 - plus plus is totally fine with us so now
295:10 - what you can write console
295:13 - dot
295:14 - right line
295:18 - hello world all right so teacher told us
295:21 - that
295:22 - student
295:23 - write hello world instead of i'm sorry
295:26 - all right so now let's see if uh
295:29 - it is printed hundred times or not all
295:31 - right so
295:33 - you know there's not really a way to you
295:36 - know we are not able to count it right
295:37 - so let's uh give a plus sign and you
295:40 - know
295:41 - add the i in here let's see now yeah so
295:44 - here you can see that it's starting from
295:45 - zero and uh it is going from hundred
295:48 - going up to hundred now here you can see
295:50 - as it is starting from zero the total
295:52 - number will be 101 all right because if
295:55 - one is starting from here then zero is
295:57 - another extra one so it will be 101
295:59 - times all right so to fix that we can
296:02 - actually start the loop from one
296:05 - or what we can do is we can you know
296:08 - mark it uh like give the condition as
296:13 - i less than 0 then what will happen it
296:15 - would start from 0 and
296:17 - end up to 99 so it would be total 100 it
296:21 - will be total 100 times we looped all
296:23 - right so that's how we you know work
296:26 - with for loops
296:28 - so for loop is a way to loop through all
296:30 - right some sort of you know
296:32 - some sort of condition now always
296:34 - remember we use all right we use for
296:37 - loop
296:38 - all right we use for loop when we know
296:40 - exactly how many
296:41 - uh how many iterations do we want like
296:44 - right so for in this example
296:47 - we knew all right in this example we
296:49 - knew that we are going to need 100 all
296:52 - right we are going to need 100
296:54 - iterations so that's what we did we
296:57 - uh go we did 100 iterations in the
297:00 - program to print hello world so that's
297:03 - when we use follow all right so now as
297:06 - we have understood the concept of for
297:07 - loop
297:09 - let's you know let's try uh writing some
297:13 - programs let's try solving some problem
297:16 - program right i want you you guys to try
297:18 - it first all right so pause the you know
297:20 - pause this particular video after i give
297:22 - you the question and try it by yourself
297:24 - then uh
297:25 - come to this video and see the solution
297:27 - all right so i'm writing a comment in
297:28 - here let's uh
297:30 - write a program to print
297:34 - table of a number
297:38 - using
297:39 - for loops all right so what you have to
297:41 - do is you have to code a solution all
297:43 - right which will be able to print table
297:47 - tab
297:48 - uh
297:48 - all right it will be able to print
297:51 - table of that number all right
297:53 - so make sure you do that and uh right
297:56 - now pause the video and try it by
297:58 - yourself it's okay if you are not able
297:59 - to do it all right it just needs some
298:01 - more practice
298:02 - after uh practicing you will be very
298:04 - familiar with the concept of following
298:06 - all right so
298:09 - let's try it out now
298:10 - all right so for i'm going to implement
298:12 - it so for
298:14 - c
298:16 - first of all uh the very first thing i
298:17 - want you to do is to declare a variable
298:19 - all right that is in
298:22 - n alright this would be the number all
298:24 - right that is i want to create a table
298:26 - of two all right so now what i want
298:29 - is
298:30 - for
298:31 - int i
298:32 - because i want to start from 0 all right
298:35 - and i want to
298:36 - end up till
298:38 - 12 all right
298:40 - and i plus plus
298:41 - why because we aren't skipping any step
298:43 - we are just incrementing by one all
298:45 - right we are just we just want one step
298:47 - each
298:48 - all right
298:49 - now
298:52 - create another variable all right that
298:54 - is int
298:56 - let's uh you know let's name it f
298:58 - all right and uh
299:00 - what you have to do is
299:02 - multiply all right this value of n all
299:05 - right
299:06 - with i
299:07 - see remember how this is working
299:11 - first of all in the first iteration
299:13 - the first iteration
299:16 - two is multiplied by zero
299:18 - and the outcome is zero in the second
299:20 - iteration all right how it is reaching
299:22 - to the second iteration which is
299:23 - reaching to the second iteration by
299:25 - incrementing this i by 1 all right so
299:28 - now in the second iteration i will be 1
299:31 - all right i will be 1 and 2 will be
299:34 - multiplied by
299:35 - 1 and in the again in the third
299:37 - iteration it will be incremented and it
299:39 - will be go to 2 all right then again 2
299:42 - will be multiplied by 2. so it will be
299:44 - working like this all right so i hope
299:45 - you understand how
299:47 - how this program will be working all
299:49 - right then console
299:52 - dot
299:54 - write line
299:56 - and
299:57 - print
299:58 - the value all right and also make sure
300:01 - you know
300:04 - write it like this
300:07 - so
300:09 - just wait in
300:10 - let n plus
300:13 - given asterisk in here all right
300:16 - and uh
300:18 - plus i
300:21 - it's it's just a you know i'm just
300:23 - maintaining a decrement here all right
300:25 - it means i'm just actually let's leave
300:27 - this thing all right we will try this
300:29 - one later on
300:30 - first of all let me show you if it is
300:32 - printing the table of two or not yeah it
300:34 - is
300:35 - of course printing so two zeroes are
300:36 - zero two ones are two two two the four
300:38 - two three the six two fours the eight
300:39 - two fives are ten two six are twelve and
300:41 - so on it is going up to two twelve twos
300:44 - at twenty four right
300:47 - so we have successfully printed the
300:49 - table of two now let's uh you know print
300:51 - the table of 12 let's see if it is able
300:53 - to do it or not see 12 ones are 12 12 to
300:56 - the 24 12 36 and it is going up to 12 12
301:00 - 144 so
301:03 - that's how it is working all right
301:06 - that's how our for loop is working first
301:09 - it is remember it is iterating
301:14 - till the condition is met all right and
301:16 - for us the condition is 12. we exactly
301:18 - know how many times we want to iterate
301:20 - we know that we want to alter it 12 10
301:22 - that's how we set uh that's how we
301:25 - actually set up you know the condition
301:27 - so that it iterates up to 12
301:30 - all right
301:32 - now
301:34 - for each iteration it is incrementing
301:36 - the value of i that is
301:38 - in the first iteration the value of i is
301:40 - 0 and you know 12 is multiplied by 0 and
301:43 - it is printed and in the second
301:44 - iteration when it goes to the second
301:46 - iteration the value of i is incremented
301:49 - all right the value of i is incremented
301:52 - and this 0 is changed
301:54 - uh to 1 all right so and then uh again
301:59 - in that iteration
302:02 - 12 into 1 equals 12 right so that's how
302:05 - this whole thing is working all right
302:08 - so i hope you understand how this worked
302:11 - right
302:12 - now i hope you know
302:14 - follow this uh the concept of follow-up
302:16 - is cleared because right now i'm going
302:19 - going to go to a while loop
302:21 - so make sure if you are not uh you know
302:23 - not clear with the concept of for loop
302:25 - make sure you uh
302:28 - practice it a little bit all right watch
302:30 - the
302:31 - portion of for loop
302:33 - all right the one i taught right now so
302:35 - watch that again practice for loop
302:37 - wallet then only go to while loop all
302:38 - right
302:40 - so make sure you do that
302:44 - so now let's uh you know remove this
302:46 - whole uh syntax thing and
302:49 - let's mark for loop as
302:51 - done all right now here we uh go to the
302:54 - follow
302:56 - all right
302:59 - so
303:03 - what is follow why look sorry what is y
303:05 - loop yeah
303:07 - see you can say while loop is a brother
303:09 - all right
303:11 - brother of for loop alright it is also
303:13 - used for looping all right
303:15 - but
303:17 - the thing is
303:18 - all right
303:20 - while loop all right while loop
303:23 - runs all right
303:25 - while loop runs
303:27 - till
303:28 - the condition is false
303:31 - all right it will run till the condition
303:33 - is false
303:34 - and this proves
303:36 - one of our concept that for loop is only
303:39 - used well the for loop is only used
303:43 - when all that for loop is only used
303:46 - if we don't know how many iterations we
303:50 - want all right
303:51 - that's when follow is used
303:56 - all right as simple as
303:59 - that
304:02 - all right so now let's uh you know learn
304:05 - about the syntax
304:07 - so let me comment this out all right so
304:10 - there's the basic syntax
304:12 - we have to you know first uh declare uh
304:15 - a variable all right it's better to
304:17 - declare a variable at first then you
304:19 - know uh write the while all right and in
304:22 - here the condition will go on all right
304:24 - actually this you know this variable is
304:26 - not a part of
304:28 - uh the syntax but i'm showing you
304:30 - because you would be needing it all
304:32 - right then curly braces and inside that
304:35 - you have to you know alright do
304:38 - something
304:42 - all right
304:44 - so that's that is what the syntax of
304:46 - fault while loop is all right now you
304:48 - know uh i told you about the whole hello
304:51 - world example let's you know try to
304:53 - implement it so first of all i want you
304:55 - to declare a variable all right
304:58 - in time
304:59 - equals you know zero it should start
305:01 - from zero all right and give it a
305:03 - condition while
305:05 - all right
305:06 - while i is less than equals hundred all
305:09 - right i is less than equals hundred
305:12 - i want to print hello world
305:15 - all right i want to print
305:17 - hello world
305:25 - now one more thing all right in for loop
305:27 - remember how we were incrementing the
305:30 - value right do you remember that how we
305:33 - were incrementing the value by i plus
305:35 - plus
305:36 - similarly in here also we have to do
305:38 - something and we have to do that after
305:41 - all our statement is done all right that
305:43 - is for now our only statement is
305:45 - sponsored our heart right line and
305:48 - at the end we are going to write i plus
305:50 - plus
305:51 - all right
305:52 - now i will i will let you know what will
305:55 - happen if you don't give i plus plus but
305:57 - for now all right for now let's see
306:01 - what happens if we give it all right
306:02 - let's see
306:03 - uh the basic example
306:07 - see
306:08 - it is you know printing hello world
306:10 - till 100 all right it is printing hello
306:13 - world till 100
306:14 - and it is stopping when the condition is
306:17 - becoming false all right
306:20 - it is stopping like uh say uh like see
306:22 - when it reached 100 when it reached 100
306:25 - after when it was go it was going to 101
306:28 - as the condition is not meeting as 101
306:31 - is greater than 100
306:33 - it stopped looping all right so that's
306:35 - how it is working so let's understand
306:37 - first of all we declared a variable
306:39 - declared a basic uh you know a basic
306:41 - variable
306:42 - all right we declared a variable i
306:45 - then we created a while loop
306:47 - in the while loop there's a condition
306:49 - i less than equals hundred now this
306:51 - condition
306:52 - will be
306:53 - like
306:54 - what can i say
306:56 - this condition is responsible all right
306:58 - for executing this particular line
307:00 - console.writeline
307:02 - all right and then
307:04 - we are going i plus plus that is
307:07 - incrementing the value of i by 1 all
307:09 - right
307:11 - that's what we are doing
307:13 - let's say if we
307:15 - you know let's say if we uh
307:19 - remove this i plus plus let's see what
307:20 - will happen
307:25 - see it uh you know this uh
307:28 - particular website now sort of crashed
307:31 - for for a moment like it you know it uh
307:33 - not exactly crash but you know uh
307:36 - what can i say to freeze or it freeze
307:38 - for a moment
307:40 - all right and here you can see the val
307:42 - you can't everything in here is zero all
307:44 - right everything in here is zero and at
307:45 - the end has a error that
307:48 - range error
307:50 - all right range error max buffer length
307:52 - exceeded that's because only that's
307:55 - because
307:56 - we ran into an infinite loop
307:59 - all right
308:00 - means it it is a never-ending loop it
308:02 - won't end ever all right that's why
308:05 - uh that's because we didn't give i plus
308:08 - plus the reason is what role is i plus
308:11 - plus playing is it is incrementing the
308:13 - value of i all right like
308:16 - for the first order for the first
308:18 - iteration
308:19 - it perform this particular thing then we
308:21 - are incrementing to one all right so
308:24 - then y is the second i uh means then one
308:27 - all right then one is the second
308:28 - iteration in the second iteration means
308:30 - the second iteration completed we
308:32 - incremented the value of i now one has
308:34 - gone to two so like this all right like
308:37 - this
308:38 - we are uh working on the for loop all
308:41 - right
308:42 - so if you don't give the i plus plus
308:45 - then what will happen
308:47 - then what will happen
308:50 - if we don't give the i plus plus then it
308:51 - will run into a
308:53 - infinite loop all right and
308:56 - of course we don't want that so that's
308:58 - how a while loop works all right so
309:01 - i hope you are clear with the concept of
309:04 - while loop
309:05 - all right and also one more thing we can
309:07 - you know we can write this i plus plus
309:10 - 2i plus equals 1 i plus equals to let's
309:12 - try it out with i plus equals 2 also
309:15 - let's see what happens so you can see
309:16 - that
309:17 - it is iterating even number of times
309:19 - like it is iterating half the number of
309:21 - times 100
309:23 - so that's how it is working all right so
309:26 - that's how we you know code uh you know
309:28 - for loop
309:30 - all right now
309:33 - uh let's all right
309:35 - remember the uh program which i i taught
309:39 - you like to print out a table of
309:42 - a certain number right we are going to
309:44 - do the same thing with with while loop
309:46 - all right so the very first thing i want
309:48 - you to understand is
309:49 - write a variable all right n the that
309:52 - would be containing the number then
309:56 - right all right
309:58 - write a variable i it would be the
309:59 - counter counter variable means uh the i
310:01 - that we had taught you all right it
310:03 - would be incrementing the value after
310:05 - each successful statement right so
310:08 - now go to
310:10 - while
310:11 - i all right just wait
310:14 - while
310:15 - i
310:16 - all right is
310:18 - less than equals 12 all
310:20 - right what i want
310:23 - i want is
310:25 - to
310:26 - multiply
310:28 - all right multiply
310:31 - multiply the number
310:33 - n
310:34 - with i all right then after that i want
310:37 - to print it
310:39 - all right i want to print it
310:41 - console.writeline
310:45 - i want to print it then after printing
310:47 - it i want i am going to increment the
310:49 - value
310:50 - all right i'm going to increment the
310:52 - value by one
310:54 - so now let's see
310:57 - cool
310:58 - so we got the same output that we got
311:01 - for for loop right so that's how the it
311:03 - is working all right so i hope
311:06 - uh you are very clear with the concept
311:08 - of for loop and while loop all right
311:11 - so are you all i guess you also know how
311:13 - when when to use
311:15 - which right so we use for loop when we
311:17 - exactly know how many iterations we want
311:19 - and we use
311:21 - for sorry
311:22 - derive sorry sorry i guess i messed it
311:24 - up so again we use for loop when we know
311:28 - how many iterations we want we use while
311:32 - loop when we don't know all right when
311:34 - we exactly don't know how many
311:35 - iterations we want so that's when we use
311:38 - for loop all right and a for loop
311:40 - statement stops working when the
311:43 - condition
311:44 - know when the condition gets to false
311:47 - all right so always remember that
311:51 - now here comes our last looping
311:53 - statement all right
311:54 - and uh the least
311:56 - used ones
311:58 - all right
312:01 - this is
312:02 - known as do while loop all right it's a
312:04 - see do while loop now is uh you know
312:07 - very similar all right it is very
312:09 - similar to uh
312:11 - what can i say a while loop all right it
312:14 - is very similar to why look just there's
312:16 - a one difference all right
312:18 - in while loop
312:19 - if the condition is false from the
312:21 - starting point now it won't even execute
312:23 - a single statement
312:25 - but in do while loop even if the
312:27 - condition is false all right it will all
312:30 - right even if the condition is false
312:32 - it will execute once
312:35 - all right it will at least execute once
312:40 - all right so let me first uh make you
312:43 - familiar with the concept of do value
312:47 - means the syntax of develop actually so
312:49 - i hope you are familiar with the concept
312:50 - of you know do while loop
312:53 - so do
312:55 - first of all you need to write do then
312:56 - curly braces
312:58 - all right
312:59 - inside the curly braces you have to you
313:00 - know
313:04 - go for uh
313:06 - writing the you know particular code you
313:07 - want to give then you have to give a
313:09 - while statement in here
313:12 - then the condition in here to uh to be
313:15 - executed all right
313:16 - so that's what
313:18 - the syntax is
313:19 - it's a bit weird syntax right i know i
313:22 - know so now what you have to do is
313:26 - define i variable
313:27 - [Music]
313:29 - all right see we are going to uh you
313:31 - know write the same example we did last
313:33 - time that is the hello world one so
313:36 - then
313:36 - write do
313:39 - write do all right then console
313:43 - dot write line
313:46 - hello world
313:51 - then i'm going to increment the count or
313:53 - it means increment the value of i i plus
313:56 - by i plus plus or you can also do i plus
313:58 - equals 1 all right then in the while all
314:00 - right i'm going to give the condition
314:03 - i less than equals no 100
314:07 - and then semicolon
314:09 - now let's try to run it
314:13 - so here you can see
314:15 - we actually
314:16 - got
314:17 - the hello world now to verify that if we
314:20 - actually ran 100 times or not i'm going
314:21 - to you know
314:23 - add i to the
314:25 - equation so now here you can see
314:28 - it has ran 100 times
314:30 - now
314:31 - you know what i told you just uh a few
314:34 - seconds ago that
314:35 - even if the condition is fall from the
314:37 - starting point do while loop will at
314:39 - least execute once all right
314:41 - so you know let's uh
314:43 - let's verify it
314:45 - all right
314:47 - let's verify it
314:51 - let's give
314:52 - if the condition is greater than equals
314:54 - 100 all right if the value of i is
314:56 - greater than equals hundred and of
314:57 - course the condition is false so here
314:59 - you can see here you can see
315:02 - with being all right even though the
315:04 - condition falls it at least executed
315:06 - once all right
315:08 - so that's what all right
315:12 - that's what
315:13 - i do that's what a difference between
315:15 - dual and while loop is all right and
315:18 - see you won't be using this uh do while
315:20 - loop much i'm very sure of that because
315:22 - i even like i've been uh like
315:26 - using unity engine for almost four years
315:29 - yeah so it's been almost i started in
315:31 - 2019 and it's been almost uh four years
315:34 - i've been using unity engine and uh
315:37 - it's been more like almost two years all
315:39 - right i guess two to three years i have
315:41 - been uh
315:42 - doing augmented reality development
315:46 - all right so
315:48 - here's the thing all right
315:51 - i have never used while loop all right i
315:53 - have never used while loop while
315:55 - developing
315:56 - uh games or ar applications so
315:59 - maybe in your case you might face uh you
316:02 - know some moment where you have used uh
316:04 - where you
316:05 - should use or can use do i look so it's
316:07 - totally totally okay all right but in my
316:10 - case i never used uh do while loop in my
316:12 - you know development journey so
316:15 - yeah that's it
316:17 - now
316:18 - here's something you know
316:20 - last alright here's the last uh
316:23 - concept we are going to learn in the in
316:26 - this conditionals
316:27 - oh sorry not in this condition i guess i
316:29 - forgot to change the name sorry i'm very
316:31 - very sorry so i'm going to change the
316:33 - name
316:35 - so uh in this looping all right in this
316:37 - loop concepts we are going to learn this
316:41 - last thing that is jump statements all
316:42 - right there are multiple jump statements
316:44 - c sharp like there's go to there's break
316:47 - there's a continue statement then there
316:50 - is return statement all right then there
316:51 - is throw statement but in this
316:54 - particular lecture we are going to learn
316:55 - about only two of them
316:57 - that is continue and break statement all
317:00 - right so
317:01 - they are very simple all right jump
317:03 - statements basically now they are a
317:05 - statement all right jump statements are
317:06 - basically a statement that instructs
317:08 - uh the flow of a programmer that
317:10 - instructs the program to deviate from
317:13 - its normal flow sequence and jump to
317:14 - another line of code all right so jump
317:16 - statements are commonly used in loops
317:18 - and other control flow statements all
317:19 - right you will also you you know use
317:22 - this in switch case statements
317:24 - often in uh
317:25 - if else statements alright so let's see
317:27 - what are these
317:29 - so
317:31 - first of all let me uh show you
317:34 - let me tell you which uh statements we
317:36 - are going to learn today all right that
317:38 - is break
317:39 - all right we are going to learn about
317:40 - break and continue
317:42 - all right we're going to learn about
317:44 - break and continue so let's implement it
317:46 - so i'm going to use for you for this
317:47 - already you can try out with while loop
317:49 - do i loop anything you want all right so
317:51 - i'm going to create a follow alright i'm
317:54 - going to iterate you know i trade this
317:56 - for loop over
317:57 - up to 10 all right i'm going to iterate
317:59 - this follow up to 10.
318:03 - um
318:05 - all right now
318:07 - what i want to give a condition all
318:09 - right
318:11 - let's say
318:13 - i want to print i'm
318:15 - i'm printing all right all
318:17 - all the numbers in here so i'm going to
318:19 - print all the numbers in here and now i
318:20 - what i want if all right
318:22 - if uh the i if i reaches to 7 all right
318:26 - if i reaches to 7
318:29 - what i'm going to do is all right if i
318:31 - reaches to seven what i'm going to do is
318:33 - i'm going to break all right
318:35 - i'm going to break so let's see if this
318:37 - works or not
318:40 - see
318:41 - it didn't print it it broke it broke the
318:44 - program all right after i reached to
318:47 - seven
318:47 - it broke the program all right
318:51 - so that's what is it it is doing now
318:55 - basically uh break statements now after
318:58 - reaching some point a break statement
318:59 - helps us to terminate the whole program
319:02 - all right that's the whole point of
319:03 - break all right
319:05 - that's the whole point of break
319:06 - statement now here comes continue
319:08 - statement all right
319:11 - see continue statement is a bit
319:13 - different it will actually skip that
319:14 - particular value and move to the next
319:17 - value
319:18 - let me show you
319:20 - all right just give me a second
319:26 - so you guys might be thinking all right
319:29 - that i told you that continue statement
319:31 - skips some part right it skips some part
319:35 - and uh then moves to the next one
319:37 - alright but here in the output it didn't
319:39 - happen
319:40 - right
319:41 - because all right
319:43 - because
319:44 - here you can see
319:46 - before the if statement
319:48 - this uh console.writeline is being
319:50 - executed so
319:52 - in this case
319:53 - it already had printed seven
319:57 - then how is it going to skip if it has
319:59 - already printed it
320:01 - right so
320:03 - that's why to actually use the continue
320:06 - statement in this case what we do is we
320:10 - first of all we check for the condition
320:12 - and then
320:14 - we write console.writeline and now here
320:16 - you can see
320:18 - that we are able to print up to 10 by
320:20 - skipping already by skipping
320:23 - number seven
320:24 - all right
320:25 - so
320:26 - that's how this whole looping
320:28 - works all right and i hope
320:30 - this concept is very clear to you all
320:32 - right so
320:33 - yeah that's it for this lecture so see
320:36 - you in the next lecture thank you
320:39 - hey guys welcome to this lecture and in
320:41 - today's lecture we are going to learn
320:43 - about arrays all right arrays is a very
320:45 - important concept all right it's a very
320:48 - important concept in c sharp or any
320:49 - other programming language so uh like
320:52 - buckle up your belts and
320:55 - see tightly because
320:57 - it's really important for you to
320:58 - understand uh
321:00 - the concept of arrays all right because
321:02 - uh
321:03 - when uh see at this stage all right
321:06 - at this stage in the beginning stage you
321:08 - might
321:08 - have very less use cases for array even
321:11 - actually in the beginning stage also
321:13 - you'll be using arrays more often all
321:15 - right then you know
321:18 - so
321:18 - what i want to say is let's say take for
321:21 - an example in augmented reality only all
321:23 - right we
321:26 - we use arrays in a lot of things all
321:28 - right we can we like in plain detection
321:31 - when we want to like you know uh let's
321:33 - say
321:34 - we want to
321:36 - place all right place multiple objects
321:38 - into the real world all right means in
321:40 - marketless ar whenever we want to try to
321:43 - let's say
321:45 - place multiple objects in the real world
321:47 - we
321:48 - create an array of this object so that
321:50 - we can uh
321:51 - you know place them in the real world
321:53 - all right so uh you are going to use
321:56 - arrays in
321:58 - everywhere all right so it is one of the
321:59 - very important concept
322:01 - so
322:02 - let's dive into this topic all right
322:05 - without waiting anymore so see in
322:07 - general when we store values
322:09 - we use a variable all right
322:12 - but there's a problem all right
322:15 - the problem is the problem that comes
322:17 - with it is that we can only store one
322:20 - single
322:21 - one single value
322:23 - all right
322:25 - we can only store one single value we
322:27 - can't store multiple values all right
322:30 - and that's a problem if arrays or ratif
322:33 - arrays or lists or
322:35 - uh they wouldn't have been there now
322:37 - then uh
322:38 - we wouldn't have been able to you know
322:41 - store multiple values in a variable all
322:43 - right so what arrays does is
322:46 - arrays
322:47 - actually enables us right arrays
322:49 - actually enables us to store numerous
322:51 - number of value of any data type already
322:54 - it can be of string it can be of integer
322:56 - it can be of double it can be a float
322:58 - all right it can be of care
323:00 - so they
323:02 - help us already provide us
323:04 - uh
323:06 - a technology so that we could not we
323:09 - could store multiple values all right we
323:11 - can store multiple values within one
323:12 - single variable all right so that's how
323:15 - we use an a sorry that's what is an
323:18 - array is
323:19 - an array in simple words all right an
323:22 - array is a collection of data all right
323:25 - an array is simply a collection of data
323:29 - all right now
323:31 - as we have learned about what actually
323:32 - array is let me tell you about the
323:34 - agenda of today's lecture so today we
323:36 - are going to be uh going through the
323:38 - very basics of array all right that is
323:40 - we'll be learning how to initialize an
323:42 - array then uh would be
323:44 - uh learning how to access values within
323:46 - an array all right then it would be
323:47 - learning about some different different
323:49 - methods
323:50 - all right available in in uh an array
323:54 - all right so let's get started so the
323:56 - very first thing is that we have to
323:58 - understand how to uh you know
324:02 - implement an array all right see there
324:04 - are two ways of uh implementing an array
324:06 - let me uh first of all
324:08 - not in comments wait so let me show you
324:11 - all right there are two ways one is a
324:12 - dynamic way and the one is a static way
324:15 - all right i would tell you why they are
324:17 - called those all right first of all
324:19 - let's try out the dynamic way
324:21 - so
324:22 - the first thing all right see whenever
324:24 - you declare variable how do you do that
324:26 - so you can say into val equals 12 right
324:30 - you declare a variable like that now
324:32 - all
324:33 - when creating an array or when creating
324:36 - an array
324:38 - make sure all right
324:40 - that you don't miss the square bracket
324:42 - wait to put the square brackets you have
324:44 - to put the square brackets after end
324:46 - variable
324:47 - all right you have to put the square
324:49 - brackets after in variable after that
324:53 - this variable all right this variable
324:55 - you created would be considered an array
324:58 - all right it will be considered a
325:01 - a variable that can store arrays all
325:03 - right now to store arrays what we have
325:06 - to do is open curly braces all right and
325:09 - within that curly braces
325:11 - put some values all right
325:14 - 2 1 6 let's say 3
325:16 - 4
325:17 - all right so now let's run it and let's
325:20 - check whether uh it's returning us any
325:23 - error or not all right so here you can
325:25 - see it is uh telling us your program
325:27 - didn't did not output anything all right
325:30 - don't worry about that alright because
325:32 - we actually haven't printed anything i
325:33 - would show you how to you know how to
325:35 - print each and every uh value within an
325:38 - array right so don't worry about that
325:41 - so this is one way all right this is one
325:44 - way of you know
325:47 - initializing or creating an array and
325:49 - this is known as dynamic array all right
325:55 - now
325:56 - another way around all right in creating
325:58 - array is you have to again follow the
326:00 - same thing that is uh int square
326:02 - brackets then give the variable name all
326:05 - right after that
326:06 - all right
326:08 - after that what you have to do is you
326:09 - have to write a new keyword all right
326:12 - then int
326:15 - then
326:16 - again square brackets
326:18 - now this square
326:19 - uh this square bracket has a spatial
326:21 - meaning i would i would uh tell you all
326:24 - right
326:25 - so what is the meaning all right see
326:28 - there's a reason why we call this type
326:30 - of array and static array the reason is
326:32 - we
326:33 - already all right from the start only
326:35 - when we declare the array all right from
326:37 - the start only we specify the size of an
326:40 - array that's what we are doing right now
326:42 - so in this square brackets we have to
326:44 - give a size of an array so let's let's
326:47 - give it five all right so
326:49 - now this is a static array all right
326:51 - this is a static array
326:52 - it doesn't have any value in it means uh
326:55 - of course it does have all right it does
326:58 - have value in it
327:00 - but
327:01 - all right but
327:03 - it is static the reason is we have
327:05 - already all right we have already
327:08 - initialized
327:10 - this array all right we have already
327:12 - initialized
327:14 - the array and uh because we have
327:16 - already means declared the size of the
327:18 - array because we have already declared
327:20 - the size of the array in the memory all
327:21 - right in the memory it has created a
327:24 - static space already the ram it has
327:27 - created its own memory that cannot be
327:29 - exceeded
327:30 - all right so that is it
327:33 - now after after this whole bracket thing
327:36 - what you have to do is again open
327:38 - uh your curly brackets all right and
327:41 - after that
327:42 - write the number you want to give all
327:44 - right
327:48 - so yeah that's how we declare a static
327:51 - array
327:53 - all right now let's again uh run it and
327:56 - let's see if it's retaining any any
327:57 - around no it's not returning any error
328:00 - because the syntax is totally correct
328:02 - all right
328:04 - now
328:05 - all right see
328:07 - the difference now the difference
328:08 - between both all right both dynamic and
328:12 - static array
328:14 - all right is
328:15 - basically
328:17 - it means now
328:18 - see static why is it called static audit
328:23 - why
328:24 - something is called static static means
328:26 - which can't be changed afterwards all
328:28 - right which we can't change afterwards
328:31 - what
328:32 - if it is declared on the start it is
328:34 - declared declared all right we can't
328:35 - actually change it or
328:37 - means we can't actually add something
328:40 - more up to it all right we can't exit
328:42 - that memory all right but dynamic means
328:45 - it is you know uh what can i say it is
328:47 - adjustable
328:48 - in the runtime dynamic is adjustable in
328:50 - the right time so that is
328:52 - what the you know that is what the
328:54 - difference is
328:56 - between dynamic and static all right i
328:59 - hope uh you are clear about this all
329:01 - right
329:03 - so yeah so i'm going to uh
329:06 - keep working with dynamic arrays only
329:07 - all right
329:09 - now
329:11 - here's the thing all right so we have
329:13 - learned about uh initializing array we
329:15 - have learned about what exactly is an
329:16 - array all right
329:18 - now let's you know learn about uh
329:21 - accessing
329:23 - values within an array all right do you
329:25 - remember when i uh taught you about the
329:27 - window in the audience in the second
329:28 - lecture only i
329:30 - taught you about indexing all right i
329:32 - hope you remember the concept all right
329:34 - but if you don't let me uh tell you
329:37 - indexing now it defines all right
329:40 - indexing basically defines
329:42 - positions positional value
329:45 - of
329:47 - some
329:48 - data all right
329:49 - in simple terms it means all right it
329:52 - means let's say
329:54 - there how many how many elements are
329:56 - there in this you know how many elements
329:58 - are there in this particular array there
330:00 - are total five elements all right and
330:04 - if we start indexing them all right
330:06 - indexing uh in in uh in simple words you
330:09 - can you know you can understand indexing
330:12 - as uh um
330:14 - basically address all right means
330:16 - exactly uh if we talk about memory
330:18 - address of any variable it's totally
330:20 - different it's totally different topic
330:22 - i'm just trying to make you understand
330:23 - how like
330:25 - what is indexing with indexing now it's
330:27 - uh
330:29 - think of it as an address of someone all
330:30 - right like uh for example i am priyanshu
330:33 - all right there are two priyanshu right
330:35 - and uh
330:37 - both
330:38 - live all right both live in two
330:41 - different uh like
330:43 - two uh different places all right but
330:44 - both are priyanshu uh
330:46 - both are means
330:48 - whose name and title are totally similar
330:51 - all right
330:52 - but
330:53 - how will how will we uh know that uh
330:56 - priyanshu uh means the priyanshu he is
330:58 - finding is the actual one all right so
331:01 - that's how address comes in all right
331:03 - the person will ask for the address and
331:05 - if the address is right he'll get to the
331:07 - right financial so basically now
331:09 - indexing is basically the positional
331:11 - value of some data it's simple as that
331:12 - it's it's the address of some data like
331:14 - see uh for two the for the first element
331:17 - all right the first element of an array
331:20 - the address is zero means in the index
331:22 - value of first element is zero the index
331:25 - value of second element is one the index
331:27 - value of third element is two
331:30 - and it goes like this all right
331:33 - it always goes like this so that is what
331:35 - indexing is and
331:36 - this is how indexing will help us
331:38 - accessing the values all right now let
331:40 - me show you so uh
331:42 - let me uh show you by printing it all
331:44 - right
331:46 - so i want to access all right i want to
331:49 - access let's say this all right three
331:52 - three from the array so how would i do
331:54 - that so let's count it so as it is
331:56 - starting from zero zero one
331:59 - two three all right so this is in the it
332:02 - is in the third position so what i'm
332:04 - going to do is
332:05 - i'm going to write 3 in here and let's
332:08 - see
332:09 - if it works yeah we got it
332:12 - right we definitely got it because the
332:14 - positional value of 3
332:17 - sorry the positional value of three is
332:19 - three right uh
332:21 - if if you are confused all right let me
332:23 - let me uh give uh give you another way
332:25 - around all right so let's say i want to
332:27 - you know um
332:29 - access this alright uh this particular
332:31 - value already
332:32 - means i want to access the six so how
332:36 - would i do that so let's count it 0 1 2
332:39 - so it is in the second position right so
332:42 - now let's run it
332:43 - so here you can see we are with the
332:46 - index all right with the help of index
332:47 - values we are able to access it and
332:49 - always remember whenever you want to
332:51 - access index value now
332:53 - uh write the variable name then open uh
332:55 - square brackets and inside that put the
332:57 - index value
332:58 - all right
333:01 - so this is how we access all right this
333:04 - is how we access values within an array
333:07 - now
333:08 - let's say if we uh let's say i want to
333:11 - print all right each and every element
333:14 - within this array all right
333:17 - i i let i want to print each and every
333:20 - element
333:21 - within this array so what i'm going to
333:22 - do is
333:25 - for
333:26 - in thai equals zero i less than equals
333:30 - all right
333:31 - how many elements are there
333:33 - one two three four five right
333:36 - so what i'm going to do less than all
333:39 - right val
333:40 - dot length all right see this is a
333:43 - method all right you already learned
333:44 - another um for your first method all
333:47 - right dot length all right see this dot
333:49 - length method now this length method
333:51 - returns
333:52 - the total length all right the total
333:54 - length
333:55 - of
333:56 - your array all right so as our total
333:59 - length is you know 5 that's why it has
334:02 - returned 5 now here's comes the problem
334:04 - here you can see
334:06 - what i've written in equal 0 i less than
334:09 - means it will iterate less than 5 all
334:12 - right
334:14 - do you know why it is ideal and why this
334:16 - solution will work and why why not less
334:19 - than equals will work
334:22 - actually it is better to try by yourself
334:24 - actually uh pause this video all right
334:26 - pause the video
334:28 - try both the uh both the way all right
334:31 - try both the way
334:32 - and check which one is running all right
334:36 - i will show you right in here just give
334:39 - me a few seconds so now uh as we have
334:42 - you know try to access as we are trying
334:44 - to access
334:46 - the values with each and every value
334:48 - what i'm going to do is i wrote
334:49 - console.writeline then i'm going to take
334:50 - the variable name the square brackets
334:52 - and i'm
334:53 - going to put the i inside because you
334:56 - know with every iteration the value of i
334:58 - is increasing
334:59 - all right so here you can see we got all
335:01 - the elements we got all the elements
335:03 - because we started from 0 zero is this
335:06 - one all right and ended with four
335:09 - all right and the fourth positional
335:10 - value is of this one right now let's try
335:14 - out less than equals one let's see what
335:15 - happens
335:17 - let's see
335:19 - see it has printed but here you can see
335:22 - it has returning us error now what's the
335:25 - error index was outside the bounds of an
335:27 - array the reason is the reason is
335:31 - the length of an array or the length of
335:33 - an array
335:34 - is uh
335:35 - 5 all right the length of this array is
335:37 - 5 but
335:39 - indexing ends at 4 all right and we are
335:41 - trying to access the elements of we are
335:44 - trying to access the elements of this
335:45 - array through indexing so if there is
335:49 - all right if there is no element present
335:52 - if there is no element present
335:54 - in
335:55 - the fifth position all right if there is
335:57 - no element present in the fifth position
335:59 - then of course it will return error it
336:01 - because it doesn't have any value all
336:03 - right now
336:05 - here's a fun fact
336:06 - all right here's the fact that you you
336:08 - must know all right like i guess i
336:10 - forgot to tell you about this like when
336:12 - we create this kind of array now
336:15 - just wait
336:18 - when we create
336:20 - this sort of array
336:23 - all right
336:27 - if we let's say if we don't assign
336:29 - values in here now like i assigned
336:31 - previously if we don't assign those
336:33 - values in here now it will automatically
336:35 - like automatically zero all right zero
336:38 - will be assigned to each and every
336:39 - position all right so this is for a fact
336:42 - and you guys must you know know it all
336:45 - right
336:46 - so
336:47 - now
336:48 - we have learned the very basics of array
336:50 - right we have learned how to access
336:53 - elements in an array right
336:55 - so now it is our time to look into the
336:58 - methods all right the methods
337:00 - are present in an array all right you
337:02 - already saw all right you already saw
337:04 - method length now let me show it to
337:06 - again so here i am declaring a variable
337:08 - that is int
337:09 - val
337:11 - all right
337:15 - so into val then let's give it uh 5
337:19 - 2
337:20 - 0
337:22 - a 7 let's say
337:24 - 3
337:25 - nine eight
337:27 - so
337:28 - here you can see all right we
337:30 - got uh we created our own array now the
337:34 - first method we are going to learn about
337:35 - is length method all right and you you
337:38 - already know uh what exactly is length
337:40 - right how length method works so what
337:42 - i'm going to do is console.writeline
337:46 - val dot
337:48 - length all right so what this will do it
337:50 - will return all right it will return us
337:53 - the total length of the array so here it
337:55 - is returning 6 because there are six
337:58 - elements present in the array similarly
338:00 - we have let's say we have another
338:03 - variable all right we have
338:05 - another variable uh not exactly a
338:07 - variable just uh just
338:10 - so we have a variable of array all right
338:12 - so we
338:14 - have a variable of array now what we
338:16 - have to do is now what we have to do is
338:19 - we have to uh learn another function all
338:22 - right and that function is basically
338:24 - sort function all right see sorting or
338:27 - sorting is basically rearranging uh re
338:30 - and rearranging you know the
338:32 - rearranging the values all right means
338:34 - the gibberish values in an ascending
338:37 - order or descending order all right so
338:38 - that is what uh you know uh sorting is
338:41 - all right so
338:42 - here comes the function all right so
338:44 - this is the sort functions first of all
338:46 - let me remove this length one because uh
338:48 - of course we don't need it anymore
338:50 - now what we have to do is let me show
338:52 - you that we have uh you know i have an
338:55 - array initialize now what you have to do
338:57 - is you have to write a function
338:58 - array dot
339:00 - sort all right
339:03 - and inside the sort for function we have
339:06 - to pass an argument and that argument
339:08 - will be an array all right and now what
339:11 - you can do is
339:13 - for
339:14 - int
339:15 - i
339:16 - equals 0 i less than
339:20 - array all right so oh sorry not array
339:23 - val dot
339:24 - length
339:26 - i plus plus
339:28 - all right and
339:30 - let's uh try to print it all right let's
339:35 - try to print this
339:37 - value all right let's let's try it out
339:42 - let's see
339:43 - let's see what happens all right
339:45 - currently uh this is uh this
339:47 - this particular array is not ordered all
339:49 - right and now to make it ordered we use
339:51 - the sort function so here you can see it
339:53 - has uh arranged all right it has
339:55 - arranged all the uh elements
339:58 - in an
340:00 - ascending order
340:02 - all right
340:03 - so that's how uh this thing works all
340:06 - right
340:07 - so
340:08 - now we we are going to learn another
340:10 - function already that is index of
340:12 - alright
340:13 - this is index of function that is it
340:15 - will return the index of some value
340:19 - all right so you already know how this
340:21 - works right i guess i showed you
340:24 - previously means not in this uh and not
340:26 - in case of arrays so
340:29 - int idx equals
340:31 - array
340:32 - all right dot
340:34 - index of
340:35 - all right and within that we have to
340:37 - pass two arguments the first one would
340:39 - be the array all right means the array
340:42 - from which you are looking for the value
340:43 - and the second one will be
340:45 - the value
340:48 - means the value
340:50 - on which you will be taking out the
340:52 - means uh you you have to put the value
340:56 - uh
340:57 - which you want to get all right means
340:59 - which you want to get in the sense let's
341:01 - say i want to put a value and i want to
341:03 - get its index value right
341:05 - so that's what i am i will be doing so i
341:07 - am just going to put a certain value in
341:09 - here so i'm going to put 7 in here
341:12 - all right and you know let's uh
341:15 - let's print it all right console dot
341:18 - writeline
341:20 - idx all right so
341:22 - let's uh run this program and let's see
341:25 - what happens so here you can see it is
341:27 - returning 3 the reason is
341:29 - 0 1 2 3
341:31 - 7 is available in index 3 all right so
341:34 - that's how this whole index of function
341:36 - works all right now here comes
341:38 - three more functions all right that is
341:41 - maximum minimum that is max min and sum
341:44 - all right so the
341:46 - meaning is hidden in their name only so
341:49 - it's like the max function all right
341:52 - first of all understand this math
341:54 - function max function will return the
341:55 - maximum value
341:57 - available all right the maximum value
341:59 - available in array the min
342:01 - or the mean function will return the
342:04 - minimum value available in the array ah
342:07 - and
342:09 - the sum all right the sum function will
342:11 - return the total sum of elements from
342:14 - the array all right so
342:16 - let's uh
342:17 - try to print it out alright so console
342:19 - dot
342:21 - right line all right and inside this
342:24 - val dot
342:25 - max and give parenthesis all right
342:29 - so now
342:31 - let's see what is the maximum value in
342:33 - here
342:35 - in our case the maximum value eight is
342:37 - eight now let's see the minimum value
342:39 - and that's totally right and let's see
342:42 - the minimum value the minimum value is
342:43 - zero and that's also totally right now
342:46 - let's print out the sum of you know the
342:48 - sum of total uh array so you can if if
342:52 - you want you can perform the calculation
342:54 - and you will be surely getting 25 all
342:56 - right so
342:58 - these are the array methods all right
343:01 - that
343:02 - you must like you must have an basic
343:04 - idea about all right and uh i would
343:07 - suggest all right i would suggest you
343:09 - guys to look more into arrays after this
343:11 - session also all right because
343:14 - array is a very important concept all
343:16 - right and uh
343:19 - there are a lot of algorithms that works
343:20 - on arrays like there are multiple
343:22 - sorting algorithms searching algorithms
343:24 - so i want you guys to have a very good
343:27 - idea and understanding of arrays all
343:29 - right so make sure you do that and so
343:31 - yeah that's it for this lecture see you
343:33 - in the next lecture thank you yo we are
343:35 - going to learn about functions in c all
343:38 - right see functions uh are a very
343:41 - important topic all right in terms of
343:42 - programming all right the reason behind
343:45 - that is because functions uh helps us to
343:47 - manage our code all right it uh
343:50 - helps us to you know lower the number of
343:53 - codes we write uh function helps uh our
343:57 - means uh function helps us to keep our
343:59 - code clean all right
344:01 - so function a function has a lot of use
344:04 - cases all right in
344:05 - uh when you will be developing all right
344:07 - your ar applications you'll be working
344:10 - with
344:11 - functions all right like uh update all
344:14 - right like the update method
344:16 - in unity is a function
344:18 - the start method in a unity is a
344:21 - function
344:22 - right so basically functions and methods
344:25 - all right are an essential part of
344:28 - programming any software all right see
344:31 - whenever we code we have to follow a
344:33 - very simple principle of dry now what is
344:36 - dry dry means don't repeat yourself all
344:39 - right
344:41 - why because it increases the code
344:43 - quality it saves a lot of time all right
344:47 - and functions uh in simpler terms
344:50 - functions or methods are basically a
344:53 - block of coder right
344:54 - they are basically a block of code which
344:56 - can be
344:57 - used anytime we want all right without
345:01 - repeating ourselves all right like for
345:03 - an example
345:04 - you uh i have implemented an algorithm
345:07 - all right that is a sorting algorithm
345:09 - let's say you have implemented a
345:11 - selection sort algorithm all right now
345:14 - you have to use that algorithm
345:17 - at multiple places in your program right
345:20 - so the let's say the algorithm is of 10
345:23 - to 20 lines all right for example
345:26 - now the problem would come that if you
345:28 - like you know manually write that
345:31 - algorithm in each and every portion now
345:34 - it will increase the code base all right
345:36 - it will increase the code base then it
345:38 - will uh
345:40 - you know cost you a lot of your time all
345:42 - right and time is money
345:44 - right so
345:46 - uh what function does is we can create a
345:48 - function of that particular sorting
345:50 - algorithm and use that function
345:52 - everywhere all right so that saves a lot
345:54 - of time and makes the code base more
345:56 - optimized
345:58 - so
345:59 - it is very important all right to
346:00 - understand the concept of functions
346:03 - all right
346:04 - so basically there are two steps through
346:07 - which we can you know use a function the
346:08 - first is we have to create a function
346:11 - all right
346:12 - and the second is we have to call a
346:13 - function all right
346:15 - now see call i would show you what what
346:18 - does calling a function means is all
346:20 - right see for an example if i had to
346:21 - show you a function right now this you
346:23 - can see this main method right in here
346:25 - all right or main function right in here
346:27 - is a function all right the difference
346:30 - between a regular function and this main
346:32 - function or the main method
346:35 - is
346:36 - that main method
346:38 - calls itself automatically all right it
346:40 - is called automatically whereas
346:43 - a regular regular function has to be
346:46 - called by the user all right or the
346:48 - developer
346:49 - so
346:50 - ah this is the major difference between
346:52 - a specified means of this main function
346:55 - and a regular function all right
346:57 - now
346:58 - by calling it we means we have to you
347:00 - know
347:00 - call the function we have to say to the
347:02 - function that function do this task for
347:04 - me then only the function will work all
347:06 - right he won't do the task by himself
347:09 - we have to command him all right so
347:10 - that's why we call a function
347:13 - okay now as we have discussed about
347:15 - function one more thing is that
347:18 - you have to keep in mind whenever
347:19 - creating a function now you can't write
347:21 - means create a function inside another
347:23 - function all right always remember that
347:25 - so whenever we create a function it
347:27 - should be outside a function alright
347:29 - like this
347:30 - public static
347:33 - all right
347:34 - void
347:36 - set score
347:37 - all right and
347:38 - like this all right we create a function
347:40 - like this now i know this might be a bit
347:42 - confusing all right so i'm going to
347:43 - explain you each and everything first of
347:46 - all let's start with the syntax right
347:47 - let me comment or create a comment third
347:49 - line all right
347:51 - in this commented light the first or all
347:53 - right the first that would come
347:55 - will be an access
347:57 - modifier all right the very first thing
347:59 - will be access modifier i will tell you
348:01 - what exactly is access modifier all
348:03 - right after that
348:04 - there will come a return type all right
348:10 - after the return type all right you have
348:11 - to give your function a name all right
348:14 - and then you have to give a parenthesis
348:17 - all right inside the parenthesis you can
348:20 - add parameters what are parameters
348:22 - parameters basically
348:24 - takes uh it is basically a list of
348:26 - arguments all right that we provide like
348:28 - like uh an array.sort function that i
348:31 - taught you in the
348:32 - arrays lecture what happened in there we
348:34 - provided an argument inside that sort
348:37 - function right so that's how uh that's
348:40 - why we use parameters so parameters
348:42 - would come
348:44 - inside
348:46 - this function
348:48 - means this parenthesis and then you
348:50 - already know what to do
348:52 - open and close curly brackets all right
348:54 - and inside this you have to
348:56 - put some code all right now you know
348:59 - let's see the actual code for it
349:03 - first of all all right
349:04 - here you can see we are writing a
349:06 - function first of all we are giving
349:07 - access modifier all right public
349:10 - all right
349:12 - void
349:13 - all right
349:15 - and then
349:16 - what you have to give is a function name
349:18 - what would be the function name
349:21 - the function let's set the function ms
349:23 - set scope all right
349:27 - and now
349:29 - inside this function we have to give all
349:31 - right some write some code that is
349:33 - console
349:34 - dot
349:35 - write line
349:37 - and inside this
349:39 - you have to
349:41 - print something let's print hello
349:44 - world
349:46 - now
349:47 - to call this function or let's say let's
349:49 - rename this function to hello world only
349:52 - all right
349:54 - so now to call this function what we
349:56 - have to do is
349:58 - just wait yeah
350:00 - to call this function what we have to do
350:02 - is we have to write the function name
350:03 - like this and then add parenthesis into
350:06 - it and let's run it
350:08 - so here you can see all right
350:11 - here you can see
350:13 - it is giving us an error what is this
350:15 - error
350:16 - it is telling us an object reference is
350:18 - required to access non-static member all
350:20 - right
350:21 - the reason is we didn't give any
350:23 - reference to the object alright and
350:26 - currently as you uh have not learned
350:28 - about object-oriented programming we'll
350:30 - be learning about object-oriented
350:32 - programming in the next class so here's
350:34 - a keyword all right static
350:36 - all right
350:37 - right now
350:38 - you don't you know you don't have to put
350:40 - your mind into the
350:42 - keyword static and public all right
350:45 - because uh
350:46 - these two keyword will make more sense
350:48 - after the next lecture all right because
350:50 - uh these uh these two
350:53 - uh basically these two keywords uh are
350:57 - mostly used
350:58 - in object-oriented programming only all
351:00 - right so
351:01 - now let's run the program and let's see
351:03 - what happens see we are able to get the
351:06 - output all right now
351:08 - uh i would explain you all right
351:11 - i would explain you this code all right
351:14 - what exactly are these first you can see
351:17 - we are specifying an access modifier
351:20 - that is this one this is access modifier
351:22 - now what is what exactly is an access
351:23 - modifier access modifier is like a
351:26 - gatekeeper all right like uh like let's
351:29 - say you have a security guard in your
351:30 - house all right the secret the you have
351:33 - guided means you have told that the
351:35 - security security guard that you are
351:38 - like you don't want anybody to uh
351:41 - disturb you all right so at that point
351:43 - of time here you have gone private
351:46 - but
351:47 - if your security guard if if you haven't
351:49 - like if you have told your security
351:51 - guard that
351:52 - brother uh if anyone comes to meet me
351:54 - then
351:55 - let him inside all right
351:58 - let him come inside so then you are
352:00 - public all right the security guard will
352:02 - let it go it's
352:04 - the access modifiers are also something
352:05 - like
352:06 - this public and private all right public
352:09 - and private
352:11 - public means you can access that
352:13 - particular thing from any class all
352:16 - right
352:17 - whereas private means you can't access
352:20 - that particular thing let it be a
352:22 - variable or method you can't access it
352:25 - outside of their class
352:28 - so i know this might be my this might
352:30 - seem a bit overwhelming or maybe it
352:32 - might seem you know a bit confusing but
352:34 - that's totally okay because
352:36 - all these concepts all right you will
352:38 - get a grip on all this concept after the
352:40 - next lecture because in object-oriented
352:42 - programming we are going to learn more
352:43 - about methods we are going to learn more
352:45 - about access modifiers we are going to
352:47 - experiment with it all right so
352:51 - don't worry
352:53 - all right
352:54 - now so as we uh i hope the basic concept
352:57 - of access modifier is clear it just
352:59 - access modify helps us to modify
353:01 - the access all right it help us to
353:04 - modify restrict the access of any
353:06 - variable or of any method
353:09 - all right so that is what an access
353:11 - modifier is next here comes the static
353:13 - keyboard all right
353:14 - don't worry about that
353:16 - don't worry about the static keyword all
353:18 - right
353:19 - let me uh i'm going to explain the stat
353:22 - keyword
353:23 - uh uh in the next lecture alright
353:25 - because this static keyword is one of
353:26 - the very important uh concept that you
353:28 - should know all right
353:30 - after the static keyword comes return
353:32 - type all right return type all right
353:35 - return type is basically
353:37 - what kind of value we want to return to
353:39 - the function all right return type
353:41 - basically defines
353:42 - what value can be returned to the
353:44 - function it can be of
353:45 - void all right it can be float it can be
353:48 - string all right
353:50 - so now see access modifiers can be of
353:53 - multiple types all right it can be
353:55 - boolean all right it can be of bool it
353:58 - can be you know of a float it can be of
354:00 - string all right another type
354:02 - uh is void
354:04 - in a void all right in a void return
354:07 - type we didn't we do not need to return
354:10 - all right we do not need to return
354:11 - anything
354:12 - in a void you know in a void function
354:16 - but
354:17 - let's say we create a function with a
354:20 - different return type let's say in all
354:22 - right so public static
354:25 - int all right let's say we are you know
354:29 - let's let's create a function that would
354:31 - you know give us the square of some
354:33 - number so
354:34 - let's write a function that is square
354:36 - off all right
354:38 - then in here
354:40 - what i'm going to do is i'm going to
354:41 - create a variable all right that is int
354:45 - let's say
354:46 - square
354:48 - square
354:49 - all right square off
354:53 - square off i'm going to create this
354:54 - variable all right in here the s is
354:57 - small and in the function it is uh in
354:59 - caps all right so don't worry so now
355:01 - what i can do how to you know how can we
355:03 - exactly uh
355:05 - make a square of the number right
355:07 - multiply that number with the same
355:09 - number right
355:11 - so here i'm taking an parameter all
355:13 - right so the parameter would be uh
355:16 - integer n all right
355:18 - you can take as many parameters you want
355:20 - all right i can even uh take another
355:22 - parameter as a float
355:24 - all right i can even take that that is
355:26 - float
355:27 - n one all right i can do that so the
355:30 - thing is i you don't you know you don't
355:32 - have to
355:34 - be like uh the function can only take
355:36 - one parameter you can give as many
355:38 - parameters you want all right so now as
355:40 - we have given the parameter we are
355:43 - doing it n into n and after that i'm
355:45 - returning all right i'm returning we we
355:48 - are using the return keyword i'm
355:50 - returning this square off
355:54 - all right i'm returning this
355:56 - square of variable to the function
355:59 - now in here as we called this function
356:01 - it printed us hello all right but
356:05 - to you know get the value of this
356:07 - function all right that is the square of
356:08 - function it would be a bit different how
356:11 - let me tell you let's try it out
356:13 - actually all right let's take the square
356:15 - of you know square uh
356:17 - square of function and uh let's put a
356:19 - value let's say 2 we want square of 2
356:21 - now let's run it let's see
356:23 - see here you can see your program did
356:25 - not output anything the reason behind
356:27 - this it is not printing anything it is
356:30 - returning the value to the function now
356:32 - to print all right now to print the
356:34 - value of the function what we have to do
356:35 - is we have to store this
356:37 - uh we store the returned value into a
356:40 - variable so how would it how do we do it
356:42 - do that so create a variable that is in
356:44 - final
356:45 - you can name it anything after you have
356:47 - stored it like this then you can do
356:49 - console dot
356:51 - write line
356:53 - final all right and after that
356:56 - you can simply print anything all right
356:58 - i mean simply print it now let's say try
357:01 - out a square of 4
357:03 - so the square of 4 will be 16 right so
357:06 - here you can see that it is giving out
357:07 - the output as 16. similarly you can
357:10 - also create your return types as boolean
357:13 - all that you can create your return
357:14 - types as string all right one more thing
357:17 - you have to keep in mind if you are
357:18 - specifying a return type like ink you
357:21 - have to return integer values only if
357:23 - you try to return float value floating
357:25 - point or string value uh it would give
357:27 - you error
357:29 - all right
357:30 - so make sure uh you practice on this all
357:33 - right and don't worry about the uh
357:35 - access modifiers and the static keyword
357:37 - all right because in the next lecture in
357:39 - the next lecture that is uh where we'll
357:40 - be exploring classes and objects that is
357:43 - a basics of object-oriented programming
357:45 - there would be lo there you would be
357:46 - learning about the static keyword the
357:48 - you know about static classes you'll be
357:51 - learning about objects or that you'll be
357:53 - learning about instances then you would
357:55 - also be learning about this access
357:57 - modifiers how we use them right so
358:00 - you'll be learning all those things in
358:02 - the next lecture so don't worry if you
358:04 - are if you are confused somehow by the
358:07 - next lecture the functions the topic of
358:09 - functions will be very clear to you but
358:11 - if i had to say in a very simple word
358:13 - functions are just basically a block of
358:16 - code that help us to reduce the uh means
358:19 - reduce the lines of a code all right we
358:21 - can reuse that function and always
358:23 - remember don't repeat uh always follow
358:25 - the principle of don't repeat yourself
358:27 - all right like let's say if you are
358:28 - creating an algorithm then uh create a
358:30 - function of that algorithm so that so
358:33 - that you can use that function anywhere
358:34 - you want all right so make sure you
358:37 - follow the principles of
358:38 - dry all right so yeah that's it for this
358:41 - lecture so in the next lecture we are
358:42 - going to learn about classes and objects
358:46 - in this lecture we are going to learn
358:47 - about object-oriented means the very
358:49 - basics of object-oriented programming
358:50 - all right and in that we'll be learning
358:52 - about classes and objects all right so
358:54 - this is the very basic of
358:56 - object-oriented programming there are
358:58 - many other concepts already that you
358:59 - would be needing to learn but for now
359:01 - for the starting all right for starting
359:04 - uh this is the topic that i'm going to
359:06 - teach you alright we'll be learning
359:07 - about classes and objects we'll be
359:09 - learning about fields we'll be learning
359:10 - about methods that is class members all
359:13 - right we'll be learning about you know
359:14 - constructors how to create a constructor
359:16 - we are going to learn about access
359:18 - modifier static keyword we are going to
359:19 - learn about static classes all right
359:22 - so
359:23 - without any further ado all right
359:25 - let's
359:26 - start with the lecture all right see
359:29 - to understand classes and objects now
359:32 - understand this
359:33 - object-oriented programming all right we
359:35 - have to understand the uh very
359:37 - fundamental concept of object-oriented
359:39 - programming what exactly is it see
359:40 - object-oriented programming
359:42 - is basically an approach all right
359:45 - that breaks a programming problem into
359:48 - you know uh objects that interact with
359:51 - each other all right
359:53 - basically objects
359:55 - are uh created from you know templates
359:58 - and those templates are known as class
360:00 - all right
360:02 - ue actually we actually can you know
360:04 - think
360:06 - class as a blueprint all right class as
360:08 - a blueprint and
360:11 - you know just like a you know a
360:12 - blueprint of a building all right and
360:15 - from that blueprint of a building we
360:16 - build
360:17 - an object that is the actual building
360:20 - with bricks and mortar and all those
360:22 - things
360:22 - right
360:24 - so that's what object-oriented
360:25 - programming is
360:27 - all right so i hope this uh
360:30 - you have understood what exactly
360:31 - object-oriented programming is
360:33 - right
360:34 - now
360:35 - as we have understood what exactly
360:37 - object-oriented programming is it is our
360:39 - time to understand about classes all
360:41 - right
360:42 - as i told you class is like a blueprint
360:45 - right like here you can see this is a
360:47 - class public class program
360:50 - right inside there is a method that is
360:51 - the main method
360:54 - right so we can write our own class now
360:57 - to write our own class first of all
360:59 - remember you can't write a class inside
361:01 - another class all right you have to
361:03 - write
361:04 - a new class outside of that class all
361:06 - right so
361:07 - what we have to do is write
361:10 - public all right
361:13 - public
361:14 - class all right and give
361:16 - the class a name all right give the
361:18 - class a name
361:20 - and
361:21 - let's give the class a name as person
361:23 - and then what you have to do is you have
361:25 - to open curly braces and close it so
361:28 - this is how we write
361:29 - a class all right this is a public
361:32 - method
361:33 - this is the class keyword
361:36 - and this is
361:38 - the name of the class all right so
361:39 - that's how we create a class all right
361:42 - now there's some there is another thing
361:45 - called fields
361:46 - all right to understand field you can
361:49 - say fields are you know
361:51 - variables only all right they are
361:53 - variables
361:54 - only a field is simply a variable that
361:58 - is we know we declared
362:00 - we declare inside a class all right
362:03 - like any other variables all right they
362:06 - are used to store data like here you can
362:08 - see we can write public
362:10 - all right in or let's say public
362:13 - string
362:15 - name of the person all right
362:17 - then
362:18 - we can write public
362:21 - in
362:22 - age right so this is how we are this
362:26 - this is called fields
362:28 - all right so this is are called
362:31 - this is called fields
362:33 - all right
362:35 - now here you can notice that there is
362:37 - public keyword and you know in front of
362:39 - all the variables
362:41 - all right so they are now they are known
362:43 - as access modifiers
362:45 - they are basically gate keepers they you
362:48 - know control who has access all right
362:51 - who has access to the
362:53 - uh fields or methods now the who in this
362:56 - case is another class all right now if
362:59 - we make this to private now this program
363:02 - class won't be able to access this uh
363:05 - variables from this person class all
363:07 - right now to you know uh to access this
363:10 - class we have to create an object of
363:12 - this class all right so i'm going to
363:14 - teach you how to do that but before that
363:17 - let's
363:18 - learn how to create methods all right
363:20 - let's learn how to create methods inside
363:23 - inside a new class
363:25 - so it's or it's also similar like this
363:27 - public static void main just like i uh
363:29 - taught you in previous lecture about
363:31 - functions so what you can do is
363:33 - public
363:35 - all right
363:36 - static
363:38 - void
363:39 - and let's give it a name all right
363:42 - let's give it a name that is
363:45 - uh
363:46 - get name all right and in here it is not
363:49 - necessary to give the static keyword all
363:52 - right i would
363:53 - there's a reason behind that i will you
363:55 - would be learning that reason after you
363:56 - know after we get into the concept of
363:58 - static keywords so don't worry we are
364:00 - going to get in there all right for now
364:02 - remove the static keyword for now remove
364:04 - the static keyboard what you can do is
364:06 - console
364:09 - dot
364:11 - right
364:12 - line
364:13 - all right and uh
364:16 - write it like this name is
364:19 - uh
364:21 - get the you know get the name variable
364:23 - in here all right get the name variable
364:26 - in here and similarly do the you know
364:28 - same thing
364:29 - for the age variable all right
364:33 - ages
364:37 - all right so now what you have to do is
364:39 - now we
364:40 - as we have created our method as we have
364:43 - created our method
364:45 - what we have to do is we have to create
364:47 - an object of that class all right
364:50 - or in simple word
364:52 - an instance of that class what does that
364:55 - mean see an object is created from a
364:58 - class all right we have already create
365:01 - created a class named person so now we
365:03 - can use this to create objects
365:07 - object is basically an instance of a
365:09 - class all right
365:10 - to you know to create an object of the
365:12 - class we use
365:14 - the new keyword
365:16 - let me show you how
365:18 - all right so it's very simple
365:20 - what you have to do is first
365:22 - what you have to do take the class name
365:25 - that is in our case the class name is
365:27 - person
365:28 - after that
365:30 - give you know give it a name that is i'm
365:32 - going to named p for now and then
365:36 - put equals to in there then write the
365:39 - keyword new
365:40 - and then again
365:42 - call the class like this all right and
365:44 - then
365:45 - give parenthesis to it after that if you
365:48 - run it let's say if you get any errors
365:50 - or not you are not getting any error so
365:52 - that means we are good to go all right
365:55 - so now
365:56 - here we have created an instance of a
365:59 - class or you can say an object of a
366:00 - class
366:01 - all right
366:02 - we have created an object of a class
366:06 - now as we have created an
366:08 - instance of the class we can you know
366:10 - also access the fields and methods
366:12 - available inside the class from our
366:15 - program class all right and make
366:17 - modifications to it all right
366:19 - like
366:20 - in here all right so what i first what i
366:22 - can do is p dot
366:24 - all right here uh first of all to access
366:27 - you know to access the you know fields
366:29 - and methods of the class you have to
366:31 - call that right so what you can do is
366:33 - here you have renamed the class right
366:35 - that is you have name the object as p so
366:38 - write p in there then dot all right
366:41 - then give the variable name and set the
366:42 - variable name to you know anything let's
366:44 - say your name all right
366:46 - and after that set it uh set the age
366:49 - value to
366:50 - let's say uh my age currently is 17 all
366:53 - right so i'm going to
366:54 - put it like that after that all right
366:56 - here you can see
366:58 - uh let's change the name to gate details
367:00 - actually yeah that would be better so
367:02 - now here you can see
367:04 - let's actually uh try it out let's see
367:06 - if any error is coming or not so here
367:08 - you can see we are not getting any error
367:11 - now
367:12 - now let's get the details let's see if
367:14 - uh like the means uh in the object the
367:17 - details we have filled
367:19 - has been set or not to do that what if
367:22 - as i have created a
367:24 - you know method that is get detail so
367:25 - what i can do is p
367:27 - dot
367:28 - get details
367:30 - and let's
367:31 - see if everything is working or not
367:34 - so here you can see
367:37 - all the things in here are working now
367:41 - you can create all right you can create
367:43 - multiple objects all right you can
367:45 - create as many objects you want all
367:48 - right like this let's let's try another
367:51 - one
367:52 - that is person
367:55 - p
367:55 - equals
367:57 - new person
367:59 - and in here what you can do is p
368:02 - dot
368:03 - name equals let's uh you know give it
368:05 - row hit
368:06 - all right
368:07 - and
368:08 - let's give give its age
368:11 - also you know 18 let's give it and now
368:14 - let's see oh all right always remember i
368:17 - did a mistake i you know name both the
368:20 - cla or means both the instances with the
368:23 - same name so don't do that all right
368:25 - change the name in here
368:26 - my bad so now what you can do is
368:30 - p1 dot
368:32 - get details
368:34 - all right now let's see if this works or
368:37 - not
368:38 - so here you can see
368:39 - both the
368:41 - uh instances are working so this is how
368:43 - we create a class and we create an
368:46 - instance of that class all right so this
368:49 - is how we do it
368:51 - now
368:52 - see the fields and methods inside all
368:55 - right the fields and method inside a
368:57 - class all right like this is the field
368:58 - all right this variable is a field this
369:00 - variable is a field and this is a method
369:03 - this uh this whole thing is a method
369:05 - so they
369:07 - are often referred as class members all
369:09 - right they are the member of the class
369:11 - called person
369:13 - all right so make sure to keep this in
369:15 - mind
369:16 - all right so now as we have learned
369:18 - about you know classes and objects
369:21 - now it is our time
369:23 - to learn about constructors
369:26 - all right
369:27 - to learn about constructors i know it uh
369:30 - this you know this
369:32 - term might seem a bit unique you know
369:34 - confusing but don't worry all right
369:36 - don't worry i'm going to tell you how to
369:39 - do it all right see
369:41 - what is a constructor
369:43 - a constructor is basically a special
369:45 - method all right that is you know used
369:47 - to initialize objects
369:49 - the advantage of using a constructor
369:52 - is that
369:53 - it is called when an object alright it
369:55 - is called
369:58 - when an object is created it can be used
370:00 - to set initial values for fields
370:03 - all right means
370:05 - right now all right whenever we are
370:07 - calling this you know whenever you are
370:09 - calling means creating an object of this
370:11 - class
370:12 - no value is being set by default all
370:15 - right we are not able to set any value
370:17 - by default we are setting them later on
370:20 - what constructor does is whenever we
370:22 - create an instance of a class
370:25 - a constructor is called
370:28 - all right
370:29 - a constructor
370:31 - is you know
370:33 - is called
370:35 - so
370:36 - to you know to set means to create a
370:39 - constructor it's very simple
370:41 - what you have to do is
370:42 - public all right
370:44 - then
370:46 - you have to write the class name all
370:47 - right you have to write the class name
370:49 - then parenthesis it it just looks like
370:51 - the function just you don't have to give
370:53 - the return type all right
370:55 - then
370:57 - in the person
370:58 - in the person i'm going to set all right
371:01 - i'm going to set
371:02 - the name to let's say default
371:05 - human
371:07 - and the age to
371:09 - let's say 100
371:12 - all right
371:13 - now you know let's remove the uh
371:16 - previous code all right let's remove the
371:18 - previous code and let's see how this
371:20 - whole constructor thing is working
371:22 - right
371:23 - see i won't be setting the name uh right
371:26 - now what i'll be doing is i would just
371:28 - i would just be you know
371:30 - uh creating an instance of the class and
371:32 - then we'll be calling this method
371:34 - directly i won't be setting the name
371:35 - right now you you will see what will be
371:37 - the output
371:38 - all right so let me show you so first of
371:41 - all what you have to do is create
371:43 - create an instance of the class so how
371:45 - do we do that person p equals new
371:48 - person all right
371:50 - semicolon and then p dot
371:53 - get details all right and in here
371:56 - let's see if it works or not so here you
371:59 - can see here you can see we didn't said
372:01 - uh set the name all right we didn't set
372:03 - the class name in here
372:05 - we didn't set it explicitly all right we
372:08 - didn't set it explicitly
372:10 - the constructor all right the
372:11 - constructor is called when the object is
372:14 - already created so that's why by default
372:17 - by default
372:18 - the constructor has set
372:21 - the variable name and age
372:23 - to the specified value and in our case
372:26 - for the name the specified value is
372:28 - default human and for the age the
372:29 - specified value is 100
372:32 - all right
372:33 - i hope you understand that you know the
372:35 - concept of
372:37 - you know constructors all right now
372:39 - there are a few pointers that you need
372:41 - to remember all right a constructor name
372:44 - must match the class name all right and
372:47 - uh always remember our
372:49 - constructor cannot all right cannot have
372:52 - a return type all right and all uh
372:55 - remember this a constructor all right a
372:58 - construct is called whenever
373:00 - whenever an object is created or you can
373:03 - say an instance is created of the class
373:06 - all right and always remember uh
373:09 - see all classes now
373:11 - have constructors by default
373:14 - all right
373:15 - all classes have constructors by default
373:17 - if you don't create a constructor by
373:19 - yourself now the c programming language
373:22 - all right or any other programming
373:23 - language
373:25 - will create a you know default
373:27 - constructor for you all right by himself
373:31 - all right by means the c sharp will
373:33 - create
373:34 - uh automatically a constructor for you
373:37 - all right however the problem with that
373:39 - comes is that you won't be able uh to
373:42 - you know set the initial values for the
373:44 - fields so that's a problem that's why we
373:48 - can you know we define a
373:51 - means we define a constructor manually
373:54 - all right
373:56 - so i hope the concept of constructors
373:59 - uh
374:00 - classes and objects are clear all right
374:03 - i hope you have you know understood the
374:04 - concept of classes objects and
374:06 - constructors
374:08 - you have understood about i hope you
374:10 - have understood about fields and methods
374:11 - about class members so now
374:14 - our next topic all right our next topic
374:16 - is of constructor parameters all right
374:20 - like you know in functions how how i
374:23 - told you about parameters
374:25 - uh this is also something like that all
374:27 - right this is also you know same
374:30 - so to
374:31 - create a parameter what you can do is
374:34 - in within the parenthesis you can create
374:36 - variables all right that is you can
374:39 - create parameters now let's create a
374:41 - parameter name all right and let's
374:44 - create another parameter as
374:46 - age
374:47 - after that what we can do is
374:50 - what we can do is we can remove the
374:52 - default human from name and set it to
374:54 - dash name and again do the same thing
374:57 - for age to dash age all right now
375:01 - what is the you know what is the benefit
375:03 - of it
375:04 - let me show you
375:05 - all right let me show you the first of
375:07 - all this will reduce the lines of code
375:09 - all right this will reduce the lines of
375:10 - code by a lot
375:12 - so now as we have said the parameter it
375:14 - is very simple you know it is very
375:16 - simple so
375:17 - i'm going to create another object that
375:19 - is let's say
375:21 - person
375:22 - all right person b equals new person
375:27 - all right and then p dot get details
375:30 - and now in here here you can see there
375:32 - are parenthesis inside of this
375:34 - parenthesis we pass some value so how do
375:37 - we do that it's very simple
375:39 - first of all the first parameter is a
375:41 - string so we are going to give it a
375:42 - string that is priyanshu
375:44 - and the next parameter
375:46 - is age and we are going to give it 17.
375:51 - now lets run it
375:53 - and here you can see
375:56 - just within two lines like previously we
375:58 - were using four lines now we have
376:00 - reduced it to two lines so now here you
376:02 - can see
376:03 - we are getting the same output we got
376:05 - previously
376:06 - all right so that's how they save a lot
376:09 - of time time
376:11 - so i hope constructors the concept of
376:14 - you know the cons concept of
376:15 - constructors are clear to you all right
376:18 - because the next two topics are going to
376:20 - be very interesting that is access
376:22 - modifiers and static keyword
376:26 - all right
376:28 - so
376:29 - let me show you
376:31 - see
376:32 - access modifiers basically defines from
376:34 - where we can you know access our methods
376:37 - and variables from
376:39 - so far
376:40 - there are two access modifiers that you
376:43 - that you should know all right that is
376:46 - public and private now
376:48 - public means that you know we can access
376:51 - the class members from outside the class
376:54 - whereas
376:55 - whereas in other side private doesn't
376:58 - allows us to access the class member
377:00 - outside the class but only can be
377:02 - accessed within the class all right so i
377:05 - know it might uh you know it might seem
377:08 - a bit overwhelming or
377:10 - uh
377:11 - you know it might get a bit confusing
377:12 - but that's totally fine all right that's
377:14 - totally fine
377:16 - the thing is i'm going to show you show
377:18 - it to you by doing it practically now
377:21 - let's remove this constructor because we
377:22 - don't need it as of now all right let's
377:24 - remove this
377:25 - all right now in here let's change the
377:29 - name all right let's change the public
377:32 - keyword to private all right
377:35 - let's change it to private
377:37 - now
377:38 - let's create another instance that is
377:40 - person
377:41 - p equals
377:44 - new
377:46 - person now in here
377:49 - p dot
377:50 - name
377:51 - equals let's set it to you know
377:53 - priyanshu all right again let's set it
377:55 - to priyanshu
377:58 - and again let's set the age
378:00 - to
378:02 - let's say
378:04 - 17 all right
378:05 - and let's get try to get the details
378:09 - now let's see what happens first of all
378:12 - let me ask you will it return an error
378:13 - or will it work
378:15 - will it work or return any error just
378:17 - give it a thought all right pause the
378:19 - video give it a thought and then return
378:21 - so i'm going to show you
378:24 - here you can see
378:26 - there are three errors
378:27 - the errors are the uh hello world all
378:31 - right the person.name means this is the
378:33 - name page hello world all right the
378:35 - person.name is inaccessible due to its
378:37 - protection level
378:38 - again another is person dot age is
378:41 - inaccess inaccessible due to its
378:43 - protection level the same goes for
378:44 - personal.getdetails is inaccessible due
378:47 - to its protection levels so
378:49 - because of the private all right because
378:51 - of the private
378:53 - you know
378:54 - uh this private keyword what is
378:57 - happening it made our fields and methods
379:00 - private so we can't access the variables
379:03 - and methods outside of the class whereas
379:07 - with public keyword we can do that
379:09 - right and uh let's say uh there's
379:11 - another way to you know make uh you know
379:14 - field or method private
379:16 - is that you can simply you know remove
379:18 - the private and it will be go to private
379:20 - by default but you know i don't you know
379:22 - i i always like to write private because
379:24 - i i don't know but it seems really good
379:26 - to write private at first so
379:29 - that's why i always write private and i
379:31 - also suggest you for initial stages all
379:33 - right for initial stages
379:35 - uh write private all right
379:37 - if you are creating any private method
379:39 - then for initial stages write private
379:42 - all right so that you know you get it
379:44 - more clearly that what is the use of
379:46 - private so i hope you are now clear with
379:49 - the
379:49 - concept of access modifiers what are
379:52 - public and private all right
379:55 - now there are two more access modifiers
379:57 - that is you know protected all right
379:59 - protected is there
380:00 - and uh
380:02 - so you can you know learn more about
380:04 - them
380:05 - all right
380:06 - you can learn more about them you can
380:08 - search about them you can learn more
380:10 - about them all right through google
380:12 - so make sure you do that
380:14 - now
380:16 - next all right the next concept we are
380:18 - going to learn is static keyword and
380:20 - static classes
380:23 - all right
380:24 - so
380:26 - first of all let's understand the
380:28 - concept of static keyword all right see
380:30 - the static keyword actually helps us to
380:33 - get access to the class members
380:35 - such as variables methods etc with it
380:39 - without needing to create an instance or
380:42 - object of the class whereas um i hope
380:45 - you understood this right
380:47 - right now all right let's make this you
380:49 - know variable to public as of now let's
380:51 - make them to public
380:56 - so now here you can see we are creating
380:58 - an instance of the class right
381:00 - we are creating an instance or object of
381:02 - the class to access these variables
381:05 - right we are creating an instance of the
381:07 - class to access these variables
381:11 - now
381:12 - the thing is if we put a static keyword
381:15 - already if we put a static keyword in
381:17 - front of every variable or field of
381:19 - method like this static
381:22 - all right
381:23 - static
381:24 - public again public static
381:28 - and let's you know let's not create the
381:30 - object now what we can do is person
381:33 - dot name
381:36 - equals priyanshu
381:38 - sorry
381:40 - then person
381:42 - dot
381:43 - age
381:44 - equals
381:45 - 17
381:46 - then person dot
381:48 - get details
381:50 - now let's see if this works or not
381:54 - see this is working
381:55 - this is totally working now let's again
381:57 - try the same thing
381:58 - without this you know static keyword
382:00 - let's try it out let's see if that works
382:02 - or not
382:04 - here you can see it is uh telling us an
382:07 - object reference is required to access
382:08 - static member so non-static member so
382:11 - here you can see
382:13 - remember all right always remember if if
382:16 - we if it creates if we make something
382:18 - static now we don't need to create an
382:21 - object of that class to access it we can
382:23 - access it directly but if any variable
382:26 - or method is non-static all right like
382:28 - currently this uh all these all these
382:31 - methods and variable right in here
382:34 - are
382:35 - non-static alright that means they are
382:37 - not static so we have to create an
382:39 - object of of this particular class
382:43 - to you know edit or you can say access
382:46 - all the fields and methods present
382:48 - inside the class all right so i hope you
382:51 - are clear about this so basically what
382:53 - we get static keyword helps us to get
382:56 - access to the class members all right
382:58 - without needing to create an instance or
383:01 - object of the class all right so that is
383:03 - how the static keyword helps us
383:07 - all right i hope you are you know clear
383:09 - about the static the concept of static
383:11 - keywords
383:13 - now
383:14 - what we have to learn all right what we
383:16 - have to learn is about static class and
383:18 - this is the last concept that we are
383:20 - going to learn into today's lecture
383:22 - see just like we learned about you know
383:25 - uh this
383:26 - static you know variables
383:28 - basically let me tell you in uh you know
383:30 - just like
383:32 - having uh static methods or fields or
383:35 - properties or constructors we can also
383:37 - have you know static classes you know
383:40 - our static classes can only contain
383:42 - static members all right a static class
383:45 - can only contain static members that
383:47 - means let's say if i you know create a
383:49 - static class right now and again let's
383:52 - let's uh you know
383:54 - let's try the old step we are doing like
383:57 - creating an object
384:00 - let's uh do it now all right p p dot you
384:02 - know
384:04 - p dot name equals uh let's say priyanshu
384:08 - then uh p dot h
384:11 - equals
384:12 - 17
384:14 - then
384:15 - p dot uh
384:16 - get details now you uh you'll be getting
384:19 - an error all right
384:21 - the error is
384:23 - cannot declare instance members in a
384:25 - static class
384:26 - cannot declare instance members in a
384:28 - static class the reason be the reason is
384:31 - all the variables and method right in
384:33 - here all the variables and method right
384:35 - in here
384:37 - is non-static and
384:39 - let's let's turn it to static as of now
384:42 - all right let's turn it to static and
384:44 - let's see if we are getting an error or
384:45 - not
384:48 - here we are getting again an error the
384:50 - reason is
384:52 - the reason is not because all the all
384:54 - the variables are in here are static the
384:56 - reason is because
384:58 - as the class is static we are trying to
385:00 - create an instance of the class and that
385:02 - is not possible because uh
385:04 - stat we cannot create instance of a
385:06 - static class
385:08 - we have to direct we have to get direct
385:09 - access to it right so for that person
385:12 - dot you know name equals uh
385:15 - uh priyanshu
385:19 - priyanshu then person dot age
385:23 - equals 17 now let's do it person dot you
385:26 - know get
385:28 - details
385:29 - as
385:30 - let's see it now
385:32 - see it is working like that so this is
385:35 - what a static class is all right so i
385:38 - hope
385:40 - the concepts of classes objects fields
385:43 - method class members then access
385:45 - modifiers and you know static classes
385:48 - are clear all right and this is going to
385:52 - really help you to understand how we you
385:54 - know work with c sharp in
385:56 - unity all right so as of now this module
386:01 - all right in this module we have
386:02 - completed our lectures we we have
386:04 - successfully completed this lecture all
386:07 - right
386:08 - so
386:09 - next will be start creating our own ar
386:12 - applications all right with euphoria
386:16 - so
386:17 - yeah
386:18 - let's get into the next module thank you
386:23 - hey folks uh welcome to module 4 and
386:25 - this is the first video of
386:27 - module 4 and in this lecture i'm going
386:29 - to explain you all right we are going to
386:31 - dig deeper into the concepts of marker
386:33 - based augmented reality that is we are
386:35 - going to learn about the architecture we
386:37 - are going to learn about the available
386:38 - sdks we are going to learn about how
386:40 - things work in market based augmented
386:42 - reality all right and later on i'm also
386:44 - going to tell you what you uh what means
386:48 - how like which tools are we going to use
386:50 - to develop
386:52 - our uh like ar applications right so
386:56 - without any further let's get started
386:58 - so what is see
387:00 - first uh let's recap all right first uh
387:03 - let's recapitulate our concepts of uh
387:05 - market-based augmented reality all right
387:08 - see market-based augmented reality all
387:10 - right uh this is a type of augmented
387:12 - reality all right that makes users that
387:16 - that makes use of uh recognition and
387:18 - tracking alright it is the property of
387:20 - or you can say it is the
387:22 - uh feature of computer vision all right
387:25 - so it make uses the uh properties of
387:28 - computer vision that is our tracking and
387:30 - recognition all right to to uh recognize
387:33 - and track a marker and uh put all right
387:35 - and
387:36 - place or augment a 3d object or any kind
387:39 - of digital objects on top of that marker
387:41 - right you can even augment a video on
387:44 - top of that marker so that is what
387:46 - marker based augmented reality is all
387:48 - right um
387:50 - so yeah that is what marker-based
387:52 - augmented reality is you can even see
387:54 - the diagram right it's not exact diagram
387:56 - but the gif right in here uh there's a
387:59 - mobile and there are some a b c d uh are
388:02 - written some alpha alphabets are written
388:03 - and they are working as a marker right
388:05 - in the sen in the center marker the
388:07 - batman is like the lego form of batman
388:10 - is uh placed so this is what
388:12 - marker-based augmented reality is it
388:14 - basically makes uses of
388:16 - markers to uh augment all right to place
388:20 - digital objects into a real world that's
388:21 - just it all right
388:23 - now if it uh see
388:25 - we already know what uh what our marker
388:27 - based augmented reality is now it is our
388:30 - our a very time alright it is our time
388:33 - to understand
388:34 - uh or learn about
388:36 - different types of game engines all
388:38 - right different types of development
388:40 - engines available
388:41 - all right if we talk about uh there are
388:43 - multiple available in the market alright
388:45 - these are just some of them right i have
388:48 - i have just listed down some of them but
388:50 - there are many others available in the
388:53 - market all right if we talk about the
388:55 - things that are the engines that are
388:56 - available here uh that is unity unreal
389:00 - go dot cry engine then uh if you want to
389:03 - uh develop
389:05 - your own ar filters let's say for uh you
389:07 - want to develop for uh instagram or
389:09 - facebook right there is park air studio
389:11 - that we are that i am going to cover in
389:13 - this course also so this is the bonus
389:16 - section all right in the bonus section
389:17 - i'm going to cover the sparkier studio
389:20 - similarly uh if you if you are a user of
389:22 - snapchat and you want to create your own
389:24 - uh filters for snapchat then uh there is
389:27 - there is lens studio all right these are
389:29 - augmented reality technologies all right
389:31 - um then then there is appertus vr
389:33 - although i haven't used uh used apart
389:36 - svr uh the engines that i have used till
389:38 - now right the the development tools that
389:40 - i have used till now is unity unreal go
389:43 - dot uh i have tried out cryengine but it
389:46 - wasn't suited for me i didn't like it so
389:49 - and another i used was sparky studio all
389:51 - right i haven't used lens studio or
389:53 - apertures vr but you guys can try it out
389:55 - all right
389:56 - uh so these are the development engines
389:58 - uh that are currently available in the
389:59 - market and
390:01 - the most used all right in the in the
390:03 - field of augmented reality and virtual
390:05 - reality and mixed reality the most used
390:08 - is the unity all right like the major
390:10 - major companies uses unity for
390:12 - developing arvr applications unreal
390:15 - unreal engine also is also used
390:18 - so these two are the main like major uh
390:22 - development engines that are used even
390:23 - go dot uh godot supports uh a ar vr you
390:27 - can even you can try it out same does a
390:30 - cry engine two they also support ar vr
390:33 - all right so you can try these out all
390:35 - right and in this course i am going to
390:36 - teach you unity all right and we are
390:38 - going to cover uh the ar ar part with
390:40 - unity
390:42 - all right so as we have learned about
390:43 - the development engine now it's our very
390:45 - time to learn about
390:47 - the software development kits available
390:49 - all right here you can see there are
390:50 - multiple available like like google's ar
390:53 - code then there is kudan then there is
390:55 - apple's ar kit then maxed is there then
390:58 - viewforia 8th wall xr then lightship
391:01 - ardk then easyar is there and wikitused
391:05 - is there right see these are uh software
391:07 - development kits that is sdks the they
391:10 - come in packages all right
391:12 - they come in packages all right and in
391:14 - this course i'm going to cover the
391:16 - euphoria all right i'm going to cover
391:17 - euphoria
391:19 - as viewforia is very famous and very
391:22 - good for marker-based er and
391:24 - it is also easy for beginners so it is
391:26 - better to cover euphoria in this course
391:28 - so i'm going to cover euphoria all right
391:30 - and the tracking tracking feature of
391:32 - euphoria is better than any of these
391:34 - all right means
391:35 - better than any other uh marker based ar
391:38 - technologies all right so
391:41 - that's why i'm going to cover euphoria
391:42 - in this course and also if i if i tell
391:44 - you which
391:46 - sdks have i have i tried i have tried
391:49 - out uh ar code i have developed multiple
391:51 - apps with it i have uh tried out ar kit
391:54 - that is apple's uh then i have tried out
391:56 - euphoria of course then uh i have tried
391:59 - out eighth wall xr
392:01 - although i didn't like that much but
392:03 - it's a decent enough all right then i
392:05 - have also tried out niantic light ship
392:07 - ar all right uh it it has just launched
392:10 - like it has launched uh on 8th of
392:12 - november currently it is in beta alright
392:14 - you if you want you can go through the
392:16 - documentation and download the sdk and
392:18 - try it out all right so uh niantic has
392:22 - launched their uh
392:24 - own lightship sdk niantic is the same
392:26 - company who developed pokemon go all
392:28 - right so uh they have released their
392:30 - technology behind pokemon go on the uh
392:33 - like publicly so i would suggest
392:35 - exploring the light ship ar dk all right
392:38 - um
392:39 - and yeah i have tried these already but
392:42 - if you want you can try the others also
392:44 - like you can try out kudan you can try
392:45 - out max you can try out uh easy ar
392:48 - wikitude and all these available in arc
392:51 - these are not just all right means
392:54 - there are many others also all right
392:57 - like i haven't listened to all of them
392:58 - but there are some of them that i have
393:00 - listed all right so
393:03 - try to do some research all right do a
393:05 - research by yourself and find out uh
393:07 - what more sdk that uh ar sdks are
393:10 - available in the market all right so
393:12 - yeah these are the sdks that are
393:15 - available and uh in the development
393:17 - tools all right in the development tools
393:18 - i'm going to use unity all right i have
393:20 - already taught uh unity
393:22 - and uh in module two and
393:26 - in module 4 i'm going to teach you
393:27 - euphoria all right so
393:30 - we are going to uh for this course we
393:32 - are going to uh we are going to cover
393:34 - this whole course in
393:37 - unity
393:38 - and euphoria all right
393:41 - so yeah let's get uh dive into the
393:44 - concepts all right
393:46 - see what is recognition all right what
393:49 - is it uh
393:51 - uh think of in human terms all right
393:53 - just think of in human terms see a
393:56 - person is coming to you you all right he
393:58 - is uh the person is uh you're relative
394:01 - all right uh you know you know the face
394:03 - alright it is stored in your brain
394:05 - already uh the face of that person is
394:07 - stored in your brain now you can
394:08 - recognize that person right you already
394:10 - know that
394:11 - right you already know that so that's
394:13 - how you are recognizing
394:15 - right that's how you are recognizing the
394:18 - person yeah this person's name is abc
394:20 - and uh he works at this abc company and
394:24 - this and that all right you know that
394:25 - person you you are able to recognize it
394:28 - similarly if you think about devices all
394:30 - right uh
394:31 - let's say um
394:33 - barcode devices right see if you buy any
394:36 - sort of product all right let's say we
394:38 - go in a mall uh when you buy any sort of
394:40 - product you uh submit it in the counter
394:42 - to make the bill all right what they do
394:44 - they have some sort of reader right i
394:46 - exactly uh don't know the name i think
394:48 - it is called barcode reader so what they
394:50 - do they uh with the help of the device
394:52 - they read the barcode all right and then
394:55 - uh push the uh object or the thing that
394:57 - you are buying uh forward right and make
395:00 - the bill so
395:02 - how the how the device is recognizing
395:05 - the barcode right because
395:07 - uh
395:08 - the device also already knows like it
395:11 - already has the data about the barcode
395:13 - right it already does have the data so
395:16 - that's how it is recognizing it
395:19 - so uh like i have bought some some
395:23 - let's say i have bought a pair of shoes
395:24 - all right and there is a barcode the
395:26 - person i have submitted in the counter
395:28 - the person scan the barcode and push the
395:31 - shoe forward to uh for the billing for
395:34 - the billing all right so
395:36 - the particular barcode is stored on the
395:38 - database all right so that's how the
395:41 - barcode reader recognized it similarly
395:43 - if you talk about face recognition
395:45 - system
395:46 - same thing works like in big big
395:48 - companies they use face recognitions
395:49 - also to
395:51 - verify the employees right they use
395:53 - fingerprint recognition also so
395:57 - these are stored in the database and uh
395:59 - some algorithms are there all right
396:01 - there are some algorithms some computer
396:02 - vision algorithms which
396:04 - which are able to uh recognize the
396:07 - person right similarly in ar also there
396:11 - are some sort of databases all right in
396:13 - marker-based ar there are some sort of
396:15 - databases uh databases in the sense
396:17 - there are markers all right those
396:19 - markers are stored somewhere right those
396:21 - markers are stored somewhere and our app
396:24 - and we design our app in that way all
396:26 - right in a way we design our app in a
396:29 - way
396:30 - so that it can recognize all right it
396:32 - can recognize the marker if the marker
396:34 - isn't in our database then it won't be
396:36 - able to recognize it right and if it is
396:38 - not able to recognize it then how would
396:40 - uh like then how will it uh put the
396:43 - marker like uh how will it put the
396:46 - marker on top of that
396:48 - uh sorry put that object on top of that
396:51 - marker right
396:52 - how did he do that how would the
396:54 - algorithm how would the sdk do that
396:56 - so it is always important all right to
396:59 - uh whenever working with markup is there
397:02 - we have to put a marker on the marker on
397:04 - the apps database and don't worry we are
397:07 - going to see how this is done all right
397:09 - there's a very basic of euphoria only so
397:11 - uh
397:13 - yeah so that's how uh recognition works
397:16 - all right uh in in marker based ar
397:19 - and uh
397:21 - this this uh process is uh valid in
397:24 - multiple uh ways right so this is what
397:26 - recognition is recognition is basically
397:28 - recognizing something all right that is
397:30 - in the database like in our human mind
397:32 - all right if i if i see a person i uh i
397:35 - must i might know the person right like
397:37 - uh i know my brother all right he's a
397:40 - person that is in my brain's database
397:42 - right
397:43 - i know that person so i will be able to
397:45 - recognize it all right now let's say
397:47 - some new person come all right i won't
397:49 - be able to recognize him right i won't
397:52 - be able to recognize that person if if
397:54 - it was a random person because i don't
397:56 - know the person his uh his details
397:59 - aren't stored in my database right so
398:03 - these things work something like this
398:04 - all right so yeah this is what
398:06 - recognition is
398:08 - now if we talk about um
398:10 - tracking all right see this is a this is
398:12 - the image alright this is the image of
398:14 - ganesha lord ganesha all right and
398:18 - in here you can see multiple plus right
398:20 - you can see multiple plus are there
398:23 - do you know what is this
398:24 - these these are uh basically uh the
398:27 - trackers small small uh trackers the
398:30 - these are feature points you could say
398:31 - all right these are feature points of
398:33 - the image that help us
398:35 - tracks all right that helps tracking the
398:39 - uh marker all right that helps track in
398:41 - the marker how this help see
398:44 - uh basically whenever uh
398:47 - whenever we uh
398:48 - upload a database all right uh in in our
398:51 - database system all right
398:53 - in view for you in viewforious dashboard
398:55 - after you have uploaded your image
398:58 - in the database all right you can you
398:59 - can view the tracking points all right
399:01 - this is the image from viewforia only
399:03 - like
399:04 - uh i
399:06 - means i uh uploaded this uh image on the
399:08 - database so that i could get the feature
399:11 - points alright i can i will show you how
399:13 - to get that feature point how to see the
399:16 - feature points by yourself right
399:18 - yeah in the next video only so
399:21 - these feature points all right these are
399:22 - some sort of patterns you could say all
399:24 - right
399:25 - see uh
399:27 - the tracking all right the tracking
399:29 - technology all right in ar basically
399:31 - finds all right they they try to find
399:34 - some sort of pattern all right they
399:36 - these feature points are useful for
399:37 - tracking and recognition
399:40 - all right
399:42 - means see if the
399:44 - how would uh see uh if i if i had to
399:47 - give an example all right you you have
399:49 - created a marker already you have
399:51 - successfully placed all that you
399:53 - successfully place the digital object on
399:55 - top of that marker
399:57 - all right you have successfully placed
399:59 - the detail
400:00 - object on top of the marker
400:02 - now
400:04 - how do you think will the like if i if i
400:06 - move my move my marker on onto let's say
400:10 - 10 units to the left side all right
400:13 - how do you think the object will also
400:15 - move because yeah yeah it is recognizing
400:18 - the marker right it is recognizing the
400:19 - marker that part is done and it has been
400:22 - placed on top of that marker but
400:24 - uh when we will move our our marker from
400:28 - one place to another all right
400:31 - how will how will the digital object
400:33 - move
400:34 - can you think of it
400:37 - that's where the tracking helps all
400:39 - right
400:41 - how it helps see
400:44 - the uh there are you can see the feature
400:46 - points right here are the feature points
400:47 - and these feature points all that these
400:49 - feature points
400:50 - helps the marker or it helps the app to
400:55 - to track the track the marker all right
400:57 - to keep the marker in track and
400:59 - also move or and also move the
401:02 - particular digital object
401:04 - along with the marker if i am
401:06 - moving alright if i am moving uh the
401:09 - marker to the left uh all right let's
401:12 - say i have moved 10 units to the left
401:15 - all right
401:17 - the same thing will happen with the
401:19 - object also
401:21 - because the marker has moved all right
401:22 - and our app has tracked that the that
401:25 - the current position of the marker is uh
401:27 - 10 units from the center
401:29 - right
401:31 - so uh our what our app has done it has
401:34 - tracked and again placed it in there all
401:36 - right
401:37 - although if you try to move it the
401:39 - object will also move with itself it
401:41 - will be as
401:43 - smooth like it will be really smooth so
401:45 - that's how tracking is tracking helps in
401:48 - market-based augmented reality all right
401:50 - so
401:52 - tracking
401:53 - and recognition all right these two are
401:55 - very fundamental and important
401:57 - technology of
402:00 - marker-based augmented reality all right
402:03 - so
402:04 - yeah i hope you have understood that
402:06 - what is recognition
402:08 - and what is tracking and how they are
402:10 - helping in a marker-based augmented
402:12 - reality all right
402:14 - so
402:15 - yeah the same thing it is written here
402:16 - markup page augmented reality makes use
402:18 - of both recognition and tracking all
402:20 - right and you you and now you know
402:22 - how it makes use of them right
402:25 - why it makes use of them what is the use
402:27 - case of them right you
402:29 - know right now so
402:31 - also before moving to the next section
402:33 - all right
402:34 - so uh do subscribe my channel all right
402:37 - because it helps me uh to
402:40 - bring more videos all right more uh
402:43 - courses for you for free all right and
402:46 - also join our discord community all
402:48 - right and if you have any doubt alright
402:49 - if you have any single doubt join our
402:51 - discord community you can ask in there
402:53 - we are
402:54 - we we will be helping you in there there
402:56 - are many like-minded people who are uh
402:59 - who will if i am not available for some
403:01 - time then they will help you to figure
403:03 - your doubt
403:04 - so
403:05 - uh make sure to join our community and
403:06 - if you have any doubt you can ask in
403:08 - there all right
403:10 - i would like to help and also if you uh
403:13 - you can even comment alright comment
403:15 - down in the comment section that what
403:16 - your doubt is and i would clear that
403:19 - right in there all right so
403:22 - now our here is our another topic that
403:24 - is marker design detection and
403:26 - recognition
403:27 - all right see
403:30 - uh this is a this is a very basic
403:32 - fundamental thing all right now
403:34 - there are colorful markers also all
403:36 - right but uh
403:38 - to make you understand i have taken
403:40 - example of a black and white marker all
403:43 - right
403:44 - see
403:45 - basically uh
403:48 - majorly all right many people
403:50 - prefers to use uh like
403:54 - black and white markers something like
403:55 - this all right
403:57 - which are basically square shaped and uh
404:00 - and uh a black and white like uses black
404:02 - bordered images and uh also like the
404:05 - image inside those black borders are
404:08 - black and other are white
404:11 - so
404:13 - uh basically what it does right
404:16 - see the these this uh this type of
404:18 - images already this type of images
404:21 - helps in
404:23 - image unwrapping all right
404:26 - here you can see that this is a bird all
404:28 - right
404:29 - this is a bird all right
404:31 - aft after the image unwrapping all right
404:33 - after the image unwrapping technology is
404:35 - applied here you can see uh
404:38 - like in this image alright from this
404:40 - image the face all right the white
404:43 - borders are there and here is the face
404:45 - it the face has been unwrapped from that
404:47 - whole
404:48 - sorry black borders right
404:50 - so here you can see the face has been
404:52 - unwrapped and it has been positioned
404:54 - like this the similar thing will happen
404:56 - with this bird also
404:58 - all right it would be unwrapped alright
405:00 - this image would be unwrapped
405:02 - and then
405:04 - it would be uh placed like this all
405:07 - right this would be the main image so
405:10 - this is how image unwrapping works all
405:12 - right and image unwrapping is also a
405:15 - very important concept
405:17 - similarly uh here you can see this is a
405:19 - uh like many people use this all right
405:21 - and it this black and white image makes
405:24 - it easier for the algorithm all right
405:26 - makes it easier for algo for the
405:27 - algorithm to do the detection uh to
405:30 - uh
405:31 - unwrap the image all right but there are
405:33 - many powerful algorithms data that have
405:35 - been designed and they can efficiently
405:39 - extract or you could say unwrap the
405:41 - images of unwrap the color images also
405:45 - so that's why we can also use
405:48 - uh colorful markers too
405:51 - all right
405:52 - so
405:53 - yeah and even if you if you notice all
405:55 - right uh if you go to uh
405:58 - let me show you in here also all right
406:01 - here you can see
406:02 - uh
406:03 - the marker already i have already told
406:05 - you that this is the the marker this is
406:08 - the image of the marker that i have
406:10 - uploaded on viewforia's database right
406:13 - for marker-based tracking
406:15 - as you can see the image has been like
406:17 - the texture of the image has been is
406:20 - really low like the quality of the image
406:22 - is really low it has been pixelated you
406:24 - can literally count the pixel if you
406:26 - want all right although it would be hard
406:27 - because there are lacks of pixel in
406:29 - there but
406:30 - uh here you can see that the image has
406:32 - been pixelated the quality has been
406:34 - lowered all right the image is distorted
406:38 - alright that's how it it helps to track
406:40 - right and that's how it helps to track
406:42 - it tracks pixel by pixel
406:44 - it this things helps to unwrap the image
406:46 - also
406:48 - so
406:50 - that's how my uh
406:52 - marker image unwrapping works all right
406:54 - it unwraps the mean mean particular
406:57 - portion from the whole image
407:00 - all right
407:01 - so now now it's our time alright it's
407:03 - our very time to understand
407:05 - ar system architecture all right see if
407:08 - you understand the architecture you can
407:10 - even create your own ar sdks or red
407:13 - marker based ar sdks although that of
407:15 - course won't be easy all right because
407:17 - uh for before developing any sort of sdk
407:20 - you need to have a good amount of
407:21 - knowledge of computer vision already
407:23 - because see
407:25 - augmented reality
407:26 - was built upon uh computer vision only
407:30 - it is it is uh you could say uh
407:32 - a product all right or you can say it is
407:34 - a technology of computer vision only if
407:37 - computer vision
407:39 - wasn't there then augmented reality also
407:41 - wouldn't have been possible so come to
407:43 - vision is the is the root all right it
407:45 - is it is the root of
407:47 - uh augmented reality so it is really
407:49 - important see if you want to create your
407:51 - own uh
407:53 - ar sdks all right if you want to create
407:55 - your own ai sdk
407:57 - you need to have a good knowledge of
407:59 - computer vision you need to know the
408:01 - algorithms all right even i'm learning
408:03 - computer vision for augmented reality so
408:06 - i can get a more deeper understanding of
408:09 - how these things work all right i have a
408:12 - like i currently have a decent
408:14 - understanding all right i i understand
408:16 - how these things work but i don't know
408:18 - how to
408:19 - uh develop these things all right what
408:21 - algorithms are used so for that i need
408:23 - to learn computer vision
408:25 - so i'm also learning that so it is very
408:27 - important for you all right if you want
408:29 - to develop your own sdk you have to
408:31 - learn computer vision all right so
408:33 - without any
408:35 - more talk say let's start
408:37 - with uh understanding the uh ar system
408:40 - architecture
408:41 - all right see
408:43 - in this architecture you can see there
408:45 - is a camera all right then uh from the
408:47 - camera the image is passed all right uh
408:51 - image is passed to the
408:53 - tracking module all right some things
408:55 - happen in there all that will understand
408:57 - what things happen in there all right
408:59 - then it is passed uh to the rendering
409:01 - module where the real world and the
409:03 - virtual uh objects are combined in the
409:06 - rendering module all right and the
409:07 - augmented uh augmented output all right
409:10 - the output is passed through the
409:11 - rendering module to the display
409:13 - all right so this is this is how it
409:15 - works you can see the diagram all right
409:17 - like like if i if i had to show you like
409:19 - this all right
409:21 - uh
409:22 - pen
409:24 - first of all it is uh moving from here
409:26 - and there
409:28 - uh then from here
409:29 - it is going to here alright
409:33 - then from here
409:34 - it is literally going to the rendering
409:36 - module and this all right this virtual
409:39 - module
409:40 - is
409:40 - adding all right this virtual module is
409:45 - adding to the uh
409:47 - real world component all right um sorry
409:49 - for this bad handwriting but this is rc
409:51 - means real world component all right and
409:53 - real world component and real world
409:55 - component sorry virtual component and
409:57 - real world component
409:58 - are like
410:00 - actually attached all right uh the real
410:03 - world uh the virtual component uh is
410:06 - attached to the real world and then the
410:08 - output all right then the output is
410:10 - generated that is the augmented image
410:13 - all right and after that
410:15 - it is being displayed in in your systems
410:18 - display
410:19 - all right
410:20 - so
410:21 - this is it that's how it is working
410:24 - all right
410:25 - now if we talk about understand the
410:27 - module all right see if we talk about
410:30 - you already know what is the camera
410:31 - right what this camera module does right
410:34 - because it it renders like it renders
410:37 - the
410:38 - image of a real world all right into
410:41 - your phone that's what a camera does but
410:43 - uh what is the capturing module all
410:45 - right see the things that you see from
410:47 - your mobile camera right you cannot even
410:50 - capture it right you can even capture it
410:52 - so uh through the camera some sort of
410:55 - image is passed
410:56 - to your display all right and when you
410:59 - click on that centered button available
411:01 - in your
411:03 - mobile camera
411:04 - software when you click that it is
411:06 - captured right so the capturing module
411:09 - basically helps to capture the image all
411:12 - right basically it helps to capture the
411:13 - video or the other image all right so
411:16 - this is what capturing module does
411:18 - now if we talk about the tracking module
411:20 - all right see the tracking module is the
411:22 - core
411:22 - all right the tracking module
411:26 - uh is the core
411:28 - and if we talk about uh
411:31 - see
411:32 - the tr how tracking module works now it
411:34 - it calculates all right it calculates
411:36 - the pose already of the camera all right
411:39 - in the real time all right like it will
411:41 - uh calculate where your camera is
411:44 - and if i talk about uh fovs all right
411:47 - that is six degree of freedom
411:50 - it means that uh you have a freedom of
411:53 - uh to look anywhere already you could
411:56 - this is a very basic definition of uh
411:58 - six dofs all right
412:00 - see what this
412:02 - term pose does let me tell you
412:05 - uh pose estimation all right basically
412:08 - helps uh helps to get the orientation
412:11 - and location all right get the
412:12 - orientation and location of
412:14 - of a particular object
412:16 - this is what the tracking module does
412:18 - all right it is basically the code
412:20 - alright it helps to calculate the
412:23 - pos pose of the camera all right
412:26 - in real time it's not like he uh
412:29 - it will uh only capture once then it
412:31 - won't do it again it happens in loop so
412:34 - the pose estimation is
412:36 - done and also because of that we get the
412:38 - 3d location or you can say the
412:40 - orientation of any sort of object
412:42 - that is the work of tracking module
412:45 - all right if we talk about the rendering
412:47 - module
412:48 - all right see
412:51 - uh what this rendering module does is
412:54 - basically it uh combines all it it
412:57 - combines the digital object all right it
413:00 - combines the digital object
413:03 - with the real world visual all right
413:06 - with the real world image
413:09 - right if you if you you have used any
413:11 - sort of augmented reality
413:14 - you might have seen that right that some
413:16 - 3d object is appearing on sort of on any
413:18 - marker
413:20 - right
413:21 - on an image a 3d object is occurring
413:25 - so
413:26 - a virtual uh a virtual basically a
413:28 - virtual component
413:30 - is being attached with that image and
413:33 - then
413:34 - it is being processed and
413:37 - pushed forward for the display all right
413:40 - and
413:41 - if you are confused already if you conf
413:44 - if you are confused about these uh
413:46 - modules don't worry all right we are
413:48 - again going to look into another all
413:50 - right this is a very much more
413:52 - simplified version
413:54 - all right
413:55 - this is a much more simplified version
413:57 - of that ar system architecture i have
413:59 - included this because i thought that for
414:02 - the first for the first iteration i
414:04 - think people will get confused that how
414:06 - this like what did i explain to you you
414:08 - might not understand it right so i have
414:11 - also included another architecture all
414:13 - right the same thing happens in here
414:15 - also but i will re-explain
414:17 - see in here all right a live video feed
414:21 - all right
414:22 - is going through the camera
414:24 - all right to the image capturing module
414:27 - all right and it is alright and it is
414:29 - divided uh in frames
414:31 - the the video is divided in frames and
414:34 - then it is going through the image
414:36 - processing mode module all right and in
414:39 - there
414:41 - in there the marker is detected and
414:43 - tracked all right
414:45 - means uh in there the marker is detected
414:47 - actually all the processing is done all
414:49 - right all the post calculation is done
414:51 - and then we go to the marker tracking
414:53 - module all right where the post
414:55 - calculation is generally done and all
414:57 - the tracking
414:59 - stuffs are being done in there only all
415:01 - right all the uh what can i say
415:04 - those are virtual points right those
415:07 - feature points are applied in the image
415:09 - in there only uh the pose calculation is
415:11 - there only see if you are confused about
415:13 - ports pose calculation
415:15 - don't worry all right uh let me explain
415:17 - it to you again suppose calculation is
415:19 - basically it calculates the position all
415:21 - right it calculates the position
415:23 - of any object all right that's what pose
415:26 - calculation is it calculates the
415:28 - orientation of the object and
415:31 - the location of the object all right so
415:34 - that's what pose calculation is and then
415:36 - after all these processing and tracking
415:39 - is done it is passed to the rendering
415:41 - module all right the virtual object
415:43 - all right the that the virtual object
415:45 - that we want to augment all right
415:48 - that we want to augment
415:50 - is combined with the real world image
415:52 - all right the virtual object is combined
415:54 - with the real world image
415:56 - then
415:57 - then it is passed to the display screen
415:59 - and we actually see the output on our
416:02 - displays so that's how this ar system
416:05 - architecture works all right i hope you
416:07 - are clear with the concept
416:09 - right
416:10 - again the same definitions all right the
416:13 - image capturing module that takes the
416:15 - images it
416:16 - breaks it to frame by frame then
416:19 - and all those
416:21 - things are that are being done then
416:22 - there is image processing module already
416:25 - the processing that are being done all
416:27 - right means the detection or you could
416:28 - say the recognition techniques are being
416:30 - applied in there all right
416:32 - then if we uh talk about the marker
416:35 - tracking module in there the position is
416:38 - being calculated all right
416:41 - the position is being calculated and
416:42 - then feature points are provided
416:44 - and uh the rendering module all right
416:47 - this rendering what this rendering
416:48 - module is doing this rendering module is
416:50 - basically
416:51 - uh
416:52 - combining the virtual object to the
416:54 - digital object this is just it all right
416:57 - it is doing that
416:58 - and yeah
417:01 - that's it
417:02 - so
417:03 - that is that's it for our today's
417:05 - lecture and i hope you have understood
417:07 - alright i hope you understood uh how all
417:10 - these things work all right i hope you
417:12 - have understood how the market based ar
417:15 - system architecture works all right
417:18 - so i don't think now it would be any
417:20 - problem as you have uh as i have cleared
417:23 - all the very basics or the very basics
417:25 - of marker-based augmented reality now i
417:27 - don't think it would
417:29 - would be any problem learning marker
417:31 - based ar development
417:33 - in this lecture i'm going to tell you
417:35 - how to uh set up your unity and euphoria
417:37 - engine for developing ar applications
417:40 - and later on in this video only we'll be
417:43 - creating our very first augmented
417:45 - reality application
417:47 - with
417:48 - unity
417:49 - and euphoria so
417:51 - yeah the very first thing you have to do
417:53 - is go to this website
417:54 - developer.viewfourier.com
417:56 - all right and in there you have to
417:58 - create your
417:59 - account after creating your account all
418:02 - right you can see
418:04 - right in the top that
418:06 - there's a download section click on that
418:08 - particular section and you will be
418:09 - redirected to this page all right and
418:13 - in this page all right you are seeing
418:14 - multiple options and the uh yesterday
418:17 - only
418:18 - like in 15 november
418:20 - uh the latest version of v4d engine has
418:22 - got released that is 10.3 view 4d engine
418:25 - 10.3 all right you can even uh select
418:27 - your particular version
418:28 - right from here already that is 9.8 or
418:30 - 18.3
418:32 - uh i have seen one problem
418:34 - that is uh when using any version of
418:38 - any 10 uh
418:40 - like any view fourier version of
418:42 - 10 uh
418:44 - i am facing an error in unity uh so i
418:48 - would suggest using 2020 only all right
418:51 - for this
418:52 - course because i'm going to use the
418:54 - latest version of euphoria and uh
418:57 - now you have to download the sdk all
418:59 - right what is an sdk sdk is the software
419:01 - development kit that will help us to
419:03 - develop for uh
419:05 - means ar applications with unity and
419:07 - euphoria right so we have to download
419:10 - our uh
419:11 - sdk now here you can see there are
419:13 - multiple options available all right uh
419:15 - let's say you don't want to develop with
419:17 - unity alright you don't want to develop
419:19 - your marker based ar application with
419:21 - unity you can go for android studio or
419:23 - if you want to do it for ios you can uh
419:26 - that is xcode you can you can download
419:29 - for ios then there is a uwp then
419:33 - there is uh
419:36 - lumen so
419:38 - you uwp is a basically universal windows
419:41 - platform so uh you can use that too so
419:45 - for uh for this course all right for
419:46 - this for the sake of this course we are
419:48 - going to use
419:49 - um
419:50 - view fourier engine alright the very
419:52 - first option that you are getting that
419:53 - add view for the engine to a unity
419:55 - project or upgrade to the latest version
419:57 - so just simply uh click on it all right
420:00 - and uh some things will be loading up in
420:03 - here all right and then click on agree
420:05 - i'm going to decline it because i have
420:07 - already downloaded uh the
420:10 - sdk but you can you have to click i
420:12 - agree and then download the sdk all
420:14 - right so yeah after downloading it all
420:18 - right
420:19 - after downloading what i would suggest
420:20 - is first let's set up the web version
420:23 - all right like set up all the things
420:25 - from the website
420:28 - right and then after that
420:30 - we'll be moving towards unity so how to
420:34 - do that right so
420:37 - now we have to get uh into another page
420:40 - that is this develop section all right
420:42 - remember you have to create your account
420:44 - first to uh get all this thing so do
420:47 - create your account so now click on this
420:48 - develop i've already opened it on my
420:51 - second window and here we go
420:53 - so here you can see uh there are target
420:55 - manager license manager so what are
420:57 - these two the license manager actually
420:59 - helps us to manage the licenses all
421:01 - right licenses means there are some
421:03 - particular lines of code all right there
421:05 - are some particular lines of code code
421:07 - you could say some special unique code
421:11 - that helps view fourier to connect with
421:13 - the backend server and verify actually
421:15 - uh what kind of uh services are we using
421:19 - right like uh i'm going to use the uh
421:21 - basic uh service of euphoria that is
421:24 - free so
421:26 - yeah all right so that uh
421:29 - that uh basically
421:31 - uh particular key actually uh we call
421:34 - that a key that
421:35 - that particular key would help us
421:38 - actually to uh connect to the viewforia
421:40 - portal all right from our unity all
421:42 - right so that our app can utilize the
421:44 - features that we uh get
421:47 - after uh using the different versions of
421:50 - euphoria that is basic premium all right
421:53 - any of these two versions so yeah now uh
421:56 - the very first thing we have to do is we
421:58 - have to create our
422:00 - license so how would we do that see uh
422:02 - you can even buy the premium version but
422:04 - i don't i don't have the money to buy it
422:06 - so i would uh simply get the basic all
422:08 - right i would click on the basic all
422:11 - right and uh
422:12 - it would load some sort of page so as
422:14 - you can see it right here it is loading
422:16 - some page
422:17 - and uh in that page all right uh
422:22 - keep your license name all right let's
422:23 - say i want to uh name it to view first
422:27 - first
422:29 - ar
422:31 - app
422:32 - all right this should be the
422:34 - name for my license and here you can see
422:37 - this these are the things and uh
422:40 - we have to check this box all right we
422:42 - have to check this box and after that uh
422:44 - click on confirm all right and that
422:46 - would uh
422:48 - redirect uh that would create actually
422:50 - our um
422:53 - license and we can click on that and
422:55 - then simply go uh
422:57 - go to that license and copy the license
422:59 - for us
423:00 - right so i would simply click on the
423:02 - license all right i would simply click
423:04 - on that license
423:06 - and here we go we go uh it copied uh it
423:09 - got copied in our
423:11 - clipboard now another important thing
423:13 - that we have to do is we we have to go
423:15 - to the target manager right just click
423:18 - on the target manager
423:20 - see what uh this target manager does is
423:22 - it helps us
423:24 - uh keep the markers all right see i've
423:26 - already told you that in market based ar
423:28 - we need markers and we have to store
423:31 - like store it somewhere right so uh
423:34 - the target manager uh helps
423:37 - uh keep track of the marker on the
423:39 - servers of euphoria and also we have to
423:42 - download a unity package for that so
423:45 - that we can include it on our
423:48 - unity means local uh local computer
423:50 - right so how would we do that so for
423:52 - this simply you have to click on add
423:54 - database
423:56 - right and then you have to uh name your
423:58 - database let's say uh
424:00 - first ar app right
424:02 - first
424:04 - first ar
424:06 - app
424:07 - uh oh i missed that r
424:09 - no worries
424:11 - yeah so then i have to click create all
424:15 - right
424:16 - and
424:19 - then uh
424:20 - turn it on then then
424:23 - go to that particular target
424:27 - and you have to upload your target in
424:29 - there like means the marker image
424:32 - so that we can use it right and i would
424:34 - show you some other things also so that
424:36 - you can choose your right marker all
424:39 - right uh choose the right marker for
424:42 - your application it's really important
424:44 - to get the right marker because if the
424:46 - marker is of low quality then
424:50 - marker based ar won't work well so
424:53 - that's why right so click on add target
424:56 - all right so i i already have some
424:58 - images so i'll be choosing from that now
425:01 - here are three other options all right
425:03 - uh we won't be looking it
425:05 - now all right so just uh click on the
425:08 - single image all right basically a
425:10 - single image is selected by default so
425:12 - no worries but then you have to click on
425:15 - browse you have to choose an image all
425:17 - right you have to choose a
425:19 - image
425:20 - so
425:22 - yeah here we got an image of a car all
425:25 - right
425:26 - uh
425:27 - i don't have any other image so i'm
425:29 - gonna use that one and you can give any
425:32 - width you want all right so my uh i
425:34 - would like prefer to give six basically
425:36 - what would happen now that uh the width
425:39 - you give all right it would uh get
425:42 - that particular units of width in uh the
425:45 - unity engine right so uh remember that
425:48 - that won't be like
425:51 - give any sort of difference so i want to
425:54 - name it marker
425:55 - all right
425:56 - so then click on add
426:00 - and now it's uploading our target all
426:03 - right it's uploading our target
426:05 - and that's really cool
426:08 - so let it do its job
426:25 - cool now as our
426:27 - means marker is has been added i want to
426:30 - show you some other things also so to
426:32 - get those things click on the marker
426:34 - right click on the on the marker
426:37 - it would redirect you to the marker
426:39 - properties you could say that
426:40 - so
426:42 - then i'm going to show you some very
426:43 - important things all right and
426:45 - that would give you an understanding
426:47 - that what sort of marker you should use
426:50 - and what sort of marker you should not
426:52 - use for your marker based ar
426:54 - applications all right
426:56 - so as you can see here all right in the
426:58 - in the
426:59 - if you can see in the right side there
427:01 - are multiple texts right type single
427:04 - image status active target id
427:06 - augmentable all right this is the
427:07 - section that this is the text we want to
427:09 - focus on as of now
427:12 - what this tells us five star means this
427:15 - image is very good already it it is
427:17 - going to be superb for uh
427:19 - tracking
427:20 - now see remember always that
427:24 - three uh the range between three to five
427:27 - star is okay all right below uh below it
427:32 - won't give you good results even three
427:34 - sometimes won't work that great so
427:36 - always remember to take a picture all
427:38 - right always remember to take a picture
427:41 - that is that has got four to five rating
427:44 - all right four to five star rating and
427:46 - it's really really really important all
427:48 - right so
427:49 - uh yeah
427:55 - so now
427:56 - as we have seen that what sort of marker
427:58 - we should use so we should use remember
428:01 - we all we always should use a marker
428:04 - that is really good now you have to
428:06 - click on this uh show features option
428:08 - all right i'm going to
428:10 - see
428:11 - here you can see that remember that
428:13 - slide that uh that uh in that slide
428:15 - there was uh a ganesha's picture and
428:18 - there was some dots in it so you can
428:20 - call those as tracking points all right
428:23 - those are known as tracking points with
428:24 - the help of these the marker actually
428:27 - tracks the marker and helps to put it up
428:30 - on the
428:31 - marker right so uh yeah
428:35 - this is these are the details that you
428:36 - need to know all right and now uh
428:40 - another thing we have to do all right
428:42 - another thing we have to do is to
428:44 - download this database and then after
428:46 - that we are going to set up our unity
428:49 - engine all right we are going to work on
428:50 - our unity engine
428:53 - so first of all
428:54 - let uh let the scene load let the scene
428:58 - load
428:58 - all right and uh then
429:01 - click on this download database all
429:03 - right
429:04 - and here you are going to find two
429:06 - options that your android should export
429:07 - or visual studio but of course we aren't
429:10 - working on any of them so we are going
429:12 - to choose unity editor right we are
429:14 - going to choose this unity editor and
429:16 - then simply click on download so it is
429:18 - compiling our database as of now all
429:20 - right after it is done compiling
429:23 - uh we are we are uh
429:26 - going to save that file and uh then
429:30 - we are moving towards unity right so
429:35 - yeah that's cool so now
429:37 - just click on save all right and our
429:39 - unity package uh will be downloaded just
429:42 - as you can see it has got downloaded so
429:45 - let's move towards unity
429:48 - so as uh we have uh created our
429:52 - viewforia
429:54 - assets that is we have created our
429:56 - marker and set it a set at i have set a
430:00 - target so now we have to
430:02 - actually change our platform so how
430:04 - would we do that right see uh
430:07 - basically we are developing ar
430:08 - application
430:10 - for uh
430:12 - our mobile right for our mobile devices
430:14 - that is android devices so what are we
430:16 - going to do see uh currently currently
430:19 - if i if i show you as you can see in the
430:21 - top the the
430:23 - currently we can develop for pc mac and
430:25 - linux standalone right
430:28 - that's what we can develop for but we
430:30 - have to develop it for android so what
430:31 - we have to do it's fairly simple all
430:34 - right just go to this file all right
430:36 - then click on build settings
430:39 - now here you are seeing multiple options
430:41 - that is pc mac and linux standalone and
430:44 - the unity logo you are seeing here it
430:46 - means this particular thing is active
430:48 - all right now if i click on android
430:52 - you are getting multiple options don't
430:53 - look at that as of now all right you can
430:56 - uh actually
430:58 - take a look uh at that afterwards uh
431:01 - this uh whole lecture all right you can
431:03 - try it out by yourself
431:05 - but we have what we have to do is we
431:07 - have to click switch platform but let's
431:09 - say you don't want to develop for
431:10 - android you have an ios device so you
431:12 - can
431:12 - click on ios also uh see
431:15 - these things won't work if you haven't
431:18 - installed the ios module alright i'm on
431:19 - a windows laptop so uh it doesn't makes
431:22 - any sense
431:23 - to
431:24 - install uh
431:27 - uh basically to install basically ios
431:30 - module uh in unity so i haven't done
431:33 - that uh but i have android ones right so
431:36 - what i'm going to do is i'm going to uh
431:38 - click on android and then switch
431:40 - platform it's simple as that what it
431:43 - will do is it would uh make our unity uh
431:47 - means it would uh give the
431:49 - means it would give the power to unity
431:52 - to develop for android so just click on
431:54 - switch platform and it would start doing
431:57 - its work all right and after it gets
431:59 - switched uh i will return back with uh
432:02 - with the next section
432:04 - so now
432:06 - uh basically our platform has been
432:08 - converted to android or you could say
432:09 - shift it to android now we have to
432:12 - import our sdk and one tip i would like
432:14 - to give you guys is that
432:16 - before all right if you are developing
432:18 - for any platform let's say you are
432:20 - developing for android only or ios only
432:23 - always remember
432:24 - first change the platform then import
432:27 - anything you want
432:29 - because after importing all right uh
432:31 - this happens to me a lot like still it
432:34 - happens what happens uh is basically uh
432:37 - i do the development all right let's say
432:39 - i'm doing doing it for android all right
432:41 - i do the development and later on when
432:43 - uh i noticed that i haven't shifted
432:46 - to android platform
432:49 - and you know when uh
432:50 - after half of the things are done
432:53 - multiple modules will be there multiple
432:55 - assets will be there in your unity
432:57 - and when you will shift that now it
432:59 - would take a hell of time so remember
433:02 - whenever starting with unity if you are
433:04 - going to change platform do it do it at
433:07 - the first then only import any asset
433:10 - module or anything you want alright
433:11 - because it would reload all the script
433:14 - things it would recompile it would uh
433:17 - make the assets compatible for android
433:19 - and all those things background
433:20 - processors going on so always remember
433:22 - to do that right and now it's our fair
433:26 - time all right to import the sdk so how
433:29 - we do that two steps means two methods
433:32 - are there that is first of all simply
433:36 - open that whole folder all right open
433:39 - this folder and simply
433:42 - drag and drop all right simply simply
433:45 - drag and drop it in
433:46 - here all right one way is this another
433:49 - way uh
433:51 - is to basically
433:53 - right click import package custom
433:55 - package
433:56 - then import it all right it's uh simple
433:59 - as that
434:01 - well so now
434:03 - uh as uh as that whole processing thing
434:06 - is done now we have got an another
434:09 - window all right basically this is the
434:10 - package window all right
434:12 - don't worry about anything here and just
434:15 - click on import all right and it would
434:16 - import your uh view for your module and
434:19 - into unity all right and give it its
434:21 - time so that it can do so all right
434:26 - and also when it says something like
434:28 - this
434:29 - what you have to do is click on update
434:32 - all right and it would again start
434:35 - means resume with the importing uh
434:37 - stuffs
434:39 - so guys
434:40 - now our view fourier engine has been
434:42 - imported all right and one of the uh
434:45 - very good things all right actually uh
434:47 - there's a problem with sometimes uh it
434:48 - occurs or what happens is that uh
434:51 - sometimes when you import uh euphoria
434:53 - right uh unity fails to compile it or
434:56 - something like that some sort of like
434:58 - that happens all right and your uh view
435:01 - for a engine doesn't get imported
435:03 - successfully so how would you check that
435:05 - your v4 engine has been imported
435:06 - successfully
435:08 - right so what you can do is click on the
435:10 - hierarchy panel right click
435:12 - and out of all these uh
435:15 - default options you will get a new set
435:17 - of option that is view fourier engine
435:19 - and that's when you know that we you
435:21 - have successfully imported v4 engine and
435:23 - if not all right maybe
435:25 - due to some problem you ha you wasn't
435:27 - you weren't able to import it
435:29 - successfully what you can do is reimport
435:32 - it as simple as that and i'm sure that
435:35 - that would fix your problem
435:37 - right
435:38 - another thing all right uh
435:40 - uh do you remember when we uh create our
435:42 - created our marker database in the
435:44 - target manager in developer.veforia.com
435:47 - we downloaded another unity package all
435:50 - right so what that what is that unity
435:52 - package
435:53 - that unity package contains the markers
435:56 - all right and we have to import that
435:59 - unity package all right so
436:02 - again uh previously i showed you uh the
436:05 - drag and drop method now i'm going to
436:06 - show you the right click method so click
436:08 - on the project panel
436:10 - right click all right all right simply
436:13 - simply just right click
436:15 - click on import package
436:17 - custom package
436:19 - all right and then
436:22 - get that marker package the uh the my
436:25 - marker packages name is fast ar app so
436:27 - i'm going to
436:28 - import it
436:29 - all right
436:31 - so again the same steps you will get a
436:34 - window like this and click on import and
436:36 - your files
436:37 - will be imported
436:39 - so now as we have imported our
436:44 - asset all right uh so now as we have
436:46 - imported our marker database and also
436:48 - the view fourier engine sdk now it's
436:50 - time it's our very time to develop our
436:54 - own ar application right
436:57 - so how do we do that the very first
436:59 - thing all right the very first thing our
437:01 - viewforia developer
437:03 - does
437:04 - delete the main camera we don't need
437:06 - that main camera all right
437:08 - because that main camera is meant for uh
437:12 - virtual rendering all right it is only
437:14 - for virtual rendering not real plus
437:16 - virtual
437:19 - what euphoria does is viewforia is
437:21 - really good and he provides us
437:25 - an ar camera built into it so just right
437:29 - click in the hierarchy click on view
437:31 - fourier engine
437:33 - and then click on ar camera
437:36 - and here we go
437:37 - you got an ar camera now this camera is
437:40 - going to work
437:42 - for augmented reality that is it is
437:44 - going to capture the real world and put
437:46 - the digital object in the real world
437:49 - all right and that's what we wanted now
437:52 - remember we copied our license
437:54 - previously uh
437:56 - during the web part all right when we're
437:58 - covering covering the web part
438:00 - we are going to need that license
438:04 - so just click on ar camera in the
438:06 - inspector menu yeah you are going to get
438:08 - this open viewforia engine configuration
438:11 - all right in the view for your vf script
438:14 - click on that
438:16 - you are going to get something like this
438:17 - all right and click on uh in this app
438:20 - license key section right this is the
438:22 - main section so what i'm going to do is
438:24 - don't click this button it would
438:25 - redirect you to that website and you
438:27 - have to create another license but we
438:29 - have already created our license right
438:31 - so i'm going to just
438:33 - paste that license
438:34 - right and voila
438:36 - viewforia got the license
438:39 - right so yeah that's cool now as we have
438:43 - done the very basic setups all right see
438:46 - uh in this in this one i'm not go not
438:49 - going to uh
438:51 - tell you how to create advanced v4 app
438:53 - this is just a setup video and
438:55 - this is a video of how we set up our
438:58 - viewforia and also uh
439:01 - we'll be creating our very first
439:06 - ar application with euphoria all right
439:08 - so unity is doing its processes so
439:13 - let it do it it's taking some time but
439:15 - don't worry yeah it's done now what we
439:17 - have to do is we have to right click
439:20 - again go to view fourier engine and now
439:22 - see in marker based uh as i already told
439:25 - that we need markers so how would we add
439:27 - those markers in unity so right click
439:31 - view fourier engine then there's
439:32 - something known as image target click on
439:34 - that all right and you will get
439:37 - another game object known as
439:39 - image target
439:41 - right
439:42 - now i know you might not uh
439:44 - see if i if i zoom it to you you will be
439:46 - seeing it totally white
439:48 - now believe me uh
439:52 - uh this one uh
439:54 - we have a fix for this right see by
439:56 - default unity uses
439:58 - image type that we have to uh specify
440:00 - from unity only this that is image
440:03 - uploaded in unity but as we already have
440:07 - a database all right we already remember
440:09 - we made a database we made a target
440:11 - manager database so we are going to use
440:13 - that so click on the image target all
440:16 - right go to this inspector menu and you
440:18 - will find something called image target
440:20 - behavior all right don't look into
440:23 - another other options we are going to
440:25 - explore these options in our next
440:28 - like in project videos or next videos so
440:31 - what we are going to do is
440:32 - click on this type
440:34 - uh
440:36 - selection menu all right and from here
440:38 - you would find multiple things cloud
440:40 - record basically cloud record what it
440:42 - does it it fetches the data from cloud
440:44 - that is the images from cloud and here
440:47 - is from database that we uploaded in our
440:50 - unity all right and now uh we have
440:53 - selected our database now we have to
440:54 - select which database alright maybe we
440:56 - have multiple database in our ar
440:58 - application so we can we have to select
441:01 - it that is our first erf and voila it
441:04 - will automatically get you the
441:06 - first marker
441:08 - the very first marker available in the
441:10 - database so we have this marker
441:12 - available in the database right
441:14 - so as simple as that
441:16 - nothing too complicated
441:18 - now
441:19 - what we have to do is
441:21 - all right now what we have to do
441:24 - we have to right click again all right
441:26 - see i'm not going to include any 3d
441:28 - models right now all right yeah we'll be
441:30 - doing that in our future videos but as
441:32 - of now this is only a setup video so
441:36 - just
441:37 - add a 3d object all right add your
441:39 - favorite 3d object
441:41 - there's no favorite one of mine so i'm
441:43 - just going to add a cube
441:45 - yeah
441:46 - and
441:47 - voila a cube got added now reset it
441:49 - transform alright reset its transform so
441:52 - it's back to zero all right
441:54 - and put it up a bit
441:57 - right put it up a bit and
441:59 - voila you got your cube
442:01 - now
442:03 - if you play this all right if you play
442:04 - this scene
442:06 - the cube will be there right the marker
442:08 - won't perform its functions why
442:10 - because uh you haven't put this cube
442:14 - inside of this image target so that's
442:16 - what we have to do we have to make the
442:18 - 3d model that we are using the child of
442:21 - the image target all right so now we are
442:24 - good to go
442:27 - all right
442:28 - that's cool right
442:30 - one of the good things of unity uh and
442:32 - euphoria is that you can test viewfordia
442:35 - on your pc only so how would we do that
442:38 - uh just click on play button alright and
442:40 - it would
442:41 - start the camera
442:43 - all right
442:44 - nothing to complicate it so let's do
442:47 - that
442:51 - so now if i put the camera all right i
442:53 - mean
442:55 - if i if i basically put the marker right
442:57 - in front of the camera right uh it would
443:00 - start tracking the cube it would uh
443:01 - start showing the cube all right just
443:04 - see it in here
443:05 - right uh you can you can see it clearly
443:08 - right now if i remove it all right you
443:11 - can see that the cube is staying here
443:13 - all right now this is a feature that
443:14 - called extended tracking of uni uh for
443:17 - euphoria only but uh it is useful also
443:20 - but not in this case so i'm gonna remove
443:22 - it how would you remove that
443:24 - all right just get out of the play mode
443:27 - all right uh so i got out of the play
443:28 - mode uh click on image target
443:31 - then here is a in the the default
443:33 - observer event handler only here you are
443:36 - seeing multiple or an option that is
443:38 - tracked or extended tracked so what i
443:41 - want you is to select only tracked all
443:43 - right and what would do uh what it would
443:46 - do is it would set uh like it won't uh
443:49 - now it won't have the feature all right
443:51 - now it won't have the feature of
443:53 - extended tracking all right let me
443:55 - show you by entering the play mode all
443:57 - right
444:00 - now if i uh if i show you all right just
444:03 - just check it out in here
444:05 - see the cube is here right i the cube is
444:08 - here now as soon as i remove it
444:10 - all right as soon as i remove it
444:12 - the
444:13 - cube goes away right
444:18 - see the cube goes away so this works
444:20 - much better if you try it on android all
444:23 - right
444:24 - so i would recommend you to build that
444:25 - application i would also show you how to
444:27 - do that all right
444:29 - i would recommend you to build that uh
444:31 - android application and then
444:34 - try to try it out on your android phone
444:36 - so and
444:39 - i guess you all are happy all right you
444:41 - created your first ar application i know
444:43 - that this is a cube but the project will
444:45 - be doing
444:46 - is going to be really interesting all
444:48 - right it is going to be really really
444:50 - really interesting
444:51 - so
444:52 - now to build our viewforia application
444:55 - what you have to do see i i already told
444:57 - you in the very first video of
444:59 - installing
445:01 - unity you have to have the android
445:03 - module open jdk all right ndk and all
445:06 - those things so that you can make the
445:08 - things work right you can build your
445:11 - application that if you don't have that
445:13 - then it would be a problem all right and
445:16 - now what you have to do is
445:18 - go to asset all right now the scene all
445:21 - right uh the scene we are on is known as
445:24 - sample scene all right we are using the
445:26 - sample scene and in here
445:28 - in in this particular
445:31 - section you have to add that scene all
445:33 - right you can just click on add open
445:34 - scenes like it would add the scenes that
445:37 - are currently open my sample scene is
445:39 - open i can
445:40 - simply click uh add open scenes you can
445:43 - even add uh it by drag and drop
445:46 - right it's as simple as that but uh as
445:49 - uh now we have added alright remember
445:51 - without adding the scene
445:53 - if you build that application it
445:56 - won't work out right so it's really
445:58 - important to include the scene you are
445:59 - working on
446:01 - then click on build
446:03 - all right
446:04 - then
446:05 - just click on build
446:07 - and then
446:08 - name your application i want to name it
446:11 - test
446:12 - all right and then click on save
446:15 - it would start building building your
446:16 - application
446:19 - in this particular section of the video
446:21 - i'm going to tell you about some of the
446:23 - free resources that you can use uh in
446:26 - your development all right see as a
446:28 - exact developer
446:29 - i need 3d models animations all the time
446:33 - all right and these resources are a life
446:36 - saver believe me like when i started or
446:39 - see i am not a 3d modeler all right when
446:42 - i started i didn't knew about these
446:44 - things but i got to knew over time and
446:47 - believe me these resources have helped
446:50 - me a lot and one of the resource
446:52 - is
446:53 - sketchfab see sketchfab is a really good
446:55 - place to find your 3d model alright see
446:58 - if you if you want a 3d model of a car
447:01 - you can just search for it you will get
447:03 - multiple 3d models for free all right
447:06 - there will be paid 3d models free 3d
447:08 - models too you can get your own
447:11 - all right
447:12 - so sketchfab is a really great place if
447:14 - you want some other options all right if
447:17 - you want some other options also there
447:20 - is uh another that is cg cg trader i
447:22 - guess its name is cg trader then there
447:24 - is turbo squid all right boost code is
447:27 - there there some some sort of free 3d
447:29 - models are available also there are also
447:32 - available in there
447:33 - but what i prefer the prefer most is
447:35 - sketchfab sketchfab has a lot of 3d
447:38 - models available for free so i'd suggest
447:41 - whenever you're looking for a 3d model
447:43 - go to sketchfab this is from where i get
447:46 - my 3d models all right
447:51 - so here's another resource that is known
447:53 - as turbo squid i already told about it
447:55 - to you but let me show you see this is
447:57 - another website from where you can get
447:59 - multiple 3d models for free and also for
448:03 - paid all right you can get it from here
448:05 - it has multiple 3d models of 3ds like it
448:08 - you can get blender 3d models cinema 4d
448:11 - models maya models 3dx
448:13 - models obj models all right similarly
448:16 - you can get cars models of multiple cars
448:20 - you can get models of multiple
448:22 - characters you can get models of animals
448:24 - then there is of vehicles you can search
448:27 - for any model you want all right so this
448:30 - is another very useful resource that you
448:32 - should have a note on
448:37 - this is another resource that you can
448:39 - make use of this is known as ready
448:41 - player dot me see if you want avatars
448:44 - all right if you want avatars for your
448:46 - uh games let's say you want your own
448:48 - avatar you can go to this website uh go
448:52 - to this website and make your own avatar
448:54 - based on you all right you can make your
448:56 - own play playable characters with this
448:58 - ready player dot me all right this is a
449:00 - really good avatar creation engine even
449:03 - if you want to
449:04 - um
449:05 - build your own uh like if you want to
449:07 - implement all right if you want to
449:09 - implement this ready player dot me
449:11 - avatar engine they also have a unity
449:13 - plugin for it so you can check that out
449:15 - too
449:15 - all right
449:18 - the thing that you are currently seeing
449:19 - is a is a output all right uh there is a
449:22 - 3d model
449:23 - that i customized all right that i
449:25 - customized so there's a 3d model that i
449:27 - customized and even you can make your
449:29 - own
449:30 - avatar
449:33 - so here comes another website all right
449:36 - from where you can get a lot of free 3d
449:38 - models all right there's a really great
449:40 - website i prefer this one too all right
449:43 - my next uh
449:44 - means after sketchfab my next choice is
449:47 - alwaysfree3d.com you can uh
449:50 - don't worry if if you are
449:52 - if you want these links all right i will
449:54 - provide a link down below all right i
449:56 - will provide all the links of the
449:58 - website that i am using down in the
450:01 - description or description box and also
450:04 - i would also create a
450:06 - pdf of it and
450:08 - upload it on my course website all right
450:10 - so you can check the links from there
450:13 - also
450:14 - so free 3d is also a really great
450:17 - website from where you can get a lot of
450:19 - free 3d models so this is also one of my
450:22 - choice
450:25 - here is another website alright known as
450:28 - nasa 3d
450:30 - here you can get all the free resources
450:32 - from nasa all right the i guess all the
450:35 - models in here are totally for free you
450:37 - can get all the models uh free uh models
450:40 - related to space all right related to
450:42 - nasa at this place all right i would
450:45 - provide the link down below so this is
450:47 - another great platform where you can get
450:49 - the 3d models it also provides you
450:51 - textures all right so this is a really
450:54 - great place
450:58 - so this is another website known as
451:01 - render hub from here also you can get a
451:03 - lot of 3d models both paid and
451:07 - free so you can search any model you
451:09 - want all right and i'm pretty sure that
451:12 - you might get
451:13 - those models
451:14 - in here all right even sketchfab is also
451:17 - there i already showed you turbo squid
451:19 - is there then there is free 3d now comes
451:22 - render hub 2.
451:23 - all right
451:25 - so this is another resource all right
451:28 - this is known as 3d leashes
451:30 - so it can if you want any sort of low
451:32 - poly household items you can get all the
451:35 - things from this website uh this
451:37 - particular 3d website so this is a
451:40 - really great platform also so you can
451:43 - simply go into this website and download
451:45 - your 3d mode
451:48 - here's another resource known as
451:49 - opengamer.org
451:52 - this is a really great website if you
451:54 - want to have
451:55 - free assets all right free ui assets for
451:59 - your application you can go to this
452:01 - website all right if you want uh if you
452:03 - are making any game this website is also
452:05 - going to be really helpful for you for
452:07 - getting the ui assets for free all right
452:10 - so it contains both paid and free assets
452:14 - this is another website known as
452:16 - archive3d.net
452:18 - all right from this website you can get
452:20 - any 3d model totally for free all right
452:23 - now none of these models available in
452:26 - here are paid so there are free models
452:29 - means
452:30 - the models that are available in this
452:32 - website are totally for free so you can
452:34 - also visit this website and search for
452:36 - your models
452:39 - here comes another free resource known
452:41 - as mixamo this free resource is provided
452:44 - by
452:45 - uh adobe you can add animations to your
452:48 - humanoid 3d models and there's a really
452:50 - great website that you should look for
452:52 - yeah this website lags a bit all right
452:54 - but there's a really great website from
452:55 - where i get animations for my 3d models
452:59 - all right
453:02 - so here's another resource all right
453:04 - this is going to be the last resource of
453:05 - the video that i'm showing alright but
453:07 - there are plenty of more resources
453:09 - available over the internet all right
453:12 - i would include all the additional
453:13 - resources that you might need also in
453:16 - the
453:18 - i would also add them in the
453:19 - pdf alright that i'm going to share with
453:21 - you all right and to get the pdf you can
453:24 - simply uh
453:25 - search for like search for it in the
453:27 - description below in the uh video and
453:29 - also
453:31 - you can get that from the course website
453:34 - all right so this is this is another
453:35 - website that says smithsonian
453:38 - digitization all right this is also a
453:40 - really good uh website for getting 3d
453:42 - models as you can see here there are
453:44 - many models available like of like
453:47 - skeleton of triceratops then skeleton of
453:49 - mammoths then there is orbiter space
453:52 - shuttle model is also available so you
453:53 - can there's also a really great resource
453:56 - all right so this much for this video
453:58 - in this lecture we are going to look
454:00 - into multiple tracking all right so this
454:02 - is basically a feature of euphoria where
454:04 - you can track multiple markers at the
454:07 - same time all right it's it's a this one
454:10 - is really useful whenever you are making
454:13 - uh an ar book all right
454:16 - whenever you are making games so these
454:18 - this feature uh helps a lot all right
454:21 - like for example if you are going to
454:23 - make an ar pokemon game right so
454:26 - with within one mobile there will be one
454:28 - there will be two cards and you would be
454:30 - scanning those card and make and two
454:32 - pokemons would appear and you would make
454:34 - those two pokemons fight each other all
454:36 - right so
454:37 - multiple uh market tracking helps a lot
454:40 - in many ways all right and in today's
454:42 - today's lecture only i'm going to show
454:43 - you all right so
454:44 - first of all uh i want you to set up
454:47 - your euphoria account your sd case all
454:49 - right you already know how to do that i
454:51 - have shown you in my previous video so
454:54 - if you are confused
454:55 - you can watch it watch that particular
454:57 - portion again and uh if you have any
454:59 - doubt you can comment it down in the
455:01 - comment section all right so without any
455:03 - further delay let's get started the very
455:05 - first thing you have to do is click on
455:06 - this main camera and delete it all right
455:09 - because of course we don't want the main
455:10 - camera and uh one more thing i would
455:13 - like to do is to stack up
455:16 - stack this game window or to the side
455:18 - all right to the side of my scene window
455:20 - so that i can uh see whatever
455:23 - thing is happening all right so
455:26 - yeah
455:29 - so
455:32 - just wait a few seconds all right cool
455:35 - so
455:35 - here you can see that it has been
455:37 - written no camera is rendering that's
455:39 - because we don't have any camera so now
455:41 - we do what you have to do is click on
455:42 - hierarchy uh go click on view fourier
455:45 - engine and select ar camera all right uh
455:48 - so you can keep it like this or you can
455:49 - stack it up uh on top of directional
455:52 - light i prefer stacking up on uh
455:55 - directional light it feels better
455:56 - actually looks good actually so that's
455:58 - why it's just a personal preference
456:00 - alright and now what you have to do is
456:02 - uh click on i means right click then
456:05 - again uh click on image target all right
456:08 - select a marker right from here click
456:11 - in the image started behavior click on
456:13 - from database and select the database my
456:16 - day for for my uh case the database is
456:18 - first ar app all right and
456:21 - the marker i'll be using for this is m1
456:23 - and let's name the image target as m1
456:26 - all right because i'm using uh the m1
456:29 - marker all right so
456:32 - yeah so here we got our very first
456:34 - marker all right i would be placing the
456:35 - 3d models later on first let's set up
456:38 - our second marker so again right click
456:40 - click on view fourier engine click on
456:41 - image target all right then again name
456:45 - it m2 all right
456:47 - so then again
456:48 - in the inspector window only you will
456:50 - get a
456:51 - type selected from database then select
456:54 - the database that is first arf in my
456:56 - case and uh
456:58 - take this uh
456:59 - m2
457:01 - marker that i have all right so you can
457:04 - uh you will get the marker what you have
457:06 - named after all right so
457:08 - make sure you do that now we have two
457:10 - markers in in place now the problem with
457:12 - that is if we if we try to
457:15 - show one marker all right if we try to
457:17 - show one marker at a time then uh means
457:20 - let's let's uh say for an example all
457:23 - right uh i'm using this app alright and
457:25 - now i want to show uh that
457:28 - total how many means i i'm trying to uh
457:32 - means track both the markers at the same
457:34 - time all right
457:36 - so i'm trying to do that and uh of
457:38 - course that wouldn't work all right so
457:40 - to figure out uh this problem
457:43 - we have a solutions all right so
457:45 - currently the problem we are facing is
457:47 - uh it will only track one marker at a
457:49 - time all right but we want to track both
457:51 - the markers at a time all right so we
457:53 - are going we are going to go to that
457:55 - feature but first of all let's uh set up
457:57 - our 3d models all right
457:59 - so
458:01 - right click or not right click uh i
458:03 - already have the 3d models all right i
458:05 - have the uh i have one dinosaur 3d model
458:08 - so i'm just going to import it right in
458:09 - here all right uh let me reset its uh
458:13 - transform all right so here we actually
458:15 - got
458:16 - the dinosaur i know it doesn't looks
458:18 - that good i just
458:20 - uh choose one random from
458:22 - sketchfab these are objs and
458:26 - believe me i don't uh want you to like
458:29 - use obj files all right i want you to
458:31 - use
458:32 - uh
458:33 - gltf files because they have better
458:35 - quality
458:37 - better texture quality and all those
458:38 - things all right
458:40 - that's that's the major reason
458:43 - but for the sake of this tutorial and to
458:45 - make things work first fast so i go
458:48 - got to go for uh this obj model all
458:50 - right now there are some materials all
458:52 - right so i will create the materials
458:55 - it's uh it's pretty simple here you can
458:56 - see there are multiple materials in here
458:58 - albedo so what you can do is uh right
459:01 - click in the
459:03 - texture section and create a dinosaur
459:05 - material
459:09 - so here i create a darkness of material
459:11 - now if i try to find where is uh
459:14 - exactly the
459:16 - means this is the normal map right this
459:18 - is uh
459:20 - the albedo one already so i found albedo
459:22 - one drag and drop it in uh here all
459:24 - right and
459:25 - drag this on top of this now this this
459:28 - one looks uh looks pretty good all right
459:31 - so now
459:32 - i need i also need to add the
459:35 - normal map so that it uh gives a better
459:37 - look all right so
459:42 - yeah it's it's uh looking
459:45 - really really great so i uh currently
459:47 - have click on fix now because it is not
459:49 - being marked as a normal map so what uh
459:53 - the what this fixing process would do is
459:55 - it will uh fix that uh
459:58 - texture to a normal map all right so
460:01 - just just wait for a few seconds and uh
460:04 - this process would be done all right now
460:07 - let's let's see
460:09 - we have ambient occlusion we have
460:11 - metallic texture so uh let's apply the
460:13 - metallic texture first all right so here
460:15 - we got the metallic texture but uh
460:18 - actually let's remove the smoothness
460:20 - all right then
460:23 - here we have the roughness all right uh
460:26 - so
460:28 - and uh then
460:31 - where is it
460:32 - yeah there's another albedo one this is
460:34 - uh maybe for the eye so i'm not going to
460:37 - go into that much so uh for now this
460:40 - this thing looks good all right so just
460:42 - uh
460:44 - as our model is ready so what you have
460:46 - to do is uh put this model
460:48 - under the hood of
460:50 - m1 that is make it a game object of m1
460:53 - marker all right so for now our this
460:56 - this model is set up now
460:59 - again we have another uh
461:01 - model that is of a cake
461:03 - i uh like i was thinking to take another
461:06 - dinosaur model but then i thought let's
461:08 - let's take a cake how many dinosaurs
461:09 - would be there
461:11 - right uh so
461:12 - now i need to bring the scale up all
461:14 - right so i'm going to make it 50
461:17 - 50 sorry
461:19 - 50
461:20 - and here goes another 50. all right so
461:24 - this this seems uh pretty big um
461:27 - so i would scale it down a bit so uh
461:29 - don't worry
461:32 - okay yeah this this uh this thing looks
461:35 - good all right
461:39 - okay cool
461:40 - now i wanted to save this all right uh
461:43 - save this and uh simply drag and drop
461:45 - this inside the m2 all right so
461:49 - yeah
461:50 - so now uh
461:52 - here uh one thing we would be seeing is
461:55 - all right one problem we will be seeing
461:57 - is that
461:58 - whenever all right whenever we are going
462:00 - to like play uh the scene
462:02 - what would happen is uh we only one
462:05 - marker will be detected alright if we
462:06 - give if we feed it two markers all right
462:10 - then it will only detect one of it
462:13 - because uh we haven't set up the
462:15 - settings that is needed right so that's
462:18 - what we have to do or click on ar camera
462:21 - all right then click on open view for
462:23 - your configuration
462:25 - all right
462:27 - so here you can see here multiple
462:28 - options and
462:30 - the one that would be uh our preference
462:33 - is that this one maximum size
462:35 - simultaneous tracked images all right so
462:39 - and there's another one maximum a
462:41 - simultaneous tracked object so basically
462:43 - the first of all let me tell you what
462:45 - the this
462:47 - two does basically the uh currently you
462:49 - can see
462:50 - uh one is written there alright and that
462:52 - means only one marker or only one object
462:56 - would be detected all right at a time so
462:59 - what we have to do is uh we have to
463:02 - increase it to how many uh like to harm
463:06 - to as many as
463:08 - as many numbers as we want all right
463:09 - like let's say if we want our app to
463:12 - detect four markers at a single time
463:15 - right so we can uh write it four in
463:17 - there all right or if we want it to
463:19 - track four objects at one time then we
463:20 - can write uh four in the object section
463:23 - but for for for this course we are only
463:26 - uh like we aren't exploring the tracked
463:29 - objects portion all right so we are
463:32 - going to explore those maximum
463:34 - simultaneous tracked images so what you
463:35 - can do is currently it is one just
463:37 - simply change it to two all right so
463:39 - that's how it's uh it's going to work
463:42 - all right
463:44 - so it's pretty simple as that there's
463:46 - nothing
463:47 - much to like exactly scare about all
463:49 - right but yeah this is uh
463:53 - this is it right see uh the thing that i
463:55 - would like to say is
463:58 - whenever all right uh
464:00 - generally generally uh whenever we
464:03 - actually like
464:05 - create ar books we
464:07 - don't usually uh keep making
464:10 - means we don't usually track two to
464:12 - three images at one time we just track
464:15 - one images at a time all right and
464:16 - that's what i would recommend you to
464:18 - track one images at a time because then
464:20 - that would make it more efficient all
464:22 - right or else uh the the ui might get
464:24 - cluttery if you if you don't manage it
464:27 - in that way all right and that gets a
464:29 - bit more complicated so i always
464:31 - recommend people to
464:33 - uh like for ar books all right for
464:36 - specifically ar books try to use only
464:39 - one marker uh means
464:41 - set the maximum sample antennas tracked
464:43 - images to one because at that point uh
464:47 - you guys will want or to exactly use
464:50 - already to exactly use
464:53 - one marker at a time all right so
464:57 - let me show you all right let me show
464:59 - you
465:00 - um just just see this now all right so
465:03 - we have uh
465:04 - we are able to just
465:06 - oh yeah we got it so we are able to see
465:08 - that uh at at a single time all right we
465:11 - are able to detect two markers all right
465:13 - so that is what how it works all right
465:16 - so i
465:17 - i would recommend you to try uh play
465:19 - with this this features feature more all
465:21 - right so that uh you explore more new
465:23 - things all right um
465:26 - so yeah that that's it
465:28 - so that's it for today's lecture all
465:30 - right so see you in the next lecture
465:31 - thank you
465:35 - in this particular section of the video
465:36 - we are going to look into
465:38 - virtual buttons
465:39 - so virtual buttons are another way all
465:43 - right are another way to add buttons in
465:45 - your
465:47 - view for your application all right you
465:49 - there are two types of buttons that you
465:51 - can add first of all ui buttons all
465:52 - right like uh using simple canvas and
465:55 - those buttons in world space all right
465:57 - you can do that
465:58 - another
465:59 - another way is that is to use virtual
466:01 - buttons all right
466:03 - so in this tutorial we are going to look
466:05 - into the virtual buttons
466:07 - uh and before starting all right before
466:09 - starting with virtual buttons there are
466:11 - some rules to be followed all right some
466:13 - suggestions some rules that are needed
466:14 - to be followed
466:16 - the very first thing all right the very
466:18 - first thing that should be kept in mind
466:20 - that the size of the button alright the
466:22 - size of the button should be equal or
466:23 - greater than 10
466:26 - all right
466:27 - of the overall target area
466:29 - always remember that
466:31 - the size of the button should be
466:33 - equal or at least all right at least 10
466:36 - percent
466:38 - of the overall target area all right
466:42 - now if the like
466:45 - if the area is 100
466:47 - then the 10 uh the button should be at
466:49 - least the size of 10 percent of that
466:51 - area all right that's it
466:53 - another thing all right another thing
466:55 - that is
466:57 - always all right always try to place the
467:00 - button all right always try to place the
467:02 - button
467:03 - where the place is reach with feature
467:06 - points all right
467:07 - see in the introduction video i already
467:09 - uh showed you how to check for feature
467:11 - points and
467:13 - open the viewfor your website and look
467:15 - for where the feature point is much
467:18 - greater all right where the quantity of
467:19 - feature points is much greater and
467:21 - always place the button there all right
467:25 - another thing is that
467:27 - uh insert
467:28 - insert the buttons all right
467:30 - what does that means
467:32 - that means uh is that don't
467:35 - make the buttons all right don't make
467:37 - the buttons touch the image target
467:40 - borders all right the borders of the
467:42 - image target so
467:43 - always
467:44 - uh
467:45 - give some padding in the button from the
467:47 - outer side all right so sorry from a
467:50 - margin in the button from the outside
467:52 - all right so always remember that so
467:54 - always insert the button so that they
467:56 - don't touch the borders of the image
467:58 - target
467:59 - another and the last point is
468:02 - don't stack the buttons upon each other
468:05 - all right what does that mean see when
468:07 - you are viewing all right when you are
468:09 - viewing
468:10 - uh
468:11 - from some point all right when you are
468:13 - viewing
468:14 - the image target from
468:16 - a particular point
468:18 - you would see all right
468:20 - you would see
468:21 - that
468:24 - if you place those buttons on top of
468:26 - each other all right you won't be able
468:28 - to reach
468:29 - the uh second button it would be really
468:32 - like it would be really hard to get uh
468:35 - to the second button so don't ever stack
468:38 - the buttons upon each other all right so
468:41 - that's it
468:42 - so
468:44 - let's start the development of our
468:46 - virtual button let's implement it
468:51 - see
468:52 - uh i would like to mention is that i'm
468:54 - using the same project all right the
468:56 - same previous project that i used to
468:58 - uh
468:59 - develop the what like show you the very
469:02 - initial steps of euphoria
469:05 - all right
469:06 - so i'm using the same project so i i
469:08 - haven't had changed my license key and
469:10 - my database although if you want you can
469:13 - do so all right it's totally upon you if
469:15 - you want you can do so you can even
469:17 - create a new project for implementing
469:19 - virtual buttons
469:20 - i am doing this because i want to keep
469:22 - all the
469:23 - source code
469:25 - at one place and provide provided to you
469:27 - all right so it won't be cluttered up
469:31 - so
469:32 - yeah let's get started the very first
469:34 - thing alright the very first thing is
469:36 - you have to delete the main camera
469:39 - and then add a ar camera
469:43 - select view fourier engine and click on
469:45 - ar camera so
469:47 - let me uh place it on top of the
469:49 - directional light
469:50 - don't worry it won't have any sort of
469:52 - effect so it is totally upon me now i
469:54 - have placed my ar camera
469:57 - another thing is to add the image target
470:00 - now the image target would be same as
470:01 - the previous one because i haven't
470:03 - changed my image target
470:05 - but you can do so if you want all right
470:07 - now if i click on image target
470:10 - here i get my image target now
470:14 - let me uh
470:15 - select the database
470:17 - so i'm going to select from database and
470:20 - now i'm going to select the database
470:21 - that is first ar
470:23 - here is the marker that is selected all
470:25 - right now what i want
470:28 - what i want is to create a 3d cube all
470:31 - right i would show you why just wait for
470:34 - a second let me reset the transform of
470:37 - it
470:40 - so as i've reseted the transform i'm
470:42 - going to uh
470:44 - place it
470:46 - at the back all right i'm going to place
470:47 - it at the back
470:52 - so
470:55 - see i'm using shortcut keys q w e all
470:59 - right q for uh the this hand tool uh w
471:02 - for this uh
471:04 - anchor tool and e for the rotational
471:06 - tool and r for the scale tool all right
471:08 - so these are some shortcuts
471:10 - so uh i'm using those shortcuts all
471:12 - right if you think how am i getting this
471:14 - then yeah that's how i'm getting it
471:17 - now
471:19 - uh this cube looks a bit dull right like
471:22 - it doesn't have any sort of colors it's
471:24 - totally white and i don't like it
471:26 - so let's create a material for it all
471:29 - right now
471:30 - uh
471:31 - in this i'm also going to show you how
471:33 - to add textures to your material all
471:35 - right and i have already imported a
471:37 - texture i have downloaded downloaded
471:39 - from 3d textures dot me
471:42 - all right the links are given in the
471:44 - ar resources file you can check them out
471:47 - all right it is available on my website
471:50 - now let me show you the textures
471:54 - here are the textures all right and i'm
471:56 - going to tell you how to implement it
471:58 - now this is not a texture this is just
472:00 - an overview file so you can check how
472:02 - this how the cube will look but
472:05 - i'm
472:06 - directly going to implement it all right
472:09 - so first of all delete this uh
472:12 - delete this particular material we don't
472:14 - need it
472:16 - all right
472:17 - so
472:19 - and another thing all right another
472:21 - thing is that
472:23 - first of all create
472:25 - a material all right create a material
472:28 - let's name it textured
472:31 - textured
472:33 - box or let's say
472:35 - cube
472:36 - all right this is what i will name it
472:39 - after that
472:41 - what i want you is to
472:43 - go to the inspector panel all right go
472:45 - to the inspector panel and
472:48 - select the textures you want
472:50 - so what i will simply do is i will click
472:52 - on albedo
472:56 - it would pop up a panel now i have to
472:59 - find all right i have to find a texture
473:01 - i want
473:04 - now
473:07 - i'll find a texture
473:10 - that that has been named as baseline all
473:12 - right
473:13 - so it's not showing the full name just
473:16 - wait
473:18 - let me lock it
473:30 - cool now from here i can find
473:33 - what textures i want so for the very
473:35 - first thing uh in here i have to get
473:38 - a base color texture all right this one
473:41 - this is i'm going to put this in the
473:43 - albedo section
473:45 - all right
473:49 - now you might not see uh the
473:51 - effects in here
473:53 - all right you might not see that because
473:54 - we haven't applied the materials
473:57 - so just drag and drop the material in
473:59 - here and see it has been applied in the
474:01 - cube i know
474:03 - it has
474:05 - the texture has been applied but it
474:06 - doesn't looks good but
474:08 - you won't say this after
474:10 - watching the whole
474:12 - material uh applying thing
474:15 - all right now
474:16 - and here's there is another section that
474:19 - is metallic now let's
474:21 - find
474:22 - a
474:23 - metallic texture so here i got a
474:24 - metallic texture all right
474:27 - so see uh it's not like i'm identifying
474:30 - these textures it is just written in the
474:32 - end of the names
474:35 - now i would adjust the settings a bit
474:37 - all right
474:38 - i would adjust the settings a bit
474:40 - uh see you won't uh like you won't like
474:43 - it as of now the reason is i haven't
474:45 - applied other materials that that's why
474:47 - it's not looking realistic or good so
474:50 - i'm going to apply those now here i have
474:53 - to add a normal map
474:55 - this is a normal map
474:57 - so i'm going to apply the normal map and
474:59 - here you can see that uh
475:01 - the bids all right here you can see the
475:03 - bits in here are
475:05 - coming to show up all right they are
475:08 - putting the 3d
475:10 - aspect in here you can see it right
475:13 - now we have to add another thing that is
475:15 - a height map all right so let me find
475:17 - the height map
475:19 - okay yeah
475:20 - now
475:22 - i have applied the height map and this
475:24 - uh this height map will help me to
475:25 - adjust the height of the
475:27 - like height of these uh
475:29 - particular things right you can uh let
475:32 - me show you from like
475:34 - from uh from nearly all right
475:38 - so here you can see that it is moving
475:40 - right it is moving right
475:43 - so that
475:44 - that is what height map does
475:46 - now another thing all right another
475:49 - thing is that we have to add an
475:50 - occlusion now this is the ambient
475:52 - occlusion all right this is the ambient
475:54 - occlusion mask
475:56 - so
475:58 - now you can see that we have also added
476:00 - the occlusion mask
476:01 - now if you want to increase the
476:03 - smoothness you can do so but i am not
476:05 - liking the smoothness that much so it
476:08 - should be something like this
476:09 - all right now
476:11 - let's see if anything is left
476:14 - um roughness
476:19 - no um
476:22 - all right let's see
476:24 - okay
476:25 - as of now all right for us it's uh we
476:28 - are good with this cube alright this
476:30 - looks realistic too
476:32 - now you can get all the textures all
476:34 - right there are really great textures
476:36 - available at 3d textures dot me so i
476:38 - would really suggest to go in there and
476:39 - check out the textures alright and take
476:41 - the texture that you
476:42 - like
476:44 - as simple as that
476:46 - all right
476:47 - now another thing all right
476:50 - is another thing is we have to
476:55 - put this cube all right we have to make
476:57 - this cube a child of
476:59 - image target all right we have to make
477:02 - this cube a child of
477:03 - image target
477:06 - now click on image target all right and
477:08 - another thing that you may you might see
477:10 - that the inspector panel is not changing
477:13 - that's not any sort of bugs it is
477:15 - basically i have locked the inspector
477:17 - panel now i have unlocked it so i have
477:19 - got all the things
477:21 - all right
477:23 - now
477:24 - in the image target uh
477:27 - in the image target behavior script
477:29 - uh under the
477:31 - add target button you would find
477:32 - something a drop down
477:35 - that is advanced all right you need not
477:37 - to look into these um
477:40 - properties
477:41 - but for us the very important thing is
477:44 - this particular button add virtual
477:46 - button so click on it
477:48 - right and you can see that it has added
477:50 - a virtual button now if you click on it
477:53 - the
477:54 - virtual button will be visible to you
477:57 - all right
477:58 - now remember the rules all right
478:00 - remember the rules
478:02 - and try to resize it all right now i'm
478:05 - not sure all right and i i haven't seen
478:07 - where uh where are the feature points
478:10 - but i'm what i'm doing is
478:14 - i'm putting at a particular place and
478:16 - i'm trying to follow all the
478:18 - instructions
478:19 - all right
478:20 - so i would suggest you to follow the
478:23 - instructions too
478:25 - all right so we created our virtual
478:27 - button
478:28 - now
478:30 - now what
478:32 - see
478:33 - when you click your virtual button in
478:34 - the inspector panel you would get some
478:36 - options all right you will get some
478:38 - options now
478:40 - the very the very important thing that
478:42 - we have to see is the virtual button
478:45 - behavior script all right
478:46 - in here here's an option sensitivity
478:49 - setting that is a drop down all right
478:52 - so in the drop menu you would find high
478:55 - medium low now these are the sensitivity
478:57 - settings what this tells
478:59 - what this tells us is that
479:02 - how often or you can say um
479:05 - how exactly are we going to uh
479:10 - like when we uh place
479:12 - uh place our hand
479:14 - upon or sorry over the particular mark
479:17 - over the particular virtual button all
479:19 - right so
479:21 - how what will be the sensitivity all
479:23 - right or what will be uh the rate all
479:26 - right when it will
479:29 - like
479:30 - detect all right it would detect and
479:32 - start doing the function so that's what
479:34 - sensitivity means it tells that how
479:36 - sensitive the particular button is
479:38 - all right if if it is low then it might
479:40 - like it might take some sort of
479:43 - hard work to get the button to work but
479:46 - if it is high then it won't take that
479:47 - much hard work to make the button work
479:50 - all right
479:51 - so yeah
479:54 - now
479:57 - now as we have created our virtual
479:59 - button all right we also have to add
480:01 - some functionalities to it right
480:04 - now
480:05 - i'm going to uh create a script all
480:07 - right let me tell you first which script
480:09 - i'm going to create on it i'm going to
480:10 - create a script that is that will simply
480:13 - uh
480:14 - when you hover all right when you hover
480:16 - over the virtual button all right
480:18 - whenever you hover over the virtual
480:20 - button
480:21 - what it will do is
480:23 - it will simply
480:25 - disable the cube or let's say uh hide
480:28 - the cube all right
480:30 - as simple as that
480:31 - nothing too complicated
480:34 - all right
480:36 - so yeah
480:39 - let's start coding now see as you can
480:42 - see i have created of multiple folders
480:44 - in here and i i would suggest uh you
480:47 - should also create because that would
480:48 - help you to structure your projects
480:50 - now i would create another folder in
480:53 - here that is
480:54 - uh watch virtual
480:58 - button
480:59 - scripts all right
481:01 - now i would uh
481:03 - create different types of folders for
481:05 - different types of tutorials all right
481:07 - now in here
481:09 - create a c-sharp script and i'm going to
481:11 - name it
481:12 - virtual
481:14 - button
481:15 - all right
481:16 - or let's say virtual button
481:19 - or
481:20 - let's say button
481:21 - behavior something like this behavior
481:27 - so it would take some amount of time to
481:29 - create the script
481:34 - so now we have created our
481:36 - virtual
481:37 - button behavior script right now it's
481:40 - our time to code it all right and you
481:42 - already know that what we are going to
481:43 - code
481:44 - all right
481:45 - so
481:47 - the very first thing the very first
481:48 - thing is we have to somehow
481:51 - target the cube and all right and before
481:53 - that all right and before that we also
481:56 - have to
481:57 - uh use a namespace
482:00 - all right we also have to use a
482:01 - namespace called euphoria all right it's
482:04 - very important to make the
482:07 - virtual button script virtual button
482:10 - functions to work all right
482:13 - so
482:15 - yeah so i remove the comments and make
482:18 - sure that the void start function is
482:21 - there alright and if you have forgot
482:23 - what this void start function does don't
482:25 - worry i'm going to re-explain it
482:28 - all right the very first thing all right
482:30 - was
482:31 - to
482:32 - include the namespace euphoria now
482:35 - uh
482:36 - to like edit the cube all right or do
482:38 - something with the cube we somehow have
482:40 - to
482:41 - uh grab or
482:43 - let's say get the reference to the cube
482:45 - right we have to somehow store that cube
482:48 - somewhere to be edited right so how do
482:51 - we do that it's fairly simple
482:54 - we have to create a variable that is
482:56 - public
482:58 - game object all right as it is a game
483:00 - object so the data type i am keeping is
483:03 - game object all right and then cube now
483:06 - one thing you should note all right if
483:08 - you if you don't give public or give
483:10 - private what will happen is this
483:13 - particular field won't be showed all
483:15 - right it won't be showed in the
483:16 - inspector if i had to show you just wait
483:19 - all right
483:21 - let me show you i have created this
483:24 - particular game object all right and
483:26 - let me show you in uh let let the script
483:29 - compile all right let the script compile
483:31 - and i will show you that what will
483:33 - happen if you don't give public all
483:36 - right
483:37 - now see there there are two ways to
483:39 - reference a variable all right i will be
483:41 - showing you
483:42 - two ways
483:47 - both the ways actually
483:48 - like uh the simple drag and drop
483:51 - reference referencing way and another
483:54 - that is
483:55 - using the script to reference
483:58 - all right
484:11 - so yeah
484:14 - now let's attach the cube to our image
484:17 - target all right you can create another
484:19 - empty game object and attach it in there
484:22 - but
484:23 - the thing is that the process will be
484:25 - following up is
484:27 - it requires us to
484:29 - add the
484:31 - script in the image target only in the
484:34 - image target game object only there's a
484:37 - reason behind it i would show you why
484:39 - all right it depends on our scripting
484:41 - procedure and i'll be scripting it in a
484:43 - in that way that
484:45 - the script should be in the image target
484:47 - game object only all right so you can
484:49 - see that we aren't able to see any sort
484:51 - of
484:54 - uh variable but we did create one so
484:59 - let's give public let's see
485:02 - by default alright by default whenever
485:04 - you create a game object all right or
485:07 - any variable it is public it is private
485:10 - all right those variables are private by
485:12 - default
485:14 - so
485:14 - make sure if you want to make them
485:16 - public if you want to make those
485:17 - variables public
485:19 - then
485:20 - you should remember
485:23 - that to add public keyword in front of
485:25 - them
485:31 - so now
485:33 - let's see if our cube like if our
485:36 - variable has appeared all right so click
485:38 - on the image target and then
485:40 - go uh at the last and check in the scale
485:43 - in your script that you created that the
485:45 - cube is coming or not all right so in
485:49 - here our
485:50 - cube variable is coming now what you
485:52 - have to do is select the cube all right
485:54 - select the cube and drag and drop it
485:57 - in this particular area alright in this
486:00 - particular
486:02 - place it uh it is currently taking
486:06 - all the uh game objects that are
486:09 - of type game objects all right it is
486:10 - taking all the objects available in the
486:12 - scene that are type of game object all
486:14 - right
486:15 - so anything that is game object it will
486:18 - take it in here it can be stored in this
486:20 - variable
486:22 - all right
486:24 - now another thing is that we have to
486:26 - create a private variable all right
486:28 - because i don't any uh want anyone to
486:32 - edit it externally so
486:35 - we have to
486:37 - give a data type that is virtual button
486:39 - behavior
486:45 - and let's name it
486:47 - button
486:50 - or let's say v button that is virtual
486:51 - button
486:52 - all right
486:54 - this uh you already know uh if you don't
486:56 - give public in front of any sort of
486:58 - variable what will happen
487:00 - all right now as we have created all
487:03 - right as we have created a virtual
487:05 - button
487:06 - we have to reference it also right we
487:08 - also have to refer
487:10 - so how should we do that
487:12 - right it's very simple all right there
487:15 - are some uh functions that is get um
487:19 - get component gate component in children
487:21 - we would be using get component in
487:23 - children because we are targeting
487:27 - the
487:28 - like we are targeting the
487:30 - means
487:31 - let me show you
487:34 - all right
487:59 - see
488:01 - you can see in the unity editor all
488:03 - right that this is the image target all
488:05 - right this is the main uh game object
488:08 - all right and the virtual button and the
488:11 - cube all right the virtual button and
488:13 - the cube
488:14 - are a children all right are children of
488:17 - this main game object right so we are
488:19 - attaching the script in this
488:22 - game object all right and we will be
488:24 - trying all right we will be trying to
488:26 - access
488:28 - all it will be trying to access
488:30 - the particular uh virtual button
488:33 - behavior all right virtual button
488:35 - behavior script all right we'll be
488:37 - trying to
488:38 - access virtual button behavior script
488:41 - from the virtual button game object all
488:44 - right so we'll be doing this
488:48 - so very the very first thing alright see
488:50 - as i told you that
488:53 - in normal state all right in normal
488:55 - state
488:56 - the cube should be hidden right and when
488:59 - we hover all right when we hovered over
489:02 - the particular virtual button
489:04 - all right the cube should be visible all
489:07 - right that's what i told you right now
489:10 - the very first thing is we have to
489:13 - make the cube invisible all right so
489:15 - cube dot
489:17 - set active
489:20 - and put false in here so what will
489:23 - happen with this is what will happen
489:25 - with this is
489:26 - uh
489:27 - whenever you start on it whenever the
489:30 - game is starting all the app is starting
489:33 - at first all right at first instance
489:35 - this uh
489:38 - cube will be deactivated all right or in
489:41 - simpler terms it will be hidden all
489:43 - right and you know that what void start
489:46 - is void start runs
489:48 - only once
489:49 - whenever the application is starting all
489:52 - right so that's why
489:54 - that's why whenever the app will start
489:56 - we will
489:58 - run this particular function cube dot
490:00 - set active false so that the cube
490:04 - gets hidden all right another thing is
490:06 - that you can simply hide it from
490:10 - the
490:12 - means hide it from
490:14 - the particular uh hierarchy panel from
490:16 - the scene only but of course that isn't
490:19 - a good idea so let's do it by script
490:22 - now
490:24 - you have to
490:25 - uh instantiate all right you have to uh
490:29 - like contain the virtual button behavior
490:32 - script all right so i'm
490:34 - going to name it
490:36 - uh sorry
490:37 - i have already name it that is we have v
490:39 - button oh sorry v button
490:42 - so yeah now let's
490:44 - let's sort uh what can i say let's um
490:49 - add all right let's
490:51 - uh reference
490:52 - that particular
490:54 - virtual uh button behavior script all
490:56 - right so you have to uh type this get
490:59 - component
491:01 - and
491:03 - children
491:05 - all right
491:06 - and inside of this
491:10 - inside of this particular greater than
491:12 - and lesser than arrows
491:15 - you have to write the script name all
491:17 - right that is virtual button behavior
491:19 - all right now
491:20 - we have targeted the
491:23 - virtual button behavior script now
491:27 - all right now let's create two functions
491:30 - all right let's create two another two
491:32 - function that will help us to activate
491:35 - and deactivate the script so
491:38 - void
491:42 - on
491:43 - button pressed
491:47 - we have to
491:51 - take a virtual button behavior as a
491:54 - parameter sorry
491:57 - vb
491:58 - all right
491:59 - and then
492:00 - what we have to do is
492:03 - whenever all right whenever the button
492:05 - is pressed or you can say button is
492:08 - hovered
492:09 - we have to
492:12 - set the state of the cube to true so
492:14 - that it is visible all right
492:16 - and whenever
492:19 - but a button is released all right
492:23 - released
492:29 - whenever the button is a
492:31 - button is
492:34 - released what we are going to do is
492:38 - we are going to simply deactivate
492:41 - the
492:43 - cube all right
492:45 - so it is as simple as that
492:47 - but
492:49 - all right but
492:51 - we haven't uh like see whenever
492:54 - to make any sort of function work right
492:56 - any sort of method work we have to
492:58 - call it right we have to call that
493:00 - particular function
493:02 - but
493:03 - in our case we haven't called it can you
493:05 - see where we have called it
493:08 - see
493:10 - now all right like when you create
493:12 - normal buttons ui buttons alright in
493:14 - unity there are uh some sort of on click
493:17 - on click functions right and
493:19 - in the button parameters there are on
493:21 - click functions
493:23 - in here all right in here there there is
493:26 - no on kick on click function available
493:28 - so we have to uh
493:30 - like create our own on click all right
493:32 - or you can say register these functions
493:36 - in our button so how do we do so it's it
493:38 - is fairly simple all right it is fairly
493:40 - simple
493:42 - so
493:44 - select the button all right and then
493:48 - we
493:48 - v button
493:50 - dot
493:51 - register
493:54 - on
493:55 - button
493:57 - pressed all right and inside the
493:59 - parenthesis
494:01 - pass the function on button pressed
494:03 - because whenever the button is pressed
494:05 - we have to run this particular on button
494:08 - press function
494:09 - now
494:11 - v button
494:13 - dot again we have to do another thing
494:14 - that is on button released
494:18 - all right
494:21 - so
494:22 - on
494:23 - button
494:24 - released
494:26 - all right so
494:28 - yeah this is it
494:30 - all right this is it now let me
494:32 - recapitulate the whole code to you all
494:34 - right so that you won't get confused the
494:36 - very first thing we did
494:38 - is to uh include the namespace using
494:40 - euphoria
494:42 - then what we did
494:44 - we created a game object public game
494:46 - object that is a cube and referenced the
494:48 - cube to it then we created a virtual
494:50 - button behavior named v button then uh
494:54 - in in the start already in the void
494:56 - start what we did
494:58 - we
494:59 - uh
495:00 - like
495:01 - in the void start we specified that
495:03 - whenever the application starts
495:05 - deactivate the cube all right the cube
495:07 - should be hidden then after doing so
495:09 - what we we created two functions all
495:11 - right having uh virtual button behavior
495:14 - vb as a parameter so
495:18 - the first
495:19 - function that we created is on button
495:21 - pressed what it will do whenever uh the
495:24 - when we whenever we are hovering over
495:26 - the button or you can say
495:28 - whenever we put our hand over the button
495:30 - that means
495:32 - that we have pressed the button so
495:33 - that's why it is written on button
495:35 - pressed
495:36 - so basically you are hovering over it so
495:39 - uh this is what happens
495:41 - now whenever on button pressed function
495:43 - will be called the
495:46 - cube will be like will be restored it
495:48 - won't be hidden anymore but whenever the
495:51 - hand is released from the button all
495:53 - right whenever the button is released
495:56 - again the cube will be hidden after that
496:00 - what we did is we referenced that we
496:02 - referenced our virtual button behavior
496:05 - script in our v button
496:07 - uh component and then
496:09 - we uh
496:11 - used functions
496:12 - to call our
496:14 - own functions right like v button dot
496:16 - register on on button pressed what it
496:18 - will do is it these two works like uh
496:21 - on click all right whenever uh whenever
496:24 - you are pressing the button it will do
496:26 - some function and we have passed the
496:28 - function that is whenever we will press
496:30 - the button
496:31 - this particular on button pressed
496:33 - function should
496:34 - run
496:37 - and
496:39 - another is that v button dot register
496:42 - on button released all right
496:45 - what will what will it do whenever the
496:48 - hand
496:49 - is released from the button
496:51 - it will run the function on button
496:53 - released all right so let's save the
496:56 - script right let's save the script and
496:59 - try it out in
497:01 - real time
497:05 - let's
497:06 - try it our
497:08 - basically let's write our application
497:11 - that we created the very first thing i
497:13 - would suggest you to do is to change the
497:15 - sensitivity setting to high alright
497:18 - and then click on play mode all right
497:25 - so as you can see it right in here
497:28 - all right here is my marker
497:30 - you can see that whenever i am hovering
497:32 - over my hand you can see that the
497:36 - cube is appearing and whenever i am
497:38 - releasing my hand the cube is going all
497:40 - right so this is how it basically
497:43 - works all right
497:45 - as simple as that
497:47 - so
497:48 - congratulations you learn to create how
497:50 - your how like how to create
497:53 - virtual buttons but
497:55 - if you uh if you ask me what do i
497:58 - suggest virtual buttons or
498:01 - ui buttons believe me ui buttons are far
498:04 - better than these virtual buttons
498:08 - all right so i would always recommend
498:11 - you to use uh ui buttons yeah if there
498:14 - is a need to use virtual button then
498:15 - only use it all right because
498:18 - those watch
498:19 - these virtual buttons sometimes even
498:22 - doesn't tracks the hand like it's really
498:24 - hard to get them track the hand maybe
498:26 - it's because of my laptop's camera but
498:30 - it is really problematic and uh
498:33 - creates a lot of problem and also breaks
498:36 - the user experience so that's why i
498:38 - always recommend
498:41 - ui button all right so yeah
498:46 - in this lecture we are going to learn
498:48 - how to use video playback feature all
498:51 - right in our viewforia
498:53 - project
498:54 - so this in this video we are going to uh
498:56 - implement our own video player you in
498:59 - augmented reality using euphoria and
499:01 - unity after this video you would learn
499:03 - how to
499:05 - use your videos
499:07 - in your games all right in your v4d
499:09 - applications now in this video i'm going
499:12 - to show you there are actually two ways
499:14 - to uh
499:15 - means add the video playback
499:16 - functionalities such as
499:18 - play pause and stop all right but
499:22 - there's another way that is the
499:24 - non-coding way all right i'm going to
499:26 - show you the non-coding way that is to
499:28 - use the
499:29 - uh given on click functions means
499:32 - ready-made on click functions
499:34 - give a given in unity all right even i'm
499:37 - going to show you how how to play the
499:39 - video whenever
499:41 - marker is found and stop it whenever
499:44 - marker is lost all right this video is
499:46 - going to be the
499:48 - real is going to be really simple video
499:50 - so follow along all right now first of
499:52 - all delete the main camera after
499:54 - deleting it go to view fourier engines
499:56 - uh add ar camera then again right click
499:59 - euphoria engine and then add image
500:01 - target all right in the image target
500:04 - select uh from database then select the
500:07 - database
500:08 - and
500:09 - the image target all right this is the
500:11 - basic process that
500:13 - we follow along all right and i'm using
500:15 - the previous project only so i need i
500:18 - haven't created any sort of new license
500:21 - or
500:23 - any sort of new database so i'm using
500:25 - the same marker and all those things but
500:27 - in different scenes
500:29 - all right
500:30 - now uh here you can see here is a script
500:32 - default observer event handler in here
500:35 - there you can see dragged or extended
500:36 - track click on track all right
500:40 - then what you have to do is
500:42 - click on image target
500:44 - add a plane all right go to 3d object
500:47 - add up plane all right here you can see
500:49 - a plane is added now we have to
500:51 - reposition it
500:52 - uh
500:54 - move it upwards a bit that is in the y
500:57 - axis then resize it all right
501:01 - so that it can fit the marker
501:04 - all right
501:05 - you can even create your
501:07 - ar video playback like ar video
501:10 - application or you can say ar video
501:12 - player after watching this video all
501:14 - right you can like get all the videos
501:17 - from the
501:18 - file explorer and then show it in here
501:20 - all right you can create your own
501:23 - application with it but in augmented
501:25 - reality all right now let's name the
501:27 - plane to video playback or let's say
501:31 - player
501:32 - all right now in here
501:34 - after that go to uh in the inspector
501:36 - panel only search for video all right
501:38 - click on add component then search for
501:40 - video and you will get a com here you
501:42 - will get a component called video player
501:45 - all right now i have already i already
501:47 - have a video imported all right i
501:49 - already have a video imported
501:51 - in my uh assets so i'm simply what you
501:55 - have to do is you already know how to
501:56 - import it right because you just simply
501:58 - have to download the video and just
502:00 - import it it is as simple as that
502:02 - now you have to drag and drop the video
502:05 - inside of the video clip parameter all
502:07 - right and voila
502:09 - this is
502:11 - the thing you have to do all right
502:14 - now
502:15 - another thing is that whenever you play
502:17 - all right whenever you play this
502:20 - all right the video will be
502:22 - inverted all right now let me show you
502:25 - what are the problems that we'll be
502:26 - facing now
502:30 - so as you can see in here all right as
502:32 - you can see in here
502:34 - the problem with the video is
502:36 - all right
502:37 - it is currently playing all right it is
502:39 - currently
502:40 - playing
502:42 - just wait
502:44 - the video is currently playing and it is
502:45 - inverted also all right you might not be
502:48 - able to hear the audio but the audio is
502:50 - also playing in the background all right
502:52 - so this is the problem we are facing
502:53 - currently let's let's fix it all right
502:56 - let's fix it
503:02 - see the very first thing all right the
503:04 - very first thing you have to do is to
503:05 - invert this all right invert means
503:08 - rotate this in the y axis
503:12 - rotate this whole plane in the y axis so
503:14 - that we get the video straight
503:16 - all right now after this will be getting
503:19 - the video state another thing all right
503:21 - another thing is that
503:23 - click on the plane all right in here the
503:25 - video option there is an option called
503:27 - play on awake
503:30 - what does this mean this means whenever
503:32 - you are
503:33 - like whenever the application is
503:35 - starting it will start playing the video
503:37 - all right this is what it means now
503:39 - uncheck it all right uncheck it
503:41 - now uh
503:42 - all the problems that we we were facing
503:44 - uh is fixed now
503:46 - so let's implement
503:48 - the features that i told now here you
503:50 - can see here are two option
503:52 - on target found and on target lost right
503:57 - what we have to do is an air uh click on
503:59 - on target found
504:02 - click in it all right and then here you
504:04 - can see this is the video right this is
504:06 - the video
504:08 - now drag and drop it in here all right
504:10 - drag and drop this video in here now uh
504:12 - i fall i guess i forgot change the name
504:14 - so name it video
504:17 - player
504:18 - all right name it video player
504:21 - now
504:23 - what i did
504:24 - let me show you the process again all
504:26 - right
504:27 - click on image target here are two
504:29 - options on target found on target loss
504:31 - these are called events all right
504:33 - these events call some sort of function
504:35 - all right these type of events are also
504:38 - available in ui buttons also i'm also
504:39 - going to show you how to create play
504:41 - pause button in ui all right so don't
504:44 - worry
504:45 - now
504:46 - what you have to do is click on this
504:48 - plus icon in on target found
504:51 - then
504:52 - drag and drop your video player
504:55 - inside this particular field then here
504:58 - you can see here's another here the drop
505:00 - down that
505:02 - no function written in here all right in
505:04 - here what we have to do go to the last
505:06 - and you would find an option
505:08 - called video player all right
505:11 - now in here what you have to do here are
505:14 - multiple options available from these
505:16 - options you have to click on
505:18 - means call the play function all right
505:20 - what will happen whenever all right
505:22 - whenever you try to
505:25 - play the video all right sorry whenever
505:28 - you uh whenever the marker is found all
505:29 - right whenever the marker is found it
505:31 - will start playing the video
505:33 - all right another thing all right
505:34 - another thing is that
505:36 - i want also to integrate whenever all
505:39 - right whenever the marker is lost the
505:42 - video should pause or stop all right so
505:45 - for my case i would like to stop it so
505:48 - again uh
505:49 - in here's an another event parameter
505:52 - that is on target lost
505:53 - again do the same thing
505:55 - drag and drop the video in here
505:58 - call a particular function inside the
506:00 - video player i will be calling
506:02 - stop function all right
506:04 - so
506:05 - yeah this is how we basically
506:09 - create our own video playback features
506:12 - all right now this is the basically uh
506:14 - this is basically uh if you want only to
506:17 - use euphoria to control the video
506:20 - playbacks all right like whenever the
506:22 - marker is found
506:23 - you want you want to start the video and
506:25 - whenever the marker is lost you want to
506:28 - stop the video all right so let's try
506:33 - so as you can see in here all right
506:36 - here
506:37 - uh the marker is found and the video is
506:39 - playing all right
506:41 - i'm not sure you are able to hear the
506:43 - audio or not but you can see the video
506:45 - is playing now if i remove it all right
506:46 - now if i remove it all right uh the
506:49 - video has stopped right you are not able
506:51 - to see anything now if i again all right
506:53 - if i again uh put the market you can say
506:55 - the video is starting all over right
506:58 - from uh from the start the video is
506:59 - starting from the start all right
507:02 - so yeah
507:05 - we successfully created our
507:08 - video playback features all right we
507:09 - successfully created our video playback
507:12 - in viewforia now it is our time to do
507:16 - the same thing using buttons all right
507:18 - that is to implement the play pause and
507:21 - stop functionality using buttons so it
507:23 - is pretty simple all right it is not
507:25 - that complicated
507:27 - what you have to do is
507:28 - see i'm not going to remove these two
507:30 - functions because i think these are good
507:32 - all right because whenever uh i want key
507:35 - whenever the marker is found it the
507:37 - video should automatically start and
507:39 - whenever the marker is locked the video
507:41 - should automatically stop all right or
507:42 - you can what you can do is uh you can uh
507:45 - like
507:46 - make it pause all right
507:49 - just make it pause let me change it to
507:51 - pause on it so whenever the marker is
507:52 - locked the video will pause and whenever
507:54 - the marker is again found after being
507:56 - paused
507:57 - the video will play from the point where
508:00 - it has been paused all right so
508:04 - it is it
508:05 - so that's how we implement
508:07 - uh video playbacks in euphoria if you
508:10 - want to do the same thing with
508:13 - markers like marker lost or marker found
508:16 - all right
508:18 - now we'll be doing the same thing using
508:21 - uh ui canvas in viewforia all right
508:29 - so now as
508:31 - we have successfully created our video
508:32 - playback now it is our high time to
508:36 - implement
508:37 - some particular buttons for it all right
508:39 - so how do we do that the very first
508:41 - thing click on image target um sorry
508:44 - yeah click on image target then go to ui
508:46 - alright and click on canvas
508:50 - all right
508:51 - so click on canvas then in the canvas
508:54 - here you can see canvas scaler here it
508:56 - is written constant pixel size changed
508:58 - into scale with screen size it will help
509:01 - help the ui to be more responsive all
509:04 - right
509:05 - so yeah let me make it first let me go
509:07 - to the 2d mode for designing the ui all
509:09 - right
509:11 - now as i'm 2d mode as i'm in 2d mode now
509:13 - i have to implement the buttons it is
509:15 - fairly simple just click on ui then i
509:18 - would like to implement
509:20 - text text mesh pro buttons all right so
509:23 - i would click on button text mesh pro
509:25 - and it has been imported all right the
509:27 - very first button that i have to create
509:29 - is the play button all right this is the
509:31 - play button that i want to create now i
509:34 - have to anchor this button also all
509:36 - right so how would i do so
509:38 - so simply click in here all right
509:41 - you can see this direct transform option
509:43 - click in here and press alt key
509:46 - after that
509:48 - click on the this last
509:51 - this last one all right click on this
509:53 - last one
509:55 - now
509:56 - i also have to
509:58 - change the text inside it all right so
510:00 - that it uh resembles play button
510:04 - all right now let's make it bold
510:06 - now i i see
510:08 - i would be duplicating this button all
510:10 - right so that it becomes more easier for
510:13 - me
510:15 - now yeah
510:18 - now let me change it to
510:20 - pause
510:21 - all right now
510:23 - let's change the text of it to that is
510:26 - to
510:27 - pause
510:29 - all right
510:30 - now again the same thing
510:33 - duplicate it
510:34 - let's name it
510:36 - stop
510:37 - let's
510:38 - change the name to
510:42 - stop
510:44 - and also make it bold oh all right i i
510:47 - have already made it bold
510:49 - now
510:49 - again go to rick transform alt then the
510:53 - right side
510:54 - see our button is
510:57 - anchored all right in a great way now
511:00 - what we have to do is we have to
511:02 - implement the functionalities so the
511:05 - very first functionality i am going to
511:07 - implement is the play button
511:08 - functionality so click on the play
511:09 - button
511:10 - go to a go below alright go below
511:13 - like in in the last and here you will
511:15 - find an option called button option or
511:18 - you can say button component in here
511:21 - all right in here there's an option
511:22 - called on click all right so simply
511:25 - click on the plus button it's it's it's
511:28 - similar to the image target on target
511:30 - found alright it is similar to that now
511:33 - again drag and drop the video player
511:35 - object inside alright drag and drop the
511:37 - video player object
511:39 - inside
511:40 - the play button then
511:43 - select video player
511:45 - and then click on play all right
511:48 - again do the same thing all right do the
511:51 - same thing with
511:52 - the other button but
511:54 - choose
511:55 - different set of functions based on the
511:59 - function functionality you want all
512:00 - right so this is the pause button so i'm
512:02 - going to use the pause function and
512:04 - there's the stop button so i'm going to
512:06 - use
512:07 - the
512:08 - stop function
512:11 - all right
512:15 - cool now
512:17 - let's
512:18 - let's test it out by playing it all
512:21 - right
512:24 - so guys
512:25 - just see what is happening in here all
512:27 - right
512:28 - so
512:29 - whenever i you can see the video has
512:31 - started playing all right you might
512:33 - heard uh some sort of sound maybe i'm
512:35 - not sure all right now let's let's pause
512:38 - the video all right see the video is
512:40 - pause now the video is pause now let's
512:42 - play it again
512:44 - the video is
512:45 - playing all right now let's pause it the
512:47 - video is pause now if you want to stop
512:49 - it
512:50 - the video has stopped now if we want to
512:52 - play it
512:54 - the video has started
512:56 - playing
512:57 - so
512:58 - all the functionalities that we
513:00 - implemented is working perfectly fine
513:03 - all right
513:08 - this lecture we are going to create our
513:09 - own car customizer so
513:12 - this the basic logic or idea behind this
513:14 - car customizer is would uh would be
513:18 - providing the user three to four
513:19 - different colors all right and based on
513:22 - those colors
513:24 - the player would be able to like select
513:27 - uh a particular color and paint the car
513:30 - all right or with that color so this is
513:33 - the basic idea behind today's project
513:35 - and
513:37 - if you want alright if you want you can
513:39 - like customize this app further like you
513:41 - can add detachable doors you can uh add
513:45 - numerous numbers of tires that a person
513:48 - could
513:49 - change right so uh you could you could
513:52 - do those things also to make this app
513:55 - more uh like
513:57 - more big and later on you can launch it
514:00 - on play store already when you can add
514:03 - uh ads into this application all right
514:06 - so the uh let me tell you so
514:09 - first of all i already
514:11 - have a 3d model all right inside of
514:15 - my unity engine all right this is the 3d
514:17 - model actually i downloaded it from uh
514:20 - sketchfab uh actually uh let me show you
514:24 - this is uh the actual model that was
514:26 - there i edited it later on the this is
514:29 - the actual model that was on sketchfab
514:31 - uh so i'll edit it later on basically
514:35 - this uh this kind of color came just
514:37 - because of uh it's a fbx is uh it
514:40 - doesn't
514:41 - already have the properties that i want
514:43 - so i created a new material and
514:46 - me
514:47 - applied those materials into the car all
514:50 - right so that's what i have done
514:52 - so uh the the better option would be for
514:56 - you to is uh
514:57 - download
514:59 - the gltf models all right that is
515:01 - download the models in glta format
515:03 - because they are they comes in much
515:06 - better quality and they have the texture
515:09 - already embedded in it right so it would
515:12 - be much better to work with those all
515:14 - right so let me first reset its
515:16 - transform all right so uh
515:19 - so yeah i've reset it it's transform and
515:22 - uh
515:23 - i'm like
515:24 - just a bit moving it uh in the z-axis
515:28 - just a bit all right and now what you
515:30 - have to do is uh
515:33 - go to your browser all right first of
515:34 - all we have to create a license for our
515:37 - ar application right and one more thing
515:39 - i have already imported the viewforia
515:41 - engine all right and you already know
515:43 - how to do that and you also know that
515:46 - how to check whether it is imported
515:48 - successfully or not so make sure uh you
515:51 - import
515:52 - the
515:53 - view fourier sdk
515:55 - and before importing all right always
515:56 - make sure before importing change the
515:59 - uh build platform alright because if you
516:02 - change the build platform later on that
516:04 - is after importing the model the sdk
516:06 - then it's gonna take a lot of time so
516:08 - what i did is uh after creating the
516:11 - project i first
516:12 - shifted uh the
516:14 - build uh platform to android all right
516:17 - and then uh what i did is
516:20 - i go i got to the player settings all
516:22 - right
516:23 - after going to the player settings what
516:24 - you have to do is uh go to resolution
516:26 - and presentation all right not sorry not
516:29 - in the resolution presentation just wait
516:35 - okay
516:36 - yeah i was actually in the desktop tab
516:38 - that's why i wasn't getting all the
516:40 - options so now as i'm on the android tab
516:42 - uh go to the resolution and presentation
516:45 - you will be getting a
516:46 - default orientation change it to
516:48 - landscape left alright it's totally
516:50 - based on the camera you can choose any
516:53 - uh any
516:55 - mode you want alright but uh we'll be
516:57 - creating our application in landscape
516:59 - mode only so make sure either to select
517:01 - a landscape right or landscape left i
517:03 - chose landscape left because of the
517:05 - position of my camera
517:07 - all right and uh
517:10 - now go to other settings all right here
517:12 - you would find uh android build settings
517:14 - right so what you have to do is uh
517:16 - select uh
517:18 - android version all right that is the
517:20 - lowest standard version you want to
517:21 - support so for me it's a api level 23
517:24 - that is android 6.0 you can choose a
517:27 - kitkat you can choose uh lollipop and
517:30 - anyone
517:31 - it means any target api level it sorry
517:33 - minimum api level you want all right and
517:35 - leave the target api level to automatic
517:38 - highest installed all right so yeah
517:40 - that's what you have to do
517:43 - uh so after this what you have to do is
517:45 - you
517:46 - got to go to the uh license manager all
517:48 - right
517:49 - uh click on get basic and create a new
517:52 - license all right
517:54 - so
517:57 - give this license a new name that is i'm
517:59 - going to give it ar car all right and uh
518:02 - click click on the check box and
518:04 - click confirm
518:06 - all right
518:07 - after that open this
518:10 - ar car license and what you have to do
518:12 - is you have to copy this license all
518:15 - right you have to copy this license and
518:16 - go to a unity editor then
518:19 - one more thing delete this uh main
518:21 - camera all right in the united uh delete
518:23 - this main camera because we won't be
518:25 - needing it
518:26 - uh now right click view fourier engine
518:28 - ar camera all right and one thing i
518:30 - prefer the most is to put the ar camera
518:33 - on top of everything
518:34 - so after you have done uh setting up the
518:37 - ar camera what you have to do is uh in
518:39 - the in the inspector tab only you will
518:41 - get the properties of ar camera and in
518:43 - the ar camera you'll be finding open
518:45 - view 40 engine configuration right and
518:47 - in here you'll be finding app license
518:49 - key so click on this blank box and uh
518:52 - just pay paste the license
518:54 - all right just paste the license and you
518:56 - would be good to go right
518:58 - so uh
519:00 - our basic
519:02 - project is set up right now we have to
519:04 - create a database
519:06 - so click on target manager
519:10 - all right click on add database give the
519:12 - database a name so i'm going to give it
519:14 - ar
519:15 - car
519:16 - db
519:17 - all right
519:18 - uh
519:20 - make sure that the type is device and
519:22 - then click on create
519:24 - so after it has created a database open
519:27 - it
519:30 - now what you have to do is you have to
519:31 - add uh the target marker i already have
519:34 - the marker all right so you can select
519:36 - any marker you want so i'm going to
519:38 - select the marker
519:39 - now
519:43 - let me
519:44 - find the marker
519:49 - okay got it now give it a give it a
519:51 - width
519:52 - i'm going to give it a weight of 6 all
519:54 - right and i will keep the name marker on
519:57 - right
519:58 - so
520:00 - just let it upload uh
520:01 - upload that marker and after that or
520:04 - what you have to do is you have to
520:05 - download the marker
520:07 - so that uh we can
520:09 - upload it on our
520:11 - unit engine and one more thing always
520:12 - check that
520:13 - what is the rating that is the
520:15 - augmentable rating of your marker and
520:17 - make sure it has four
520:19 - minimum four all right it should be at
520:21 - least four to five
520:23 - not less than that all right now click
520:25 - on download database and uh select the
520:27 - unity data and click on download
520:29 - all right so
520:31 - it would start downloading the database
520:41 - now save this database uh
520:43 - somewhere in your
520:45 - desktop and uh
520:47 - import it all right
520:49 - so right click
520:51 - you can either drag and drop it in here
520:52 - or you can right click import package
520:54 - custom package or that you can do that
520:56 - so i'm going to
520:58 - follow the
520:59 - second one now click on ar card db all
521:02 - right ar card db your uh unity package
521:05 - this is the database i downloaded and
521:08 - click on open and it's going to take
521:10 - some time to process and
521:12 - it did the processing and click on
521:14 - import
521:15 - all right so it's going to take some
521:17 - time to import uh the assets and wow
521:20 - cool so our asset is also
521:23 - imported right now what as we already
521:26 - have imported our uh
521:28 - car model what i want you to do is right
521:30 - click view for engine image target
521:35 - all right and in the image target you
521:37 - will be finding uh like in the inspector
521:38 - menu you will be finding image target
521:40 - behavior from the type select from
521:42 - database all right and in there select
521:45 - the database and uh your marker will be
521:47 - automatically selected if you have more
521:49 - than or two mark one marker that is two
521:52 - or three markers then you you can select
521:54 - it from there right now this is the
521:56 - database i'm going to like
521:58 - reset the transform again so that i get
522:00 - it in the center of the
522:02 - card now i'm going to increase the size
522:05 - of the car all right
522:06 - so that i could uh
522:08 - match the ratio all right
522:11 - now uh what i have to do is i have to
522:13 - put this car uh means make this car a
522:16 - child of the image target right and uh
522:20 - now
522:21 - we are good to go our markerless
522:24 - sorry marker based ar app is set up all
522:26 - right now what we have to do is we have
522:28 - to uh
522:29 - code
522:30 - all right we have to code our
522:33 - means we basically have to code what are
522:35 - the functions we want in the app so for
522:38 - now we only want to change the color
522:40 - of the car alright that is the material
522:42 - color of the car so first of all i want
522:44 - you to create the ui so how are are we
522:47 - going to do that it's pretty simple
522:49 - right click
522:50 - ui
522:52 - um then canvas
522:55 - all right as uh this app is in landscape
522:58 - what i'm going to do is i'm going to
523:00 - choose the medium resolution so that we
523:03 - could uh like easily
523:05 - make our app responsive all right and
523:08 - put it right in here now
523:11 - after i've created a canvas
523:13 - you can see that there are multiple
523:14 - options in here you can say canvas
523:16 - scaler option is there in there in the
523:19 - ui scale mode section you have to choose
523:22 - choose
523:23 - scale with screen size
523:25 - all right and
523:27 - leave it
523:28 - there only all right because that would
523:30 - actually help us to make the
523:33 - ui more responsible right now what you
523:34 - have to do is
523:36 - uh add some buttons all right
523:39 - uh click on button text mesh pro all
523:42 - right so
523:43 - it would
523:44 - like prompt importer you can import it
523:47 - but currently i don't want it so i would
523:49 - be going with the normal buttons only
523:52 - all right
523:53 - i would like to go with the normal
523:54 - buttons only actually we won't be
523:56 - needing the text so that's why i'm going
523:57 - with the normal buttons but what i would
524:00 - suggest you is to or if you are going
524:02 - for text based buttons or something like
524:04 - that all right even buttons in general i
524:06 - would suggest you or to always go for
524:09 - text mesh pro because they are
524:11 - 1000 times better than you know
524:14 - these other buttons so give it a width
524:17 - of 200 all right out let's not give 200
524:20 - so it's too big let's give 100 only
524:22 - all right uh yeah
524:24 - now
524:25 - what you have to do is in the right
524:27 - transform only in here you'll be seeing
524:29 - a small box click on it click uh alt
524:33 - all right
524:36 - just wait
524:45 - okay
524:46 - now what you have to do is
524:49 - click alt in here
524:52 - or
524:53 - just do it
524:57 - all right
524:59 - now what you have to do is
525:02 - after you have done that
525:03 - give it a give it a name all right let's
525:06 - give it name i want to name it red
525:08 - all right and
525:11 - let's give it a red color all right and
525:14 - make sure you are in 2d mode because we
525:16 - are going to edit this ui
525:18 - all right
525:19 - and uh duplicate this button all right
525:22 - duplicate this button and uh
525:24 - move it right in
525:25 - in here
525:27 - now give it another color that is let's
525:29 - say i wa i want black right
525:32 - uh let's give it another color that is
525:33 - black
525:35 - uh
525:36 - it might not be that visible so i'm
525:38 - going to make it a bit like
525:40 - this kind of black so that it becomes
525:42 - visible all right
525:44 - now here give another color
525:47 - all right
525:49 - let's let's give it uh
525:52 - blue
525:53 - all right
525:56 - let's make the color blue
526:01 - okay now let's give another color that
526:03 - is uh
526:05 - yellow
526:07 - all right
526:11 - okay cool
526:16 - all right so we have our ui prepared
526:20 - that we got our ui prepared we have uh
526:23 - we have prepared our buttons now what we
526:25 - have to do is we have to code right the
526:28 - very first thing or the very first thing
526:30 - i would like to do is i would be coding
526:33 - a script to rotate our car all right so
526:35 - that it rotates continuously and to do
526:39 - that
526:40 - uh first of all what i have to do is i
526:43 - have to
526:44 - just
526:47 - create a folder scripts folder all right
526:50 - and then click on create
526:53 - then again c sharp script and let's give
526:55 - it a name that is rotate
526:58 - all right so i want my card to rotate
527:01 - actually
527:03 - now it's compiling the application all
527:05 - right
527:12 - okay so give it a few seconds
527:16 - okay
527:19 - so
527:29 - all right it's taking a bit time so
527:31 - let's give it its time so that it is
527:33 - able to do the processing it needs to do
527:50 - all right so our script is uh perfectly
527:53 - compiled now i'm going to open the
527:54 - script in my visual studio editor
527:57 - all right
527:58 - now
528:00 - okay
528:02 - here we got our editor all right
528:05 - i don't want it to be in full screen
528:07 - mode
528:08 - as of now so uh
528:10 - remove the
528:12 - whole start function and comments all
528:14 - right we need the update one so first
528:16 - thing is you have to create a vector3
528:17 - variable all right
528:19 - vector3
528:21 - uh let's name it rot
528:24 - all right and what in the update
528:26 - function only what you have to do is
528:27 - transform
528:29 - dot
528:30 - rotate all right and pass this rot
528:32 - variable in there and multiply it with
528:35 - time
528:36 - dot
528:37 - delta time
528:39 - all right
528:40 - now
528:41 - save the script and
528:42 - [Music]
528:44 - let it compile in your unity editor
528:48 - all right
528:50 - so
528:51 - after it is uh compiled what you have
528:53 - what we have to do is we have to put it
528:55 - in uh means inside our
528:58 - car model all right that is we have to
529:00 - attach it as a script in our car model
529:04 - all right so that we could uh
529:06 - use it
529:08 - right
529:09 - and uh
529:11 - all right
529:12 - now
529:13 - go to the image target all right and uh
529:15 - first of all unpack this whole prefab
529:17 - all right
529:19 - after unpacking what you have to do is
529:21 - drag and drop this rotate script in here
529:23 - and in in the rot value uh give it a
529:26 - value of 30 alright it would be like
529:29 - moving at rotating at the speed of
529:32 - 30 all right now what you have to do is
529:34 - play this all right uh play this
529:38 - particular scene and let's see
529:41 - how all things work
529:43 - right
529:45 - so just give it a few seconds
529:52 - so
529:53 - just a few seconds and we'll be good to
529:56 - go
530:00 - all right okay
530:02 - cool
530:03 - let
530:04 - let me uh
530:06 - maximize it
530:08 - okay cool now
530:13 - see our car is rotating all right
530:16 - and that's pretty good all right oh one
530:19 - more thing
530:20 - extended tracking feature is on and of
530:23 - course we don't want that
530:24 - uh go to ar camera all right
530:28 - sorry not ar camera or click on image
530:30 - target
530:32 - all right in here
530:33 - uh select track all right and we'll be
530:36 - good to go
530:37 - right
530:38 - so now as
530:41 - our
530:42 - basically our car means we have created
530:44 - our car model
530:46 - right as we have created our car model
530:48 - now what we have to do is
530:52 - uh click on create she sharp script all
530:54 - right and let's
530:56 - give it
530:57 - change color all right so that we could
531:00 - change color of our
531:04 - car after clicking some particular
531:06 - button all right
531:08 - so
531:09 - just wait it's compiling the script
531:13 - all right
531:17 - just wait a few seconds
531:27 - all right
531:29 - let's open the script in our editor okay
531:32 - cool
531:33 - now
531:34 - what i want you to do is uh create an
531:37 - array all right
531:38 - that is a line renderer sorry not like
531:41 - line random just wait public
531:47 - just give me a second
531:53 - all right so
531:55 - what we have to do is we have to create
531:57 - a array all right
531:59 - of first of all uh create an array of
532:02 - colors all right
532:03 - so that we can store the colors in here
532:06 - now
532:07 - again create another array of renderer
532:11 - that is it will
532:13 - help us to
532:15 - get the renderer of
532:16 - our car material there's a reason why we
532:19 - are
532:22 - there's a reason why we are actually
532:23 - creating a renderer all right uh there's
532:26 - a huge reason means not exactly a
532:28 - renderer why we are creating an array of
532:31 - renderer and
532:32 - you know
532:34 - just wait
532:35 - let's name it uh
532:38 - mats all right now there's a reason why
532:40 - we are doing that because see a car
532:43 - might have multiple materials in it all
532:45 - right that is multi car might have
532:47 - multiple sections in it where
532:50 - there will be different different
532:51 - materials will be up uh like
532:54 - applied right so that's why we are
532:56 - creating a array so that we could
532:58 - include all those
533:00 - uh sections in our
533:03 - you know in our
533:04 - model only that is in our script only
533:07 - right now
533:08 - let me show you what you have to do is
533:10 - record public void
533:12 - all right and write a method or function
533:15 - all right called red
533:17 - now make it public so that we can get it
533:19 - on our uh inspector menu right now
533:23 - we have to run a loop all right that is
533:25 - for nti equals 0 i less than
533:30 - max
533:31 - dot length
533:33 - all right it would be running from 0 to
533:37 - that is 1 minus the actual length of the
533:41 - material
533:42 - all right and uh
533:44 - yeah
533:46 - now
533:47 - you can you can either open the brackets
533:48 - or you can simply write it like this let
533:51 - me show you
533:52 - all right
533:53 - because if it's if it's a one-liner all
533:55 - right you don't need bracket and uh
533:57 - currently it's a one-liner only now what
534:00 - you have to do is mat
534:02 - mat of like i we have to give it take
534:04 - each and every like
534:06 - each particular material and apply color
534:08 - to it so max of i
534:10 - ah dot material dot color
534:13 - equals
534:15 - so you can
534:19 - what you uh what you can do is
534:25 - just wait
534:26 - colors yeah we got the variable and give
534:29 - it the first that is the first value of
534:32 - all the
534:35 - colors all right now copy and paste all
534:38 - right copy and paste it so that we can
534:40 - uh basically replicate it all right
534:43 - now
534:45 - blue
534:46 - all right
534:47 - and
534:49 - or let's say which was our second color
534:51 - in here okay it was black right let's
534:53 - give it black
534:55 - and uh
534:57 - let's give it one all right then in here
535:01 - let's give it blue because it was our
535:02 - third and give it two
535:04 - and
535:05 - yellow
535:07 - and do you know why we are uh giving
535:11 - like
535:12 - first
535:13 - index value as zero then one then to the
535:16 - second we are giving one then to the
535:17 - third we are giving two that's because
535:19 - indexing starts from zero all right so
535:21 - we have our script written
535:23 - and i hope you understood uh understood
535:25 - the script now
535:28 - there's nothing else to do we just have
535:30 - to apply the script and the functions
535:32 - all right we have to apply
535:34 - to the variables
535:38 - right
535:38 - so
535:39 - [Music]
535:41 - yeah
535:43 - so now what you have to do is
535:48 - create a empty game object alright you
535:50 - can do that and
535:53 - reset its transform name it
535:57 - color changer
535:58 - all right and attach the script or to
536:02 - the color changer now what you have to
536:04 - do is you have to give uh
536:06 - you know
536:07 - four colors to it
536:09 - give the array size four and
536:13 - uh let's see how many materials we have
536:14 - to give in here all right so basically
536:17 - the body is there all right
536:19 - now
536:21 - all right
536:23 - not this one
536:25 - not this one
536:26 - this one this one
536:29 - all right this roof sweet not sweepers
536:32 - for window front not this one all right
536:35 - so uh
536:38 - okay
536:41 - all right i understood
536:43 - so
536:44 - go to the color change script alright
536:46 - and let's give it two as of now all
536:48 - right
536:50 - now what you have to do is
536:54 - get the body material in here all right
536:57 - the body is for the whole body right
537:00 - and uh
537:03 - let's
537:04 - get the sweepers that has no sorry uh
537:06 - the roof one all right
537:11 - let's get the
537:13 - where is the roof okay yeah we got it
537:16 - so
537:17 - yeah here we got the hood
537:19 - all right
537:21 - actually there are multiple
537:23 - layers in it so that's why that's why i
537:25 - told you to
537:28 - add
537:30 - like
537:30 - create an array of those materials right
537:33 - now let's get the hood in here
537:36 - okay so we got the hood
537:39 - now
537:40 - okay the body is uh done the doors right
537:44 - oh yeah the doors
537:45 - so go to the color changer add another
537:48 - section all right and uh
537:52 - let's give it the dose right
537:55 - take the doors all right
537:58 - okay just do it
538:01 - okay
538:03 - okay here we go another one
538:06 - that is door fr
538:09 - all right
538:10 - now
538:11 - now
538:13 - let's see what are the things we have to
538:15 - give
538:16 - okay
538:17 - trunk a door
538:19 - right
538:20 - let's give it the trunk dough
538:26 - all right i hope not nothing else is
538:28 - left
538:31 - okay
538:32 - no i guess everything seems good right
538:36 - yeah everything seems seems good now
538:38 - let's let's see let's uh
538:41 - now let's give those colors the first
538:43 - element should be red
538:45 - all right it should be red
538:47 - okay the
538:49 - next that is which the next one should
538:51 - be uh you know black
538:54 - all right now the second one should be
538:56 - you know blue
539:00 - let's give it a move a bit sky color all
539:03 - right it would look good and the next
539:05 - one would should be yellow right now
539:08 - what we have to do is
539:10 - click on canvas all right
539:13 - click on buttons all right first of all
539:15 - uh select every button
539:17 - add a plus sign in there and
539:20 - add the color changer script in here
539:22 - right what you have to do is uh
539:24 - go to a red button click on change color
539:27 - click on red go to the black button
539:30 - again or choose from the change color
539:32 - then select black then from the blue
539:35 - color
539:36 - click
539:37 - uh change color then blue then from the
539:40 - yellow one
539:43 - go in here click on change color
539:45 - and
539:47 - click on yellow
539:48 - where is it
539:49 - okay cool
539:51 - now let's try our app so that uh let's
539:54 - try our app and let's see uh how it
539:56 - performs all right
539:58 - let's see
540:01 - so give a few seconds and
540:03 - we'll be good to go
540:12 - okay cool
540:13 - so let me maximize the window
540:17 - okay cool
540:22 - okay
540:24 - all right cool so we are able to see the
540:25 - car right now let's try the color wow
540:28 - see
540:29 - it looks good right
540:31 - see
540:32 - cool isn't it
540:35 - yeah so
540:37 - our first project is done actually all
540:39 - right uh congratulations you have
540:41 - created your first full-fledged
540:42 - application
540:44 - with
540:45 - euphoria all right you can let me give
540:47 - you some idea what you can do further
540:50 - you can let's say you can add varieties
540:51 - of tires in here all right you can add
540:54 - numerous varieties of tyres you can add
540:56 - more colors all right you can uh like
540:59 - create your own own car model or you can
541:02 - even like
541:03 - take the door of it all right and like
541:06 - rotate it somehow or to get like the
541:09 - opening door animation sort of thing
541:11 - right you can create your own animations
541:12 - like that and add it in there so that
541:14 - the person can actually um you know
541:18 - the person can actually view the
541:20 - inner parts of the car right you can add
541:23 - more customization customizations to it
541:25 - you can add more cards to it right now
541:27 - the next process for you is to go to
541:29 - build settings all right and
541:33 - add click on add open scenes all right
541:35 - that is for our the scene is main or you
541:37 - can simply drag and drop the scene
541:39 - and simply click click on build and it
541:41 - would start building our application
541:43 - all right so if you have any doubt
541:45 - regarding this lecture you can write it
541:47 - down in the comment section
541:48 - all right
541:51 - in this lecture we are going to create
541:52 - our second project all right that is ar
541:54 - business card all right how this uh
541:56 - project would help you is let's say you
541:58 - are going to some client alright and you
542:00 - want to or give them your business card
542:02 - alright you can share the apk already if
542:04 - uh like of course
542:07 - yeah you can do this right so
542:10 - would be creating a ar business card
542:12 - today all right and in this project you
542:14 - are going to learn to
542:16 - like implement your own avatar all right
542:20 - and uh
542:21 - you you would also learn to apply
542:23 - animations
542:25 - right so
542:27 - let's do it
542:28 - so what you have to do is right now let
542:31 - me show you
542:33 - first of all you have to set up your
542:35 - project all right it's very simple
542:37 - create a new project go to file
542:40 - build settings
542:41 - all right in the build setting first of
542:43 - all switch your platform to android all
542:46 - right
542:46 - i have already done that and make sure
542:49 - whenever you are opening a new project
542:52 - when it's blank all right that's totally
542:53 - new
542:54 - uh switch the platform first all right
542:56 - because if you do that later on after
542:59 - multiple things are done in your
543:01 - platform means uh in your project
543:05 - then switching the platform would be
543:06 - very tedious because then it is going to
543:08 - take a lot of time if your system is
543:09 - slow all right after you have uh
543:12 - switched the platform i also add uh also
543:14 - click on add open scenes it will add the
543:16 - a primary scene i am using on right now
543:18 - all right and uh go to player settings
543:21 - in the player settings give it a company
543:23 - name alright give it a product product
543:25 - name
543:26 - all right and uh
543:28 - go to resolution and presentation in the
543:30 - default orientation select whichever you
543:32 - prefer all right i am i prefer landscape
543:35 - left because
543:36 - of my camera position all right then in
543:38 - the other settings uh
543:41 - select the lowest android version you
543:43 - want to keep all right for me it's
543:45 - marshmallow all right and
543:47 - leave the target api level to automatic
543:49 - highest install all right and after that
543:51 - we are done setting up the
543:53 - uh like project all right now what you
543:55 - have to do is import view for your
543:56 - engine and you already know how to do
543:58 - that right and uh another you have to
544:01 - import another sdk that is the ready
544:04 - player me sdk all right uh it it will
544:07 - enable us to create uh 3d avatars all
544:10 - right i have already i already have five
544:12 - avatars in my
544:14 - dashboard all right so you can also
544:16 - create yours and upload it in unity all
544:19 - right and to upload them you you have to
544:21 - use this
544:22 - unity avatar sdk all right
544:26 - so
544:28 - click on this download the latest
544:29 - version and download your sdk right and
544:31 - then import it the importing process is
544:34 - totally similar already there isn't much
544:36 - any difference so yeah all the things
544:39 - are there are totally similar all right
544:41 - i have already imported both euphoria
544:44 - and ready player me all right now what
544:47 - you have to do is
544:49 - we have to set up our view for your
544:51 - engine now all right so
544:53 - first of all to do that go to click on
544:56 - this main camera then delete this main
544:59 - camera all right then again go right
545:01 - click view fourier engine ar camera all
545:03 - right you have this ar camera now put it
545:05 - on top alright put it on top
545:08 - okay now
545:10 - after this is done we have to create a
545:12 - license key alright so go to open view
545:14 - for engine configuration and we have to
545:16 - add a license key in here so to do that
545:19 - go to your view for your developer
545:20 - portal click on get basic
545:23 - all right
545:25 - and then you have to get a new license
545:27 - all right give the
545:29 - license name that is
545:32 - business
545:33 - card
545:35 - all right and uh
545:38 - check
545:39 - check this box and click on confirm all
545:41 - right and you'd be having your
545:45 - business card right in here all alright
545:47 - that is the license of your business
545:48 - card
545:51 - so now what you have to do is
545:53 - uh
545:54 - click on this particular means copy this
545:56 - code all right and paste this code in
545:58 - your view for your configuration that is
546:00 - in the app license key all right and we
546:03 - are good to go
546:05 - now what you have to do is
546:07 - open this and we also have to add a
546:10 - target manager all right that is we have
546:12 - to add our own market database so how do
546:14 - we do that uh click on add database all
546:17 - right then
546:19 - let's uh
546:22 - business
546:23 - card
546:24 - marker
546:25 - all right
546:27 - card
546:28 - wait okay
546:31 - marker all right db
546:34 - so
546:35 - i create this database all right and
546:38 - after you create this database you are
546:40 - going to find uh open this database and
546:44 - add the marker already
546:47 - add the
546:48 - marker that you have created in there
546:49 - all right i have my own business card
546:51 - marker all right so i i will simply add
546:54 - that in here
546:56 - and then
546:57 - download it all right
547:01 - so
547:02 - just wait let me find my
547:05 - business card marker
547:07 - oh yeah i got
547:09 - now import it all right after you do
547:11 - that uh give it a uh give it a size
547:13 - alright i'm going to keep it to six all
547:15 - right and you can
547:17 - i am going to keep this name already you
547:18 - can give any name you want and then
547:20 - click on add target all right and it
547:23 - would upload the target in your database
547:25 - now what you have to do is after all all
547:27 - these after all these things are done
547:29 - download the database all right click uh
547:31 - that is click on download database and
547:33 - then select unity editor and click on
547:35 - download
547:37 - all right and this would actually start
547:39 - downloading your
547:41 - database all right
547:44 - and then what you have to do is you have
547:45 - to import this database in your unity
547:49 - as simple as that
547:50 - all right so now
547:52 - open your unity all right open your uh
547:56 - unity drag and drop alright drag and
547:58 - drop this uh sdk
548:00 - all right drag and drop this sdk into
548:03 - sorry not sdk the database into
548:05 - unity and click on import all right
548:08 - so after
548:10 - after all this all right it would import
548:12 - your sdk and
548:14 - sorry not sdk your database and we are
548:16 - good to go
548:17 - all right now what you have to do is
548:20 - right click in here click on view for
548:22 - your engine image target
548:25 - all right so it would create a image
548:27 - target uh game object in here and in the
548:30 - inspector menu you would be finding
548:31 - image target behavior
548:33 - in there click
548:35 - from database
548:36 - select the database and
548:39 - voila you got the marker
548:41 - right so here you can see we i have the
548:44 - business business card
548:46 - right now
548:50 - what we will be doing right now is we
548:53 - have the avatar right i already have
548:55 - imported the assets all right first of
548:57 - all let me convert the asset so
548:59 - select all these assets all right
549:01 - uh all all of them are png's all right
549:04 - so
549:06 - set the asset and
549:09 - in the texture type
549:10 - go to sprite 2d and ui
549:14 - and click on apply
549:16 - all right so it's going to take some
549:17 - time it's going to convert
549:20 - all the textures
549:22 - to a certain type all right that is this
549:27 - sprite 2d and ui all right and
549:30 - after it is converted right i'll be back
549:36 - so our assets are converted all right
549:38 - and now we are good to go
549:41 - all right so now what you have to do is
549:44 - uh you have to import the 3d model all
549:46 - right so how do you do that first of all
549:49 - uh click on this ready player me
549:52 - button in here all right that is in the
549:54 - head and click on
549:56 - avatar loader all right in here
549:59 - what you can do is
550:02 - uh
550:03 - create a new avatar for yourself all
550:05 - right i i already have them uh create a
550:08 - new avatar all right it's very simple to
550:10 - create one and create avatar and then
550:13 - what you have to do is
550:15 - click on that avatar in the three dots
550:17 - all right and
550:19 - copy dot glb url all right
550:22 - copy this glb url and
550:25 - go to unity editor
550:27 - here you can see avatar url or shortcode
550:30 - you have to paste
550:31 - that link you copied all right
550:36 - okay so now
550:38 - have a few options all right first of
550:42 - all uncheck this model caching why see
550:45 - this model caching feature is a feature
550:48 - by uh
550:49 - ready player me only what happens now it
550:51 - will cache your model in unity now if
550:53 - you don't alright let's say if you if
550:55 - you uncheck this model caching what will
550:57 - happen if you make some changes all
550:58 - right if you make some changes on the
551:01 - ready player me web that those changes
551:04 - of the avatar will automatically
551:06 - get reflected in
551:08 - your unity editor all right so for now i
551:11 - don't want uh model caching to be there
551:13 - but if you want that if you want model
551:15 - caching to be there you can do that all
551:17 - right but currently i don't want uh my
551:20 - model to be cached all right and or if
551:22 - if use i animations is not checked
551:25 - click on this use i animations all right
551:27 - and
551:28 - after that click on load avatar
551:32 - all right so it would start loading the
551:35 - avatar
551:36 - all right so first first of all it will
551:39 - download then
551:40 - simply import your avatar
551:44 - okay so our avatar
551:46 - is now
551:47 - loaded as you can see right in here
551:50 - all right so first of all let let me uh
551:54 - keep this avatar in a different place
551:56 - all right and
551:58 - let me add another plane all right that
552:00 - is go to 3d object
552:03 - uh in the 3d
552:04 - object click uh plane
552:08 - all right this plane is of course a
552:10 - big first of all let me reset the
552:12 - transform all right
552:14 - and let me you know put it down a bit
552:17 - and let me go to the top view so that i
552:19 - can i could adjust all right i could
552:22 - adjust this particular plane
552:27 - okay
552:30 - cool
552:34 - all right
552:38 - okay
552:39 - so
552:40 - we have adjusted our you know
552:43 - okay we have adjusted our plane all
552:45 - right now you can simply put it upwards
552:51 - all right
552:52 - cool
552:53 - now uh what i want you to do is attach a
552:56 - material in or to it all right so how do
552:59 - you do that click
553:00 - right click on the project panel create
553:01 - a folder all right
553:03 - create a folder called you know material
553:07 - all right
553:08 - right click create folder
553:11 - material
553:16 - click in here uh go to again material
553:19 - and give it a
553:23 - card material all right card mat all
553:26 - right so that we can add the material in
553:28 - here and in this albedo click on this
553:30 - option alright and select the card
553:31 - material in here
553:33 - okay and then drag and drop it in
553:36 - here
553:37 - all right now rotate it all right rotate
553:40 - it
553:41 - so that we get the perfect alignment
553:45 - all right
553:46 - so now we are good to go now let's uh
553:49 - edit this material a bit
553:51 - right
553:53 - okay
553:54 - of course metallic doesn't look good
553:56 - all right yeah
553:58 - let's let's experiment with this
554:00 - material a bit all right
554:05 - wait
554:13 - so now as you can see we have a menu
554:15 - right in here all right uh click on
554:17 - legacy shaders
554:19 - and click on
554:21 - diffuse
554:24 - okay now it does looks good all right
554:28 - so
554:29 - let me show you how how i did it in the
554:31 - material section
554:32 - click on the shader option all right
554:34 - then go to legacy shaders then diffuse
554:37 - all right so that's how you do it
554:39 - all right so yeah i hope it's clear
554:42 - now
554:44 - what you can do is uh drag and drop this
554:46 - plane all right inside this image target
554:49 - and you get this avatar right reset the
554:52 - transform of this avatar all right reset
554:54 - the transform of this avatar scale it
554:56 - all right scale it a bit
554:59 - scale this avatar a bit all right
555:01 - first of all you remove this directional
555:03 - light alright i don't want this means
555:05 - remove the shadows not the directional
555:07 - light of course after removing the
555:09 - shadows all right rotate
555:11 - rotate this particular avatar all right
555:15 - let me rotate it okay cool
555:18 - now
555:19 - put it right in here all right on top of
555:22 - this blank area
555:26 - all right
555:27 - okay let's
555:29 - make this like this all right cool
555:31 - so now you get a avatar
555:34 - all right you can add a rotation script
555:36 - all right so let's let's go to
555:40 - uh create another folder all right
555:43 - let's
555:45 - create a folder called scripts
555:50 - in the scripts folder
555:52 - create a shop script all right and name
555:55 - it rotate
556:00 - okay i'm going to hit reload in my
556:02 - visual studio editor all right
556:05 - so it's currently compiling and it also
556:07 - reloading my visual studio editor so
556:10 - just wait a few seconds
556:19 - so now uh our script is compiled all
556:21 - right now let's open this in our visual
556:23 - studio editor all right
556:25 - and
556:26 - let's write uh some script in it first
556:29 - of all remove this start and all those
556:31 - comments all right
556:33 - simply create a public vector3 all right
556:36 - vector
556:38 - 3 and give it rot
556:41 - all right and then click on transform
556:45 - transform dot
556:47 - rotate
556:49 - then pass this rod value and uh
556:52 - on the rotate function and multiply it
556:54 - with time dot
556:56 - delta time
556:58 - all right
556:59 - and then uh save the script and uh
557:01 - compile it all right after compiling it
557:04 - we we have to attach the script on the
557:06 - avatar all right to make
557:09 - it work
557:11 - so it's currently comparing the script
557:13 - so just wait for a few seconds and
557:16 - you know it would be done
557:18 - right
557:18 - so um yeah
557:21 - sure
557:23 - so our script is compiled now what we
557:26 - have to do is click on this avatar all
557:28 - right add the script right in here all
557:30 - right and give it a rotational value of
557:33 - let's say um
557:35 - 10 all right
557:37 - and also drag and drop this
557:42 - a particular avatar
557:44 - inside the image target or make it a
557:46 - child of the image target all right so
557:48 - now as we uh did a lot of things right
557:51 - in here all right let's uh let's see if
557:54 - everything is working perfectly or not
557:57 - all right so
557:59 - let me open my uh marker
558:02 - and
558:03 - then
558:04 - hit the play button all right hit the
558:06 - play button all right so that's what you
558:09 - have to do right now
558:10 - so click on this play button
558:14 - so now as you can see our
558:17 - camera is open now let's uh
558:20 - cool
558:22 - see uh all the features that we
558:25 - implemented as of now is perfectly
558:27 - working but here you can see the uh
558:29 - character animation is being played
558:32 - right the character animation is being
558:33 - played but the problem is that it is uh
558:36 - sometimes it's also walking all right
558:37 - it's also showing the walk animation and
558:39 - i of course i don't want the work
558:41 - animation all right and here comes
558:43 - another problem that this extended
558:45 - tracking so we'll be fixing these
558:47 - problems alright before moving forward
558:48 - so how to do that first of all uh let's
558:51 - fix the about or let's let's fix the
558:52 - image target problem all right click on
558:54 - this image target
558:55 - uh change it to tracked all right then
558:58 - in the avatar what you have to do is and
559:00 - you can see in the controller option
559:02 - click on mail full ball with body that
559:04 - is the controller name and double click
559:06 - on this and it would open animator
559:08 - window here you can see that uh
559:11 - there there's two pathways that is first
559:13 - it is going from idle to walk then again
559:16 - it is going to walk to idle all right so
559:19 - simply delete this all right simply
559:20 - delete this particular
559:22 - uh animation and we will be good to go
559:25 - all right now also i want to increase
559:27 - the size of this avatar a bit all right
559:29 - so
559:31 - yeah
559:32 - now let's see how everything works
559:35 - right
559:37 - let's see how how perfectly uh things
559:39 - are working and if it needs any more
559:42 - changes or not
559:44 - right so
559:45 - yeah
559:46 - just give it a few seconds
559:50 - okay cool
559:56 - okay
559:59 - yeah it looks good
560:01 - it does looks good right now all right
560:04 - so yeah and also this uh tracking thing
560:07 - is fixed
560:08 - right and currently you can see the
560:10 - blink speed all right
560:12 - the blink uh you can increase the blink
560:15 - speed all right that is i can make it to
560:17 - like
560:18 - 0.3 maybe all right i'm going to
560:20 - increase it to 0.3 it's the ideal value
560:22 - i i find
560:24 - all right now as our avatar is set up
560:27 - all right now also set up our
560:29 - you know our ui
560:32 - all right now how to do that
560:35 - this thing is fairly simple go to image
560:37 - target click on ui
560:39 - then uh select the canvas right in here
560:42 - all right select a canvas and currently
560:45 - this is a 2d canvas and of course we
560:47 - none of us want 2d canvas
560:49 - uh what you can do is go to
560:51 - click on click on this render mode
560:53 - alright and select world space
560:56 - select the uh here you can see here's an
560:58 - option for
560:59 - event camera
561:02 - uh drag and drop this ar camera into
561:04 - this event camera all right and here you
561:06 - can see our canvas is now transformed to
561:09 - 3d mode all right
561:11 - now
561:12 - let's
561:14 - let's
561:14 - edit this canvas all right
561:17 - let's scale it down alright and let's
561:19 - reset uh not reset let's reset its
561:22 - position
561:24 - all right
561:26 - here you can see we also we need to
561:28 - scale it down more
561:32 - okay
561:34 - now
561:35 - rotate this into y-axis not y or
561:38 - x-axis to 90 degree
561:41 - all right
561:42 - and make sure it it is like this
561:45 - all right give it a bit bit space to it
561:48 - so that you can you know add our ui into
561:51 - this
561:52 - right now what you have to do is
561:57 - you have to add
561:58 - ui to it right what you can do is click
562:01 - on this uh canvas
562:03 - all right then go for uh first of all i
562:06 - want to add an image so click on this
562:08 - image
562:09 - all right and uh let's drag and drop it
562:13 - in here
562:14 - all right so this would be my profile
562:16 - image all right and i already have the
562:18 - profile image so i'm going to just
562:20 - select it and you can see
562:24 - first of all let me do actually uh i
562:26 - guess
562:27 - the rotation of the canvas is uh
562:30 - different let me let me check
562:32 - yeah the rotation of canvas is wrong
562:34 - just wait let me fix the rotation
562:40 - okay
562:43 - 180
562:45 - all right
562:46 - now
562:47 - let's get this particular image in its
562:50 - right place
562:53 - okay cool so now we got our image right
562:57 - in here
562:58 - all right so you can if you want you can
563:00 - like
563:03 - increase the size of the image all right
563:05 - and let's add our name text
563:08 - on the side of the image
563:10 - so what you how do you do that click on
563:12 - ui then click on text mesh pro
563:16 - all right import the text mesh pro all
563:18 - right because this is
563:20 - the bet best alright there's the best
563:22 - for button and text
563:24 - both all right and it would start
563:26 - importing the assets so it's gonna take
563:28 - some time
563:29 - so give it some time all right
563:32 - so i have imported the text mesh pro all
563:34 - right and also i have also imported the
563:36 - text mesh for examples and extras all
563:38 - right because it already provides some
563:39 - really good fonts so i'm going to use
563:42 - them all right now
563:45 - as you see we have you know the text in
563:47 - here now
563:49 - write your name in here so
563:51 - priyanshu but touch rgb
563:57 - all right so what i'm going to do is i'm
563:58 - going to like in the wrapping i'm going
564:00 - to disable the wrapping all right
564:02 - because i don't need it
564:04 - now uh
564:06 - let's see uh let's
564:07 - let's choose a font from the given set
564:09 - all right let's see which one would be
564:11 - good
564:12 - okay now this one
564:14 - of course not this one no
564:17 - let's see
564:18 - yeah this will uh let's check the anton
564:21 - one
564:22 - okay
564:23 - so roboto looks good all right this
564:26 - roboto one looks pretty good
564:28 - now
564:30 - what you can do is you can
564:32 - adjust it all right i just used more i
564:35 - think
564:36 - this
564:37 - this is good this looks uh just to it
564:40 - okay
564:41 - yeah
564:45 - no just wait
564:46 - let me adjust it a bit all right yeah
564:48 - this this this is pretty good
564:50 - this this looks fine and uh
564:55 - all right
564:56 - so now we have set up uh this particular
565:00 - profile thingy right now
565:03 - what uh i want you to create an empty
565:05 - prefab alright right in here all right
565:08 - create an empty the game object and
565:11 - let's name it a left container all right
565:14 - because as we are going to add
565:16 - animations to it all right so position
565:18 - it in
565:19 - you know in the center of these two
565:21 - assets that is the
565:23 - image and
565:25 - the text
565:27 - put it in the left container
565:29 - all right and
565:31 - let's uh you know sort of
565:33 - add a bio in here
565:36 - okay
565:37 - so this would be a short bio so
565:43 - i am
565:44 - let me write let me uh complete the bio
565:47 - all right then i would again
565:49 - resume the video
565:54 - so i wrote the bio all right now i have
565:57 - to adjust let's adjust this bio right in
565:59 - here all right so that like you know
566:01 - uh this of course doesn't looks good
566:04 - and uh
566:07 - just give a moment
566:13 - all right
566:16 - okay
566:18 - so
566:19 - let's give it a height of 400
566:22 - not 400 let's give it 200
566:25 - okay yeah this this looks good now
566:30 - let's reduce the size all right let's
566:33 - make the size 25 maybe
566:35 - or
566:36 - 20.
566:39 - yeah i guess
566:40 - i guess it's fine
566:41 - let's make it
566:43 - 350
566:45 - all right
566:46 - yeah i guess uh this is fine this this
566:50 - this looks fine now align it a bit
566:53 - alright align this thing a bit
566:56 - and uh
566:59 - actually let's remove this
567:01 - intro thing all right let's add two
567:03 - buttons in here all right let's add two
567:05 - buttons in here
567:07 - go to ui
567:09 - click on button text mesh pro
567:12 - all right
567:13 - go in here
567:15 - you know uh
567:16 - increase the size of the button alright
567:18 - increase the size of the button
567:22 - put it in the middle maybe all right and
567:25 - i have wait i have the logos right in
567:27 - here
567:28 - go to assets okay
567:31 - let's let's make two button for our
567:34 - social media that is you know
567:37 - uh
567:38 - this instagram and uh linkedin all right
567:42 - so
567:44 - i'm not going to remove this particular
567:46 - text i'm going to make it bold and let's
567:49 - name it linked
567:50 - in
567:51 - all red
567:53 - so and let's reduce the size that is
567:55 - make it 20 all right
567:58 - and in the button only click on ui then
568:00 - again add an image
568:02 - all right reduce the size
568:05 - uh
568:06 - in the image add the linkedin you know
568:08 - link this
568:09 - linkedin image in here all right and
568:12 - drag and drop it to the side right
568:16 - put it in the side
568:18 - uh
568:19 - make the text a bit centered
568:22 - right
568:24 - okay
568:26 - let's make it uh
568:28 - side all right let's
568:30 - just give me a second
568:33 - let me reduce the size of the text again
568:34 - that is let's make it 17 maybe okay
568:38 - sorry 20 buy mistake i got 27
568:40 - all right cool now
568:43 - i would also like like to or just wait
568:47 - okay so i would also like to uh reduce
568:49 - the size of the button so just simply
568:51 - remove these text from there all right
568:56 - now just wait
568:59 - let me reduce the size of the button
569:03 - um
569:03 - okay good now again uh
569:07 - make those text and
569:09 - images the child of the button right
569:13 - so let's adjust it a bit again
569:18 - um
569:22 - right yeah this this looks good
569:24 - okay and also go to gizmos all right and
569:26 - go to gizmos and you can see this 3d 3d
569:28 - icon slider just
569:31 - make it
569:32 - small all right so small that you can't
569:34 - again see those
569:37 - things
569:37 - all right and
569:39 - okay now yeah this looks cool so then
569:42 - name it linkedin
569:44 - all right then again you know
569:46 - duplicate this button all
569:48 - right put it in here
569:51 - all right and let's uh
569:53 - name it uh
569:54 - instagram
569:58 - all right
570:01 - so
570:01 - give the text instagram
570:07 - all right
570:09 - so
570:10 - let me reduce the size a bit for this
570:12 - one
570:13 - okay
570:14 - 15 okay all right
570:17 - here we go and change the image
570:20 - to the instagram image
570:22 - all right and
570:24 - yeah so we got our buttons in here
570:27 - so now you what you can do is you can
570:28 - simply you know
570:30 - take these two buttons all right take
570:32 - these two buttons and
570:34 - simply
570:35 - put it right in here
570:39 - all right
570:40 - or
570:42 - let's try some let's try making this
570:44 - button a bit you know
570:46 - larger
570:47 - in size
570:49 - okay
570:50 - now
570:52 - just give a moment and
570:56 - yeah
570:57 - these looks good
570:59 - right
571:00 - so we got our
571:02 - left container all right that is the
571:03 - left left panel all right it would be
571:06 - like coming like this in the animation
571:08 - and let's create our another container
571:11 - all right let's
571:12 - create an empty container let's give it
571:14 - a bottom all right that is it would be
571:17 - in the
571:18 - bottom container all right
571:20 - so bottom container
571:24 - now in the bottom container again
571:26 - place that uh add an you know uh ui that
571:30 - is an image
571:31 - all right add an image in here
571:34 - uh give this uh image a new you know
571:36 - component that has button component
571:39 - all right because we'll be using them as
571:41 - buttons
571:42 - all right now get this container and
571:44 - drag and drop it in here
571:46 - all right
571:47 - so
571:48 - uh as if you don't get that container
571:52 - all right now what you have to do is
571:54 - take this image and put it in the side
571:56 - and add the discord icon in here
571:59 - all right and let's uh give it a name
572:01 - discord
572:03 - okay
572:04 - this cord
572:06 - all right then again now
572:09 - duplicate this and again place it in
572:12 - a bit you know change the position and
572:15 - place it in
572:15 - [Music]
572:16 - the side of it and again drag and drop
572:18 - the github
572:19 - you know github
572:23 - logo and again
572:25 - duplicate it all right
572:28 - and now it's the time for you know
572:29 - youtube
572:32 - so now
572:34 - rename it to youtube
572:36 - all right
572:38 - now what you can do is
572:42 - okay so yeah
572:44 - so we got our three button containers
572:48 - all right and make sure to place it in
572:50 - the center all right
572:53 - um
572:54 - let me reposition this you know the
572:56 - button of
573:00 - just wait let me reposition this
573:04 - all right
573:07 - just give me a second let me make all
573:09 - the things in center
573:11 - just give me just just a moment
573:15 - all right
573:18 - okay yeah
573:21 - now i guess everything's fine right
573:24 - so now
573:26 - we have the buttons in here all right we
573:28 - have all the things that we would be
573:31 - needing let's uh
573:32 - again
573:33 - let's reduce the size of this one too
573:36 - let's make it 14 maybe
573:38 - all right
573:42 - okay
573:44 - now let's
573:45 - go for 15.
573:50 - all right this looks good
573:52 - so now
573:54 - as our buttons are created
573:57 - right
573:58 - now what you have to do is we have to
574:00 - create a script all right because of
574:02 - course the these buttons have to do
574:04 - something right these buttons have to do
574:05 - something so what uh this buttons will
574:08 - be used to open the links all right so
574:10 - how to do that click on
574:12 - create a new she shop script all right
574:14 - and
574:15 - name it link manager
574:17 - all right because we would be adding the
574:19 - links in here all right and after it
574:21 - gets compiled open the
574:24 - open the link all right
574:30 - so
574:30 - [Music]
574:33 - so we have to write some you know some
574:35 - functions
574:37 - all right to open the links the
574:40 - the script is pretty easy
574:43 - so now as our script is opened all right
574:46 - uh everything's pretty simple just
574:47 - remove all this
574:48 - comments and start an update function we
574:51 - have to write our own function that is
574:53 - public all right
574:55 - void
574:57 - i'll say open
574:59 - linkedin all right give give the
575:01 - function name anything you want all
575:03 - right and now uh within that function we
575:05 - have to write a particular line that is
575:07 - application dot
575:09 - open url all right and in that uh pass
575:12 - your linkedin profiles url
575:15 - all right so here i have the
575:18 - linkedin profiles url and now i'm going
575:20 - to
575:21 - paste it right in here all right
575:23 - similarly write some other function that
575:25 - is public
575:27 - void open
575:29 - instagram
575:33 - then again application dot
575:37 - open url
575:39 - then you know add
575:41 - the instagram url
575:44 - copy link address
575:49 - okay there's some problem with the link
575:51 - all right let's remove this yeah we got
575:53 - our linkedin uh that is instagram pro
575:56 - profile all right now
575:58 - again uh let's
575:59 - create another function that is open
576:02 - github
576:06 - all right so um
576:11 - application dot open url
576:14 - and let's
576:16 - put our github profile in there
576:20 - copy link address
576:22 - all right
576:24 - so we got our get get a profile too
576:26 - right
576:30 - all right so now let's add
576:33 - our
576:35 - you know uh
576:37 - which one is left now let's see
576:39 - discord yeah
576:41 - so open
576:43 - discord
576:44 - so this is uh the discord server of
576:46 - android so you can join that so
576:49 - application dot open
576:53 - url
576:55 - and uh
576:57 - all right just wait let me copy the
577:00 - url copy link address all right so here
577:03 - we got
577:04 - the url
577:06 - all right now another uh was youtube
577:09 - right public
577:11 - void
577:13 - open
577:15 - youtube
577:16 - all right
577:19 - so application
577:21 - dot open url
577:23 - now again uh
577:25 - put youtube in there this is the put the
577:28 - link of the youtube in there all right
577:30 - so i'm just going to copy the link
577:32 - all right and you know
577:35 - just paste it in here and
577:37 - let's compile the script
577:45 - so uh so our script is compiled all
577:48 - right now you what you have to do is
577:49 - create uh empty game object alright
577:51 - reset its transform
577:53 - all right just just do it ah yeah so
577:56 - reset its transform and add this uh also
577:59 - rename it to link manager alright
578:02 - because we'll be attaching our
578:04 - link manager script to it all right
578:07 - and attach this link manager script in
578:09 - here
578:10 - now what you have to do is
578:12 - uh go to the first of all uh this is the
578:14 - these are the button all right so first
578:15 - of all go to this linkedin button all
578:17 - right in here you can see on click
578:20 - click and uh click on add then add the
578:22 - link manager
578:24 - then click on link manager and find open
578:27 - linkedin all right so and we got the
578:28 - open linkedin function now again go to
578:30 - instagram on click
578:33 - link manager
578:37 - open instagram
578:39 - okay and in the bottom container click
578:40 - on discord
578:43 - on click
578:44 - link manager
578:46 - and then
578:48 - open discord and again github save do
578:51 - the same thing for github
578:53 - all right
578:55 - so add the github one
578:57 - then click on
578:59 - open github
579:01 - there again
579:02 - youtube
579:04 - add the link manager
579:06 - link then again open
579:09 - youtube where is youtube yeah we gotta
579:12 - so
579:13 - that's how you do it all right now let's
579:15 - test if everything is is working
579:18 - fine or not
579:20 - right
579:33 - so
579:34 - just give a few second and let me show
579:36 - you
579:38 - so here you can see that
579:41 - our business card is created all right
579:43 - and uh click on any button all right
579:45 - let's say that's this discord button so
579:48 - what will happen it would uh start
579:50 - opening the url in my browser all right
579:53 - so here you can see it has opened the
579:55 - url in my browser and
579:57 - so you can do similar things with that
579:59 - you can add more features all right and
580:01 - now it is our time to add the animations
580:03 - to it
580:04 - all right
580:06 - so how would we do that see uh adding
580:08 - the animations are very simple
580:10 - what you have to do is
580:13 - click on this left container all right
580:15 - then go to your window
580:17 - uh go to uh sorry in here go to this
580:20 - animation section and click on animation
580:23 - and a window like this would appear so
580:28 - uh create all right click on create
580:31 - then what you have to do is uh create a
580:34 - new folder in here let's uh name it anim
580:36 - solid because we'll be storing all our
580:38 - animations in there
580:40 - all right and uh
580:46 - in the adams folder give it uh give it a
580:48 - name called left container
580:51 - left container anim already done save
580:53 - the animation
580:54 - all right now what you have to do is
580:55 - here you can see first of all see here
580:57 - in the record button click on this
580:59 - record button all right and you know
581:03 - put this
581:04 - inside alright put this inside of in
581:06 - here
581:08 - all right
581:09 - now
581:10 - uh let's give it a let's say 50 second
581:13 - gap all right
581:14 - and again pull it back in here
581:18 - all right
581:19 - now
581:20 - let's see
581:23 - okay if if you want you can make things
581:25 - more slower by dragging it to like
581:28 - uh one
581:30 - all right so now our left controller
581:33 - animal is done
581:34 - right so let's make it up to full
581:37 - all right and now in the
581:39 - bottom
581:40 - container
581:41 - what we have to do is again
581:44 - click on create all right and
581:47 - let's name it
581:48 - bottom container
581:51 - and
581:51 - all right and uh save it
581:54 - then again click on this
581:56 - red icon all right this record button
582:00 - drag drag it in in here all right drag
582:03 - it in here and then again go to one
582:08 - then again bring it up in here
582:10 - all right
582:11 - so that's how we do it right so that's
582:14 - how everything works right
582:17 - so now our animation is recorded you can
582:19 - play the animation and see it's working
582:21 - all right now here's a bit of a problem
582:23 - all right this animation all right this
582:25 - animation would be looping all right
582:27 - when when the animation works right so
582:30 - to fix that click on go to the anime
582:32 - folder all right and uh
582:35 - you can see these triangle icons right
582:36 - so click on them and
582:40 - uncheck the loop time option alright and
582:41 - again in the left container also uncheck
582:44 - the loop time option all right now
582:48 - let's see if the animation is working or
582:51 - not right let's uh let's check that all
582:54 - right let's check that
582:57 - so
582:59 - let's see
583:01 - oh our animation didn't work but can you
583:04 - tell why because uh see when the scene
583:07 - started now it already played the
583:08 - animation all right
583:10 - means uh let me show you again all right
583:13 - let me show you again
583:16 - let me uh you know
583:17 - bring it up in here all right and let me
583:20 - show you what is happening in the
583:21 - background
583:22 - okay so just give me a second and here
583:25 - you would see that when the scene start
583:27 - it would already
583:28 - play the animation
583:30 - now we all we do have a fix for that and
583:33 - i will show you what is the fix it's a
583:35 - very simple fix only all right
583:37 - i will also make you understand the
583:39 - concept of that all right so just give
583:41 - me a second and uh would be good to go
583:44 - right
583:44 - so
583:47 - here you can see the animation is
583:48 - actually not playing because it has
583:50 - already been
583:51 - played right so this is the problem so
583:53 - how to fix this let's let's see how to
583:55 - fix this all right so the very simple
583:58 - way is to go to the image target all
584:00 - right and here you can see uh there's on
584:02 - target found and on target lost right
584:04 - and uh currently our
584:07 - work is with this on target found
584:10 - right so what we will do is click uh
584:13 - click on this
584:15 - get the left container in here go in
584:18 - here go in animator all right
584:21 - and
584:22 - click on you know
584:24 - play
584:26 - right
584:26 - and
584:28 - if on target is lost all right
584:31 - away uh
584:32 - okay if on target is lost what you have
584:35 - to do is
584:36 - go to the left container
584:38 - all right and
584:41 - uh just wait
584:43 - click on stop playback
584:47 - all right
584:48 - now let's see if if it's working or not
585:01 - all right so
585:03 - our camera is active all right let me uh
585:06 - maximize the scene all right let me
585:07 - maximize this
585:09 - game view all right and let's see
585:12 - see our animation is perfectly working
585:14 - all right and let's remove it and then
585:16 - again
585:17 - bring it
585:18 - see our animation is working so we have
585:20 - to do the same thing all right we have
585:21 - to do the same thing for the bottom
585:22 - container too and
585:25 - you know what will happen our
585:28 - first business card will be created
585:31 - all right
585:34 - okay
585:35 - so drag and drop the bottom container
585:37 - then again click on play
585:39 - all right and then in the on target lost
585:41 - again drag and drop this bottom
585:43 - container
585:45 - and then
585:47 - uh
585:49 - click stop playback
585:51 - all right
585:52 - and
585:54 - let's see
585:58 - so now let let me show you all right
586:02 - see the animations are perfectly working
586:05 - right
586:06 - isn't this uh great
586:12 - so like this you can create your own
586:14 - avatar like see
586:15 - uh this uh means your own business card
586:18 - see here you can see this there is avada
586:20 - and it is also blinking
586:22 - can you see that see it is also blinking
586:25 - so our business card is perfectly
586:27 - created all right so now what you have
586:29 - to do is
586:31 - uh you have to build this application
586:33 - and to do that you simply have to go to
586:36 - file build settings and click on build
586:39 - the application and give it a name and
586:40 - save it alright so that's it so this is
586:43 - how we create a business card all right
586:49 - so hey guys
586:51 - in this lecture we are going to create
586:53 - our last project that is of euphoria
586:56 - that is we are going to create our last
586:57 - augmented reality application in these
587:00 - series
587:01 - all right after these after this uh
587:04 - module we are going to start with spark
587:07 - ar so it's also going to be really
587:09 - exciting to work with sparky so
587:12 - yeah without any further ado let's get
587:14 - started
587:15 - so the very first thing all right i want
587:17 - you to uh is set up your unity engine
587:21 - already is to set up your view fourier
587:23 - engine you already know how to do that
587:25 - it's fairly simple first the very first
587:27 - step is go
587:29 - create your unity like unity project all
587:32 - right after that uh go to your build
587:34 - settings
587:37 - in the build settings all right you
587:38 - would be finding
587:40 - android option all right if you don't
587:42 - have android option means if if it is
587:45 - showing something like this uh no
587:47 - android module loaded install it install
587:50 - with unity that means you haven't
587:52 - installed your android module so do that
587:54 - after that what you have to do is click
587:56 - on build so in not build i'm really
587:58 - sorry you have to uh an
588:00 - app an option would be coming called
588:02 - switch platform all right like uh like
588:05 - this switch platform so
588:07 - as i'm already switched to android it's
588:10 - showing me build
588:11 - but uh in your case it will be showing
588:14 - switch platform so click on switch
588:16 - platform and after you are done done
588:19 - switching your platform go to the player
588:21 - settings
588:23 - all right go to the player settings and
588:25 - here add the company name at the product
588:27 - name all right then go to resolution and
588:31 - presentation
588:32 - in here you'll be uh getting an option
588:35 - of default orientation i uh for in my
588:38 - case all right in my case i want it to
588:40 - be landscape lift uh
588:42 - i'm adjusting this just because for the
588:46 - camera position of my device
588:48 - all right and in the other settings
588:51 - we have to set up our
588:54 - android build version so currently it is
588:56 - getting all the api levels all right uh
588:59 - the one i all i means i always go for is
589:03 - android 6.0 all right you can even go
589:06 - for android 4.4 alright it's totally
589:08 - upon you
589:09 - uh so i'm again going to go with android
589:12 - 6.0 all right
589:17 - so here here i have
589:19 - selected android 6.0 there are multiple
589:21 - api levels i have i have up to api level
589:24 - 30 that is android 11. you can choose
589:28 - any one from these and i suggest you not
589:31 - to go above android 6.0 all right
589:34 - because nowadays most like
589:37 - most of the device starts
589:39 - from 6.0 like
589:41 - four to five year old mobile phones have
589:44 - android 6.0 in them so
589:46 - uh
589:47 - means take the api level as high as 6.0
589:51 - all right
589:52 - don't go above it
589:55 - as of now
589:56 - now you can even select android 4.4
589:59 - kitkat all right it's totally upon you
590:00 - and leave the
590:02 - target api level to automatic highest
590:04 - install all right just like it is and uh
590:06 - yeah
590:07 - we uh our setup is done
590:10 - all right
590:11 - now what i want you is to uh import
590:15 - the viewforia engine you already know
590:17 - how to do that and i have already
590:19 - imported view 4d engine just cause
590:22 - because it's going to take a lot of time
590:23 - to import in my system all right if your
590:26 - system is fast it's it's not going to
590:27 - take so much time but in my case it took
590:30 - a lot of time so i've already imported
590:32 - it and you already know how to import it
590:35 - all right so
590:37 - now
590:39 - let's uh
590:41 - first create our user interface all
590:43 - right that is the main menu
590:45 - after that we are going to set up our
590:47 - viewfore engine
590:48 - all right and uh
590:51 - you see
590:52 - i'm pretty sure that you already know
590:54 - how to use the ar camera how to use the
590:57 - image target right how to use
590:59 - uh
591:01 - means how to use the dashboard means the
591:04 - website for getting the license for
591:06 - adding the image targets all right i'm
591:08 - pretty sure you know that and
591:12 - i i want you to try this ar encyclopedia
591:17 - yourself first all right try this one
591:19 - first by yourself all right
591:22 - and then watch the video all right
591:23 - because that would be a really good
591:25 - practice for you
591:27 - so you can do that or even watch the
591:29 - video and develop along with it all
591:31 - right
591:33 - now let uh i i already have a scene this
591:36 - is the sample scene all right i just
591:38 - want to rename it because the uh in here
591:40 - i am going to create the ui
591:42 - so
591:43 - hit a rename and
591:46 - let's name it main menu
591:51 - all right it's asking to reload okay
591:54 - cool so we have
591:56 - basically
591:58 - renamed our main menu all right now what
592:00 - we have to do is we have to uh provide a
592:03 - canvas to it right uh because uh the
592:06 - main menu is going to be our ui all
592:08 - right and uh one more thing i would like
592:11 - to tell you that this
592:13 - this ar encyclopedia project is based on
592:15 - dinosaurs all right currently uh i have
592:18 - included three dinosaurs all right you
592:20 - can add as many as you want the three
592:23 - are triceratops uh t-rex and the
592:25 - spinosaurus
592:26 - all right so you can add as many as you
592:29 - want and even launch uh
592:31 - this product after developing it all
592:33 - right and i have al also created the ui
592:35 - assets already all right
592:38 - i'm also going to show you how to play
592:39 - pause and stop an audio in this tutorial
592:42 - so
592:43 - hang tight there and for the tutorial
592:46 - so first of all right click in here and
592:48 - go to ui and
592:51 - click on canvas
592:52 - all right and in here in the top you
592:54 - would be finding a 2d option click on
592:56 - that 2d option and then
592:59 - double click on the canvas option and it
593:01 - would be focused
593:02 - all right so and the thing go to the
593:04 - game window all right and
593:06 - choose a resolution
593:08 - see for uh developing a responsive ui
593:11 - what i generally do is i have three
593:13 - resolution all right one one is of
593:15 - iphone 6 that is the medium resolution
593:18 - one is
593:19 - of uh
593:21 - not exactly the medium all right but i
593:23 - have iphone 6 that is the lowest
593:25 - resolution i have oneplus 7 that has the
593:28 - highest resolution and redmi note 5
593:30 - that has
593:32 - the
593:33 - medium resolution all right so what i
593:35 - want you to do is uh you also follow
593:37 - these uh three
593:39 - means these three presets
593:41 - you can create your own by like uh
593:45 - in the game window here you'll be
593:46 - finding a drop down go in here and click
593:48 - on this add button give it a name uh
593:51 - give it and width and height all right
593:54 - so and click on ok it would help you
593:56 - create
593:57 - a
593:58 - means
594:00 - a basically a resolution of any phone
594:02 - you want all right so currently i want
594:04 - to go with iphone 6 all right this looks
594:06 - good
594:07 - now what i want is uh
594:09 - in this canvas i'm going to create a you
594:12 - know panel all right for attaching my
594:15 - background image in here so i just want
594:18 - to stretch this you know stretch this
594:20 - panel out a bit because let me show you
594:22 - why
594:23 - uh go to a game window if i'm not sure
594:25 - if it's visible to you or not but uh
594:28 - just wait
594:32 - if if you can see uh here are some edge
594:34 - edge spots like uh the panel isn't
594:37 - covering the whole uh you know whole
594:39 - canvas so that's creating a problem so
594:41 - that's why i'm going to you know stretch
594:43 - it out a bit
594:45 - okay
594:45 - and uh now what i want to do is i want
594:48 - to uh click on the panel all right then
594:51 - in the color image here is an option of
594:53 - alpha
594:54 - i want to increase it all right so that
594:57 - it doesn't uh means
595:00 - it is not transparent all right and in
595:02 - the background here you can see source
595:04 - image i am clicking this button to
595:06 - select the image all right
595:08 - and
595:09 - in here let me see yeah i got the
595:11 - background image in here all right so
595:13 - this is the background image i'm going
595:15 - to use let's see how it looks yeah it
595:17 - looks good
595:20 - all right
595:21 - and now
595:22 - what i want to do is i want to give it a
595:24 - heading right so i have also created an
595:26 - asset folder so click on this image all
595:28 - right click on this image and let's
595:31 - let's give it a name that is
595:33 - heading all right after you give it a
595:35 - name of heading what you have to do is
595:37 - you have to choose the title all right
595:40 - that this is i have kept the title as
595:42 - dynapedia all right
595:45 - so i'm going to adjust this particular
595:48 - asset a bit all right so that you know
595:50 - it uh
595:52 - it fits good to the ui
595:55 - and
595:56 - you have to do one thing all right
595:59 - go to this particular transform alt and
596:02 - you know
596:03 - then
596:05 - anchor it on the top all right
596:09 - now uh adjust it a bit all right
596:12 - and let's see how it looks yeah it looks
596:14 - good let's stretch it out a bit no
596:17 - let's uh let's stretch it out a bit okay
596:20 - yeah
596:22 - all right now it looks good now
596:25 - let's drop it down a bit all right let's
596:27 - drop it down a bit
596:29 - okay
596:30 - cool
596:32 - now
596:33 - i have to add a button in here that is a
596:35 - start button all right so i'm again
596:38 - there are two ways you can do that all
596:40 - right i'm i'm going for the image one
596:42 - but let me show you first of all go to
596:44 - uh ui you can simply select uh button
596:47 - you know uh simply select a button and
596:50 - then from that uh button delete the text
596:53 - all right but uh
596:55 - i don't want to do that i'm going to do
596:57 - a very simple thing that is go to ui
596:59 - select an image
597:01 - all right and
597:04 - you know
597:05 - select the start button asset all right
597:08 - and then again uh you know stretch it
597:10 - out a bit all right
597:12 - so that it looks you know looks good all
597:15 - right now now that it looks good
597:17 - what i'm going to do is uh also anchor
597:20 - it all right and cut it maybe
597:22 - actually let's anchor it in the center
597:24 - only let's
597:26 - keep it at the center click on start
597:29 - button
597:31 - all right oh i guess one thing i forgot
597:33 - yeah see
597:35 - i always forget to make this change all
597:38 - right whenever i'm created creating a ui
597:40 - and
597:42 - i just it just comes to my mind after
597:45 - many things are done and
597:46 - i again forgot to do that all right i'm
597:49 - really sorry about that actually in the
597:51 - canvas all right click on this canvas
597:54 - here you'll be finding
597:55 - an option
597:57 - or means a component in the inspector
597:59 - called canvas scaler in there you will
598:01 - be finding ui scale mode
598:03 - what you have to do is uh you have to
598:05 - change it to scale with screen sets and
598:06 - see
598:09 - this is why uh
598:11 - i like i really hate it when i forget
598:14 - about you know setting up all the things
598:17 - in the ui
598:18 - so it happens with me a lot all right so
598:23 - yeah
598:24 - forget uh forgive me about this but uh
598:26 - yeah now as everything's working fine
598:30 - all right
598:31 - we are good
598:32 - right
598:33 - so yeah
598:36 - let's you know uh let's make this button
598:38 - a bit more shorter just wait
598:42 - all right
598:44 - where is the button here gotcha
598:47 - all right
598:49 - yeah it looks looks good
598:52 - now in the start button all right as it
598:54 - is an image we won't be able to click
598:56 - this image or of course we won't be
598:58 - because it is not a button right now to
599:00 - make this image a button what you have
599:01 - to do is you have to click on add
599:03 - component
599:04 - in here all right you have to search for
599:06 - uh something called button all right and
599:08 - here you would be getting a
599:10 - option for button all right and now this
599:12 - image is a button all right this image
599:15 - is transformed into a button
599:18 - right now i want you to create another
599:21 - image all right go to the ui
599:23 - um
599:25 - then you know let's let's give it a size
599:28 - of let's say
599:29 - 60 60.
599:31 - yeah i guess that's that's really cool
599:33 - then again select another ui that is the
599:35 - quit you you quit button all right of
599:38 - course you want to give a quiz button
599:40 - right
599:41 - so so that people can quit from the
599:43 - application right
599:44 - now what you have to do is again click
599:46 - uh
599:47 - click on this rec transform click alt
599:50 - and
599:50 - yeah here you go we have our button
599:53 - aligned
599:55 - right on the bottom
599:57 - left
599:58 - all right now let's see
600:00 - here it looks good now
600:02 - let's just do one thing
600:03 - let's you know
600:05 - shift it
600:06 - on a bit or change the position of it
600:09 - all right and let's make the size 50 50.
600:12 - yeah now now again let's change it to 40
600:16 - 40. yeah this looks this looks really
600:18 - good
600:19 - right
600:20 - so we have created our
600:22 - main menu all right
600:26 - now as we have created our main menu now
600:28 - what you have to do is uh we have to
600:30 - create
600:32 - our arc
600:34 - all right so
600:35 - let's see how to do that
600:37 - first of all as you have created a main
600:39 - menu
600:40 - congratulations and what i want you to
600:42 - do is
600:43 - go to file click on build settings
600:46 - and add this main menu on the top all
600:48 - right and always remember whenever
600:50 - there's
600:51 - let's say there are multiple scenes
600:52 - alright three to four scenes
600:54 - always remember to put the main menu all
600:57 - right to put the main menu on top of
601:00 - every scene all right because uh this
601:02 - would
601:03 - mean the scene in the top all right the
601:05 - scene in the talk will be the main scene
601:07 - all right would be the means in in the
601:09 - sense that it would uh means after
601:12 - building the application
601:14 - the application would start with the
601:16 - scene that is on the top all right so
601:18 - always remember to keep the main menu on
601:20 - the top all right
601:23 - so yeah as our you know our main menu is
601:26 - done now what we can do is we can create
601:28 - another scene uh that would be our
601:31 - ar scene right so right click click on
601:34 - scene and let's name it arc
601:38 - all right and let's open it now i want
601:41 - to enable the directional light so let's
601:44 - do it
601:46 - i'm going to select the common lighting
601:48 - settings i have all right and yeah we
601:51 - are good to go
601:54 - now what you have to do is
601:56 - let me show you first of all uh first of
601:58 - all the very first thing is i want you
602:00 - to create a basic ui
602:03 - the the ui would be containing back
602:05 - button
602:07 - all right so what you have to do is go
602:08 - to canvas
602:11 - in the canvas
602:14 - what you have to do is
602:16 - uh change the constant pixel size to
602:18 - scale with screen size all right and
602:20 - then in there
602:22 - click on ui
602:23 - then add an image
602:25 - all right then select the back button
602:29 - um change the width to 50 50
602:32 - all right
602:33 - and uh let's
602:35 - you know
602:36 - anchor it to the top right side top left
602:40 - right now
602:41 - let's change the position of it let's
602:43 - say 50
602:45 - and minus 50 all right so let's see how
602:47 - it looks
602:49 - now it's uh it's a bit too much so go
602:51 - for 40 and you know minus 40.
602:54 - yeah this looks good
602:57 - all right so this is one of our ui and
602:59 - also add a button component to it okay
603:02 - so i i somehow added another component
603:04 - this is virtual but
603:06 - button behavior and of course i don't
603:07 - want that
603:10 - just to wait let me remove this whole
603:12 - thing
603:14 - okay yeah
603:18 - just uh
603:20 - let me again reconfigure the button okay
603:22 - cool now go go in here and add a button
603:25 - component all right and
603:27 - yeah our button is created and rename
603:29 - this button to
603:31 - back
603:32 - button
603:33 - all right now for uh further all right
603:37 - for further development we have to set
603:39 - up our view for your engine all right so
603:41 - it's fairly simple
603:43 - delete the main camera all right delete
603:45 - the main camera
603:47 - then
603:48 - add a v40 engine ar camera
603:51 - all right and you know drag it and drag
603:54 - it to the top
603:56 - all right now as we have the ar camera
603:58 - we have to you know create a license so
604:02 - what you have to do is click on get
604:03 - basic
604:10 - and in here give
604:13 - a license name or as i want as my app's
604:16 - name is dynapedia i'm going to
604:18 - give it a dynapedia license name all
604:21 - right and
604:22 - simply just
604:24 - you know copy the license key
604:33 - great
604:34 - so now that we have our license key
604:38 - go to ar camera click on open view for
604:40 - your configuration
604:43 - all right and paste it
604:45 - okay so now our license key also set up
604:48 - now one thing uh just give me some time
604:50 - alright i'm going to prepare the markers
604:53 - all right and then i'm going to come
604:55 - back and show you how to also add the
604:57 - markers all right and how to use it in
605:00 - your project
605:01 - all right
605:04 - so now we have
605:06 - downloaded all the markers we needed all
605:08 - right now what you have to do is go to
605:10 - your target manager
605:12 - click on add database
605:15 - then give it give it give the database a
605:17 - name let's say dynopedia
605:20 - db all right so then click on create
605:25 - and it's going to create a database for
605:28 - you
605:29 - so
605:33 - now what you have to do is
605:35 - after opening the database you have to
605:37 - add the targets all right so
605:40 - click on single image all right choose
605:42 - the
605:44 - image file all right
605:46 - so
605:47 - this is not the one just yeah here i got
605:50 - it
605:51 - now this is the marker one all right so
605:54 - let the name be marker one and give it a
605:56 - width of let's say six
605:59 - all right and uh wait it for wait for it
606:01 - to add the target
606:07 - and
606:09 - let's add another target all right
606:15 - okay
606:16 - let's again give it a weight of
606:18 - 6 and
606:20 - add it
606:30 - all right let's add another target all
606:33 - right see all these markers are taken
606:34 - from google all right so you can find
606:36 - them on google only
606:40 - then
606:41 - click on add
606:51 - okay cool so we have our markers all
606:54 - right and all of them are four star
606:56 - markers and that's totally fine anything
606:58 - uh between three to five is okay but
607:00 - less than that
607:02 - don't even like give uh don't even work
607:04 - out with those markers all right and
607:06 - even i would suggest not to go for three
607:09 - star markers also because their tracking
607:10 - is also not up to mark all right so
607:13 - always have markers having four to five
607:15 - stars not less than that now we have to
607:17 - download the database all right uh i'm
607:20 - going to download the database
607:26 - so it's going to take a few minutes and
607:29 - then it would uh start downloading
607:32 - all right
607:33 - so
607:34 - let me save the dynapedia you know
607:36 - package in here
607:38 - and
607:40 - after it's downloaded
607:42 - let's
607:43 - import it
607:46 - all right
607:47 - so
607:50 - here got a window pop-up and uh click on
607:53 - import
607:56 - so now it has started importing our
608:00 - assets
608:02 - means our markers all right and we are
608:04 - good to go now
608:07 - as
608:08 - everything in here alright is is working
608:11 - pretty fine
608:12 - our air can uh ar camera is set up all
608:15 - right now we have to set up our
608:18 - marker so how we how do we do that first
608:20 - of all go out of 2d mode all right
608:23 - go out of 2d mode and uh
608:26 - click on uh there's right click view
608:28 - fourier engine image target all right in
608:31 - the image target
608:33 - click on from database
608:35 - select the database
608:37 - and get one marker all right and i'm
608:39 - going to get
608:40 - the first marker for the first marker of
608:43 - course
608:45 - all right here is our first marker
608:48 - now
608:49 - what i want you to do is click on the
608:50 - image target in here you will be finding
608:52 - an option tracked or extended track
608:54 - click on track
608:56 - all right and let's give it a name
608:58 - marker
609:00 - one or let's uh keep the marker one for
609:04 - the t-rex all right or let's name it
609:06 - t-rex marker
609:08 - all right let's add you know another
609:11 - another marker
609:14 - and uh again
609:17 - let's select from the let's get the
609:20 - marker too all right let's shift it uh
609:23 - in the side a bit all right
609:27 - now
609:28 - name it spinosaurus
609:35 - marker all right
609:38 - now again view fourier engine
609:41 - another image target
609:43 - now
609:44 - name it triceratops
609:48 - all right now select from the database
609:52 - get the database and you know there is
609:54 - our marker
609:56 - 3
609:57 - all right so we also got about so we
609:59 - have our three markers right in here
610:02 - all right okay uh let me uh shift it to
610:05 - tracked only all right oh all right so
610:08 - let's check if everything
610:10 - is set up correctly or not yeah
610:12 - everything is set up perfectly
610:14 - fine
610:15 - now i have the models imported in here
610:18 - alright it is of spinosaurus t-rex and
610:20 - triceratops
610:22 - now what i want you to want to do is
610:24 - i am simply going to
610:27 - add first of all i'm going to add the
610:29 - t-rex model in here all right
610:31 - right in here all right
610:34 - and you know it's uh it's
610:36 - really really big
610:38 - and i'm going to scale it down a bit all
610:40 - right and
610:42 - make it like this
610:44 - all right
610:46 - okay
610:48 - cool
610:52 - so here we go
610:55 - we
610:57 - let's you know let's make him settle
610:59 - down a bit
611:01 - all right
611:02 - okay
611:03 - cool so here our first
611:06 - you know
611:07 - first model for the marker is ready i'm
611:09 - just going to drag and drop it uh
611:10 - instead of the tdx marker
611:13 - all right
611:14 - so our first one is ready uh let's you
611:17 - know let's get the second one that is of
611:19 - the spinosaurus
611:22 - all right ah very cool
611:26 - great one actually
611:29 - let's set up this one too
611:31 - all right
611:36 - if you want you can add rotations but uh
611:39 - for the dinosaurs one i'm going to i'm
611:40 - not going to add the rotation all right
611:42 - i'm not going to add rotations in here
611:45 - all right
611:49 - i was actually trying to get uh animated
611:52 - 3d models for uh for dinosaurs but uh
611:56 - actually didn't uh got any
611:58 - like not in the asset store not on
612:00 - sketchfab
612:02 - even i got some of the animated but the
612:04 - animations weren't working
612:06 - so
612:07 - you know
612:08 - that's why i had to get these
612:10 - now let's again add this one oh
612:13 - this says triceratops
612:16 - all right let's add this buddy in here
612:22 - okay
612:24 - cool
612:26 - so now we also have our triceratops
612:29 - right in here all right okay
612:34 - very cool so now uh let's uh again make
612:37 - it a child of our tri set of marker
612:40 - all right so now
612:43 - our 3d models are set up now you might
612:45 - be thinking oh this is it our third
612:47 - project is done no it's not because i'm
612:50 - going to show you something more
612:52 - what see this is an encyclopedia right
612:55 - there is an er encyclopedia
612:59 - how can we call
613:01 - something an encyclopedia if it doesn't
613:04 - have any information about that
613:07 - particular
613:08 - thing that it is in there
613:11 - right
613:12 - so of course i'm going to add some more
613:15 - things to it all right as there's an ar
613:17 - book this is an ar encyclopedia i'm
613:20 - going to add information too so how
613:22 - would we do that
613:24 - fairly simple you need not to
613:26 - worry first of all go to the tx marker
613:29 - create a canvas
613:31 - yeah right create a canvas
613:34 - so create a canvas all right
613:36 - remove the remove the constant pixel
613:38 - size and change it to scale with screen
613:40 - size all right in here you'll be finding
613:42 - sort order
613:43 - give the sort order all right sort order
613:45 - means it would be
613:47 - means it would keep this particular
613:49 - dinosaur layer means this particular tdx
613:53 - canvas on top of
613:55 - the main canvas in here all right so
613:58 - that's why i give
613:59 - it
614:00 - a sort sort order of one
614:02 - all right so that it doesn't overlaps or
614:05 - something
614:06 - right now uh go to your 2d mode all
614:09 - right
614:10 - go to your 2d mode select the canvas
614:13 - first of all i want to disable this you
614:14 - know this
614:16 - main canvas so that i get the full
614:20 - trx canvas in here now what i want you
614:23 - to do is right click
614:25 - ui
614:26 - image
614:28 - give it a width of you know 60
614:32 - all right give it a weight of
614:34 - 60
614:35 - anchor it down to the you know bottom
614:39 - left
614:40 - and you know change the position to 40
614:42 - and 40
614:43 - all maybe
614:45 - 50 and uh
614:47 - 50 actually let's check if it's aligning
614:50 - with you know this particular canvas
614:54 - let's check this one
614:56 - all right and uh you know select this i
614:58 - button all right this is going to be our
615:00 - information button and i'm i want it's
615:03 - size of this button means i want
615:08 - size of this button to be like this all
615:09 - right so width and height is 50 and 50
615:12 - let's give it
615:13 - 50 and 50
615:15 - all right and let's make it
615:17 - 40
615:18 - and 40.
615:19 - all right very cool all right so yeah
615:24 - one of our canvas is ready
615:26 - now what i want you to do is you have to
615:29 - add uh you know another image that is go
615:32 - to ui
615:33 - image
615:35 - all right
615:36 - in here i have a panel right in here all
615:39 - right
615:40 - and i want let's say let's just scale it
615:42 - up a bit all right
615:44 - and uh
615:46 - let's anchor it down in here and let's
615:49 - reposition it
615:51 - okay
615:54 - all right let's see if any spaces are
615:57 - left or not i don't want any spaces to
615:59 - be left
616:02 - or
616:03 - all
616:08 - right
616:09 - okay cool so now let's see in our canvas
616:12 - all right let's you know
616:15 - let's let's increase the size of of the
616:17 - panel a bit all right
616:20 - now it looks you know
616:22 - good right isn't it let's let's check
616:26 - okay
616:27 - so yeah this this ui works with
616:32 - you know all
616:35 - the basic resolutions we have
616:37 - right
616:39 - now
616:40 - first of all this
616:43 - it's i is a button so i'm going to name
616:45 - it information
616:47 - button all right and uh
616:49 - you know what i'm going to do add a
616:50 - button component to it
616:53 - this image is you know a panel so i'm
616:55 - going to name it
616:57 - panel
616:59 - and all the information alright would be
617:01 - all right all the information would be
617:04 - under this
617:05 - panel so what i'm going to do is right
617:07 - click
617:09 - make sure now all the things i'll be
617:11 - creating all right
617:13 - will be this uh
617:15 - panels child already the text and all
617:16 - that stuff so i'd be creating will be
617:18 - this panel style all right
617:20 - so what you have to do is ui
617:23 - image
617:24 - all right we have an image
617:26 - select the heading that is information
617:28 - heading
617:30 - right
617:31 - now
617:32 - let's resize this thing a bit
617:39 - mm-hmm
617:40 - all right
617:42 - okay
617:44 - cool now
617:46 - again rec transform alt anchor it in
617:49 - here
617:50 - uh reduce you know scale it down a bit
617:54 - okay
617:56 - cool we are good to go now also one more
617:59 - thing we have to add in text in here
618:01 - before adding a text all right first of
618:03 - all let's name the change the name of it
618:06 - i'm going i was going to say name the
618:07 - change of it
618:09 - now we have to add some more button that
618:11 - is play pause and stop button
618:13 - again go to you know image
618:17 - and
618:18 - let's anchor it down as of now all right
618:20 - and let's
618:22 - let's get the button uh size that is the
618:25 - player this will be the play button
618:27 - all right
618:29 - let's you know
618:30 - drag and you know
618:31 - let's change the size of
618:34 - it okay
618:37 - cool so now
618:39 - just wait
618:43 - all right
618:47 - okay let me let me start it from again
618:50 - so again go to you know ui
618:53 - image
618:56 - you know bef
618:57 - let's do all the thing before anchoring
618:59 - it all right
619:01 - let's get the width to be 20 maybe
619:04 - okay cool
619:06 - now
619:08 - anchor it down
619:09 - all right
619:10 - now
619:11 - reposition it
619:13 - so you know it looks
619:15 - good
619:16 - duplicate it all right
619:20 - again duplicate it
619:23 - okay
619:25 - so now it does look good
619:28 - all right
619:29 - make it to the center alright so that it
619:32 - looks okay okay that's that's pretty
619:35 - good
619:36 - change the name to play button
619:40 - change this one's name to pause button
619:43 - all right
619:46 - [Music]
619:47 - just give a moment all right and change
619:50 - this one's name to
619:51 - stop button actually uh i i have the
619:54 - audios all right this would be playing
619:56 - the audios in there
619:58 - so also select all the three buttons uh
620:00 - add uh you know button component in here
620:03 - and
620:05 - we are good to go now oh yeah also i
620:07 - have to change you know the picture of
620:10 - it right so i'm going to do that
620:13 - okay so
620:14 - pause button got the pause icon stop
620:17 - button is going to get the stopper now
620:19 - oh yeah you got it
620:21 - all right
620:22 - it looks good right now let's add a text
620:24 - in here all right so click on ui always
620:27 - use text mesh pro all right
620:29 - use nothing except xmas pro
620:32 - now first of all let's change the text
620:33 - color to black all right
620:36 - and
620:38 - let's
620:40 - resize it all right let's resize it
620:43 - um
620:44 - change the text size to 20
620:46 - and uh
620:47 - first of all we have to create a font
620:49 - asset because we have a different type
620:51 - of font and
620:52 - let me show you one thing this uh
620:57 - text mesh for only except sdf type fonts
621:00 - alright
621:01 - so
621:02 - currently the font i already have a font
621:04 - called comic new
621:05 - all right
621:06 - so this is uh comic new bold so
621:11 - this is a font already but we won't be
621:12 - able to apply it uh let me show you see
621:15 - we are not able to apply it so to apply
621:17 - any font
621:18 - for into text mesh pro it's very simple
621:21 - click on window
621:22 - all right click uh here we'll be finding
621:24 - uh text mesh pro
621:26 - click on font asset creator
621:29 - uh window will be popping up
621:31 - drag and drop this font asset in here
621:33 - all right click on generate font alias
621:36 - all right so it's going to take a few
621:38 - seconds and uh it would be like you know
621:41 - creative create the font asset for you
621:44 - within no time
621:52 - all right and uh click on save
621:59 - so here we got our font asset right in
622:01 - here all right and now what you have to
622:03 - do is click go to the text all right
622:07 - just wait go to the text and uh drag and
622:10 - drop this font asset right in here and
622:12 - see we got
622:14 - our description panel which is
622:15 - description text now i have some text
622:18 - already written in here all right so i'm
622:20 - just going to copy it in here
622:22 - and
622:23 - simply paste it in the panel
622:25 - all right
622:27 - cool
622:28 - now
622:30 - these looks pretty good
622:32 - all right
622:33 - doesn't they
622:34 - and
622:35 - center them all right like this
622:41 - okay cool
622:43 - now as we have got
622:46 - our information panel we have to also
622:49 - code all right code is code means uh
622:53 - i want to click this button all right
622:55 - and enable and disable this particular
622:58 - panel and creating the script is fairly
623:00 - simple what you have to do is go to
623:03 - asset uh create a folder of called
623:06 - scripts
623:07 - all right okay the folder didn't got
623:09 - created alright
623:11 - okay
623:12 - scripts
623:14 - all right after you create this folder
623:16 - scripts all right you have to create a
623:18 - shisha script
623:21 - so now
623:22 - our script is created i'm simply going
623:25 - to open it all right on my visual studio
623:29 - so let's
623:31 - get this thing going in here
623:33 - all right
623:35 - great
623:36 - so first of all
623:38 - let's start coding it
623:40 - see first of all understand the
623:41 - mechanics all right
623:43 - you there are two ways you can do that
623:45 - all right first of all uh let me tell
623:47 - you one way that is the
623:49 - first way would be a very simple way
623:52 - actually both the ways are simple all
623:53 - right
623:54 - so the first way would be uh adding a
623:57 - set active function to it all right
623:59 - set active means uh
624:02 - when you will click this button
624:04 - this panel will be deactivated from the
624:06 - first so set active function would
624:08 - actually activate that and
624:10 - with that all right also
624:14 - disable this button and add another
624:16 - button all right that is activate
624:18 - another button that would be like
624:19 - looking similar like this but would be
624:21 - having a different function that is it
624:23 - would be
624:24 - setting uh it to false alright setting
624:28 - the set active to false and that would
624:30 - make this
624:31 - particular information panel disappear
624:34 - right
624:35 - another way all right
624:38 - this way is uh i prefer to do it this
624:41 - way so what you have to do is first of
624:44 - all create a variable
624:46 - so basically in this winner you would be
624:48 - using the single button only to
624:50 - uh switch on and off
624:52 - the panel all right
624:54 - so this is a little
624:56 - this is
624:57 - less hectic so first of all uh
625:01 - create a boolean variable
625:03 - and uh
625:05 - set it to false all right
625:08 - let me uh increase the size of this
625:12 - editor a bit now
625:15 - create a serialized field all right that
625:18 - is
625:19 - i will tell you what is it so
625:23 - game object
625:25 - in for uh mission
625:28 - panel basically see uh this serialize
625:31 - field uh parameter basically first of
625:33 - all uh understand that this is a private
625:36 - all right this is a private variable and
625:39 - the serialized field helps us to
625:41 - serialize this that is
625:44 - show this private variable in the
625:46 - inspector all right so that's what the
625:48 - serialized field does it it serializes
625:51 - this particular
625:53 - variable even though it's private in the
625:56 - inspector menu all right
625:57 - now
625:58 - click on uh create a function that is
626:00 - public void
626:02 - on toggle
626:05 - or
626:06 - button
626:08 - click
626:09 - or let's say
626:12 - toggle
626:13 - panel
626:18 - all right now
626:20 - this this uh thing is fairly simple
626:23 - click on means write if
626:27 - if this
626:31 - panel is on
626:32 - what you have to do is
626:37 - you have to set
626:40 - active it to false all right you have to
626:43 - disable it and set the
626:45 - is on
626:47 - to false
626:49 - now in the else block
626:55 - just copy this
626:57 - let this two lines
626:59 - and paste it in here and
627:01 - change them to
627:02 - you know true
627:04 - all right
627:07 - okay
627:08 - very great
627:10 - so now
627:15 - let the script compile all right
627:19 - so our script is compiled what you have
627:21 - to do is go to uh go to this you know go
627:24 - to this canvas all right
627:26 - add the script in here all right add the
627:29 - script in here drag and drop this you
627:32 - know information panel in here and
627:34 - you have the information button right so
627:39 - uh in the on click parameter click on
627:42 - the plus button
627:43 - drag and drop this canvas in here and
627:46 - you'll be finding an option called panel
627:48 - toggler and click on toggle panel
627:50 - all right now to test
627:53 - the if to see if this is working all
627:56 - right disable this uh panel
627:59 - and uh
628:00 - let's see
628:01 - if you know if this whole thing is
628:04 - working or not
628:08 - all right so let's see
628:10 - if everything's working fine or not
628:14 - okay so
628:16 - nope this is not the one
628:19 - which one was it
628:32 - just give me a second
628:39 - all right yeah
628:41 - here we go we got our information panel
628:44 - button
628:44 - right we also got our
628:47 - model now click on this
628:49 - okay
628:50 - just wait let me
628:52 - disable the battery saver
628:54 - okay
628:55 - so now it won't
628:57 - turn off by itself all right
629:00 - okay cool so now
629:02 - see our information button is working
629:06 - pretty fine all right and let's see if
629:08 - our main canvas is also work
629:11 - okay so our main canvas is uh the button
629:14 - of main cameras is also being clicked so
629:16 - everything's working fine
629:18 - all right so
629:20 - now
629:23 - now what we have to do is we have to add
629:25 - the audio functionality
629:28 - right
629:28 - now to do that
629:31 - go to your tdx marker create an empty
629:33 - object
629:35 - name the empty object as
629:38 - t-rex
629:39 - audio all right of course this is not
629:41 - the audio of you know a t-rex it is the
629:44 - explanation
629:45 - of
629:46 - who he is right and now in the t-rex
629:49 - audio game object add an audio
629:53 - source
629:56 - all right in the audio source uh what
629:58 - you have to do is go to assets all right
630:00 - uh where have i saved audio here yeah i
630:03 - got it so now in the t-rex audio add
630:06 - this t-rex description audio in here
630:10 - all right and remove this play on awake
630:12 - now as we have our tx audio in here now
630:15 - what i want you to do is
630:17 - go in here
630:18 - uh select the
630:20 - three buttons
630:21 - click in here means the plus icon drag
630:24 - and drop this
630:25 - no drag and drop this particular audio
630:28 - game object and in the audio source
630:32 - select the play option all right now all
630:34 - the three buttons
630:35 - have the play option now we have to
630:37 - change one by one all right i do this
630:39 - because it
630:40 - it is more faster than the usual like
630:43 - just selecting one button and adding
630:45 - them one by one it's much faster now in
630:47 - the pause button
630:48 - uh go to audio source and select the
630:51 - pause
630:52 - and the stop button
630:54 - go to audio source
630:55 - and
630:57 - select the stop
630:58 - all right
631:00 - now let's play play it again
631:02 - and let's see
631:03 - if everything is working fine or not
631:08 - all right
631:11 - just give it a few seconds and
631:13 - would be good to go
631:16 - all right
631:18 - so
631:19 - let's see
631:22 - okay
631:25 - so
631:26 - all right let's see tyrannosaurus is it
631:29 - genius
631:30 - see the pause is also working right
631:32 - dinosaur
631:33 - all right
631:34 - so the pause play and stop is working
631:46 - see
631:48 - this is working pretty fine so our first
631:51 - marker is totally ready now we have to
631:52 - do the same thing for
631:54 - every marker so i'm just going to you
631:56 - know duplicate uh these two game object
631:59 - right and drag and drop it under the
632:01 - spinosaurus all right i'm gonna get
632:04 - going to name it s audio all right it's
632:07 - too much to write its whole name and uh
632:10 - this this canvas let's put it up in
632:12 - there
632:13 - in the canvas all right
632:15 - here's the panel drag and drop it in
632:17 - here
632:18 - and
632:20 - in the buttons all right
632:24 - we already have the s audio all right
632:26 - means the this audio source so we don't
632:28 - have to do anything else
632:30 - also enable this particular button you
632:32 - know and uh
632:34 - in the panel all right in the panel in
632:35 - the text we have to change the text all
632:37 - right in the text
632:39 - i have got one text just
632:42 - let me bring it up in here
632:44 - and
632:48 - let's see let's enable this particular
632:50 - panel and let's see how it looks oh it
632:52 - looks really good
632:54 - right
632:55 - doesn't it and again
632:58 - duplicate it
633:00 - all right and drag and drop in the
633:06 - all right and
633:07 - not uh sorry triceratops not
633:09 - terrance or slicks
633:12 - uh and
633:14 - in the canvas select the panel all right
633:17 - and
633:19 - inside of the panel let's see if the
633:20 - buttons has the right audio or not yeah
633:22 - they do now in the text all right enable
633:25 - the panel
633:27 - and we are going to get
633:29 - the actual
633:31 - all right
633:35 - where is the text here
633:38 - got it
633:39 - now
633:40 - simply go in there and
633:43 - put it in here
633:45 - right
633:46 - okay
633:49 - cool
633:50 - now
633:54 - all right just give a few seconds
634:04 - all right
634:06 - now
634:07 - disable this particular panel right in
634:09 - here
634:10 - all right
634:12 - so now in the t audio change uh the
634:16 - audio to triceratops audio all right and
634:19 - in the
634:21 - spinosaurus rex audio
634:23 - change uh into
634:25 - spinosaurus x
634:27 - sorry spinosaurus not tricks not tricks
634:29 - already i'm really sorry
634:31 - dinosaurs and dinosaur enthusiasts are
634:33 - going to kill me i guess
634:35 - so
634:38 - yeah
634:39 - let's
634:40 - try this out
634:41 - and let's see if everything's working
634:44 - or not
634:46 - all right
634:47 - so give it a few seconds to run
634:50 - all right
634:52 - so
634:53 - let's see
634:54 - so there's our first one all right this
634:55 - is our special dinosaur that is t-rex
634:58 - all right my favorite
635:00 - so let's see if audio or the sword is
635:03 - supported
635:04 - all right so audio and everything is
635:06 - tyrannosaurus is a genus of perfectly
635:19 - stop it all right and if you let's say
635:21 - uh
635:22 - let's say let's do one thing
635:24 - let's say if uh if if you want to stop
635:27 - the audio all right if you want to stop
635:28 - or pause the audio after the marker is
635:31 - you know removed you can simply do that
635:33 - so go to trx marker uh in the on target
635:36 - lost click on add icon
635:38 - um
635:40 - get this audio
635:41 - all right audio source and uh
635:44 - i let's say i want to you know
635:47 - stop the audio all right let's stop the
635:49 - audio all right and again in the
635:51 - spinosaurus marker do the same thing
635:54 - all right
635:55 - do the same thing and uh
635:59 - you can do whatever you want already
636:01 - when you can pause the audio and even if
636:03 - you want you can start playing the audio
636:05 - when the marker is tracked you know it's
636:07 - totally up to you but this is what i'm
636:09 - doing now
636:11 - yeah
636:12 - we are
636:14 - good to go
636:16 - right
636:18 - all righty let's see
636:21 - all right
636:23 - okay
636:24 - so let's check if everything's playing
636:29 - tyrannosaurus is it
636:31 - uh tyrannosaurus
636:36 - so it's working now let's
636:39 - let's select this one
636:41 - all right
636:43 - okay
636:46 - triceratops is an extinct genus of
636:48 - herbivorous genes
636:50 - all right so clay is also working stop
636:52 - is also triceratops is an extinct genus
636:54 - of triceratops isn't it
636:57 - all right good
636:59 - now let's triceratops is an extinct
637:01 - genus of herbivorous chat
637:03 - all right so this one's also working
637:05 - perfectly fine and let's test
637:08 - this one our tries at the top so sorry
637:10 - not the triceratops yeah spinosaurus
637:13 - all right let's
637:28 - all right so
637:30 - our dinosaurs dinosaur encyclopedia is
637:34 - working perfectly fine now the thing
637:36 - that is left is
637:39 - to code the back button
637:41 - right means
637:43 - the scene changing script all right so
637:45 - what i'm going to do is go to script
637:47 - all right
637:49 - uh first of all oh yeah before going to
637:50 - the script
637:52 - go to fi uh build settings all right and
637:54 - add this ar scene in here so currently
637:56 - i'm on this ar scene so i'm just going
637:58 - to click on add open scenes and always
638:00 - remember
638:01 - to keep the main menu on top of every
638:03 - other scene you are putting in the build
638:05 - settings all right
638:07 - so make sure you do that now
638:09 - in the in the scripts
638:11 - create another script called c script
638:13 - called
638:14 - scene
638:16 - controller
638:20 - all right
638:21 - now
638:24 - all right so
638:27 - now
638:28 - let's code our scene controller all
638:30 - right that uh that that is it will be
638:32 - controlling our scene all right
638:35 - that means we'll be we have to navigate
638:37 - through the scenes right so we need that
638:40 - so what we are going to do is
638:42 - using
638:42 - unity engine we have to include that
638:44 - particular library
638:46 - scene management
638:49 - all right
638:54 - so here you go
638:56 - right
638:57 - now
638:59 - what we have to do is we have to create
639:01 - three functions first of all the
639:03 - function would be
639:04 - public void
639:06 - we are going to call it main menu this
639:08 - function would be
639:10 - loading the main menu all right that is
639:12 - scene manager
639:14 - dot
639:16 - load scene and gif
639:18 - give you know give this scene a name
639:21 - that is main menu all right so after you
639:23 - give this scene a name you have to
639:25 - create another function all right public
639:28 - void alright in the public void function
639:30 - you have to create another sorry
639:33 - so now all right
639:34 - we have to create another function
639:36 - alright that would be for loading
639:38 - our ar scene right so public void
639:42 - let's name it ar
639:44 - scene right and again same
639:47 - write the same line in here that is
639:49 - scene manager dot load scene all right
639:51 - and now in here you have to provide the
639:54 - ar scene name
639:55 - see these are the names all right these
639:58 - are the names of the scenes we have all
640:00 - right
640:01 - these are the names of the scenes we
640:02 - have that is the main menu and the ar
640:04 - scene all right so
640:06 - make sure to put uh this c name right in
640:09 - here all right so make sure to do that
640:11 - and another is to quit all right public
640:15 - void
640:16 - quit app
640:18 - quit app
640:20 - all right
640:21 - now scene
640:23 - [Music]
640:24 - manager
640:26 - dot
640:27 - load scene
640:28 - and so not loads in what i'm doing i'm
640:30 - very sorry okay just tweet oh yeah
640:34 - application
640:35 - dot
640:36 - quit
640:38 - all right so that would help our
640:39 - application
640:41 - to quit all right and
640:43 - let's compile the script
640:46 - so now our script is compiled what you
640:49 - have to do is create an empty game
640:50 - object reset its position all right and
640:53 - name this empty game object as scene
640:56 - controller
640:57 - all right because
640:59 - this empty we'll be attaching our scene
641:01 - controller script to this empty game
641:02 - object now what you have to do is go to
641:04 - canvas click on the back button in the
641:06 - back button click on on click click on
641:08 - the plus icon in the scene put the scene
641:11 - controller down there and click on scene
641:13 - controller and
641:16 - after clicking the back scene you should
641:18 - load the main menu all right now we have
641:20 - to do the same thing with our main menu
641:22 - all right and in the meantime we also
641:24 - have to check if everything is
641:26 - responsive or not right so let's check
641:28 - it all right really really great
641:31 - yeah everything's
641:33 - totally fine
641:34 - right
641:36 - now
641:37 - again in here create an empty home
641:39 - object called scene
641:42 - controller
641:44 - reset its transform
641:47 - uh add the
641:49 - you know scene controller script in here
641:52 - in here you will be finding uh
641:54 - okay this i forgot to rename this button
641:57 - let's rename it squared button
641:59 - all right now in the start button
642:01 - alright we have an on click function
642:04 - simply add it in there
642:06 - scene controller
642:08 - and click on this arc because it would
642:10 - be loading about ar scene and again i
642:13 - also forgot to add
642:16 - a button component
642:18 - to this
642:19 - quit button
642:21 - click on the plus sign
642:23 - scene controller
642:25 - scene controller then again
642:27 - quit app
642:29 - all right so now
642:32 - everything's done now let's play this
642:34 - scene and let's see if everything's
642:36 - working fine or not all right and if
642:40 - everything works fine we are done with
642:42 - our application right and
642:44 - you can actually launch this application
642:47 - on play store if you want all right
642:50 - so
642:50 - and
642:51 - actually before launching i would
642:53 - suggest you to add some more information
642:55 - all right now let me tell you one thing
642:58 - this uh this quit button is working all
643:00 - right the squid button is perfectly
643:02 - working fine but uh you can see nothing
643:04 - is happening because currently we are
643:06 - not on our phones so when you you will
643:08 - be in your phone and pressing the squid
643:10 - button
643:12 - it will be working perfectly fine all
643:15 - right and i'm not sure why there's uh
643:19 - here is one button i have to check all
643:21 - right so
643:23 - everything's uh first of all let me
643:25 - check if the function is right right
643:27 - yeah quit uh the function is right so
643:29 - quit button will work perfectly fine now
643:31 - click on the start button all right and
643:33 - let's let's see it load all right
643:36 - cool
643:38 - now
643:39 - let's try out our markers just let me
643:42 - open the markers all right
643:51 - all right
643:54 - okay cool
643:55 - so now
643:57 - everything's you know working perfectly
643:59 - fine asaurus is a genus
644:01 - okay cool so just like this every other
644:04 - marker will work and let's click on the
644:05 - back button yeah cool so we are able to
644:07 - navigate through our scenes right so
644:10 - this is working perfectly fine and uh
644:13 - which button is this one all right also
644:16 - it's uh
644:17 - not inside the canvas so it's not
644:18 - necessary so delete it i guess i have
644:20 - added it by mistake
644:22 - so
644:24 - we are done with this project and
644:27 - hopefully you have learned
644:29 - how to create your own ar books all
644:31 - right how to create your own ar
644:33 - encyclopedias and if you want you can
644:36 - launch this application
644:38 - after developing on play store
644:41 - all right and also add
644:43 - ads to earn money
644:46 - so
644:47 - yeah
644:48 - for this lecture this is it and
644:52 - best of luck for
644:53 - and also create more projects like this
644:56 - all right and in the next module of this
644:58 - course we are going to explore spark
645:00 - here
645:01 - all right so
645:03 - yeah
645:03 - stay tuned
645:08 - in this lecture we are going to learn
645:09 - about sparky studio will be getting an
645:12 - overview of the interface we'll be
645:13 - learning about the spark air ecosystem
645:16 - all right and we'll be doing a lot more
645:18 - things all right but before using sparky
645:20 - studio you need to download it so
645:23 - this is the link all right sparky dot
645:26 - facebook.com
645:28 - studio slash download all right so you
645:31 - just need to click on the download the
645:33 - installer would be uh downloaded on your
645:35 - system and the process is pretty simple
645:38 - you just need to install it all right
645:39 - it's like any other installation process
645:42 - all right so
645:44 - from this this website you have to
645:45 - download it all right now
645:48 - here is the interface all right this is
645:50 - a dashboard all right now
645:53 - with this dashboard we actually manage
645:55 - our projects within uh sparky all right
645:58 - so first of all this is the basic
646:00 - interface
646:01 - here are the templates all right this is
646:04 - the first uh
646:06 - area that you you are going to see after
646:07 - installing and opening the sparky studio
646:10 - here here are three uh weld mints
646:14 - three
646:15 - blank templates all right that is oh one
646:17 - is totally blank that is blank project
646:19 - and there is sharing experience and
646:20 - video calling experience
646:22 - all right and other other than tho these
646:25 - three
646:26 - here are uh
646:28 - some more all right so these are the
646:30 - basically uh templates made by the
646:32 - sparky our team and other creators all
646:34 - right so here you can see there are
646:36 - multiple uh multiple multiple
646:39 - templates that you can get this there is
646:41 - a face decoration there is face mask
646:44 - then there is body tracking
646:47 - then there is neck decoration then there
646:49 - is head tracking all right so
646:52 - these are the templates that you can
646:54 - explore all right there here here is a
646:57 - real scale world object tool that is
646:59 - that it means
647:00 - real world like real world scanning
647:02 - market scanning so
647:04 - you you can
647:06 - like
647:07 - try to explore all these templates
647:08 - alright it would give you a humorous
647:10 - like huge amount of knowledge all right
647:13 - so
647:14 - these are the templates that you can
647:16 - work with now
647:17 - let's say uh after this course you want
647:19 - to explore uh more of spark here all
647:22 - right so spark here has their own
647:25 - platform where they are there are two to
647:27 - three courses on sparky that is
647:28 - fundamentals of spakia then there is uh
647:32 - like a totally free means
647:34 - those are totally free all right then
647:35 - there is advanced sparkier all right so
647:38 - you can
647:39 - find it on
647:41 - on the internet uh it's by facebook only
647:42 - it's totally free you can
647:44 - watch there all right and if you want to
647:46 - learn more advanced ar development all
647:48 - right then i'm also going to launch
647:51 - one course all right uh it's an ex it's
647:54 - called exa01 augmented reality for
647:56 - everyone all right so it's an augmented
647:58 - reality mastery course you can get that
648:01 - course it would be a very low cost
648:02 - course and it would be
648:04 - launching very soon uh at my at my
648:07 - startup uh and turned all right so
648:11 - make sure to
648:12 - subscribe my channel to get the updates
648:14 - about it all right so
648:16 - here are the tutorials that you can get
648:18 - here you can see there are multiple
648:19 - tutorials available about the coding all
648:22 - right about
648:24 - means about creating a glow effect about
648:27 - face tracking alright so you can learn
648:28 - it from that and here are the recent
648:30 - projects alright here are the recent
648:32 - projects that you can uh
648:34 - like if you if you create some projects
648:36 - all right inside of sparky you will get
648:38 - those listed down in here all right and
648:40 - here is uh open option all right so if
648:43 - you if you have a project file then you
648:45 - can open
648:46 - that project file from there all right
648:48 - and here is the creator community option
648:50 - then fordham option and what's new
648:52 - option all right
648:53 - so this is it all right now
648:58 - to create a new project you have to
648:59 - click on blank project all right so we
649:02 - would be choosing the blank project and
649:04 - it would start creating the blank
649:06 - project for us all right
649:11 - so here you can see that our blank
649:13 - project has opened up all right so let's
649:16 - uh get a bit comfortable with the
649:18 - interface all right
649:20 - so the very first thing all right the
649:22 - very first thing you are going to see is
649:24 - there is a person all right here you can
649:26 - see this there is a person who is like
649:27 - rotating its head all right and here is
649:30 - a very small mobile like window all
649:33 - right here is a very small mobile like
649:34 - window that you can uh
649:36 - see seen here so here here is a
649:38 - simulation happening all right this is
649:40 - the person so basically now these are
649:42 - test persons so whenever we create any
649:45 - sort of marker all right whenever we are
649:46 - going to create any sort of marker
649:50 - these uh these are the test persons that
649:52 - would be working with all right so um
649:54 - we'll be testing our markers on these
649:56 - test process all right so this is kind
649:58 - of a small phone you could say alright
650:00 - this kind of a small phone or you can
650:02 - also say
650:03 - this is a testing window just like uh in
650:06 - unity uh you can even dock and undock it
650:09 - all right like click on this unlock
650:10 - option then it would be undocked or
650:12 - simply when it is docking you can drag
650:14 - it drag it down all right and you can
650:16 - keep it anywhere you want all right but
650:18 - i i prefer this
650:20 - one to be on the top
650:21 - all right so that that's where i'm going
650:23 - to keep it now
650:25 - let me let me shorten this window all
650:27 - right let me make the
650:29 - size small now here you can see that we
650:31 - are able to uh see
650:33 - here's a total
650:35 - new scene where uh a camera actually is
650:37 - there means there's this triangle thing
650:39 - is there and here's a film going on all
650:42 - right has a video uh going on so let me
650:45 - tell you what are these so first of all
650:47 - uh in unity all right i introduced you
650:49 - to the scene window right in that scene
650:52 - window we used to add objects we can we
650:54 - could manipulate those objects in there
650:57 - right similarly in spark here
651:01 - there is
651:02 - viewport window all right so basically
651:05 - this viewport window what it does is we
651:08 - can add objects from uh in the in the
651:11 - scene panel and uh manipulate those
651:13 - objects from here all right so that is
651:16 - it and here you can see there's a some
651:18 - kind of like phone like structure this
651:20 - one this one uh this this thing have a
651:22 - phone like structure this is basically a
651:24 - phone all right there's a simulated
651:26 - phone there this it is showing that the
651:27 - phone camera is actually like projecting
651:30 - the
651:31 - filter on top of it all right so this is
651:33 - basically the camera all right
651:36 - so i hope you understand right now this
651:39 - is basically as i told you this is the
651:40 - scene window all right and this one is
651:43 - kind of like the game window in uh
651:46 - unity all right uh so this
651:51 - game window
651:52 - in sparky are two all right so this
651:55 - this is you we use this one for
651:57 - simulating
651:58 - all right now
652:01 - as we uh learned about hierarchy in
652:03 - unity right similarly in sparky also
652:06 - there's another panel this is called
652:08 - scene panel all right so what exactly it
652:10 - does is it contains all the objects that
652:13 - are present in the scene right you can
652:15 - add add new objects in it you can
652:18 - manipulate those objects right from here
652:21 - all right like uh here you can see here
652:24 - is the camera object right in here all
652:26 - right here is the camera object
652:28 - right so this is the hierarchy window
652:30 - from unity all right so try to
652:32 - understand it like this
652:34 - now
652:36 - let's see uh
652:37 - the inspector window off you know
652:40 - sparkier actually in sparky it is called
652:43 - properties window alright but if you
652:44 - want you can even call it call it
652:46 - inspector window all right but it is
652:48 - actually known as properties window so
652:50 - this uh this is also like the unity
652:53 - inspector window all right it also
652:55 - contains all the editable uh properties
652:58 - of a particular object right like here
653:01 - you can see that we can see
653:03 - oh if we click the camera we can see its
653:05 - properties right in here here uh
653:08 - there are multiple options in there
653:10 - these are not editable of course but uh
653:12 - let's say uh let's let's try out this
653:14 - directional light so here you can see
653:16 - that uh this directional light is
653:17 - editable we can decrease and increase
653:20 - the uh
653:21 - means intensity we can change the
653:23 - positions uh we can change the rotations
653:26 - right so we can edit those all right
653:27 - this is kind this is property window
653:29 - just like the inspector window from
653:31 - unity all right now in unity there was
653:33 - also something called uh
653:36 - project window right similarly here goes
653:39 - and uh here is also one project window
653:41 - called assets window all right so this
653:44 - is uh like it is two uh it is under
653:47 - it is basically under the scene panel so
653:50 - you can see it right in here and you can
653:52 - actually
653:53 - drag and drop or import the assets right
653:55 - in here all right
653:57 - now
653:59 - this is for the basic interface all
654:01 - right now let me show you some more
654:03 - things all right like let's say i want
654:06 - to for for for testing my uh
654:09 - filter better like for adjusting the
654:11 - filter what i can do i want to pause
654:13 - this character right so
654:15 - right
654:16 - or in your left alright like in the in
654:18 - the left of
654:19 - the interface you would see a pause
654:21 - button if you click on that pause button
654:23 - the the video the video playback would
654:25 - be paused right
654:28 - now if you again play then it would
654:29 - start playing right now let's say oh i
654:32 - don't want that character all right i
654:33 - want to uh test with
654:36 - many other characters there is all right
654:38 - because uh his face like the shape of
654:41 - his face is different than others right
654:43 - so i want i also want to adjust the 3d
654:46 - model uh to others like to other phase
654:49 - shape right so what i can do is i can
654:52 - simply
654:53 - get another one in here right uh then
654:56 - there's another one then there's another
654:58 - one
654:59 - then
655:00 - there are many presets available all
655:02 - right and if you if you want to try it
655:04 - on yourself then
655:06 - there are like the currently i'm on my
655:09 - laptop so this is the camera i have
655:10 - already called easy camera so i can i
655:13 - can click on that and get the camera
655:15 - view on here right but currently i don't
655:18 - want the camera view so i'm going to
655:19 - keep this person right now all right so
655:23 - this is basically
655:25 - the
655:26 - things that you would be needing as of
655:28 - now i like to create the projects and
655:30 - i'd also be telling you many other
655:31 - things as far as we move right and uh
655:35 - let me let me
655:36 - show you all right how you can get uh
655:39 - free 3d models free 3d means free
655:42 - patches and all those things from in
655:44 - spark are only all right so just uh what
655:47 - you have to do is in in the assets panel
655:49 - you have to click on this ar library all
655:51 - right and a window will appear something
655:54 - like this all right so let me pause this
655:57 - character for a minute all right let me
655:59 - plot pause it alright and
656:02 - let's get this this window all right so
656:04 - here you can see that
656:06 - there are multiple uh multiple options
656:08 - in here there already there are multiple
656:10 - templates available first of all let's
656:11 - say i want a 3d object right i can click
656:14 - on 3d objects or search for any 3d
656:16 - objects i want all right so and pick it
656:18 - from there all right these these 3d
656:20 - models are free to use all right and uh
656:23 - let's say i want uh in any sort of music
656:26 - or sound i can i can get that right i
656:28 - can get that from sparky only then there
656:30 - are patch assets patch are basically
656:32 - there's there's two ways to uh code in
656:36 - sparky one is a visual scripting that is
656:39 - the patch editor where you have to move
656:41 - blocks here and there and connect a one
656:43 - block to another to code and there is
656:44 - that we can code it through scripting
656:47 - all right so
656:49 - there are presets available you can use
656:51 - those presets all right let's say if we
656:52 - want textures we can get those textures
656:55 - from here also if you want
656:56 - uh
656:57 - blocks all right we can also go get
656:59 - those blocks from here if you want the
657:01 - script packages all right we can also
657:04 - get these script packages from here if
657:06 - you want if we want color luts we can
657:08 - even get these from here all right so
657:11 - spark here has a pretty good ecosystem
657:15 - for its creators all right and if you
657:18 - talk about
657:19 - how to launch our own filters all right
657:22 - so to launch our own filters
657:24 - what you or what you would be needing is
657:26 - a facebook account all right and an
657:28 - instagram account
657:30 - to launch your uh
657:32 - ar filters on instagram
657:34 - all right so make sure you have a
657:36 - facebook account at least all right and
657:38 - uh
657:39 - of course uh to upload it on instagram
657:41 - you also need a instagram account right
657:44 - so yeah cool great
657:47 - so this is it for uh this lecture all
657:50 - right see you in the next lecture
657:51 - thank you
657:53 - in this lecture we are going to learn
657:55 - about face tracking
657:56 - face mesh
657:58 - all right and ah and we will also be
658:00 - creating our first filter based on face
658:03 - mesh all right so make sure to watch
658:07 - this video till the end
658:09 - so
658:11 - we are talking about face tracking right
658:13 - what is face tracking all right what
658:16 - exactly it is it all right see face
658:19 - tracking is a concept all right face
658:22 - tracking is an algorithm that actually
658:24 - helps us to track our face right like
658:27 - for example you can see this person
658:29 - right in here all right he is moving his
658:31 - head left and right
658:33 - up and down right if we attach an
658:37 - face tracking algorithm or module what
658:39 - will happen it would it would track this
658:42 - person's face like
658:44 - for example see this person is moving
658:47 - his head upward then also the face
658:49 - tracker will also
658:51 - point upward all right
658:54 - so that's how a face tracker would work
658:56 - it would track the person's face
658:58 - right
658:59 - it would it will it will take all right
659:02 - it would actually
659:03 - take the person's head rotation
659:06 - and
659:08 - movement from the real world and
659:10 - put those values inside of the
659:13 - editor all right so that it can perform
659:15 - other tasks
659:17 - that's
659:18 - that is what a face tracker is all right
659:20 - now adding a face tracker is very simple
659:23 - all right what you have to do is you
659:25 - have to go to the your scene panel in
659:27 - the scene panel there you would be
659:29 - finding a
659:30 - plus button you have to click on the
659:32 - plus button all right and in here in the
659:34 - first option
659:35 - will be there
659:37 - face tracker right now if you are not
659:40 - able to find the face tracker you can
659:41 - simply search it in here that is face
659:44 - tracker
659:45 - and after
659:46 - you do that
659:47 - uh click on the face tracker and click
659:49 - on insert
659:51 - all right
659:53 - so
659:54 - here you can see
659:56 - here you can see the anchors right you
659:58 - are able to see the anchors right
660:00 - the you can see that with the face all
660:02 - right
660:03 - with the rotation and movement of the
660:05 - face the anchors are also moving right
660:09 - so that's how face tracking works all
660:11 - right that is what face tracker does
660:14 - right
660:15 - now
660:17 - as you have learned about phase trackers
660:19 - and spark are now there's left face mesh
660:24 - right to make your see face mesh now is
660:28 - a sort of a layer on your face all right
660:30 - it's it's kind of another another object
660:33 - on your face all right you can
660:34 - understand the face meshes that's like
660:36 - this all right
660:39 - now to add a face mesh click on this
660:41 - face tracker all right then click on add
660:44 - and uh
660:46 - right
660:47 - face mesh and you would find the face
660:49 - mesh all right and click on insert
660:52 - so here you can see
660:54 - that
660:56 - we added our face mesh right it looks
660:58 - like checkers board right so not
661:00 - checkers board but a chess board
661:02 - right
661:03 - so one more thing you have to remember
661:05 - all right that whenever if you want to
661:08 - make like if you are attaching the
661:10 - objects which can totally work with your
661:13 - face tracker all right that is uh use
661:15 - face tracker for tracking the face then
661:17 - make sure all the objects that you are
661:19 - putting in your scene all right
661:21 - to make it a child of the face tracker
661:24 - object all right why
661:27 - because uh
661:28 - here you can see that uh as the person
661:30 - is moving its head this particular face
661:33 - mesh is also moving all right moving and
661:36 - rotating
661:37 - that's how it is working right so that's
661:40 - why i told you to make the objects of
661:43 - like a child of the face tracker only if
661:47 - you want
661:48 - uh to like you know uh make it rotate
661:51 - and move on the
661:53 - player's head movement and rotation
661:54 - right
661:56 - so
661:57 - that's how it all works right now as we
661:59 - have added a face mesh
662:02 - we can also add a material to it all
662:04 - right so what you can do is click on
662:05 - face mesh in here in the properties
662:07 - panel you'll be finding a material
662:09 - section and here you find finding an
662:11 - plus button so click on this plus icon
662:15 - and here you'll be
662:17 - a material would be created in your
662:18 - assets panel and
662:20 - see a material is also added
662:23 - right
662:24 - now
662:25 - if you want you can uh like you know
662:27 - change the color color of the material
662:29 - all right so simply select the material
662:31 - go to its properties and uh
662:33 - change the color all right change the
662:35 - color to whatever you want all right you
662:37 - can keep it red you can keep it you know
662:40 - green you can keep it yellow
662:42 - uh you can keep it blue anything you
662:44 - want all right but for for now i want to
662:46 - keep it uh you know
662:49 - white
662:50 - right
662:51 - so now as we have learned to create our
662:53 - own face tracker and our own face mesh
662:56 - right now what we have we what we can do
662:59 - is we can add textures to it all right
663:01 - now this is a bit tricky part all right
663:03 - if you're familiar with photoshop
663:05 - uh then this would be a bit helpful to
663:08 - you like you helpful means easy to you
663:12 - all right
663:14 - so
663:15 - let me show you
663:17 - go to your browser first all right
663:20 - download these face reference assets all
663:23 - right because these these face reference
663:25 - assets are going to be really really
663:26 - useful to us
663:28 - all right so just uh go to this
663:30 - particular website you can you can
663:31 - simply write on the internet uh sparky
663:34 - or face reference assets all right you
663:36 - would get get them in there now what you
663:38 - can do is you can click on this face
663:40 - reference assets and it would start
663:42 - downloading downloading a zip file after
663:45 - you extract it all right go to the
663:47 - textures folder and you'll be finding
663:49 - two textures all right
663:52 - one is phase feminine and one is face
663:54 - masculine these are basically face
663:56 - reference assets all right to create the
663:58 - textures for our face
664:00 - okay so
664:03 - uh i'm for this for this example i have
664:06 - used means for this tutorial i have used
664:08 - face masculine you can even use face
664:10 - feminine if you want all right now what
664:13 - you have to do is
664:15 - uh open photo p or if you have photoshop
664:17 - in your system you can open that all
664:19 - right i have used photo pages it's like
664:22 - photoshop button online
664:25 - so now what you can do is
664:28 - uh first of all import this face
664:30 - masculine in here all right import this
664:33 - face masculine in here and
664:35 - import your line face texture uh for me
664:37 - it's a line face picture you can use any
664:40 - texture if you want all right now what i
664:43 - did is i pressed ctrl in my
664:46 - you know i pressed control in my
664:49 - keyboard and uh
664:51 - mapped it like this just wait
664:54 - okay here you can see that i uh
664:56 - mapped it
664:57 - to the proportions of
665:01 - the face
665:02 - all right
665:03 - to the proportions of the face of the
665:08 - this particular reference picture all
665:11 - right and here you can see you can like
665:13 - you just have to press ctrl right you
665:15 - just have to press control and
665:18 - edit the transforms alright and you
665:19 - would be good to go and always make sure
665:21 - that these eye holes all right are in
665:24 - place of
665:25 - this reference assets eyes all right so
665:28 - make sure you do that
665:31 - okay and this is it and then what you
665:33 - can do is you can simply like you know
665:35 - uh turn off this background layer and
665:37 - add another transparent layer and you
665:39 - can simply
665:41 - go to file or export as png and
665:45 - your you know your
665:46 - texture would be exported right i have
665:48 - already done that now what you can do is
665:52 - simply drag and drop it uh inside your
665:56 - asset all right that is inside your
665:58 - editor so i'm just going to drag and
665:59 - drop it in here
666:01 - all right
666:05 - so yeah
666:07 - now is it is uh you know uploaded on
666:09 - within
666:10 - the it is uploaded within our
666:14 - spark studio
666:16 - all right now what you can do is
666:20 - sometimes what happens now your uh it
666:22 - would uh start actually not sometimes
666:24 - every time it happens that it would
666:26 - start uh compressing it all right and
666:28 - mine is already compressed it's it was
666:30 - so fast so what you can do is all right
666:33 - it makes uh makes the editor slow
666:35 - alright it makes spark ar slow if for
666:39 - the moment alright for the moment you
666:40 - can uh select it to uh means
666:44 - uh in the ios section make it to none
666:47 - then in the android and older or android
666:49 - also make it to none so it would
666:51 - stop the compression for a moment and
666:54 - when when you whenever you will be
666:55 - publishing a filter that is
666:57 - exporting it and then publishing it
667:00 - it would start the compression it will
667:02 - compress your filter and then you can
667:03 - upload it now always remember to
667:05 - compress your filter before uploading it
667:06 - to sparky sorry uh to instagram or
667:10 - facebook all right so make sure you do
667:11 - that now as we have learned to create
667:14 - our face tracker our face mesh
667:16 - let's add a texture to the face mesh all
667:18 - right this is also very simple we
667:20 - already have our line face which is
667:22 - mapped to the reference image
667:24 - select the material
667:27 - in here you'll be finding a texture
667:28 - section uh click on this image thing and
667:32 - select the texture all right and
667:34 - here you go you got the texture in your
667:39 - spark right so that's how we work with
667:41 - face meshes
667:43 - all right
667:44 - um you can also like uh add uh you know
667:48 - occlusion effect in this phase mesh in
667:50 - the next lecture only we would be
667:52 - learning about occlusion uh because we
667:54 - are we will be implementing our own 3d
667:56 - model in sparky
667:58 - all right but for this lecture this is
668:00 - it and we learned about face tracker we
668:03 - learned about phase meshes and also
668:05 - created our first uh phase filter
668:08 - right
668:08 - so yeah
668:10 - so as you are already aware of
668:14 - spar kr all right and you already know
668:16 - how to create 2d filters with spark air
668:19 - right
668:20 - now it is a very high time to learn how
668:22 - to create 3d filters already that is
668:25 - used 3d models with and with the number
668:27 - of filters all right so
668:29 - the first thing all right what you uh
668:32 - what i want you to do is or click on go
668:34 - to settings
668:36 - that is project properties
668:38 - uh click on change project properties
668:41 - all right
668:44 - here you will see a tab experiences so
668:47 - click on add experience
668:49 - and
668:52 - select this sharing experience and click
668:53 - on
668:54 - insert
668:55 - all right
668:58 - so after you have done that we are good
668:59 - to go with the project
669:01 - now what you have to do is
669:04 - uh add a 3d model the first of all add a
669:07 - 3d model of it
669:09 - all right click on ar library
669:11 - and find for a 3d model you want all
669:14 - right
669:15 - so let's say uh
669:17 - let's get a cap all right let's get a
669:20 - cap
669:22 - it's uh let's get actually a 3d cap
669:24 - right now
669:27 - let's get this pokemon's masters cap
669:30 - right
669:31 - click on import
669:33 - it will start downloading the model all
669:35 - right
669:50 - so it has completed downloading the
669:52 - model now close this window and
669:56 - cool
669:58 - so we are good to go now
670:02 - click on this focal distance or camera
670:05 - alright
670:06 - then
670:08 - click on add that is this plus sign and
670:11 - add a face tracker all right select the
670:13 - face tracker and insert it
670:18 - all right
670:18 - now here you can see that our
670:21 - face tracker is in place the gizmos are
670:23 - working
670:24 - perfectly fine
670:25 - now
670:26 - what i want you to do is click on this
670:28 - default texture environment so not not
670:30 - this one just wait
670:33 - yeah this one material all these
670:35 - textures all right what i want you to is
670:38 - remove the compression all right because
670:40 - that would
670:41 - slow the
670:43 - that would basically
670:45 - slow spark ar
670:47 - for me and i currently don't want that
670:50 - yeah of course when whenever you are
670:51 - publishing all that you will
670:54 - uh when you will publish your
670:57 - filter
670:58 - make sure that uh you compress them all
671:00 - right
671:01 - because uh compressing the filters are
671:04 - really necessary in case of
671:09 - publishing it uh on
671:11 - instagram or facebook all right now what
671:14 - you have to do is uh get this pokemon
671:16 - masters cap
671:17 - that is this 3d model and drag it inside
671:20 - the pokemon face tracker right now you
671:23 - can see it so it's a
671:25 - really really really big
671:27 - now
671:28 - let's scale it down that is give it a
671:29 - 0.2 scale
671:37 - just wait
671:41 - okay cool uh still it big uh let's give
671:44 - it 0.00 let's say 8 point zero eight
671:50 - point zero zero eight all right that's
671:52 - that's too small
671:54 - okay point zero
671:58 - actually zero it i i think by mistake i
672:00 - give 0.8 okay 0.00 sorry 0 8.08
672:06 - okay
672:10 - all right it's it's uh now the size look
672:12 - good but here you can see all right one
672:14 - more thing let's uh
672:17 - remove its uh
672:19 - rotation actually
672:22 - okay not not this one let's give it a
672:26 - rotation like this
672:29 - okay
672:31 - it does
672:32 - have some rotational problems
672:36 - just
672:37 - wait
672:40 - okay
672:42 - minus 90.
672:48 - actually let's
672:50 - uh first of all let's pause the
672:52 - play all right and
672:55 - yeah this this is better now here you
672:58 - can see we can't adjust
673:01 - this cap on the person right like it's
673:04 - it's not being adjusted
673:06 - like it it is not fitting it's just on
673:08 - top of his
673:10 - head and of course we don't want that
673:12 - right we don't want to just just see it
673:14 - can't even go on its own face
673:16 - so
673:18 - now
673:19 - here comes the concept of occlusion
673:21 - all right see occlusion is basically now
673:25 - like in real world when you put uh
673:27 - let's say uh see you have two hands
673:30 - right you have two hands
673:31 - like uh put
673:33 - one hand on top of the other hand right
673:36 - would you be able to see your other hand
673:39 - that is let's say if i
673:41 - take one of my hand all right let's say
673:43 - i take the right hand and put the left
673:46 - hand on top of it so after putting it
673:48 - would i be able to see uh the portion
673:52 - that i covered up with uh
673:54 - my left hand
673:56 - we won't all right that's uh
673:59 - that is what i can say is a occlusion
674:01 - occlusion basically gives a more
674:03 - immersive experience on it to
674:06 - make it easier for you all right let's
674:11 - search for ar occlusion
674:17 - let me uh
674:19 - get some image to make you understand
674:22 - all right
674:29 - okay
674:32 - so
674:34 - all right yeah here we go we got one
674:36 - really good
674:37 - image
674:51 - just give a few seconds
675:08 - so here you can see in this image that
675:10 - first of all uh the first that that is
675:12 - the left side of the image is non occlu
675:15 - doesn't have any occlusion all right and
675:17 - you can see that the pikachu is
675:19 - like
675:20 - on top of uh his
675:23 - legs right and that is not giving us a
675:26 - sense of emotion or also it is not
675:28 - feeling realistic all right
675:31 - but if we look at the second image
675:33 - you would see all right that the pikachu
675:36 - is behind his leg all right it's it's
675:39 - not like overlapping the leg it's behind
675:41 - the leg and that is what occlusion is
675:43 - the person or the car
675:45 - in this in the first case all right this
675:47 - portion doesn't have any occlusion but
675:49 - in the
675:50 - second case the person the person has
675:54 - an occluder all right on on his legs so
675:56 - that's why he's able to hide this
675:58 - particular pikachu all right so
676:02 - i guess uh
676:03 - occlusion the concept of occlusion is
676:05 - clear all right
676:06 - and if you're still confused about that
676:08 - that's totally fine uh you can ask it in
676:11 - the comment section and if even if you
676:13 - want i can make a separate video on
676:16 - explaining occlusion all right
676:19 - now how do we achieve occlusion in
676:23 - sparky right so first of all there's uh
676:26 - there's an object actually called
676:30 - a head occluder all right so what you
676:33 - have to do is uh
676:35 - go to the
676:36 - ar library and search for occluder
676:39 - it's but it's given by spark r only
676:42 - you would see that in the block section
676:44 - that is this second one head occluder
676:47 - click on it all right it's by it's given
676:49 - by spark ar team so click on import free
676:55 - and it will start downloading it and
676:57 - import it after its download
677:01 - cool so we have imported the head
677:03 - occluder
677:05 - now what i want you to do is put this
677:08 - head occluder uh inside
677:12 - this
677:15 - head right
677:16 - means inside this face tracker now you
677:18 - can see that uh the the means some
677:21 - portion of the
677:23 - cap is hidden right and
677:25 - of course this is good we are able to
677:27 - see the occlusion all right now uh
677:30 - we have to adjust the cap
677:33 - right so how would we do that
677:34 - um
677:35 - let's see
677:39 - okay cool
677:42 - so
677:43 - can you see that uh occlusion is
677:45 - perfectly working
677:47 - we are getting the
677:49 - 3d effect we wanted
677:51 - right isn't it
677:52 - so uh
677:54 - occlusion is working perfectly fine now
677:57 - uh
677:58 - you have to adjust
678:00 - the 3d model accordingly all right so
678:02 - that it fits the head
678:05 - so that it fits
678:06 - actually it fits the head and
678:09 - you don't face any uh issues right
678:12 - so that's what i'm currently doing
678:15 - it's a bit tedious process actually but
678:18 - the result you the end result you would
678:20 - be getting is like
678:22 - pretty good
678:26 - just me just let me get this cap
678:28 - straighten up
678:33 - okay cool
678:41 - let's see
678:47 - this seems fine
678:51 - but uh as you can see there's a bit gap
678:53 - already a bit of gap on on the head now
678:58 - just adjust it all right now uh
679:00 - this looks good this looks pretty good
679:03 - then it was previously so you have to
679:05 - play with all the 3d models all right
679:07 - all the occlusion effects to
679:09 - get uh
679:11 - to the point you want right to get to
679:13 - the final result you want so it's a bit
679:15 - tedious process but after you adjust it
679:17 - a bit the outcomes looks really really
679:20 - great all right so uh
679:22 - yeah
679:28 - hey guys
679:29 - so this is our last lecture all right in
679:31 - this lecture we are going to create a
679:33 - very simple project
679:35 - after we have learnt uh spark ar all
679:38 - right with the basic skills we learned
679:41 - about spark air all right see i i'm
679:43 - going to admit that i haven't taught
679:46 - uh sparky in much depth all right
679:49 - because i'm going to bring out another
679:52 - series all right
679:53 - totally on sparky are alright which will
679:55 - be covering sparky are in depth the
679:59 - main idea already the main motivation
680:01 - behind putting sparky are the basics of
680:04 - sparky in the syllabus
680:06 - the reason behind it was that i wanted i
680:09 - wanted you guys to get excited about
680:11 - augmented reality all right uh and
680:15 - i know many of you are active active on
680:18 - instagram all right i know many of you
680:20 - and
680:21 - you guys uh enjoy instagram so
680:24 - why not make
680:26 - uh one filter for instagram right so
680:30 - i i i was thinking that uh it's going to
680:33 - excite you and uh i guess it did so
680:38 - let's jump into the video and develop
680:41 - our last project right and uh
680:44 - i promise you all right one thing i'm
680:46 - going to promise you that more series
680:48 - like this all right
680:49 - more better than this are going to come
680:51 - in near future all i'm improving myself
680:55 - every day all right i'm going to bring
680:57 - out videos on virtual reality i'm going
680:59 - to bring videos on augmented and mixed
681:01 - reality all right so make sure to
681:03 - subscribe this channel all right so make
681:06 - sure to subscribe this channel so you
681:07 - don't miss any videos all right and uh
681:12 - very soon i'm going to launch all right
681:15 - uh most privately in the month of april
681:17 - i'm going to launch a course called
681:19 - exhaust 001 all right it would be a paid
681:22 - course all right so the course would be
681:25 - very affordable all right for so that
681:28 - everyone can
681:29 - learn from that course and uh
681:33 - the course will be launching at my
681:34 - startup that is anton all right so if
681:37 - you want you can and you guys can enroll
681:39 - in that course and uh i'm going to
681:41 - announce that i have announced that uh
681:44 - course in this video so make sure all
681:46 - right if you want to learn more in depth
681:49 - all right i have covered
681:51 - very very in-depth
681:53 - concepts of augmented virtual and mixed
681:55 - reality in that
681:57 - course all right there are concepts that
682:00 - no one going to teach you in any of the
682:02 - course
682:03 - around
682:04 - all right no one is going to teach you
682:06 - those concepts i have included those
682:08 - concepts because they are very important
682:10 - all right i have included maths required
682:14 - for
682:14 - uh ar and vr all right that is 3d maths
682:18 - so
682:19 - make sure all right to
682:23 - visit that course at least once all
682:25 - right and if you feel like joining the
682:27 - course if you want to pursue uh
682:29 - augmented reality
682:31 - makes reality as a career then you can
682:33 - surely join that course we are going to
682:35 - develop multiple projects we are going
682:37 - to
682:38 - get in depth of the sdks all right we
682:40 - are going to get in-depth knowledge of
682:42 - those sdks like viewphorias or ar code
682:45 - that is a foundation
682:47 - then of course sparky r we are going to
682:50 - going to go into the
682:52 - depth of sparky
682:54 - we'll be exploring how to code in spark
682:56 - and all those very important things all
682:59 - right so if you want you can enroll in
683:00 - that course
683:02 - so
683:03 - also one more thing all right
683:06 - join our discord server right join
683:08 - anton's discord server there are many
683:10 - experts in there all right who can help
683:12 - you i am in there all right so if you
683:14 - have any doubt a near future you can ask
683:17 - me in there all right and also you can
683:20 - connect with me on linkedin alright you
683:22 - can follow me on instagram so
683:25 - here all the links will be down below in
683:27 - the description and all the materials
683:29 - all right that i have used during the
683:30 - course all the project assets so
683:33 - all those things will be available uh on
683:35 - the website all right that is ar course
683:39 - dot or netify dot app all right it would
683:41 - be available in
683:43 - the website so you can get all the
683:44 - assets from there all right and the
683:46 - spark air assets you can get from the
683:48 - air library only all right
683:51 - so
683:52 - yeah without any further ado
683:55 - let's get going
683:56 - right so the very first thing is uh
683:58 - click on this project properties click
684:01 - on change project properties
684:03 - all right make sure you do that and in
684:05 - that click on add experience all right
684:07 - and
684:08 - uh insert the sharing experience all
684:12 - right that would actually help us share
684:14 - these assets on our mobile and all those
684:17 - like on our instagram
684:20 - uh
684:20 - and all those portions right
684:23 - so now the very first thing is i want
684:26 - you to add a head tracker or sorry face
684:28 - tracker all right so
684:30 - click on this plus icon all right
684:33 - and
684:34 - click on this face track and click on
684:35 - insert all right so here you can see our
684:38 - anchor has appeared and that anchor is
684:41 - moving with the face
684:43 - now
684:44 - i want you to add some assets all right
684:46 - i want you to add some asset the very
684:48 - first asset is
684:50 - go to the blocks all right i guess it
684:52 - was in the blocks on the right i don't
684:55 - exactly remember
684:56 - actually let's let's search for it
684:59 - head occluder
685:02 - all right oh uh okay yeah
685:04 - here we got it all right so make sure to
685:06 - get the hair document that is provided
685:08 - by the sparky assets only all right and
685:11 - uh click on import it will down it will
685:14 - start downloading it
685:16 - all right and after it's downloaded
685:18 - click on done and
685:20 - you know what to do you just
685:23 - place this head occluder inside of
685:26 - the face tracker
685:28 - all right so here we got our head
685:30 - occluder now we have to add some more
685:32 - acid that is
685:34 - plus click on this plus icon then click
685:36 - on search ar library
685:38 - all right and here we'll be adding our
685:42 - glasses that is
685:44 - search for steam punk
685:47 - glasses
685:48 - all right
685:49 - so
685:51 - here you will be getting this
685:53 - particular glass so i'm just going to
685:55 - import it
685:56 - all right so it's going to take some
685:58 - amount of time to download and import
686:00 - the model uh model till then all right
686:03 - make sure uh you subscribe the channel
686:06 - alright make sure you subscribe the
686:07 - channel for more
686:08 - up uh
686:10 - videos all right on augmented virtual
686:12 - and mixed reality if you want to make a
686:14 - career in
686:15 - in this domain and i'm going to i'm sure
686:18 - you're going to like
686:19 - how this domain is like
686:22 - i love this domain for
686:24 - truly like
686:25 - this is one of my favorite domain in
686:27 - computer science
686:30 - so just wait for a few seconds and it
686:32 - would be downloaded
686:34 - so now our
686:36 - asset is
686:38 - loaded right now the very first thing i
686:40 - want you to do is because this thing
686:42 - will make our you know sparky are slow
686:45 - all right
686:46 - so
686:47 - what i want you to do is go in there all
686:49 - right select all the assets
686:51 - right in here
686:52 - and uh
686:55 - make sure that the compression is set to
686:57 - none as of now all right
687:00 - why see here you can see the size is
687:02 - really big all right and of course uh
687:05 - spark uh when you'll be launching this
687:07 - filter spark kr won't be accepting it so
687:10 - that's why
687:11 - you have to compress this filter after
687:14 - you are done with all the you know
687:17 - uh done with all the spark means
687:20 - development of your filter all right uh
687:22 - i always do this so it like i
687:27 - compress these all the materials after
687:29 - the development is done because that
687:31 - saves a lot of time for me uh like it
687:33 - doesn't interrupts my development all
687:36 - right the development of the filters
687:38 - right now what you have to do is fairly
687:40 - simple
687:42 - drag and drop this object all right make
687:44 - it a child of the face tracker
687:48 - so here you can see it's you know really
687:50 - big
687:51 - right
687:52 - so
687:53 - it's time for us to
687:56 - make it small
687:59 - oh okay
688:01 - first of all you know he's moving really
688:04 - fast so i of course don't want that so
688:06 - now what i'm going to do is i'm going to
688:08 - you know
688:09 - all right okay
688:11 - big mistake now
688:14 - all right okay cool
688:17 - very cool now
688:19 - uh you have to adjust this you know
688:21 - adjust
688:23 - this to his face
688:25 - right now let's see
688:29 - uh-huh
688:31 - yeah this this looks pretty good
688:35 - yeah this this definitely looks so good
688:38 - let's uh
688:40 - all right
688:42 - okay see we can see his eyes also so now
688:47 - this
688:48 - glasses are looking very good and we
688:50 - actually have you know
688:52 - set up means perfectly set up written
688:55 - there
688:56 - now
688:57 - what i want you to do is add another
689:00 - asset that is going to be
689:02 - you know
689:04 - a hat
689:05 - right or a cap maybe
689:07 - so
689:09 - add any asset you want all right
689:14 - so
689:15 - let's go for this one
689:18 - this seems a nice fit for this
689:21 - head right means for this uh
689:24 - what can i say this particular glass not
689:27 - head
689:28 - so
689:29 - just wait for it to download all right
689:31 - and
689:32 - cool we got it
689:34 - now simply drag and drop it in here
689:36 - all right
689:37 - make it a child of our favorite face
689:40 - tracker
689:41 - and
689:42 - and now you know what to do
689:45 - scale it down
689:46 - all right
689:49 - scale it down
689:51 - cool
689:53 - now move it a bit so that you know it
689:56 - gets adjusted on
690:02 - okay
690:04 - let's see now
690:06 - yeah this looks good
690:08 - doesn't it
690:09 - yeah it definitely looks good
690:11 - now um
690:13 - just give me a few seconds i guess
690:16 - all right so i need to make it a bit
690:19 - more bigger so that you know it this cap
690:22 - fits this particular occluder face
690:25 - all right
690:26 - so
690:28 - let's see now
690:31 - okay this looks this looks very good
690:33 - right doesn't it
690:36 - all right now let's see all right
690:39 - let's see
690:40 - if
690:42 - everything's working fine or not
690:45 - all right
690:47 - just okay it's compressing
690:50 - so i'm just going to you know
690:53 - as of now remove the whole compression
690:56 - thingy
690:58 - of course it's this thing is of
691:01 - 6 mb and that is of you know
691:05 - four or four i guess it was a 4mb right
691:08 - so
691:09 - okay it's of 7 mb guaranteed so means
691:12 - this one is of 7 mb so it's around 10 to
691:15 - 12 mb right so of course sparky isn't
691:17 - going to accept this particular
691:21 - you know this
691:23 - particular model so the to fix that
691:25 - problem is to compress all right to let
691:28 - spark here compress
691:31 - these particular you know
691:34 - textures and models and after that you
691:36 - can simply publish it right and let's
691:39 - try this out and uh on myself all right
691:41 - let's see
691:42 - if it's
691:44 - if it's working or not
691:47 - all right just let me you know
691:54 - all right
691:56 - all right
692:00 - all right it's i guess because of the
692:02 - background light it's not able to track
692:04 - my head perfectly
692:06 - but that's okay it's uh it's working
692:09 - all right okay cool cool cool
692:17 - all right
692:18 - cool
692:20 - so now if you want to publish it what
692:22 - you have to do is you have to click on
692:25 - this publish button
692:27 - all right
692:31 - then
692:32 - you know click on this publish new
692:34 - effect all right and currently the text
692:37 - you can see the textures are being
692:38 - compressed and after the compression
692:40 - completes all right
692:42 - here an option you are finding that is
692:44 - called export all right you have to
692:46 - export this particular
692:49 - file into one file the the extension
692:51 - view dot ar export after it is exported
692:54 - all right you have to go to a dashboard
692:56 - all right let me show you the dashboard
692:59 - just give me a few seconds let me pause
693:01 - the simulation
693:04 - so this is the dashboard you can simply
693:07 - go in there facebook.com
693:10 - hub slash dashboard so these are the two
693:13 - filters i made already uh this one was
693:15 - like
693:16 - a long time ago all right i had some
693:19 - other filters also but i deleted them
693:21 - uh so they are not here as of now so
693:24 - these two are there but uh this
693:26 - javascript for dev doesn't really work
693:28 - because i haven't uh updated as of now
693:31 - because i i guess it's been almost one
693:33 - year this was my very first filter all
693:35 - right and this
693:36 - and this this was the one i recently
693:38 - made this was a very old one like i
693:41 - haven't updated since i guess it's been
693:43 - more than one year yeah
693:44 - so
693:46 - i had other filters too so i removed
693:48 - them so i'm going to like i'm currently
693:51 - working on creating a whole new set of
693:53 - portfolio
693:54 - of sparky and
693:56 - ar applications so yeah that's why i
693:58 - removed the previous ones
694:00 - right so now what you have to do is
694:02 - click on
694:03 - you know
694:04 - after you are on the hub you have to
694:06 - click on publish effect all right and
694:09 - a new window will appear
694:11 - alright
694:13 - so just give it a few moments all right
694:16 - just give it a few seconds and
694:19 - it will open the window for you
694:22 - all right
694:23 - see
694:25 - make sure you export the
694:27 - you know the
694:29 - filter asset all right because without
694:31 - that you won't be able to publish your
694:33 - filter
694:34 - all right
694:38 - okay cool see first of all uh
694:41 - you have to give a name to your filter
694:44 - all right so you can give any name to a
694:46 - filter if you are uh
694:48 - going to upload the filter that i showed
694:50 - you in the
694:51 - project what you can do is you can i
694:54 - would like to name it weird uh
694:56 - uncle maybe
694:58 - i'm not sure i'm not really good at
695:00 - naming all right i'm i might name it uh
695:03 - weird uncle
695:05 - all right
695:08 - i might name it you weird uncle you can
695:10 - you can name it anything you want right
695:13 - after that when you uh after exporting
695:16 - all that you will be getting a file.ar
695:17 - export file all right simply drag and
695:19 - drop that file in here and make sure the
695:21 - file is
695:23 - less than 40 mb all right the size of
695:25 - the file is less than 40 mb and i would
695:28 - suggest you to choose all platforms or
695:30 - if you just want to like you know upload
695:32 - the filter only on
695:35 - instagram you can disable the facebook
695:37 - or messenger and all the things from
695:39 - here all right but currently i wanted to
695:41 - publish it on all platforms the owner is
695:44 - priyanja mata charity right this is the
695:45 - publisher that is
695:47 - the publisher is on my instagram account
695:50 - here the categories you can select the
695:52 - categories all right like it
695:55 - what kind of uh is it it can uh it is of
695:58 - sci-fi and fantasy of course it looks
696:00 - like something from fantasy right it can
696:03 - be of selfies
696:04 - all right so
696:06 - and also you can like
696:09 - select the weird and scary because
696:11 - weird is in its name only right and
696:13 - after that you uh
696:15 - for you know
696:16 - for enhancing the search you you have to
696:19 - add some
696:20 - you should actually add some
696:22 - keywords in there all right and uh
696:25 - also one thing
696:27 - what you have to do is you have to
696:28 - record all right you have to record the
696:30 - filter
696:32 - all right you have to record the filter
696:34 - on your phone
696:36 - uh and upload the
696:38 - uh
696:38 - means
696:40 - the video in here all right and up after
696:43 - that you can use the
696:44 - video thumbnail all right and
696:47 - if you if if you have collaborated with
696:49 - some other people also during the
696:51 - development of the filter you can add
696:53 - them as a collaborator in here and
696:55 - there are two options that is
696:58 - as soon as possible and as uh as set
697:01 - time and date so you can do any of this
697:04 - all right as soon as possible means uh i
697:06 - generally do as soon as possible the
697:07 - reason behind it is it gets uh like it
697:10 - takes around three to four hours or i
697:11 - think it may be even less than that they
697:14 - publish that filter instantly so that is
697:17 - one way and otherwise you can simply set
697:19 - a particular date and time when you want
697:22 - your filter to be published alright and
697:23 - they don't take a lot of time to verify
697:25 - the filter all right and then click on
697:27 - submit and
697:29 - your filter will be out for review and
697:31 - after it is reviewed
697:33 - if everything success if everything is
697:35 - successful
697:37 - you will be able
697:38 - to you know
697:41 - user means distributor filters on all
697:43 - the platforms right and one more thing
697:45 - while recording the video make sure the
697:46 - video of uh
697:48 - you are recording
697:50 - the video of yourself only because uh
697:52 - spark
697:53 - spark has a policy of not using their
697:56 - you know their presets means you can't
697:58 - use these presets all right the presets
698:00 - like this uncle uh is
698:04 - you
698:05 - you can't record this uncle using your
698:08 - filter right you can
698:09 - you can't record any of them any of the
698:11 - filters in here to record it right so
698:15 - you have to record all the assets by
698:17 - yourself
698:18 - right so you have to record the video by
698:21 - yourself all right so make sure you do
698:22 - that and
698:24 - great and also one more thing don't use
698:26 - face all right your face as uh you know
698:29 - as the icon of our logo of this
698:31 - particular filter all right uh make sure
698:34 - to create a logo or specific for this
698:36 - filter uh any you know in your
698:40 - in your photoshop in canva or any
698:42 - platform you prefer all right so yeah
698:44 - that's it for this video and also make
698:46 - sure all right you subscribe this
698:48 - channel alright join our discord server
698:50 - that is our antenna community
698:52 - all right and
698:54 - yeah
698:55 - thank you
698:58 - see you in the next videos

Cleaned transcript:

in this course you are going to learn about augmented reality from both a theoretical and practical perspective this course is for absolute beginners and you will learn the fundamentals along with ar development with unity csharp and other tools hello everyone and welcome to this course of augmented reality this course teaches you the theoretical and practical prospects of augmented reality from the very basics to a level where one can develop any augmented reality application they want after this course you'll be able to develop your own augmented reality applications and filters so this is about the course now let's know a little bit about me so i am priyanshi bhattacharjee i have worked with multiple startups as an exar developer and have taught over 200 students about extended reality at different colleges and universities i also run a youtube channel called coded reality where i make content on augmented reality virtual reality and mixed reality so now let's you know discuss about the syllabus of the our augmented reality course so we will start by understanding the fundamental concepts of augmented reality virtual reality and mixed reality and at the end of our first module we're getting an idea about the market size and growth of extended reality over the years in module 2 we will start to learn about a game engine called unity3d which we'll be using to design and develop our augmented reality applications then in module 3 we'll be starting with a programming language c that will be using to code our augmented reality applications in which we'll be learning about the basics of programming with csharp and many other fundamental concepts then in module 4 we will start with developing our ar applications we learn about marketbased ar in depth including its architecture and how markerbased ar really works then we'll be learning about the sdks and start developing applications with an ar sdk called view fourier engine after the completion of this module we will be moving forward with module 5 in which we'll be developing three ar application which includes ar card customizer air business card and ar encyclopedia after we learned to develop ar applications we'll move on to module 6 which is a bonus section where we will be learning to develop our own ar filters for instagram and facebook and then in module 7 which is also a bonus module we will end this course by creating our very own 3d ar filter here i present to you some of the ar applications and filters we will be building throughout the course so this is an ar filter which will be building and this is an ar application which we will be building all right this is an ar encyclopedia app but these are not only the one which we will be building during the course we'll be developing two more applications like ar car customizer and another one is ar business card so who can uh follow this course this course is made for beginners so you don't need any working knowledge of augmented reality to follow this course i'll be teaching you everything from the very basics so if you don't know about augmented reality don't worry you will be learning to develop augmented reality applications from scratch you can get more detailed information about the course from the website www.ar course.netlife.app thank you hello folks welcome to this lecture this is the first lecture of our course uh augmented reality for everyone in this course we are going to get an idea of uh what exactly is extended reality what comes under the hood of extended reality that is we are going to learn about augmented reality virtual reality mixed reality we are going to learn about the mixed reality continuum all right then uh we will end this part of the lecture by uh understanding the growth of you know the growth of extended reality over the years and what we are projecting by the year 2025 all right so without any further ado let's uh understand all right see uh extended reality now try to understand extended reality in this way it is the extension all right it is the extension of our current reality all right you can say that it is the a virtual all right it is a virtual extension of our current reality all right you can understand extended reality uh like this all right there isn't any specific all right there isn't any specific definition that would you know uh do justice to this uh whole domain all right but how i like to explain extended reality is it is the extension of our current reality or like that and it is the virtual extension of it is the virtual extension of our current clearance you can say extended reality is the hood all right means it is the roof and that roof has three children all right those three children are named as augmented reality virtual reality and mixed reality all right so extended reality is the main hood and it contains three other domains augmented reality virtual reality and mixed reality all right extended reality is the parent domain all right now as we have understood what exactly uh is extended reality right what are the subdomains of extended reality let's you know let's understand what is augmented reality all right you see you might have already you might have experienced augmented reality in your life but you it might happen that you didn't knew that it was augmented reality like you know when you used to play uh pokemon go when i i guess it released in 2016 at that point of time i i was very excited to play that game all right just because i could uh you know the spawn the pokemon all right i could bring the pokemon into the real world all right it had a ar feature that could you know by pressing the ar camera we could bring the pokemon into our real world on it i was very excited about that feature all uh the reason why i didn't uh was i wasn't able to play the game because you know uh i wasn't able to roam around for free like it had gps enabled right so i the only reason why i played the game was because of its ar feature and at that point of time i didn't know what exactly augmented reality was i didn't even know how this thing works all right at that point of time i just started with programming all right so uh we have we all have used augmented reality at some point in our life and didn't know exactly what it was right so one example you already got all right the one with pokemon go now people used to think uh that pokemon go is one of the biggest big breakthrough in augmented reality but it is not the truth is this because see if i if you look in after this course alright after this course if you look into that now the creating the mechanism all right that is the pokeball throwing mechanism to the uh pokemon it uh that mechanism is very simple to make all right that mechanism is very simple to develop it's just we are throwing it through a projectile so uh understand it like this okay basically augmented reality is nothing augmented reality is nothing but you know uh bringing all right that is uh augmenting or you know putting the digital objects all right in in our case the digital objects like uh in pokemon go pikachu is a digital object right so we are taking the digital object all right and placing it into our real world that is what augmented reality is how we are placing it we are placing it through our device all right and uh don't worry we are going to understand all right how all this thing works all right how augmented reality actually works right how what is the architecture in our future videos but for now understand it like this way that we augmented reality is basically the augmentation or you can say the placement of digital object in real world like for example take your favorite cartoon all right for uh a long time back uh my favorite cartoon cartoon was doremon all right i used to watch it like all day i love that cartoon when i was like in class third or fourth so at that time uh if i knew about augmented reality i would have surely tried that he uh i would have tried augmenting dorem on into into my room alright i would have tried that so just think of it this way you are actually bringing your favorite digital uh character all right into your real world so that is what augmented reality is that is basically what augmented reality is all right it is basically the placement of data object into the real world like all right and now as i have told you as i have told you now you you might know all right you you right now you are aware of what exact uh how you know pokemon go uses augmented reality right now what i want you to do is after finishing this lecture install that game and try it out try it out by yourself see how exactly the ar feature is working all right it would be really fun believe me now there are uh mainly there are many majorly two types of augmented reality marker based augmented reality marker less augmented reality all right in markerless there are four other types of augmented reality that is superimposition location based projection and outlining all right don't worry i'm going to uh make you understand what exactly are these all right so let's start with marker based see the meaning of this already the meaning of marker based is in its name only marker based ar means the augment that or the augmented reality feature works only if there is a marker all right only if it there is a marker to help augment the object all right that is what augment marker based augmented reality is basically now this type of ar basically works on the concept of tracking and recognition all right it first tracks the marker means it first recognizes the marker and then tracks it tracks it all the way long all right so that is how this marker based ar work all right basically in this type of ar now you would be you will be needing all right you will be needing a marker to augment you would be needing a marker uh to help augment uh the digital object in the into the world all right like like in here all right like in this you can see that this uh lego batman all right or you can save this minecraft blocked batman all right it's being augmented this uh this particular minecraft shaped batman is being uh me what can i say is being augmented on top of uh a marker all right here you can see it is being augmented on top of a marker so this is what markerbased augmented reality is to augment this kind of uh to augment digital object we would be needing a marker all right so that is what markerbased augmented reality is all right and in this course we will be developing markerbased ar all right so if you're not clear with the concept right now that's totally fine all right uh you you would be when you will be developing uh the markerbased app by yourself you'll be very clear that how exactly that those things work all right but for now in simple words uh marketbased ar is something all right that would be needing all right in which we will be will be needing it is mandatory to have a marker all right it is mandatory to have a marker to augment the digital object on top of it or or else you won't be able to you know or else you won't be able to augment it all right so that is what marker based augmented reality is all right now uh pokemon go is not an example of marker based augmented reality all right i would tell you uh what example is it for all right now let's understand what is uh markle sayer all right now as you have understood about marker based er martin luther is the total opposite alright the difference between them is all right the difference between them is marker based ar needs marker all right that is it needs some you know point or you can say some something to all right it needs something to augment all right it needs and that thing is a marker so market based augmented reality needs a marker to augment but markless ar doesn't now there are some algorithms all right like simultaneous localization and mapping is an algorithm that ah is used all right that is used to map the whole you know the whole environment around us and then place the objects in there all right so markerless ar doesn't needs all right markless ar doesn't need any sort of marker what it does it will scan the uh let's say if i'm trying to augment uh some object in my room what will it do it will scan the surface it will scan the walls all right it would uh create you can say it it creates a virtual you know visualization of itself and then you know it will place all right it will place the object right in there all right so it will first scan the room alright it will first scan the root after scanning it will place the object all right now how it will scan there is an algorithm it's a it's a very widely used algorithm it is also used in robotics but it is also used in virtual reality augmented reality and mutuality so it is known as slam that is simultaneous localization and mapping all right so that's how we um you know build marketless ar features all right so markless air is is very simple it will this ar will you know simply detect your room or means the plane the vertical and horizontal surfaces of your room all right that is the planes and perform the augmented augmentation on those particular planes of those objects all right means it will augment the digital objects on on top of those planes that your ar have has detected right now for example in this you can see this ikea place app all right this is the demo of ikea place basically this is a very famous you know uh furniture app that you know makes use of marketless augmented reality to help you decorate your room all right like if i let's say if i want to buy a sofa all right like you can see it in here what i'm doing is i'm installing the ikea place app i'm searching for some sofa in there i like that sofa very much but i don't know will uh that sofa will you know fit my home or not fit my in the sense it will look good in my room or not something like that all right now what i can do is i can make use of a marketless augmented reality scan my room and then place the object in there all right and then uh through my mobile i can see that if uh the sofa is adjusting at my place or not all right and based on that i can buy the sofa so that is how mark that is what markle is saying all right now there are multiple use cases of markle is here all right and uh decoration all right it means this putting furnitures and all this is one all right is one industry focused all right uh it is uh of in interior design is another industry all right in where mixed reality all right and where mixed reality and augmented reality are are widely used all right like for decorate decorating the homes and all those things all right so hi i hope market based and marketless ar is clear so basically marker based ar is nothing marker based uh ar needs a marker to perform the augmentation of for digital objects into on top of the marker whereas markless air doesn't doesn't need any marker all right what it will do it will scan the surface and then augment the digital objects on top of the surface all right so that is what that is the basic difference and that is what they do all right now let's get into the concept of superimposition based ar all right see superimposition based augmented reality all right is basically a technique that you know uses object recognition now in this diagram all right in this diagram you can see the there is a person's hand all right there is a person's hand and on top of that hand we what we are what this app is doing is you know displaying displaying a skeleton of the hand on top of the person's hand alright so that is what superimposition based ar is it superimposes all right it's super imposes that means it put all right it puts and digital object on top of a real object all right and that works with the help of object recognition all right so that is what uh superimposition based ar is it's very simple all right it's it's very simple now all right see what is happening in here basically with this photo all right you can see that we are able to you know augment a skeleton skeleton of hand on top of another person's hand alright so what is happening uh the algorithm all right that is the ar app is recognizing the hand then putting all right or you can say then uh superimposing all right superimposing the skeleton on top of that hand all right that is what it is doing that is what superimposition based ar is all right very simple all right now these type of ayana is very helpful all right in medical industry all right like you can say you can uh superimpose an xray all right on a patient's body and look into it real time in 3d so how cool that would be and how efficient that would be right that would make the doctor's job more easier right so that is how we use superimposition based ar all right and superimposition based ar are used in you know in many different ways so you can do your research on that all right and even if you if you like you can uh try developing something with superimposition ar also all right so you can totally do that that would be real fun all right so that is what superimposition based ar is so i hope you are clear with the very fundamental concepts right now after this we are going to get into this location based area all right see loca uh location based area now uh let me tell you uh you you uh i'm sure you know about uh gps right you know about uh or what can i say google maps right so you can say this is google maps in augmented reality all right like in google maps when you search for a place what it does it it gives you the address of that place or that means it marks the uh road it will you know highlight the road through which you can go go how much time will it take all right it will label the places or that will come while you are going in there right it will label those places you but what you are doing in there you are uh seeing all those in a 2d screen all right what location based ar does is it's also you know does the things almost same but in augmented reality it would give you the live feed all right in 3d it will give you the live feed in 3d like you will if you are going somewhere you uh if you turn around you would be seeing a name plate all right hovering over a building all right that would uh give you an idea yeah this is the building what i'm looking for all right then you can go in there so this type of ar experience makes it more easier all right to you know use us like locate places all right so that is what location based ar is location based ar basically you know ties digital content and the experience it creates to a specific place all right the objects are mapped out so that when a user's location matches the predetermined spot it is displayed on the screen all right so that's what i told you just just now right this is the this definition i gave you the very simple explanation of the same definition written in here all right so location based ar is just like google maps but in ar all right and more efficient more better all right in a more better way of course now you guys might be thinking why we are going to you know uh held our phone in uh held our phone in hand and start looking for places all right it's going to be very hectic i totally understand that all right and that's not how we are going to you know use location based ar currently there are multiple ar glasses that are being released all right like geo glass is releasing their own ar headset then qualcomm right qualcomm is releasing their own ar headset all right so many people many industries all right are working on their own ar and mr headset then a magic leap is there so when those glasses will release now after a few years alright or maybe in this year only you will be seeing location based ar all right it would be gps but in ar so how cool that experience would be right so that is how these things will work so i hope this uh the concept of location based ar is clear all right now here comes projection based area now let me make it simpler for you all right projection based ar is another name of holograms all right i know you guys might uh have an idea about what exactly a hologram is right it basically project solid it is projecting with you know a projector role uh into uh means into the means uh what let me let me explain it in a simple way what it is doing it is like with a normal augmented reality all right that is being used by a fort the difference between projection based ar and normal ar is we are in normal here we are using our phone to augment all right we are using our phone to augment but in projection based art we are using some other device to project all right to project the digital object into the real world all right that gives a more immersive experience in that case you are not you are not going to need and phone all right you are just having some project and it is projecting all right it is projecting the 3d object in the real world people are working on this kind of uh technology all right although right now uh it hasn't been that successful all right but people are working on that and i'm sure this is something that we are going to get in future all right and people are really working like working hard on this kind of ar alright it would be like really cool like you will be the tony stark all right of real world so yeah augmented reality virtual reality mixed reality has the potential to bring all the things that you see in the iron man movie of course not the arc reactor but all the digital things like the jarvis all right artificial intelligence is also having those potential so if we combine these technologies now we can have something like java so understand it this way all right augmented reality virtual reality and mixed reality is the future of our world all right maybe within five to ten years you won't be even using your phone you will be have having slim glasses all right you will be having slim glasses through which you will be able to augment the digital objects alright and that is going to be true because we have those glasses now all right yes they are they are bulky like if i talk take an example there's a microsoft hololens all right if you if you have used that uh before you you would get the same experience like uh tony stark right similarly then uh the uh other ar glasses is being released like geoglass is releasing their own then uh qualcomm is releasing their own so within five to ten years all right you won't be using your phone to communicate or you know do things you will be using your ar glasses to do all the things all right there's snapchats lens all right so a lot of things are there that you can do all right so now as you have as we have understood uh the very basic concepts you know the concepts of extended reality or we have understood the basics of augmented reality we have understood marker based ar markerless air superimposition location based and projection based and the last one we have and you know the topic of augmented reality is outlining ar all right now what exactly is it all right outlining ayana is uh are mostly used in cars all right you might not be seeing them more often all right although uh i guess even tesla is working on implementing ar in their uh cars all right so basically outlining it will outline the direction all right it will outline the it will map the world and then outline the direction all right with these uh trails here you can see right here you can see so they will outline those trails and help you you know go through all the paths all right it would recognize the boundaries all right it would uh recognize the lines it would help in many situations all that when human aware human i can't all right so augment augmented reality is the future all right augmented reality which in virtual reality is the future so this is how outlining ar is used all right even if tesla is working on implementing augmented reality alright then why can't we right we are developers we can do that of course we can do that so you can see people are working on implementing ar in their cars right how cool is that right so that is what outlining ar is all right now as we've understood the fundamental concepts of augmented reality let's uh get into the virtual reality all right virtual reality is the total opposite of augmented reality in augmented reality what what did we do in augmented reality we were augmenting all right or you could say putting the digital objects in the real world but in virtual reality we are taking all right we are taking the person itself to the virtual world all right or you can say we are teleporting the person to the virtual world right so that is what uh virtual reality is and it gives a very good sense of immersiveness all right for example all right see even i don't have a vr headset all right let the truth be told alright i don't have a vr headset i don't but i do have the understanding how it feels all right because i s at somewhere all right at somewhere i have used at some point of my life i have used a virtual reality headset yeah of course not at my home but when i you know used to go to some game parlor all right they had a virtual reality experience alright i i am i have used i know how that feels all right and i'm glad that i can explain it to you that uh try to understand it like this all right let's say you you are playing a game alright take any of your favorite game all right one of my favorite game is you know gta 5 right although i don't play games much nowadays but if i if i had to say one of my favorite games is gta 5 and gps and andreas all right so what i'm going to do is i'm i'm going to close my eyes and you know think of or think of think of a character in there all right think of a character in there and try to you know close my eyes and try to experience all right all that thing by myself all right and the level of uh immersiveness you will get there now after like while thinking or while imagining you are in uh in there in real time in the game and playing all the things doing all the things that the game's character can do will give you uh you know a sense of immersiveness and using virtual reality that sense of immersiveness increases by 100 all right because at that point of time you are actually in there you are actually controlling the person available inside the game right you are actually able to control the you know you are actually able to control the character available inside the game so virtual reality is nothing but you know it is a technology that teleports uh you to a virtual world all right so that is what exactly it is now there are you know multiple games and uh educational applications available right for example um anatomy all right it teaches you about the human anatomy all right so that that is an educational app all right then there there is beats about one of the very famous game like uh in the in the first image you can see this is the gameplay of a beat saver already the second image this is the gameplay of halflife alex all right in the third image this is the battle royale game yeah there is also a battle royale game in virtual reality so you can see the level of immersiveness the level of realism you will be getting this is called uh what can i say stand out vr battle royale all right so the vr can be used in multiple sectors it can be used in healthcare it can be used in a military training already it can be used in flight training it can be used in manufacturing all right you it can be used in education it can be used in gaming so the you know what can i say the level all right or you can say the limitation of vr is you know unreachable right yeah there is some limitation alright like the cost is there all right but cost you know cost is decreasing like uh previously in india already i'm talking about in india in india previously uh oculus quest already the vr headset it used to cost around 80 to 90 000 i guess all right and now calculus quiz 2 costs you around 30 to 40 000 all right so you can see how drastically has the the price has you know the price has decreased by half all right so the price of vr headsets are decreasing all right and also the quality and the technology is improving and increasing all right so just a few more more years and you'll be getting uh vr headsets maybe in 10 000 or 20 000 so things are you know things are happening real quick and uh mixed reality is actually mixed reality is going to help us a lot if i talk about in the manufacturing industry all right if i talk about uh the military training industry all right and as we have understood about the virtual reality augmented reality it's our high time to go to mixed reality all right now let me tell you all right also one thing i forgot to tell you that if you are using virtual rear uh vr now you'd be needing an headset that headset is called head mounted display all right so you make sure you know that this term all right or you can say it's uh in abbreviated form it is also called hmd all right or head mounted display now see mixed reality all right mixed reality you can mix reality now is the you can say it is the brother all right this is the brother or the twin brother you can say or you can say just just the brother of augmented reality all right why because see it is let me let me simplify this term to you mixed reality is just like augmented reality but yeah there's a but but it is more advanced all right it has more capabilities than normal augmented reality why all right see there's something called already mixed reality continuum or you can say mixed reality spectrum what does that mean it means that the you know the merge all right the merge of augmented reality and virtual reality or you can say the real world and virtual world or digital world all right we combine them you can you know go virtual and real at the same time all right with with mixed reality so mixed reality has a larger potential if we talk about the uh like training industry all right like in manufacturing industry mixed reality can help you know to recognize those items all right it can help you through the manufacturing process in healthcare all right it can help you you know operate a patient alright it can guide you through all the things you don't even need to you know distract yourself uh to any other computers or uh you know digital objects available in the uh in the icu all right you can say or in the patient squad all right where uh basically the operation is happening all right you don't even have to move from the patient you can stay in there uh monitor all the things all right in your mr headset all right monitor all the you know how let's say heart rate or blood pressure or any any data through your mr headset only all right so this is how it can help in uh you know medical industry then uh military training recently i guess i just read somewhere a bite in 2018 all right in 2018 uh military all right i guess the u.s military uh reached microsoft and offered around you know 400 to 500 billion dollars to build mixed reality headsets for them all right for training military all right for training the military so you can you can you can you know you can just think how powerful these headsets are all right it can help in training so mixed reality can help you uh anyway like for example in india there's a startup called ajna lens all right what they are doing they are uh creating headsets for government which are being you know used to uh train military all right indian military so uh it is being used to train navy seals they are it is used being used to you know train numerous people out here in india so you can see how mixed reality is exactly helping right so mixed reality uh i would say mixed reality is future all right extended reality is the future of our world all right it is the future of our world so mixed reality is nothing but you know it is the advanced form of augmented reality all right it contains both it means it can go both virtual and are real all right so that's what makes reality is all right and you have already understood the mixture about the mixed reality spectrum that is the combination all right that is the combination of physical and digital world all right so that is what mixed reality is all right and also this image is taken from microsoft's website so yeah now as we've understood all right about all the things already about mixed reality augmented reality virtual reality let's you know let's get our heads into x the growth of xr all right or you can see the growth of market of extended reality all right see the extended reality market size all right uh is going to reach all right around you know 393 billion dollars by in 2025 at uh at a growth rate of 69.4 percent cagr all right it is a report by market research future all right now you can see that by in 2017 uh the growth was the growth was so less all right means there wasn't any awareness of augmented and virtual reality but you can see by 2025 what will be the growth all right you can read this chart by yourself all right so you can see how how it is impacting now i want to tell you that this chart already this chart is you know this chart is not stable all right uh right now in 20 in 2022 only uh the market has reached more than 200 billion dollars all right so you can see you can see how how the growth is actually but it can even happen by 2020 uh three already by 2023 it can even reach 393 billion dollars that is estimated by 2025 so all right so make sure you know you go through all these notes all right all the notes will be available in the website so make sure you go through that so yeah that's it for this lecture thank you hey folks um welcome to our module 2 and in this module i'm going to tell you how to install unity and after that uh i'm going to uh show you or tell you how to use unity all right what are its interfaces and all those things all right so sit tight on your uh seat and watch the video all right if you want you can uh grab some popcorns also so yeah first of all what is unity before downloading we must know what is unity if we don't know about that then how could we work out with that so we need to know what is unity see unity is a engine all right it's sort of a tool it's a as not sort of a tool it's a tool it's a definitely a tool it's a tool for developing games for developing simulations for developing ar vr applications all right uh you can even make your own simulations like you can develop your own um robot inside of unity you can develop your own let's say selfdriving car you can implement your own selfdriving car inside of unity yeah that's possible that is 3d simulation so uh and one of the most like most one of the best things about uh unity is it is multi it can it works on me unit uh linux it works on mac os or works on um windows all right and also you can build uh actually you can actually build applications all right uh you can build your games your apps for multiple platform windows mac os linux then android ios playstation then i guess it also has a feature for xbox or also i'm not sure about that i haven't researched about it then there's also lumen luminous then uh there's uh webgl so yeah multiple things are available all right so yeah that's what unity infinity is a very good tool for developing these things now what you need to do you have to go to this page all right i'll be providing the link down below right and uh click on this all right just just click on this download unity hub all right after you have downloaded install it all like this these processors are very simple i need not to show you i'm pretty sure about that now what do we do after you've installed on it open your unity hub it will it might not look something like this all right because this is a beta version on it uh it's in currently in beta testing all right it does have some bug like recently if a phased one that it wasn't grabbing my license but i had to restart it and it like worked really well so yeah so basically uh it might seem a bit white alright the interface might be white but components are same so when you first open your unity already log in log in to your account alright activate your license uh it will only show you like it will by default uh show you how to activate your license all right you just need and if it doesn't uh go to this click on this like preferences option all right uh go to this licenses all right i have a professional license i got it through student plan and click on add and choose any license you want all right now let me show you one thing right this is the basic interface of our whole unity hub all right through this we have to run our unity this is the project section alright in this project section multiple projects of yours will be like put it in here like will be listed down here uh as you will be installing unity for the first time it won't show any of the projects it will be totally empty these are my projects all right then there are other tabs also i'm sure you would explore this learn and community tab but for now let's go to this install tab so to install our own unity version all right now this is my unity versions alright these are my unit version that i am having that is 20 20 20 90 and 2018 all right uh these are my unity versions i've installed those i work with these uh mostly these two version more often all right now this this panel would be empty alright this panel would uh would uh be empty if you haven't installed any um if you haven't installed any of your uh unity versions till now so to install one just click on install uh editor all right after that it will prompt upper menu alright there are multiple uh versions uh in here all right there multiple versions in here i'd recommend go for 2020 all right even unity recommends this as of now and also always download the lts version why lts is limited time support and it's it's the most stable version all right it's the most stable version that we would have so would always download a stable version and we'd also if doing our development in unity 2020 only so i would recommend download it right so then click on install now you can either install this all right any actually any id or code editor would work but maybe you won't get that a code completion on that autocomplete but i would suggest downloading it all right so download this to all right if you want linux you might not get this option then you have to use any other code later only but another thing i would want you to do this is click on this android build support under sdk and indicators and open jdk all right and remove this check mark from the documentation we don't we can access it from web all right and there are other like build versions too you can also like take a look at these and download them then click on continue all right click on this i have agree and all those terms and things click on this alright and then click on install all right and it would start installing your editor right and after it gets installed all right just click on this download and it will show if any of you if any of your data is installing or not and now if we want to create our own project click on this new project option alright sorry it's taking a bit of time i it's it's uh it's a bit buggy so yeah i'm really sorry about this thing yeah so as you can see here are multiple templates available right multiple templates available there is microgram 2d mobile karting micro game lego 3d mobile auto showroom all right but for now we have to work with these two only not even the 2d one we have to work with the 3d only all right so what we have to do see there are multiple options like another is this 3d uh sample scene hdrp and urp so basically uh what this does is this basically gives you a more better graphics more optimized graphics alright urp better best works for uh best works for us like computer systems and uh the urp best works for mobile phones all right so yeah and then uh you need to name your project alright name your project in here i want to name my project let's say learn to develop all right i'm sorry for the spelling mistake all right and then you can simply create project and your project will start creating all right so yeah that's it this is the base procedure and i have also shown you how to install unity so yeah thank you so hey folks welcome to this uh video and in today's uh this is the second uh part of module two alright in the first part of the module i gave you an introduction to unity and also uh told you how to install unity and create uh your first project with it all right but now in today's video we'll be covering rest of the topics or the rest of the imported topics that are left all right so without any further delay let's get started so our first topic to cover is navigating through interface all right so we've been navigating through our interface learning about what how like what are the different components of our interfaces all right so first we have to start with our project window all right so the part here you are seeing all right like the folders here are this panel is particularly known as the project panel all right this panel uh in this panel we can create multiple all right we can kill multi as many as folders we can we can add our own 3d models and all those right so just to create your own folder in here in the patch project panel just right click in the panel uh go to this create option and click on a folder all right so i want to create a folder named materials all right where i would be storing my materials right so this is my my material folder right now in the project panel i can even add numerous amount of assets right like if i if i show you um just just wait i'll be adding an audio file in it all right so this is a burden beach file all right i'm going to add this audio file in it just wait for a few seconds and uh the file will be imported it does take some time all right because currently i'm also recording so it took some amount of time but it's usually fast so here i have uh just what i did i just dragged and dropped that particular audio in here all right if you click in here you can even play that audio but i don't want to play it right now so yeah so we learned about our project window now while we develop all right while we develop our own games our own application we face multiple bugs we face multiple errors right don't we we do so where do where can we see those errors where can we look for those errors right so uh unity has provided us something known as the console window all right it's just right here all right us uh like only after the uh project if you don't have this console panel or console window just uh go in this top section name window click on this click on panels and just select that panel that is not available in this in your workspace right so currently it's and empty right currently it's empty i will show you how an error will look like but yeah in here you will get all the errors and warnings and particular debug text in here right so this is our console window now here comes our another window or panel that is the hierarchy panel so what is the hierarchy panel all right see there are multiple objects in this the scene all right don't worry i will make you make sure that you understand what this scene is but currently uh currently there are like two objects that is a one light object another is a main camera object right so hierarchy panel what it does is it lists down all right with the help of hierarchy panel we can just right click and create our another object right i will show you how to create one but hierarchy is basically uh the structuring of like the objects it is a panel where you would be able to see what objects are available uh inside of the scene all right and through the hierarchy panel you can create your objects you can modify them and all those things all right modifying is done by another panel actually i would show you right name after the hierarchy all right so this is what our hierarchy panel does right so we understood what our hierarchy panel does now here comes our inspector panel all right so what is this inspector panel man what is so this inspector panel is basically used for what can i say it is basically used for modifying the components all right it displays the properties of the object all right like if i click on the main camera right so here you can see here multiple multiple uh components here there multiple options are there we can manipulate those of these options and uh like we can manipulate this and make the camera component look our own way all right we can uh edit these components right so inspector panel gives you an inspection of that object right it gives uh it helps you to edit those options inside the object all right now as with so tell us what uh which panels have we looked we have looked into the project panel the console panel the inspector panel and the hierarchy panel now it's our time to look into the scene panel all right see seen the scene panel is nothing but uh a whole different like um it's a it's a workspace all right it's it's a workspace where we can actually uh put our models in right like our 3d objects in there we can put our 3d object into like main camera main camera is inside the scene main camera is inside this uh whole scene right it's in this 3d workspace so scene is the 3d workspace right now after that there is another panel that is this game panel right now what is this game panel see uh this scene is for navigating through all right we can manipulate these objects like like this all right we can i will show you what are these but we can manipulate these we can put our 3d objects in there but game game is the rendering part all right like after our uh like let's say i have made a 2d game for now all right but i uh now i want to test it out i want to play so what i would do is i would play that uh particular game and or in this screen all right in this particular screen or in this particular panel the game will start showing right so yeah now here comes oh another thing uh here you can see three buttons all right uh these are three buttons this one is the play button this one is the pause button this one is the step button right so uh what this play button does is just plays the scene all right that is starts the rendering this is like the pause button it will pause while you are like like rendering it and the step now the statements it will like after you have paused you can click on this step button it will uh like move one by one all right i'll show you those all right i will show you these now here comes another panel this is the asset store panel all right now one thing to note is uh here you can see it has told that they have moved uh like the asset store to uh the web all right and uh i don't know why they did so but actually i prefer that more uh because in my system the unity asset store uh used to lag all right uh instead of unity so i think that was a good idea but uh the main difference already that you would notice as a beginner uh in unity 2019 and 2020 is that uh in 2019 the asset store is already integrated in your like whole uh unity and in 2020 uh the asset store is uh on the web browser all right so you can access it on uh from the web browser all right so we don't need this panel as of now so i will just right click on it and close that all right one more thing i would like to show you is there are multiple layouts available in unity all right just like go to the right of your screen and click on this layout alright there are multiple layouts all right you can try one of these and one of my very favorite all right just just wait for it oh yeah one of my very favorite uh layout is this one why uh because this gives a like more broader view all right this gives a more uh broader view of this scene all right it gives some it gives more free space to work on so i like this one the most uh but for now let's go to the default all right we'll be working on the in the default only as of now so yeah so uh let me save this yeah so we have understood that the very basic interface now let's go and look at the tools all right the tools that we have so first of all we need but before that before looking into the tools we have to understand our game objects all right so see we have uh got into another section that is game objects and what are game objects so see game objects are digital objects all right game objects are those digital objects that we can use digitally all right game objects can be anything alright i mean anything it can be 3d game object or to the game object all right so what our game object basically game objects are virtual objects nothing else right so like uh like an example this main camera it's a game object all right it's it's it's a gaming a game object now this directional light all right this is a game object right so yeah similarly we can create our own game objects like just just uh go to this hierarchy right click in here uh click on this 3d object all right click on this cube right so we have created our own cube right so now here you can see there are multiple anchors right there multiple anchors i will tell you what are these in the top here you can see here is a tool bar right here is a toolbar so what does this toolbar does first first of all first and foremost there is a tool named hand tool this is uh used to like uh grab the screen and navigate through it grab the scene and navigate just just for that now after that after that we have move tool this move tool gives you some certain anchors all right uh where you can hook on all right you can hook uh with those anchors you can move your game object throughout the screen right so that's what it does after that we have a rotate tool like if you want to rotate your object i can i can do that it gives rotational accesses through which i can do that right isn't it like really fun now after that rotate tool there's another tool that is a scale tool it helps us to scale the object scale the object all right like we can i can scale it in any any uh axis scaling it at any axis right after that we have a rectangle tool or wreck tool all right what is this it it just like helps you to resize the object in a rectangular manner nothing else now then we have a universal tool uh i guess this is called uh oh this doesn't have a name actually but i will call it universal tool all right so it is a combination of all the tools we discussed previously all right except the hand tool and if you would see uh i'm able to use the hand tool uh even when i'm like not uh selecting it already like externally selecting it it's automatically getting selected so the basic shortcut for that is sorry to click the uh middle mouse button right so i'm really sorry about that so yeah uh we have created our own cube we learned about game object right we learned about game objects now our uh just just wait i want to like reset all the things now i want uh to play with it right i want to manipulate it i want to manipulate this game object how to do that first of all i can use these uh these several tools these fancy tools available or i can uh go to my like simple methods like uh as i previously told that in the inspector menu inspector menu gives us the properties of the game object so we with the inspector menu we can edit those properties too right we can so how do we do that first of all let's say i want to edit the transforms all right so what are the transforms man what are transforms like see i am moving this right i'm moving this like this i'm i'm able to rotate it also so what is that the things are like moving at a particular direction we can also do the same thing through this like inspector menu like here you can see there are three parameters like first of all see the transform here first of all see the transform here comes the position so that what does what does it does it changes the position like i want to be it at 10 of x axis right so it has got to tend and uh yeah you can simply manipulate your position from this but for now i want it to be in zero right now rotational values all right let's say i i i want uh my cube to be rotated 45 degrees at uh x 90 degrees at uh y and uh let's 45 degrees at z so i rotated my cube right i i did rotated it now one one thing you'd be seeing like let's say you messed up with all these uh parameters now you want to reset it how would you do that just click on this three little dots click on reset as simple as that nothing much all right you can also scale it all right now this is your homework you have to try this scale portion by yourself all right you have to try the scale portion by yourself now here are some other all other parameters too all right now this is a cube mesh filter all right then there's a mesh renderer i want to show you something if i remove this mesh renderer you won't see any sort of mesh all right what are these green lines this green lines are the box collider if i remove it you you would see the very light green right very light green now these other light greens are this this of cube mesh filters but this box collider lines are also getting attached to it now here is the mixed random mission day is basically the mesh of the queue nothing else all right so till now we have learnt manipulating our cube we have learnt uh uh navigate our interfaces all that we have learnt about game objects right so yeah we have learned this much by now now let's talk about materials what are materials see of course you want uh your uh like game objects to be colorful right you want your game objects to be like texturified like they they should have some sort of skin right even humans does have skin why won't a game object that's like that's really bad right so our game objects also wants uh materials like just uh humans we want our skin similarly the game objects also want their skin so the skin is known as materials in this terminology in technical terminology all right so just just uh as you can see i previously created a folder right go to that folder right click click on create find the material i found it in here click on it and let's name it i want to name it red right i want my material to be red now what now what now i want to change the color all right see simply click on this material and here you can see that you uh the properties of those one that material is available in the inspector now after that click on this white box all right this is this uh at the right of albedo click on this all right and select a color let's say let's say i want it uh to be um red yeah so that's sort of a bit pink also but well that would work for me so now uh man i have like i have edited the color i have put uh put something color in it but why isn't it reflecting in the cube why is it showing on the cube is the cube angry that with the color is the cube angry no it is not of course not so we we have to apply this material in the cube right we have to apply it so how would you do that two simple ways click on this cube one way i'm showing you one way that is click on this cube drag and drop this material inside its inspector voila you got the material now our cube is happy just like us humans the cube has also got its skin another way is just drag drag this and put drop it in the scene view without also using the inspector this can also be done right so our cube is now really happy because we have provided him a skill right voila so now we learned about materials now one more thing if you want to add textures it is really easy click on this like albedo here you are seeing a blank box and after that there's a zero sort of click on this all right now let's say what what sort of material i want i want all right let's see um oh no no not not this not this of course not this uh let's say this yeah this this looks something like a bit good right so yeah we give our cube a texture also see now our cube is more than happy so we successfully made our cube happy and also learnt about materials and texturing find those all right now how to create a scene all right see what are scenes scenes are nothing but different environments right they are different environment like this is a sample scene i want to name it let's say i want to name it where where is the name yeah i want to name it a main scene all right mean scene this is the scene i want to name right this is my main scene so this is the scene all right and where did the material go that's weird first i guess this is the bug of unity but this is really weird or i guess it happened because i didn't saved it i'm not sure but yeah but we managed to get it back now scene is a separate environment so that we can create another scene all right i would also like uh while uh getting into euphoria i will be i will also be showing how to navigate through different scenes all right so don't worry about anything how to navigate and all those things so i just want i just have to click right then create then here's always the scene man oh yeah got this scene now and create a new scene that is test scene see i got another scene with uh main camera and directional light by default all right but currently i want to be in the main scene right so we successfully created our cube and also managed to make it happy by giving it a skin now let's learn a bit a bit about project structure right what is the project structure what is it a project structure is a way of structuring your project all right nothing else see why uh see this is not something like many people teaches you all right this this or this thing you gain but you gain by experience but today i'll be teaching you all right see maintaining your project on it maintaining a project is really important like when i was a beginner even uh i remember when i was a beginner i used to like make my whole project very much cluttered right i used to make everything cluttered out and that actually caused a real problem for me like later on all right because managing those were really like hectic so with after like after working with unity i learned that uh it is really important to manage your project so how do i manage i create separate folders all right for separate type of file or like for materials like for skins i created this particular uh folder named materials all right to add some sort of assets all right some sort of assets i would name another folder name assets where i'll be storing my assets like 3d model like 3d images right like to store audio i'd be creating another folder that is audio folder all right so i create separate types of folders all right for separate types of files right so similarly throughout this video would be saying how am i creating folder for each type of file right so i recommend to stay along with the video till the end right so till now we have learned uh about navigating through our interface about game objects about manipulating those all right uh about uh materials all right like the skins then we have learned about the scenes what are scenes right uh then we have learned about our project structure isn't it cool like within a half an hour we have done so much so yeah so we learned about structuring our project all right now some more parts are left like creating our own c sharp script all right then we will be learning to modify our own components then prefabs uh then physics and collision then we'll be learning about audio and then at last we'll wrap up this module after designing our interfaces all right so yeah let's let's do it let's get the energy back and let's do it so to to keep the scripts all right to keep the scripts uh what i want to do i want to create another folder name scripts folder or that it would be containing all the scripts in here just then right click click click shisha all right i want to name it a test script all right now as you can see in here there's a like buffering going on this buffering is basically the is getting compiled right so just wait for a few seconds and it would be done actually my system like my system has got really slow and because of that it's taking a lot of time but i guess we can manage with that right so yeah voila our test script is created now i'll be using my own text editor all right i'm dragging and dropping it into the one um just wait just just uh just wait uh so yeah now let me drag and drop it in here all right now see don't look into these windows all right um i have set up my sublime text for competitive programming so don't look into this but let's understand what are these all right see if uh don't worry i'll be explaining all these things all right what is like public class what is like what is void then uh what is using so i'd be under make you understand all these things all right if you don't understand something in here don't worry i am there for you all right i'm your instructor i'm always there for you if you have any doubt join our community all right join our community ask your doubts in there you would i promise you would get instant doubt support in there all right so yeah as you can see in here all right just wait let me uh make the font a bit bigger yeah so first of all we are including all these system packages like unity packages all right these are packages we are including now we have created a class of transcript all that that is inheriting another class all right that is monobehaviour class all right there's the monobehaviour class now inside that mono behavior class c remember this monobehaviour class consists of these functions all right so it is important to inherit this monobehaviour class now if you don't understand what inheritance is don't worry i am there now this is uh with the void uh start function there's the update function what happens in start is so the first time all right the first time i'm playing my unity like playing uh the particular scene all right it will show at first like in the first frame it will do some function that i will define all right and what the update does is what it does it basically updates uh every frame like it will do that function it will do that particular function in each and every frame all right and it will be called once like if if the frame is one the update function will be called once the frame is two again one so yeah so it in every frame this update function is called once now let's let's try it out right try it out so to uh print something i'll try to print something that is to print something in like unity or like in the console we do debug.log and let's name it start function right and also remember to put the semicolon i all i sometimes forget and this gives us all right so it's compiling the script alright just just wait for it all right it will it will compile the script and then we are good to go i will also show you how to execute a script all right um just just do it ah yeah we are good to go right so yeah now let's play all right how to play click on this play button all right just wait this would take some time all right all right it is telling us to hold on and we will hold on like here it is really good it notifies us everything so yeah as you can see we have got into our games and started playing it let's go to the console oh my god why isn't it printing have i have i done something wrong like have i coded something wrong let's check the script again no nothing is wrong in here i guess everything is okay yeah it looks good to me but why didn't it actually work let me show you so i got out of my play screen all right go to the scene yeah see the script is in here all right it is in here in the project but we haven't executed it right we haven't executed it so how to execute pick an object all right i want this cube object then just drag and drop the script all right drag and drop in it there's another option alright that is click on add component all right and type the script name all right like test script so here you got the test script right so similarly there are two ways to add on you can also drag and drop in here also all right that's another option now another got added here but i don't want it so i will remove it all right so let's play it now let's let's try playing it now just wait hold on our unity is telling us to hold on it is entering the play mode so now let's see what has happened in our console cool now you can see in the console there's something written it is written start function that's what we wrote in the debug.log right that's what we wrote so what happens the start function walk works in first frame right now this is the update function all right now we want to check the update function right just wait try it so yeah so i have saved it it will take some time to compile it let it do its compilation we won't bother him all right unit is good he does everything for us all right so let's uh let's hold on let's just do it it will take some time oh cool so it got like compiled and let's play it let's see what happens just wait uh now let's are you ready to see the console window are you guys ready let's see it oh my god what's it doing it's continuously like putting giving the function update function like each frame it is doing this on each frame see it continuously updates the function in each frame so actually i think you got a very basic idea of what this this function is doing right i guess you got that very basic idea so for now uh this is the like you learned how to uh basically learn unity sorry i'm not the only teaching unity basically you learned how to create your own script all right and understood the functions in there all right now there's another section known as modifying components we already learned how to modify components all right so yeah now here comes prefabs what are prefabs prefabs you can say these are the collections all right these are collection let me create another folder i would also show you how to create a prefab so what is the prefab man a prefab basically helps us to create a collection right like it is sort of a storage particular thing right see uh let's say right now let's let's take a scenario all right let's take a scenario you are developing a game all right so that's a a first person shooter game all right you have implemented it uh on one scene all right now you have created your own first level now you want to go to a second level and you want that same particular fps player alright same particular fps player in this in another scene that you are going to create that is in another level what you would do you have uh one way all right one way is to like create like assemble all the components that you made previously again all right and that would consume your time all right and of course that isn't a good thing another way is to create a prefab so prefab creates an another like a package of that particular object right it's it's a package of that particular object it helps to create uh like a package like okay if i our cube has certain properties all right i need the same cube one that's next scene right i need the same cue on the next scene then one way is to recreate it another way is to create a prefab and just use that now how to create a prefab click on this wallet click on this cube drag it and bring it in this project section put it in there and voila your prefab is created now here you can see the cube has turned like this this thing is turned blue this is the indication that it is a prefab now let's create another scene and let's see does it does uh oh i i have already one does this work on this on this another scene i want to save it right i definitely want to save it uh so yeah let's go to this uh where is it prefab all right now let's drag and drop it in here wow i got it in here just to reset the transform yeah i got it in here let's let's try playing it let's say the functionality works or not just wait for a few seconds to run um it is doing its job uh so yeah now let's look at in the console wow the same thing that was working on the previous scene is the same thing is working in here so yeah one more thing i forgot to tell you i just okay it just came up in my mind just let me like go back to my main scene uh wait let me lower down the desktop volume yeah so now so now what all right so what now it's uh what we have to do uh see now i would be telling you something really important all right i forgot to tell you that previously and object all right an object can have its child object all right like you can branch the objects like if i if i want to want the cube to be a child of main camera i would just click on the cube drag and drop it in here and see my cube is now the child of the main camera right and main camera is the parent similarly i can also create empty empty objects that is click on create and create empty all right i won't change its name i will just reset its transform and put this cube underneath of that game object all right now i can make multiple childs of this cube all right i just control d all right to duplicate control d ah so yeah again ctrl d again ctrl d so similarly like this i i i am able to like oh wait uh yeah i'm able to create multiple child objects inside another empty game object right so you can do those things similarly nothing much different right so till now we have learnt a lot of things all right we have learned also modifying our own components we have learnt about prefabs now three more important sections are left that is physics and collision all right physics and collision another one is audio how to work with audio files all right audio is really simple all right then we have the last but not the least designing our interfaces all right and at last of that i would also be showing you another thing all right ah so yeah let's move on with physics and collision what is a collision man what is it see collision is nothing all right collision is nothing but the hit or like the hit of an object for on another object all right it is flexi these two objects are colliding with each other all right these two objects are colliding collision is basically the like interfering of two object with one another right so that's what collision is all right now if i if i had to say you all right game like this this whole unity engine is a replica of our real world physics are we showing you how all right just just wait all right first of all i will be deleting all those other game objects just wait uh first i need to uh set up my environment to show you how right uh oh no no why let me let the y be 0.4 right and the vb for one b four right so this is how it is all right now let's take another 3d object that is a spear we would call it a ball right it is a ball for uh for us it is a ball right just wait so so yeah this is a ball right now i want to implement a real world physics so as of now all right let me let me first deattach the script right now or else it would be working continuously i don't want the script to be interfere to interfere alright just wait oh and let me apply to a brief habit so our 3d uh our script has been removed all right like here one thing you can see of it here's the shadow that's because of the lightning all right you can play with the light lighting later all right so let's play it now so in real world what happens in real world if we have a plane and if we throw a ball from the from the top it will fall down right it will fall down and bounce let's check that it happens in here or not just wait keep patience all right keep patience oh my god why isn't it falling it should fall right it should because i i recently told that unit engine is a replica of our real world physics but you have to implement those physics right you have to implement those how how would we implement those unity is really really caring about us and what unity developers did they already created those physics objects for us those physics components that will help us replicate the real world situations all right now how do we do that so see we are first of all we are in the game scene all right we are in the game scene i'd be editing this whole thing while being in the game scene all right so just put it aside in here all right because we need the view only nothing else one more thing i would like to say that after i get out of the this game view object will get resetted because though won't be saved uh during the game view remember that all right so now i want this ball to fall due to gravity all right i want this ball to fall how do i do that so far there click on this add component all right there's something known as a rigid body all right click on this rigid body and see the effect cool isn't it like after i added this rigid body it's the ball started falling now it isn't bouncing right see to make it bounce there's another sort of physics all right we need to create a physics material all those things but we won't be doing that in here but as of now you understood that uh we were able to add the gravity like we would be able to add make the ball uh physical like we are we are able to add physics to the ball right now in the rigid body component you can uh play with the values in here all right like the mass value the drag the angular drag you can like click on this huge gravity let me let me show you one thing if i click on this uh see it isn't falling because it is not using gravity so see cool isn't it great now here's another option collision detection all right uh before explaining this collision detection thing right i would be telling you how this collision is happening how is it is there any sort of magic before that i need to replicate this object already because i don't want the ball to fall all right i literally don't want it to fall so here you can see here some options box collider all right this box colliders are basically provides the collision platforms all right it provides a platform like uh like in the ground we are moving all right we aren't falling like we are fall we aren't falling through that uh whole road right went like penetrating that road and going to the bottom of that road are like does that does that thing happened doesn't right similarly in terms of games we could say there are some platforms right those platform has some colliders all right those are book box collider so here if i click on this box color you can see all right you you just saw that the ball got it through that because there aren't any collision like there aren't any collision happening to stop that ball right in there because we have disabled the uh box collider right so box collider actually helps us to uh like this colliders there are multiple types of colliders actually box color is one of which type like this pier collider all right so box collider is basically helps us to pro uh to provide collision to that particular platform right just just wait uh so yeah so uh this is how everything is happening right cool isn't it so we have understood about colliders one more thing there like there are many multiple you can have multiple uneven shapes right like like a terrain all right like a road there like a road is uneven all right a desert it is uneven it doesn't have a flat surface it is totally uneven there are highs and lows right so for that type of like if you want uh want to provide collider to that platform we can't use box collider in there right because then it will be totally plain we want we don't we won't be able to use it so there's another collider named mesh collider all right it is in the component only alright i want you to try that collider out all right by yourself just close to have component click on mesh collider and you can use it now the problem with mesh collider is uh it is a a bit more cpu intensive all right then this box collider or spear collider or any other collider the reason being there is it uh does more calculations than box and spear collider because uh the mesh collider what it does it it gets the accurate shape based on that particular terrain or the particular model right isn't it so so what uh they gave that particular shape so it does more calculation now in the rigid body i was going to show you something known as collision detection what is that the multiple option all right we'll be looking into two main of these discrete and continuous now there's a huge difference between those all right see what is the difference discrete is performant all right discrete uh gives a lot of performance it is like in performance wise it is better than continuous all right but the prob the problem there is it does like it doesn't do accurate calculations it doesn't like it can if you if you throw it from a really high like at a really high position it will penetrate through this whole um collider all right through this whole platform but continuous continuous is is better than discrete already because uh with the use of continuous there are very less chances that it will penetrate through because it does more calculation than discrete but the problem is continuous is cpu intensive so that's the difference major differences all right so we also learned about the very basic physics right we learned about the very basic physics of unity now it's our time it's our time to learn uh this audio right so for that first of all to play that audio all right first of all to play that audio oh my god i did i deleted everything uh so yeah all right i would be getting those objects back because i did that with our whole environment now i want to create an audio object how do i do that go to this uh click on this go to this thing all right click on audio source all right so we created a simple audio source right we created it now there are some particular options in there all right click on this select the audio and uh let's let's play it all right just wait this is a uh this audio is the birds and beach audio all right like bird chirping are in the big uh beach all that or do you think are you able to listen it i am sure that you are able to listen so the audio is playing right so uh the audio is playing in here right the audio is playing that's cool isn't it so we implemented our own audio source all right now uh soon in our pre uh in our future lectures all right we'll also be learning how to control our audio sources through scripts alright but for now if we look into these like uh properties there's a uh option for mute now i won't be actually explaining all the things in here you have to explore it by yourself like uh you can explore this bypass effects bypass listener effects bypass reverb zones all right now these this loop is basically uh will loop the audio all right because without loop initiated all right without click checked on loop uh what will happen your audio will only play once but with loop it will play all the time all right now here's another option that is play on awake all right uh play play on awake what it does is it like when you just play your game all right it will start the audio at that time only if i if i uh like remove it and then start playing it just wait so uh it has started playing but you uh won't be seeing anything like you won't be hearing anything because player awake is disabled now to play that audio i need to add some trigger or some sort of script to play that audio all right so play when on away what it does it basically uh plays the audio whenever you start now here's another thing that is volume all right now this is the volume it uh varies from zero to one all right now there are multiple other uh audio editing uh feature you can check them out by yourself all right you can do some research on them all right so till now we have als we have completed most of our topics all right we have completed most of our topics now now the last but not the least creating our own user interfaces how do we do that all right see i'd be creating a very simple user interface all right nothing too complicated already nothing to like nothing of very complicated user interface a very simple one just to show you all that how to create one all right but we'll be creating uh beautiful interfaces during uh like during the making of our uh course like the uh projects all right so just let me delete this particular thing because i don't need it now all right so let's save it now how to design our own interfaces all right let me dock this game view in here and uh for that first of all i want to go to my wide view right because it helps me a lot all right so first of all click on this 2d option here you can see alright this will give you a 2d view alright this would give you a 2d view so i got the 2d view all right i would like to click on here this this y thing the reason because this will give you a grid and it's really helpful now uh first of all we have to uh right click and click on the ui option then create a canvas all right what is this canvas right what is this canvas basically this canvas is basically the like uh the basic framework all right the basic wireframe of the or you could say the frame for handling the user interfaces right so click on this canvas alright here are some options what i would like you to do is uh first of all uh click on random mode all right keep its screen space overlay as of now there are multiple options and definitely will be looking forward to uh these in our future lectures all right and this world space is going to be really useful during the like during our making of those projects right now here are some options all right now go to this canvas scaler thing all right now ui scale mode constant pixel size do to scale with screen size all right and give it a default resolution for me as of now uh this 800 by 600 is okay and leave all those parameters same all right for now this is what i need now our canvas is ready right our canvas is ready now i want to like get the display of my laptop in here like the resolution of my laptop in here okay uh very well sorry my mouse is like sometimes creating the problem of navigation like the mouse button middle mouse button so as we've created our canvas all right now we need to uh create a background image for it so how do we do that so click on canvas click on ui then there's something known as panel all right click on this panel right see you got a sort of background all right now i need to color the background right uh first of all i name it uh background image right although i haven't imported any image so i will take coloring it all right first of all how to do that uh click on this panel all right uh click on this image section right here from here you can select the image you want all right so already one is selected i don't want to change it click on this color option and here we see that this this thing is transparent how to make it opaque see here's an option known as a also known as alpha so just just click it in here and like make it 255 like make it to full i want a yellowish orange color so this is the color i wanted and i got right so now this is my background i'll be scaring the background a bit how do i do so uh choose the scale tool click on the middle uh option and just scale it right now as we are have created our own background now what we want we want is to create a heading text for it how do we do that how do we so click on ui then i there are two option text and text mesh pro all right i haven't imported text mesh pro although text mesh pro is the better option to go for all right because it pro the quality of the text and text mesh pro is really good alright so i'll be clicking on it all right uh just wait uh so yeah uh i'll be uh importing the uh text message essentials all right it would take some amount of time all right don't worry all right let it uh take the time it want all right all right because that is importing all those assets so it's important for it to be important clearly just wait yeah it is getting imported uh just it would take some amount of time actually i guess i should have like imported it previously only but uh if i did so you wouldn't have like caught how to do that so here we got our text in here right we got our text in here all right now we want or to edit the text and let's let's let's name something all right let's name it uh our new ui all right i know this is like a very bad name now i want the textile to be like something like h1 right but it's giving a color no no let's leave it let's let's keep it normal only and click on bold right we can even resize it how uh like zoom it in here and you will find these anchors all right do this do this right another thing we want is to center our text so we did that all right so you can uh we also have some other fonts all right uh okay we don't have one oh i sorry i forgot to import that a extra package came with uh text method but no worries uh we don't need that as of now now here you can see here is that a wreck transform option click on alt alright click on alt click on uh so as you can see if you just open it all right and click or not there are multiple options here i want you to click on this top one see our text automatically got and then i want to reposition it and voila we got our text or just wait yeah we got our text to where we want and this is our ui all right our new ui or let's say uh let's name it to learning unity right so this is our new ui isn't it now we want to add uh some buttons right we want to add some buttons how would we do that click on canvas click on ui here is an option known as button and button text mesh pro i would i want you to go for button text mesh pro it's better believe me it's a lot better all right now we can even add some functionalities alright first of all i want to like put a transform to it i wanted to want it to be in center only let's name it as a play button all right let's name it a play button and let's name it play see in future or we today we are learning just how to implement our own ui all right in future in future lectures we will be learning uh like how to navigate through uh uh uh our scenes how to like add functionalities to our button right so for now this is what i want so we created our play button all right even i can change the color all right there are some many things all right like if i if i click on this placed color i want to make it green when it gets pressed right now if i play this if i play this just wait it would take some amount of time because unity takes time all right so uh just just wait it's entering the play mode cool now if i click on this see when i'm clicking or clicking on it it is getting green now if i if i select the highlight color and like make it a blue let's see what happens oh well nothing happened uh let's let's check out the selected color let's make it sort of like yellow wow now oh highlight collect worked finally i i don't know what why it didn't work so when i'm hovering on it it is highlighting the color as blue when i'm pressing it that is the pressed color it is green after it is selected it got pink right so isn't it really cool all right similarly we can add some functionalities alright like there's an option on click all right if i want i can like add some particular function like for now uh let's say i want to disable the text all right so whatever do i would uh drag and drop this text first of all let me show you from a again there is an on click parameter click on this add then take the text in here all right now in here there is written no function click in here go to game object uh click on set active all right and just don't check that button out all right we have we can create another button something like this name it uh active first of all i would name it active sorry deactive deactivate d activate and this one is wait all right i just want to like wait this is going to like activate like activate the whole thing all right just to wait let me drag and drop drag it down in here all right uh cool isn't it now let's let's try this out what happens let's see just wait it would take some amount of time but it will uh it will get done all right so just wait cool now if i want to like deactivate on it i don't want this learning unity i want to hide it click on the activate see it got deactivated but i but i want it back see it came back see i'm making my button do some activities so we also learned how to uh design our own interfaces if you want to add some sort of image you can just click in here ui then raw image all right i i don't know i have any image for this all this oh i do uh let's say i want uh i want this emoji one right i want this one to be in there and i can also resize it um sorry it got resized wrongly i'm in a wrong manner so yeah see isn't this ui looking good actually it isn't looking good but yeah for now it's it's okay it's fine right so we also learned how we learned today we learned a lot of things in unity right so see you in the next lecture thank you so hey folks uh welcome to our first lecture of module three in this module i'm going to introduce you to uh c sharp so without any further ado let's get started so what is c sharp right see c sharp uh first of all one of the most important thing i'm going to tell you right now is pronounce c sharp as c sharp only not c hash like i have seen many people they like uh they don't know that how it is pronounced or they even sarcastically tell that it is c hash guys it's not c it's c sharp right uh so yeah so see c sharp is an objectoriented general purpose programming language all right it was developed by microsoft uh in the early 2000s right uh the development team was led by uh anders hillsborough and it is a part of the dot net framework it can be used to develop different types of uh software's like uh console applications windows applications uh then web applications mobile applications and games and uh so yeah and it is also you being used in arvr development so yeah so c sharp is a multi multi uh like the general purpose program language it can do anything right so yeah this is a very basic introduction to c this is what c sharp is now let's get into the coding part all right so this is a very basic code structure all right so using system name space hello world then class program then static void main then console.writeline then console.read right so don't worry uh the if you are not able to understand what are these don't worry i am there right now i'll be coding this all right and after that i'll be making you understand what is this all right so here is my c sharp compiler right this is my c compiler so i'm going to write using system name space hello world right class uh let's say program public static void mean string args then console dot right line hello viewers sorry then console dot read let's run this program let's see what happens wait it's compiling the program cool now if i click enter the program will be finished so what did just happened man it printed something right it printed something in the console can you see it in here it's it's printing something right it's printing definitely it's printing so let's understand how is this working what are these gibberish right let's understand so by the way congratulations you uh coded your first uh program so let's get back to the notes so yeah first of all let's let's know what a directive is right what is a directive see a directive basically tells our program all right so not the program uh directive basically tells of a compiler what is the compiler compiler compiles the program all right we haven't set up any sort of local compiler because we are using our own online ide for coding all right so directives basically directs our compiler all right it tells our compiler that our program is using this name spaces our program is using this certain name spaces all right so what is the directive right see this using system this this using system is a directive this using system is a directive all right similarly there are others also like system.collections and all those things all right uh like you uh watched in the that uh unity video right in in that unity tutorial that there was uh using unity engine right so yeah there are multiple name spaces sorry multiple directives so yeah this directives basically this using system directive tells us all right this using system directive tells us that our program is using this system name space all right it is telling that to our compiler it is telling to our compiler that hey compiler i am your c program this person created me so i'm using this uh system name space are you okay with that and that compiler replied yes i'm totally okay with that because this uh using system is already predefined in my compiler code base right so i am totally okay with that we can run the program so yeah compiler happy our code happy that you are the code are happy right so yeah now as i told you about namespaces right see name spaces now they are basically a collection all right they are collection collection of whom namespaces are collection of whom i just told that namespaces are a collection but collection of whom see name spaces are basically a collection of other code properties you can say or other code structures right or other code elements all right so these code elements can include classes like see recurrently we only created our own namespace this is our hello world namespace it is containing a class right it is containing a class it is containing a program class so we certainly created our own name space right we certainly created our own namespace so yeah now we understood what are namespaces all right what a namespace says is see and uh if i have to repeat namespaces are a collection of code elements all right it is basically a collection of code elements it contains other classes other interfaces other enums other structure a structs all right so name spaces are a collection of those things all right see c sharp our c sharp is a programming language right c sharp has a large amount of code all right c sharp has a large amount of prewritten code that like the team who developed c they already wrote codes for us all right useful codes for us that we are using all right that we are using but can you can you tell that if the programmers if the programmers took all those programs and just put uh put it in only one file or wouldn't it be cluttered up like there are multiple hundreds like hundreds thousands code files wouldn't it be clutter up and now if i had to find one file then wouldn't it be cluttered up so what they did they divided those prewritten code into different namespaces all right see using system is not on is not the only namespace available all right there are many other all right so yeah so our code the like the c sharp the developers who wrote c sharp they they actually divided all those code all right so divided all those code into different uh name spaces all right uh the system namespace all right the system namespace that is available it actually uh contains the code all right codes for methods that allows us to do certain functions all right like if we want to print we can do that so uh i already told that we can actually declare our own namespace we even did we even did uh declared our own namespace all right we can copy this and create our another namespace all right i would show you how to do that and you know uh what are the advantages of using namespaces right see first of all one more thing if you are creating two or three your n numbers of name spaces it is really important for you to name it differently all right the namings should not be same so then if the first name is hello world or you may i mean your first name space name is hello world the second name space name should be hello priyanshu or any other name right or your name so remember that and one of the major things of like helpful things of uh name spaces are name spaces are two different environment you could say all right in namespace one see namespaces basically help us to prevent the conflicts name conflicts like see if we if we if i show you here all right if i if i create if i let's say if i created a same type of variable i know that you won't understand this as of now all right you won't understand this all right i'm pretty sure about that but don't worry all right don't worry i'm going to cover about variables comments and all those things now let's play it let's just play see see it is giving us error you know why it is giving us error it is giving us error the reason is that we are using at the same name the same name all right so in uh in c we can't use the same name all right we can't use so it's really important to give different names but but but if i had to show you all right we can declare we can give the same names in second namespace all that like this is one of our namespace right so namespace hello priyanshu all right this is uh another this is another instance i'm creating so class program can you see i am giving the same name in here right the same name in here now now let's let's try running it man let's try running it see it didn't returned us any sort of error it didn't why because namespaces you can think of namespaces are different environments actually they have the uh in there if namespace one has program and namespace2 has program the same names then it won't conflict it won't create any problem so yeah i hope you understand right i hope you understood this thing now uh we looked into the example right we looked into the example oh yeah one more thing i forgot to tell you that is that this this main method all right see this main method the main method you could see this is the starting point all right this is the starting point of our program the main method is basically the starting point of a program it's where our program starts all right if i if i give the same thing all right let me copy this and put it in here if i give the same thing in here where it didn't got printed or why is it happening wait copy paste all right it isn't pasting i don't know oh oh oh i got to know i didn't ended the program right sorry i'm really sorry about that i was like oh god now let's let's try running this and i'm sure you would get error see it is giving as error see it is writing program a dot out has more than one entry point defined do you know what it means it means that there are two entry points and main method is the entry point so in a program in a particular file there should be only one method alright there should be only one main method because it is the starting point of our program right because if we have if we give two main methods in diff two separate uh name spaces then our compiler will be like hey man which which main method should i go for i'm confused and because of that and because of that you you are very rude to me you gave me two main method i am really angry about that so i will what i will give you i will give you error and you won't be able to run your program so our compiler will tell this so to make our compiler happy to make our compiler work fine means to make our program work fine we need to uh provide only one main method in our but in our any in any of our namespace all right now no no no yeah oh okay okay i also forgot to tell you about these this too right my bad my bad so what see you have already seen that what this console.writeline does this console.writeline basically prints all right this console.writeline prints a statement but what what this console.read read does all right i have written it in here see the console.read all right it basically waits for a key press from the user before code seeing the console execution like if i execute it all right if i if i let's say execute i will show you all right i will show you now if i let's say i try doing something like editing this program can you see you can't edit the source for when programming is running you can you can't edit the source code when program is running means our program is running it hasn't ended if i press enter see our program ended now if i if i had to comment this download i know you don't know about comments don't worry or let's say i remove this i'll remove this particular code line all right if i remove this see i didn't even need to press enter it just uh exited so that's what our console.read does all right so let's let's get uh get an idea about our main method all right so what is it so see the main method in here the main method is basically the starting point or at the starting point of any of any of our uh c sharp program all right yeah so our the main method the main method in here the main method here is our entry point or the starting point of our c program right uh whenever whenever we run a program all right why did why did when we saw the example where we uh like added another added another public static void mean in in our second namespace why didn't it ran it didn't ran because there should be only one entry point of the program i already told you what would the compiler will feel if you give two entry points right the compiler will be angry it will be an insult for him i guess so so yeah there should only be one entry point all right one main method and also one thing that these entry points are called first all right than any other methods like if you define any other methods they won't be called first the first thing that will be called is this main method all right i hope you understand so yeah there's another parameter this string args all right if you don't know what a string is man don't worry i am there now i am there for you i am there for you to make you understand it is i i will make you understand this uh why what is this string args all right what is this string guy this is an array all right this is a collection it can take a collection of strings all right it can takes a collection of string if if you're not able to understand what is this don't worry next lecture is there all right next lecture is there for you after that lecture you will understand what it is what it does all right and i will recapitulate or recapture this particular portion in that don't worry so basically it can take this the string method can take sorry the string argument can take multiple multiple amounts of string data right and i already told you what this console.writeline is and what this console.read is all right so for the for today list for this lecture our our uh first first lecture is completed all right so our module three first lecture is done all right see ya bye bye see you in the next lecture thank you so hey folks uh this is model 3.2 and in this module we are going to learn about comments variables data types and type casting all right and in our previous module that is 3.1 we learned about uh c sharp we learned the basic structure of c sharp or all the very basics of means what is that using a system what is uh like we learned a lot of things all right what is console.writeline right so in this module we are going to learn about uh comments then we are going to move on to variables then data types and last but not the least and one of the important concept that is typecasting all right so without any further ado let's get started so what are comments alright see comments are basically uh some sort of statement or you could say some sort of keywords or something like that all right it has some sort of specific lines that is ignored all right that is ignored by the compiler all right you already know what a compiler is a compiler is uh is a tool that converts the code to a binary form right that that is or you can say machine understandable code right why it does that it does that because uh machines cannot understand english all right it can't understand our words machines can only understand binaries that is zero and one all right so yeah uh so what comments does is comment uh the comments basically all right these comments are basically ignored by the compiler they they won't run that particular line all right they they will just ignore that that yeah it is a comment all right why should we run that it's a you it's a useless thing all right for a compiler for a compiler it is a useless thing they won't run it because uh nothing will come out of that right so a comment is basically uh a comment is basically uh some some sort of lines all right some sort of specific lines that are ignored by the compiler all right and uh how comments are useful all right how comments are useful see comments are useful in a in a way right it is uh useful see uh as a programmer all right we have to uh make our code understandable all right uh because let's say i'm working on some project right now all right i'm working on some project and in that project all right uh the code is of thousand lines or two thousand lines or let's say even uh hundred two hundred lines all right now uh the code is being passed to another developer he has to work on it all right without any proper documentation or comments all right or we can't uh the the coder all right the new developer can't understand what that program is doing all right we have to like put a lot of time to understand the whole code but we can make that thing easier right we can make that thing very simpler we can comment all right we can comment the lines we can comment the lines right we can means we can uh sort of create small all right small documents or you could say small small lines or small paragraphs spot for that particular code like let's say uh currently we are developing uh uh ar app and in there we have to rotate all right we have to rotate that 3d model right we have to rotate that 3d model so i have written some code for that and in the top of that all right in the top of that code what i did i wrote a comment all right i wrote a comment that this particular code right this particular code is rotating the 3d game object all right it is it is rotating the object all right so if i'm passing the code to another developer then he won't have any problem understanding the code all right he won't have any problem so that's why comments are useful all right now let's let's try this out and also uh there are actually two types of comments all right single line comment and multiline comment so what is a single line all right single line comments works for only single lines all right like it if the line is one then it will be within line one only or it will uh if you are not understanding that don't worry you are going to do the practical all right so single line comments are basically uh they stay in one line already all right if you if you go to the next line that comment won't work all right that comment won't extend actually but this is not the case of with multiline comment all right multiline comment can help us in documenting also so multiline comments uh starts from a particular point or let's say we are starting that multiline comment from line number three all right and we are writing some multi lines all right we are writing some text within that comment all right in separate separate lines like you can see right in here all right right like you can see right in here we have taken three lines to write some content and in the in the fifth line all right we are ending it in the fifth line we are ending it so that's how we start a single uh multiline comment all right so to start a single line comment we have to give uh double forward slash all right and to write a multiline comment all right there are two things a starting point and an ending point all right the starting point is like forward slash star it is the start of the comment and to end that comment what we have to do is start backward slash all right i hope you understand right so let's try this thing out right before going to variables let's try this thing out all right so uh this is our code all right so first of all let's write some sort of code alright let's write console dot right line uh comments all right so this is our code right now let's try to run it let's run uh run this program see it is printing comments right let's let's uh try to give the single line comment notation all right see uh after i have given to forward slasher you can see the whole line has gone brown what does this indicate this indicates that this is a commented line all right this is a commenting commented line although the color will uh will be different in your editor if you are using some other kind of editor all right because this is the theme of it but don't worry about the color but it is highlighted all right when it is highlighted you are you will understand that your code is committed commented so let's run run it all right let's run it see it is not printing anything because it is not reading the line the compiler is just ignoring this particular line all right now let's try out something uh another thing can we add another line of code in the same same single line comment can we so let's try it out why not write it try it out right let's try it out and see so uh line two all right so let's try it out let's see that the single line comment is also ignoring the next one or not oh no it is not ignoring the next line okay do you know what what is the reason the reason it it works for only one line all right if if we give another set of uh forward slashes uh in line to comment means in the console.writeline line two then again it would perform its function all right but it is also like it's it is the task is also tedious to uh give every time uh the double slashes right double forward slashes so there's another thing all right let's say we want to give uh let's say we want to uh write multiline comment all right or you could say we want to write multiline things right so first of all let's give console.writeline comments all right console dot right line line two all right uh line two again uh console dot right line line 3 all right so let's try it out all right let's try it out let's run it see uh the code is running but we don't want the code to run we want to comment it all right we want the compiler to ignore it so how would we do that all right so simply give forward slash and star all right see uh as you can see here just as i have gave as soon as i uh gave this comment uh comment notation multiline comment uh starting point all right you can see it has highlighted all right or made the colors brown from where it started all right uh now we have to end it how would we do that so it's it's again as simple as that just start backward slash all right and you can see the commented portion is only brown right let's run it see the compiler is ignoring the codes it is as simple as that so i hope you understood what are comments all right comments are basically uh some set of lines all right that are ignored by the compiler that's it all right so now as we have understood about comments let's uh let's go for variables all right see variables are you can uh see variables are used to store some value all right variables in a programming language are used to store some value right so to see i won't be using any technical terms to uh make you understand about variables all right uh i would be using layman's term all right or you can say the simple term to uh make you understand about variables all right so first of all first of all think the variable as some sort of a container all right a container that can store something all right let's say uh uh let's take a common container all right let's say let's say a water bottle all right take a take and water bottle all right take a water bottle it is a variable all right for now think your variable as a water bottle all right and you are storing all right something in it all right what thing what is that thing that you are storing in that water bottle it is all right it is a liquid all right in a water bottle you will store some some kind of liquid doesn't matter what kind of liquid it is all right uh it can be a orange juice or a chocolate milkshake or a simple water right or it is a liquid all right doesn't matter what what liquid it is but it is a liquid right in the water bottle you are storing some kind of liquid all right and what liquid are you storing all right what is the liquid means is it water is it an orange juice or is it a chocolate milkshake so i want to store a chocolate milkshake in the water bottle right or even a simple water i can store water in the water bottle so you can you can imagine all right you can you can interpret this uh in technical terms how see the water bottle is acting like a variable or you can say a container because variables are containers variables are meant to store some value right variables are meant to store some value all right so variables are container and in our example a variable is our water bottle okay water bottle is our variable all right and the and we are storing a liquid right all right we are storing some sort of liquid in here the liquid is the type all that liquid is the type of the data we are storing all right see water comes in the type of liquid right we all know that chocolate milkshake also comes under the type liquid because it is liquid of course then orange juice also comes under the type of liquid right so we are storing some kind of liquid so that is a type or you can also say data type right we can also say data type right it is the data type right so water bottle is our variable uh liquid is our data type and and the type of liquid you are storing all right the type of liquid you are storing that is uh water or let's say chocolate milkshake that is the data all right that is the data we are storing in our variable all right or you can say in our water bottle so we are taking our water bottle all right we are taking some sort of liquid all right some sort of liquid is the uh chocolate milkshake i am storing my chocolate milkshake in the water bottle all right and the type of the chocolate milkshake is liquid all right so i hope you understand so variables are basically acts like as containers they are containers but in computer programming all right they are containers in computer programming right so let's uh to make you unmake make it more understandable let me show you all right see this won't execute of course this will give you error but let me tell you all right so this is the type all right liquid is the type water bottle water bottle right water bottle is our container all right water bottle is our container and the data we are storing in it all right the data we are storing in is is chocolate milkshake right so yeah here you can see this liquid is the data type all right this liquid is the type this water bottle is the container and this choco milkshake all right is our data this choco milkshake is our data all right and this is how right this is how we initialize all right or create a variable in our c programming all right this is how we create variable in many other programming languages too like java c plus plus so let's uh write a comment for it all right that is data type data type then we have to give the variable name right variable name then we have to initialize the data to it so this is how it works right or you can say if i remove this data only let's say type variable equals data as simple as that nothing too complicated all right so we are storing chocolate milkshake in our water bottle all right and what type of chocolate milkshake it is it is a liquid right it is a liquid so that's it right this is what variable is variable is a container nothing else so i i already show you how to de like what is the way of declaring a container right now let's try it out all right let's let's try uh actually initializing a variable right let's try out initializing a variable in in computing terms alright not and layman's term so it's simple first we have to give the type or you can say data type then we have to write the name of the variable all right let's say i want to store a number all right then we have to use the equals operator also known as assignment operator all right and we have to assign all right we have to put some sort of data in our case in this case the data will be number so i am trying going to put 12 in here all right and let's say it works or not so i'm going what i'm going to do is i'm going to print it out right i am simply going to print this thing out let's see what happens yeah so it has printed our number that we stored in a variable right so we created a variable that is storing the value right so that's great it's a good start actually so we learned what is a variable all right we learned what is a variable how to create a variable one more thing i would like to say is now you you many of you might have a question that we are creating a variable right like uh where do we store our water bottle all right we can we store our water bottle in our backpack all right or in in some place at our house right that's right right so where do we store this variable all right where this variable gets stored see uh in our systems we have random access memory all right that is ram all right and uh this some sort of all right when we create a variable some sort of memory is allocated alright what memory like how much memory is allocated in the ram we will see in the latest sections we'll learn about data type all right but it it allocates all right or you can say makes some space for the variables to store in in the ram so our variables and values are stored in the ram all right so i hope you understand all right i hope you understand the concept of variable all right if you are confused in some point you can comment it down all right so uh now it is there's a dialogue that with great power comes great responsibility right similarly with variables there also comes rules all right and we have to maintain those rules the very first rule all right the very first rule is that a variable name in shisha can only contain numbers uh letters numbers or underscores all right what that means is all right we can't create a variable all right uh let me let me show you actually in dollar num equals 12 or right let's uh try to print it out and you will see what happens all right see it is giving us an error that is unexpected character because the reason is c sharp doesn't allows a variable to have dollar in in its variable naming all right these are called naming conventions but we can have underscores all right we already have letters right we already have letter we can have underscore all right we can have underscore two all right so yeah of course we can also have numbers now here comes another rule regarding it all right here comes another rule regarding it all right so variable name all right variable name can't start with a number see here it is written that we cannot start a variable name with a number that is it we cannot write a variable name as three abc or two name like that all right let's try it out and see all right let's try it out and see if that works or not right so two num let's try it out see it is uh giving us an error that is unexpected symbol but but we can have uh numbers in between all right we can have numbers in between of variable names all right like n to um i know it's it's weird but we can have like this we can have numbers like this all right similarly we can also add numbers to the end of the variable all right we can also put numbers to the end of the variable see it is working perfectly fine right so we learned about two rules that uh we can only add letters numbers and under underscores during any uh naming convention already during the naming of any variable and also a variable can't start with a number all right although it can have all right it can have number in between the name of the variable or at the end of the variable right uh so the next rule all right the next rule we have is that we cannot use a reserved keyword we cannot use a reserved keyword as a variable name because they already have their own meanings and purposes to fulfill right now what does this mean see there are multiple keywords all right or you can say reserved keywords in uh in our c program just like we saw previously like using all right using system they are reserved keywords all right using is a deserved keyword class is a reserved keyword all right int alright in is a reserved keyword if is a reserved keyword all right console it is a reserved keyword so we cannot use any sort of reserved keyword during a variable naming convention right so let's try it out all right let's uh let's give it a variable name as if all right and just let's try it out what happens let's see what happens wow it has given some errors right it is giving unexpected symbol equals then um unexpected symbol f it would it will give because this is not the syntax of f right that's why it is giving the error uh unexpected symbol equals all right so yeah so you uh you learned that we cannot use any sort of uh reserved keywords as variable names all right similarly uh another thing is variable names are case sensitive all right what does this mean see uh it means that if you write a variable like this all right let's say uh if you write a variable like this name equals priyanshu alright see uh this is a string data type all right i would uh tell you what is this but don't worry for now i'm just showing an example and uh let's try to print it out all right so let's try to print it out and let's see what happens right so you can see that it has printed my name right but let's say if i write the name in capital letters all in caps all right all in caps can you can you uh can can you tell that will it uh execute the program execute in the sense of course it will execute but will it give any sort of error or just print priyanshu as it is written right now all right so will it just take your time alright just take a few seconds and think about it all right think about it will it alright pause the video and think about it so let's let's run it now all right see it is giving us an error it is giving us us an error why because there is no variable defined as in a me that is capital letters n a m e there's a variable defined as n a m e as small letters all right this variable is in small letters and we wrote it in capital letters so both of them are totally different all right both of them are totally different so uh always remember that the variable names that is uh the type or you could say not exactly the type uh just check that if the variable name is in caps or in small letters already because these are uh case sensitives all right these variables are case sensitives all right so we can't have like if we write a name in small letters and we are trying to print that name in capital letters means in capital letters is means that we are uh trying to write that name variable in the console.writeline in capital letters it won't execute because it would uh then it would search for another set of variable alright it would search for another variable whose whose text is in a capital letter and is written name all right so i hope you understand that we can't have uh like variables means we can have variables but uh they are case sensitive all right like uh because the see in this example this first name all right this first name you can see that the first is written in a small little the n is written in cap capital letters and ame is written in small letters but in in another is in another uh text it is uh the f is caps but but the other letters are in a small letter all right are in small so this this name and this name are not same all right both are totally different all right now as we have learnt about variable its rules all right now it's our time to get into the data types all right see it is a very important concept all right data types is a very important concept so uh try to understand it all right if you are not able to understand something all right you can comment it down and also i would suggest rewatching this particular portion all right rewatching the particular portion you i have not understood then also you have you haven't understood you can comment it down and i would uh surely uh like to help you all right so yeah data types right see uh i already told you about an example right previously the water bottle example that the liquid is the data type or you can see the type of uh the value right similarly data types are also the same thing they they specify the type of a variable already specify the type of the variable all right the type of value it can store right so the very first data type we have is in all right so basically the int is basically a short for integer all right uh and it has a range all right it has a range of minus 2 1 4 7 4 8 3 6 4 8 2. two one four seven four eight three six four seven all right what this means that it has a range of this to this all right it has a range of this to this if we exceed that value all right let's say if i write 2 1 4 7 4 8 3 6 4 7 then it would return a error all right let's try it out all right let's copy this value first all right um let's copy this value first and uh let's try that in our code editor all right so um yeah int val equals all right so now let's try to print it out console.writeline val all right let's run run the program and see it is printing right it is printing the exact value but but for now let's change it to two one four seven four eight three six four eight can you tell me will it print or will it like give us some error pause the video and think about it all right think about it and just uh tell me that will it print the value all right just pause the video and think about it so let's run the program and let's see my god it is giving us some sort of error why it is giving that error because the range is exceeded all right means we have exceeded the range of integer like here you have seen that the max means the negative range is 2147 483 648 right and the positive range is up to 2147 483 647 but in there we wrote 2 1 4 7 4 8 3 6 4 8 so it is having a plus one value all right it is exceeding the range that's why it is giving error so ranges basically tells us that how much value all right how much value the a particular data type can store all right and we also learned how to uh use integer as that is end as an variable right so another is long all right it is you can say it is a big brother of int alright uh it also store integer value all right that is means nondecimal values you could say or you can also say integer values all right so it has a more higher range all right this long all right that's long has a more higher range than in all right so when you need more values to store all right when you need more values to store that is higher range of values to store then you should go for long all right like let's try out the same example right we like here we see that we put some uh using int it exceeded it uh its range right because the range was up to two one four seven four eight three six four eight right but let's try the same thing out with long will it exceed let's see no it won't it won't exceed do you know the reason the basic reason behind it is because the range of long is much much bigger than off integer all right it is really the range is very much bigger than integer right uh another thing all right as you can see in air basically uh we can also add a suffix all right we can also add a suffix l all right we can also add a suffix l in here and it is not mandatory all right it is not mandatory but it is recommended to add the suffix l all right it is recommended to add the suffix l all right so uh yeah now as we have understood about uh long all right as we have understood about long it is now a time all right it is now time to understand about bite so we are going to learn about uh byte right so another thing uh before going to buy it all right another thing i would like to suggest is whenever you are writing all right it means this suffix l all right in the long whenever you're writing this always remember that to use capital all right capital l there's a very uh specific reason for that because many people what many people does is they gets confused with a small letter l and one it's sometimes uh confusing and even c sharp uh recommends to use a capital letter l all right to use capital letter l in spite of small literal or all right although it will give a warning if you if you use small letter l but uh there won't be much uh issues with that but it is recommended to use capital letter l in spite of small letter l in the suffix of long all right long data type so uh let's get into the byte all right by data type see byte is also uh so uh sort of integer only all right it also stores uh integers but the byte all right bytes range is really low all right byte has a really low range all right byte has a really low range so uh the range of it is from 0 to 255 all right it is it is the range of byte so if we try it out all right if we try this example out alright if we try this example out so basically if we try this example out that is byte all right byte val alright now if we give value uh exceeding already if we give value exceeding 255 that is let's say 300 all right and then try to print console dot uh right line all right val so let's see what it does all right let's see what it basically does let's see all right so it is giving us some sort of error why it is giving error all right why it is giving it it is giving us error because we exceeded the limit all right now if we give something under the limit all right that is between the uh 0 to 255 all right let's say we give 255 only all right if we give this see it is working perfectly fine so yeah that's what byte is it has a low range but it is an integer data type all right similarly we also have other data types all right now we are going getting into the floating the point data types or you can say decimal data types alright that these are the data types that has decimal decimal places all right these data types has decimal places so the very first data type we we will be learning in uh in decimal places uh all right uh that is floating point numbers or you can say float all right so float is a data type all right which can have a decimal means which have decimals places in numbers alright if you want to store the uh some value in points we can't store that in integer of course right so we have to use some sort of data types meant for it so similarly there are three data types all right meant for uh storing uh decimal placed uh values that is float double and decimal all right so the very first thing we are learning is float all right so floating point basically float refers all right to floating point numbers all right and they have decimal places in the numbers all right just like 1.34 then 5.64 all right these numbers have decimals decimal places and them and uh if we talk about the range all right the the float has a range of plus minus 1.5 into 10 to the power minus 45 all right 2 plus minus 3.4 into 10 to the power 38 all right so this is the range of float all right and also float uh uses eight bytes of storage all right and it has a precision of about seven digits all right so basically um it has a precision of seven digits all right what that means is it mean that if you are storing a number like one point two three four five six seven eight nine all right if you are storing a numbers like this so it will be rounded off all right it would be rounded off to 1.2345 678 all right so it would be rounded off to this all right so let's uh learn how to initialize this float variable right let's learn to do so so float all right float value equals all right float value equals let's give some sort of uh decimal value that is 12.5 and also add a suffix f all right then what this suffix uh f does is it tells that it is a floating point value now by default all right by default the val the decimal value is all right the decimal values are in double all right are in the format of double so it is always recommended to give f in the uh back off float uh float numbers all right floating point numbers so val let's try and print it out all right see it is printing 12.5 now let's try it try it out without the f suffix all right let's see what happens it is giving us error the uh the reason is because the the means these decimal values all right by default these decimal values by default are in uh double all right are in the type of double so it is always recommended to uh you uh add f suffix at the last of float variables right so that's what it is all right so as simple as that so yeah let's uh let's see all right let's see other data types too that is double all right let's see double so as we have learned about float all right it is uh a really great data type to be used all right another is a double all right it has a higher range all right this double has a higher range and a good precision all right a good precision so double all right what is a double all right see double is also our data type and uh it is a 64 bit all right it is a 64 double precision floating point type all right and uh it has a precision of 14 to 15 digit all right it has a good precision of around 14 to 15 digit and also all right also to initialize a double variable we have to use the suffix small d or capital d all right similarly in float also we can use capital f but i use small f all right okay uh so here in the example i guess i did a mistake uh i would fix this issue all right here you can see in the example i give float num equals 12f but don't worry in the in the final note that would be that you would be getting all right i wish i'd be fixing this issue all right but for now uh i will show you the actual example all right i will show you the example i'm really sorry about this mistake but uh in the actual uh note this issue will be fixed all right uh so the range all right so double has a range of uh plus my uh plus minus 5.0 into 10 to the power minus 324 2 plus minus 1.7 into 10 to the power 308 all right so let's try it out let's try this double all right let's try this double out so in let's get to the editor of course all right and let's write double all right num equals 12.5 all right d okay and then console dot log oh sorry not console.log i'm always writing this thing because in the unity it is uh to write any sort of comment we do debug.log so it's like uh it it is habituated to me so um yeah so let's try and print it out all right let's see if it gives any sort of errors or runs seamlessly so we can see that it has rams ran seamlessly all right so we have learned about double data type all right we have learnt about float we have learnt about int we have learnt about long we have learnt about byte we have learnt about float we have learnt about double now it's our time all right it is now it is our time to understand this decimal all right let's understand this decimal data type all right see decimal is another floating point data type alright where you can store decimal values all right even the name suggests it so but all right but this data this decimal all right this decimal uh has much greater precision all right than any other all right that is a float or double all right the precision of float and double is lower than decimal all right so the decimal has better precision all right it has a greater precision that is of approximately 28 to 29 digits all right approximately 28 to 29 digits so this double uh this decimal data type all right has an uh greater precision of approximately 28 to 29 digits all right and it is recommended all right it is always recommended to use the decimal data type all right in spite of double or float if you want a greater precision all right if you want a greater precision then you should use decimal all right but the range but the range of decimal data type is uh lower than that of double and float all right so it has basically a range of um plus plus minus 1.0 into 10 to the power minus 28 to uh plus minus 7.9228 into 10 to the power 28 so this is the range all right this is the range of decimal data type all right similarly let's um try it out let's try it out in our code editor all right so um it's very simple i already included uh the definition right and also the example all right nothing to uh to complicate it in here so decimal decimal num equals 25.5 d sorry the suffix will be m not d i'm really sorry about that so the suffix will be m all right so the suffix for decimal is m so this is how we write a uh initialize a decimal data type all right this is how we do it so now as we have learned about uh decimal data type now it's our time to learn about three other data types all right that is cad bool and string these are very important data types all right all of the data types that i am teaching you all right all of them are very important for you to understand all right so care all right cad data type what does care all right what is care actually care is a care basically stands for character all right or you can see letter all right a particular letter all right it's like like uh like a is a particular letter or a character like b like c like d all right so these are characters all right these are characters similarly if you say have to all right if we want to define any sort of character in our program how do we do that all right how would we do that it's pretty simple all right it's pretty simple just to write care all right also i'm not changing the variable name i'm going to keep it numb only right or let's change it let's change it all right and let's say i want to store a character all right called a alright and if i put ch all right now i want to print it all right so let's see it gets print or printed or not so here it is being printed one more thing or there are some details that you should look out for first of all all right if you are a character alright a character data type can only store only one letter all right it can't store a b all right abc it can only store one letter all right another thing you have to uh put in your mind is that whenever we write a character we have to enclose that particular uh letter in single brackets like just like we did in here all right so similarly let's try another out that is b all right and let's run this program all right see it is printing b all right now what if all right if we what if we try to add multiple all right add multiple uh letters in it so here you can see it is giving us error because of course this is a single this can only store a single character it can only store as uh uh like only one only one character all right so that's we are giving it to it that is only one character so remember uh if you if you want to store only a single character then always go for care all right now our next all right uh let's see what is our next yeah our next topic is bool all right see bool uh is stands for boolean all right it is the short for boolean so bool data types uh can only contain true or false all right true means on all right true means it is executable all right true means uh it will work it true means on and false means off all right you can say it is off right right so if you take an example of a circuit all right or you can say your lights also all right your lights also so you have a switch in your house all right to turn on the light so when you turn on the light all right the value of that particular switch is becoming true all right or you can say the value of that particular switch is becoming on and because the the value is true alright because the value is true the current is flowing all right the current is flowing through the circuit and lighting and putting the lights on all right and and it is putting the putting the lights on similarly if you turn off the switch all right similarly if you turn off the switch then the value of the switch will be false and no current will pass through it all right it will just terminate so that's what true and false is in terms of programming similarly how would how can we uh basically um how can we basically initialize it i have also given you example also all right and i will also show you how to do that all right so bool is running so am i running no i'm sitting right i'm i'm sitting right so if i print it now all right if i print it now let's see what happens see it is uh printing us true that the value is true right that the value is true now if i if i turn it false that is yeah i am running then let's say what happened it is printing false see we uh we will understand the use of true and false all right this true and false in further lectures already because we'll be using this often uh especially in the if else all right in the if else and the development so you at that time you will understand the use case of bull and how important is it all right now similarly we have another alright string now previously uh you might think that it is also similar to care and it is somewhat true all right see a string all right a string is basically collection of characters all right the thing that we can't do in cad data type we can do that in string data type all right string is a collection you can say it is a collection of characters all right every letter in here is a character p is a character r is a character all right and we are able to contain it all right you can say ah we are able to unite them in a single variable all right that we can't do in character because it can only store a single letter right so that's what a string is string can store multiple characters in a single variable all right because it is a collection of characters all right let's try out string name you can write your own name all right my name is priyanshu all right so oh also i forgot to give the semicolon this happens a lot and then name let's try it out and see what happens see it is printing priyanshu it is not giving us any sort of error just like the candidate when we try to store abc right so string can store multiple characters because it is it can store a collection of characters all right so another thing already that is noticeable in here is uh whenever you are writing a string or that whenever you are using a string you cannot use uh single quotes alright you you should only use double quotes all right so whenever initializing a string remember to uh enclose the characters or you can say the let uh means the word all right the word that you are uh assigning in the string string type variable all right remember to enclose them in double quotes all right just like we did in here all right so yeah now it is our time alright it is our very time to understand or you can say learn all right it is our very time to learn uh about strings in depth all right because strings is one of the most important concepts all right in in programming so let's understand it all right the very first thing we are going to learn is concatenation all right what is concatenation all right see concatenation is uh nothing too much of a complicated thing all right it is a really simple thing all right see concatenation uh is basically the joining all right it is basically the joining of two strings all right concatenation means it is the joining of two particular strings all right that is what concatenation is so let's try it out practically right let's try it out in our code editor all right so see here we have the name right i'm not going to edit anything in it just i'm going to add some another instructions to it all right so add a plus in it all right add a plus and all right and then add the title all right that is rg all right this is my title right also i would like to give a space before bhattacharjee because then it would add some space to it then let's let's try to print it all right see we i am able to print my full name and we have successfully concatenated all right see uh you might think that hey man this ad is used for adding two numbers right we can use this ad to add two numbers right we can use this ad to add two numbers means addition operator but if we talk about in terms of strings alright if you talk about in terms of strings then this uh add operator becomes a concatenation operator right means it is used to uh concatenate two strings into one all right uh this is what this addition uh operator does in terms of strings all right as simple as that all right so yeah now as we have understood about concatenation concatenation is nothing but but the joining alright the joining of two different strings all right now here comes some very important uh string methods all right it is very important to understand all right so let's see see uh this uh length method all right it basically tells us what is the length of the string all right it basically tells us what is the length of the string let's try it out all right let's simply try it out let's uh see we are going to do it with a very simple string alright that a string that doesn't has a lot of characters all right so let's take a b c all right see this we all know that this this particular string has three characters right this particular thing has three characters so let's try to print the length of it and let's see what happens wow it has given three now let's add another all right let's add another character in it and let's see what it or what it does so as you can see it in here that it has printed four so our length means the strings length is four of course so that's what the length does all right and this is going to be really helpful in our further sections all right even in the development so always remember to go through these notes all right after watching a particular lecture all right so always go through these notes to clear your concepts again all right or you can say revision of your concept now here's another function all right that is equals all right what this equals does see uh this equals will just compare one string to another all right it would just compare one string to another nothing uh too much in here all right it would just compare one string to another all right so let's try it out in here right uh i give it uh let's write another string alright string name two all right equals uh let's say dc ba right and let's try to use this function all right how to use this function first of all select alright select a variable all right that you want or to compare to all right so i'm going to select name as my parent variable on it i want to compare name to with name with name all right so then you have to give name dot equals all right and then within the parenthesis all right within the parentheses of equals we have to pass the second variable that is name two all right and then simply print it out as simple as that all right guys uh sorry i had to change the ide all right the code editor i was using that is gdb compiler uh it had some server issues all right so now i'm using jdoodle all right and let's try to run this program again button jd all right and let's see uh what will be the output so here you can see false why is it false because of course of course dcba is not equals to abcd both are different all right now if we try to give abcd again all right let's say what will be its output see it is giving true why why is it giving true it is giving us true because abcd is equals to abcd both are same right so yeah of course now all right we are going to see two more methods or you can say two more functions of strings that is index of and element at but before that all right we have to be aware of the concept of indexing all right where uh where this uh concept comes in picture what is this uh what is that all right so yeah see indexing is basically tells the placement all right it basically tells the placement or you can say where the particular character is present in the string all right like it is it works sort of look uh sort of like a location in the particular string all right now in programming all right in programming indexing always starts from zero all right so remember the first character alright the very first character of the string all right the very first character of the string will always be zero all right will always be zero now if we take uh take an example of abc all right and we want all right we want the index of let's say b all right we want the index of b so basically the index of b would be 1 how i already told you that the starting point all right it is the indexing always starts from zeroth position all right the indexing always starts from zeroth position so a would be zero b would be 1 and c would be 2 so the b b's address is 1 the a's address is 0 and c's address is 2. that's what indexing is it tells us the index or you can say the level location now there are two or two certain functions all right there are two certain functions available all right there are two certain functions available for getting the index and getting the index and the element present at the index all right see the in what index office does all right in the index of function we have just um pass all right we have to pass a particular um means a particular character present in the string all right and it would return or you could say it would give us the index all right the index position of the particular character all right let's let's try it out let's try it out it would be as simple as that nothing nothing too much complicated in here all right so now if i if i had to remove this weight yeah so what we have to do is we have to just write index all right index off and then let's say i want the index all right i want the index of c how would i do that all right before this pause the video and try uh okay it's giving us error oh i understood why it is giving error actually i use single quote uh single quotes i'm really sorry about that although ah the quiz is still on so you have to guess all right you have to guess or not even guess try to try to calculate all right try to interpret by yourself that what will be the output of this all right because we are trying to get the index or that we are trying to get the index of c or at index value of c from that string that is containing a b c d all right now let's execute it all right so it is again giving me errors i'm not sure why wait a definition for index of no instruction type code string all right wait oh sorry yeah as i told uh case sensitivity i uh i actually used a small letter i that's uh that's why i was like confused why it is giving error it would the cap the first letter will be in caps all right so the index all right so the index of c is 2 how if we talk about a the index of a is 0 because it is the starting point so of course it would be 0 then index of b is uh 1 alright index of b is 1 and the index of c is 2 all right similarly after this all right similarly after this there's another unlike that is element of all right let's see let's see sorry element at i'm really sorry about that so uh it got a rhyming so uh yeah so the uh this is the element that function what it basically does is see we have to pass all that we have to pass some sort of index value alright we have to pass an index value in it and and after we pass the index value let's say i pass uh from the a from abcd i pass 2 all right then it would return c because the at index 2 c is present right let's try it out let's try it out and you will uh you will also notice something all right now i will tell you what element at all right and we have to put the index value that is let's say i want the value present at index 3 all right let's see see it is giving it is giving some sort of error what error why is it giving that error see the reason that is giving the error basically in in the system in the system name space there is no dot element at function available right now to uh use this function we have to uh include another name space that is using system dot link all right and then if we run it all right and then if we run it see we got the element present at index 3 that is d all right now if i if i want element present at let's say 1 can you guess what in the index 1 which element is present pause the video and think all right pause the video and think and tell in the comments all right let's try it out let's see wow it is correct at index one element b is present that is uh at zero already at index 0 a is present at index 1 b is present right so it is as simple as that all right now uh i already told you about sys uh link all right so we used a system.link all right it is it is another namespace alright link is basically a part of system name space only all right and it contains the element at method nothing too complicated all right so till now we have learnt a lot all right we have learnt a lot about data types we have learnt a lot about comments we have learnt a lot about variables right and the lecture has almost crossed one hour point all right so now this is our last all right this is our last topic of today alright last but not the least because there are many other topics available that is operators loops conditionals and etc so now this concept all right now i also have a homework for you that you guys have to do all right i won't show you how to do it all right i won't show you how to do it but you have to do it by yourself already because after this type casting i'm pretty sure that you would be able to solve some like a problem uh only one problem means i would only give you one problem and i think you will be i think you will be able to solve it already so see sometimes alright sometimes it is really necessary for us all right to change the value already before assigning means to change not the value but the type of the value before assigning all right let's say if you if we want to assign already if we want to assign a floating point value to our integer of course of course it will give us an error right of course it will give us an error because of course we can't store a floating point value alright we can't store a floating point value in all right we can't store a floating point value in our integer right in our integer right so we we have to convert it all right we have to cast it we have to convert that uh type that typed value right that float type value so let's try it out all right so typecasting is basically changing the type of the value before assigning as simple as that all right so let's take another thing that is int val alright end val equals 23.2 all right if uh uh of course we have to uh add f suffix if we are going to add floating float float type value all right and let's try to print it out all right let's see it uh it works or not so val all right let's see it works or not oh my god it has it has given us some some error right constant value cannot be converted to a end right because of course it can't be converted because because uh a compiler cannot convert it by itself we have to give some sort of instruction to convert it right so how would we do that as simple as that we have to convert it to end right so before uh assigning the value all right like you have assigned this value before that give a parenthesis all right and give the data type you want to convert the value to so it currently uh this value is in float all right this value is in float we want to convert it to end to store in the in data and variable right see it has stored basically what is happening is it is removing that uh value from the point all right from the decimal it is removing that value all right and it is storing the exact value all right so this is what type casting is now all right now another thing i would like to show you is we can also do this with the variable also all right let's let's um create a variable all right that is float fl i have given any name i i could have imagined it all right so let's give 23 point or let's say 24.5 f all right so let's give that all right and whatever i do is i will remove that value and instead of that value i'm going to put the variable all right i'm going to put the variable and let's let's remove this end also first try without converting and then let's see what will be the output right i'm trying to assign a float value in the integer see it is giving all right cannot implicitly convert type float to int all right and xp and explicit conversion exists are you missing a cast see the compiler is so kind that it is also telling us what what can help us fixing it all right so what thing can help us fixing it right so let's do it so open the brackets all right open the brackets and we are going to typecast it that is end all right we are going to type cast it to int all right and let's say it works or not let's see wow congratulations it has worked it has worked right we we have successfully make uh the floating point worked right we have successfully typecasted now now here's a task for you all right here's a task for you you have to convert an integer to float all right you have to convert an integer to float this is your task all right after after watching the video you can surely complete it all right it is as simple as that it is not that complicated task right so for today all right for today's lecture for a module 3.2 we have come successfully completed this lecture all right and in the next lecture we are going to learn about operators all right uh it is really important to learn about the operators so next lecture is on operators hey guys welcome to this lecture and in today's lecture we are going to learn about operators in shisha all right this particular topic is very important for us because whenever we'll be uh coding any solution or let's say we'll be solving any sort of problems all right or maybe coding our own uh mechanisms in augmented and virtual reality we'll be needing operators on a highly basis because this is the very fundamental concept all right all the operations that we perform within a program happens only because of operators all right because for example whenever we are assigning some value to a variable right when we whenever we are assigning some value to a variable the assignment that is the equal all right the equals to option uh or the equals to sign is called assignment operator yeah that is also operator or let's say for another example we let's say we are multiplying all right we are multiplying a particular speed all right to time dot delta time all right i'm just taking it as an example we will be covering time dot delta time in future videos whenever when we will be uh learning to code in unity and uh we'll be developing our ar applications all right but for uh time being just understand this uh there's some function that is time the delta time and we are multiplying uh the speed variable all right the speed variable with the time dot delta time all right and the you know the s means the multiplication sign all right that will be putting in there that is also an operator all right so operators are everywhere in program so it is very important for us to understand the concepts of operators all right so basically what are operators see an operator is basically used to perform some certain functions or calculations within the program all right for an example assigning some values to a variable all right uh just like an equals to operator or as i said the multiplication operator is there to multiply right so similarly we use operators for multiple tasks all right and in today's lecture we are going to see that now the there are multiple types of operators all right there are multiple types of operators there are majorly five that is uh arithmetic operators relational operators logical operators assignment operators and bitwise operators in this lecture all right uh we are going to learn about four the four of these operators all right that is arithmetic relational logical and assignment all right we won't be needing bitwise operators as of now so that's why i am not teaching it but uh if you want i can bring a whole lecture video on bitwise operators all right because uh to understand bitwise operators you need to understand binary operations all right how how we perform binary calculations because bitwise operator shifts those binaries right so that's why i'm not including this uh bitwise operator concept uh in you know in this lecture so in this lecture we are going to learn about only four of these and uh all right so let's start with our very first operator arithmetic all right so see the use all right the use of this operator's operator is only available in its name arithmetic means we use these operators to perform some sort of calculation all right we use this operators to perform some sort of calculation the calculation can be anything it can be division it can be multiplication it can be addition it can be subtraction all right and we are going to look into that so here are all the operators listed in you know in a table that is the plus operator it is used for addition of values you can do it like this a plus b equals 10. similarly there is subtraction then there is multiplication right then there is a division all right you might this might seem a bit unfamiliar all right means of course there's a percentage sign all right but in terms of programming we don't call it a percentage all right in terms of programming we don't call it a percentage we call it a modulo operator all right we call it a modulo operator all right a modulus what this operator does is this operator gives you the remainder all right it gives you the remainder of any division right like for an example divide seven by two all right there will always be a remainder of 1 all right so that's how it gives us the remainder of you know a particular calculation right and here uh in the last two these are unary operators the what these basically does now this plus plus sign increments value all right increments value with one let me uh make you understand this plus plus sign all right we'll be incrementing the value as 1 and this negative means negative negative that is double negative this will decrement the value all right this will decrement the value that's it now to you know understand it more all right understand it more wisely more carefully let's do one thing let's uh do a practical on it right so i'm going to open uh just uh give me a second all right okay here is the editor so i'm just going to open it all right and uh what i uh first the very first thing all right what i wanted to do is declare two variables all right that is the uh first variable i would like to be you know um let's say eight and uh you know the second variable let's uh be it four all right now i'm going to perform the calculations you can see there are two ways to perform the calculation you can create another variable that's in c equals a plus b all right another way around is um you just directly print it all right just directly print it that is a console.writeline a plus b alright both will do the same task but the difference between them is in here you are just printing you aren't means in this particular line you are just printing all right you are just printing the adding additive value but when you are assigning a variable and then uh doing addition in it just like uh like just like this all right what you are doing is you are storing the addition of a plus b that is addition of a and b in another variable c all right you can surely do that let me uh let's do it that way all right that would be better so here you can see all right here you can see that we are performing the addition now let's see it's uh is it even working let's start up yeah it's it's perfectly working what is the addition of eight plus four it is 12 and we got it right now now uh let's try out uh you know subtraction so to do the subtraction it's very simple remove the addition operator and put that minus operator all right or you can say uh in your keyboard there would be a dash put that all right it is called a minus operator and you can see 8 minus 4 is 4 right now let's do another thing all right let's multiply it all right let's see see eight forza is 32 so multiplication is also working now let's let's try out uh division okay uh before uh doing the division operator i want you to pause the video and do the calculation by yourself without using any program uh let's see if you get that get it correctly or not see yeah four to the eight so uh that uh outcome is two right so that's how it works alright so till now we have seen four operators or which one is uh means which are those addition subtraction multiplication and division now let's see all right let's see the remainder operator all right can you guess what would be the remainder of like what would be the output of this particular calculation just give it a thought all right do it manually all right and then again continue with the video it's zero because uh when we divide eight with four all right it's completely being divided all right the division is being completed so remainder is zero now let's say if i give uh let's say for now i remove eight and gave nine let's see the output is one because there's a remainder remaining all right the division is not being completed so that's how this remainder operation works all right it's fairly simple so we saw about uh you know addition subtraction multiplication division and remainder now there remains two more operator all right and those are called unary operator uh what that does is they increment or decrement the value all right see there are two ways all right there are two ways of using increment and decrement variables all right means a increment and decrement unary operators all right so understand it like this so now the basic see to understand unary operator all right first of all we have to understand what it does see unary means these increment and decrement operators now they increment the number or decrement the number all right means it will uh like if i let me show you by example only all right let's remove this particular uh particular calculation from here all right let's uh let's let's perform this increment operator on let's say b all right let's give b plus plus let's see what happens all right let's just see what happens so here you can see all right let let me show you again here you can see the operation is not working means uh i i promised you guys right that uh this particular plus plus operator will increment the value right let me tell you one thing it is incrementing now there's a whole round of concept behind it all right but before that let me show you by incrementing incrementing the value actually so give plus plus b right let's see if this works yeah it works but why didn't the first one work see let me uh let me wrap your head around it first of all the plus plus sign alright let me uh make a comment right in here all right see first of all understand all right this plus plus operator is always used for incrementing all right and this minus minus operator is always used for decrementing right increment means increasing the number by one all right means this operator will always increment a number by one and decrement means this operator will always decrement the number by one all right that is subtract one from the previous value let me show you something like this see our value was 4 right our value was 4 and now it as it has decremented by 1 it is 3 right so that's how increment and decrement works all right now the there's a underlying concept already there's an underlying concept behind increment and decrement operator all right that is post increment preincrement all right and post decrement and predecrement all right now what are those first of all let's uh let's wrap up our head uh around preincur increment all right that is the uh pre and post increment so first write it pre increment all right so what this does all right pre means first all right means that it it will perform the tax task first then anything else all right understand this way preincrement is that is it will be performing all right it will be performing the operation first means in our case the operation is incrementing so it will uh perform the incrementation first all right and how do we write it fairly simple plus plus first of all we would be giving this uh symbol plus plus and then write the variable name all right so that's how preincrement work all right and post increment is after all right after performing the operation all right now i know this might get a bit confusing and we write it like this all right that is b plus plus post increment now see let me clear this message preincrement preincrement what is doing first it is all right first it is incrementing the value then assigning and post incrementing or post increment what is it doing is first it is uh you know assigning then incrementing all right in case of this variable that's why that's why previously the b plus plus didn't work that's the reason because it or it has already first it has already assigned the value of b to the variable c after assigning it then it is incrementing all right that's the difference between pre and post that's the difference all right nothing else or else in both the cases value is being incremented just the difference is one is doing doing it first then assigning it and the another one uh what the other one is doing it is first assigning it then and incrementing it that's that's the difference all right so that's how this thing works all right now let's try it again let's let's uh try predecrement all right that is plus plus b all right now just guess the output alright let's let's not uh get b let's uh let's get a all right guess the output what will be the output it would be nine right because why because first of all it is incrementing then assigning the value increment uh increase incrementing by how much it is incrementing by one all right now let's again uh try out a plus plus let's see how that works see uh it is it is not showing that uh it has incremented but but our particular all right this particular value has been incremented right now i know you might not be believing me all right you might think what what is the proof all right and your question is right it's totally right all right so let me first you know uh let's comment out this line let me show you if this this particular function is even incrementing it or not let's see all right let's see so give a uh go to console.writeline and write a plus plus let's see so here you can also see that it is not showing all right that it is incremented right i know it might be confusing now let me show you another way around here is the variable i wrote this variable in here all right and again do a plus plus in here all right don't assign it to any variable just do a plus plus and let's see yeah it worked how how see it is not assigning any variable we aren't printing any variable we are printing a variable but we have we haven't assigned this increment all right we haven't assigned this increment to any other variable all right just like we did in the variable c we didn't do that all right did we we didn't so it just incremented the value it didn't assign itself so it it has not stored now it as it has incremented the value that's why we are getting nine so here you can see that this particular thing is working right it's totally working fine so the major decrement uh sorry the major uh you know difference between uh preincrement and post increment is that one works first and the other one works last something like that all right of uh means uh this that is the pre one all right the preincrement will increment the value first then assign it and the post increment post increment will uh first of first of all assign and then increment that's the difference all right so same all right same concept goes around the decrement all right that is pre decrement that would be you know minus minus b and post decrement would be b minus minus right so let's let's try this one two right first of all let's try uh minus minus b all right so our current value for b is you know c and let's print the c right see we are getting 3 because first it is being decremented then assigned now let's again try all right let's again try b minus minus in here and let's see if that works or not no it's not working because the value is already assigned and we are printing that assigned value now to check whether uh act in real all right in real if it is being decremented or not okay i guess i ran it by mistake so um let's go and give b minus minus alright and let's remove the c and let's put b in here let's see if uh works yeah it worked it did work so you can see that this post decrement also works so that is what p pre and post agreement is all right very simple all right nothing too complicated so i'm going to erase this program all right i'm going to use this program and go towards our next set of operators all right so we are clear with this concept of operators all right addition operator is for addition subtraction operator is for subtraction this asterisk is for you know uh multiplication this slash is for division this mod uh module or you can say percentage operator is for remainder all right this plus plus operator is for incrementing and this minus minus operator is for decrementing all right so i hope you understand how arithmetic operative works right now here comes our relational operator all right see again the meaning of this operator is already told in uh is already listed in its name it relation it tries to uh you know tell us that if there is any relation between the two values right now in this operator there are you know uh how many types are there six total six types is there that is equals equals not equals greater than less than greater than equals less than equals uh if you are you know uh i know most uh everyone uh if you uh means every one of you uh have experience with uh maths right i know everyone every single person of you and you already know what uh greater than equals does less than equals does right so let me make this thing clear to you see if all right if the condition is correct then it will return true if the condition is correct then it will return to if the condition is false then sorry if the if if the condition is not correct all right or the condition is wrong all right or let's say the condition is not matching then it will return false all right and uh these operators alright these operators are wide very widely used all right these operators are very widely used in if else operations all right if else for loop operations so we'll be learning those two so don't worry all right the main focus currently for us is to understand all right is to understand how these operators works so for that let me open my uh you know let me open this particular you know this uh editor and let's see our relational operator so let's give it a comment all right relational operators see there are total six operators you know who are those and let me show you what do they do all right let me show you so take two very uh variable that is in a let's uh it 12 and let's take another variable that is no into b and let's assign it 10 right now all right now do one thing write console.writeline rightline all right and the very first operator is equals equals operators now let's see what it will return let's see it's returning false why why see understand the concept behind equals equals this is a this operator all right this operator compares two values all right and if both the values are same all right if both the values are same then it will return true and if both the values are not same then it will return false all right so these equal equal to operator is used for comprising now as i have changed the value of v to 12 and also the value of a is 12. now let's see what it returns see it is returning true because the condition is true the condition means uh a and b is means a and b are equal all right a a is also 12 b is also 12. so that's what uh you know equals equals operators does now the second one for us was not equals all right it's the total opposite it will check if the value is equals to or not equals now let me show you all right a naught equals to b now can you guess what will be the output all right pause the video and think for a few seconds and uh you know try to answer it by yourself what will be the output so let's see it is returning us false why because the it is the the conditional is also is only telling us not equals to we don't want it to be equal all right it means if it if both the values are not equal to each other then only i will return true and if they are equal i will not i will return false now let's try to change the value to you know change the value of b to 10. now let's see it is returning true now we understood about equals equals operator we understood you know we understood about uh not equals operator what's next next is greater than all right next is greater than and less than operator now let me show you all right let's see a all right a greater than b of course you all know it will you know return false because uh sorry it will return true because of course a is greater than b a is 12 10 ah b is 10 now let's see yeah it is returning to now now you know let's uh let's uh let's give it 13 all right let's change the value of b to 13 let's see it is returning false right it is returning false because of course bro uh a is not bigger than 30 it means 12 is of course not bigger than 13 right that's where it is returning false so now let's let's back it up to 10 and let's try it again yeah it is returning true because 10 is less than 12 and 12 is greater than all right 12 is greater than 10 so same again let's try out a less than b all right of course the the condition has to be true all right means uh means this condition is telling us the truth a is not less than b a is not less than b that is false that that's why the output is false how can 12 be less than 10 it cannot be right so that's why it's returning false now let's say if i change the value of a to let's say five okay uh sorry yeah let's change it to 5 and let's see the output now it's returning true because it is returning to because the value of a is of course less than b because the value of a is 5 the value of b is 10 and 5 is less than 10 so that's how this you know this thing works now let's say all right let's give both the values you know equality that is let's make a to 10 b to 10 right now let's see it's returning us false it is returning us false because there isn't any option right because uh see that that means for these type of no for these type of values now uh less than equals and greater than equals comes in all right so we are going to see those uh operators now so till now what we did till now we learnt about uh you know arithmetic operators all right now we are going through relational operators and in relational operators we learned about equals equals not equals greater than or less than now uh here comes two more operators all right here comes two more operators less than equals greater than equals all right now let's see first of all you know let's again uh reset its value let's ab12 and bb10 right now in here it's very simple you just have to give a greater than equals b now let's uh try and run it here you can see here you can see it is returning us true there's no difference right you you might be thinking oh god what am i showing what am i showing it's just like the you know the previous one just like the previous uh greater than equal sign sorry greater than sign no there's a difference you just have to wait so here you can see it's returning true yes of course it will return to because 12 is greater than 10 now let's let's make it to 10 all right let's make it up to 10 let's see oh my god it's again returning false why that's because he has an equals to sign it the condition is telling all right if the number is greater than equals to some other number then only return true and if the condition means if that condition is not matching then return false now let's let's try giving 9 now let's see say it is giving us false right now let's again let's try less than equals it's returning as true because you know 9 is less than 10 now again let's give you know 10 to a let's see again it is returning as 2 because 10 is equals to 10 right now let's give 12 to a let's see it is a returning false alright because then the condition is not matching now condition is not matching it is 12 is nor less than nor equals to you know what nor less than nor equals to 10 so that's how this whole relational operators works i hope the concept behind the relational operators is clear all right now as we are very clear around relational operators let's understand the concept of logical all right see logical operators uh you know they are very simple to understand all right very simple some people like exaggerate it i've seen like some people uh exaggerated uh exaggerated it but currently in the beginning stage and operator and you know these or operators are very simple very simple to understand now logical operators what are they all right these type of operators now all right is used to you know um what can i say i'm not getting the right word these two operations have put put some condition between uh like you know another two condition all right i know it might get a bit confusing i will show you how to you know uh how this works right but for now understand all right it performs logical calculations all right understand it like this it performs logical calculation now you can see two ands all right that is two ampersand signs all right what this means we call it as an and operator what this means is in this example here you can see there are two condition that is a equals equals two and another condition is b equals equals four all right if both the conditions are returning true all right if both that is a equals equals 2 is true and b equals equals 4 is true then only it will return true let's say any of the condition in here let's say let's for example let's say b equals equals force is false but a equals equals 2 is true all right for example then it will return false that's how the and operators works all right so as we have understood the and operator let's you know let's uh try to code it right let's see how this thing works so first of all i wanted to remove this whole code all right now again right in here logical operator all right cool now here assign two values represent equals you know 10 and b sorry enter b equals again you know let's say 12 all right and now you know go to uh console.writeline and in here in here what you have to do is first of all first write one condition that is a equals equals 10 all right we are comparing the value of a to another value 10 all right now here comes the and operator now let's again do the same thing for b that is b equals equals to s now let's try and run it it is returning us true because both in here both the conditions are true now let's let's change one value that is let's change the value of b to 11 let's see so it is returning false so here the concept of for you know and operator is very clear that two or two means to get the and operator return true we have to make sure that both the conditions all right both the conditions which are uh you know using the and operator should be true all right so that's what the purpose of and operator is now another operator is or operator all right it's like if this doesn't works then we will work with these all right so basically what it means is let's say there are two values a equals equals to b equals equals to all right that is uh in our case alright in here b equals 4 right that means in here b all right for b it is false the condition b is false because of course b is not equals to 4 all right means b is 4 of course sorry i just you know uh confused you i i think so let's understand it this way see b is b right in here is 4 and we are comparing b with another value 2 right and of course 2 is not equal to 4 all right it is not so for this particular condition it will be false now for this all right that is a equals equals 2 in here the value of a is 2 and 2 equals equals to that is this but for this condition it will return true so as one condition is true it is going to return us true all right so let me show you so here you can see i already have it assigned that as a equals equals 10 that is 10 equals equals 10 it will be 2 and b equals b equals equals 11 but in our case b is 12 and in we are comparing it with 11 let's see it is returning us true all right now let's do this the other way around let's change it to 10 and let's um you know let's change the b to 12. again it is returning us true because you know one of the condition is continuously matching now let's say change you know change uh both the let's make both the condition and false and let's see here you can see it is getting us it is giving us false right so that's how this thing works that's how odd operator works now this not operator now it's totally different all right now let me show you not operator knight will uh it will you know reverse or you can say inverse alright invert the result all right it will invert the results now for example let's give a equals equals you know or 10 all right the output for this will be true right the output for this will be true now if we all right patch this particular uh condition means wrap this condition with the you know round brackets and put you know and put what is this called exclamation mark or you know not all right not operator in front of that uh condition and then run it here you can see that it is although the condition is true it is uh returning us false why because this this particular not operator now it is uh inverting the result now if if it is you know if it is resulting to you know false it will return us true all right so that's how this not operator works all right so till now we have uh we have learnt about uh arithmetic operator relational operator and logical operator now here comes the last one that we are going to learn all right this one is assignment operator all right see assignment operators are you know going to be very useful to us all right they are really going to be very useful to us and you got to be like you know very uh like you need to understand how these things work all right uh understand it carefully because sometimes not because of these operations that might like especially in this case this uh these uh three for uh for case of these three it uh gets a bit confusing all right so don't worry i'm going to you know understand uh make you understand this concept brick by brick all right so let's remove this all right let's remove this again comment it and uh let's give it a name that is assignment all right assignment operator all right very cool very great now create a variable and a equals you know let's uh let's give it five all right now here we used our very first operator which one equals operator all right how see equals is an assignment operator it's in its team only see equals is assigning a value to a all right equals is assigning a value to a that's how it is working right that's how it is working so equals is an assignment operator we learned about our very first operator right it's not very first but learnt about our first operator in assignment operator category all right now next operator is plus equals all right see i hope you remember we learned about uh increment and decrement operator uh plus plus equals operators also does the same thing all right but it you know it is more modifiable all right it is more modifiable it also increments the value all right it also increments the value but we can determine how much value to increment all right like in the previous one we are giving you know uh a plus plus and it was only incrementing the value all right it was only incrementing the value by one we weren't able to you know change it means if we wan how to do like if we use this we won't be able to increment the value with two all right it will only be incremented with one all right but with the plus equals operator what we can do is a a plus equals two all right and now let's let's print it a let's see it is 7 because 5 plus 2 equals 7 right now you know there's a more abbreviated it's not abbreviated there's a more expanded version of it all right let me show you a plus equals 1 all right a plus equals one okay so plus equals two all right it also has a uh you know big version that is a equals a plus two all right so basically this this would help you to understand how exactly it is working alright how this operator is working so pay attention carefully what is happening first of all it is performing the addition of a that is 5 plus 2 then it is assigning the addition to a to the variable a all right it is performing the addition on e then it is assigning that addition to the variable a that's how it is working all right so that's how this plus equals operator works all right now the next in our you know the so first uh first let's understand what we learned we learned about uh assignment that's equals operator now uh we learnt about plus equals operator all right now here comes minus equals operator this is the decrementing operator but is modifiable all right that is a minus equals 2 let's try it out see 5 minus 2 3 all right now you know let's uh let's expand it that is a equals a minus 2 again it's the do it's doing the same thing right just it is more expanded version what is doing it is first performing the calculation that is it is first you know decrement means decrementing the value by 2 then it is assigning it all right so that's how it is working now uh we learned about the three operators that is assignment plus equals all right that is equals plus equals and minus equals now here comes multiply equals now with the first chapter operators uh your i guess your concept might be clear but let's say if it isn't clear i will show it to you all right the syntax is something like this a asterisk equals 2 all right so what will happen it will multiply 5 by 2 5 with 2 sorry let's try it out see it is multiplying it now if we if we look into the underlying all right means uh the underlying logic it will be like this a equals a into 2 all right and you know 5 into 2 is 10 and then it is assigning it so that's the underlying logic behind it all right now as we understood this also there's another one that is divide equals a divide equals 2 so basically it will divide 5 with 2 now of course i don't want to divide 5 by 2 so i'm going to change the value to 4 all right let's see for the simplicity here you can see 2 4 divided by 2 is 2 all right now let's you know let's simplify it a equals a divided by 2. it's doing the same thing right first it is dividing then it is assigning as simple as that all right that's how this thing works now again the last one remains that is modulo equals let's see it it is returning 0 because of course there's no you know it's a complete division if you divide 4 by 2 right now let let's try it out with 5 now let's see is returning also because one because it is it is not performing a complete division right so that's how this you know this whole thing works all right so uh let me show you the abbreviated version of it also a equals a modulo 2 all right now you know let's uh let's remove this particular line and let's see if our you know our idea works or not see it is working right now let's change this value of a to 4 now let's see so here you can clearly see all right here you can clearly see we are able to do all the actions all right in the assignment operator and i hope it is clear how everything under you know under the hood is working right so let's get to our next topic all right and that is bitwise operators i'm just going to tell you the over like overall idea behind so you know let's see see bitwise operator works on uh bits and perform bit by bit operation all right now in here bit is binary all right so uh before rc the thing is you have to understand binary operations all right you have to understand binary hexadecimal uh octal operations before getting into bitwise operators all right because bitwise operators works on binary level all right and that's why bit by bit wise operators are fast alright so remember that remember this thing and uh i would like see i would like you guys all right after you are completed with the c topic i would really like you guys to do your research and learn about all right do your research and learn about bitwise operators more because it is one hell of an interesting topic all right so do that now here comes another topic operator precedence all right see operator precedence is you know a very interesting topic it's like the bodmas rule in maths all right it's like the body mass rule it maps what bodmas rule tells us all right first of all it is in bodmal's rule the associativity or you know the importance all right the importance is from left to right all right the importance of operators like in in the body mass rule the importance of all those operators start from left to right all right bracket of you know division subtraction multiplication uh sorry bracket you know bracket of division multiplication addition subtraction right so that's how it is means bracket has the very high importance and subtraction has very low importance all right and you know as bracket all right as bracket has very high importance uh the you know the calculations inside a bracket is performed first then other calculations are performed so these all right you know these all right these this is the whole concept of operator precedence so i would like you to go through this chart all right it's very important to have an understanding of this chart it's just that it is telling us all right about the precedence of operator all right that is how important an operator is and uh how much important is it from its next operator so it is telling us that all right and i want you guys to you know have an understanding of this all right so that's it for this lecture and i hope uh you guys are liking this whole series so make sure to press the subscribe button and more lectures are coming all right thank you in this lecture we are going to uh learn about conditional statements all right conditional statements in shisha uh the reason why we are learning is we we need to know how we you know uh drive our program all right means we how we drive our program to a certain direction all right and how do we uh drive a program to a certain direction it's by applying conditions all right it's uh you know it's just like that like when you know uh i guess you guys remember when parents uh used us to know uh tell us that uh we will buy you a thing if you bring 90 percent uh 90 marks in uh your exams like it's like that it used to know uh drive us to study harder to get that thing so that's how conditional works all right we give some condition all right and uh it works upon that condition that's what conditional are all right basically conditional uh statements now they help us to execute all right it helps us to execute some sort of programs all right some programs uh with respect to the conditions assigned to it all right now if the condition is true all right if the condition is true then you know uh a particular statement will get executed and if the condition is false it won't get executed all right so that's what conditional is all right so now uh first of all uh just let me rename this editor to you know uh conditionals um conditionals all right so yeah see there are uh you know there are three or you can say four uh conditional statements out there now let me list them down all right the very first one is if else all right or you can see if and else the next one is if else if and else all right the third one is inline if we are going to learn about that don't worry uh and the fourth one is switch statements alright or you can say uh switch case all right statements so ah there these are the four types of conditionals we have all right so now as we are clear with the like what conditionals are right we should you know get going with our very first you know our uh very first statement uh that is if and else statements all right see these if statements now it helps us you know it helps us to execute some condition already to use it helps us to uh execute some statement under some condition all right it's like that it's it's like you know uh let's say for an example um it's raining outside all right for an example uh it's raining outside or uh let's say uh how can i you know represent it um yeah let's say it is it is raining outside all right and uh you you want to take an umbrella why you want to take an um see the very first thing you are going out all right you see while going out you see that there rain is falling right and you are very sure as it is raining you want to take a condition sorry you want to take an umbrella with you right because uh it is raining and if you you know uh get wet in uh due to the rain uh it will you know uh it will give you fever all right you won't be well all right so you want to prevent it all right and because of that you are getting an umbrella so that you don't get wet right so in here can you all right can you guess what is the condition in here all right in this case the condition is rain all right how let me tell you see as it is raining you are taking the umbrella what if it didn't rain you won't be taking and taking an umbrella all right because of course dude it is not raining why would we need an umbrella we can walk freely right so the condition in here is rain and the statements that are being executed is will uh is that the person will take uh umbrella or he will not take daila all right so that's how it is working now to uh you know to implement all right the uh let me show or tell you about the syntax how we you know represent uh the syntax of ethernet i would uh like i would uh implement the example i told you all right i will do that right now just give give me a few seconds first let me make you uh you know go through with the condition the first thing is uh we have to give a you know first thing is we have to write if all right and within that if a condition goes all right a condition will go on and after that all right within the f block some sort of you know statement will be there statement in the sense some sort of program you have written or some sort of you know uh command you have written that would go on all right and let's say if the condition alright if the condition is you know if the condition is not satisfying or the condition is wrong then another set of already another set of statement will work on right so if the condition is not true then means if this particular kind uh statement condition is not true then this else block will execute now to understand it very you know uh very carefully let's code it first of all create a bool variable that is is raining and you know set it to false as of now or let's say set it to you know true all right that would be better now if is raining equals equals true what i want to do is i want to print i want to print that take your umbrella right let's see if it is working or not yeah it is working as it is raining all right as it is raining that's why we are taking our umbrella let's say what will uh what will be the outcome if we you know uh say false see it is telling us that your program did not output anything what does it mean it means that this if condition uh like you know here our condition is only that if it is raining alright if is raining equal is true then only execute this particular block of code all right or else means we haven't specified let's if if this is raining equals equals to condition doesn't execute all right let's say if it returns false then what all right then another block of code will uh you know show its you know uh what can i say show it's magic that is else block all right and what else block does is if any of the condition becomes false all right if any of the uh you know previous condition becomes false it will go to the else block all right and in the else block we can write okay just all right in the else block we can write don't take your umbrella right so now let's see as israel as it is not raining that is raining full fall so what is happening our code is telling don't take your umbrella all right so that's how if an else statement works it it helps us to drive a program to certain directions all right so it's like that it's it's just like the example i give you like the reigning example and you know the parents are uh like you know uh the parents uh giving us some you know some sort of gift like promising us to give some gift and uh they are telling uh they will only give the gift uh if we bring 90 marks in our exam so it it's something it is totally like that all right it's it's how we drive our code all right it's how we actually you know drive our code that's how this whole thing works all right so that is what it is now our next all right as this one is done right this one let's mark it down if an else is done we are clear with if an else statement now the next one all right the next one for us is if elsif and else statement right now see it is also similar all right it is also similar to um if an l statement just here comes another block that is else if elsif is also like you know if statement but let's say if statement doesn't executes it will go to the else if statement and if else if statement also doesn't execute then it will go to the else statement all right if the these kind of statements comes in real like comes really handy when whenever we are writing let's say uh solving some problem or uh let's say making our own ar application where we have to put some conditions right so this kind of statement comes really handy all right and they are used more oftenly all right they are used oftenly so make sure you understand it all right the syntax is uh you know very similar to the uh previous one you'd uh like just in between uh if and else block all right you have to uh write another block all right that is elsif and in here a condition goes on all right and uh within that uh condition we have to write and you know block and it would contain a statement all right it's uh it's like that now let's let's say uh let's take an example of voter voting age all right let's implement it let's uh take age let's uh currently my age is 17 all right as of now my age is 17. now for the very first condition i'm going to give is all right the very first condition i'm going to give is if sorry if age no is greater than equals 18 then only all right then only i am eligible to vote in india right then only i am eligible to vote let's say what if all right else if our age is less than 18 all right let's give another condition all right if our age is less than 18 and all right and age greater than right greater than zero of course uh a child all right who who like who's not even born he won't be able to you know uh vote of course that's you know that's ridiculous right so console dot uh write line and give not eligible to vote all right so yeah and in the else block we give console dot write line if invalid edge all right invalid age now what does this means all right let's first give it you know let's give the age 19 all right let's see which one will get executed see the first condition is being executed that means the if block is being executed why because e of course of course uh uh the age the age we specified is greater than all right greater than equals 18 it is greater than 18 right that's why we're eligible to vote now let's let's try out 17 right we are not eligible to vote of course because you see i am not 18 in india the minimum voting age is 18 and i am not 18 so how how will i vote if i am not 18 so 17 is like if you are 17 you can't vote right now let's try out you know four let's let's see if a four year old can vote or not no the fouryearold cannot uh can't vote now let's see if a zero all right if a zero your old kid can vote or not invalid age all alright because 0 is not an age right so here is the thing if else if and else that's how we use it all right that's how we use it and you you you are going to use more often when you will start coding your own ar or ar applications or games right or even uh like when you will uh you do go in competitive programming or solve problems you are going to use these statements oftenly all right so that's how you you know we use these statements all right so i hope uh you know the concept the concept of you know this is clear now we are going to you know do a bit of problem solving in here all right so for us uh there's a question all right for us there's a question let me write it down here first first of all let me remove all this you know uh this statement now let me you know write this question in here all right write a program to take certain numbers and if the numbers are if the number is divisible just to it if the number is divisible by 2 then we have to print divisible by 2 and if it is divisible by you know 3 then we have to print divisible by 3 all right else all right or else if none of the condition matches right then we have to print not divisible by two or three all right so this is a very simple program all right you learned about operators all right you know how to perform you know uh uh how to perform remainder operation right now let's understand the logic first all right to check all right if the program is fully divisible all right see to unders understand this if a program uh to to know if a number if a number is fully divided we have to make sure that the remainder is zero if the remainder is zero then only all right then only we say that that particular division is you know is valid or it means it is fully divided that's when we call like like for example uh 4 divided by 2 in this case the remainder all right in this case the remainder is 0 right but let's say again let's take an example five uh let's divide five divided by two in this case there will be one as a remainder and we can't call it divisible by five so divisible by two right so make sure that uh keep this in mind all right keep this in mind any pro any number that is you know that whose remainder is coming zero off like is coming zero after the division it is divided that by specific number all right so make sure you know that now you already know which which one is the division operator this one already this amp or this percentage operator or you can some module operator all right and to perform the division it's very simple let me show you first of all take a value that is end n let's uh as of now let's give you know let's give it 4 now if n percent is 2 alright that is we are how this is working we are taking out the remainder all right remainder by dividing n with 2 we are trying to take out the remainder then we are checking all right then we are checking if the resultant remainder is equals equals 0 or not if it is 0 then we are going to you know print console.writeline divisible by 2. similarly similarly we are going to do the same thing with 3 that is n divided in modulo 3 equals equal 0 if that works that then it is divisible divisible by you know um 3 by 3 all right now if if none of the condition works all right if none of the condition works then i want to print out not divisible by you know by both two and three all right so now let's check this out all right let's check this out and how these things works see as 4 is div as the remainder all right as the remainder of 4 divided by 2 is 0 and it is matching the condition that's why it is returning divisible by 2. now let's try try out 9 all right it is returning us divisible by 3 the reason is 9 is divisible by 3 when we divide 9 by 3 the remainder comes 0 and as the remainder remainder of the resultant division is 0 and it is equals equal 0 that's why it is returning divisible by 3 all right it's as simple as that now you know now uh let's uh let's give one it is not divisible by 2 not divisible by 3 all right so that's why in this block it is returning us not divisible by both 2 and 3. so i hope you understand how we exactly use if and else you know if else if an else statement all right and i hope it is uh you know uh clear so yeah let's uh you know uh we can conclude all right we can conclude that if else if an else statement is also done all right now here comes two other statements all right very important all right means actually uh see you are going to use inline if if you want to assign you know it doesn't have extra conditions in there like only one single condition means only one if actually let's let's you know write the program first all right let's understand the program first then you will understand what i am trying to say all right so see you can uh you saw the you know the syntax of if else statement it's a bit big right it's a bit big now inline if not is uh uh is basically now inline of a basically a shorter version of effects all right it's the shorter version uh of if and else and it is you know mostly used uh you know it is mostly used or you can say it is more convenient to use when you assign assign some value to a variable depending on you know some condition all right it's so you it's more convenient to use in there all right rather than using it any uh or for taking any input or something like that all right so it's uh it's uh it's very convenient to use those statements while uh you know being in the variable so make sure you keep this in mind right now if i talk about the syntax the syntax is you know pretty simpler all right first of all there's the condition all right after that there's a question mark all right then here's a value all right and it will be assigned all right only if the condition is true and then here comes the colon all right and this value will be assigned if the condition is false it's just like if an else statement right let's say you know let's try it out let's try it out let's create a string variable alright let's say string statement and let's uh give a condition that is 4 greater than 2 all right now let's give the equation mark and let's write 4 is greater than 2. all right else else what we can do is 2 is greater than let's say 1 or uh just uh give me a second just give me let's you know let's uh change this whole statement all right change it will uh actually confuse you a lot let's change this whole statement uh let's say if 4 is greater than 2 then you can say 4 is assigned all right else you can write 2 is assigned all right let's make this simpler so here you can see that what i'm i'm trying to say right now also let's print the statement to see if everything is working right or not all right now let's try it out see it is telling us 4 is assigned because this condition is true and if this condition is true then only the first one first one statement will be assigned if the condition is false then the second one will be assigned let's change this a greater than sign to you know less than sign let's see see as this condition is false that's why it didn't assign the first statement it uh rather than assigning the first statement it assigned the second statement so that's how it works all right so it's just like if an else statement all right just in you know abbreviated form so i hope you are clear with inline f all right this uh this statement is very simple to understand now let's mark it as done and here comes our last one that is switch case statements all right see switch case now it's like you know pressing some switch if you press a switch up certain perform will um a certain you know certain function will uh performed will be performed and if you press on the switch um another set of functions will be performed right it's something like that all right now you can uh say all right see let me you know make it simpler for you the uh i can say that you know the switch statement is uh you know very similar to an if statement all right just that all right just that it does not you know work with a range of values all right it's simple as that it it's just that it doesn't needs any uh range of value it doesn't works with that all right it's it's a switch case statement now it requires you know um a case all right it requires a case all right which which you know is based on a single value all right it will be based on a single value and uh depending on the value of the variable all right it will be it will switch you know uh it will turn it will switch to some statement all right and the program will execute the correct block all right i know what this definition you know uh this this wordings might get a bit confusing all right i totally understand already when if i was uh in in your place i would also have got you know confused now to remove our confusion all right to remove our confusion let's code it all right let's code it first of all let's understand the syntax so it's very important to for us to understand the syntax okay see the very first thing all right that comes to us the very first thing that comes to us is which one can you guess switch all right in inside that switch you know inside that uh switch statement we pass a variable all right you pass a variable that would work as our choice all right and then we start you know two uh curly braces brackets and then we write a statement that is no case ah wait case all right and in that we pass some value and we give a colon all right and we say that bro do something all right do something and now see this choice now this choice will work as this value now if this choice all right if the value of this choice is similar to this value then this switch case statement will work all right and then we you know uh give another statement that is a break statement all right i would tell you what that uh what is that all right and what happens if you don't put that in there now here comes another case all right that is yeah let's give another value to all right and uh let's again say bro do something all right do something now again break now after that here comes default statement alright default is basically this default statement will occur if all right this default statement will occur if none of the you know none of the value works all right means none of the case works alright so this is the basic syntax right this is the basic syntax of switch case now there's no need you know there's no need to get confused all right there's no need to uh be confused let's you know let's create a a simple very simple grading system right like uh let me make you understand the logic in here basically what it will do now it will tell us all right we have to tell that uh which grade we got all right and then based on that grade it will tell us that the grade is good or not all right if it is good if it is bad it will tell us that all right so that is what we are going to code so the first thing i want you to create a variable all right that is care ch and assign it like let's say first for now let's assign it some you know value eight right now here what you have to do is write the switch statement and here pass the ch variable it will be work as our choice variable that i uh told you about right and in here right case alright and in that case give a single uh you know single colons and write a all right then if you want you can indent it then you know console. right line what i have to do as the grade is a i'm going to save very good right very good because you know the grade is really impressive right so now after that after that let's uh give another case that is case b now again write console.writeline we'll just going to write good all right b is also g grade b is also no bad all right so as we have defined two grades all right you can you can you know give more such grades in there all right you can add c grade you can add d grade all right you can get add e grade you can add f grade all right but for now for this example uh this this one is enough all right so see now let's give default all right one thing you would notice that i haven't uh you know uh gave the you know break statement all right i would show you why i'm actually wait let me write the break statement first because what will happen it will be more easy to make you understand how how this break statement is working let's give the break to every you know every particular step or you can say case all right now let's uh try and run it see as uh the you know as a grade is a it is retaining us very good now try with b it is telling us good now let's try with c it is telling us default why default because uh we haven't defined all right kc we haven't defined case c that's why it is uh going to the default block all right it's also you know very similar to if an else statement there's just a you know bit of difference now let's try and remove this break statements from there all right let me show you what is it exactly doing now let's let's start with a grade so here you can see it is giving us all right it is giving us some error or it cannot fall through from one case label case a to another all right in general all right in c sharp it is giving us error in java if you would code in java or any other language you will find that uh they are not skipping like uh after they are as i've stated uh a they printed the case a then without the break statement they are going to case b and without the break statement in case b they are going to default so that's why we use break statement in here of course in shop it's giving error but in java all right in java if you don't give break statement it will print like every other statement in there all right so that's why i hope you understood the reason why we give break statements right so yeah so make sure all right so make sure you understand alright you understand this concept uh very carefully all right because this concept is you know going to be very very very very useful all right and always remember this break statement now it it it is a jump statement alright statement is a jump statement it basically breaks the execution of after some condition is met all right you can understand that it like that all right so break statement is just breaks the work work like breaks the working of the statement right so this is it for uh this lecture all right see you in the next lecture thank you have a good day guys welcome to this lecture and in this lecture we are going to learn about loops all right uh see this is a very important concept already because we are going to uh use loops a lot all right we are going to use a loop or like loops a lot because whenever you will be developing something all right you uh you won't be like uh like if you don't want to do everything manually right you can loop through it all right for example if you are um what can i say let's say uh if you are let's say you uh like created an array all right you create an array i know you you might you you don't know the meaning of array as of now all right but that's totally okay i would uh like in in the next lecture only we are going to discuss arrays all right and for arrays we are going to uh need loops all right we have to understand the loops to like work with arrays right so see we can use loops in multiple ways like for example uh let's say uh we want to apply some materials all right so i i'm taking an example all right in terms of er like the application we are going to make during uh like after we learn euphoria right so the basic all right the basic understanding of the basic concept of looping is to loop through something all right look through something loop uh see the formal definition all right for loop would be loops are basically a way to you know iterate over something for finite or infinite number of times all right so let's say for an example all right let's say for an example do you remember uh i'm not sure if this happened with you uh but this happened with me a long time back i was in like you know in class fifth and at that point of time uh i was in uh like i i learned my first programming language all right that was q basic all right in class fifth i learned my first programming language and uh you know uh i got punishment at that time i was like uh like you know very you know what can i say a very naughty kid i used to like you know disturb my friends and because of that uh what i got it was uh they the teacher punished me told me that you have to write something i exactly don't remember i think it was i'm sorry you have to write i am sorry a hundred times all right and uh you know at that point of time uh i knew how to use for loops right i i understood the concept of followup i understood uh how to use it so then it came to my thought let's why not see the teacher is you know teacher is trying to tell us that you know uh you have to write i am sorry a hundred times right and you know teacher just wants it a hundred times she didn't told me how to write like i have to write it manually or i can you know use some dynamic way like you using a for loop tighter to iterate over 400 times and print right uh print i'm sorry right so what i did is all right what i did i basically i uh use the technique of for loop all right to you know iterate hundred times i use the technique of follow titrate hundred times and print uh i'm sorry a hundred times all right it like it uh completed in four to five lines and uh after i shown it to the teacher the teacher you know scolded me a lot all right and then gave me uh then told me that you have to write i'm sorry 200 times uh for you know manually and after that i never tried tried this with any teacher all right after that actually i never got punishment from class six so it never happened so uh in class fifth this incident was you know was a very funny incident for me because that was the first time i actually used for loop to save myself from you know writing the whole thing so that's the concept of loops all right loop actually helps us to you know reduce all most of the work right like for example uh right now i can give you all right hey brother uh write you know hello world a hundred times all right so you right now you don't know the concept of loops but you are a very obedient student uh and you will start writing like a console dot uh right line all right hello world right you will be writing that uh a hundred times right you'd be writing that a hundred times all right and that that's going to take a lot of time right that's going to take a lot of time so what we can do is we can use you know a loop all right we you we can use a loop to actually do it for us a hundred times all right so that it uh the computer will only perform the you know the function we don't have to do anything currently we are doing it manually but with the with the loop we can like make our computer do the you know write the hello world all right so i will show you how to do that but before that let's understand what a loop so loops basically are a way to iterate over something for finite or infinite amount of time all right so you know first uh let's understand how many types of loops are there all right see there are um three types of lopez all right that is let's first write it down in here all right the first type all right the very common used is for loop all right then another one is while loop and the third one is very least used all right actually i really don't use this loop anymore like i don't need it all right but you have to you have to have an idea about do while loop right so me that's why i'm teaching it right now although i don't think you will also be using do while loop in your career yet uh but uh i i never use like you know whenever developing applications i never use do i loop it it never came handy to me whereas i used for loop and while loop a lot right so that's why uh i'm going to teach you all the three loops today all right and we're going to start with uh fall all right see remember the concept of looping is sim simple all right concept of looping is simple it just tells that we are you know uh repeating ourselves all right looping means repeating all right we or looping totally means repeating ourselves over something right so that's the concept of looping but there are three different ways to loop all right that is one is for loop another one is while loop another one is do value all right and i would tell you all right when to use for loop and when to use while loop all right so make sure to you know listen to this lecture carefully so first of all let's understand the syntax of follow the syntax of for loop is very simple all right so the first is we have to write 4 all right inside the 4 we have to give brackets and the first all right the first would be you know first statement we have to write is start then we have to give a semicolon then we have to give a condition all right condition that for uh how many steps we want to run means for for how many times we want to run right now the next would be alright the last one would be steps all right that is how many steps we want to take steps means how many you know let's say if we give step as 2 then let's say we are trying to uh print numbers from 1 to 10 right so let's say if we give step as 2 then it would only uh like you know if we start from 0 then 0 plus 2 let's say it would give us 2 then 4 then some like it would give us like this all right then inside that would be printing uh like it would we would be instructing the program to do something all right so this is basically the syntax of follow all right now i told you you know my story of how i was punished right now let's try to implement that punish like let's try to implement that all right so for you have to declare a variable right so i'm going to declare a variable within the for loop only so for i equals 0 yeah it's uh and remember that i'm starting the value of i from 0 all right then i want to go till i less than equals 100 i want to go till 100 then i have to give how many steps i want to increment all right how many steps i want to go with so i plus plus means 1 all right every step will be incremented by one now if we if we want to you know uh let's say if we want to increment every step by two what we can do is plus sorry plus equals two all right but for now plus plus is totally fine with us so now what you can write console dot right line hello world all right so teacher told us that student write hello world instead of i'm sorry all right so now let's see if uh it is printed hundred times or not all right so you know there's not really a way to you know we are not able to count it right so let's uh give a plus sign and you know add the i in here let's see now yeah so here you can see that it's starting from zero and uh it is going from hundred going up to hundred now here you can see as it is starting from zero the total number will be 101 all right because if one is starting from here then zero is another extra one so it will be 101 times all right so to fix that we can actually start the loop from one or what we can do is we can you know mark it uh like give the condition as i less than 0 then what will happen it would start from 0 and end up to 99 so it would be total 100 it will be total 100 times we looped all right so that's how we you know work with for loops so for loop is a way to loop through all right some sort of you know some sort of condition now always remember we use all right we use for loop all right we use for loop when we know exactly how many uh how many iterations do we want like right so for in this example we knew all right in this example we knew that we are going to need 100 all right we are going to need 100 iterations so that's what we did we uh go we did 100 iterations in the program to print hello world so that's when we use follow all right so now as we have understood the concept of for loop let's you know let's try uh writing some programs let's try solving some problem program right i want you you guys to try it first all right so pause the you know pause this particular video after i give you the question and try it by yourself then uh come to this video and see the solution all right so i'm writing a comment in here let's uh write a program to print table of a number using for loops all right so what you have to do is you have to code a solution all right which will be able to print table tab uh all right it will be able to print table of that number all right so make sure you do that and uh right now pause the video and try it by yourself it's okay if you are not able to do it all right it just needs some more practice after uh practicing you will be very familiar with the concept of following all right so let's try it out now all right so for i'm going to implement it so for c first of all uh the very first thing i want you to do is to declare a variable all right that is in n alright this would be the number all right that is i want to create a table of two all right so now what i want is for int i because i want to start from 0 all right and i want to end up till 12 all right and i plus plus why because we aren't skipping any step we are just incrementing by one all right we are just we just want one step each all right now create another variable all right that is int let's uh you know let's name it f all right and uh what you have to do is multiply all right this value of n all right with i see remember how this is working first of all in the first iteration the first iteration two is multiplied by zero and the outcome is zero in the second iteration all right how it is reaching to the second iteration which is reaching to the second iteration by incrementing this i by 1 all right so now in the second iteration i will be 1 all right i will be 1 and 2 will be multiplied by 1 and in the again in the third iteration it will be incremented and it will be go to 2 all right then again 2 will be multiplied by 2. so it will be working like this all right so i hope you understand how how this program will be working all right then console dot write line and print the value all right and also make sure you know write it like this so just wait in let n plus given asterisk in here all right and uh plus i it's it's just a you know i'm just maintaining a decrement here all right it means i'm just actually let's leave this thing all right we will try this one later on first of all let me show you if it is printing the table of two or not yeah it is of course printing so two zeroes are zero two ones are two two two the four two three the six two fours the eight two fives are ten two six are twelve and so on it is going up to two twelve twos at twenty four right so we have successfully printed the table of two now let's uh you know print the table of 12 let's see if it is able to do it or not see 12 ones are 12 12 to the 24 12 36 and it is going up to 12 12 144 so that's how it is working all right that's how our for loop is working first it is remember it is iterating till the condition is met all right and for us the condition is 12. we exactly know how many times we want to iterate we know that we want to alter it 12 10 that's how we set uh that's how we actually set up you know the condition so that it iterates up to 12 all right now for each iteration it is incrementing the value of i that is in the first iteration the value of i is 0 and you know 12 is multiplied by 0 and it is printed and in the second iteration when it goes to the second iteration the value of i is incremented all right the value of i is incremented and this 0 is changed uh to 1 all right so and then uh again in that iteration 12 into 1 equals 12 right so that's how this whole thing is working all right so i hope you understand how this worked right now i hope you know follow this uh the concept of followup is cleared because right now i'm going going to go to a while loop so make sure if you are not uh you know not clear with the concept of for loop make sure you uh practice it a little bit all right watch the portion of for loop all right the one i taught right now so watch that again practice for loop wallet then only go to while loop all right so make sure you do that so now let's uh you know remove this whole uh syntax thing and let's mark for loop as done all right now here we uh go to the follow all right so what is follow why look sorry what is y loop yeah see you can say while loop is a brother all right brother of for loop alright it is also used for looping all right but the thing is all right while loop all right while loop runs all right while loop runs till the condition is false all right it will run till the condition is false and this proves one of our concept that for loop is only used well the for loop is only used when all that for loop is only used if we don't know how many iterations we want all right that's when follow is used all right as simple as that all right so now let's uh you know learn about the syntax so let me comment this out all right so there's the basic syntax we have to you know first uh declare uh a variable all right it's better to declare a variable at first then you know uh write the while all right and in here the condition will go on all right actually this you know this variable is not a part of uh the syntax but i'm showing you because you would be needing it all right then curly braces and inside that you have to you know alright do something all right so that's that is what the syntax of fault while loop is all right now you know uh i told you about the whole hello world example let's you know try to implement it so first of all i want you to declare a variable all right in time equals you know zero it should start from zero all right and give it a condition while all right while i is less than equals hundred all right i is less than equals hundred i want to print hello world all right i want to print hello world now one more thing all right in for loop remember how we were incrementing the value right do you remember that how we were incrementing the value by i plus plus similarly in here also we have to do something and we have to do that after all our statement is done all right that is for now our only statement is sponsored our heart right line and at the end we are going to write i plus plus all right now i will i will let you know what will happen if you don't give i plus plus but for now all right for now let's see what happens if we give it all right let's see uh the basic example see it is you know printing hello world till 100 all right it is printing hello world till 100 and it is stopping when the condition is becoming false all right it is stopping like uh say uh like see when it reached 100 when it reached 100 after when it was go it was going to 101 as the condition is not meeting as 101 is greater than 100 it stopped looping all right so that's how it is working so let's understand first of all we declared a variable declared a basic uh you know a basic variable all right we declared a variable i then we created a while loop in the while loop there's a condition i less than equals hundred now this condition will be like what can i say this condition is responsible all right for executing this particular line console.writeline all right and then we are going i plus plus that is incrementing the value of i by 1 all right that's what we are doing let's say if we you know let's say if we uh remove this i plus plus let's see what will happen see it uh you know this uh particular website now sort of crashed for for a moment like it you know it uh not exactly crash but you know uh what can i say to freeze or it freeze for a moment all right and here you can see the val you can't everything in here is zero all right everything in here is zero and at the end has a error that range error all right range error max buffer length exceeded that's because only that's because we ran into an infinite loop all right means it it is a neverending loop it won't end ever all right that's why uh that's because we didn't give i plus plus the reason is what role is i plus plus playing is it is incrementing the value of i all right like for the first order for the first iteration it perform this particular thing then we are incrementing to one all right so then y is the second i uh means then one all right then one is the second iteration in the second iteration means the second iteration completed we incremented the value of i now one has gone to two so like this all right like this we are uh working on the for loop all right so if you don't give the i plus plus then what will happen then what will happen if we don't give the i plus plus then it will run into a infinite loop all right and of course we don't want that so that's how a while loop works all right so i hope you are clear with the concept of while loop all right and also one more thing we can you know we can write this i plus plus 2i plus equals 1 i plus equals to let's try it out with i plus equals 2 also let's see what happens so you can see that it is iterating even number of times like it is iterating half the number of times 100 so that's how it is working all right so that's how we you know code uh you know for loop all right now uh let's all right remember the uh program which i i taught you like to print out a table of a certain number right we are going to do the same thing with with while loop all right so the very first thing i want you to understand is write a variable all right n the that would be containing the number then right all right write a variable i it would be the counter counter variable means uh the i that we had taught you all right it would be incrementing the value after each successful statement right so now go to while i all right just wait while i all right is less than equals 12 all right what i want i want is to multiply all right multiply multiply the number n with i all right then after that i want to print it all right i want to print it console.writeline i want to print it then after printing it i want i am going to increment the value all right i'm going to increment the value by one so now let's see cool so we got the same output that we got for for loop right so that's how the it is working all right so i hope uh you are very clear with the concept of for loop and while loop all right so are you all i guess you also know how when when to use which right so we use for loop when we exactly know how many iterations we want and we use for sorry derive sorry sorry i guess i messed it up so again we use for loop when we know how many iterations we want we use while loop when we don't know all right when we exactly don't know how many iterations we want so that's when we use for loop all right and a for loop statement stops working when the condition know when the condition gets to false all right so always remember that now here comes our last looping statement all right and uh the least used ones all right this is known as do while loop all right it's a see do while loop now is uh you know very similar all right it is very similar to uh what can i say a while loop all right it is very similar to why look just there's a one difference all right in while loop if the condition is false from the starting point now it won't even execute a single statement but in do while loop even if the condition is false all right it will all right even if the condition is false it will execute once all right it will at least execute once all right so let me first uh make you familiar with the concept of do value means the syntax of develop actually so i hope you are familiar with the concept of you know do while loop so do first of all you need to write do then curly braces all right inside the curly braces you have to you know go for uh writing the you know particular code you want to give then you have to give a while statement in here then the condition in here to uh to be executed all right so that's what the syntax is it's a bit weird syntax right i know i know so now what you have to do is define i variable all right see we are going to uh you know write the same example we did last time that is the hello world one so then write do write do all right then console dot write line hello world then i'm going to increment the count or it means increment the value of i i plus by i plus plus or you can also do i plus equals 1 all right then in the while all right i'm going to give the condition i less than equals no 100 and then semicolon now let's try to run it so here you can see we actually got the hello world now to verify that if we actually ran 100 times or not i'm going to you know add i to the equation so now here you can see it has ran 100 times now you know what i told you just uh a few seconds ago that even if the condition is fall from the starting point do while loop will at least execute once all right so you know let's uh let's verify it all right let's verify it let's give if the condition is greater than equals 100 all right if the value of i is greater than equals hundred and of course the condition is false so here you can see here you can see with being all right even though the condition falls it at least executed once all right so that's what all right that's what i do that's what a difference between dual and while loop is all right and see you won't be using this uh do while loop much i'm very sure of that because i even like i've been uh like using unity engine for almost four years yeah so it's been almost i started in 2019 and it's been almost uh four years i've been using unity engine and uh it's been more like almost two years all right i guess two to three years i have been uh doing augmented reality development all right so here's the thing all right i have never used while loop all right i have never used while loop while developing uh games or ar applications so maybe in your case you might face uh you know some moment where you have used uh where you should use or can use do i look so it's totally totally okay all right but in my case i never used uh do while loop in my you know development journey so yeah that's it now here's something you know last alright here's the last uh concept we are going to learn in the in this conditionals oh sorry not in this condition i guess i forgot to change the name sorry i'm very very sorry so i'm going to change the name so uh in this looping all right in this loop concepts we are going to learn this last thing that is jump statements all right there are multiple jump statements c sharp like there's go to there's break there's a continue statement then there is return statement all right then there is throw statement but in this particular lecture we are going to learn about only two of them that is continue and break statement all right so they are very simple all right jump statements basically now they are a statement all right jump statements are basically a statement that instructs uh the flow of a programmer that instructs the program to deviate from its normal flow sequence and jump to another line of code all right so jump statements are commonly used in loops and other control flow statements all right you will also you you know use this in switch case statements often in uh if else statements alright so let's see what are these so first of all let me uh show you let me tell you which uh statements we are going to learn today all right that is break all right we are going to learn about break and continue all right we're going to learn about break and continue so let's implement it so i'm going to use for you for this already you can try out with while loop do i loop anything you want all right so i'm going to create a follow alright i'm going to iterate you know i trade this for loop over up to 10 all right i'm going to iterate this follow up to 10. um all right now what i want to give a condition all right let's say i want to print i'm i'm printing all right all all the numbers in here so i'm going to print all the numbers in here and now i what i want if all right if uh the i if i reaches to 7 all right if i reaches to 7 what i'm going to do is all right if i reaches to seven what i'm going to do is i'm going to break all right i'm going to break so let's see if this works or not see it didn't print it it broke it broke the program all right after i reached to seven it broke the program all right so that's what is it it is doing now basically uh break statements now after reaching some point a break statement helps us to terminate the whole program all right that's the whole point of break all right that's the whole point of break statement now here comes continue statement all right see continue statement is a bit different it will actually skip that particular value and move to the next value let me show you all right just give me a second so you guys might be thinking all right that i told you that continue statement skips some part right it skips some part and uh then moves to the next one alright but here in the output it didn't happen right because all right because here you can see before the if statement this uh console.writeline is being executed so in this case it already had printed seven then how is it going to skip if it has already printed it right so that's why to actually use the continue statement in this case what we do is we first of all we check for the condition and then we write console.writeline and now here you can see that we are able to print up to 10 by skipping already by skipping number seven all right so that's how this whole looping works all right and i hope this concept is very clear to you all right so yeah that's it for this lecture so see you in the next lecture thank you hey guys welcome to this lecture and in today's lecture we are going to learn about arrays all right arrays is a very important concept all right it's a very important concept in c sharp or any other programming language so uh like buckle up your belts and see tightly because it's really important for you to understand uh the concept of arrays all right because uh when uh see at this stage all right at this stage in the beginning stage you might have very less use cases for array even actually in the beginning stage also you'll be using arrays more often all right then you know so what i want to say is let's say take for an example in augmented reality only all right we we use arrays in a lot of things all right we can we like in plain detection when we want to like you know uh let's say we want to place all right place multiple objects into the real world all right means in marketless ar whenever we want to try to let's say place multiple objects in the real world we create an array of this object so that we can uh you know place them in the real world all right so uh you are going to use arrays in everywhere all right so it is one of the very important concept so let's dive into this topic all right without waiting anymore so see in general when we store values we use a variable all right but there's a problem all right the problem is the problem that comes with it is that we can only store one single one single value all right we can only store one single value we can't store multiple values all right and that's a problem if arrays or ratif arrays or lists or uh they wouldn't have been there now then uh we wouldn't have been able to you know store multiple values in a variable all right so what arrays does is arrays actually enables us right arrays actually enables us to store numerous number of value of any data type already it can be of string it can be of integer it can be of double it can be a float all right it can be of care so they help us already provide us uh a technology so that we could not we could store multiple values all right we can store multiple values within one single variable all right so that's how we use an a sorry that's what is an array is an array in simple words all right an array is a collection of data all right an array is simply a collection of data all right now as we have learned about what actually array is let me tell you about the agenda of today's lecture so today we are going to be uh going through the very basics of array all right that is we'll be learning how to initialize an array then uh would be uh learning how to access values within an array all right then it would be learning about some different different methods all right available in in uh an array all right so let's get started so the very first thing is that we have to understand how to uh you know implement an array all right see there are two ways of uh implementing an array let me uh first of all not in comments wait so let me show you all right there are two ways one is a dynamic way and the one is a static way all right i would tell you why they are called those all right first of all let's try out the dynamic way so the first thing all right see whenever you declare variable how do you do that so you can say into val equals 12 right you declare a variable like that now all when creating an array or when creating an array make sure all right that you don't miss the square bracket wait to put the square brackets you have to put the square brackets after end variable all right you have to put the square brackets after in variable after that this variable all right this variable you created would be considered an array all right it will be considered a a variable that can store arrays all right now to store arrays what we have to do is open curly braces all right and within that curly braces put some values all right 2 1 6 let's say 3 4 all right so now let's run it and let's check whether uh it's returning us any error or not all right so here you can see it is uh telling us your program didn't did not output anything all right don't worry about that alright because we actually haven't printed anything i would show you how to you know how to print each and every uh value within an array right so don't worry about that so this is one way all right this is one way of you know initializing or creating an array and this is known as dynamic array all right now another way around all right in creating array is you have to again follow the same thing that is uh int square brackets then give the variable name all right after that all right after that what you have to do is you have to write a new keyword all right then int then again square brackets now this square uh this square bracket has a spatial meaning i would i would uh tell you all right so what is the meaning all right see there's a reason why we call this type of array and static array the reason is we already all right from the start only when we declare the array all right from the start only we specify the size of an array that's what we are doing right now so in this square brackets we have to give a size of an array so let's let's give it five all right so now this is a static array all right this is a static array it doesn't have any value in it means uh of course it does have all right it does have value in it but all right but it is static the reason is we have already all right we have already initialized this array all right we have already initialized the array and uh because we have already means declared the size of the array because we have already declared the size of the array in the memory all right in the memory it has created a static space already the ram it has created its own memory that cannot be exceeded all right so that is it now after after this whole bracket thing what you have to do is again open uh your curly brackets all right and after that write the number you want to give all right so yeah that's how we declare a static array all right now let's again uh run it and let's see if it's retaining any any around no it's not returning any error because the syntax is totally correct all right now all right see the difference now the difference between both all right both dynamic and static array all right is basically it means now see static why is it called static audit why something is called static static means which can't be changed afterwards all right which we can't change afterwards what if it is declared on the start it is declared declared all right we can't actually change it or means we can't actually add something more up to it all right we can't exit that memory all right but dynamic means it is you know uh what can i say it is adjustable in the runtime dynamic is adjustable in the right time so that is what the you know that is what the difference is between dynamic and static all right i hope uh you are clear about this all right so yeah so i'm going to uh keep working with dynamic arrays only all right now here's the thing all right so we have learned about uh initializing array we have learned about what exactly is an array all right now let's you know learn about uh accessing values within an array all right do you remember when i uh taught you about the window in the audience in the second lecture only i taught you about indexing all right i hope you remember the concept all right but if you don't let me uh tell you indexing now it defines all right indexing basically defines positions positional value of some data all right in simple terms it means all right it means let's say there how many how many elements are there in this you know how many elements are there in this particular array there are total five elements all right and if we start indexing them all right indexing uh in in uh in simple words you can you know you can understand indexing as uh um basically address all right means exactly uh if we talk about memory address of any variable it's totally different it's totally different topic i'm just trying to make you understand how like what is indexing with indexing now it's uh think of it as an address of someone all right like uh for example i am priyanshu all right there are two priyanshu right and uh both live all right both live in two different uh like two uh different places all right but both are priyanshu uh both are means whose name and title are totally similar all right but how will how will we uh know that uh priyanshu uh means the priyanshu he is finding is the actual one all right so that's how address comes in all right the person will ask for the address and if the address is right he'll get to the right financial so basically now indexing is basically the positional value of some data it's simple as that it's it's the address of some data like see uh for two the for the first element all right the first element of an array the address is zero means in the index value of first element is zero the index value of second element is one the index value of third element is two and it goes like this all right it always goes like this so that is what indexing is and this is how indexing will help us accessing the values all right now let me show you so uh let me uh show you by printing it all right so i want to access all right i want to access let's say this all right three three from the array so how would i do that so let's count it so as it is starting from zero zero one two three all right so this is in the it is in the third position so what i'm going to do is i'm going to write 3 in here and let's see if it works yeah we got it right we definitely got it because the positional value of 3 sorry the positional value of three is three right uh if if you are confused all right let me let me uh give uh give you another way around all right so let's say i want to you know um access this alright uh this particular value already means i want to access the six so how would i do that so let's count it 0 1 2 so it is in the second position right so now let's run it so here you can see we are with the index all right with the help of index values we are able to access it and always remember whenever you want to access index value now uh write the variable name then open uh square brackets and inside that put the index value all right so this is how we access all right this is how we access values within an array now let's say if we uh let's say i want to print all right each and every element within this array all right i i let i want to print each and every element within this array so what i'm going to do is for in thai equals zero i less than equals all right how many elements are there one two three four five right so what i'm going to do less than all right val dot length all right see this is a method all right you already learned another um for your first method all right dot length all right see this dot length method now this length method returns the total length all right the total length of your array all right so as our total length is you know 5 that's why it has returned 5 now here's comes the problem here you can see what i've written in equal 0 i less than means it will iterate less than 5 all right do you know why it is ideal and why this solution will work and why why not less than equals will work actually it is better to try by yourself actually uh pause this video all right pause the video try both the uh both the way all right try both the way and check which one is running all right i will show you right in here just give me a few seconds so now uh as we have you know try to access as we are trying to access the values with each and every value what i'm going to do is i wrote console.writeline then i'm going to take the variable name the square brackets and i'm going to put the i inside because you know with every iteration the value of i is increasing all right so here you can see we got all the elements we got all the elements because we started from 0 zero is this one all right and ended with four all right and the fourth positional value is of this one right now let's try out less than equals one let's see what happens let's see see it has printed but here you can see it has returning us error now what's the error index was outside the bounds of an array the reason is the reason is the length of an array or the length of an array is uh 5 all right the length of this array is 5 but indexing ends at 4 all right and we are trying to access the elements of we are trying to access the elements of this array through indexing so if there is all right if there is no element present if there is no element present in the fifth position all right if there is no element present in the fifth position then of course it will return error it because it doesn't have any value all right now here's a fun fact all right here's the fact that you you must know all right like i guess i forgot to tell you about this like when we create this kind of array now just wait when we create this sort of array all right if we let's say if we don't assign values in here now like i assigned previously if we don't assign those values in here now it will automatically like automatically zero all right zero will be assigned to each and every position all right so this is for a fact and you guys must you know know it all right so now we have learned the very basics of array right we have learned how to access elements in an array right so now it is our time to look into the methods all right the methods are present in an array all right you already saw all right you already saw method length now let me show it to again so here i am declaring a variable that is int val all right so into val then let's give it uh 5 2 0 a 7 let's say 3 nine eight so here you can see all right we got uh we created our own array now the first method we are going to learn about is length method all right and you you already know uh what exactly is length right how length method works so what i'm going to do is console.writeline val dot length all right so what this will do it will return all right it will return us the total length of the array so here it is returning 6 because there are six elements present in the array similarly we have let's say we have another variable all right we have another variable uh not exactly a variable just uh just so we have a variable of array all right so we have a variable of array now what we have to do is now what we have to do is we have to uh learn another function all right and that function is basically sort function all right see sorting or sorting is basically rearranging uh re and rearranging you know the rearranging the values all right means the gibberish values in an ascending order or descending order all right so that is what uh you know uh sorting is all right so here comes the function all right so this is the sort functions first of all let me remove this length one because uh of course we don't need it anymore now what we have to do is let me show you that we have uh you know i have an array initialize now what you have to do is you have to write a function array dot sort all right and inside the sort for function we have to pass an argument and that argument will be an array all right and now what you can do is for int i equals 0 i less than array all right so oh sorry not array val dot length i plus plus all right and let's uh try to print it all right let's try to print this value all right let's let's try it out let's see let's see what happens all right currently uh this is uh this this particular array is not ordered all right and now to make it ordered we use the sort function so here you can see it has uh arranged all right it has arranged all the uh elements in an ascending order all right so that's how uh this thing works all right so now we we are going to learn another function already that is index of alright this is index of function that is it will return the index of some value all right so you already know how this works right i guess i showed you previously means not in this uh and not in case of arrays so int idx equals array all right dot index of all right and within that we have to pass two arguments the first one would be the array all right means the array from which you are looking for the value and the second one will be the value means the value on which you will be taking out the means uh you you have to put the value uh which you want to get all right means which you want to get in the sense let's say i want to put a value and i want to get its index value right so that's what i am i will be doing so i am just going to put a certain value in here so i'm going to put 7 in here all right and you know let's uh let's print it all right console dot writeline idx all right so let's uh run this program and let's see what happens so here you can see it is returning 3 the reason is 0 1 2 3 7 is available in index 3 all right so that's how this whole index of function works all right now here comes three more functions all right that is maximum minimum that is max min and sum all right so the meaning is hidden in their name only so it's like the max function all right first of all understand this math function max function will return the maximum value available all right the maximum value available in array the min or the mean function will return the minimum value available in the array ah and the sum all right the sum function will return the total sum of elements from the array all right so let's uh try to print it out alright so console dot right line all right and inside this val dot max and give parenthesis all right so now let's see what is the maximum value in here in our case the maximum value eight is eight now let's see the minimum value and that's totally right and let's see the minimum value the minimum value is zero and that's also totally right now let's print out the sum of you know the sum of total uh array so you can if if you want you can perform the calculation and you will be surely getting 25 all right so these are the array methods all right that you must like you must have an basic idea about all right and uh i would suggest all right i would suggest you guys to look more into arrays after this session also all right because array is a very important concept all right and uh there are a lot of algorithms that works on arrays like there are multiple sorting algorithms searching algorithms so i want you guys to have a very good idea and understanding of arrays all right so make sure you do that and so yeah that's it for this lecture see you in the next lecture thank you yo we are going to learn about functions in c all right see functions uh are a very important topic all right in terms of programming all right the reason behind that is because functions uh helps us to manage our code all right it uh helps us to you know lower the number of codes we write uh function helps uh our means uh function helps us to keep our code clean all right so function a function has a lot of use cases all right in uh when you will be developing all right your ar applications you'll be working with functions all right like uh update all right like the update method in unity is a function the start method in a unity is a function right so basically functions and methods all right are an essential part of programming any software all right see whenever we code we have to follow a very simple principle of dry now what is dry dry means don't repeat yourself all right why because it increases the code quality it saves a lot of time all right and functions uh in simpler terms functions or methods are basically a block of coder right they are basically a block of code which can be used anytime we want all right without repeating ourselves all right like for an example you uh i have implemented an algorithm all right that is a sorting algorithm let's say you have implemented a selection sort algorithm all right now you have to use that algorithm at multiple places in your program right so the let's say the algorithm is of 10 to 20 lines all right for example now the problem would come that if you like you know manually write that algorithm in each and every portion now it will increase the code base all right it will increase the code base then it will uh you know cost you a lot of your time all right and time is money right so uh what function does is we can create a function of that particular sorting algorithm and use that function everywhere all right so that saves a lot of time and makes the code base more optimized so it is very important all right to understand the concept of functions all right so basically there are two steps through which we can you know use a function the first is we have to create a function all right and the second is we have to call a function all right now see call i would show you what what does calling a function means is all right see for an example if i had to show you a function right now this you can see this main method right in here all right or main function right in here is a function all right the difference between a regular function and this main function or the main method is that main method calls itself automatically all right it is called automatically whereas a regular regular function has to be called by the user all right or the developer so ah this is the major difference between a specified means of this main function and a regular function all right now by calling it we means we have to you know call the function we have to say to the function that function do this task for me then only the function will work all right he won't do the task by himself we have to command him all right so that's why we call a function okay now as we have discussed about function one more thing is that you have to keep in mind whenever creating a function now you can't write means create a function inside another function all right always remember that so whenever we create a function it should be outside a function alright like this public static all right void set score all right and like this all right we create a function like this now i know this might be a bit confusing all right so i'm going to explain you each and everything first of all let's start with the syntax right let me comment or create a comment third line all right in this commented light the first or all right the first that would come will be an access modifier all right the very first thing will be access modifier i will tell you what exactly is access modifier all right after that there will come a return type all right after the return type all right you have to give your function a name all right and then you have to give a parenthesis all right inside the parenthesis you can add parameters what are parameters parameters basically takes uh it is basically a list of arguments all right that we provide like like uh an array.sort function that i taught you in the arrays lecture what happened in there we provided an argument inside that sort function right so that's how uh that's why we use parameters so parameters would come inside this function means this parenthesis and then you already know what to do open and close curly brackets all right and inside this you have to put some code all right now you know let's see the actual code for it first of all all right here you can see we are writing a function first of all we are giving access modifier all right public all right void all right and then what you have to give is a function name what would be the function name the function let's set the function ms set scope all right and now inside this function we have to give all right some write some code that is console dot write line and inside this you have to print something let's print hello world now to call this function or let's say let's rename this function to hello world only all right so now to call this function what we have to do is just wait yeah to call this function what we have to do is we have to write the function name like this and then add parenthesis into it and let's run it so here you can see all right here you can see it is giving us an error what is this error it is telling us an object reference is required to access nonstatic member all right the reason is we didn't give any reference to the object alright and currently as you uh have not learned about objectoriented programming we'll be learning about objectoriented programming in the next class so here's a keyword all right static all right right now you don't you know you don't have to put your mind into the keyword static and public all right because uh these two keyword will make more sense after the next lecture all right because uh these uh these two uh basically these two keywords uh are mostly used in objectoriented programming only all right so now let's run the program and let's see what happens see we are able to get the output all right now uh i would explain you all right i would explain you this code all right what exactly are these first you can see we are specifying an access modifier that is this one this is access modifier now what is what exactly is an access modifier access modifier is like a gatekeeper all right like uh like let's say you have a security guard in your house all right the secret the you have guided means you have told that the security security guard that you are like you don't want anybody to uh disturb you all right so at that point of time here you have gone private but if your security guard if if you haven't like if you have told your security guard that brother uh if anyone comes to meet me then let him inside all right let him come inside so then you are public all right the security guard will let it go it's the access modifiers are also something like this public and private all right public and private public means you can access that particular thing from any class all right whereas private means you can't access that particular thing let it be a variable or method you can't access it outside of their class so i know this might be my this might seem a bit overwhelming or maybe it might seem you know a bit confusing but that's totally okay because all these concepts all right you will get a grip on all this concept after the next lecture because in objectoriented programming we are going to learn more about methods we are going to learn more about access modifiers we are going to experiment with it all right so don't worry all right now so as we uh i hope the basic concept of access modifier is clear it just access modify helps us to modify the access all right it help us to modify restrict the access of any variable or of any method all right so that is what an access modifier is next here comes the static keyboard all right don't worry about that don't worry about the static keyword all right let me uh i'm going to explain the stat keyword uh uh in the next lecture alright because this static keyword is one of the very important uh concept that you should know all right after the static keyword comes return type all right return type all right return type is basically what kind of value we want to return to the function all right return type basically defines what value can be returned to the function it can be of void all right it can be float it can be string all right so now see access modifiers can be of multiple types all right it can be boolean all right it can be of bool it can be you know of a float it can be of string all right another type uh is void in a void all right in a void return type we didn't we do not need to return all right we do not need to return anything in a void you know in a void function but let's say we create a function with a different return type let's say in all right so public static int all right let's say we are you know let's let's create a function that would you know give us the square of some number so let's write a function that is square off all right then in here what i'm going to do is i'm going to create a variable all right that is int let's say square square all right square off square off i'm going to create this variable all right in here the s is small and in the function it is uh in caps all right so don't worry so now what i can do how to you know how can we exactly uh make a square of the number right multiply that number with the same number right so here i'm taking an parameter all right so the parameter would be uh integer n all right you can take as many parameters you want all right i can even uh take another parameter as a float all right i can even take that that is float n one all right i can do that so the thing is i you don't you know you don't have to be like uh the function can only take one parameter you can give as many parameters you want all right so now as we have given the parameter we are doing it n into n and after that i'm returning all right i'm returning we we are using the return keyword i'm returning this square off all right i'm returning this square of variable to the function now in here as we called this function it printed us hello all right but to you know get the value of this function all right that is the square of function it would be a bit different how let me tell you let's try it out actually all right let's take the square of you know square uh square of function and uh let's put a value let's say 2 we want square of 2 now let's run it let's see see here you can see your program did not output anything the reason behind this it is not printing anything it is returning the value to the function now to print all right now to print the value of the function what we have to do is we have to store this uh we store the returned value into a variable so how would it how do we do it do that so create a variable that is in final you can name it anything after you have stored it like this then you can do console dot write line final all right and after that you can simply print anything all right i mean simply print it now let's say try out a square of 4 so the square of 4 will be 16 right so here you can see that it is giving out the output as 16. similarly you can also create your return types as boolean all that you can create your return types as string all right one more thing you have to keep in mind if you are specifying a return type like ink you have to return integer values only if you try to return float value floating point or string value uh it would give you error all right so make sure uh you practice on this all right and don't worry about the uh access modifiers and the static keyword all right because in the next lecture in the next lecture that is uh where we'll be exploring classes and objects that is a basics of objectoriented programming there would be lo there you would be learning about the static keyword the you know about static classes you'll be learning about objects or that you'll be learning about instances then you would also be learning about this access modifiers how we use them right so you'll be learning all those things in the next lecture so don't worry if you are if you are confused somehow by the next lecture the functions the topic of functions will be very clear to you but if i had to say in a very simple word functions are just basically a block of code that help us to reduce the uh means reduce the lines of a code all right we can reuse that function and always remember don't repeat uh always follow the principle of don't repeat yourself all right like let's say if you are creating an algorithm then uh create a function of that algorithm so that so that you can use that function anywhere you want all right so make sure you follow the principles of dry all right so yeah that's it for this lecture so in the next lecture we are going to learn about classes and objects in this lecture we are going to learn about objectoriented means the very basics of objectoriented programming all right and in that we'll be learning about classes and objects all right so this is the very basic of objectoriented programming there are many other concepts already that you would be needing to learn but for now for the starting all right for starting uh this is the topic that i'm going to teach you alright we'll be learning about classes and objects we'll be learning about fields we'll be learning about methods that is class members all right we'll be learning about you know constructors how to create a constructor we are going to learn about access modifier static keyword we are going to learn about static classes all right so without any further ado all right let's start with the lecture all right see to understand classes and objects now understand this objectoriented programming all right we have to understand the uh very fundamental concept of objectoriented programming what exactly is it see objectoriented programming is basically an approach all right that breaks a programming problem into you know uh objects that interact with each other all right basically objects are uh created from you know templates and those templates are known as class all right ue actually we actually can you know think class as a blueprint all right class as a blueprint and you know just like a you know a blueprint of a building all right and from that blueprint of a building we build an object that is the actual building with bricks and mortar and all those things right so that's what objectoriented programming is all right so i hope this uh you have understood what exactly objectoriented programming is right now as we have understood what exactly objectoriented programming is it is our time to understand about classes all right as i told you class is like a blueprint right like here you can see this is a class public class program right inside there is a method that is the main method right so we can write our own class now to write our own class first of all remember you can't write a class inside another class all right you have to write a new class outside of that class all right so what we have to do is write public all right public class all right and give the class a name all right give the class a name and let's give the class a name as person and then what you have to do is you have to open curly braces and close it so this is how we write a class all right this is a public method this is the class keyword and this is the name of the class all right so that's how we create a class all right now there's some there is another thing called fields all right to understand field you can say fields are you know variables only all right they are variables only a field is simply a variable that is we know we declared we declare inside a class all right like any other variables all right they are used to store data like here you can see we can write public all right in or let's say public string name of the person all right then we can write public in age right so this is how we are this this is called fields all right so this is are called this is called fields all right now here you can notice that there is public keyword and you know in front of all the variables all right so they are now they are known as access modifiers they are basically gate keepers they you know control who has access all right who has access to the uh fields or methods now the who in this case is another class all right now if we make this to private now this program class won't be able to access this uh variables from this person class all right now to you know uh to access this class we have to create an object of this class all right so i'm going to teach you how to do that but before that let's learn how to create methods all right let's learn how to create methods inside inside a new class so it's or it's also similar like this public static void main just like i uh taught you in previous lecture about functions so what you can do is public all right static void and let's give it a name all right let's give it a name that is uh get name all right and in here it is not necessary to give the static keyword all right i would there's a reason behind that i will you would be learning that reason after you know after we get into the concept of static keywords so don't worry we are going to get in there all right for now remove the static keyword for now remove the static keyboard what you can do is console dot right line all right and uh write it like this name is uh get the you know get the name variable in here all right get the name variable in here and similarly do the you know same thing for the age variable all right ages all right so now what you have to do is now we as we have created our method as we have created our method what we have to do is we have to create an object of that class all right or in simple word an instance of that class what does that mean see an object is created from a class all right we have already create created a class named person so now we can use this to create objects object is basically an instance of a class all right to you know to create an object of the class we use the new keyword let me show you how all right so it's very simple what you have to do is first what you have to do take the class name that is in our case the class name is person after that give you know give it a name that is i'm going to named p for now and then put equals to in there then write the keyword new and then again call the class like this all right and then give parenthesis to it after that if you run it let's say if you get any errors or not you are not getting any error so that means we are good to go all right so now here we have created an instance of a class or you can say an object of a class all right we have created an object of a class now as we have created an instance of the class we can you know also access the fields and methods available inside the class from our program class all right and make modifications to it all right like in here all right so what i first what i can do is p dot all right here uh first of all to access you know to access the you know fields and methods of the class you have to call that right so what you can do is here you have renamed the class right that is you have name the object as p so write p in there then dot all right then give the variable name and set the variable name to you know anything let's say your name all right and after that set it uh set the age value to let's say uh my age currently is 17 all right so i'm going to put it like that after that all right here you can see uh let's change the name to gate details actually yeah that would be better so now here you can see let's actually uh try it out let's see if any error is coming or not so here you can see we are not getting any error now now let's get the details let's see if uh like the means uh in the object the details we have filled has been set or not to do that what if as i have created a you know method that is get detail so what i can do is p dot get details and let's see if everything is working or not so here you can see all the things in here are working now you can create all right you can create multiple objects all right you can create as many objects you want all right like this let's let's try another one that is person p equals new person and in here what you can do is p dot name equals let's uh you know give it row hit all right and let's give give its age also you know 18 let's give it and now let's see oh all right always remember i did a mistake i you know name both the cla or means both the instances with the same name so don't do that all right change the name in here my bad so now what you can do is p1 dot get details all right now let's see if this works or not so here you can see both the uh instances are working so this is how we create a class and we create an instance of that class all right so this is how we do it now see the fields and methods inside all right the fields and method inside a class all right like this is the field all right this variable is a field this variable is a field and this is a method this uh this whole thing is a method so they are often referred as class members all right they are the member of the class called person all right so make sure to keep this in mind all right so now as we have learned about you know classes and objects now it is our time to learn about constructors all right to learn about constructors i know it uh this you know this term might seem a bit unique you know confusing but don't worry all right don't worry i'm going to tell you how to do it all right see what is a constructor a constructor is basically a special method all right that is you know used to initialize objects the advantage of using a constructor is that it is called when an object alright it is called when an object is created it can be used to set initial values for fields all right means right now all right whenever we are calling this you know whenever you are calling means creating an object of this class no value is being set by default all right we are not able to set any value by default we are setting them later on what constructor does is whenever we create an instance of a class a constructor is called all right a constructor is you know is called so to you know to set means to create a constructor it's very simple what you have to do is public all right then you have to write the class name all right you have to write the class name then parenthesis it it just looks like the function just you don't have to give the return type all right then in the person in the person i'm going to set all right i'm going to set the name to let's say default human and the age to let's say 100 all right now you know let's remove the uh previous code all right let's remove the previous code and let's see how this whole constructor thing is working right see i won't be setting the name uh right now what i'll be doing is i would just i would just be you know uh creating an instance of the class and then we'll be calling this method directly i won't be setting the name right now you you will see what will be the output all right so let me show you so first of all what you have to do is create create an instance of the class so how do we do that person p equals new person all right semicolon and then p dot get details all right and in here let's see if it works or not so here you can see here you can see we didn't said uh set the name all right we didn't set the class name in here we didn't set it explicitly all right we didn't set it explicitly the constructor all right the constructor is called when the object is already created so that's why by default by default the constructor has set the variable name and age to the specified value and in our case for the name the specified value is default human and for the age the specified value is 100 all right i hope you understand that you know the concept of you know constructors all right now there are a few pointers that you need to remember all right a constructor name must match the class name all right and uh always remember our constructor cannot all right cannot have a return type all right and all uh remember this a constructor all right a construct is called whenever whenever an object is created or you can say an instance is created of the class all right and always remember uh see all classes now have constructors by default all right all classes have constructors by default if you don't create a constructor by yourself now the c programming language all right or any other programming language will create a you know default constructor for you all right by himself all right by means the c sharp will create uh automatically a constructor for you all right however the problem with that comes is that you won't be able uh to you know set the initial values for the fields so that's a problem that's why we can you know we define a means we define a constructor manually all right so i hope the concept of constructors uh classes and objects are clear all right i hope you have you know understood the concept of classes objects and constructors you have understood about i hope you have understood about fields and methods about class members so now our next topic all right our next topic is of constructor parameters all right like you know in functions how how i told you about parameters uh this is also something like that all right this is also you know same so to create a parameter what you can do is in within the parenthesis you can create variables all right that is you can create parameters now let's create a parameter name all right and let's create another parameter as age after that what we can do is what we can do is we can remove the default human from name and set it to dash name and again do the same thing for age to dash age all right now what is the you know what is the benefit of it let me show you all right let me show you the first of all this will reduce the lines of code all right this will reduce the lines of code by a lot so now as we have said the parameter it is very simple you know it is very simple so i'm going to create another object that is let's say person all right person b equals new person all right and then p dot get details and now in here here you can see there are parenthesis inside of this parenthesis we pass some value so how do we do that it's very simple first of all the first parameter is a string so we are going to give it a string that is priyanshu and the next parameter is age and we are going to give it 17. now lets run it and here you can see just within two lines like previously we were using four lines now we have reduced it to two lines so now here you can see we are getting the same output we got previously all right so that's how they save a lot of time time so i hope constructors the concept of you know the cons concept of constructors are clear to you all right because the next two topics are going to be very interesting that is access modifiers and static keyword all right so let me show you see access modifiers basically defines from where we can you know access our methods and variables from so far there are two access modifiers that you that you should know all right that is public and private now public means that you know we can access the class members from outside the class whereas whereas in other side private doesn't allows us to access the class member outside the class but only can be accessed within the class all right so i know it might uh you know it might seem a bit overwhelming or uh you know it might get a bit confusing but that's totally fine all right that's totally fine the thing is i'm going to show you show it to you by doing it practically now let's remove this constructor because we don't need it as of now all right let's remove this all right now in here let's change the name all right let's change the public keyword to private all right let's change it to private now let's create another instance that is person p equals new person now in here p dot name equals let's set it to you know priyanshu all right again let's set it to priyanshu and again let's set the age to let's say 17 all right and let's get try to get the details now let's see what happens first of all let me ask you will it return an error or will it work will it work or return any error just give it a thought all right pause the video give it a thought and then return so i'm going to show you here you can see there are three errors the errors are the uh hello world all right the person.name means this is the name page hello world all right the person.name is inaccessible due to its protection level again another is person dot age is inaccess inaccessible due to its protection level the same goes for personal.getdetails is inaccessible due to its protection levels so because of the private all right because of the private you know uh this private keyword what is happening it made our fields and methods private so we can't access the variables and methods outside of the class whereas with public keyword we can do that right and uh let's say uh there's another way to you know make uh you know field or method private is that you can simply you know remove the private and it will be go to private by default but you know i don't you know i i always like to write private because i i don't know but it seems really good to write private at first so that's why i always write private and i also suggest you for initial stages all right for initial stages uh write private all right if you are creating any private method then for initial stages write private all right so that you know you get it more clearly that what is the use of private so i hope you are now clear with the concept of access modifiers what are public and private all right now there are two more access modifiers that is you know protected all right protected is there and uh so you can you know learn more about them all right you can learn more about them you can search about them you can learn more about them all right through google so make sure you do that now next all right the next concept we are going to learn is static keyword and static classes all right so first of all let's understand the concept of static keyword all right see the static keyword actually helps us to get access to the class members such as variables methods etc with it without needing to create an instance or object of the class whereas um i hope you understood this right right now all right let's make this you know variable to public as of now let's make them to public so now here you can see we are creating an instance of the class right we are creating an instance or object of the class to access these variables right we are creating an instance of the class to access these variables now the thing is if we put a static keyword already if we put a static keyword in front of every variable or field of method like this static all right static public again public static and let's you know let's not create the object now what we can do is person dot name equals priyanshu sorry then person dot age equals 17 then person dot get details now let's see if this works or not see this is working this is totally working now let's again try the same thing without this you know static keyword let's try it out let's see if that works or not here you can see it is uh telling us an object reference is required to access static member so nonstatic member so here you can see remember all right always remember if if we if it creates if we make something static now we don't need to create an object of that class to access it we can access it directly but if any variable or method is nonstatic all right like currently this uh all these all these methods and variable right in here are nonstatic alright that means they are not static so we have to create an object of of this particular class to you know edit or you can say access all the fields and methods present inside the class all right so i hope you are clear about this so basically what we get static keyword helps us to get access to the class members all right without needing to create an instance or object of the class all right so that is how the static keyword helps us all right i hope you are you know clear about the static the concept of static keywords now what we have to learn all right what we have to learn is about static class and this is the last concept that we are going to learn into today's lecture see just like we learned about you know uh this static you know variables basically let me tell you in uh you know just like having uh static methods or fields or properties or constructors we can also have you know static classes you know our static classes can only contain static members all right a static class can only contain static members that means let's say if i you know create a static class right now and again let's let's uh you know let's try the old step we are doing like creating an object let's uh do it now all right p p dot you know p dot name equals uh let's say priyanshu then uh p dot h equals 17 then p dot uh get details now you uh you'll be getting an error all right the error is cannot declare instance members in a static class cannot declare instance members in a static class the reason be the reason is all the variables and method right in here all the variables and method right in here is nonstatic and let's let's turn it to static as of now all right let's turn it to static and let's see if we are getting an error or not here we are getting again an error the reason is the reason is not because all the all the variables are in here are static the reason is because as the class is static we are trying to create an instance of the class and that is not possible because uh stat we cannot create instance of a static class we have to direct we have to get direct access to it right so for that person dot you know name equals uh uh priyanshu priyanshu then person dot age equals 17 now let's do it person dot you know get details as let's see it now see it is working like that so this is what a static class is all right so i hope the concepts of classes objects fields method class members then access modifiers and you know static classes are clear all right and this is going to really help you to understand how we you know work with c sharp in unity all right so as of now this module all right in this module we have completed our lectures we we have successfully completed this lecture all right so next will be start creating our own ar applications all right with euphoria so yeah let's get into the next module thank you hey folks uh welcome to module 4 and this is the first video of module 4 and in this lecture i'm going to explain you all right we are going to dig deeper into the concepts of marker based augmented reality that is we are going to learn about the architecture we are going to learn about the available sdks we are going to learn about how things work in market based augmented reality all right and later on i'm also going to tell you what you uh what means how like which tools are we going to use to develop our uh like ar applications right so without any further let's get started so what is see first uh let's recap all right first uh let's recapitulate our concepts of uh marketbased augmented reality all right see marketbased augmented reality all right uh this is a type of augmented reality all right that makes users that that makes use of uh recognition and tracking alright it is the property of or you can say it is the uh feature of computer vision all right so it make uses the uh properties of computer vision that is our tracking and recognition all right to to uh recognize and track a marker and uh put all right and place or augment a 3d object or any kind of digital objects on top of that marker right you can even augment a video on top of that marker so that is what marker based augmented reality is all right um so yeah that is what markerbased augmented reality is you can even see the diagram right it's not exact diagram but the gif right in here uh there's a mobile and there are some a b c d uh are written some alpha alphabets are written and they are working as a marker right in the sen in the center marker the batman is like the lego form of batman is uh placed so this is what markerbased augmented reality is it basically makes uses of markers to uh augment all right to place digital objects into a real world that's just it all right now if it uh see we already know what uh what our marker based augmented reality is now it is our our a very time alright it is our time to understand uh or learn about different types of game engines all right different types of development engines available all right if we talk about uh there are multiple available in the market alright these are just some of them right i have i have just listed down some of them but there are many others available in the market all right if we talk about the things that are the engines that are available here uh that is unity unreal go dot cry engine then uh if you want to uh develop your own ar filters let's say for uh you want to develop for uh instagram or facebook right there is park air studio that we are that i am going to cover in this course also so this is the bonus section all right in the bonus section i'm going to cover the sparkier studio similarly uh if you if you are a user of snapchat and you want to create your own uh filters for snapchat then uh there is there is lens studio all right these are augmented reality technologies all right um then then there is appertus vr although i haven't used uh used apart svr uh the engines that i have used till now right the the development tools that i have used till now is unity unreal go dot uh i have tried out cryengine but it wasn't suited for me i didn't like it so and another i used was sparky studio all right i haven't used lens studio or apertures vr but you guys can try it out all right uh so these are the development engines uh that are currently available in the market and the most used all right in the in the field of augmented reality and virtual reality and mixed reality the most used is the unity all right like the major major companies uses unity for developing arvr applications unreal unreal engine also is also used so these two are the main like major uh development engines that are used even go dot uh godot supports uh a ar vr you can even you can try it out same does a cry engine two they also support ar vr all right so you can try these out all right and in this course i am going to teach you unity all right and we are going to cover uh the ar ar part with unity all right so as we have learned about the development engine now it's our very time to learn about the software development kits available all right here you can see there are multiple available like like google's ar code then there is kudan then there is apple's ar kit then maxed is there then viewforia 8th wall xr then lightship ardk then easyar is there and wikitused is there right see these are uh software development kits that is sdks the they come in packages all right they come in packages all right and in this course i'm going to cover the euphoria all right i'm going to cover euphoria as viewforia is very famous and very good for markerbased er and it is also easy for beginners so it is better to cover euphoria in this course so i'm going to cover euphoria all right and the tracking tracking feature of euphoria is better than any of these all right means better than any other uh marker based ar technologies all right so that's why i'm going to cover euphoria in this course and also if i if i tell you which sdks have i have i tried i have tried out uh ar code i have developed multiple apps with it i have uh tried out ar kit that is apple's uh then i have tried out euphoria of course then uh i have tried out eighth wall xr although i didn't like that much but it's a decent enough all right then i have also tried out niantic light ship ar all right uh it it has just launched like it has launched uh on 8th of november currently it is in beta alright you if you want you can go through the documentation and download the sdk and try it out all right so uh niantic has launched their uh own lightship sdk niantic is the same company who developed pokemon go all right so uh they have released their technology behind pokemon go on the uh like publicly so i would suggest exploring the light ship ar dk all right um and yeah i have tried these already but if you want you can try the others also like you can try out kudan you can try out max you can try out uh easy ar wikitude and all these available in arc these are not just all right means there are many others also all right like i haven't listened to all of them but there are some of them that i have listed all right so try to do some research all right do a research by yourself and find out uh what more sdk that uh ar sdks are available in the market all right so yeah these are the sdks that are available and uh in the development tools all right in the development tools i'm going to use unity all right i have already taught uh unity and uh in module two and in module 4 i'm going to teach you euphoria all right so we are going to uh for this course we are going to uh we are going to cover this whole course in unity and euphoria all right so yeah let's get uh dive into the concepts all right see what is recognition all right what is it uh uh think of in human terms all right just think of in human terms see a person is coming to you you all right he is uh the person is uh you're relative all right uh you know you know the face alright it is stored in your brain already uh the face of that person is stored in your brain now you can recognize that person right you already know that right you already know that so that's how you are recognizing right that's how you are recognizing the person yeah this person's name is abc and uh he works at this abc company and this and that all right you know that person you you are able to recognize it similarly if you think about devices all right uh let's say um barcode devices right see if you buy any sort of product all right let's say we go in a mall uh when you buy any sort of product you uh submit it in the counter to make the bill all right what they do they have some sort of reader right i exactly uh don't know the name i think it is called barcode reader so what they do they uh with the help of the device they read the barcode all right and then uh push the uh object or the thing that you are buying uh forward right and make the bill so how the how the device is recognizing the barcode right because uh the device also already knows like it already has the data about the barcode right it already does have the data so that's how it is recognizing it so uh like i have bought some some let's say i have bought a pair of shoes all right and there is a barcode the person i have submitted in the counter the person scan the barcode and push the shoe forward to uh for the billing for the billing all right so the particular barcode is stored on the database all right so that's how the barcode reader recognized it similarly if you talk about face recognition system same thing works like in big big companies they use face recognitions also to verify the employees right they use fingerprint recognition also so these are stored in the database and uh some algorithms are there all right there are some algorithms some computer vision algorithms which which are able to uh recognize the person right similarly in ar also there are some sort of databases all right in markerbased ar there are some sort of databases uh databases in the sense there are markers all right those markers are stored somewhere right those markers are stored somewhere and our app and we design our app in that way all right in a way we design our app in a way so that it can recognize all right it can recognize the marker if the marker isn't in our database then it won't be able to recognize it right and if it is not able to recognize it then how would uh like then how will it uh put the marker like uh how will it put the marker on top of that uh sorry put that object on top of that marker right how did he do that how would the algorithm how would the sdk do that so it is always important all right to uh whenever working with markup is there we have to put a marker on the marker on the apps database and don't worry we are going to see how this is done all right there's a very basic of euphoria only so uh yeah so that's how uh recognition works all right uh in in marker based ar and uh this this uh process is uh valid in multiple uh ways right so this is what recognition is recognition is basically recognizing something all right that is in the database like in our human mind all right if i if i see a person i uh i must i might know the person right like uh i know my brother all right he's a person that is in my brain's database right i know that person so i will be able to recognize it all right now let's say some new person come all right i won't be able to recognize him right i won't be able to recognize that person if if it was a random person because i don't know the person his uh his details aren't stored in my database right so these things work something like this all right so yeah this is what recognition is now if we talk about um tracking all right see this is a this is the image alright this is the image of ganesha lord ganesha all right and in here you can see multiple plus right you can see multiple plus are there do you know what is this these these are uh basically uh the trackers small small uh trackers the these are feature points you could say all right these are feature points of the image that help us tracks all right that helps tracking the uh marker all right that helps track in the marker how this help see uh basically whenever uh whenever we uh upload a database all right uh in in our database system all right in view for you in viewforious dashboard after you have uploaded your image in the database all right you can you can view the tracking points all right this is the image from viewforia only like uh i means i uh uploaded this uh image on the database so that i could get the feature points alright i can i will show you how to get that feature point how to see the feature points by yourself right yeah in the next video only so these feature points all right these are some sort of patterns you could say all right see uh the tracking all right the tracking technology all right in ar basically finds all right they they try to find some sort of pattern all right they these feature points are useful for tracking and recognition all right means see if the how would uh see uh if i if i had to give an example all right you you have created a marker already you have successfully placed all that you successfully place the digital object on top of that marker all right you have successfully placed the detail object on top of the marker now how do you think will the like if i if i move my move my marker on onto let's say 10 units to the left side all right how do you think the object will also move because yeah yeah it is recognizing the marker right it is recognizing the marker that part is done and it has been placed on top of that marker but uh when we will move our our marker from one place to another all right how will how will the digital object move can you think of it that's where the tracking helps all right how it helps see the uh there are you can see the feature points right here are the feature points and these feature points all that these feature points helps the marker or it helps the app to to track the track the marker all right to keep the marker in track and also move or and also move the particular digital object along with the marker if i am moving alright if i am moving uh the marker to the left uh all right let's say i have moved 10 units to the left all right the same thing will happen with the object also because the marker has moved all right and our app has tracked that the that the current position of the marker is uh 10 units from the center right so uh our what our app has done it has tracked and again placed it in there all right although if you try to move it the object will also move with itself it will be as smooth like it will be really smooth so that's how tracking is tracking helps in marketbased augmented reality all right so tracking and recognition all right these two are very fundamental and important technology of markerbased augmented reality all right so yeah i hope you have understood that what is recognition and what is tracking and how they are helping in a markerbased augmented reality all right so yeah the same thing it is written here markup page augmented reality makes use of both recognition and tracking all right and you you and now you know how it makes use of them right why it makes use of them what is the use case of them right you know right now so also before moving to the next section all right so uh do subscribe my channel all right because it helps me uh to bring more videos all right more uh courses for you for free all right and also join our discord community all right and if you have any doubt alright if you have any single doubt join our discord community you can ask in there we are we we will be helping you in there there are many likeminded people who are uh who will if i am not available for some time then they will help you to figure your doubt so uh make sure to join our community and if you have any doubt you can ask in there all right i would like to help and also if you uh you can even comment alright comment down in the comment section that what your doubt is and i would clear that right in there all right so now our here is our another topic that is marker design detection and recognition all right see uh this is a this is a very basic fundamental thing all right now there are colorful markers also all right but uh to make you understand i have taken example of a black and white marker all right see basically uh majorly all right many people prefers to use uh like black and white markers something like this all right which are basically square shaped and uh and uh a black and white like uses black bordered images and uh also like the image inside those black borders are black and other are white so uh basically what it does right see the these this uh this type of images already this type of images helps in image unwrapping all right here you can see that this is a bird all right this is a bird all right aft after the image unwrapping all right after the image unwrapping technology is applied here you can see uh like in this image alright from this image the face all right the white borders are there and here is the face it the face has been unwrapped from that whole sorry black borders right so here you can see the face has been unwrapped and it has been positioned like this the similar thing will happen with this bird also all right it would be unwrapped alright this image would be unwrapped and then it would be uh placed like this all right this would be the main image so this is how image unwrapping works all right and image unwrapping is also a very important concept similarly uh here you can see this is a uh like many people use this all right and it this black and white image makes it easier for the algorithm all right makes it easier for algo for the algorithm to do the detection uh to uh unwrap the image all right but there are many powerful algorithms data that have been designed and they can efficiently extract or you could say unwrap the images of unwrap the color images also so that's why we can also use uh colorful markers too all right so yeah and even if you if you notice all right uh if you go to uh let me show you in here also all right here you can see uh the marker already i have already told you that this is the the marker this is the image of the marker that i have uploaded on viewforia's database right for markerbased tracking as you can see the image has been like the texture of the image has been is really low like the quality of the image is really low it has been pixelated you can literally count the pixel if you want all right although it would be hard because there are lacks of pixel in there but uh here you can see that the image has been pixelated the quality has been lowered all right the image is distorted alright that's how it it helps to track right and that's how it helps to track it tracks pixel by pixel it this things helps to unwrap the image also so that's how my uh marker image unwrapping works all right it unwraps the mean mean particular portion from the whole image all right so now now it's our time alright it's our very time to understand ar system architecture all right see if you understand the architecture you can even create your own ar sdks or red marker based ar sdks although that of course won't be easy all right because uh for before developing any sort of sdk you need to have a good amount of knowledge of computer vision already because see augmented reality was built upon uh computer vision only it is it is uh you could say uh a product all right or you can say it is a technology of computer vision only if computer vision wasn't there then augmented reality also wouldn't have been possible so come to vision is the is the root all right it is it is the root of uh augmented reality so it is really important see if you want to create your own uh ar sdks all right if you want to create your own ai sdk you need to have a good knowledge of computer vision you need to know the algorithms all right even i'm learning computer vision for augmented reality so i can get a more deeper understanding of how these things work all right i have a like i currently have a decent understanding all right i i understand how these things work but i don't know how to uh develop these things all right what algorithms are used so for that i need to learn computer vision so i'm also learning that so it is very important for you all right if you want to develop your own sdk you have to learn computer vision all right so without any more talk say let's start with uh understanding the uh ar system architecture all right see in this architecture you can see there is a camera all right then uh from the camera the image is passed all right uh image is passed to the tracking module all right some things happen in there all that will understand what things happen in there all right then it is passed uh to the rendering module where the real world and the virtual uh objects are combined in the rendering module all right and the augmented uh augmented output all right the output is passed through the rendering module to the display all right so this is this is how it works you can see the diagram all right like like if i if i had to show you like this all right uh pen first of all it is uh moving from here and there uh then from here it is going to here alright then from here it is literally going to the rendering module and this all right this virtual module is adding all right this virtual module is adding to the uh real world component all right um sorry for this bad handwriting but this is rc means real world component all right and real world component and real world component sorry virtual component and real world component are like actually attached all right uh the real world uh the virtual component uh is attached to the real world and then the output all right then the output is generated that is the augmented image all right and after that it is being displayed in in your systems display all right so this is it that's how it is working all right now if we talk about understand the module all right see if we talk about you already know what is the camera right what this camera module does right because it it renders like it renders the image of a real world all right into your phone that's what a camera does but uh what is the capturing module all right see the things that you see from your mobile camera right you cannot even capture it right you can even capture it so uh through the camera some sort of image is passed to your display all right and when you click on that centered button available in your mobile camera software when you click that it is captured right so the capturing module basically helps to capture the image all right basically it helps to capture the video or the other image all right so this is what capturing module does now if we talk about the tracking module all right see the tracking module is the core all right the tracking module uh is the core and if we talk about uh see the tr how tracking module works now it it calculates all right it calculates the pose already of the camera all right in the real time all right like it will uh calculate where your camera is and if i talk about uh fovs all right that is six degree of freedom it means that uh you have a freedom of uh to look anywhere already you could this is a very basic definition of uh six dofs all right see what this term pose does let me tell you uh pose estimation all right basically helps uh helps to get the orientation and location all right get the orientation and location of of a particular object this is what the tracking module does all right it is basically the code alright it helps to calculate the pos pose of the camera all right in real time it's not like he uh it will uh only capture once then it won't do it again it happens in loop so the pose estimation is done and also because of that we get the 3d location or you can say the orientation of any sort of object that is the work of tracking module all right if we talk about the rendering module all right see uh what this rendering module does is basically it uh combines all it it combines the digital object all right it combines the digital object with the real world visual all right with the real world image right if you if you you have used any sort of augmented reality you might have seen that right that some 3d object is appearing on sort of on any marker right on an image a 3d object is occurring so a virtual uh a virtual basically a virtual component is being attached with that image and then it is being processed and pushed forward for the display all right and if you are confused already if you conf if you are confused about these uh modules don't worry all right we are again going to look into another all right this is a very much more simplified version all right this is a much more simplified version of that ar system architecture i have included this because i thought that for the first for the first iteration i think people will get confused that how this like what did i explain to you you might not understand it right so i have also included another architecture all right the same thing happens in here also but i will reexplain see in here all right a live video feed all right is going through the camera all right to the image capturing module all right and it is alright and it is divided uh in frames the the video is divided in frames and then it is going through the image processing mode module all right and in there in there the marker is detected and tracked all right means uh in there the marker is detected actually all the processing is done all right all the post calculation is done and then we go to the marker tracking module all right where the post calculation is generally done and all the tracking stuffs are being done in there only all right all the uh what can i say those are virtual points right those feature points are applied in the image in there only uh the pose calculation is there only see if you are confused about ports pose calculation don't worry all right uh let me explain it to you again suppose calculation is basically it calculates the position all right it calculates the position of any object all right that's what pose calculation is it calculates the orientation of the object and the location of the object all right so that's what pose calculation is and then after all these processing and tracking is done it is passed to the rendering module all right the virtual object all right the that the virtual object that we want to augment all right that we want to augment is combined with the real world image all right the virtual object is combined with the real world image then then it is passed to the display screen and we actually see the output on our displays so that's how this ar system architecture works all right i hope you are clear with the concept right again the same definitions all right the image capturing module that takes the images it breaks it to frame by frame then and all those things are that are being done then there is image processing module already the processing that are being done all right means the detection or you could say the recognition techniques are being applied in there all right then if we uh talk about the marker tracking module in there the position is being calculated all right the position is being calculated and then feature points are provided and uh the rendering module all right this rendering what this rendering module is doing this rendering module is basically uh combining the virtual object to the digital object this is just it all right it is doing that and yeah that's it so that is that's it for our today's lecture and i hope you have understood alright i hope you understood uh how all these things work all right i hope you have understood how the market based ar system architecture works all right so i don't think now it would be any problem as you have uh as i have cleared all the very basics or the very basics of markerbased augmented reality now i don't think it would would be any problem learning marker based ar development in this lecture i'm going to tell you how to uh set up your unity and euphoria engine for developing ar applications and later on in this video only we'll be creating our very first augmented reality application with unity and euphoria so yeah the very first thing you have to do is go to this website developer.viewfourier.com all right and in there you have to create your account after creating your account all right you can see right in the top that there's a download section click on that particular section and you will be redirected to this page all right and in this page all right you are seeing multiple options and the uh yesterday only like in 15 november uh the latest version of v4d engine has got released that is 10.3 view 4d engine 10.3 all right you can even uh select your particular version right from here already that is 9.8 or 18.3 uh i have seen one problem that is uh when using any version of any 10 uh like any view fourier version of 10 uh i am facing an error in unity uh so i would suggest using 2020 only all right for this course because i'm going to use the latest version of euphoria and uh now you have to download the sdk all right what is an sdk sdk is the software development kit that will help us to develop for uh means ar applications with unity and euphoria right so we have to download our uh sdk now here you can see there are multiple options available all right uh let's say you don't want to develop with unity alright you don't want to develop your marker based ar application with unity you can go for android studio or if you want to do it for ios you can uh that is xcode you can you can download for ios then there is a uwp then there is uh lumen so you uwp is a basically universal windows platform so uh you can use that too so for uh for this course all right for this for the sake of this course we are going to use um view fourier engine alright the very first option that you are getting that add view for the engine to a unity project or upgrade to the latest version so just simply uh click on it all right and uh some things will be loading up in here all right and then click on agree i'm going to decline it because i have already downloaded uh the sdk but you can you have to click i agree and then download the sdk all right so yeah after downloading it all right after downloading what i would suggest is first let's set up the web version all right like set up all the things from the website right and then after that we'll be moving towards unity so how to do that right so now we have to get uh into another page that is this develop section all right remember you have to create your account first to uh get all this thing so do create your account so now click on this develop i've already opened it on my second window and here we go so here you can see uh there are target manager license manager so what are these two the license manager actually helps us to manage the licenses all right licenses means there are some particular lines of code all right there are some particular lines of code code you could say some special unique code that helps view fourier to connect with the backend server and verify actually uh what kind of uh services are we using right like uh i'm going to use the uh basic uh service of euphoria that is free so yeah all right so that uh that uh basically uh particular key actually uh we call that a key that that particular key would help us actually to uh connect to the viewforia portal all right from our unity all right so that our app can utilize the features that we uh get after uh using the different versions of euphoria that is basic premium all right any of these two versions so yeah now uh the very first thing we have to do is we have to create our license so how would we do that see uh you can even buy the premium version but i don't i don't have the money to buy it so i would uh simply get the basic all right i would click on the basic all right and uh it would load some sort of page so as you can see it right here it is loading some page and uh in that page all right uh keep your license name all right let's say i want to uh name it to view first first ar app all right this should be the name for my license and here you can see this these are the things and uh we have to check this box all right we have to check this box and after that uh click on confirm all right and that would uh redirect uh that would create actually our um license and we can click on that and then simply go uh go to that license and copy the license for us right so i would simply click on the license all right i would simply click on that license and here we go we go uh it copied uh it got copied in our clipboard now another important thing that we have to do is we we have to go to the target manager right just click on the target manager see what uh this target manager does is it helps us uh keep the markers all right see i've already told you that in market based ar we need markers and we have to store like store it somewhere right so uh the target manager uh helps uh keep track of the marker on the servers of euphoria and also we have to download a unity package for that so that we can include it on our unity means local uh local computer right so how would we do that so for this simply you have to click on add database right and then you have to uh name your database let's say uh first ar app right first first ar app uh oh i missed that r no worries yeah so then i have to click create all right and then uh turn it on then then go to that particular target and you have to upload your target in there like means the marker image so that we can use it right and i would show you some other things also so that you can choose your right marker all right uh choose the right marker for your application it's really important to get the right marker because if the marker is of low quality then marker based ar won't work well so that's why right so click on add target all right so i i already have some images so i'll be choosing from that now here are three other options all right uh we won't be looking it now all right so just uh click on the single image all right basically a single image is selected by default so no worries but then you have to click on browse you have to choose an image all right you have to choose a image so yeah here we got an image of a car all right uh i don't have any other image so i'm gonna use that one and you can give any width you want all right so my uh i would like prefer to give six basically what would happen now that uh the width you give all right it would uh get that particular units of width in uh the unity engine right so uh remember that that won't be like give any sort of difference so i want to name it marker all right so then click on add and now it's uploading our target all right it's uploading our target and that's really cool so let it do its job cool now as our means marker is has been added i want to show you some other things also so to get those things click on the marker right click on the on the marker it would redirect you to the marker properties you could say that so then i'm going to show you some very important things all right and that would give you an understanding that what sort of marker you should use and what sort of marker you should not use for your marker based ar applications all right so as you can see here all right in the in the if you can see in the right side there are multiple texts right type single image status active target id augmentable all right this is the section that this is the text we want to focus on as of now what this tells us five star means this image is very good already it it is going to be superb for uh tracking now see remember always that three uh the range between three to five star is okay all right below uh below it won't give you good results even three sometimes won't work that great so always remember to take a picture all right always remember to take a picture that is that has got four to five rating all right four to five star rating and it's really really really important all right so uh yeah so now as we have seen that what sort of marker we should use so we should use remember we all we always should use a marker that is really good now you have to click on this uh show features option all right i'm going to see here you can see that remember that slide that uh that uh in that slide there was uh a ganesha's picture and there was some dots in it so you can call those as tracking points all right those are known as tracking points with the help of these the marker actually tracks the marker and helps to put it up on the marker right so uh yeah this is these are the details that you need to know all right and now uh another thing we have to do all right another thing we have to do is to download this database and then after that we are going to set up our unity engine all right we are going to work on our unity engine so first of all let uh let the scene load let the scene load all right and uh then click on this download database all right and here you are going to find two options that your android should export or visual studio but of course we aren't working on any of them so we are going to choose unity editor right we are going to choose this unity editor and then simply click on download so it is compiling our database as of now all right after it is done compiling uh we are we are uh going to save that file and uh then we are moving towards unity right so yeah that's cool so now just click on save all right and our unity package uh will be downloaded just as you can see it has got downloaded so let's move towards unity so as uh we have uh created our viewforia assets that is we have created our marker and set it a set at i have set a target so now we have to actually change our platform so how would we do that right see uh basically we are developing ar application for uh our mobile right for our mobile devices that is android devices so what are we going to do see uh currently currently if i if i show you as you can see in the top the the currently we can develop for pc mac and linux standalone right that's what we can develop for but we have to develop it for android so what we have to do it's fairly simple all right just go to this file all right then click on build settings now here you are seeing multiple options that is pc mac and linux standalone and the unity logo you are seeing here it means this particular thing is active all right now if i click on android you are getting multiple options don't look at that as of now all right you can uh actually take a look uh at that afterwards uh this uh whole lecture all right you can try it out by yourself but we have what we have to do is we have to click switch platform but let's say you don't want to develop for android you have an ios device so you can click on ios also uh see these things won't work if you haven't installed the ios module alright i'm on a windows laptop so uh it doesn't makes any sense to install uh uh basically to install basically ios module uh in unity so i haven't done that uh but i have android ones right so what i'm going to do is i'm going to uh click on android and then switch platform it's simple as that what it will do is it would uh make our unity uh means it would uh give the means it would give the power to unity to develop for android so just click on switch platform and it would start doing its work all right and after it gets switched uh i will return back with uh with the next section so now uh basically our platform has been converted to android or you could say shift it to android now we have to import our sdk and one tip i would like to give you guys is that before all right if you are developing for any platform let's say you are developing for android only or ios only always remember first change the platform then import anything you want because after importing all right uh this happens to me a lot like still it happens what happens uh is basically uh i do the development all right let's say i'm doing doing it for android all right i do the development and later on when uh i noticed that i haven't shifted to android platform and you know when uh after half of the things are done multiple modules will be there multiple assets will be there in your unity and when you will shift that now it would take a hell of time so remember whenever starting with unity if you are going to change platform do it do it at the first then only import any asset module or anything you want alright because it would reload all the script things it would recompile it would uh make the assets compatible for android and all those things background processors going on so always remember to do that right and now it's our fair time all right to import the sdk so how we do that two steps means two methods are there that is first of all simply open that whole folder all right open this folder and simply drag and drop all right simply simply drag and drop it in here all right one way is this another way uh is to basically right click import package custom package then import it all right it's uh simple as that well so now uh as uh as that whole processing thing is done now we have got an another window all right basically this is the package window all right don't worry about anything here and just click on import all right and it would import your uh view for your module and into unity all right and give it its time so that it can do so all right and also when it says something like this what you have to do is click on update all right and it would again start means resume with the importing uh stuffs so guys now our view fourier engine has been imported all right and one of the uh very good things all right actually uh there's a problem with sometimes uh it occurs or what happens is that uh sometimes when you import uh euphoria right uh unity fails to compile it or something like that some sort of like that happens all right and your uh view for a engine doesn't get imported successfully so how would you check that your v4 engine has been imported successfully right so what you can do is click on the hierarchy panel right click and out of all these uh default options you will get a new set of option that is view fourier engine and that's when you know that we you have successfully imported v4 engine and if not all right maybe due to some problem you ha you wasn't you weren't able to import it successfully what you can do is reimport it as simple as that and i'm sure that that would fix your problem right another thing all right uh uh do you remember when we uh create our created our marker database in the target manager in developer.veforia.com we downloaded another unity package all right so what that what is that unity package that unity package contains the markers all right and we have to import that unity package all right so again uh previously i showed you uh the drag and drop method now i'm going to show you the right click method so click on the project panel right click all right all right simply simply just right click click on import package custom package all right and then get that marker package the uh the my marker packages name is fast ar app so i'm going to import it all right so again the same steps you will get a window like this and click on import and your files will be imported so now as we have imported our asset all right uh so now as we have imported our marker database and also the view fourier engine sdk now it's time it's our very time to develop our own ar application right so how do we do that the very first thing all right the very first thing our viewforia developer does delete the main camera we don't need that main camera all right because that main camera is meant for uh virtual rendering all right it is only for virtual rendering not real plus virtual what euphoria does is viewforia is really good and he provides us an ar camera built into it so just right click in the hierarchy click on view fourier engine and then click on ar camera and here we go you got an ar camera now this camera is going to work for augmented reality that is it is going to capture the real world and put the digital object in the real world all right and that's what we wanted now remember we copied our license previously uh during the web part all right when we're covering covering the web part we are going to need that license so just click on ar camera in the inspector menu yeah you are going to get this open viewforia engine configuration all right in the view for your vf script click on that you are going to get something like this all right and click on uh in this app license key section right this is the main section so what i'm going to do is don't click this button it would redirect you to that website and you have to create another license but we have already created our license right so i'm going to just paste that license right and voila viewforia got the license right so yeah that's cool now as we have done the very basic setups all right see uh in this in this one i'm not go not going to uh tell you how to create advanced v4 app this is just a setup video and this is a video of how we set up our viewforia and also uh we'll be creating our very first ar application with euphoria all right so unity is doing its processes so let it do it it's taking some time but don't worry yeah it's done now what we have to do is we have to right click again go to view fourier engine and now see in marker based uh as i already told that we need markers so how would we add those markers in unity so right click view fourier engine then there's something known as image target click on that all right and you will get another game object known as image target right now i know you might not uh see if i if i zoom it to you you will be seeing it totally white now believe me uh uh this one uh we have a fix for this right see by default unity uses image type that we have to uh specify from unity only this that is image uploaded in unity but as we already have a database all right we already remember we made a database we made a target manager database so we are going to use that so click on the image target all right go to this inspector menu and you will find something called image target behavior all right don't look into another other options we are going to explore these options in our next like in project videos or next videos so what we are going to do is click on this type uh selection menu all right and from here you would find multiple things cloud record basically cloud record what it does it it fetches the data from cloud that is the images from cloud and here is from database that we uploaded in our unity all right and now uh we have selected our database now we have to select which database alright maybe we have multiple database in our ar application so we can we have to select it that is our first erf and voila it will automatically get you the first marker the very first marker available in the database so we have this marker available in the database right so as simple as that nothing too complicated now what we have to do is all right now what we have to do we have to right click again all right see i'm not going to include any 3d models right now all right yeah we'll be doing that in our future videos but as of now this is only a setup video so just add a 3d object all right add your favorite 3d object there's no favorite one of mine so i'm just going to add a cube yeah and voila a cube got added now reset it transform alright reset its transform so it's back to zero all right and put it up a bit right put it up a bit and voila you got your cube now if you play this all right if you play this scene the cube will be there right the marker won't perform its functions why because uh you haven't put this cube inside of this image target so that's what we have to do we have to make the 3d model that we are using the child of the image target all right so now we are good to go all right that's cool right one of the good things of unity uh and euphoria is that you can test viewfordia on your pc only so how would we do that uh just click on play button alright and it would start the camera all right nothing to complicate it so let's do that so now if i put the camera all right i mean if i if i basically put the marker right in front of the camera right uh it would start tracking the cube it would uh start showing the cube all right just see it in here right uh you can you can see it clearly right now if i remove it all right you can see that the cube is staying here all right now this is a feature that called extended tracking of uni uh for euphoria only but uh it is useful also but not in this case so i'm gonna remove it how would you remove that all right just get out of the play mode all right uh so i got out of the play mode uh click on image target then here is a in the the default observer event handler only here you are seeing multiple or an option that is tracked or extended tracked so what i want you is to select only tracked all right and what would do uh what it would do is it would set uh like it won't uh now it won't have the feature all right now it won't have the feature of extended tracking all right let me show you by entering the play mode all right now if i uh if i show you all right just just check it out in here see the cube is here right i the cube is here now as soon as i remove it all right as soon as i remove it the cube goes away right see the cube goes away so this works much better if you try it on android all right so i would recommend you to build that application i would also show you how to do that all right i would recommend you to build that uh android application and then try to try it out on your android phone so and i guess you all are happy all right you created your first ar application i know that this is a cube but the project will be doing is going to be really interesting all right it is going to be really really really interesting so now to build our viewforia application what you have to do see i i already told you in the very first video of installing unity you have to have the android module open jdk all right ndk and all those things so that you can make the things work right you can build your application that if you don't have that then it would be a problem all right and now what you have to do is go to asset all right now the scene all right uh the scene we are on is known as sample scene all right we are using the sample scene and in here in in this particular section you have to add that scene all right you can just click on add open scenes like it would add the scenes that are currently open my sample scene is open i can simply click uh add open scenes you can even add uh it by drag and drop right it's as simple as that but uh as uh now we have added alright remember without adding the scene if you build that application it won't work out right so it's really important to include the scene you are working on then click on build all right then just click on build and then name your application i want to name it test all right and then click on save it would start building building your application in this particular section of the video i'm going to tell you about some of the free resources that you can use uh in your development all right see as a exact developer i need 3d models animations all the time all right and these resources are a life saver believe me like when i started or see i am not a 3d modeler all right when i started i didn't knew about these things but i got to knew over time and believe me these resources have helped me a lot and one of the resource is sketchfab see sketchfab is a really good place to find your 3d model alright see if you if you want a 3d model of a car you can just search for it you will get multiple 3d models for free all right there will be paid 3d models free 3d models too you can get your own all right so sketchfab is a really great place if you want some other options all right if you want some other options also there is uh another that is cg cg trader i guess its name is cg trader then there is turbo squid all right boost code is there there some some sort of free 3d models are available also there are also available in there but what i prefer the prefer most is sketchfab sketchfab has a lot of 3d models available for free so i'd suggest whenever you're looking for a 3d model go to sketchfab this is from where i get my 3d models all right so here's another resource that is known as turbo squid i already told about it to you but let me show you see this is another website from where you can get multiple 3d models for free and also for paid all right you can get it from here it has multiple 3d models of 3ds like it you can get blender 3d models cinema 4d models maya models 3dx models obj models all right similarly you can get cars models of multiple cars you can get models of multiple characters you can get models of animals then there is of vehicles you can search for any model you want all right so this is another very useful resource that you should have a note on this is another resource that you can make use of this is known as ready player dot me see if you want avatars all right if you want avatars for your uh games let's say you want your own avatar you can go to this website uh go to this website and make your own avatar based on you all right you can make your own play playable characters with this ready player dot me all right this is a really good avatar creation engine even if you want to um build your own uh like if you want to implement all right if you want to implement this ready player dot me avatar engine they also have a unity plugin for it so you can check that out too all right the thing that you are currently seeing is a is a output all right uh there is a 3d model that i customized all right that i customized so there's a 3d model that i customized and even you can make your own avatar so here comes another website all right from where you can get a lot of free 3d models all right there's a really great website i prefer this one too all right my next uh means after sketchfab my next choice is alwaysfree3d.com you can uh don't worry if if you are if you want these links all right i will provide a link down below all right i will provide all the links of the website that i am using down in the description or description box and also i would also create a pdf of it and upload it on my course website all right so you can check the links from there also so free 3d is also a really great website from where you can get a lot of free 3d models so this is also one of my choice here is another website alright known as nasa 3d here you can get all the free resources from nasa all right the i guess all the models in here are totally for free you can get all the models uh free uh models related to space all right related to nasa at this place all right i would provide the link down below so this is another great platform where you can get the 3d models it also provides you textures all right so this is a really great place so this is another website known as render hub from here also you can get a lot of 3d models both paid and free so you can search any model you want all right and i'm pretty sure that you might get those models in here all right even sketchfab is also there i already showed you turbo squid is there then there is free 3d now comes render hub 2. all right so this is another resource all right this is known as 3d leashes so it can if you want any sort of low poly household items you can get all the things from this website uh this particular 3d website so this is a really great platform also so you can simply go into this website and download your 3d mode here's another resource known as opengamer.org this is a really great website if you want to have free assets all right free ui assets for your application you can go to this website all right if you want uh if you are making any game this website is also going to be really helpful for you for getting the ui assets for free all right so it contains both paid and free assets this is another website known as archive3d.net all right from this website you can get any 3d model totally for free all right now none of these models available in here are paid so there are free models means the models that are available in this website are totally for free so you can also visit this website and search for your models here comes another free resource known as mixamo this free resource is provided by uh adobe you can add animations to your humanoid 3d models and there's a really great website that you should look for yeah this website lags a bit all right but there's a really great website from where i get animations for my 3d models all right so here's another resource all right this is going to be the last resource of the video that i'm showing alright but there are plenty of more resources available over the internet all right i would include all the additional resources that you might need also in the i would also add them in the pdf alright that i'm going to share with you all right and to get the pdf you can simply uh search for like search for it in the description below in the uh video and also you can get that from the course website all right so this is this is another website that says smithsonian digitization all right this is also a really good uh website for getting 3d models as you can see here there are many models available like of like skeleton of triceratops then skeleton of mammoths then there is orbiter space shuttle model is also available so you can there's also a really great resource all right so this much for this video in this lecture we are going to look into multiple tracking all right so this is basically a feature of euphoria where you can track multiple markers at the same time all right it's it's a this one is really useful whenever you are making uh an ar book all right whenever you are making games so these this feature uh helps a lot all right like for example if you are going to make an ar pokemon game right so with within one mobile there will be one there will be two cards and you would be scanning those card and make and two pokemons would appear and you would make those two pokemons fight each other all right so multiple uh market tracking helps a lot in many ways all right and in today's today's lecture only i'm going to show you all right so first of all uh i want you to set up your euphoria account your sd case all right you already know how to do that i have shown you in my previous video so if you are confused you can watch it watch that particular portion again and uh if you have any doubt you can comment it down in the comment section all right so without any further delay let's get started the very first thing you have to do is click on this main camera and delete it all right because of course we don't want the main camera and uh one more thing i would like to do is to stack up stack this game window or to the side all right to the side of my scene window so that i can uh see whatever thing is happening all right so yeah so just wait a few seconds all right cool so here you can see that it has been written no camera is rendering that's because we don't have any camera so now we do what you have to do is click on hierarchy uh go click on view fourier engine and select ar camera all right uh so you can keep it like this or you can stack it up uh on top of directional light i prefer stacking up on uh directional light it feels better actually looks good actually so that's why it's just a personal preference alright and now what you have to do is uh click on i means right click then again uh click on image target all right select a marker right from here click in the image started behavior click on from database and select the database my day for for my uh case the database is first ar app all right and the marker i'll be using for this is m1 and let's name the image target as m1 all right because i'm using uh the m1 marker all right so yeah so here we got our very first marker all right i would be placing the 3d models later on first let's set up our second marker so again right click click on view fourier engine click on image target all right then again name it m2 all right so then again in the inspector window only you will get a type selected from database then select the database that is first arf in my case and uh take this uh m2 marker that i have all right so you can uh you will get the marker what you have named after all right so make sure you do that now we have two markers in in place now the problem with that is if we if we try to show one marker all right if we try to show one marker at a time then uh means let's let's uh say for an example all right uh i'm using this app alright and now i want to show uh that total how many means i i'm trying to uh means track both the markers at the same time all right so i'm trying to do that and uh of course that wouldn't work all right so to figure out uh this problem we have a solutions all right so currently the problem we are facing is uh it will only track one marker at a time all right but we want to track both the markers at a time all right so we are going we are going to go to that feature but first of all let's uh set up our 3d models all right so right click or not right click uh i already have the 3d models all right i have the uh i have one dinosaur 3d model so i'm just going to import it right in here all right uh let me reset its uh transform all right so here we actually got the dinosaur i know it doesn't looks that good i just uh choose one random from sketchfab these are objs and believe me i don't uh want you to like use obj files all right i want you to use uh gltf files because they have better quality better texture quality and all those things all right that's that's the major reason but for the sake of this tutorial and to make things work first fast so i go got to go for uh this obj model all right now there are some materials all right so i will create the materials it's uh it's pretty simple here you can see there are multiple materials in here albedo so what you can do is uh right click in the texture section and create a dinosaur material so here i create a darkness of material now if i try to find where is uh exactly the means this is the normal map right this is uh the albedo one already so i found albedo one drag and drop it in uh here all right and drag this on top of this now this this one looks uh looks pretty good all right so now i need i also need to add the normal map so that it uh gives a better look all right so yeah it's it's uh looking really really great so i uh currently have click on fix now because it is not being marked as a normal map so what uh the what this fixing process would do is it will uh fix that uh texture to a normal map all right so just just wait for a few seconds and uh this process would be done all right now let's let's see we have ambient occlusion we have metallic texture so uh let's apply the metallic texture first all right so here we got the metallic texture but uh actually let's remove the smoothness all right then here we have the roughness all right uh so and uh then where is it yeah there's another albedo one this is uh maybe for the eye so i'm not going to go into that much so uh for now this this thing looks good all right so just uh as our model is ready so what you have to do is uh put this model under the hood of m1 that is make it a game object of m1 marker all right so for now our this this model is set up now again we have another uh model that is of a cake i uh like i was thinking to take another dinosaur model but then i thought let's let's take a cake how many dinosaurs would be there right uh so now i need to bring the scale up all right so i'm going to make it 50 50 sorry 50 and here goes another 50. all right so this this seems uh pretty big um so i would scale it down a bit so uh don't worry okay yeah this this uh this thing looks good all right okay cool now i wanted to save this all right uh save this and uh simply drag and drop this inside the m2 all right so yeah so now uh here uh one thing we would be seeing is all right one problem we will be seeing is that whenever all right whenever we are going to like play uh the scene what would happen is uh we only one marker will be detected alright if we give if we feed it two markers all right then it will only detect one of it because uh we haven't set up the settings that is needed right so that's what we have to do or click on ar camera all right then click on open view for your configuration all right so here you can see here multiple options and the one that would be uh our preference is that this one maximum size simultaneous tracked images all right so and there's another one maximum a simultaneous tracked object so basically the first of all let me tell you what the this two does basically the uh currently you can see uh one is written there alright and that means only one marker or only one object would be detected all right at a time so what we have to do is uh we have to increase it to how many uh like to harm to as many as as many numbers as we want all right like let's say if we want our app to detect four markers at a single time right so we can uh write it four in there all right or if we want it to track four objects at one time then we can write uh four in the object section but for for for this course we are only uh like we aren't exploring the tracked objects portion all right so we are going to explore those maximum simultaneous tracked images so what you can do is currently it is one just simply change it to two all right so that's how it's uh it's going to work all right so it's pretty simple as that there's nothing much to like exactly scare about all right but yeah this is uh this is it right see uh the thing that i would like to say is whenever all right uh generally generally uh whenever we actually like create ar books we don't usually uh keep making means we don't usually track two to three images at one time we just track one images at a time all right and that's what i would recommend you to track one images at a time because then that would make it more efficient all right or else uh the the ui might get cluttery if you if you don't manage it in that way all right and that gets a bit more complicated so i always recommend people to uh like for ar books all right for specifically ar books try to use only one marker uh means set the maximum sample antennas tracked images to one because at that point uh you guys will want or to exactly use already to exactly use one marker at a time all right so let me show you all right let me show you um just just see this now all right so we have uh we are able to just oh yeah we got it so we are able to see that uh at at a single time all right we are able to detect two markers all right so that is what how it works all right so i i would recommend you to try uh play with this this features feature more all right so that uh you explore more new things all right um so yeah that that's it so that's it for today's lecture all right so see you in the next lecture thank you in this particular section of the video we are going to look into virtual buttons so virtual buttons are another way all right are another way to add buttons in your view for your application all right you there are two types of buttons that you can add first of all ui buttons all right like uh using simple canvas and those buttons in world space all right you can do that another another way is that is to use virtual buttons all right so in this tutorial we are going to look into the virtual buttons uh and before starting all right before starting with virtual buttons there are some rules to be followed all right some suggestions some rules that are needed to be followed the very first thing all right the very first thing that should be kept in mind that the size of the button alright the size of the button should be equal or greater than 10 all right of the overall target area always remember that the size of the button should be equal or at least all right at least 10 percent of the overall target area all right now if the like if the area is 100 then the 10 uh the button should be at least the size of 10 percent of that area all right that's it another thing all right another thing that is always all right always try to place the button all right always try to place the button where the place is reach with feature points all right see in the introduction video i already uh showed you how to check for feature points and open the viewfor your website and look for where the feature point is much greater all right where the quantity of feature points is much greater and always place the button there all right another thing is that uh insert insert the buttons all right what does that means that means uh is that don't make the buttons all right don't make the buttons touch the image target borders all right the borders of the image target so always uh give some padding in the button from the outer side all right so sorry from a margin in the button from the outside all right so always remember that so always insert the button so that they don't touch the borders of the image target another and the last point is don't stack the buttons upon each other all right what does that mean see when you are viewing all right when you are viewing uh from some point all right when you are viewing the image target from a particular point you would see all right you would see that if you place those buttons on top of each other all right you won't be able to reach the uh second button it would be really like it would be really hard to get uh to the second button so don't ever stack the buttons upon each other all right so that's it so let's start the development of our virtual button let's implement it see uh i would like to mention is that i'm using the same project all right the same previous project that i used to uh develop the what like show you the very initial steps of euphoria all right so i'm using the same project so i i haven't had changed my license key and my database although if you want you can do so all right it's totally upon you if you want you can do so you can even create a new project for implementing virtual buttons i am doing this because i want to keep all the source code at one place and provide provided to you all right so it won't be cluttered up so yeah let's get started the very first thing alright the very first thing is you have to delete the main camera and then add a ar camera select view fourier engine and click on ar camera so let me uh place it on top of the directional light don't worry it won't have any sort of effect so it is totally upon me now i have placed my ar camera another thing is to add the image target now the image target would be same as the previous one because i haven't changed my image target but you can do so if you want all right now if i click on image target here i get my image target now let me uh select the database so i'm going to select from database and now i'm going to select the database that is first ar here is the marker that is selected all right now what i want what i want is to create a 3d cube all right i would show you why just wait for a second let me reset the transform of it so as i've reseted the transform i'm going to uh place it at the back all right i'm going to place it at the back so see i'm using shortcut keys q w e all right q for uh the this hand tool uh w for this uh anchor tool and e for the rotational tool and r for the scale tool all right so these are some shortcuts so uh i'm using those shortcuts all right if you think how am i getting this then yeah that's how i'm getting it now uh this cube looks a bit dull right like it doesn't have any sort of colors it's totally white and i don't like it so let's create a material for it all right now uh in this i'm also going to show you how to add textures to your material all right and i have already imported a texture i have downloaded downloaded from 3d textures dot me all right the links are given in the ar resources file you can check them out all right it is available on my website now let me show you the textures here are the textures all right and i'm going to tell you how to implement it now this is not a texture this is just an overview file so you can check how this how the cube will look but i'm directly going to implement it all right so first of all delete this uh delete this particular material we don't need it all right so and another thing all right another thing is that first of all create a material all right create a material let's name it textured textured box or let's say cube all right this is what i will name it after that what i want you is to go to the inspector panel all right go to the inspector panel and select the textures you want so what i will simply do is i will click on albedo it would pop up a panel now i have to find all right i have to find a texture i want now i'll find a texture that that has been named as baseline all right so it's not showing the full name just wait let me lock it cool now from here i can find what textures i want so for the very first thing uh in here i have to get a base color texture all right this one this is i'm going to put this in the albedo section all right now you might not see uh the effects in here all right you might not see that because we haven't applied the materials so just drag and drop the material in here and see it has been applied in the cube i know it has the texture has been applied but it doesn't looks good but you won't say this after watching the whole material uh applying thing all right now and here's there is another section that is metallic now let's find a metallic texture so here i got a metallic texture all right so see uh it's not like i'm identifying these textures it is just written in the end of the names now i would adjust the settings a bit all right i would adjust the settings a bit uh see you won't uh like you won't like it as of now the reason is i haven't applied other materials that that's why it's not looking realistic or good so i'm going to apply those now here i have to add a normal map this is a normal map so i'm going to apply the normal map and here you can see that uh the bids all right here you can see the bits in here are coming to show up all right they are putting the 3d aspect in here you can see it right now we have to add another thing that is a height map all right so let me find the height map okay yeah now i have applied the height map and this uh this height map will help me to adjust the height of the like height of these uh particular things right you can uh let me show you from like from uh from nearly all right so here you can see that it is moving right it is moving right so that that is what height map does now another thing all right another thing is that we have to add an occlusion now this is the ambient occlusion all right this is the ambient occlusion mask so now you can see that we have also added the occlusion mask now if you want to increase the smoothness you can do so but i am not liking the smoothness that much so it should be something like this all right now let's see if anything is left um roughness no um all right let's see okay as of now all right for us it's uh we are good with this cube alright this looks realistic too now you can get all the textures all right there are really great textures available at 3d textures dot me so i would really suggest to go in there and check out the textures alright and take the texture that you like as simple as that all right now another thing all right is another thing is we have to put this cube all right we have to make this cube a child of image target all right we have to make this cube a child of image target now click on image target all right and another thing that you may you might see that the inspector panel is not changing that's not any sort of bugs it is basically i have locked the inspector panel now i have unlocked it so i have got all the things all right now in the image target uh in the image target behavior script uh under the add target button you would find something a drop down that is advanced all right you need not to look into these um properties but for us the very important thing is this particular button add virtual button so click on it right and you can see that it has added a virtual button now if you click on it the virtual button will be visible to you all right now remember the rules all right remember the rules and try to resize it all right now i'm not sure all right and i i haven't seen where uh where are the feature points but i'm what i'm doing is i'm putting at a particular place and i'm trying to follow all the instructions all right so i would suggest you to follow the instructions too all right so we created our virtual button now now what see when you click your virtual button in the inspector panel you would get some options all right you will get some options now the very the very important thing that we have to see is the virtual button behavior script all right in here here's an option sensitivity setting that is a drop down all right so in the drop menu you would find high medium low now these are the sensitivity settings what this tells what this tells us is that how often or you can say um how exactly are we going to uh like when we uh place uh place our hand upon or sorry over the particular mark over the particular virtual button all right so how what will be the sensitivity all right or what will be uh the rate all right when it will like detect all right it would detect and start doing the function so that's what sensitivity means it tells that how sensitive the particular button is all right if if it is low then it might like it might take some sort of hard work to get the button to work but if it is high then it won't take that much hard work to make the button work all right so yeah now now as we have created our virtual button all right we also have to add some functionalities to it right now i'm going to uh create a script all right let me tell you first which script i'm going to create on it i'm going to create a script that is that will simply uh when you hover all right when you hover over the virtual button all right whenever you hover over the virtual button what it will do is it will simply disable the cube or let's say uh hide the cube all right as simple as that nothing too complicated all right so yeah let's start coding now see as you can see i have created of multiple folders in here and i i would suggest uh you should also create because that would help you to structure your projects now i would create another folder in here that is uh watch virtual button scripts all right now i would uh create different types of folders for different types of tutorials all right now in here create a csharp script and i'm going to name it virtual button all right or let's say virtual button or let's say button behavior something like this behavior so it would take some amount of time to create the script so now we have created our virtual button behavior script right now it's our time to code it all right and you already know that what we are going to code all right so the very first thing the very first thing is we have to somehow target the cube and all right and before that all right and before that we also have to uh use a namespace all right we also have to use a namespace called euphoria all right it's very important to make the virtual button script virtual button functions to work all right so yeah so i remove the comments and make sure that the void start function is there alright and if you have forgot what this void start function does don't worry i'm going to reexplain it all right the very first thing all right was to include the namespace euphoria now uh to like edit the cube all right or do something with the cube we somehow have to uh grab or let's say get the reference to the cube right we have to somehow store that cube somewhere to be edited right so how do we do that it's fairly simple we have to create a variable that is public game object all right as it is a game object so the data type i am keeping is game object all right and then cube now one thing you should note all right if you if you don't give public or give private what will happen is this particular field won't be showed all right it won't be showed in the inspector if i had to show you just wait all right let me show you i have created this particular game object all right and let me show you in uh let let the script compile all right let the script compile and i will show you that what will happen if you don't give public all right now see there there are two ways to reference a variable all right i will be showing you two ways both the ways actually like uh the simple drag and drop reference referencing way and another that is using the script to reference all right so yeah now let's attach the cube to our image target all right you can create another empty game object and attach it in there but the thing is that the process will be following up is it requires us to add the script in the image target only in the image target game object only there's a reason behind it i would show you why all right it depends on our scripting procedure and i'll be scripting it in a in that way that the script should be in the image target game object only all right so you can see that we aren't able to see any sort of uh variable but we did create one so let's give public let's see by default alright by default whenever you create a game object all right or any variable it is public it is private all right those variables are private by default so make sure if you want to make them public if you want to make those variables public then you should remember that to add public keyword in front of them so now let's see if our cube like if our variable has appeared all right so click on the image target and then go uh at the last and check in the scale in your script that you created that the cube is coming or not all right so in here our cube variable is coming now what you have to do is select the cube all right select the cube and drag and drop it in this particular area alright in this particular place it uh it is currently taking all the uh game objects that are of type game objects all right it is taking all the objects available in the scene that are type of game object all right so anything that is game object it will take it in here it can be stored in this variable all right now another thing is that we have to create a private variable all right because i don't any uh want anyone to edit it externally so we have to give a data type that is virtual button behavior and let's name it button or let's say v button that is virtual button all right this uh you already know uh if you don't give public in front of any sort of variable what will happen all right now as we have created all right as we have created a virtual button we have to reference it also right we also have to refer so how should we do that right it's very simple all right there are some uh functions that is get um get component gate component in children we would be using get component in children because we are targeting the like we are targeting the means let me show you all right see you can see in the unity editor all right that this is the image target all right this is the main uh game object all right and the virtual button and the cube all right the virtual button and the cube are a children all right are children of this main game object right so we are attaching the script in this game object all right and we will be trying all right we will be trying to access all it will be trying to access the particular uh virtual button behavior all right virtual button behavior script all right we'll be trying to access virtual button behavior script from the virtual button game object all right so we'll be doing this so very the very first thing alright see as i told you that in normal state all right in normal state the cube should be hidden right and when we hover all right when we hovered over the particular virtual button all right the cube should be visible all right that's what i told you right now the very first thing is we have to make the cube invisible all right so cube dot set active and put false in here so what will happen with this is what will happen with this is uh whenever you start on it whenever the game is starting all the app is starting at first all right at first instance this uh cube will be deactivated all right or in simpler terms it will be hidden all right and you know that what void start is void start runs only once whenever the application is starting all right so that's why that's why whenever the app will start we will run this particular function cube dot set active false so that the cube gets hidden all right another thing is that you can simply hide it from the means hide it from the particular uh hierarchy panel from the scene only but of course that isn't a good idea so let's do it by script now you have to uh instantiate all right you have to uh like contain the virtual button behavior script all right so i'm going to name it uh sorry i have already name it that is we have v button oh sorry v button so yeah now let's let's sort uh what can i say let's um add all right let's uh reference that particular virtual uh button behavior script all right so you have to uh type this get component and children all right and inside of this inside of this particular greater than and lesser than arrows you have to write the script name all right that is virtual button behavior all right now we have targeted the virtual button behavior script now all right now let's create two functions all right let's create two another two function that will help us to activate and deactivate the script so void on button pressed we have to take a virtual button behavior as a parameter sorry vb all right and then what we have to do is whenever all right whenever the button is pressed or you can say button is hovered we have to set the state of the cube to true so that it is visible all right and whenever but a button is released all right released whenever the button is a button is released what we are going to do is we are going to simply deactivate the cube all right so it is as simple as that but all right but we haven't uh like see whenever to make any sort of function work right any sort of method work we have to call it right we have to call that particular function but in our case we haven't called it can you see where we have called it see now all right like when you create normal buttons ui buttons alright in unity there are uh some sort of on click on click functions right and in the button parameters there are on click functions in here all right in here there there is no on kick on click function available so we have to uh like create our own on click all right or you can say register these functions in our button so how do we do so it's it is fairly simple all right it is fairly simple so select the button all right and then we v button dot register on button pressed all right and inside the parenthesis pass the function on button pressed because whenever the button is pressed we have to run this particular on button press function now v button dot again we have to do another thing that is on button released all right so on button released all right so yeah this is it all right this is it now let me recapitulate the whole code to you all right so that you won't get confused the very first thing we did is to uh include the namespace using euphoria then what we did we created a game object public game object that is a cube and referenced the cube to it then we created a virtual button behavior named v button then uh in in the start already in the void start what we did we uh like in the void start we specified that whenever the application starts deactivate the cube all right the cube should be hidden then after doing so what we we created two functions all right having uh virtual button behavior vb as a parameter so the first function that we created is on button pressed what it will do whenever uh the when we whenever we are hovering over the button or you can say whenever we put our hand over the button that means that we have pressed the button so that's why it is written on button pressed so basically you are hovering over it so uh this is what happens now whenever on button pressed function will be called the cube will be like will be restored it won't be hidden anymore but whenever the hand is released from the button all right whenever the button is released again the cube will be hidden after that what we did is we referenced that we referenced our virtual button behavior script in our v button uh component and then we uh used functions to call our own functions right like v button dot register on on button pressed what it will do is it these two works like uh on click all right whenever uh whenever you are pressing the button it will do some function and we have passed the function that is whenever we will press the button this particular on button pressed function should run and another is that v button dot register on button released all right what will what will it do whenever the hand is released from the button it will run the function on button released all right so let's save the script right let's save the script and try it out in real time let's try it our basically let's write our application that we created the very first thing i would suggest you to do is to change the sensitivity setting to high alright and then click on play mode all right so as you can see it right in here all right here is my marker you can see that whenever i am hovering over my hand you can see that the cube is appearing and whenever i am releasing my hand the cube is going all right so this is how it basically works all right as simple as that so congratulations you learn to create how your how like how to create virtual buttons but if you uh if you ask me what do i suggest virtual buttons or ui buttons believe me ui buttons are far better than these virtual buttons all right so i would always recommend you to use uh ui buttons yeah if there is a need to use virtual button then only use it all right because those watch these virtual buttons sometimes even doesn't tracks the hand like it's really hard to get them track the hand maybe it's because of my laptop's camera but it is really problematic and uh creates a lot of problem and also breaks the user experience so that's why i always recommend ui button all right so yeah in this lecture we are going to learn how to use video playback feature all right in our viewforia project so this in this video we are going to uh implement our own video player you in augmented reality using euphoria and unity after this video you would learn how to use your videos in your games all right in your v4d applications now in this video i'm going to show you there are actually two ways to uh means add the video playback functionalities such as play pause and stop all right but there's another way that is the noncoding way all right i'm going to show you the noncoding way that is to use the uh given on click functions means readymade on click functions give a given in unity all right even i'm going to show you how how to play the video whenever marker is found and stop it whenever marker is lost all right this video is going to be the real is going to be really simple video so follow along all right now first of all delete the main camera after deleting it go to view fourier engines uh add ar camera then again right click euphoria engine and then add image target all right in the image target select uh from database then select the database and the image target all right this is the basic process that we follow along all right and i'm using the previous project only so i need i haven't created any sort of new license or any sort of new database so i'm using the same marker and all those things but in different scenes all right now uh here you can see here is a script default observer event handler in here there you can see dragged or extended track click on track all right then what you have to do is click on image target add a plane all right go to 3d object add up plane all right here you can see a plane is added now we have to reposition it uh move it upwards a bit that is in the y axis then resize it all right so that it can fit the marker all right you can even create your ar video playback like ar video application or you can say ar video player after watching this video all right you can like get all the videos from the file explorer and then show it in here all right you can create your own application with it but in augmented reality all right now let's name the plane to video playback or let's say player all right now in here after that go to uh in the inspector panel only search for video all right click on add component then search for video and you will get a com here you will get a component called video player all right now i have already i already have a video imported all right i already have a video imported in my uh assets so i'm simply what you have to do is you already know how to import it right because you just simply have to download the video and just import it it is as simple as that now you have to drag and drop the video inside of the video clip parameter all right and voila this is the thing you have to do all right now another thing is that whenever you play all right whenever you play this all right the video will be inverted all right now let me show you what are the problems that we'll be facing now so as you can see in here all right as you can see in here the problem with the video is all right it is currently playing all right it is currently playing just wait the video is currently playing and it is inverted also all right you might not be able to hear the audio but the audio is also playing in the background all right so this is the problem we are facing currently let's let's fix it all right let's fix it see the very first thing all right the very first thing you have to do is to invert this all right invert means rotate this in the y axis rotate this whole plane in the y axis so that we get the video straight all right now after this will be getting the video state another thing all right another thing is that click on the plane all right in here the video option there is an option called play on awake what does this mean this means whenever you are like whenever the application is starting it will start playing the video all right this is what it means now uncheck it all right uncheck it now uh all the problems that we we were facing uh is fixed now so let's implement the features that i told now here you can see here are two option on target found and on target lost right what we have to do is an air uh click on on target found click in it all right and then here you can see this is the video right this is the video now drag and drop it in here all right drag and drop this video in here now uh i fall i guess i forgot change the name so name it video player all right name it video player now what i did let me show you the process again all right click on image target here are two options on target found on target loss these are called events all right these events call some sort of function all right these type of events are also available in ui buttons also i'm also going to show you how to create play pause button in ui all right so don't worry now what you have to do is click on this plus icon in on target found then drag and drop your video player inside this particular field then here you can see here's another here the drop down that no function written in here all right in here what we have to do go to the last and you would find an option called video player all right now in here what you have to do here are multiple options available from these options you have to click on means call the play function all right what will happen whenever all right whenever you try to play the video all right sorry whenever you uh whenever the marker is found all right whenever the marker is found it will start playing the video all right another thing all right another thing is that i want also to integrate whenever all right whenever the marker is lost the video should pause or stop all right so for my case i would like to stop it so again uh in here's an another event parameter that is on target lost again do the same thing drag and drop the video in here call a particular function inside the video player i will be calling stop function all right so yeah this is how we basically create our own video playback features all right now this is the basically uh this is basically uh if you want only to use euphoria to control the video playbacks all right like whenever the marker is found you want you want to start the video and whenever the marker is lost you want to stop the video all right so let's try so as you can see in here all right here uh the marker is found and the video is playing all right i'm not sure you are able to hear the audio or not but you can see the video is playing now if i remove it all right now if i remove it all right uh the video has stopped right you are not able to see anything now if i again all right if i again uh put the market you can say the video is starting all over right from uh from the start the video is starting from the start all right so yeah we successfully created our video playback features all right we successfully created our video playback in viewforia now it is our time to do the same thing using buttons all right that is to implement the play pause and stop functionality using buttons so it is pretty simple all right it is not that complicated what you have to do is see i'm not going to remove these two functions because i think these are good all right because whenever uh i want key whenever the marker is found it the video should automatically start and whenever the marker is locked the video should automatically stop all right or you can what you can do is uh you can uh like make it pause all right just make it pause let me change it to pause on it so whenever the marker is locked the video will pause and whenever the marker is again found after being paused the video will play from the point where it has been paused all right so it is it so that's how we implement uh video playbacks in euphoria if you want to do the same thing with markers like marker lost or marker found all right now we'll be doing the same thing using uh ui canvas in viewforia all right so now as we have successfully created our video playback now it is our high time to implement some particular buttons for it all right so how do we do that the very first thing click on image target um sorry yeah click on image target then go to ui alright and click on canvas all right so click on canvas then in the canvas here you can see canvas scaler here it is written constant pixel size changed into scale with screen size it will help help the ui to be more responsive all right so yeah let me make it first let me go to the 2d mode for designing the ui all right now as i'm 2d mode as i'm in 2d mode now i have to implement the buttons it is fairly simple just click on ui then i would like to implement text text mesh pro buttons all right so i would click on button text mesh pro and it has been imported all right the very first button that i have to create is the play button all right this is the play button that i want to create now i have to anchor this button also all right so how would i do so so simply click in here all right you can see this direct transform option click in here and press alt key after that click on the this last this last one all right click on this last one now i also have to change the text inside it all right so that it uh resembles play button all right now let's make it bold now i i see i would be duplicating this button all right so that it becomes more easier for me now yeah now let me change it to pause all right now let's change the text of it to that is to pause all right now again the same thing duplicate it let's name it stop let's change the name to stop and also make it bold oh all right i i have already made it bold now again go to rick transform alt then the right side see our button is anchored all right in a great way now what we have to do is we have to implement the functionalities so the very first functionality i am going to implement is the play button functionality so click on the play button go to a go below alright go below like in in the last and here you will find an option called button option or you can say button component in here all right in here there's an option called on click all right so simply click on the plus button it's it's it's similar to the image target on target found alright it is similar to that now again drag and drop the video player object inside alright drag and drop the video player object inside the play button then select video player and then click on play all right again do the same thing all right do the same thing with the other button but choose different set of functions based on the function functionality you want all right so this is the pause button so i'm going to use the pause function and there's the stop button so i'm going to use the stop function all right cool now let's let's test it out by playing it all right so guys just see what is happening in here all right so whenever i you can see the video has started playing all right you might heard uh some sort of sound maybe i'm not sure all right now let's let's pause the video all right see the video is pause now the video is pause now let's play it again the video is playing all right now let's pause it the video is pause now if you want to stop it the video has stopped now if we want to play it the video has started playing so all the functionalities that we implemented is working perfectly fine all right this lecture we are going to create our own car customizer so this the basic logic or idea behind this car customizer is would uh would be providing the user three to four different colors all right and based on those colors the player would be able to like select uh a particular color and paint the car all right or with that color so this is the basic idea behind today's project and if you want alright if you want you can like customize this app further like you can add detachable doors you can uh add numerous numbers of tires that a person could change right so uh you could you could do those things also to make this app more uh like more big and later on you can launch it on play store already when you can add uh ads into this application all right so the uh let me tell you so first of all i already have a 3d model all right inside of my unity engine all right this is the 3d model actually i downloaded it from uh sketchfab uh actually uh let me show you this is uh the actual model that was there i edited it later on the this is the actual model that was on sketchfab uh so i'll edit it later on basically this uh this kind of color came just because of uh it's a fbx is uh it doesn't already have the properties that i want so i created a new material and me applied those materials into the car all right so that's what i have done so uh the the better option would be for you to is uh download the gltf models all right that is download the models in glta format because they are they comes in much better quality and they have the texture already embedded in it right so it would be much better to work with those all right so let me first reset its transform all right so uh so yeah i've reset it it's transform and uh i'm like just a bit moving it uh in the zaxis just a bit all right and now what you have to do is uh go to your browser all right first of all we have to create a license for our ar application right and one more thing i have already imported the viewforia engine all right and you already know how to do that and you also know that how to check whether it is imported successfully or not so make sure uh you import the view fourier sdk and before importing all right always make sure before importing change the uh build platform alright because if you change the build platform later on that is after importing the model the sdk then it's gonna take a lot of time so what i did is uh after creating the project i first shifted uh the build uh platform to android all right and then uh what i did is i go i got to the player settings all right after going to the player settings what you have to do is uh go to resolution and presentation all right not sorry not in the resolution presentation just wait okay yeah i was actually in the desktop tab that's why i wasn't getting all the options so now as i'm on the android tab uh go to the resolution and presentation you will be getting a default orientation change it to landscape left alright it's totally based on the camera you can choose any uh any mode you want alright but uh we'll be creating our application in landscape mode only so make sure either to select a landscape right or landscape left i chose landscape left because of the position of my camera all right and uh now go to other settings all right here you would find uh android build settings right so what you have to do is uh select uh android version all right that is the lowest standard version you want to support so for me it's a api level 23 that is android 6.0 you can choose a kitkat you can choose uh lollipop and anyone it means any target api level it sorry minimum api level you want all right and leave the target api level to automatic highest installed all right so yeah that's what you have to do uh so after this what you have to do is you got to go to the uh license manager all right uh click on get basic and create a new license all right so give this license a new name that is i'm going to give it ar car all right and uh click click on the check box and click confirm all right after that open this ar car license and what you have to do is you have to copy this license all right you have to copy this license and go to a unity editor then one more thing delete this uh main camera all right in the united uh delete this main camera because we won't be needing it uh now right click view fourier engine ar camera all right and one thing i prefer the most is to put the ar camera on top of everything so after you have done uh setting up the ar camera what you have to do is uh in the in the inspector tab only you will get the properties of ar camera and in the ar camera you'll be finding open view 40 engine configuration right and in here you'll be finding app license key so click on this blank box and uh just pay paste the license all right just paste the license and you would be good to go right so uh our basic project is set up right now we have to create a database so click on target manager all right click on add database give the database a name so i'm going to give it ar car db all right uh make sure that the type is device and then click on create so after it has created a database open it now what you have to do is you have to add uh the target marker i already have the marker all right so you can select any marker you want so i'm going to select the marker now let me find the marker okay got it now give it a give it a width i'm going to give it a weight of 6 all right and i will keep the name marker on right so just let it upload uh upload that marker and after that or what you have to do is you have to download the marker so that uh we can upload it on our unit engine and one more thing always check that what is the rating that is the augmentable rating of your marker and make sure it has four minimum four all right it should be at least four to five not less than that all right now click on download database and uh select the unity data and click on download all right so it would start downloading the database now save this database uh somewhere in your desktop and uh import it all right so right click you can either drag and drop it in here or you can right click import package custom package or that you can do that so i'm going to follow the second one now click on ar card db all right ar card db your uh unity package this is the database i downloaded and click on open and it's going to take some time to process and it did the processing and click on import all right so it's going to take some time to import uh the assets and wow cool so our asset is also imported right now what as we already have imported our uh car model what i want you to do is right click view for engine image target all right and in the image target you will be finding uh like in the inspector menu you will be finding image target behavior from the type select from database all right and in there select the database and uh your marker will be automatically selected if you have more than or two mark one marker that is two or three markers then you you can select it from there right now this is the database i'm going to like reset the transform again so that i get it in the center of the card now i'm going to increase the size of the car all right so that i could uh match the ratio all right now uh what i have to do is i have to put this car uh means make this car a child of the image target right and uh now we are good to go our markerless sorry marker based ar app is set up all right now what we have to do is we have to uh code all right we have to code our means we basically have to code what are the functions we want in the app so for now we only want to change the color of the car alright that is the material color of the car so first of all i want you to create the ui so how are are we going to do that it's pretty simple right click ui um then canvas all right as uh this app is in landscape what i'm going to do is i'm going to choose the medium resolution so that we could uh like easily make our app responsive all right and put it right in here now after i've created a canvas you can see that there are multiple options in here you can say canvas scaler option is there in there in the ui scale mode section you have to choose choose scale with screen size all right and leave it there only all right because that would actually help us to make the ui more responsible right now what you have to do is uh add some buttons all right uh click on button text mesh pro all right so it would like prompt importer you can import it but currently i don't want it so i would be going with the normal buttons only all right i would like to go with the normal buttons only actually we won't be needing the text so that's why i'm going with the normal buttons but what i would suggest you is to or if you are going for text based buttons or something like that all right even buttons in general i would suggest you or to always go for text mesh pro because they are 1000 times better than you know these other buttons so give it a width of 200 all right out let's not give 200 so it's too big let's give 100 only all right uh yeah now what you have to do is in the right transform only in here you'll be seeing a small box click on it click uh alt all right just wait okay now what you have to do is click alt in here or just do it all right now what you have to do is after you have done that give it a give it a name all right let's give it name i want to name it red all right and let's give it a red color all right and make sure you are in 2d mode because we are going to edit this ui all right and uh duplicate this button all right duplicate this button and uh move it right in in here now give it another color that is let's say i wa i want black right uh let's give it another color that is black uh it might not be that visible so i'm going to make it a bit like this kind of black so that it becomes visible all right now here give another color all right let's let's give it uh blue all right let's make the color blue okay now let's give another color that is uh yellow all right okay cool all right so we have our ui prepared that we got our ui prepared we have uh we have prepared our buttons now what we have to do is we have to code right the very first thing or the very first thing i would like to do is i would be coding a script to rotate our car all right so that it rotates continuously and to do that uh first of all what i have to do is i have to just create a folder scripts folder all right and then click on create then again c sharp script and let's give it a name that is rotate all right so i want my card to rotate actually now it's compiling the application all right okay so give it a few seconds okay so all right it's taking a bit time so let's give it its time so that it is able to do the processing it needs to do all right so our script is uh perfectly compiled now i'm going to open the script in my visual studio editor all right now okay here we got our editor all right i don't want it to be in full screen mode as of now so uh remove the whole start function and comments all right we need the update one so first thing is you have to create a vector3 variable all right vector3 uh let's name it rot all right and what in the update function only what you have to do is transform dot rotate all right and pass this rot variable in there and multiply it with time dot delta time all right now save the script and let it compile in your unity editor all right so after it is uh compiled what you have what we have to do is we have to put it in uh means inside our car model all right that is we have to attach it as a script in our car model all right so that we could uh use it right and uh all right now go to the image target all right and uh first of all unpack this whole prefab all right after unpacking what you have to do is drag and drop this rotate script in here and in in the rot value uh give it a value of 30 alright it would be like moving at rotating at the speed of 30 all right now what you have to do is play this all right uh play this particular scene and let's see how all things work right so just give it a few seconds so just a few seconds and we'll be good to go all right okay cool let let me uh maximize it okay cool now see our car is rotating all right and that's pretty good all right oh one more thing extended tracking feature is on and of course we don't want that uh go to ar camera all right sorry not ar camera or click on image target all right in here uh select track all right and we'll be good to go right so now as our basically our car means we have created our car model right as we have created our car model now what we have to do is uh click on create she sharp script all right and let's give it change color all right so that we could change color of our car after clicking some particular button all right so just wait it's compiling the script all right just wait a few seconds all right let's open the script in our editor okay cool now what i want you to do is uh create an array all right that is a line renderer sorry not like line random just wait public just give me a second all right so what we have to do is we have to create a array all right of first of all uh create an array of colors all right so that we can store the colors in here now again create another array of renderer that is it will help us to get the renderer of our car material there's a reason why we are there's a reason why we are actually creating a renderer all right uh there's a huge reason means not exactly a renderer why we are creating an array of renderer and you know just wait let's name it uh mats all right now there's a reason why we are doing that because see a car might have multiple materials in it all right that is multi car might have multiple sections in it where there will be different different materials will be up uh like applied right so that's why we are creating a array so that we could include all those uh sections in our you know in our model only that is in our script only right now let me show you what you have to do is record public void all right and write a method or function all right called red now make it public so that we can get it on our uh inspector menu right now we have to run a loop all right that is for nti equals 0 i less than max dot length all right it would be running from 0 to that is 1 minus the actual length of the material all right and uh yeah now you can you can either open the brackets or you can simply write it like this let me show you all right because if it's if it's a oneliner all right you don't need bracket and uh currently it's a oneliner only now what you have to do is mat mat of like i we have to give it take each and every like each particular material and apply color to it so max of i ah dot material dot color equals so you can what you uh what you can do is just wait colors yeah we got the variable and give it the first that is the first value of all the colors all right now copy and paste all right copy and paste it so that we can uh basically replicate it all right now blue all right and or let's say which was our second color in here okay it was black right let's give it black and uh let's give it one all right then in here let's give it blue because it was our third and give it two and yellow and do you know why we are uh giving like first index value as zero then one then to the second we are giving one then to the third we are giving two that's because indexing starts from zero all right so we have our script written and i hope you understood uh understood the script now there's nothing else to do we just have to apply the script and the functions all right we have to apply to the variables right so yeah so now what you have to do is create a empty game object alright you can do that and reset its transform name it color changer all right and attach the script or to the color changer now what you have to do is you have to give uh you know four colors to it give the array size four and uh let's see how many materials we have to give in here all right so basically the body is there all right now all right not this one not this one this one this one all right this roof sweet not sweepers for window front not this one all right so uh okay all right i understood so go to the color change script alright and let's give it two as of now all right now what you have to do is get the body material in here all right the body is for the whole body right and uh let's get the sweepers that has no sorry uh the roof one all right let's get the where is the roof okay yeah we got it so yeah here we got the hood all right actually there are multiple layers in it so that's why that's why i told you to add like create an array of those materials right now let's get the hood in here okay so we got the hood now okay the body is uh done the doors right oh yeah the doors so go to the color changer add another section all right and uh let's give it the dose right take the doors all right okay just do it okay okay here we go another one that is door fr all right now now let's see what are the things we have to give okay trunk a door right let's give it the trunk dough all right i hope not nothing else is left okay no i guess everything seems good right yeah everything seems seems good now let's let's see let's uh now let's give those colors the first element should be red all right it should be red okay the next that is which the next one should be uh you know black all right now the second one should be you know blue let's give it a move a bit sky color all right it would look good and the next one would should be yellow right now what we have to do is click on canvas all right click on buttons all right first of all uh select every button add a plus sign in there and add the color changer script in here right what you have to do is uh go to a red button click on change color click on red go to the black button again or choose from the change color then select black then from the blue color click uh change color then blue then from the yellow one go in here click on change color and click on yellow where is it okay cool now let's try our app so that uh let's try our app and let's see uh how it performs all right let's see so give a few seconds and we'll be good to go okay cool so let me maximize the window okay cool okay all right cool so we are able to see the car right now let's try the color wow see it looks good right see cool isn't it yeah so our first project is done actually all right uh congratulations you have created your first fullfledged application with euphoria all right you can let me give you some idea what you can do further you can let's say you can add varieties of tires in here all right you can add numerous varieties of tyres you can add more colors all right you can uh like create your own own car model or you can even like take the door of it all right and like rotate it somehow or to get like the opening door animation sort of thing right you can create your own animations like that and add it in there so that the person can actually um you know the person can actually view the inner parts of the car right you can add more customization customizations to it you can add more cards to it right now the next process for you is to go to build settings all right and add click on add open scenes all right that is for our the scene is main or you can simply drag and drop the scene and simply click click on build and it would start building our application all right so if you have any doubt regarding this lecture you can write it down in the comment section all right in this lecture we are going to create our second project all right that is ar business card all right how this uh project would help you is let's say you are going to some client alright and you want to or give them your business card alright you can share the apk already if uh like of course yeah you can do this right so would be creating a ar business card today all right and in this project you are going to learn to like implement your own avatar all right and uh you you would also learn to apply animations right so let's do it so what you have to do is right now let me show you first of all you have to set up your project all right it's very simple create a new project go to file build settings all right in the build setting first of all switch your platform to android all right i have already done that and make sure whenever you are opening a new project when it's blank all right that's totally new uh switch the platform first all right because if you do that later on after multiple things are done in your platform means uh in your project then switching the platform would be very tedious because then it is going to take a lot of time if your system is slow all right after you have uh switched the platform i also add uh also click on add open scenes it will add the a primary scene i am using on right now all right and uh go to player settings in the player settings give it a company name alright give it a product product name all right and uh go to resolution and presentation in the default orientation select whichever you prefer all right i am i prefer landscape left because of my camera position all right then in the other settings uh select the lowest android version you want to keep all right for me it's marshmallow all right and leave the target api level to automatic highest install all right and after that we are done setting up the uh like project all right now what you have to do is import view for your engine and you already know how to do that right and uh another you have to import another sdk that is the ready player me sdk all right uh it it will enable us to create uh 3d avatars all right i have already i already have five avatars in my dashboard all right so you can also create yours and upload it in unity all right and to upload them you you have to use this unity avatar sdk all right so click on this download the latest version and download your sdk right and then import it the importing process is totally similar already there isn't much any difference so yeah all the things are there are totally similar all right i have already imported both euphoria and ready player me all right now what you have to do is we have to set up our view for your engine now all right so first of all to do that go to click on this main camera then delete this main camera all right then again go right click view fourier engine ar camera all right you have this ar camera now put it on top alright put it on top okay now after this is done we have to create a license key alright so go to open view for engine configuration and we have to add a license key in here so to do that go to your view for your developer portal click on get basic all right and then you have to get a new license all right give the license name that is business card all right and uh check check this box and click on confirm all right and you'd be having your business card right in here all alright that is the license of your business card so now what you have to do is uh click on this particular means copy this code all right and paste this code in your view for your configuration that is in the app license key all right and we are good to go now what you have to do is open this and we also have to add a target manager all right that is we have to add our own market database so how do we do that uh click on add database all right then let's uh business card marker all right card wait okay marker all right db so i create this database all right and after you create this database you are going to find uh open this database and add the marker already add the marker that you have created in there all right i have my own business card marker all right so i i will simply add that in here and then download it all right so just wait let me find my business card marker oh yeah i got now import it all right after you do that uh give it a uh give it a size alright i'm going to keep it to six all right and you can i am going to keep this name already you can give any name you want and then click on add target all right and it would upload the target in your database now what you have to do is after all all these after all these things are done download the database all right click uh that is click on download database and then select unity editor and click on download all right and this would actually start downloading your database all right and then what you have to do is you have to import this database in your unity as simple as that all right so now open your unity all right open your uh unity drag and drop alright drag and drop this uh sdk all right drag and drop this sdk into sorry not sdk the database into unity and click on import all right so after after all this all right it would import your sdk and sorry not sdk your database and we are good to go all right now what you have to do is right click in here click on view for your engine image target all right so it would create a image target uh game object in here and in the inspector menu you would be finding image target behavior in there click from database select the database and voila you got the marker right so here you can see we i have the business business card right now what we will be doing right now is we have the avatar right i already have imported the assets all right first of all let me convert the asset so select all these assets all right uh all all of them are png's all right so set the asset and in the texture type go to sprite 2d and ui and click on apply all right so it's going to take some time it's going to convert all the textures to a certain type all right that is this sprite 2d and ui all right and after it is converted right i'll be back so our assets are converted all right and now we are good to go all right so now what you have to do is uh you have to import the 3d model all right so how do you do that first of all uh click on this ready player me button in here all right that is in the head and click on avatar loader all right in here what you can do is uh create a new avatar for yourself all right i i already have them uh create a new avatar all right it's very simple to create one and create avatar and then what you have to do is click on that avatar in the three dots all right and copy dot glb url all right copy this glb url and go to unity editor here you can see avatar url or shortcode you have to paste that link you copied all right okay so now have a few options all right first of all uncheck this model caching why see this model caching feature is a feature by uh ready player me only what happens now it will cache your model in unity now if you don't alright let's say if you if you uncheck this model caching what will happen if you make some changes all right if you make some changes on the ready player me web that those changes of the avatar will automatically get reflected in your unity editor all right so for now i don't want uh model caching to be there but if you want that if you want model caching to be there you can do that all right but currently i don't want uh my model to be cached all right and or if if use i animations is not checked click on this use i animations all right and after that click on load avatar all right so it would start loading the avatar all right so first first of all it will download then simply import your avatar okay so our avatar is now loaded as you can see right in here all right so first of all let let me uh keep this avatar in a different place all right and let me add another plane all right that is go to 3d object uh in the 3d object click uh plane all right this plane is of course a big first of all let me reset the transform all right and let me you know put it down a bit and let me go to the top view so that i can i could adjust all right i could adjust this particular plane okay cool all right okay so we have adjusted our you know okay we have adjusted our plane all right now you can simply put it upwards all right cool now uh what i want you to do is attach a material in or to it all right so how do you do that click right click on the project panel create a folder all right create a folder called you know material all right right click create folder material click in here uh go to again material and give it a card material all right card mat all right so that we can add the material in here and in this albedo click on this option alright and select the card material in here okay and then drag and drop it in here all right now rotate it all right rotate it so that we get the perfect alignment all right so now we are good to go now let's uh edit this material a bit right okay of course metallic doesn't look good all right yeah let's let's experiment with this material a bit all right wait so now as you can see we have a menu right in here all right uh click on legacy shaders and click on diffuse okay now it does looks good all right so let me show you how how i did it in the material section click on the shader option all right then go to legacy shaders then diffuse all right so that's how you do it all right so yeah i hope it's clear now what you can do is uh drag and drop this plane all right inside this image target and you get this avatar right reset the transform of this avatar all right reset the transform of this avatar scale it all right scale it a bit scale this avatar a bit all right first of all you remove this directional light alright i don't want this means remove the shadows not the directional light of course after removing the shadows all right rotate rotate this particular avatar all right let me rotate it okay cool now put it right in here all right on top of this blank area all right okay let's make this like this all right cool so now you get a avatar all right you can add a rotation script all right so let's let's go to uh create another folder all right let's create a folder called scripts in the scripts folder create a shop script all right and name it rotate okay i'm going to hit reload in my visual studio editor all right so it's currently compiling and it also reloading my visual studio editor so just wait a few seconds so now uh our script is compiled all right now let's open this in our visual studio editor all right and let's write uh some script in it first of all remove this start and all those comments all right simply create a public vector3 all right vector 3 and give it rot all right and then click on transform transform dot rotate then pass this rod value and uh on the rotate function and multiply it with time dot delta time all right and then uh save the script and uh compile it all right after compiling it we we have to attach the script on the avatar all right to make it work so it's currently comparing the script so just wait for a few seconds and you know it would be done right so um yeah sure so our script is compiled now what we have to do is click on this avatar all right add the script right in here all right and give it a rotational value of let's say um 10 all right and also drag and drop this a particular avatar inside the image target or make it a child of the image target all right so now as we uh did a lot of things right in here all right let's uh let's see if everything is working perfectly or not all right so let me open my uh marker and then hit the play button all right hit the play button all right so that's what you have to do right now so click on this play button so now as you can see our camera is open now let's uh cool see uh all the features that we implemented as of now is perfectly working but here you can see the uh character animation is being played right the character animation is being played but the problem is that it is uh sometimes it's also walking all right it's also showing the walk animation and i of course i don't want the work animation all right and here comes another problem that this extended tracking so we'll be fixing these problems alright before moving forward so how to do that first of all uh let's fix the about or let's let's fix the image target problem all right click on this image target uh change it to tracked all right then in the avatar what you have to do is and you can see in the controller option click on mail full ball with body that is the controller name and double click on this and it would open animator window here you can see that uh there there's two pathways that is first it is going from idle to walk then again it is going to walk to idle all right so simply delete this all right simply delete this particular uh animation and we will be good to go all right now also i want to increase the size of this avatar a bit all right so yeah now let's see how everything works right let's see how how perfectly uh things are working and if it needs any more changes or not right so yeah just give it a few seconds okay cool okay yeah it looks good it does looks good right now all right so yeah and also this uh tracking thing is fixed right and currently you can see the blink speed all right the blink uh you can increase the blink speed all right that is i can make it to like 0.3 maybe all right i'm going to increase it to 0.3 it's the ideal value i i find all right now as our avatar is set up all right now also set up our you know our ui all right now how to do that this thing is fairly simple go to image target click on ui then uh select the canvas right in here all right select a canvas and currently this is a 2d canvas and of course we none of us want 2d canvas uh what you can do is go to click on click on this render mode alright and select world space select the uh here you can see here's an option for event camera uh drag and drop this ar camera into this event camera all right and here you can see our canvas is now transformed to 3d mode all right now let's let's edit this canvas all right let's scale it down alright and let's reset uh not reset let's reset its position all right here you can see we also we need to scale it down more okay now rotate this into yaxis not y or xaxis to 90 degree all right and make sure it it is like this all right give it a bit bit space to it so that you can you know add our ui into this right now what you have to do is you have to add ui to it right what you can do is click on this uh canvas all right then go for uh first of all i want to add an image so click on this image all right and uh let's drag and drop it in here all right so this would be my profile image all right and i already have the profile image so i'm going to just select it and you can see first of all let me do actually uh i guess the rotation of the canvas is uh different let me let me check yeah the rotation of canvas is wrong just wait let me fix the rotation okay 180 all right now let's get this particular image in its right place okay cool so now we got our image right in here all right so you can if you want you can like increase the size of the image all right and let's add our name text on the side of the image so what you how do you do that click on ui then click on text mesh pro all right import the text mesh pro all right because this is the bet best alright there's the best for button and text both all right and it would start importing the assets so it's gonna take some time so give it some time all right so i have imported the text mesh pro all right and also i have also imported the text mesh for examples and extras all right because it already provides some really good fonts so i'm going to use them all right now as you see we have you know the text in here now write your name in here so priyanshu but touch rgb all right so what i'm going to do is i'm going to like in the wrapping i'm going to disable the wrapping all right because i don't need it now uh let's see uh let's let's choose a font from the given set all right let's see which one would be good okay now this one of course not this one no let's see yeah this will uh let's check the anton one okay so roboto looks good all right this roboto one looks pretty good now what you can do is you can adjust it all right i just used more i think this this is good this looks uh just to it okay yeah no just wait let me adjust it a bit all right yeah this this this is pretty good this this looks fine and uh all right so now we have set up uh this particular profile thingy right now what uh i want you to create an empty prefab alright right in here all right create an empty the game object and let's name it a left container all right because as we are going to add animations to it all right so position it in you know in the center of these two assets that is the image and the text put it in the left container all right and let's uh you know sort of add a bio in here okay so this would be a short bio so i am let me write let me uh complete the bio all right then i would again resume the video so i wrote the bio all right now i have to adjust let's adjust this bio right in here all right so that like you know uh this of course doesn't looks good and uh just give a moment all right okay so let's give it a height of 400 not 400 let's give it 200 okay yeah this this looks good now let's reduce the size all right let's make the size 25 maybe or 20. yeah i guess i guess it's fine let's make it 350 all right yeah i guess uh this is fine this this this looks fine now align it a bit alright align this thing a bit and uh actually let's remove this intro thing all right let's add two buttons in here all right let's add two buttons in here go to ui click on button text mesh pro all right go in here you know uh increase the size of the button alright increase the size of the button put it in the middle maybe all right and i have wait i have the logos right in here go to assets okay let's let's make two button for our social media that is you know uh this instagram and uh linkedin all right so i'm not going to remove this particular text i'm going to make it bold and let's name it linked in all red so and let's reduce the size that is make it 20 all right and in the button only click on ui then again add an image all right reduce the size uh in the image add the linkedin you know link this linkedin image in here all right and drag and drop it to the side right put it in the side uh make the text a bit centered right okay let's make it uh side all right let's just give me a second let me reduce the size of the text again that is let's make it 17 maybe okay sorry 20 buy mistake i got 27 all right cool now i would also like like to or just wait okay so i would also like to uh reduce the size of the button so just simply remove these text from there all right now just wait let me reduce the size of the button um okay good now again uh make those text and images the child of the button right so let's adjust it a bit again um right yeah this this looks good okay and also go to gizmos all right and go to gizmos and you can see this 3d 3d icon slider just make it small all right so small that you can't again see those things all right and okay now yeah this looks cool so then name it linkedin all right then again you know duplicate this button all right put it in here all right and let's uh name it uh instagram all right so give the text instagram all right so let me reduce the size a bit for this one okay 15 okay all right here we go and change the image to the instagram image all right and yeah so we got our buttons in here so now you what you can do is you can simply you know take these two buttons all right take these two buttons and simply put it right in here all right or let's try some let's try making this button a bit you know larger in size okay now just give a moment and yeah these looks good right so we got our left container all right that is the left left panel all right it would be like coming like this in the animation and let's create our another container all right let's create an empty container let's give it a bottom all right that is it would be in the bottom container all right so bottom container now in the bottom container again place that uh add an you know uh ui that is an image all right add an image in here uh give this uh image a new you know component that has button component all right because we'll be using them as buttons all right now get this container and drag and drop it in here all right so uh as if you don't get that container all right now what you have to do is take this image and put it in the side and add the discord icon in here all right and let's uh give it a name discord okay this cord all right then again now duplicate this and again place it in a bit you know change the position and place it in the side of it and again drag and drop the github you know github logo and again duplicate it all right and now it's the time for you know youtube so now rename it to youtube all right now what you can do is okay so yeah so we got our three button containers all right and make sure to place it in the center all right um let me reposition this you know the button of just wait let me reposition this all right just give me a second let me make all the things in center just give me just just a moment all right okay yeah now i guess everything's fine right so now we have the buttons in here all right we have all the things that we would be needing let's uh again let's reduce the size of this one too let's make it 14 maybe all right okay now let's go for 15. all right this looks good so now as our buttons are created right now what you have to do is we have to create a script all right because of course the these buttons have to do something right these buttons have to do something so what uh this buttons will be used to open the links all right so how to do that click on create a new she shop script all right and name it link manager all right because we would be adding the links in here all right and after it gets compiled open the open the link all right so so we have to write some you know some functions all right to open the links the the script is pretty easy so now as our script is opened all right uh everything's pretty simple just remove all this comments and start an update function we have to write our own function that is public all right void i'll say open linkedin all right give give the function name anything you want all right and now uh within that function we have to write a particular line that is application dot open url all right and in that uh pass your linkedin profiles url all right so here i have the linkedin profiles url and now i'm going to paste it right in here all right similarly write some other function that is public void open instagram then again application dot open url then you know add the instagram url copy link address okay there's some problem with the link all right let's remove this yeah we got our linkedin uh that is instagram pro profile all right now again uh let's create another function that is open github all right so um application dot open url and let's put our github profile in there copy link address all right so we got our get get a profile too right all right so now let's add our you know uh which one is left now let's see discord yeah so open discord so this is uh the discord server of android so you can join that so application dot open url and uh all right just wait let me copy the url copy link address all right so here we got the url all right now another uh was youtube right public void open youtube all right so application dot open url now again uh put youtube in there this is the put the link of the youtube in there all right so i'm just going to copy the link all right and you know just paste it in here and let's compile the script so uh so our script is compiled all right now you what you have to do is create uh empty game object alright reset its transform all right just just do it ah yeah so reset its transform and add this uh also rename it to link manager alright because we'll be attaching our link manager script to it all right and attach this link manager script in here now what you have to do is uh go to the first of all uh this is the these are the button all right so first of all go to this linkedin button all right in here you can see on click click and uh click on add then add the link manager then click on link manager and find open linkedin all right so and we got the open linkedin function now again go to instagram on click link manager open instagram okay and in the bottom container click on discord on click link manager and then open discord and again github save do the same thing for github all right so add the github one then click on open github there again youtube add the link manager link then again open youtube where is youtube yeah we gotta so that's how you do it all right now let's test if everything is is working fine or not right so just give a few second and let me show you so here you can see that our business card is created all right and uh click on any button all right let's say that's this discord button so what will happen it would uh start opening the url in my browser all right so here you can see it has opened the url in my browser and so you can do similar things with that you can add more features all right and now it is our time to add the animations to it all right so how would we do that see uh adding the animations are very simple what you have to do is click on this left container all right then go to your window uh go to uh sorry in here go to this animation section and click on animation and a window like this would appear so uh create all right click on create then what you have to do is uh create a new folder in here let's uh name it anim solid because we'll be storing all our animations in there all right and uh in the adams folder give it uh give it a name called left container left container anim already done save the animation all right now what you have to do is here you can see first of all see here in the record button click on this record button all right and you know put this inside alright put this inside of in here all right now uh let's give it a let's say 50 second gap all right and again pull it back in here all right now let's see okay if if you want you can make things more slower by dragging it to like uh one all right so now our left controller animal is done right so let's make it up to full all right and now in the bottom container what we have to do is again click on create all right and let's name it bottom container and all right and uh save it then again click on this red icon all right this record button drag drag it in in here all right drag it in here and then again go to one then again bring it up in here all right so that's how we do it right so that's how everything works right so now our animation is recorded you can play the animation and see it's working all right now here's a bit of a problem all right this animation all right this animation would be looping all right when when the animation works right so to fix that click on go to the anime folder all right and uh you can see these triangle icons right so click on them and uncheck the loop time option alright and again in the left container also uncheck the loop time option all right now let's see if the animation is working or not right let's uh let's check that all right let's check that so let's see oh our animation didn't work but can you tell why because uh see when the scene started now it already played the animation all right means uh let me show you again all right let me show you again let me uh you know bring it up in here all right and let me show you what is happening in the background okay so just give me a second and here you would see that when the scene start it would already play the animation now we all we do have a fix for that and i will show you what is the fix it's a very simple fix only all right i will also make you understand the concept of that all right so just give me a second and uh would be good to go right so here you can see the animation is actually not playing because it has already been played right so this is the problem so how to fix this let's let's see how to fix this all right so the very simple way is to go to the image target all right and here you can see uh there's on target found and on target lost right and uh currently our work is with this on target found right so what we will do is click uh click on this get the left container in here go in here go in animator all right and click on you know play right and if on target is lost all right away uh okay if on target is lost what you have to do is go to the left container all right and uh just wait click on stop playback all right now let's see if if it's working or not all right so our camera is active all right let me uh maximize the scene all right let me maximize this game view all right and let's see see our animation is perfectly working all right and let's remove it and then again bring it see our animation is working so we have to do the same thing all right we have to do the same thing for the bottom container too and you know what will happen our first business card will be created all right okay so drag and drop the bottom container then again click on play all right and then in the on target lost again drag and drop this bottom container and then uh click stop playback all right and let's see so now let let me show you all right see the animations are perfectly working right isn't this uh great so like this you can create your own avatar like see uh this uh means your own business card see here you can see this there is avada and it is also blinking can you see that see it is also blinking so our business card is perfectly created all right so now what you have to do is uh you have to build this application and to do that you simply have to go to file build settings and click on build the application and give it a name and save it alright so that's it so this is how we create a business card all right so hey guys in this lecture we are going to create our last project that is of euphoria that is we are going to create our last augmented reality application in these series all right after these after this uh module we are going to start with spark ar so it's also going to be really exciting to work with sparky so yeah without any further ado let's get started so the very first thing all right i want you to uh is set up your unity engine already is to set up your view fourier engine you already know how to do that it's fairly simple first the very first step is go create your unity like unity project all right after that uh go to your build settings in the build settings all right you would be finding android option all right if you don't have android option means if if it is showing something like this uh no android module loaded install it install with unity that means you haven't installed your android module so do that after that what you have to do is click on build so in not build i'm really sorry you have to uh an app an option would be coming called switch platform all right like uh like this switch platform so as i'm already switched to android it's showing me build but uh in your case it will be showing switch platform so click on switch platform and after you are done done switching your platform go to the player settings all right go to the player settings and here add the company name at the product name all right then go to resolution and presentation in here you'll be uh getting an option of default orientation i uh for in my case all right in my case i want it to be landscape lift uh i'm adjusting this just because for the camera position of my device all right and in the other settings we have to set up our android build version so currently it is getting all the api levels all right uh the one i all i means i always go for is android 6.0 all right you can even go for android 4.4 alright it's totally upon you uh so i'm again going to go with android 6.0 all right so here here i have selected android 6.0 there are multiple api levels i have i have up to api level 30 that is android 11. you can choose any one from these and i suggest you not to go above android 6.0 all right because nowadays most like most of the device starts from 6.0 like four to five year old mobile phones have android 6.0 in them so uh means take the api level as high as 6.0 all right don't go above it as of now now you can even select android 4.4 kitkat all right it's totally upon you and leave the target api level to automatic highest install all right just like it is and uh yeah we uh our setup is done all right now what i want you is to uh import the viewforia engine you already know how to do that and i have already imported view 4d engine just cause because it's going to take a lot of time to import in my system all right if your system is fast it's it's not going to take so much time but in my case it took a lot of time so i've already imported it and you already know how to import it all right so now let's uh first create our user interface all right that is the main menu after that we are going to set up our viewfore engine all right and uh you see i'm pretty sure that you already know how to use the ar camera how to use the image target right how to use uh means how to use the dashboard means the website for getting the license for adding the image targets all right i'm pretty sure you know that and i i want you to try this ar encyclopedia yourself first all right try this one first by yourself all right and then watch the video all right because that would be a really good practice for you so you can do that or even watch the video and develop along with it all right now let uh i i already have a scene this is the sample scene all right i just want to rename it because the uh in here i am going to create the ui so hit a rename and let's name it main menu all right it's asking to reload okay cool so we have basically renamed our main menu all right now what we have to do is we have to uh provide a canvas to it right uh because uh the main menu is going to be our ui all right and uh one more thing i would like to tell you that this this ar encyclopedia project is based on dinosaurs all right currently uh i have included three dinosaurs all right you can add as many as you want the three are triceratops uh trex and the spinosaurus all right so you can add as many as you want and even launch uh this product after developing it all right and i have al also created the ui assets already all right i'm also going to show you how to play pause and stop an audio in this tutorial so hang tight there and for the tutorial so first of all right click in here and go to ui and click on canvas all right and in here in the top you would be finding a 2d option click on that 2d option and then double click on the canvas option and it would be focused all right so and the thing go to the game window all right and choose a resolution see for uh developing a responsive ui what i generally do is i have three resolution all right one one is of iphone 6 that is the medium resolution one is of uh not exactly the medium all right but i have iphone 6 that is the lowest resolution i have oneplus 7 that has the highest resolution and redmi note 5 that has the medium resolution all right so what i want you to do is uh you also follow these uh three means these three presets you can create your own by like uh in the game window here you'll be finding a drop down go in here and click on this add button give it a name uh give it and width and height all right so and click on ok it would help you create a means a basically a resolution of any phone you want all right so currently i want to go with iphone 6 all right this looks good now what i want is uh in this canvas i'm going to create a you know panel all right for attaching my background image in here so i just want to stretch this you know stretch this panel out a bit because let me show you why uh go to a game window if i'm not sure if it's visible to you or not but uh just wait if if you can see uh here are some edge edge spots like uh the panel isn't covering the whole uh you know whole canvas so that's creating a problem so that's why i'm going to you know stretch it out a bit okay and uh now what i want to do is i want to uh click on the panel all right then in the color image here is an option of alpha i want to increase it all right so that it doesn't uh means it is not transparent all right and in the background here you can see source image i am clicking this button to select the image all right and in here let me see yeah i got the background image in here all right so this is the background image i'm going to use let's see how it looks yeah it looks good all right and now what i want to do is i want to give it a heading right so i have also created an asset folder so click on this image all right click on this image and let's let's give it a name that is heading all right after you give it a name of heading what you have to do is you have to choose the title all right that this is i have kept the title as dynapedia all right so i'm going to adjust this particular asset a bit all right so that you know it uh it fits good to the ui and you have to do one thing all right go to this particular transform alt and you know then anchor it on the top all right now uh adjust it a bit all right and let's see how it looks yeah it looks good let's stretch it out a bit no let's uh let's stretch it out a bit okay yeah all right now it looks good now let's drop it down a bit all right let's drop it down a bit okay cool now i have to add a button in here that is a start button all right so i'm again there are two ways you can do that all right i'm i'm going for the image one but let me show you first of all go to uh ui you can simply select uh button you know uh simply select a button and then from that uh button delete the text all right but uh i don't want to do that i'm going to do a very simple thing that is go to ui select an image all right and you know select the start button asset all right and then again uh you know stretch it out a bit all right so that it looks you know looks good all right now now that it looks good what i'm going to do is uh also anchor it all right and cut it maybe actually let's anchor it in the center only let's keep it at the center click on start button all right oh i guess one thing i forgot yeah see i always forget to make this change all right whenever i'm created creating a ui and i just it just comes to my mind after many things are done and i again forgot to do that all right i'm really sorry about that actually in the canvas all right click on this canvas here you'll be finding an option or means a component in the inspector called canvas scaler in there you will be finding ui scale mode what you have to do is uh you have to change it to scale with screen sets and see this is why uh i like i really hate it when i forget about you know setting up all the things in the ui so it happens with me a lot all right so yeah forget uh forgive me about this but uh yeah now as everything's working fine all right we are good right so yeah let's you know uh let's make this button a bit more shorter just wait all right where is the button here gotcha all right yeah it looks looks good now in the start button all right as it is an image we won't be able to click this image or of course we won't be because it is not a button right now to make this image a button what you have to do is you have to click on add component in here all right you have to search for uh something called button all right and here you would be getting a option for button all right and now this image is a button all right this image is transformed into a button right now i want you to create another image all right go to the ui um then you know let's let's give it a size of let's say 60 60. yeah i guess that's that's really cool then again select another ui that is the quit you you quit button all right of course you want to give a quiz button right so so that people can quit from the application right now what you have to do is again click uh click on this rec transform click alt and yeah here you go we have our button aligned right on the bottom left all right now let's see here it looks good now let's just do one thing let's you know shift it on a bit or change the position of it all right and let's make the size 50 50. yeah now now again let's change it to 40 40. yeah this looks this looks really good right so we have created our main menu all right now as we have created our main menu now what you have to do is uh we have to create our arc all right so let's see how to do that first of all as you have created a main menu congratulations and what i want you to do is go to file click on build settings and add this main menu on the top all right and always remember whenever there's let's say there are multiple scenes alright three to four scenes always remember to put the main menu all right to put the main menu on top of every scene all right because uh this would mean the scene in the top all right the scene in the talk will be the main scene all right would be the means in in the sense that it would uh means after building the application the application would start with the scene that is on the top all right so always remember to keep the main menu on the top all right so yeah as our you know our main menu is done now what we can do is we can create another scene uh that would be our ar scene right so right click click on scene and let's name it arc all right and let's open it now i want to enable the directional light so let's do it i'm going to select the common lighting settings i have all right and yeah we are good to go now what you have to do is let me show you first of all uh first of all the very first thing is i want you to create a basic ui the the ui would be containing back button all right so what you have to do is go to canvas in the canvas what you have to do is uh change the constant pixel size to scale with screen size all right and then in there click on ui then add an image all right then select the back button um change the width to 50 50 all right and uh let's you know anchor it to the top right side top left right now let's change the position of it let's say 50 and minus 50 all right so let's see how it looks now it's uh it's a bit too much so go for 40 and you know minus 40. yeah this looks good all right so this is one of our ui and also add a button component to it okay so i i somehow added another component this is virtual but button behavior and of course i don't want that just to wait let me remove this whole thing okay yeah just uh let me again reconfigure the button okay cool now go go in here and add a button component all right and yeah our button is created and rename this button to back button all right now for uh further all right for further development we have to set up our view for your engine all right so it's fairly simple delete the main camera all right delete the main camera then add a v40 engine ar camera all right and you know drag it and drag it to the top all right now as we have the ar camera we have to you know create a license so what you have to do is click on get basic and in here give a license name or as i want as my app's name is dynapedia i'm going to give it a dynapedia license name all right and simply just you know copy the license key great so now that we have our license key go to ar camera click on open view for your configuration all right and paste it okay so now our license key also set up now one thing uh just give me some time alright i'm going to prepare the markers all right and then i'm going to come back and show you how to also add the markers all right and how to use it in your project all right so now we have downloaded all the markers we needed all right now what you have to do is go to your target manager click on add database then give it give it give the database a name let's say dynopedia db all right so then click on create and it's going to create a database for you so now what you have to do is after opening the database you have to add the targets all right so click on single image all right choose the image file all right so this is not the one just yeah here i got it now this is the marker one all right so let the name be marker one and give it a width of let's say six all right and uh wait it for wait for it to add the target and let's add another target all right okay let's again give it a weight of 6 and add it all right let's add another target all right see all these markers are taken from google all right so you can find them on google only then click on add okay cool so we have our markers all right and all of them are four star markers and that's totally fine anything uh between three to five is okay but less than that don't even like give uh don't even work out with those markers all right and even i would suggest not to go for three star markers also because their tracking is also not up to mark all right so always have markers having four to five stars not less than that now we have to download the database all right uh i'm going to download the database so it's going to take a few minutes and then it would uh start downloading all right so let me save the dynapedia you know package in here and after it's downloaded let's import it all right so here got a window popup and uh click on import so now it has started importing our assets means our markers all right and we are good to go now as everything in here alright is is working pretty fine our air can uh ar camera is set up all right now we have to set up our marker so how we how do we do that first of all go out of 2d mode all right go out of 2d mode and uh click on uh there's right click view fourier engine image target all right in the image target click on from database select the database and get one marker all right and i'm going to get the first marker for the first marker of course all right here is our first marker now what i want you to do is click on the image target in here you will be finding an option tracked or extended track click on track all right and let's give it a name marker one or let's uh keep the marker one for the trex all right or let's name it trex marker all right let's add you know another another marker and uh again let's select from the let's get the marker too all right let's shift it uh in the side a bit all right now name it spinosaurus marker all right now again view fourier engine another image target now name it triceratops all right now select from the database get the database and you know there is our marker 3 all right so we also got about so we have our three markers right in here all right okay uh let me uh shift it to tracked only all right oh all right so let's check if everything is set up correctly or not yeah everything is set up perfectly fine now i have the models imported in here alright it is of spinosaurus trex and triceratops now what i want you to want to do is i am simply going to add first of all i'm going to add the trex model in here all right right in here all right and you know it's uh it's really really big and i'm going to scale it down a bit all right and make it like this all right okay cool so here we go we let's you know let's make him settle down a bit all right okay cool so here our first you know first model for the marker is ready i'm just going to drag and drop it uh instead of the tdx marker all right so our first one is ready uh let's you know let's get the second one that is of the spinosaurus all right ah very cool great one actually let's set up this one too all right if you want you can add rotations but uh for the dinosaurs one i'm going to i'm not going to add the rotation all right i'm not going to add rotations in here all right i was actually trying to get uh animated 3d models for uh for dinosaurs but uh actually didn't uh got any like not in the asset store not on sketchfab even i got some of the animated but the animations weren't working so you know that's why i had to get these now let's again add this one oh this says triceratops all right let's add this buddy in here okay cool so now we also have our triceratops right in here all right okay very cool so now uh let's uh again make it a child of our tri set of marker all right so now our 3d models are set up now you might be thinking oh this is it our third project is done no it's not because i'm going to show you something more what see this is an encyclopedia right there is an er encyclopedia how can we call something an encyclopedia if it doesn't have any information about that particular thing that it is in there right so of course i'm going to add some more things to it all right as there's an ar book this is an ar encyclopedia i'm going to add information too so how would we do that fairly simple you need not to worry first of all go to the tx marker create a canvas yeah right create a canvas so create a canvas all right remove the remove the constant pixel size and change it to scale with screen size all right in here you'll be finding sort order give the sort order all right sort order means it would be means it would keep this particular dinosaur layer means this particular tdx canvas on top of the main canvas in here all right so that's why i give it a sort sort order of one all right so that it doesn't overlaps or something right now uh go to your 2d mode all right go to your 2d mode select the canvas first of all i want to disable this you know this main canvas so that i get the full trx canvas in here now what i want you to do is right click ui image give it a width of you know 60 all right give it a weight of 60 anchor it down to the you know bottom left and you know change the position to 40 and 40 all maybe 50 and uh 50 actually let's check if it's aligning with you know this particular canvas let's check this one all right and uh you know select this i button all right this is going to be our information button and i'm i want it's size of this button means i want size of this button to be like this all right so width and height is 50 and 50 let's give it 50 and 50 all right and let's make it 40 and 40. all right very cool all right so yeah one of our canvas is ready now what i want you to do is you have to add uh you know another image that is go to ui image all right in here i have a panel right in here all right and i want let's say let's just scale it up a bit all right and uh let's anchor it down in here and let's reposition it okay all right let's see if any spaces are left or not i don't want any spaces to be left or all right okay cool so now let's see in our canvas all right let's you know let's let's increase the size of of the panel a bit all right now it looks you know good right isn't it let's let's check okay so yeah this this ui works with you know all the basic resolutions we have right now first of all this it's i is a button so i'm going to name it information button all right and uh you know what i'm going to do add a button component to it this image is you know a panel so i'm going to name it panel and all the information alright would be all right all the information would be under this panel so what i'm going to do is right click make sure now all the things i'll be creating all right will be this uh panels child already the text and all that stuff so i'd be creating will be this panel style all right so what you have to do is ui image all right we have an image select the heading that is information heading right now let's resize this thing a bit mmhmm all right okay cool now again rec transform alt anchor it in here uh reduce you know scale it down a bit okay cool we are good to go now also one more thing we have to add in text in here before adding a text all right first of all let's name the change the name of it i'm going i was going to say name the change of it now we have to add some more button that is play pause and stop button again go to you know image and let's anchor it down as of now all right and let's let's get the button uh size that is the player this will be the play button all right let's you know drag and you know let's change the size of it okay cool so now just wait all right okay let me let me start it from again so again go to you know ui image you know bef let's do all the thing before anchoring it all right let's get the width to be 20 maybe okay cool now anchor it down all right now reposition it so you know it looks good duplicate it all right again duplicate it okay so now it does look good all right make it to the center alright so that it looks okay okay that's that's pretty good change the name to play button change this one's name to pause button all right just give a moment all right and change this one's name to stop button actually uh i i have the audios all right this would be playing the audios in there so also select all the three buttons uh add uh you know button component in here and we are good to go now oh yeah also i have to change you know the picture of it right so i'm going to do that okay so pause button got the pause icon stop button is going to get the stopper now oh yeah you got it all right it looks good right now let's add a text in here all right so click on ui always use text mesh pro all right use nothing except xmas pro now first of all let's change the text color to black all right and let's resize it all right let's resize it um change the text size to 20 and uh first of all we have to create a font asset because we have a different type of font and let me show you one thing this uh text mesh for only except sdf type fonts alright so currently the font i already have a font called comic new all right so this is uh comic new bold so this is a font already but we won't be able to apply it uh let me show you see we are not able to apply it so to apply any font for into text mesh pro it's very simple click on window all right click uh here we'll be finding uh text mesh pro click on font asset creator uh window will be popping up drag and drop this font asset in here all right click on generate font alias all right so it's going to take a few seconds and uh it would be like you know creative create the font asset for you within no time all right and uh click on save so here we got our font asset right in here all right and now what you have to do is click go to the text all right just wait go to the text and uh drag and drop this font asset right in here and see we got our description panel which is description text now i have some text already written in here all right so i'm just going to copy it in here and simply paste it in the panel all right cool now these looks pretty good all right doesn't they and center them all right like this okay cool now as we have got our information panel we have to also code all right code is code means uh i want to click this button all right and enable and disable this particular panel and creating the script is fairly simple what you have to do is go to asset uh create a folder of called scripts all right okay the folder didn't got created alright okay scripts all right after you create this folder scripts all right you have to create a shisha script so now our script is created i'm simply going to open it all right on my visual studio so let's get this thing going in here all right great so first of all let's start coding it see first of all understand the mechanics all right you there are two ways you can do that all right first of all uh let me tell you one way that is the first way would be a very simple way actually both the ways are simple all right so the first way would be uh adding a set active function to it all right set active means uh when you will click this button this panel will be deactivated from the first so set active function would actually activate that and with that all right also disable this button and add another button all right that is activate another button that would be like looking similar like this but would be having a different function that is it would be setting uh it to false alright setting the set active to false and that would make this particular information panel disappear right another way all right this way is uh i prefer to do it this way so what you have to do is first of all create a variable so basically in this winner you would be using the single button only to uh switch on and off the panel all right so this is a little this is less hectic so first of all uh create a boolean variable and uh set it to false all right let me uh increase the size of this editor a bit now create a serialized field all right that is i will tell you what is it so game object in for uh mission panel basically see uh this serialize field uh parameter basically first of all uh understand that this is a private all right this is a private variable and the serialized field helps us to serialize this that is show this private variable in the inspector all right so that's what the serialized field does it it serializes this particular variable even though it's private in the inspector menu all right now click on uh create a function that is public void on toggle or button click or let's say toggle panel all right now this this uh thing is fairly simple click on means write if if this panel is on what you have to do is you have to set active it to false all right you have to disable it and set the is on to false now in the else block just copy this let this two lines and paste it in here and change them to you know true all right okay very great so now let the script compile all right so our script is compiled what you have to do is go to uh go to this you know go to this canvas all right add the script in here all right add the script in here drag and drop this you know information panel in here and you have the information button right so uh in the on click parameter click on the plus button drag and drop this canvas in here and you'll be finding an option called panel toggler and click on toggle panel all right now to test the if to see if this is working all right disable this uh panel and uh let's see if you know if this whole thing is working or not all right so let's see if everything's working fine or not okay so nope this is not the one which one was it just give me a second all right yeah here we go we got our information panel button right we also got our model now click on this okay just wait let me disable the battery saver okay so now it won't turn off by itself all right okay cool so now see our information button is working pretty fine all right and let's see if our main canvas is also work okay so our main canvas is uh the button of main cameras is also being clicked so everything's working fine all right so now now what we have to do is we have to add the audio functionality right now to do that go to your tdx marker create an empty object name the empty object as trex audio all right of course this is not the audio of you know a trex it is the explanation of who he is right and now in the trex audio game object add an audio source all right in the audio source uh what you have to do is go to assets all right uh where have i saved audio here yeah i got it so now in the trex audio add this trex description audio in here all right and remove this play on awake now as we have our tx audio in here now what i want you to do is go in here uh select the three buttons click in here means the plus icon drag and drop this no drag and drop this particular audio game object and in the audio source select the play option all right now all the three buttons have the play option now we have to change one by one all right i do this because it it is more faster than the usual like just selecting one button and adding them one by one it's much faster now in the pause button uh go to audio source and select the pause and the stop button go to audio source and select the stop all right now let's play play it again and let's see if everything is working fine or not all right just give it a few seconds and would be good to go all right so let's see okay so all right let's see tyrannosaurus is it genius see the pause is also working right dinosaur all right so the pause play and stop is working see this is working pretty fine so our first marker is totally ready now we have to do the same thing for every marker so i'm just going to you know duplicate uh these two game object right and drag and drop it under the spinosaurus all right i'm gonna get going to name it s audio all right it's too much to write its whole name and uh this this canvas let's put it up in there in the canvas all right here's the panel drag and drop it in here and in the buttons all right we already have the s audio all right means the this audio source so we don't have to do anything else also enable this particular button you know and uh in the panel all right in the panel in the text we have to change the text all right in the text i have got one text just let me bring it up in here and let's see let's enable this particular panel and let's see how it looks oh it looks really good right doesn't it and again duplicate it all right and drag and drop in the all right and not uh sorry triceratops not terrance or slicks uh and in the canvas select the panel all right and inside of the panel let's see if the buttons has the right audio or not yeah they do now in the text all right enable the panel and we are going to get the actual all right where is the text here got it now simply go in there and put it in here right okay cool now all right just give a few seconds all right now disable this particular panel right in here all right so now in the t audio change uh the audio to triceratops audio all right and in the spinosaurus rex audio change uh into spinosaurus x sorry spinosaurus not tricks not tricks already i'm really sorry dinosaurs and dinosaur enthusiasts are going to kill me i guess so yeah let's try this out and let's see if everything's working or not all right so give it a few seconds to run all right so let's see so there's our first one all right this is our special dinosaur that is trex all right my favorite so let's see if audio or the sword is supported all right so audio and everything is tyrannosaurus is a genus of perfectly stop it all right and if you let's say uh let's say let's do one thing let's say if uh if if you want to stop the audio all right if you want to stop or pause the audio after the marker is you know removed you can simply do that so go to trx marker uh in the on target lost click on add icon um get this audio all right audio source and uh i let's say i want to you know stop the audio all right let's stop the audio all right and again in the spinosaurus marker do the same thing all right do the same thing and uh you can do whatever you want already when you can pause the audio and even if you want you can start playing the audio when the marker is tracked you know it's totally up to you but this is what i'm doing now yeah we are good to go right all righty let's see all right okay so let's check if everything's playing tyrannosaurus is it uh tyrannosaurus so it's working now let's let's select this one all right okay triceratops is an extinct genus of herbivorous genes all right so clay is also working stop is also triceratops is an extinct genus of triceratops isn't it all right good now let's triceratops is an extinct genus of herbivorous chat all right so this one's also working perfectly fine and let's test this one our tries at the top so sorry not the triceratops yeah spinosaurus all right let's all right so our dinosaurs dinosaur encyclopedia is working perfectly fine now the thing that is left is to code the back button right means the scene changing script all right so what i'm going to do is go to script all right uh first of all oh yeah before going to the script go to fi uh build settings all right and add this ar scene in here so currently i'm on this ar scene so i'm just going to click on add open scenes and always remember to keep the main menu on top of every other scene you are putting in the build settings all right so make sure you do that now in the in the scripts create another script called c script called scene controller all right now all right so now let's code our scene controller all right that uh that that is it will be controlling our scene all right that means we'll be we have to navigate through the scenes right so we need that so what we are going to do is using unity engine we have to include that particular library scene management all right so here you go right now what we have to do is we have to create three functions first of all the function would be public void we are going to call it main menu this function would be loading the main menu all right that is scene manager dot load scene and gif give you know give this scene a name that is main menu all right so after you give this scene a name you have to create another function all right public void alright in the public void function you have to create another sorry so now all right we have to create another function alright that would be for loading our ar scene right so public void let's name it ar scene right and again same write the same line in here that is scene manager dot load scene all right and now in here you have to provide the ar scene name see these are the names all right these are the names of the scenes we have all right these are the names of the scenes we have that is the main menu and the ar scene all right so make sure to put uh this c name right in here all right so make sure to do that and another is to quit all right public void quit app quit app all right now scene manager dot load scene and so not loads in what i'm doing i'm very sorry okay just tweet oh yeah application dot quit all right so that would help our application to quit all right and let's compile the script so now our script is compiled what you have to do is create an empty game object reset its position all right and name this empty game object as scene controller all right because this empty we'll be attaching our scene controller script to this empty game object now what you have to do is go to canvas click on the back button in the back button click on on click click on the plus icon in the scene put the scene controller down there and click on scene controller and after clicking the back scene you should load the main menu all right now we have to do the same thing with our main menu all right and in the meantime we also have to check if everything is responsive or not right so let's check it all right really really great yeah everything's totally fine right now again in here create an empty home object called scene controller reset its transform uh add the you know scene controller script in here in here you will be finding uh okay this i forgot to rename this button let's rename it squared button all right now in the start button alright we have an on click function simply add it in there scene controller and click on this arc because it would be loading about ar scene and again i also forgot to add a button component to this quit button click on the plus sign scene controller scene controller then again quit app all right so now everything's done now let's play this scene and let's see if everything's working fine or not all right and if everything works fine we are done with our application right and you can actually launch this application on play store if you want all right so and actually before launching i would suggest you to add some more information all right now let me tell you one thing this uh this quit button is working all right the squid button is perfectly working fine but uh you can see nothing is happening because currently we are not on our phones so when you you will be in your phone and pressing the squid button it will be working perfectly fine all right and i'm not sure why there's uh here is one button i have to check all right so everything's uh first of all let me check if the function is right right yeah quit uh the function is right so quit button will work perfectly fine now click on the start button all right and let's let's see it load all right cool now let's try out our markers just let me open the markers all right all right okay cool so now everything's you know working perfectly fine asaurus is a genus okay cool so just like this every other marker will work and let's click on the back button yeah cool so we are able to navigate through our scenes right so this is working perfectly fine and uh which button is this one all right also it's uh not inside the canvas so it's not necessary so delete it i guess i have added it by mistake so we are done with this project and hopefully you have learned how to create your own ar books all right how to create your own ar encyclopedias and if you want you can launch this application after developing on play store all right and also add ads to earn money so yeah for this lecture this is it and best of luck for and also create more projects like this all right and in the next module of this course we are going to explore spark here all right so yeah stay tuned in this lecture we are going to learn about sparky studio will be getting an overview of the interface we'll be learning about the spark air ecosystem all right and we'll be doing a lot more things all right but before using sparky studio you need to download it so this is the link all right sparky dot facebook.com studio slash download all right so you just need to click on the download the installer would be uh downloaded on your system and the process is pretty simple you just need to install it all right it's like any other installation process all right so from this this website you have to download it all right now here is the interface all right this is a dashboard all right now with this dashboard we actually manage our projects within uh sparky all right so first of all this is the basic interface here are the templates all right this is the first uh area that you you are going to see after installing and opening the sparky studio here here are three uh weld mints three blank templates all right that is oh one is totally blank that is blank project and there is sharing experience and video calling experience all right and other other than tho these three here are uh some more all right so these are the basically uh templates made by the sparky our team and other creators all right so here you can see there are multiple uh multiple multiple templates that you can get this there is a face decoration there is face mask then there is body tracking then there is neck decoration then there is head tracking all right so these are the templates that you can explore all right there here here is a real scale world object tool that is that it means real world like real world scanning market scanning so you you can like try to explore all these templates alright it would give you a humorous like huge amount of knowledge all right so these are the templates that you can work with now let's say uh after this course you want to explore uh more of spark here all right so spark here has their own platform where they are there are two to three courses on sparky that is fundamentals of spakia then there is uh like a totally free means those are totally free all right then there is advanced sparkier all right so you can find it on on the internet uh it's by facebook only it's totally free you can watch there all right and if you want to learn more advanced ar development all right then i'm also going to launch one course all right uh it's an ex it's called exa01 augmented reality for everyone all right so it's an augmented reality mastery course you can get that course it would be a very low cost course and it would be launching very soon uh at my at my startup uh and turned all right so make sure to subscribe my channel to get the updates about it all right so here are the tutorials that you can get here you can see there are multiple tutorials available about the coding all right about means about creating a glow effect about face tracking alright so you can learn it from that and here are the recent projects alright here are the recent projects that you can uh like if you if you create some projects all right inside of sparky you will get those listed down in here all right and here is uh open option all right so if you if you have a project file then you can open that project file from there all right and here is the creator community option then fordham option and what's new option all right so this is it all right now to create a new project you have to click on blank project all right so we would be choosing the blank project and it would start creating the blank project for us all right so here you can see that our blank project has opened up all right so let's uh get a bit comfortable with the interface all right so the very first thing all right the very first thing you are going to see is there is a person all right here you can see this there is a person who is like rotating its head all right and here is a very small mobile like window all right here is a very small mobile like window that you can uh see seen here so here here is a simulation happening all right this is the person so basically now these are test persons so whenever we create any sort of marker all right whenever we are going to create any sort of marker these uh these are the test persons that would be working with all right so um we'll be testing our markers on these test process all right so this is kind of a small phone you could say alright this kind of a small phone or you can also say this is a testing window just like uh in unity uh you can even dock and undock it all right like click on this unlock option then it would be undocked or simply when it is docking you can drag it drag it down all right and you can keep it anywhere you want all right but i i prefer this one to be on the top all right so that that's where i'm going to keep it now let me let me shorten this window all right let me make the size small now here you can see that we are able to uh see here's a total new scene where uh a camera actually is there means there's this triangle thing is there and here's a film going on all right has a video uh going on so let me tell you what are these so first of all uh in unity all right i introduced you to the scene window right in that scene window we used to add objects we can we could manipulate those objects in there right similarly in spark here there is viewport window all right so basically this viewport window what it does is we can add objects from uh in the in the scene panel and uh manipulate those objects from here all right so that is it and here you can see there's a some kind of like phone like structure this one this one uh this this thing have a phone like structure this is basically a phone all right there's a simulated phone there this it is showing that the phone camera is actually like projecting the filter on top of it all right so this is basically the camera all right so i hope you understand right now this is basically as i told you this is the scene window all right and this one is kind of like the game window in uh unity all right uh so this game window in sparky are two all right so this this is you we use this one for simulating all right now as we uh learned about hierarchy in unity right similarly in sparky also there's another panel this is called scene panel all right so what exactly it does is it contains all the objects that are present in the scene right you can add add new objects in it you can manipulate those objects right from here all right like uh here you can see here is the camera object right in here all right here is the camera object right so this is the hierarchy window from unity all right so try to understand it like this now let's see uh the inspector window off you know sparkier actually in sparky it is called properties window alright but if you want you can even call it call it inspector window all right but it is actually known as properties window so this uh this is also like the unity inspector window all right it also contains all the editable uh properties of a particular object right like here you can see that we can see oh if we click the camera we can see its properties right in here here uh there are multiple options in there these are not editable of course but uh let's say uh let's let's try out this directional light so here you can see that uh this directional light is editable we can decrease and increase the uh means intensity we can change the positions uh we can change the rotations right so we can edit those all right this is kind this is property window just like the inspector window from unity all right now in unity there was also something called uh project window right similarly here goes and uh here is also one project window called assets window all right so this is uh like it is two uh it is under it is basically under the scene panel so you can see it right in here and you can actually drag and drop or import the assets right in here all right now this is for the basic interface all right now let me show you some more things all right like let's say i want to for for for testing my uh filter better like for adjusting the filter what i can do i want to pause this character right so right or in your left alright like in the in the left of the interface you would see a pause button if you click on that pause button the the video the video playback would be paused right now if you again play then it would start playing right now let's say oh i don't want that character all right i want to uh test with many other characters there is all right because uh his face like the shape of his face is different than others right so i want i also want to adjust the 3d model uh to others like to other phase shape right so what i can do is i can simply get another one in here right uh then there's another one then there's another one then there are many presets available all right and if you if you want to try it on yourself then there are like the currently i'm on my laptop so this is the camera i have already called easy camera so i can i can click on that and get the camera view on here right but currently i don't want the camera view so i'm going to keep this person right now all right so this is basically the things that you would be needing as of now i like to create the projects and i'd also be telling you many other things as far as we move right and uh let me let me show you all right how you can get uh free 3d models free 3d means free patches and all those things from in spark are only all right so just uh what you have to do is in in the assets panel you have to click on this ar library all right and a window will appear something like this all right so let me pause this character for a minute all right let me plot pause it alright and let's get this this window all right so here you can see that there are multiple uh multiple options in here there already there are multiple templates available first of all let's say i want a 3d object right i can click on 3d objects or search for any 3d objects i want all right so and pick it from there all right these these 3d models are free to use all right and uh let's say i want uh in any sort of music or sound i can i can get that right i can get that from sparky only then there are patch assets patch are basically there's there's two ways to uh code in sparky one is a visual scripting that is the patch editor where you have to move blocks here and there and connect a one block to another to code and there is that we can code it through scripting all right so there are presets available you can use those presets all right let's say if we want textures we can get those textures from here also if you want uh blocks all right we can also go get those blocks from here if you want the script packages all right we can also get these script packages from here if you want if we want color luts we can even get these from here all right so spark here has a pretty good ecosystem for its creators all right and if you talk about how to launch our own filters all right so to launch our own filters what you or what you would be needing is a facebook account all right and an instagram account to launch your uh ar filters on instagram all right so make sure you have a facebook account at least all right and uh of course uh to upload it on instagram you also need a instagram account right so yeah cool great so this is it for uh this lecture all right see you in the next lecture thank you in this lecture we are going to learn about face tracking face mesh all right and ah and we will also be creating our first filter based on face mesh all right so make sure to watch this video till the end so we are talking about face tracking right what is face tracking all right what exactly it is it all right see face tracking is a concept all right face tracking is an algorithm that actually helps us to track our face right like for example you can see this person right in here all right he is moving his head left and right up and down right if we attach an face tracking algorithm or module what will happen it would it would track this person's face like for example see this person is moving his head upward then also the face tracker will also point upward all right so that's how a face tracker would work it would track the person's face right it would it will it will take all right it would actually take the person's head rotation and movement from the real world and put those values inside of the editor all right so that it can perform other tasks that's that is what a face tracker is all right now adding a face tracker is very simple all right what you have to do is you have to go to the your scene panel in the scene panel there you would be finding a plus button you have to click on the plus button all right and in here in the first option will be there face tracker right now if you are not able to find the face tracker you can simply search it in here that is face tracker and after you do that uh click on the face tracker and click on insert all right so here you can see here you can see the anchors right you are able to see the anchors right the you can see that with the face all right with the rotation and movement of the face the anchors are also moving right so that's how face tracking works all right that is what face tracker does right now as you have learned about phase trackers and spark are now there's left face mesh right to make your see face mesh now is a sort of a layer on your face all right it's it's kind of another another object on your face all right you can understand the face meshes that's like this all right now to add a face mesh click on this face tracker all right then click on add and uh right face mesh and you would find the face mesh all right and click on insert so here you can see that we added our face mesh right it looks like checkers board right so not checkers board but a chess board right so one more thing you have to remember all right that whenever if you want to make like if you are attaching the objects which can totally work with your face tracker all right that is uh use face tracker for tracking the face then make sure all the objects that you are putting in your scene all right to make it a child of the face tracker object all right why because uh here you can see that uh as the person is moving its head this particular face mesh is also moving all right moving and rotating that's how it is working right so that's why i told you to make the objects of like a child of the face tracker only if you want uh to like you know uh make it rotate and move on the player's head movement and rotation right so that's how it all works right now as we have added a face mesh we can also add a material to it all right so what you can do is click on face mesh in here in the properties panel you'll be finding a material section and here you find finding an plus button so click on this plus icon and here you'll be a material would be created in your assets panel and see a material is also added right now if you want you can uh like you know change the color color of the material all right so simply select the material go to its properties and uh change the color all right change the color to whatever you want all right you can keep it red you can keep it you know green you can keep it yellow uh you can keep it blue anything you want all right but for for now i want to keep it uh you know white right so now as we have learned to create our own face tracker and our own face mesh right now what we have we what we can do is we can add textures to it all right now this is a bit tricky part all right if you're familiar with photoshop uh then this would be a bit helpful to you like you helpful means easy to you all right so let me show you go to your browser first all right download these face reference assets all right because these these face reference assets are going to be really really useful to us all right so just uh go to this particular website you can you can simply write on the internet uh sparky or face reference assets all right you would get get them in there now what you can do is you can click on this face reference assets and it would start downloading downloading a zip file after you extract it all right go to the textures folder and you'll be finding two textures all right one is phase feminine and one is face masculine these are basically face reference assets all right to create the textures for our face okay so uh i'm for this for this example i have used means for this tutorial i have used face masculine you can even use face feminine if you want all right now what you have to do is uh open photo p or if you have photoshop in your system you can open that all right i have used photo pages it's like photoshop button online so now what you can do is uh first of all import this face masculine in here all right import this face masculine in here and import your line face texture uh for me it's a line face picture you can use any texture if you want all right now what i did is i pressed ctrl in my you know i pressed control in my keyboard and uh mapped it like this just wait okay here you can see that i uh mapped it to the proportions of the face all right to the proportions of the face of the this particular reference picture all right and here you can see you can like you just have to press ctrl right you just have to press control and edit the transforms alright and you would be good to go and always make sure that these eye holes all right are in place of this reference assets eyes all right so make sure you do that okay and this is it and then what you can do is you can simply like you know uh turn off this background layer and add another transparent layer and you can simply go to file or export as png and your you know your texture would be exported right i have already done that now what you can do is simply drag and drop it uh inside your asset all right that is inside your editor so i'm just going to drag and drop it in here all right so yeah now is it is uh you know uploaded on within the it is uploaded within our spark studio all right now what you can do is sometimes what happens now your uh it would uh start actually not sometimes every time it happens that it would start uh compressing it all right and mine is already compressed it's it was so fast so what you can do is all right it makes uh makes the editor slow alright it makes spark ar slow if for the moment alright for the moment you can uh select it to uh means uh in the ios section make it to none then in the android and older or android also make it to none so it would stop the compression for a moment and when when you whenever you will be publishing a filter that is exporting it and then publishing it it would start the compression it will compress your filter and then you can upload it now always remember to compress your filter before uploading it to sparky sorry uh to instagram or facebook all right so make sure you do that now as we have learned to create our face tracker our face mesh let's add a texture to the face mesh all right this is also very simple we already have our line face which is mapped to the reference image select the material in here you'll be finding a texture section uh click on this image thing and select the texture all right and here you go you got the texture in your spark right so that's how we work with face meshes all right um you can also like uh add uh you know occlusion effect in this phase mesh in the next lecture only we would be learning about occlusion uh because we are we will be implementing our own 3d model in sparky all right but for this lecture this is it and we learned about face tracker we learned about phase meshes and also created our first uh phase filter right so yeah so as you are already aware of spar kr all right and you already know how to create 2d filters with spark air right now it is a very high time to learn how to create 3d filters already that is used 3d models with and with the number of filters all right so the first thing all right what you uh what i want you to do is or click on go to settings that is project properties uh click on change project properties all right here you will see a tab experiences so click on add experience and select this sharing experience and click on insert all right so after you have done that we are good to go with the project now what you have to do is uh add a 3d model the first of all add a 3d model of it all right click on ar library and find for a 3d model you want all right so let's say uh let's get a cap all right let's get a cap it's uh let's get actually a 3d cap right now let's get this pokemon's masters cap right click on import it will start downloading the model all right so it has completed downloading the model now close this window and cool so we are good to go now click on this focal distance or camera alright then click on add that is this plus sign and add a face tracker all right select the face tracker and insert it all right now here you can see that our face tracker is in place the gizmos are working perfectly fine now what i want you to do is click on this default texture environment so not not this one just wait yeah this one material all these textures all right what i want you to is remove the compression all right because that would slow the that would basically slow spark ar for me and i currently don't want that yeah of course when whenever you are publishing all that you will uh when you will publish your filter make sure that uh you compress them all right because uh compressing the filters are really necessary in case of publishing it uh on instagram or facebook all right now what you have to do is uh get this pokemon masters cap that is this 3d model and drag it inside the pokemon face tracker right now you can see it so it's a really really really big now let's scale it down that is give it a 0.2 scale just wait okay cool uh still it big uh let's give it 0.00 let's say 8 point zero eight point zero zero eight all right that's that's too small okay point zero actually zero it i i think by mistake i give 0.8 okay 0.00 sorry 0 8.08 okay all right it's it's uh now the size look good but here you can see all right one more thing let's uh remove its uh rotation actually okay not not this one let's give it a rotation like this okay it does have some rotational problems just wait okay minus 90. actually let's uh first of all let's pause the play all right and yeah this this is better now here you can see we can't adjust this cap on the person right like it's it's not being adjusted like it it is not fitting it's just on top of his head and of course we don't want that right we don't want to just just see it can't even go on its own face so now here comes the concept of occlusion all right see occlusion is basically now like in real world when you put uh let's say uh see you have two hands right you have two hands like uh put one hand on top of the other hand right would you be able to see your other hand that is let's say if i take one of my hand all right let's say i take the right hand and put the left hand on top of it so after putting it would i be able to see uh the portion that i covered up with uh my left hand we won't all right that's uh that is what i can say is a occlusion occlusion basically gives a more immersive experience on it to make it easier for you all right let's search for ar occlusion let me uh get some image to make you understand all right okay so all right yeah here we go we got one really good image just give a few seconds so here you can see in this image that first of all uh the first that that is the left side of the image is non occlu doesn't have any occlusion all right and you can see that the pikachu is like on top of uh his legs right and that is not giving us a sense of emotion or also it is not feeling realistic all right but if we look at the second image you would see all right that the pikachu is behind his leg all right it's it's not like overlapping the leg it's behind the leg and that is what occlusion is the person or the car in this in the first case all right this portion doesn't have any occlusion but in the second case the person the person has an occluder all right on on his legs so that's why he's able to hide this particular pikachu all right so i guess uh occlusion the concept of occlusion is clear all right and if you're still confused about that that's totally fine uh you can ask it in the comment section and if even if you want i can make a separate video on explaining occlusion all right now how do we achieve occlusion in sparky right so first of all there's uh there's an object actually called a head occluder all right so what you have to do is uh go to the ar library and search for occluder it's but it's given by spark r only you would see that in the block section that is this second one head occluder click on it all right it's by it's given by spark ar team so click on import free and it will start downloading it and import it after its download cool so we have imported the head occluder now what i want you to do is put this head occluder uh inside this head right means inside this face tracker now you can see that uh the the means some portion of the cap is hidden right and of course this is good we are able to see the occlusion all right now uh we have to adjust the cap right so how would we do that um let's see okay cool so can you see that uh occlusion is perfectly working we are getting the 3d effect we wanted right isn't it so uh occlusion is working perfectly fine now uh you have to adjust the 3d model accordingly all right so that it fits the head so that it fits actually it fits the head and you don't face any uh issues right so that's what i'm currently doing it's a bit tedious process actually but the result you the end result you would be getting is like pretty good just me just let me get this cap straighten up okay cool let's see this seems fine but uh as you can see there's a bit gap already a bit of gap on on the head now just adjust it all right now uh this looks good this looks pretty good then it was previously so you have to play with all the 3d models all right all the occlusion effects to get uh to the point you want right to get to the final result you want so it's a bit tedious process but after you adjust it a bit the outcomes looks really really great all right so uh yeah hey guys so this is our last lecture all right in this lecture we are going to create a very simple project after we have learnt uh spark ar all right with the basic skills we learned about spark air all right see i i'm going to admit that i haven't taught uh sparky in much depth all right because i'm going to bring out another series all right totally on sparky are alright which will be covering sparky are in depth the main idea already the main motivation behind putting sparky are the basics of sparky in the syllabus the reason behind it was that i wanted i wanted you guys to get excited about augmented reality all right uh and i know many of you are active active on instagram all right i know many of you and you guys uh enjoy instagram so why not make uh one filter for instagram right so i i i was thinking that uh it's going to excite you and uh i guess it did so let's jump into the video and develop our last project right and uh i promise you all right one thing i'm going to promise you that more series like this all right more better than this are going to come in near future all i'm improving myself every day all right i'm going to bring out videos on virtual reality i'm going to bring videos on augmented and mixed reality all right so make sure to subscribe this channel all right so make sure to subscribe this channel so you don't miss any videos all right and uh very soon i'm going to launch all right uh most privately in the month of april i'm going to launch a course called exhaust 001 all right it would be a paid course all right so the course would be very affordable all right for so that everyone can learn from that course and uh the course will be launching at my startup that is anton all right so if you want you can and you guys can enroll in that course and uh i'm going to announce that i have announced that uh course in this video so make sure all right if you want to learn more in depth all right i have covered very very indepth concepts of augmented virtual and mixed reality in that course all right there are concepts that no one going to teach you in any of the course around all right no one is going to teach you those concepts i have included those concepts because they are very important all right i have included maths required for uh ar and vr all right that is 3d maths so make sure all right to visit that course at least once all right and if you feel like joining the course if you want to pursue uh augmented reality makes reality as a career then you can surely join that course we are going to develop multiple projects we are going to get in depth of the sdks all right we are going to get indepth knowledge of those sdks like viewphorias or ar code that is a foundation then of course sparky r we are going to going to go into the depth of sparky we'll be exploring how to code in spark and all those very important things all right so if you want you can enroll in that course so also one more thing all right join our discord server right join anton's discord server there are many experts in there all right who can help you i am in there all right so if you have any doubt a near future you can ask me in there all right and also you can connect with me on linkedin alright you can follow me on instagram so here all the links will be down below in the description and all the materials all right that i have used during the course all the project assets so all those things will be available uh on the website all right that is ar course dot or netify dot app all right it would be available in the website so you can get all the assets from there all right and the spark air assets you can get from the air library only all right so yeah without any further ado let's get going right so the very first thing is uh click on this project properties click on change project properties all right make sure you do that and in that click on add experience all right and uh insert the sharing experience all right that would actually help us share these assets on our mobile and all those like on our instagram uh and all those portions right so now the very first thing is i want you to add a head tracker or sorry face tracker all right so click on this plus icon all right and click on this face track and click on insert all right so here you can see our anchor has appeared and that anchor is moving with the face now i want you to add some assets all right i want you to add some asset the very first asset is go to the blocks all right i guess it was in the blocks on the right i don't exactly remember actually let's let's search for it head occluder all right oh uh okay yeah here we got it all right so make sure to get the hair document that is provided by the sparky assets only all right and uh click on import it will down it will start downloading it all right and after it's downloaded click on done and you know what to do you just place this head occluder inside of the face tracker all right so here we got our head occluder now we have to add some more acid that is plus click on this plus icon then click on search ar library all right and here we'll be adding our glasses that is search for steam punk glasses all right so here you will be getting this particular glass so i'm just going to import it all right so it's going to take some amount of time to download and import the model uh model till then all right make sure uh you subscribe the channel alright make sure you subscribe the channel for more up uh videos all right on augmented virtual and mixed reality if you want to make a career in in this domain and i'm going to i'm sure you're going to like how this domain is like i love this domain for truly like this is one of my favorite domain in computer science so just wait for a few seconds and it would be downloaded so now our asset is loaded right now the very first thing i want you to do is because this thing will make our you know sparky are slow all right so what i want you to do is go in there all right select all the assets right in here and uh make sure that the compression is set to none as of now all right why see here you can see the size is really big all right and of course uh spark uh when you'll be launching this filter spark kr won't be accepting it so that's why you have to compress this filter after you are done with all the you know uh done with all the spark means development of your filter all right uh i always do this so it like i compress these all the materials after the development is done because that saves a lot of time for me uh like it doesn't interrupts my development all right the development of the filters right now what you have to do is fairly simple drag and drop this object all right make it a child of the face tracker so here you can see it's you know really big right so it's time for us to make it small oh okay first of all you know he's moving really fast so i of course don't want that so now what i'm going to do is i'm going to you know all right okay big mistake now all right okay cool very cool now uh you have to adjust this you know adjust this to his face right now let's see uhhuh yeah this this looks pretty good yeah this this definitely looks so good let's uh all right okay see we can see his eyes also so now this glasses are looking very good and we actually have you know set up means perfectly set up written there now what i want you to do is add another asset that is going to be you know a hat right or a cap maybe so add any asset you want all right so let's go for this one this seems a nice fit for this head right means for this uh what can i say this particular glass not head so just wait for it to download all right and cool we got it now simply drag and drop it in here all right make it a child of our favorite face tracker and and now you know what to do scale it down all right scale it down cool now move it a bit so that you know it gets adjusted on okay let's see now yeah this looks good doesn't it yeah it definitely looks good now um just give me a few seconds i guess all right so i need to make it a bit more bigger so that you know it this cap fits this particular occluder face all right so let's see now okay this looks this looks very good right doesn't it all right now let's see all right let's see if everything's working fine or not all right just okay it's compressing so i'm just going to you know as of now remove the whole compression thingy of course it's this thing is of 6 mb and that is of you know four or four i guess it was a 4mb right so okay it's of 7 mb guaranteed so means this one is of 7 mb so it's around 10 to 12 mb right so of course sparky isn't going to accept this particular you know this particular model so the to fix that problem is to compress all right to let spark here compress these particular you know textures and models and after that you can simply publish it right and let's try this out and uh on myself all right let's see if it's if it's working or not all right just let me you know all right all right all right it's i guess because of the background light it's not able to track my head perfectly but that's okay it's uh it's working all right okay cool cool cool all right cool so now if you want to publish it what you have to do is you have to click on this publish button all right then you know click on this publish new effect all right and currently the text you can see the textures are being compressed and after the compression completes all right here an option you are finding that is called export all right you have to export this particular file into one file the the extension view dot ar export after it is exported all right you have to go to a dashboard all right let me show you the dashboard just give me a few seconds let me pause the simulation so this is the dashboard you can simply go in there facebook.com hub slash dashboard so these are the two filters i made already uh this one was like a long time ago all right i had some other filters also but i deleted them uh so they are not here as of now so these two are there but uh this javascript for dev doesn't really work because i haven't uh updated as of now because i i guess it's been almost one year this was my very first filter all right and this and this this was the one i recently made this was a very old one like i haven't updated since i guess it's been more than one year yeah so i had other filters too so i removed them so i'm going to like i'm currently working on creating a whole new set of portfolio of sparky and ar applications so yeah that's why i removed the previous ones right so now what you have to do is click on you know after you are on the hub you have to click on publish effect all right and a new window will appear alright so just give it a few moments all right just give it a few seconds and it will open the window for you all right see make sure you export the you know the filter asset all right because without that you won't be able to publish your filter all right okay cool see first of all uh you have to give a name to your filter all right so you can give any name to a filter if you are uh going to upload the filter that i showed you in the project what you can do is you can i would like to name it weird uh uncle maybe i'm not sure i'm not really good at naming all right i'm i might name it uh weird uncle all right i might name it you weird uncle you can you can name it anything you want right after that when you uh after exporting all that you will be getting a file.ar export file all right simply drag and drop that file in here and make sure the file is less than 40 mb all right the size of the file is less than 40 mb and i would suggest you to choose all platforms or if you just want to like you know upload the filter only on instagram you can disable the facebook or messenger and all the things from here all right but currently i wanted to publish it on all platforms the owner is priyanja mata charity right this is the publisher that is the publisher is on my instagram account here the categories you can select the categories all right like it what kind of uh is it it can uh it is of scifi and fantasy of course it looks like something from fantasy right it can be of selfies all right so and also you can like select the weird and scary because weird is in its name only right and after that you uh for you know for enhancing the search you you have to add some you should actually add some keywords in there all right and uh also one thing what you have to do is you have to record all right you have to record the filter all right you have to record the filter on your phone uh and upload the uh means the video in here all right and up after that you can use the video thumbnail all right and if you if if you have collaborated with some other people also during the development of the filter you can add them as a collaborator in here and there are two options that is as soon as possible and as uh as set time and date so you can do any of this all right as soon as possible means uh i generally do as soon as possible the reason behind it is it gets uh like it takes around three to four hours or i think it may be even less than that they publish that filter instantly so that is one way and otherwise you can simply set a particular date and time when you want your filter to be published alright and they don't take a lot of time to verify the filter all right and then click on submit and your filter will be out for review and after it is reviewed if everything success if everything is successful you will be able to you know user means distributor filters on all the platforms right and one more thing while recording the video make sure the video of uh you are recording the video of yourself only because uh spark spark has a policy of not using their you know their presets means you can't use these presets all right the presets like this uncle uh is you you can't record this uncle using your filter right you can you can't record any of them any of the filters in here to record it right so you have to record all the assets by yourself right so you have to record the video by yourself all right so make sure you do that and great and also one more thing don't use face all right your face as uh you know as the icon of our logo of this particular filter all right uh make sure to create a logo or specific for this filter uh any you know in your in your photoshop in canva or any platform you prefer all right so yeah that's it for this video and also make sure all right you subscribe this channel alright join our discord server that is our antenna community all right and yeah thank you see you in the next videos
