With timestamps:

00:00 - This college algebra course is different than other college algebra courses. Like many other
00:05 - ones, you will be learning all the concepts from an experienced university professor.
00:10 - But in this course, the instructor Ed Protowski will also show you how to implement all the
00:16 - concepts in Python. This course is for everybody, but especially those interested in computer
00:22 - science. Hello and welcome to the Algebra with Python course. My name is Ed and I'll be your
00:33 - guide on this adventure. So we're going to learn about algebra and how to write Python code to do
00:40 - all of your algebra. Because there's so many different things that you can do with formulas.
00:46 - You learn these formulas. Hey, anytime you have a formula, you can write code to use it.
00:53 - So that's what we're going to do. We're going to write some code using the Google CoLab notebook.
01:00 - That's Python, a Jupyter notebook, essentially in your Google Drive. So one of the next things
01:07 - we'll do is look at how to set that up. We're going to go through each unit. We're going to
01:13 - look at the math. We're going to look in the actual lessons. I'll be writing things on the board
01:20 - and we'll look at the concepts, how to do the math on the board. And then we'll look at
01:26 - then how to write the code to do this. And you'll be able to create your own CoLab notebooks.
01:33 - In fact, I hope you do create your own notebook or two along the way, building your own
01:39 - resources that you can use. You can also, you know, once we set it up, you can also actually
01:46 - download the CoLab, the Google CoLab app, and you have access to each of these notebooks on
01:51 - your phone. So, you know, you can make your own like, you know, super calculator that you have
01:57 - access to on your phone, you know, solve all kinds of things, you know, and that's great.
02:03 - You know what, you know, building these resources, but also understanding how to use them so that as
02:08 - you go further in math and in writing code and eventually leading up to, you know, working in
02:13 - data science, that you really understand these concepts and you know how to use all the formulas
02:19 - that you're creating. So that's really, that's the idea. That's what we want to do. And each unit is
02:25 - going to be a lot like this. I'm going to talk about the math, you know, we'll do some things
02:29 - on the board and then we'll flip it and we'll look at how to do that with code. I'll include
02:36 - all the resources for you. And then in addition to the core concepts in each unit, the next thing,
02:43 - then what we'll do is I'll have another video or two of extra working through the problems.
02:50 - So, you know, you know how to write the code, you're building your resources,
02:54 - and then we'll just work through a bunch of extra problems, you know, putting this into practice.
02:59 - And it'll be really great. You know, you'll learn algebra, you'll learn code,
03:04 - and you'll have all these skills under your belt that you can use for a lot of other things. And
03:08 - we're going to build upon these in future courses. So I hope you enjoy. Okay, so let's look at how
03:16 - to set up Google CoLab in your Google Drive. So in your Google Drive, hopefully you have it organized
03:23 - in folders and, you know, you have a, you'll set up a folder for this course. That way, you know,
03:29 - you can have all the documents and notebooks and everything there, just like I have here,
03:36 - and you will have access to all these documents you see, you know, soon enough. So
03:44 - if we take a look at the little yellow infinity symbol, that's the Google CoLab.
03:51 - And, you know, if you want to create a new Google CoLab, you're in the folder where you want it to
03:56 - be, click on new, and it won't be here, and you go to more, and then it'll be down here.
04:03 - So Google CoLab. Now, if you don't have it already, if you have not yet set it up,
04:07 - then you go down to connect more apps. And, you know, it's begins at C, it might show up,
04:15 - you know, here. But if not, then you can search, you know, and look at this like CoLab, even if
04:21 - you just do Co, it comes up. But if you type in CoLab, then it'll come up. There we go. And again,
04:30 - mine's already installed. But if it wasn't, you'd see it there, you click on it. And this blue
04:36 - button, instead of saying uninstall, it would say install. And then you'd have have it available.
04:42 - And there we go. Then when you go to new, and then you can go to Google CoLab laboratory,
04:49 - and it loads. There you go. So as you see, I like the dark theme for CoLab. So that's just the one,
04:58 - that's just what I picked. You know, you can change that. So this little block here, this is
05:05 - where you're going to write the code, you know, it's set up to write a block of code. And in
05:10 - addition to that, you have the ability to add more code or more text. So you see, you can add
05:18 - another block of code, you can add more text. And if you click up there, it just adds it in line.
05:24 - And, you know, if you type text, now, if I hit enter, that just gives me a new line,
05:30 - I have to click somewhere else to get out of that. So there you go, you can add code or text by
05:35 - doing that. Also, if you might have noticed this appear, if you hover around the middle,
05:40 - you can add code or text. And that works anywhere. You see, so you can add, you know, text right here,
05:48 - in between these two. And there we go. And that text actually, besides writing text, you can
05:56 - actually use some a few HTML tags to, you know, make new line breaks, or some things like that.
06:03 - And then if you get really fancy, you can use the latex math notation to display different math
06:12 - formulas. But we'll get to that soon enough. Alright, so you have all these different things
06:16 - you can do, you know, your code, your text. And one of the other things you want to do first,
06:22 - like any document, give it a name. And you'll notice the familiar setup compared to other
06:27 - Google Docs, you can, there we go. Let's just call this week one example. All right, so,
06:37 - you know, give it a name, you know, you don't want to leave all your stuff just untitled,
06:41 - might be, you might forget, and it might be hard to find later. And you can write your code there,
06:47 - whatever you'd like to put in there, print. Okay. And, you know, there we go. It just sits there as
06:58 - code until you run it. And you can click this run button, or if you're familiar with the Jupiter
07:05 - notebooks, you can hit shift enter, that'll run it also. And there we go. This, this is the output
07:14 - here. Notice you can also do a lot of math right there in the print statement. So if you just
07:25 - put in math formulas, you see hit enter, it just gives you a new line, run it. You can do all sorts
07:34 - of math formulas. And remember, the add, subtract, multiply, divide, that all works, that's built in.
07:39 - The, the exponent would be
07:49 - this asterisk, two of them. So there you go. So that would be three to the fourth power.
08:00 - And you see it'll, it'll do the math right there. If you wanted to do something like square root,
08:05 - you have to import something. And we'll get to imports as we go through a lot of this.
08:10 - But notice you can, you know, you can have your text, you can have, do your math for,
08:15 - for a lot of simple things. You can just do that right in the print statement.
08:19 - One of the other interesting things you can do is, and if I make this,
08:27 - I'll just make that B for a certain reason, then you have a table of contents here.
08:34 - Now this has nothing because I don't have any headings or sections. So that's what the
08:41 - table of contents looks for. If you click on a new section, then you can, I'll just leave
08:47 - it as new section and call it good right there. You see it shows up in the table of contents.
08:53 - And if you double click, now this B is underneath that section. So if I click on this arrow,
09:00 - it becomes minimized within that section. And then here, A, if I want to make this its own section,
09:10 - then take a look at the section heading. If I double click on it, it's that hashtag that
09:16 - would be normally used for a Python comment, but we're, but we're in the comment.
09:23 - It would be normally used for a Python comment, but since we're in the text part, then you would
09:30 - just use it to indicate a new section. So I can go up to here, this text, and I can make it a new
09:41 - section. You probably don't need the space, but I like it. And again, click somewhere else to get
09:45 - out of that. So now I have A and I have my new section here. So I can do some different things.
09:51 - I can put some, I can put some code here and I can, in this code, I can move it up. See the
09:58 - arrow over there? I can move it up. And then maybe I'll make B, double click on this, and maybe I'll
10:06 - make B its own section. I'll click somewhere else. And so I can have all these sections
10:18 - and now B is its own section. That kind of didn't matter because I don't have anything underneath
10:22 - of it. There we go. Put text in here, click somewhere else, and then I can collapse it.
10:31 - So you see, I can have these different sections collapsed, and then they all show up in the table
10:36 - of contents, A, new section, B. So if you give them names more than A, then you're going to have
10:45 - them more than A and B. It becomes useful because you can find them in the table of contents.
10:52 - And then you just click to expand each section in whatever else. And you can have, within the
10:58 - section, you can have code, text, you know, and as many of those blocks as you want. And that section
11:07 - goes until you create a new section. So some good useful things you can do in building your own
11:14 - Google CoLab notebooks. You might decide that you might like that as a way to organize them,
11:19 - you know, keep them in sections. So that helps. Also, the Google CoLab, like everything else in
11:27 - the Google Drive, it does save automatically, but it doesn't do it as often. So you do have a file
11:34 - and you do have a save here, and also the normal shortcuts, Ctrl S, or Command S. So that does
11:47 - work. And that way, sometimes, you know, if it goes a while in between saving, if you try to close
11:56 - it, it might actually prompt you to say that you might need to save it. So that's just something
12:01 - to think about. You know, you actually do actually make an effort to save things here in the Google
12:09 - CoLab. So we set up our code. We can do math right there in the print statement. We set up our
12:15 - sections, table of contents, and all these sections, you know, within the view, you can actually
12:22 - expand or collapse them all at once if you want. You know, that's kind of interesting. And through
12:29 - all the code we're going to work on, you know, you also have down here one of the other things
12:33 - that looks like, you know, XML or HTML tags, and it's a bunch of code snippets that you can use,
12:40 - you know, copy and paste, try these right in your Google CoLab right here. So some pretty cool
12:48 - things to explore. And there we have it. You're going to be building your Google CoLab notebooks.
12:57 - You might want to build one for algebra and, you know, just continually add to it, in this,
13:06 - in which case, definitely make sections because that's going to be a helpful table of contents
13:11 - to find what you want. So you could do that. You could make a different notebook, you know,
13:17 - for each unit or each week or however you want to organize it. But then the idea is you're building
13:24 - these resources that you will have access to. And as well as installing it on the Google Drive,
13:30 - you can also download and install the app. So that'll be useful. Have it on your phone.
13:34 - That when you first run it, you need to do a few things to go through setting it up, you know,
13:42 - authentication and such. But, you know, it doesn't take that long.
13:46 - All right, so we have this, you're going to be building your stuff in your Google,
13:50 - in your Google CoLab and it's going to be exciting. We'll get to a lot of,
13:55 - a lot of interesting things. So let's get into the math next.
14:06 - So we can't talk about proportions without talking about ratios. And ratio is another
14:11 - word for a fraction. So this two out of four, I can write that as, well, two out of four,
14:17 - but I could say two fourths. I can call it a fraction, but it's also a ratio.
14:22 - And then a proportion is two equal ratios. So if I know that these are equal, then there's other
14:28 - things I can do with this. And one of the things that works and becomes very useful is cross
14:34 - multiply. So if these two are equal ratios, then I can cross multiply, multiply the diagonals.
14:43 - I can do two times 10 equals four times five. And that's another way to write this. So then I can
14:53 - get it out of the proportion mode and I can use this to double check or I can solve for things.
15:00 - So two times 10, we see 20 equals 20 and then that's true. So, you know, we confirm that that
15:06 - works. We can always do this. If these were other numbers, I can check to see if this really is true
15:11 - cross multiplying, because if that doesn't work, then that wouldn't be true. And I can also use it
15:18 - if one of these numbers is unknown. So if I have three out of six equals X out of four. Now there's
15:26 - other ways to solve this, but this is the go-to way because it works every time. So when I do my
15:31 - when I do my cross multiplying, then I can do this three times four is 12 equals six X. So there we
15:44 - go. Three times four is 12 and then six times X is six X. And then I know that the next step I'm
15:51 - going to do is going to be dividing by six. So then I get that X equals two. Now in doing that,
16:02 - we can jump ahead and say, okay, let's I know that when I multiply this diagonal, I can picture this
16:10 - step. It's going to be six X. So the next thing I'm doing is dividing by six. So a lot of times we
16:15 - just put this in one step. So I multiply the diagonal that I can divide by the other number
16:21 - because I know that the next step and then my answer is X. So we can really make use of this
16:28 - in writing code. I can see the proportion and I can then just put this all in one step to solve
16:34 - for X. And again, that's it's the go-to way it works every time. So I can write code to then prompt
16:41 - for these numbers, cross multiply and then solve for X. One of the ways this is also useful is
16:48 - some of the other applications. If I have, let's say I'm converting something like miles to
16:56 - kilometers. So if I have one mile is about 1.6 kilometers, then I can set this up. This is the
17:09 - ratio that I know. So as long as I have miles and then kilometers, then if I know one, I can figure
17:19 - out the other. This unknown can be either place. So if I have two miles, then how many kilometers
17:27 - is that? You see, we can make use of this. I know that I'm cross multiplying two times 1.6 divided
17:35 - by one. And then, so there we go. So X would be 3.2. And again, multiplying the diagonal that I can,
17:46 - two times 1.6 dividing by the other number, which in this case, it's convenient that it's one.
17:51 - So then I can solve. So this is what we're going to use. And we're going to take a look at
17:56 - how to put this into code. And so prompt for these four numbers or three of them,
18:02 - and then figure out the fourth one. So let's take a look at how that'll happen. So let's take a look
18:08 - at the code. So we're going to see here how much easier it is to write some code to solve some of
18:16 - our problems. And just like proportions, we have that cross multiplying that we know works every
18:21 - time. So I'm going to put just a display here to remind us that we're setting up the proportion.
18:29 - And here's what it looks like. N1, D1 equals N2 over D2. So N for numerator, D for denominator.
18:37 - And if I have a proportion, I would know one of the ratios. So I would know, let's say N1 and D1.
18:45 - And then N2 or D2, one of those I would not know, but I would know the other one. So I have my
18:53 - comment here in the code, put a zero in for the unknown value, because realistically, none of
19:00 - these values would be zero. That would just, you know, you wouldn't even need to think hard about
19:06 - that, that zero is everything out, or if it's in the denominator, it's undefined. So that would
19:10 - never occur in something that we're really trying to solve. So I would know N1 and D1, and I would
19:17 - just change these numbers, put in my numbers that I know, and I'll put a zero in for the one I don't
19:25 - know. And then I'll put two if statements. So I have if N2 equals zero. And there we go. Notice
19:35 - the setup of the if statement in Python. If N2 at the double equals, because I'm testing it,
19:41 - I have a colon. And then the indentation afterward is one, two, three, four spaces, I would hesitate
19:52 - some people use a tab, I would hesitate to not use a tab. They don't often give you the right number
19:58 - of spaces. So indent four spaces. And then I have the answer is, and I'm going to just do that cross
20:07 - multiplying. So you see D2 times N1 divided by D1, that cross multiplying that we that we know,
20:16 - and then we'll print out the answer. And we'll do the same thing here. If it's D2 that I don't know,
20:23 - so my if statement, if D2 equals zero, colon, four spaces indent, and then this answer,
20:30 - notice the cross multiplying. So D2 is what I don't know. So I'd be doing N2 times D1 divided
20:38 - by N1. And then I'd print out that answer. So there we go. And then given these one over two
20:45 - equals what over 16. And then if I would run this, and it will output the answer right here. There
20:55 - we go. N2 equals eight. Or if I had this, I'll keep this and maybe I'll put this one as zero.
21:07 - Rio, and if we run it, there we go. Really straightforward. We want to get to this point
21:13 - that we know these we know these formulas, and we can just put something in here, maybe even
21:18 - display something to set it up, and cross multiply, solve any proportion this way.
21:29 - Now that we've worked through the core skills in this unit, let's look through some extra problems.
21:34 - And I'm going to work through extra problems using the CoLab notebook. So you can see how
21:40 - you can apply these resources that you're building and use these to solve problems that might come
21:46 - up in a textbook or in day-to-day life. So we're going to go through some more extra problems here.
21:52 - We're going to work through some extra problems here relating to some things that might come up in
21:58 - working with proportions and ratios. And one of the things that comes up, we work with mixed
22:04 - numbers. And in math, I might write it like this, but then you think, how could I do this in Python?
22:10 - And Python, remember, you can even do math in the print statement. So you could put this as one and
22:16 - two thirds becomes one plus two thirds, and you see two divided by three. Notice I didn't even,
22:22 - sometimes I use parentheses, extra parentheses, but we really don't, Python knows order of
22:26 - operations. So you could have one plus two thirds, plus three and four thirds. So it'd be plus three
22:33 - plus four divided by five. And, you know, you can change up minus seven. You can put that all in a
22:41 - print statement there and it would output the answer. Now, later on in the third unit, we're
22:48 - going to also talk about converting that output. If it was a weird decimal into a fraction or mixed
22:55 - number, but we'll get to that. So you can do this, but even also at this point, you could,
23:00 - if you wanted to, instead of print and you don't need the parentheses, but I'll just keep them
23:06 - there, you can store them as a variable. So if you had something that you wanted to store as a
23:13 - variable and then use that later on, or any one of these, you know, convert a mixed number stored
23:20 - as a variable, because some of these, like two thirds, that will come out as a mixed number,
23:26 - mixed number, or the one and two thirds that will come out as that repeating decimal. Well,
23:33 - later on, you might want to keep as many of those decimal places as possible and storing
23:38 - it as a variable will do that for you without you having to write down all the decimals.
23:43 - So really, that's the whole thing. We're trying to build, you know, for all the different times,
23:47 - you might use a calculator. Hey, might as well use Google CoLab because you can have all these
23:53 - formulas in there, store variables and everything. So for all the different times, you might need to
23:59 - work with mixed numbers. Yeah. Print it out, store it as a variable and continue on and
24:05 - work with the rest of the problem. So if this comes out as a repeating variable,
24:10 - let's take a look at one other thing here. If this comes out, so let's just say I have that
24:17 - one and two thirds. So we know the one, but if I look at the two thirds, you know, that would be,
24:25 - you know, 0.6 and it keeps repeating. You know, it'll keep repeating. If you get output like this,
24:34 - how would you know that that would be two thirds? Well, one of the ways you can do this is we can
24:40 - throw in some other variables here. Let's call, let's call this X. So X is all these repeating
24:46 - decimals. So if it repeats each, um, each place, then I just need to multiply it by 10.
25:00 - You see, and that keeps going because if this keeps going and then this keeps going, then
25:07 - if I subtract them 10 X minus one X, so that would be nine X equals six. Now notice I did not rewrite
25:22 - it, but I am subtracting this bottom row minus the top row because then all these decimal places
25:30 - line up and it would subtract. So multiplying it by 10 moves it over. Now I have six points something
25:39 - and when I subtract 10 X minus one X is nine X, then that all cancels. And if I have nine X,
25:49 - how do I get to X divide both sides by nine? So we get six over nine, which we know then mathematically
25:57 - we can reduce divided by three is two divided by three is three. And actually this works,
26:06 - any single digit that repeats is a factor of nine. So if I have, um, if I have anything else,
26:17 - and actually I might use the same, same formula, but if I have anything else, like if I have, um,
26:23 - um, point four and it's a four that keeps repeating. So then 10 times that would be four point
26:34 - and as many fours as you want. So then when we subtract 10 X minus X is nine X. And then when
26:42 - I subtract this, everything after the decimal subtracts. And so your answer is four and divide
26:50 - by nine X equals four over nine. Now, so this works for any number one, one through nine,
27:01 - but this is kind of interesting then, um, how, what if you get a point nine repeating?
27:08 - Because would that be then nine over nine? Yes, maybe. So if I have point nine repeating,
27:22 - and so then 10 times that would be nine point and as many nines as you want,
27:28 - we'll do the same thing. So nine X equals, so you see if this is point nine repeating,
27:36 - this still follows 10 times that. And then when we subtract,
27:44 - it all lines up, it becomes nine X equals nine over nine, which is one.
27:51 - So you see some algebra acrobatics. How do I show that point nine, nine, nine repeating equals one?
27:58 - And these are kind of the things that we want to bring in. Um, some of the other things that we
28:03 - can do, you know, this works out nicely just seeing it on the board. But later on, as we do
28:09 - different things to convert decimals to fractions, you can see that it'll work in the code too.
28:14 - But yeah, some math acrobatics, this is kind of what we want to be able to do.
28:18 - We want to also sometimes use the code to show different ways to get to solutions.
28:22 - And when we see it get to a solution in different ways, it kind of like
28:27 - reproves, Hey, this works. This is the true solution.
28:30 - So these are some of the things that we can do, um, with proportions and, um,
28:39 - you know, some of the other things we'll do, we, you know, we could look at like converting, um,
28:44 - convert converting, uh, money like.
28:51 - Yeah. So if I have, you know, let's say, um, you know, one U S dollar is right now,
28:59 - I just looked this up. It's 1.29 Canadian dollars. So if I want to convert, then I can set up my
29:08 - ratio and proportion as long as you know, I know one of these, so I know the ratio.
29:16 - And then as long as I know one of these, I can figure out the other.
29:21 - And in the code, you remember, we just add it, whichever one I want to figure out,
29:26 - I put a zero there because either way zero over anything is zero. So that would not apply here.
29:34 - You know, the zero in the numerator, the answer is zero and zero in the denominator would be
29:39 - undefined. You know, you could look up different, uh, images of divide by zero online, you know,
29:47 - things like going into the abyss and all kinds of fun things like that.
29:50 - But yeah, we don't want to divide by zero. So if I know one of these and neither of these would be
29:57 - zero, that just really would, we would never arrive at that situation. So, you know, we saw
30:03 - that that's why we would put a zero in for the one we want to know. And there we go. As long as we
30:08 - have it set up, you know, then I can figure out, oh, okay. Well, in that case, you know,
30:14 - um, how many, I'll put the question mark here since we're not in the code, you know,
30:20 - okay, if one U S is 1.29 Canadian, then what's one Canadian hour worth. And then you see cross
30:26 - multiply divide by 1.29 and you'll get that exchange rate. So that's how we can change it from unit
30:33 - to this one, one U S to how many Canadian, we can change it to one Canadian to how many U S
30:40 - you know, cause very often you find exchange rates and they'll give you it in one direction.
30:44 - And maybe you want to find it in the other direction. So these are some things you can
30:48 - use this for. We can also do things like miles to kilometers or, or whatever,
30:56 - you know, other unit conversion you want, but you know, if you have one mile
31:03 - is 1.6 kilometers, um, it's that exactly 1.6, you know, there's like, you know,
31:12 - another nine meters or something, but okay. And then there we go. If I want to convert
31:17 - then as long as I have miles and I have kilometers, then it'll work out. And we looked at how to
31:27 - put that in the code. So now that you have these tools, you can convert anything. As long as you
31:32 - have that ratio of one aspect of it, then you can, you know, plug in one of these two numbers and
31:40 - figure out the other. So, you know, here, you know, some, some of the good things, and these are some
31:46 - of the things we want to do in the extra practice section. You'll see this come up in every unit
31:51 - that, you know, we're going to get to the core, um, core skills in those units are going to build
31:56 - your ongoing, uh, CoLab notebook. So you have some resources and then we'll have an extra practice,
32:04 - um, extra practice, extra problem section where we then use some of the things that you've created
32:11 - and let's apply this and let's solve a bunch of extra problems. So there we go. Um,
32:18 - and we will, uh, we'll go on to the next unit.
32:25 - Here, we're going to look at four different ways to solve for the unknown number.
32:30 - And in algebra, we often call this X just because X works nicely, X marks the spot. So
32:37 - if I have, I had to put four different situations here, add, subtract, multiply, divide. So I put
32:43 - simple numbers because you might be able to do this in your head to see the answer, but the algebra
32:50 - explanation is you want to see what you're doing and do the opposite. So then if these two sides
32:57 - are equal, both sides of the equal sign, if you do the same thing to both sides, then they stay equal.
33:04 - So that works. What am I doing? I want to do the opposite to cancel things out. Then the next thing
33:10 - is do the same thing to both sides of the equal sign. I'm going to show this with the four different
33:16 - algebra operations here. So if we have X plus three equals five, so in each time,
33:23 - the goal is that I get X equals something. So I would like that X by itself on that side,
33:31 - on the left side of the equal sign. So what am I doing? I'm adding three. So I want to do the
33:35 - opposite, subtract three, and then I'm going to do the same thing to the other side. And three minus
33:42 - three is zero. I don't have to write plus zero. Five minus three is two, solved. X equals two.
33:50 - So it's like Sherlock Holmes eliminating possibilities, and then we get to the answer.
33:55 - So the next one, if I'm subtracting, I'm going to do the opposite. So again, my goal is X equals
34:02 - something. So X minus two, if I add two, that cancels. That's why I add two, and then I do the
34:10 - same thing to the other side. So negative two plus two is zero. Don't have to write plus zero.
34:17 - Have to write plus zero. And then 10 plus two is 12. There we go, solved. We go to multiplying,
34:25 - very similar. Also notice in writing math, most textbooks, you won't see the fact that you won't
34:33 - see a multiplication symbol at some point. Just the fact that they're next to each other means
34:38 - that I'm multiplying. Now we have to remember this in Python syntax, you have to put that
34:42 - multiplication symbol. But here three X means three times X. So to get X by itself, I'm multiplying,
34:51 - so I have to want to divide. And notice I'm going to write that like a fraction, divided by three,
34:56 - and then divided by three here. Now here's something else about the notation. Three divided
35:01 - by three is one, but I don't have to put one X. You could, but you don't have to. In most places,
35:09 - you won't see it. One X. Any other number there, I'd have to write the number, but one,
35:14 - we often don't write that. So then 12 divided by three is four. And we go here, X divided by four.
35:23 - Somehow, whatever I teach this, everybody's like, get it, get it, get it. Confused. It's the same
35:29 - thing. I'm dividing. So I'm going to do the opposite, which is multiply. Now in this case,
35:35 - I might write it, how can I write multiplied by four? I might even just put it in parentheses,
35:41 - just saying it's next to that, so that means I'm multiplying. That's one way to put it. And so here
35:47 - I'll put in parentheses. So divided by four times four cancels out, so it's one, and then that's one
35:55 - X. And then here, two times four is eight. So with some simple numbers that we see these methods here,
36:06 - add, subtract, multiply, and divide. And the key is no matter what the numbers, no matter
36:14 - what else you encounter, how complicated the numbers are, it's the same method.
36:17 - So we recognize this method, then whatever number comes up, then we can figure this out. Because
36:23 - this I can do in my head, but supposing I have instead of X plus three, supposing I have X plus
36:37 - 7.2 equals 11.1 or something like that. So supposing I have something like this,
36:48 - how could I solve it? Oh, I have an algebra method. What am I doing? I'm subtracting,
36:55 - in this case, 7.2 from both sides. And so then I get X equals, and even if it was something more
37:04 - complicated, I know what I'm doing on the calculator. I'm subtracting 11.1 minus 7.2,
37:12 - and then I know what I'm doing on the calculator. There we go. So we can also use this
37:21 - anytime I have a two-step equation. And in the two-step equations, it's more like
37:31 - order of operations in reverse, because the addition is the easiest. So if I have something
37:37 - like 4X plus 6 equals 22, so two steps, I'm still going to combine those same four steps
37:49 - we were talking about. I'm just going to do one than the other. And I'll look at the addition.
37:54 - Like I said, like order of operations in reverse, the addition or subtraction is going to be the
37:59 - easiest to do first. If I then subtract 6 from both sides, so if I have minus 6, minus 6, so then
38:08 - I have 4X equals 16. And now I get to my second step, divide by 4, divide by 4, divide by 4,
38:20 - divide by 4, then I get X equals 4. So we have our two-step equation. And in all this, some of these
38:30 - are, you're going to get quick enough at this that it's not even worth trying to write code
38:36 - or anything to solve this. But some of these, as they get more difficult, then it will, and
38:42 - there's other factoring and more elaborate problems, then it would be worth it to write code
38:48 - because I'll show you now how we can just put this in Python, write out the equation,
38:57 - and it'll output the answer. So let's take a look at the code. So it's a lot easier to
39:04 - solve for X in Python because we can just import the Sympy library here. And that's the symbolic
39:12 - math library. You don't have to install anything. You can just import it.
39:15 - Google Colab works nicely behind the scenes like that. And then from Sympy, we're going to import
39:20 - symbols. And from Sympy.solvers, we're going to import solve. So we can import symbols to use
39:28 - X as a math symbol and solve for that. And solve is going to be the function we use. So we see here,
39:35 - then I'll define X equals symbols X. And that's defining that X is the variable we're solving for.
39:41 - I just put this comment here. But then the next thing we have, I define this variable eq
39:48 - equals X minus two. And this is the function set equal to zero. So it's X minus two equals zero
39:57 - is what we're solving for. And then that's the equation. So then I just put it in a print
40:02 - statement, print X equals, and Python syntax, then print that exactly, comma, and then our answer.
40:11 - And here's where we see solve eq, the equation, and use X as the variable.
40:19 - So we're going to solve that X minus two equals zero. And you see it outputs X equals two.
40:26 - It'll print an array of whatever your answer is. This just had one answer.
40:31 - But if I had something like X, X squared, X squared minus two, now that'll give me a square root
40:42 - answer. Kind of interesting how that'll show up. You see square root of two, rather than try to
40:49 - make that a decimal. But if we make this something that works out nicely to an integer, and we run
40:57 - that, see it'll give me an array of my two answers. X squared minus four equals zero is the
41:03 - equation. And negative two or positive two, either one works. And remember, then, if I have
41:10 - something like two X, I can't just write two X. I have to put, I have to put two times X, because
41:20 - that's Python syntax. Two X minus four. And then if we run that, there we go. It'll solve that.
41:30 - There we go. Much easier. And all this stays the same. You just put your equation here, and
41:36 - run it, and you can solve anything. Just make sure it's that equation set equal to zero.
41:47 - Now that we've worked through the core skills in this unit, let's look through some extra problems.
41:52 - And I'm going to work through extra problems using the Colab notebook. So you can see how
41:58 - you can apply these resources that you're building, and use these to solve the problem.
42:04 - You can use these to solve problems that might come up in a textbook or in day-to-day life.
42:10 - So we're going to go through some more extra problems here. All right. So let's go a little
42:15 - bit deeper, looking at different ways we can solve for X here, using Python code. And here is the
42:24 - code that we were talking about before. So we import Sympy, so we can use our symbols,
42:30 - and then we're still from Sympy, import symbols, and some Sympy.solvers. And here I'm just going
42:37 - to define that symbol X. And this is the simplest thing. We can have all of this code, and I can
42:45 - just put my equation right here. Here's my equation. And then I can solve that equation,
42:53 - and I'm solving for X. Notice I don't even really need a print statement, as long as this solve
42:57 - function is the last thing there. And then when we run it, we see it will give this negative 1
43:07 - half. And notice the brackets around it, because it's a finite set. Nice. Solve. Pretty easy.
43:15 - And if I have something that solves for even, you know, something more complex, like 2X squared
43:24 - plus 1. Now this is setting this equal to zero. So 2X squared plus 1 actually won't have a real
43:35 - solution. We can actually take a look at that. And you see the negative square root of I,
43:43 - and that is I, the imaginary number. So it will give us this. There's other ways to make that
43:52 - square root display in a better way, but we'll get to that later. And there we go. But we see,
43:58 - you know, it gives us two solutions as this finite set of these two. And if I were to make it,
44:05 - you know, minus 1, or I can even make it minus, you know, 4, we'll have two real solutions there.
44:14 - But there's still going to be square root solutions. There we go. Different ways that this
44:19 - will output. But you get this. You can put the equation in there and see the answer. It'll solve
44:25 - pretty much anything you can type in there. All right. But let's start making this a little bit
44:33 - fancier. What if we prompt for input? So let's say I want this to be, you know, somewhere else, and
44:42 - rather than somebody going in and finding that correct line and putting the code there,
44:47 - we can just prompt for the input here. And notice the function is input, and then it's going to
44:57 - display this. Enter equation. And I even have it as zero equals to remind the person that it must be
45:05 - equal to zero. You could add another print statement saying make sure x is the variable,
45:10 - you know, if that's what you'd like. And this input does come in as a string. But the fact that we
45:19 - are using these symbols, it will be able to interpret that. And here then we're solving
45:28 - and just putting that into a print statement. There we go. So we have this prompts you enter
45:36 - the equation. And maybe I just make it three x minus six. How about that? There we go. Something
45:51 - good. One solution. Three x minus six, because if x is two, then that works. Okay, that's great.
46:01 - But again, if, you know, I have multiple solutions, or maybe if I just don't want it to look like this,
46:08 - maybe I want it to be a little bit fancier. So, again, this solve stores this as a finite set,
46:14 - so we can do more. All right, we're going to import all the rest of these. Now, here,
46:20 - knowing that it's a finite set, I'm going to store that answer as this variable called solution.
46:28 - And then this particular equation, I know this has one solution, so I'm just going to have it
46:34 - display solution index zero. And that's going to be the first solution, which in this case is going
46:40 - to be the only solution. So when we run it, there we go. And again, this is pretty useful if I want
46:48 - it a little bit nicer output, just like having that nice user interface, you know,
46:54 - having it display zero equals and then waiting for the prompt. So, you know, some other ways we can
47:02 - do this. And, you know, here's saving this. Okay, that's great. Now, what if I have multiple answers?
47:13 - And what if I don't know how many answers I'll have? So I'm going to put this here,
47:20 - so if I enter the solution, now, maybe I'll just put the first one here. We'll get we'll get to
47:26 - this one next soon enough. So I'll just take the same solution that I know has one solution.
47:33 - And just like we were doing before, I'm going to solve it and store that as a solution. Now,
47:40 - notice my loop here and Python has this great
47:43 - method of iterating through everything in that list. So for S in solution, so there we go, every
47:56 - item in that solution set, whether it be one, whether it be however many,
48:02 - it'll iterate through that. So S is that solution. And then it'll go through. It'll be that solution.
48:07 - And each time, I'm just going to print x equals, and then I'm going to print out S. So, you know,
48:14 - we make use of the Python shortcuts. There we go. So 2x minus 4, the solution is 2. And we went
48:23 - through and did this. So what if I have something like something that has multiple solutions? So
48:31 - what if I have something like something that has multiple solutions? And so I'd also supposing I
48:42 - want to prompt for this. All right. So what if I just plug in something like this? Now, this,
48:53 - I know is going to have three solutions, because the three possibilities that would make that zero.
48:58 - So let's see what this does. Again, loops through, and it will output all three solutions very nicely.
49:07 - So we see we're building some of these things behind the scenes that will output one or multiple
49:14 - solutions and output it in a nice way. So we see, you know, if you're going to copy some code that
49:22 - you're going to use, this is the one to do it. Because, you know, you could even like, you know,
49:27 - you take out this, this was my demonstration. But there we go. And you really don't even need these.
49:38 - So this could be your code. And that will work for anything, because it's going to prompt anybody,
49:45 - you or you or anybody else using this to enter the enter the equation. So there we go. You see,
49:50 - we're building some tools here that we can use to solve. All right. What other ways can we do this?
49:57 - Now, some interesting things. We're also this time, we're going to call it VAR for variables,
50:04 - and we're going to use x, y, but we'll come back to the y. And we have this one first. You can,
50:12 - because you can use this for multiple equations, but I just call this one first. So there you go,
50:16 - two x plus 10. All right. Now, we know that this is set equal to zero. That's kind of the
50:22 - the go-to way of doing this. But then this simpy syntax, we're actually going to spell it out and
50:29 - define it. EQ first, comma zero, saying that this is set equal to zero. Because then I can solve
50:40 - for x. That's great. And this solution I just called sol.
50:44 - And since I have this one, I know that the solution is, you know, there's only one. So I
50:51 - just put salt. You know, that's my finite set. And I want the index zero. So this is it. And
50:58 - actually, these are factored results, but this is actually going to give me a nice actual answer
51:04 - because I can get that answer. X is negative five. All right. Now, here's where y comes in.
51:11 - Now, I have to have y there. If I define y as a variable. Now, down here, I can say, supposing
51:23 - this is equal to y. And you see that works. So spelling it out here that it's equal to y.
51:32 - But now I now I'll solve for x. So that's kind of interesting. And then when we do this, you see,
51:42 - Python could actually do some of this factoring for you. You know, rearranging an equation
51:48 - algebraically. So now it's solved. Why over two minus five. Pretty cool. So we can do something
51:58 - like that. We can rearrange things. And then if I have this, you know, I could I could change it
52:08 - around a little bit or whatever. But some different things you can do. The default is make this equal
52:14 - to zero. Make this equal to zero. But this gives you this other flexibility. You can call it equal
52:20 - to y. And then you can do some other things you can solve for it. So pretty cool. As you do this,
52:30 - as you incorporate this into, you know, some of the notebooks that you're going to create, tinker
52:35 - around with this and, you know, try some different things. You know, that's the idea. You go through
52:40 - some different some different formulas or different equations in a textbook and say, hey, can I
52:46 - try this? Like, we could take a look at this and say, all right, let's see, solve for y. Now,
52:52 - what about if I have two x, then, then if I want to solve it for and you can even include y in here.
53:04 - So there we go. And if that's included in y, then I still might then go back down here and say that
53:13 - this is equal to zero, because that's kind of the default way for that to go. And I, I can still go
53:21 - back and solve for x, and it should end up being very similar. Because, you know, if I want to
53:30 - do something very similar, because whether that was, you know, without this minus y saying it,
53:40 - it's equal to y or with this minus y saying it's equal to zero, see algebraically very similar.
53:46 - And, you know, we could even just to show you, we can even say this to x minus y. And we can run
53:58 - this. There we go, x is y over two, all kinds of different things you can do. If you need to
54:04 - rearrange this, you can put that in this setup here. And then, you know, what is, what is this
54:11 - set equal to now? And what am I solving for here? And in this case, it pretty much will be index
54:20 - zero for that solution set each time. So these are some cool things you can get the code to do all
54:27 - the factoring for you. Well, here's some other factoring. Supposing I have something like this,
54:32 - you know, we can divide out common factors. Now, you might see this, two x, two times x,
54:42 - ten times y, plus four. Now, supposing this is another thing in SymPy, I can just factor it.
54:51 - You know, I'm not saying that's equal to zero or anything. I just want to take a look at this.
54:55 - I don't want to factor it. Look at that. And SymPy also does the nice display on the output, too.
55:04 - So you see, there was a common factor of two. And that worked. Now, supposing I had this,
55:11 - and let's say this is three, which then doesn't factor at all. So when I run it,
55:18 - you know, it will just output that because it's not factorable. All right. Now, what's really
55:25 - interesting is if I have something else, like x squared, and let's say x squared minus four. Now,
55:43 - you may or may not be familiar with that factoring, but I can factor something like that, too.
55:48 - I look at that. It'll factor that out. That's the correct factoring of that, x minus two, x plus two.
55:54 - So it will do a lot of really interesting factoring for you. So pretty good. Here's another one that
56:05 - we can, you know, just to show you that we can even take it to the next level.
56:09 - X to the third minus two x squared minus five x plus six. So we have that. And if I factor that,
56:19 - there we go. Look at that. It breaks it down into these factors. So some of these really good things,
56:27 - you know, knowing that you can set your factoring, you know, you know, you can set your
56:37 - factoring, you can make your own factoring calculator here. All right. So let's take a look
56:45 - at some of the functions here. So when we have, you know, we have that, we can factor. And then
56:53 - you've been doing some of this practice with these functions. So I want to show you, you know,
56:59 - you know, looking at these and this different input, how we can, how these functions are working that,
57:07 - you know, remember you were doing the practicing the one step functions,
57:13 - the one step addition, one step multiply. There we go. Now, that first one I want to show you
57:22 - is because you can't do string to a fraction. This print, this works out just fine. But when
57:31 - we take this input, now other inputs, if it's actually a number or a decimal, you can do this
57:38 - and you can cast it as a float. So that's a number that could include a decimal. But if you know that
57:44 - it's going to be a fraction, this float won't work because that slash for the fraction doesn't
57:52 - parse nicely. So then this will give an error. Now, just because it says fraction here, that's
57:58 - just a display. If I just disobeyed that and put in a number, then it wouldn't give me an error.
58:04 - But if I, as soon as they use that divided by, I need that. So that's our first function here
58:10 - is how do I convert the string input, including fractions to a float? So this is the way Python
58:19 - functions work. I'm going to use this DEF to define it. And then once I define that function,
58:28 - I give it the name of the function. I need the open and closed parentheses. And this particular
58:33 - and this particular one will also have input. So I define this variable in the parentheses.
58:40 - That's going to be the input and then colon at the end. So once I define that,
58:47 - then everything under this is indented for spaces. Yep. And I recommend don't use tabs,
58:56 - use indentations. So then I have an if statement and if, and then here's the condition. If this
59:05 - is true, colon, and then that's indented for spaces. Okay. So I take this input string
59:15 - and I'm testing to see if this fraction bar is in there. And notice if this exact character in,
59:25 - in string, cause that's what I called it. That's my input. If it's in there, then we have this split.
59:35 - Each string has this split function. So you can split it and say, all right, at this point,
59:45 - I'm going to split it. And then that creates two different arrays. Now this was all based on string
59:51 - input. So it's going to be two string arrays or two or one array with two elements. And so it's
59:58 - going to be ND. I call that for numerator denominator. So then ND zero is going to be
60:06 - everything before that. And ND one is going to be everything after that. So if this was a fraction,
60:15 - if somebody put a fraction in there, then ND zero, everything before that would be the numerator.
60:22 - So I'll cast it as a float, store it as N for the numerator. And then ND one is everything after
60:30 - that. So I will cast it as a float, store it as D for denominator. And now see, we had to split,
60:38 - we had to detect that split that string. And then each of these two elements individually, cast
60:46 - them as float numbers. And now these are numbers N and D. And now I can actually do that division
60:55 - N divided by D. So you see, because that slash doesn't work for for parsing numbers, I have to
61:04 - like work around it. And now I have ANS as this answer. And then I have the return statement. So
61:13 - this, this function doesn't have a print statement, just returns this. And we'll see where how that
61:18 - comes up. But it just, you know, wherever this function is, it'll out, it'll put that answer.
61:24 - So that's if it has that. And if it doesn't, because I want to be able, I want to use this
61:30 - either way. So anything else, colon, indent, then I won't have a problem. So I'll just take that
61:38 - in string cast as a float. That works. So anything else you put in, we're good. And then again,
61:46 - return ANS. Now, where this comes in, I'll come back to that one, is in the one step multiply.
61:58 - So here's this function, one step more. And I put this common in here, to remind myself or anybody
62:05 - else using this, that it uses this function. So we need to make sure that it's in the same place.
62:12 - All right, so here's, here's the idea to generate, you know, some practice problems for you import
62:18 - random. And then here, I'm going to get random dot Rand int from one to 11. So that's going to be
62:26 - a random integer, and I'll store it as variable A. So that's going to be a random integer,
62:34 - including one, but not including 11. So one could show up, 10 could show up, but 11 won't.
62:40 - So that's, that's the way the random integer works. It includes the first one, but not the last.
62:44 - And then B, I just wanted to make this two to 24. So given these two random integers,
62:53 - notice what we're going to print here. So AX equals B. So we see it's always going to be something
63:03 - times X. And I just want to display this. So I didn't need to worry about the Python syntax with
63:09 - to show the multiplying. All right, so AX equals B. And then you would know, what do you want to do?
63:16 - You want to divide both sides by A. So you know that, and we're going to take your answer, input,
63:26 - you know, X equals, and whatever your input is, we'll store it as ants in.
63:34 - And then the actual answer at this point is going to be, we know divide both sides by A,
63:40 - so the actual answer is going to be B divided by A. So then this was the actual input, notice,
63:50 - still a string. And that's where we're going to use that in our function that we created earlier,
63:58 - string frack. So see, it's going to take that answer, run it through that function,
64:05 - run it through that function, and return right here, that answer.
64:13 - So that way we can easily compare it because this function will return that answer, and then
64:19 - the double equal sign to compare, and we're going to compare it to the actual answer.
64:24 - So there we go. So that's the return statement, wherever I don't have to
64:28 - print or output anything, it just returns that value right here where I have the function.
64:32 - And if it's, if it is good, we're going to print correct. If not, try again,
64:38 - but then print out the answer. So there we go. And now it'll loop through this. Well, this will do
64:44 - it once, and then, you know, we can create a loop to have as many of these as you want,
64:49 - practice one-step equations. So there we go, and then test them each time.
64:56 - And then test them each time. So, you know, we have the simplest one-step addition,
65:07 - is another very similar one. There we go, import random, display the problem,
65:14 - random integers, and yes, you can go through negative numbers if you want.
65:18 - All right. And what are we printing out here? X plus A equals B, because then
65:26 - you know that to solve for X, subtract A. So we'll take your input. What do you think X equals?
65:38 - But also we're going to calculate exactly B minus A. What is it really? And then down here,
65:44 - we don't need to do anything else. We just say, if A and S equals answer. There we go.
65:51 - And here, see, we can cast the float, cast the input as a float right away, because we're not
65:56 - expecting anything fancy. You see the other one, knowing that I'm going to divide, you know, I need
66:05 - to address all the other things that could come up. And there we go. If it's correct, there we go.
66:12 - If not, and then we print out the answer. Cool. So some different things you can do, and you know,
66:18 - one-step addition with negative numbers, just we just did in a slightly different way. So here's
66:25 - a bunch of things that we can do, just practicing your own ability to solve. But we'll also get
66:35 - more into some other functions later, but, you know, good to see these functions. But yeah,
66:42 - yeah, here we go. Just some of the things you can do, factor or solve. So these are the things
66:52 - that you want to be able to do and, you know, set up, you know, start again, start building your own,
66:59 - your own CoLab notebook. So by now, you might have some things that, you know, solve for proportions.
67:06 - You might have some things to, you know, solve for X and, you know, maybe you can even copy one of
67:13 - those, you know, convert fraction input to something, you know, feel free to, you know, copy,
67:18 - copy these, tweak them, make use of them on your own. And, you know, you see you're building your
67:24 - library as well as really understanding the code as you're building this. And, you know, hopefully
67:31 - your understanding of the math, understanding of the code gets deeper and deeper as we, as we go on
67:36 - here. All right, so I think we're ready to go on to the next unit. So let's talk about fractions and
67:48 - decimals and how to convert from one to the other. Well, fractions, when I say out of, like this
67:57 - could be one out of 10. If I say out of, that means divide. So any fraction numerator divided by
68:03 - denominator, you can do that on your calculator and it most likely is going to return at your
68:10 - decimal. There you go. So fractions, decimals, you know, pretty easy. Calculator, do the decimal,
68:16 - you know, pretty easy. Calculator, do the division and then, you know, you have your decimal. But
68:23 - what about doing it in the reverse process? So when we look at this, this, I would read each of these
68:29 - one out of 10, I could call it one tenth or 0.1 is what you would get if you did that division.
68:37 - I would still call that one tenth because that first decimal place is the tenths. So that would
68:43 - be one tenth. Or then if I had one out of a hundred, then there we go, two decimal places.
68:50 - So tenths, the second one, the hundredths. So whether I write it like this or like this,
68:56 - I would still call it one hundredth with the th. Then, you know, I just wrote it one more,
69:02 - you know, third decimal is would be thousandths. So, and it would keep on going. So knowing that
69:08 - we have that, you know, tenths, hundredths, thousandths, then that would be our denominator
69:15 - if we want to convert it back the other way. So if I would, if I had something that I would,
69:26 - you know, 0.234, so something that I wanted to convert, then I would take this as tenths,
69:36 - hundredths, thousandths. That's where it ends. So then I could make that 234 out of a thousand.
69:47 - And I could reduce that, but that still is the fraction that I'm looking for. So 234 out of a
69:56 - thousand. Or if I had something, you know, like 0.4 one place, that's one tenth. So that would be
70:04 - four out of ten. And again, I could reduce it or I could leave it as that, you know,
70:10 - that that's converting my decimal right to a fraction. And when we get into the code,
70:15 - we're going to look at how to see here. I'm just looking at this and remembering these tenths,
70:22 - hundredths, thousandths, et cetera. It could keep going. You could convert any decimal,
70:26 - but I'm looking at these remembering the place values and then saying, oh, that's three. So I'll
70:31 - have ten with one followed by three zeros, you know, one decimal place. So my denominator is
70:38 - one followed by one zero. And we get into the code, we're going to look at how to do that
70:43 - in a different way rather than just, well, there's a few ways you can like take it as a string and
70:47 - count how many places, or we're going to, you know, one of the lessons we're looking at the
70:54 - logarithm way, probably the string and just counting it, that's probably a little more
70:58 - straightforward. We'll do that one. But there we go. Converting these, you know, how do I get this
71:06 - and then, you know, how do I reduce it? Okay. So we think we have it all worked out, but what about
71:14 - if I have a repeating decimal? So supposing I have 0.3333 and it keeps repeating.
71:22 - And mathematically, if I was writing this, you put the line over one of the, the part that repeats.
71:29 - So I really could just keep it as one, but I want to show you three repeats, just put it over the
71:34 - three. So that keeps repeating. Okay. So we were just talking about, you know, how many decimal
71:40 - places and then put it over that. But if it keeps repeating, where do I stop? So let's take a look
71:46 - at a trick how to do this. We want to get to the end of the repeating. So if it only repeats one
71:51 - repeats once, then if I multiply this, let's, let me call this X and actually I'm going to write
71:58 - this down a little bit further. This is, that's going to make sense in a second here. So if I say
72:04 - X is my 0.3333 repeating. All right. So if that's my value, I only need to multiply it by 10 to move
72:16 - the decimal place once. And then that cancel out. So if I have 10 X, then that's 3.3333, et cetera.
72:28 - And these keep repeating. Now, the reason I do that is because of all the repeating decimals,
72:35 - everything that repeats now is going to line up. And so if I subtract these,
72:40 - what can I do on the left? 10 X minus X is nine X equal sign still there. And three point, all this
72:50 - minus zero point, all this that cancels all this, however many decimal places you want to go,
72:54 - it all cancels and my answer's three. And then one step of algebra, solve for X divide both sides by
73:01 - nine. So I get X equals three over nine because nine divided by nine is one. So that's one X,
73:10 - three divided by nine. And I could reduce that as one third if I wanted to. Now keeping it as three
73:18 - over nine, you know, that's nice, like bonus math insight. If I have a single number that repeats,
73:24 - it's that number over nine. That's the fraction. So if I had four over nine,
73:29 - if I had four, if I had, you know, very similar type, type of question, but if I had
73:38 - something like, uh, if I had zero point four repeating, so then 10 times that would be four
73:46 - point or four, et cetera. They both keep repeating. Do the same subtraction. 10 minus one is nine X.
73:55 - And when I subtract these, all the repeating decimals cancel. So four point this minus point
74:01 - four is exactly four. And when I divide both sides by nine, X equals four over nine.
74:10 - So there we go. And, uh, so one more bonus here. If I had nine repeating,
74:19 - we could do the same thing. And you would think 0.999. That's not exactly one. And well later on
74:30 - in calculus, we can look at limits and how 0.9 repeating. If it keeps on going for all practical
74:36 - purposes, that is one. But if we did this, it would be nine's repeating and we divide by nine
74:42 - and you get X equals one. So it kind of works out nicely, but this is, this is how we can do this.
74:49 - You know, notice we're not looking at code here. Now we're just taking this. And, um, if we have
74:55 - something that repeats, then that's what we need to do. We need to find out where it repeats. If I
75:01 - had something that repeated, um, you know, three, two, two places over and over again, uh, let's do
75:08 - that one. And just to give you an idea of a different way, if I have something that repeats,
75:15 - then if I have, uh, so X equals, uh, 0.090909, something like that, and it's the zero nine that
75:29 - it's the zero nine that repeats. So I need to multiply it by a hundred to line it up. So 100
75:39 - X because that would move the decimal place twice and that makes it 9.090909, et cetera.
75:50 - So when I do that now, same method, if I subtract these, that's 99 X equals nine because then that
76:01 - cancels. So then X equals 99, uh, nine over 99 and fine, perfectly acceptable answer, but we can
76:13 - reduce this divided by nine. So that's one out of 11. We'll get into reducing fractions and also the
76:20 - code for that too, but you see, this is, this is one way. If you have something that repeats and
76:26 - maybe you're right the way you write the code, it might seem to break it. If, if you don't, uh, if
76:33 - you don't find some way around it, this is the way around it. So we can convert any repeating
76:38 - decimal, but now we're going to, what we're going to do is we're going to get into the code and how
76:43 - to take any decimal. Just here's the decimal input. How can I find a way to count how many spaces that
76:50 - is and reframe that as a fraction so that given the decimal and then turn it into a fraction
76:57 - related to that is percents because remember the first is 10th hundredth. So the first two digits
77:05 - are the hundredths and that's really what percent means out of a hundred. So percent is all the same
77:12 - thing. And then just, I'm always looking at the first two decimal places. That's my percent.
77:17 - So, you know, very similar, but just the first two decimal places. So let's take a look at the code
77:22 - and we'll see how to convert any decimal to a fraction. All right. So let's talk about how to
77:30 - convert decimals to fractions with code. And first we'll get some background here because this is
77:37 - going to be useful. So if I have 10 two different exponents, let's take a look at the positive
77:43 - exponents. So 10 to the first power, we see this first one, 10 to the first power, 10 to the second,
77:51 - 10 to the third. We'll see these come up. What happens when we take 10 to a positive exponent,
77:57 - 10 or anything else to the zero exponent, and then we'll take a look at 10 to the negative one
78:03 - or negative two or negative three. So this will just print these out, but let's take a look at
78:09 - what this does. So we see 10 to the first, second, or third becomes 10, 100, 1,000, 10 or anything
78:19 - to the zero is 1. And then the negative exponents are how many decimal places? 0.1, 0.01, 0.001.
78:33 - So these are the things we're looking for and we're going to make use of this as we convert our
78:40 - our decimals to fractions. So the next thing, we'll take a look at how to get user input.
78:50 - And we have this formula here, user input, open parentheses, and in quotes here, this is what it
78:58 - will display. And then you'll see then a box, you know, then asking for input. And then here we're
79:04 - going to store that as text as that's the variable. For our purposes here, we're just going to show
79:11 - you that you can enter a number and we're going to print it out. I call the variable text just
79:17 - to remind you it comes in as a string. We can't do any math with it yet. But one of the things I can
79:22 - do, any string, I can figure out the length of that string. So we're just going to print that out.
79:29 - And I just have, again, this comment here, if I tried to do math with it, then there would be an
79:34 - error. So let's take a look. So you see, enter a number. And then if I had a number with a decimal,
79:41 - like 0.123, I hit enter. You see 0.123, the length of it is four, because as a string,
79:52 - these are four characters, the decimal point counts as one character. So different things I can do
80:00 - with this. So I, you know, if I wanted to enter a number, now, if I have, if I cast it as a float,
80:12 - now I can do math to it. And I can cast it as a float or an int for integer. So just keeping in
80:21 - mind, you know, things I might want to do with this, a float can have decimal places. So that's
80:26 - usually my default cast. But, you know, if you definitely know that you want it to be an integer,
80:32 - we would use that. But we're going to enter a number, cast it as a float and store it as
80:37 - the variable number num. Now I can do math to it. I'm going to print out num plus four. So we'll see.
80:44 - There we go. If I enter a number, there we go. And if I have 0.123, then hit enter. You see now I can,
80:55 - now I can add. All right, or whatever other math operation you want. Once you cast as a float or
81:03 - an int, then you can do math to it. And the float, because it can handle decimal, any math
81:09 - operation that there might be a chance of a decimal use float. Okay, so we're going to put all this
81:15 - together. So converting this input, which will come in as a decimal. So I'm going to take this input
81:28 - and here's what I'm going to print out. Enter a decimal number to convert. There we go. So we know
81:34 - that that's input and that's going to be stored as digits. And we know that that's a decimal.
81:38 - And we know that that's going to be a string. So to get the number of decimal places, the next thing.
81:45 - So I'm going to use this, the length of that input digits, and I'm going to cast it as an integer
81:54 - first. So notice that happens first. Then I'm going to subtract one, because remember as a string,
82:03 - that decimal point is going to count when I do the length of that string. So I want to subtract one
82:09 - because I don't want that decimal. So now whatever decimal enter minus the decimal point itself,
82:15 - that's going to be an integer that's going to be the exponent. And now here I go back to digits
82:23 - that is still a string. Now I'm going to cast that exactly as a float number. I'll store that as n.
82:34 - So now I know how many decimal places it took to make that and the number itself is a float.
82:41 - So let's talk about our fraction. My numerator is going to be n times 10 to a certain exponent,
82:54 - 10 to that exponent. So in my previous example, point one, two, three, then it's going to be,
83:02 - you know, that was four, the length of that was four, so minus one, so the one, two, three becomes
83:12 - my exponent. And then when I multiply it by that exponent, it makes it a whole number. And since I
83:19 - know it's going to be a whole number, I will cast it as an integer. So that's going to be my
83:23 - numerator. And then the denominator is going to be 10 times that exponent. So you see that that is
83:30 - what we were doing before we were doing the code. You know, how many digits, how many decimal places,
83:36 - and then, you know, my numerator is that times 10 to that many des- 10 to that exponent, and the
83:44 - denominator is just 10 to that exponent. So three decimal places would be that times 10 to the third,
83:53 - and then the numerator denominator would be 10 to the third, and it gets you that decimal place.
83:57 - Now, that's numerator and denominator for any fraction. Percent is just the first two decimal
84:02 - places. So whatever n is, I'm going to multiply it by 100, because then that just gets the percent.
84:11 - That decimal, move it over tw- move decimal place twice, which is multiplying by 100. So now we'll
84:19 - see the output, the decimal. There we go. We just repeat the decimal again. The fraction, numerator,
84:26 - and I'm just going to print this out to show you it's numerator over denominator, and then the
84:31 - percent, and then I'll print out the percent symbol. There we go. This, remember, in math means
84:37 - something else, but here I'm putting it in quotes. It'll just be the percent symbol. So we're going
84:43 - to enter a decimal number to convert, and there we go. Point, uh, one, two, five, enter. There we go.
84:54 - The decimal, point, one, two, five, and then the fraction is 125 out of a thousand. That's correct,
85:00 - and the percent's 12.5. And we can run this again and do this for however many decimals we want.
85:06 - Um, you know, point two, enter. So it's point two, two out of 10, or 20 percent.
85:16 - And there we go. The same things we were doing, and this is what we want to get,
85:20 - look at throughout this course. You know, the steps that we're doing in math, we can break
85:27 - this down, and we're pretty much doing the same steps, but then now once we have this written in
85:34 - code, then, you know, you have a formula that you can reuse. Okay, I'll bring up this, bring up the
85:40 - script here, and I'll be able to convert any decimal to a fraction. There we go.
85:51 - Now that we've worked through the core skills in this unit, let's look through some extra problems,
85:56 - and I'm going to work through extra problems using the Colab notebook, so you can see how you can
86:02 - apply these resources that you're building, and use these to solve some of the problems that we
86:09 - have, problems that might come up in a textbook or in day-to-day life. So we're going to go through
86:15 - some more extra problems here. So now I want to show you how to put together your own calculator.
86:22 - You know, this is what we're talking about here. You're making resources for yourself. So in all
86:27 - the things that I'm showing you, and you'll have access to all these different, uh, resources here,
86:33 - but you're going to put together yours. So you're going to click on new, and you would have already
86:38 - the Google Colab, so go over to Google Colaboratory, click on it, and now this is going to be yours,
86:48 - so actually I will call it that. I'm going to put the underscore, it accepts spaces though,
86:56 - your calculator, and you just hit enter or click somewhere else, and there we go. So this is what
87:06 - you can do to put together your calculator based on things that we've been doing so far,
87:12 - and then things that we do further on in the class, then you can add to it. So you can go through and
87:20 - go to, let's say, the week one notebook where you solve for proportions,
87:24 - and here's some things you can do. So if you click on this text here to set up the proportion,
87:32 - let's copy that first. So you click on that text and go all the way over the three dots.
87:37 - This looks like copy, but it actually doesn't do what you're expecting it to do.
87:42 - Click on the three dots, copy that cell, and when you go back to your calculator,
87:49 - I'm just going to click in the open space here and paste it, Ctrl V or Command V. Actually,
88:01 - it's kind of cool. So, you know, Ctrl V for the Windows, Command V for Mac, and CoLab accepts
88:07 - either one, and then we can go back. That's your proportion set up there, and let's copy this again
88:17 - over all the way over the three dots, copy cell, and your calculator, and we're going to paste it.
88:28 - So you can have this, you know, we don't need this. If you have an extra one, that one,
88:35 - the trash can over there. So there we go. Now you have your text set up proportion,
88:41 - and then it really is then self-explanatory. You know, you see the setup and put in N1, D1,
88:49 - N2, D2, and even the comment there, put the zero in for the unknown value. So you can go through
88:56 - each of these. Then if we look at week two, now we were doing a lot of things for solving for X,
89:04 - and maybe you don't need to do the simplest one. Maybe you like the prompting. You can include
89:11 - that. Doing more with the solution, how we split it up. Now, I personally, I like this one, so that
89:19 - might be the one that I copy as one of them. And what you can do is, you know, click on here,
89:27 - because notice this one, I personally like this one. It prompts for the input, already showing
89:35 - that it's something equal to zero. You know, there we go. We already have X as the symbol, and then
89:43 - this also prints out multiple solutions if you have them. So this is nice. We can copy this.
89:51 - And when you go back into yours, now if I just paste this, that's great. I actually don't need that.
89:59 - And notice it didn't paste where I wanted it to be. So watch what we can do here. I'm going to click
90:03 - in here and use these arrows. I'm going to move it down, and actually down one is just fine.
90:10 - Now, we wanted some text in there. So right above it, you hover there, add text, and
90:18 - solve for X. Maybe I'll just add that text there. So there's more from that week. So we have that.
90:31 - That's nice. Now, this solve in other ways, that was pretty good. And then notice there's also
90:40 - factoring. So you could include something like this, solve in other ways, or factor,
90:52 - you know, simpy.factor. Now, I might include this because you'll see we'll come back to
90:58 - the one of the other ones. So if we copy this, and this is just factoring, we can actually
91:08 - do this. And this is just factor when there's, you know, nothing else to solve. You see, so maybe
91:16 - we'll copy this cell, and paste this down here. Now, maybe I'm going to add text and just put
91:26 - factor. And down here, then I will paste it. Didn't show up where I wanted to. I can use the
91:39 - arrow, move it down. So, you know, there we go. We have set equation equal to zero ready to solve.
91:47 - But we can even make this, you know, equation to factor. And see, you can put this however you
91:58 - want. There we go. And then, you know, you can factor things. So we have these. We can go into
92:13 - the next week. Now, notice to put it all together, because when we went through and looked at some
92:21 - of these leading up to converting a decimal to a fraction. So this was putting it all together.
92:31 - You're prompting the person to enter in this, and then we're going to convert that output, the
92:37 - decimal, the fraction, the percent. So that's nice. Maybe we copy this. And the factoring we'll get
92:48 - back to. So then we go down to here. Maybe I'll paste that here. And that's good. So we just want
93:00 - some text ahead of it. Decimal to fraction. So you see now you're putting together your resources
93:19 - here. And we don't need that output right now. Now, we have one more here. Factoring and solving
93:30 - for a variable. And notice it's when I paste this, I might put it with the other one. But we see,
93:41 - remember we did this, then you have the left side, which could be equal to zero, and the right side
93:48 - of the equation, which could be anything. You know, this would be about the only thing that
93:54 - you would need to change here. Change the variable you want to solve for. And I put all these as
94:02 - your basic common variables that you would use, but you know, you could always change that too
94:08 - if you want, but you might not need to change that line. And then this one will solve it,
94:14 - even if it is something that you can just, you know, solve for a variable.
94:21 - It doesn't come down to an exact number here. So that might be a nice one. And then we keep this
94:27 - example in here. You know, copy this. Now, we might put this in here with factor solve for x,
94:41 - factor solve for x, and factor solve for a variable. Maybe we put it in here somewhere.
94:51 - And notice you can just click and add code. I'll click right in here and paste it.
95:00 - And this will be pretty much right where I want it to be. Then I might delete this,
95:07 - add some text, solve for a variable.
95:18 - Now, these are just some examples here of how you could put this together.
95:23 - So that then you have your resource here, proportion. There we go. Solve for x, factor,
95:32 - solve for a variable, convert decimal to fraction to percent. And then things that we do later on,
95:42 - you could add more into this here. Now, supposing you want you you want it to put a lot here and
95:48 - then you add all this, that's this is a lot of scrolling. So one of the things you can do is,
95:54 - is now I'm going to start with proportion. I like so right around here, you could there's
96:06 - there's multiple ways to do this. You could insert, you go up top, insert
96:13 - a section header cell. So I'll do it one way this way. I'll do insert section header cell.
96:19 - And actually, I want that above. So I noticed this, when you double click on this, you see
96:31 - some of this. These text boxes accept HTML, look at that the br to split the split the line,
96:40 - and they accept latex, which is how to format various things fractions, formulas,
96:48 - all kinds of things. So in this new section, and you see, because it's in this text part,
96:59 - that's not a comment in Python, it's the new section. And I might just make this proportions.
97:04 - Okay, so now, you see, it takes that and all these cells become a part of that section.
97:22 - I don't want that. But what I want to do is, if this next one, I want to make this
97:30 - this section, and I don't need another one, I think that'll be the section header.
97:37 - There we go. So I'm just going to put this here. Now that's a new section.
97:46 - So we see proportions now just has the two cells, the text about setting it up, and then the code.
97:53 - And solve for x has just one cell because that section said it all. And then we have the code.
98:04 - There we go factor. And maybe you want to say something more than just factor,
98:10 - but you can make this a section heading. Solve for a variable. There we go. And in seeing all this
98:21 - this together. So you see solve for a variable.
98:28 - Convert decimal to fraction. You know, that probably I didn't need anything else here,
98:32 - solve for a variable. All the rest was explained in the comments.
98:40 - And convert decimal to fraction.
98:42 - So now this just has the one cell. And the advantage of doing this is, over here,
98:50 - you see these lines. Now we have the table of contents here.
98:57 - There we go. And I could change, you know, that's long enough. I don't like it when it goes on to
99:01 - two lines, but that fits so that it's a longer title, but that's okay. And you can have your
99:07 - table of contents that you can actually go through. And you see jump to proportions. Jump to solve for
99:15 - x. You know, different things. And in the view, you could change the view to collapse sections.
99:24 - You don't have to, but you could. And then you see you have all these.
99:28 - So these are some things you can do in putting together your Google code like this.
99:35 - Putting together your Google CoLab notebook. You know, I want this to be your calculator
99:42 - that you're building. So then you're learning how to do all this, but then you also are building
99:47 - your resources here that you can then refer to. Oh, what do I need to do? Click on it.
99:55 - Enter what I need to enter and solve it. You know, you're essentially making your menu here.
99:59 - So that's what I want you to do for this unit, is take a look at what we've been doing so far
100:08 - and put it together in your own notebook. Some of the things we'll do later will even get fancier
100:13 - and we'll, you know, make some of these into functions that you can use in different places.
100:19 - But this would be a good place. Put together your notebook of resources. Here's one way to do it,
100:24 - but you know, you can tweak it to the way you like it. All right. And now we're ready to learn the next thing.
100:36 - So what does it mean to be a function? A function means it in math and in code that you're taking
100:43 - some input and then doing something to it. And actually there are some functions in code you
100:49 - don't have to take input, but in math we will. So like we were talking about our unknown number
100:55 - being X, the output will be Y. So each function we want to take X as the input and then we're going
101:03 - to say that the output is Y. And here we're dealing with all numbers. What am I doing to X
101:09 - and then outputting Y. So you see we have like solving for X we were doing before, but now we
101:15 - have a second variable and we still want the idea that just like in the alphabet X comes before Y
101:21 - in science and in research, we can call X the independent variable because that's what changes
101:27 - first. And then Y is the dependent variable because it depends on what X does. So if I
101:36 - want to solve this or do anything to it, then I'm going to plug in a value for X
101:41 - and I can pick any value. I might start with zero. So I'm going to define it over here. My input X
101:49 - is zero. And then what happens when I plug that in? So that'd be Y equals two times zero plus three.
101:59 - And you see I'll just put in zero in parentheses where I plug in this number because
102:07 - it highlights that that's what I just plugged in. And also the fact that they're next to each other
102:11 - I'm still multiplying. So when we do this two times zero zero plus three, then that would be Y equals
102:17 - three and my output is Y. And if you remember then that's an XY coordinate on the graph. X is zero,
102:29 - Y is three and I'd be able to plot that point and I can keep going. What other points can I,
102:35 - what other numbers can I plug in? I'm even just going to keep this. So supposing I have X equals
102:43 - X equals one. Plug in one. Two times one is two plus three is five. Y equals five.
102:54 - And then we'll plug that in and I can plug in as many or as few. I don't have to have
102:58 - integers. I tend to do that so you can see the numbers a little bit clearer.
103:02 - But you know you don't have to worry about doing any other calculations in your head.
103:07 - But if I have this I can put in whatever numbers I want as many or as few. I can put decimal
103:12 - numbers in there and we can plot these on the graph which we'll talk about a little bit later.
103:18 - But this is the essence of a function that X comes before Y. I plug in an X value and then
103:24 - output the Y value. So another function notation that a lot of people like is instead of using
103:34 - another variable Y and this connects a lot with the way the code's going to look. We call it
103:42 - F of X and F for function. So two X plus three. So if you see these, these are the same thing.
103:50 - Y equals two X plus three or F of X equals two X plus three. This notation F of X and that's
103:56 - what we read F of X, F for function. We solve it the same and this connects a lot more with
104:07 - your computer science. So if I have the output called F of X, one of the advantages when we get
104:13 - into writing the code is that in algebra we tend to just say F for function. But in writing Python
104:21 - or other code you can actually give your function a name and it doesn't have to just be F for
104:26 - function. It can be add, divide, calculate the area, something really even a long phrase like that as
104:36 - long as there's no spaces. So if we have this and then sometimes then let's say if I wanted to plug
104:42 - into two I could write in F of two. And so again the usefulness of this notation is because I see
104:51 - what what am I already defining as my input and then I know what am I doing next. I'm going to do
104:57 - two times two plus three. Two times two is four plus three is seven. So F of two is seven. So now
105:08 - I know that answer and when I see that X is two, Y is seven. And we'll see how this you know really
105:18 - relates to the code and how we can write even a little bit more elaborate functions with code
105:24 - and how we can define the input there. Then we'll look at graphing it. All right so let's take a
105:30 - look at the code. So with the code and functions we can do very similar to what we would be doing
105:37 - by hand writing out the math. Here I'm just going to define one X value as an example and here is
105:44 - the function that Y value. Y equals four times X plus three. And you see Python syntax have to
105:50 - make sure we put the times. So I'm just going to plug in that Y X value become you know substitutes
105:58 - in for this X value. So it's four times five plus three and then I'm just going to print out
106:03 - my solution X comma Y. So we see that and before I print that out. So that's one thing one X value
106:13 - but I can loop this. So I'm going to print out this line here which is X and then I'm going to put a
106:22 - tab Y. So that's defining my columns here X and Y. And then what I'm going to do is loop through
106:29 - all those values. So for X in range 11 so X is going to go 0 through 10. And then I'm going to
106:36 - take that same function and each time then I'm going to plug in that X value solve for Y and
106:44 - I'm going to print out the X Y values. And in this case again I'm going to put the tab in between.
106:50 - So this is the essence of what we're doing with a function. Each time I get an X value plug it in
106:56 - solve for Y and then I have an X Y value and this is going to print this out as a table.
107:01 - So when I run this we'll see it'll come out first of all we'll have that that one solution
107:09 - you see five twenty three five comma twenty three that first solution and then we have our table X
107:14 - Y and all of our X Y values if X is zero Y is three if X is one Y is seven etc. And we also have
107:23 - five twenty three that shows up on the list too. So that's defining a function. Now Python has a
107:31 - lot of other functions beyond math you can do things with and we can still use that same type
107:37 - of Python function definition for our math. Here we can on this line define the function. So D E F
107:45 - space and Python I can name my function anything but I'm going to use the classic math notation
107:52 - F of X and then here I have a colon. So this is going to define the function everything underneath
107:59 - is indented four spaces and I have Y equals my four times X plus three. That's the function
108:10 - and what am I going to do then I'll return the Y value. So whenever I run this that'll return the
108:18 - Y value. So you see this in use if I print here if I print five so I already know I want that to be
108:26 - my X value comma and then I'm going to call this function right here F of five and it's going to
108:33 - take that and run it through there we go. Same type of thing same type of thing then we'll
108:40 - define this and when we run this it's just going to print that 523 and next we could put this in a
108:49 - loop I could just take the same loop here and I'm going to copy this and I can just take that same
108:59 - loop if I wanted to and in this case I'm going to print because I already have that function
109:08 - defined I don't need this and I could really just put put that here F of X you see so I could
109:22 - I could just have right here since I defined that function X F of X and I don't have my headings
109:31 - and I don't have my headings here but I think we can use our imaginations there we go so printed that
109:38 - one value but then in the loop just went through and looped so these are the ways that we can
109:46 - illustrate a function in code and you know what we can do with these functions you know is
109:54 - almost limitless you know you can have a function do anything and you can name it anything more
109:59 - more complex than this you know give it a word but I wanted to show you the connection with the
110:04 - classic math notation and functions in Python whether I actually just call it y equals that
110:10 - that still works as a function or whether I define it and next we're going to look at graphing functions
110:21 - so now when we talk about graphing functions we'll use this equation y equals two x plus three
110:27 - and I'll use the x and y notation so we have our input and output you know all the different x
110:34 - values and what y values match up so if you ever come across something like something like this
110:41 - you can see that if I plug in both of these x and y that should make the statement true and so we
110:48 - have a few of our points here and then now we're going to see how that matches up with the Cartesian
110:54 - plane our x y coordinate plane it's Cartesian because Rene Descartes invented this so we have
111:03 - zero zero at the center and how much I count for x positive to the right negative to the left and
111:12 - it comes first like x comes first in the alphabet then my y value positive up negative down and
111:20 - and my coordinate pair would be my x y so this zero three would be
111:30 - zero so I'm not going left or right at all up to three plot the point now I don't also need to
111:37 - write this but I'll show you so then that would be the point zero three so x y and then one five
111:45 - so I would go over one up five plot the point and then that's one five two seven plot the point
111:55 - now I just plotted three points but I'll tell you if you really wanted to try many in between points
112:03 - decimals or other numbers that are in between you could bet that each of these whatever you know
112:12 - one point something two point something they would all end up being on this line it's continuous
112:21 - there's no x value that can't go into this well whatever weird fraction or decimal you know mixed
112:29 - number anything so all the numbers would be on this line so with this type of function we're
112:37 - going to call it linear and we'll get into other types of functions but that's where we plot a few
112:42 - points and then we want to look at these patterns what type of graph does this end up looking like
112:49 - so what we're going to do now is look at in the python code how to create a graph and plot points
112:56 - to make a basic blank graph we're going to import this library matplotlib.pyplot and that's a lot so
113:07 - we're going to we can import this as plt so I can reference this whole library as plt from here on
113:14 - out and here's what we're going to do the first line is these are standard variables that we use
113:21 - fig for the figure axe for the axis so these two variables and that equals plt.subplots
113:30 - and then that sets this up and we'll do plt.show the base there you go import set this up and then
113:39 - show and then that gives a basic graph these are all the defaults nothing else going on there
113:46 - and you know we have this set up so we're going to build upon that now let's define the dimensions
113:54 - here notice that was all just the first quadrant everything's positive and even only one goes in
113:59 - positive and even only one goes up to one so again import matplot library plot we set that same two
114:09 - first lines but now let's take a look at these dimensions now I have that plt so it's plt.axis
114:17 - and I'm going to set this axis all right and it gives you the range of x values and y values I'm
114:26 - going to show a better way in a second but you can do this on one line here's the dimensions and now
114:31 - when we show it I want it to go from negative 10 we see across the bottom the x-axis negative 10
114:41 - up to 10 zero in the middle and on the y-axis negative 10 up to 10 zero in the middle that's
114:48 - great but I have no lines I have no axis and you know not the clearest so here's first of all
114:57 - here's a better way to set the dimensions is I'll define them right at the beginning
115:02 - as variables x min x max y min y max and that way all right I want it 10 in every direction
115:10 - and I can set them here easy to see it and change it if I want to and now when I do all this this is
115:17 - really what I'm doing when I set the axis size x min x max y min y max that's really the arguments
115:26 - that it's taking and it becomes a lot clearer when we set it up like this so then I have this and
115:34 - I can set this and then if I wanted to I say oh for this one this y value goes really a lot higher
115:41 - so maybe I want that y maximum to be 20 instead of 10 and then when I run it now notice the the
115:51 - size of this still looks the same but it adjusted accordingly and on my y-axis it goes up to 20
115:59 - and on my x-axis negative 10 to 10
116:01 - and so let's display axis lines here if I have my dimensions defined and now when I plot the axis
116:15 - well that's the one we already did here the window size but I'm going to just plot them as lines so
116:21 - this line here I have x min x max as my array of x values see notice it's plt.plot and I have my
116:37 - array of x values and then my array of y values and the default is to make this a line so it won't
116:45 - just plot two x values and two y values it'll draw the line from x min 0 to x max 0 and this b
116:55 - in quotes makes it blue so we're going to do the same thing with the y plt.plot and my x values
117:04 - are going to be 0 at 0 y min 0 y max and then it'll get make that a blue y-axis
117:12 - just because I like blue and there we go so now we have this that will give us our x y-axis
117:27 - so from everything we do now we have an axis we have a point of reference
117:32 - so everything that we plot is going to you know start with this now define the dimensions
117:38 - set all this up we might not even need to change any of this and that's going to give us our graph
117:45 - with an x y-axis all right so how do we plot one point so we see the axis the default is a line
117:54 - and I made it blue b in quotes so how do I plot a point well I make this line here
118:01 - I have an array of one value which is five for the x value one value which is four for the y value
118:10 - and then the r makes it red and the zero makes it a circle actually that's oh so there's some
118:19 - other options you can do you can do a dash you can do different symbols but for right now I'm going
118:25 - to make this a red circle and that's how we make make that circle and that's how we make that
118:31 - here if I have these two and so when I run this it'll still plot those as an axis and then we'll
118:41 - do five four and then that's going to be a red dot all right so if I wanted to plot multiple
118:50 - now connecting with what we were doing with the functions here I'm going to set up my graph
118:59 - and here in rain in my range I'm going to have the range from 10 so I'm going to go from this
119:07 - from this value my y value y equals 0.5 x plus one and in this case instead of making it a table I'm
119:18 - going to do plot plt dot plot and I'm going to plot that x y value as a dot so this range and
119:28 - I'm going to plot these x y values and again that's the essence of graphing a function I have all
119:33 - these different values and when I plot all these points I'm going to see this nice pattern emerge
119:41 - that this all lines up and I'll tell you if I plotted points that were in between whatever
119:48 - x values there would be they would also line up that's why it's a linear function the graph
119:54 - of it's going to be a straight line and then every point on this line every x y value if I plug in
120:00 - this function it's going to work so my loop to graph a function and here then we'll create a loop
120:11 - to do the function and the table so like we were doing before I'm going to build upon this basic
120:19 - graph that I have I'm going to print the x tab y for the heading of the table and then in my loop
120:26 - I'll use the same function here I'm going to plot the point and I'm going to add it to the table
120:33 - and all these it it actually won't plot all the it'll kind of save these points and it won't plot
120:39 - them all it's really just going to add them all to the table and display the table because it
120:44 - really doesn't show the graph until the last thing outside the loop here is going to be plt.show
120:51 - when you have graphs I think Python just likes to have that plt.show last so do your other stuff
120:58 - first and then show the graph so then we have this and we have our table of y values notice if I just
121:07 - put one number in the range it'll do zero to that number but I can have negative five comma ten
121:15 - or I could even just go back to those original values that I defined up here and make this
121:21 - x min x max you see and then but as you know you can put any two numbers in here and it'll
121:29 - do the range between there and you see it just abruptly starts here and abruptly ends here but
121:38 - I could change that to make this x min and I can make this x max but remember I want to graph that
121:53 - last point so I'll do x max plus one and I can have that range and now it'll give the full table
122:05 - of values and it'll graph the full dimensions so there we go we see what we can do with the function
122:17 - I have whatever math function I have plug in different values and see the results see the
122:22 - numerical output see the graphing output and now we see the connection of graph the table and the functions
122:34 - now that we've worked through the core skills in this unit let's look through some extra
122:38 - problems and I'm going to work through extra problems using the codelab notebook so you can
122:44 - see how you can apply these resources that you're building and use these to solve problems that
122:50 - might come up in a textbook or in day-to-day life so we're going to go through some more
122:56 - extra problems here so let's talk about more ways to graph and more things we can do with the graph
123:02 - because we want to be able to display our data our functions so we did look already at how we
123:09 - can loop through inputs you know I can define my graph and we already did this the x min and max
123:17 - y min and max and we talked about how we can loop through I get x in a range and then each time I'm
123:26 - going to plug this in and plot that value and that's the idea of the function that each time I get an
123:34 - x value in this range plug it in for y plug it in here get y and I plot that x y point in this case
123:40 - as a red dot after doing all that then we show the graph but what if we didn't have to do
123:48 - a loop for our input what if we could use an array and we'll revisit this again in other units
123:58 - but we have this numpy array and it's not that long of a word but it just seems to be the
124:05 - convention that we import it as np and so you'll see a lot of examples throughout the internet that
124:12 - np dot this or that so that's what we're going to do and again defining x min x max
124:19 - so given this numpy array here's what we're going to do then given these values I'm going to define
124:26 - how many points I want in my array and in this case it's going to be two times x max minus x
124:35 - min I feel like that's probably enough for our purposes but that number two you can up that to
124:40 - 10 or whatever you want and then we see so then we want to make as many things dependent on
124:48 - these values as we can that way if that changes if I change my window everything else will change
124:55 - accordingly and I don't have to go through and find all these variables so yeah I get the full
125:02 - range times two so that's two points through that you'll see that that's actually going to work out
125:08 - just fine but you can always increase that so now they have any points this is how I define my array
125:13 - of x values and since I really am only using this once I'm going to just call it x because that is
125:19 - my array of x values and so numpy we have np dot linspace so we have this function here which is
125:29 - going to set up our array you know space for linear graphing so it takes the argument where do
125:35 - I start where do I end and how many points do I have so we see we just make all this dependent
125:42 - and then I get my x value so this saves us the time of having to do a loop python will do this
125:50 - for us here's all the graphs and we're going to talk about how to change some of this stuff too
125:55 - in a minute so now I'll just I like to define my x value up there right where I have number of points
126:03 - in the range so I have my y value and for our purposes here we'll just call it you know call
126:11 - it y equals but you can graph multiple things on the same axis and you know you can have y1 y2
126:19 - whatever you'd like so I just define this relatively simple linear function here so then
126:27 - when I plot I'll plot x and y and if you remember before we were plotting x and y each as an array
126:37 - in this case with only one element but here you see I define my x value as an array of x values
126:46 - and therefore y becomes an array of y values so I can just reference these variables x y because
126:55 - they each do represent an array in this case then I decided to make the line red so I put it r in
127:03 - quotes so there we go and when we graph this then we can see I have my graph and yeah that looks
127:15 - about like that would be 2x plus 1 with the red line all right so let's talk about some other
127:23 - things we can customize here now yes r g b work well you know I just had to put b for the blue
127:33 - line r g for green and if I want it to be a black line then I will put k so you see r g b c m y k
127:49 - those all work as you know simplified ways to define the color of the line if you don't
127:55 - put anything python will actually assign a color to each line and it'll cycle through so that if
128:02 - you plot a few lines they each get a different color but if you really say you know okay I
128:07 - want it specifically to be this line for this color you can define this and then other than
128:12 - those major colors you can actually just write in colors then you know there's no one letter
128:23 - abbreviation for pink but if I want my line to be pink I can write in the word and I can't say like
128:30 - every color that will be acceptable here but it's going to be a bunch you know if you want
128:36 - a line of a particular color type it in try it and there we go so we have all these different ways
128:41 - to define the color of line because remember this plot when this plot graphs the default is that
128:49 - it's a line so if I want it to be a point then I would have to define these definitely not as an
128:56 - array but as each an array of one value and then the the letter but then something like oh for a
129:05 - circle or the carrot for a triangle or something like that so or a dash so you know we could define
129:13 - if we just wanted to be a point we'll see that in a second here so there we go so we have our axis
129:18 - and our line but we're you know we're not done customizing it first of all let's take a look at
129:25 - a look at these tick marks you know zero and then every 2.5 maybe I don't want it exactly like that
129:31 - we'll change some of these things and maybe you know this seems kind of blank maybe I want to see
129:37 - the grid lines so here's some other things we can do all right I'm still going to import
129:44 - certainly matplotlibrary but I'm also doing numpy because we use that for some of the things for
129:48 - graphing and same thing I'll define you know the window up here and the x values based on that
129:56 - window so for now I'll keep this you know the same axis I just like blue so we'll keep that
130:05 - now notice when we do up here figure and axis so the labels would be in the axe variable so
130:20 - axe dot set x label axe dot set y label axe dot set title there we go x values y values and some
130:27 - graph and I didn't mean that some graph like whatever I meant more like you know like from
130:33 - charlotte's web or some graph so anyway so we have these and I commented these out we'll get to these
130:44 - later and I have a few other things here so I still have one y value and then I'm going to plot that
130:54 - now notice this I'm going to define this as a label you know it can have a label rather than a color
131:01 - rather than a color but notice no color I can also do a color but since I don't have one we'll see
131:07 - what color python assigns to us and then I decided to plot a point and in this case it's red and see
131:14 - zero red or that's actually oh the lower case o so it's going to be a circular point and then
131:20 - this one's going to have a label too and I'm going to plot something else here's same x values and
131:26 - then notice I can define the y value up here and then say y right there or I could put the y value
131:36 - in here directly either way whichever you feel like doing I don't want to show you the different
131:42 - options here and again we have this label also so let's just take a look at the x label the y
131:51 - late set x label y label and the title and then we'll see these different these different lines
132:00 - so there we go and you know we get nice orange a different shade of blue
132:06 - and I define that as a red dot so there we go but what if all right so let's see
132:13 - what if I want the axis to show the grid it looks kind of plain what if I want to see the grid so
132:22 - when I comment that out and this one notice true is a capital T
132:29 - it will actually show the grid lines and you see it does line up to the tick marks that are already
132:35 - there every 2.5 but there we go so if we want to see the grid lines and we have this I can
132:42 - and we have this and now we have our x you know our labels x values y values some graph
132:48 - you could actually put the graph and in one of the later units we'll look at some details about how
132:56 - to even automatically if I wanted to graph one line and have the title of the graph be that line
133:03 - but you know you could always just type that in you know instead of some graph you could actually
133:10 - just type that in as a string you know the equation of the line okay so let's take a look at numpy
133:18 - again and in this case let's say the 2.5 in each direction is not really what I want so again we
133:29 - have x dot and we're going to set x ticks and set y ticks so setting these tick marks on each axis
133:39 - so it's a different sort of array I'm going to do num mp dot arrange and what do I want to arrange
133:48 - very similar to the way we did x values I get my minimum my maximum and then this is how often do
133:54 - I want to tick mark every two numbers so that's what we're going to do from y min to y max and
134:02 - you see again basing it off of those original variables if the window changes then all this
134:08 - will update automatically so there we go so let's just take a look at that supposing I change the
134:15 - tick marks and we see then now every two and maybe that's a little bit better instead of 2.5
134:24 - and we see these now if I wanted it every one then I'm going to change that just to one and notice
134:36 - this is just for the tick marks along the side but up here when we do x dot grid true that's
134:44 - going to just follow whatever tick marks we've assigned so now we just change this every one
134:51 - and now we get this sort of graph where I definitely can count the boxes and see you know
134:57 - let's take a look at the slope of each line let's see these and python still does it around the edge
135:04 - so that way it doesn't get in the way of anything that's in the middle of the graph
135:10 - all right there we go so we can keep this that's that's pretty nice okay so what's one of the things
135:17 - we have all these labels but we didn't see them anywhere so if you have all these labels then we
135:25 - add this other plt dot legend here we go and we can see these labels so I wanted to show you that
135:37 - each of these labels we can have you know this line we labeled with the equation the point I
135:44 - just wrote the word point but you could put anything and the other one labeled with just
135:49 - some more steeper line so we could always do this and in the same way you know even if python
135:57 - assigns it you'll see the matching you know which line are we referencing which point are we
136:02 - referencing so some good things that we can do with these we can have the tick marks or not we
136:08 - can change how often they come up we can have the grid or not we can change these labels
136:14 - all right and I encourage you just to get in and you know tinker with this you know take a look at
136:21 - all some of the different ways you can you know match up different graphs you can you know set
136:27 - different things and we will get into even more graphing but that's going to be when we get to
136:35 - systems of equations and some other more complex graphs so then we'll revisit this and then we'll
136:43 - you know go a little bit deeper try a few more things with the graph but I think I think this
136:47 - will get you to be able to display any function you have and you know hopefully display it in a
136:53 - way that you say yeah this is exactly how I wanted it to look there we go customizing your graph
136:58 - all right so yeah get in there and tinker with this and see see different ways that you can
137:05 - change the graph
137:11 - so let's talk about slope how can I describe this line that's on an angle using you know describing
137:20 - how it goes up and over so that's what slope is picturing these lines that have a slope to them
137:29 - that they go on some sort of angle but we're going to describe them going up and over like steps how
137:35 - much am I going up and how much am I going over up and over up and over like steps so if I have
137:43 - two points and if I have the graph that I'm looking at that's great I can just count it down
137:48 - that's great I can just count you know looking at two nice points that work out as integers that
137:53 - makes it easier to count so I can say from this point to this point I'm going up three one two
138:03 - three and then over one so up three over one well then my slope is three and I can do the same thing
138:12 - you know from that to the next point I can go up three over one plot a point up three over one
138:19 - plot a point etc and it would be the same slope anywhere on the line because it's a linear
138:26 - equation it's a perfectly straight line so that's great I can count if I don't have the boxes or
138:34 - you know just have things like this but if I have the points that counting that how much am I going
138:39 - up that's the change in y because y tells me if I'm going up or down so if I look at this I'm going
138:47 - up I just counted three but I could also subtract taking a look at the y values four minus one
138:55 - or then how much am I going over and it's always over to the right so I could look at the x values
139:02 - so from one then to two two minus one how much am I going over so it's always over to the right
139:10 - in this case it's positive because left to right it's going up if it was left to right going down
139:16 - then my second y value would be less and when I subtract then it'd be a negative number so it's
139:22 - always going to the right but y would be positive if it's going up or negative if it's going down
139:27 - and so if I had these and I can count but looking at this I know I can subtract so what's that
139:35 - formula look like well I can write out the formula here slope m equals and that's right
139:44 - m for slope because it's how much we move on the graph so somebody started using m and it caught on
139:52 - caught on so we're gonna use m for slope how much we move on the graph and remember I said it's how
139:59 - much am I going up so that's the change in y and I can subtract that y2 minus y1 and so I would use
140:07 - a little subscripts you know y2 y1 and that indicates my second y value minus the first one
140:15 - then the change in x would be very similar x2 minus x1 and again the subscript for the second
140:24 - x value minus the first one okay so now that I have this formula let's plug in these numbers
140:32 - and see so we'd have four minus one or minus one I'm subtracting my y values and then two minus one
140:39 - two minus one subtracting the x values and what do I get four minus one is three
140:46 - two minus one is one and three over one any whole number over one that you know divided by one it's
140:55 - a whole number I don't have to write over one so I can just write three so that's where anytime we
141:01 - see anytime you see a slope that just is a whole number it's that number over one and there we go
141:08 - so we have counting if I have the graph subtracting if I just have these two points and
141:16 - you know I'm using that formula so this is great it's the same formula you know anytime we have
141:22 - slope for a linear equation so let's take a look at how we can turn this into code because I want
141:28 - you to get into the mindset that anytime we have a formula you can write write a program for this
141:33 - and you know there we go input the numbers and output in this case the slope so let's take a
141:39 - look at the code and we'll see how we can do this now this part is going to be brief because I just
141:45 - want to show you that you can connect any formula if you know here we we're going to define our x1
141:54 - y1 x2 y2 and put that into the slope formula slope equals y2 minus y1 divided by x2 minus x1
142:04 - and really then this is a useful formula and others you can just define your variables
142:12 - and run it through the formula here we're just going to output the slope
142:15 - there we go all you need is the two points next we're going to work on developing the full equation
142:23 - but then let's take a look at how that comes together on the graph first
142:31 - all right so we've already figured out that the slope is three in our two points but let's say
142:37 - we have this two points and we want to figure out the equation of this line we know that this is
142:42 - linear and I have these two points that we figured out that the slope m because moving from one point
142:51 - to the next we went up three and over one or I just subtract four minus one over two minus one
143:02 - and then four minus one is three two minus one is one so three over one we figured out that the
143:08 - slope is three and we want the full equation of of this line now knowing that it's linear we can
143:17 - imagine here that it would cross the y-axis somewhere and that's what the y-intercept is
143:24 - the intercept is where does it cross so we have a nice formula slope intercept form and that slope
143:31 - intercept form is y equals mx plus b now we call the slope m because that's how much we move from
143:43 - one point to the next and we'll call the other one b because that's where we begin on the y-axis
143:50 - so many things happen in this first quadrant where everything's positive so we picture that
143:55 - we begin on the y-axis and then move in that direction of course you know we can go in
144:00 - different directions but so I have this y equals mx plus b now what we have is our slope is m the
144:11 - x y comes from any of these x y points so I'll pick one of these points and then b would be the
144:21 - y-intercept it works out that way so if we take a look at this I'm going to take one of the x y
144:29 - points how about I take this this first one here because it's one one that that would be nice and
144:35 - easy to calculate it works for either one so when I plug in this the y value is one
144:42 - and then the slope which we just figured out was three and then the x value is also one I'll just
144:49 - put that in parentheses so notice mx you know in my math notation I don't have to write that I'm
144:54 - multiplying just because they're next to each other so I'll do the same thing when I plug in
144:58 - you know m and then plug in for x and now b I don't know so that's where I have I plug in slope
145:06 - that I know one point so that's four things that I know one point one point one point one point
145:12 - two things I know three of them I can figure out the fourth one and we'll do this multiplying one
145:17 - equals three plus b and remember our one step equation subtract three from both sides so I get
145:24 - negative two equals b so now that I have this I figured out that the slope is three I figured out
145:32 - that b is negative two then I put it together leaving x y open because any x y point on this
145:39 - line will work in this equation and my final equation is y equals three x minus two so there
145:50 - we go we've figured out this slope intercept and so now I know that minus two it crosses down here
145:58 - so that coordinate point would be zero negative two and we can see we can see why this is what
146:07 - it shows up like this because when x is zero whatever I plug in as an x value it's good it's
146:13 - going to zero out so three x three times zero it zeroes out and then when x is zero that drops out
146:21 - and then I have minus two so we see that that works out so this is our slope intercept equation
146:27 - and we can when we see this now if we know the slope we can generate the equate slope in the
146:36 - intercept if I had this line I could generate that equation we're going to pretend that that's a
146:42 - straight line but if I had this but if I had this line I could generate that equation oh where does
146:47 - it begin at negative two oh I know that that's b and then I can count for the slope up three over
146:52 - one so then I know that the slope is three and I can go the other way if I had this equation but
146:58 - didn't have the graph I could say oh I'm going to begin at negative two zero negative two plot that
147:03 - point and then the slope is three I would go up three over one plot a point up three over one
147:09 - plot a point and if I was doing this by hand you know paper and pencil I'd probably plot like three
147:14 - points and get out the roar and connect the dots but what we're going to then do here what we're
147:19 - going to do here is take a look at how we can write the code to develop the equation so all I
147:25 - would need is two points and I'm going to do more than calculate the slope I'm going to figure out
147:30 - the full equation so we're going to look at how to take two points and develop a slope intercept
147:35 - equation so now we're going to put it all together and develop the equations so like before we're
147:42 - going to define our x1 y1 x2 y2 from two different points and we're going to calculate the slope
147:49 - which now we're going to call m that's been the go-to variable for slope m for how much the line
147:56 - moves so same formula but now it's going to be m equals y2 minus y1 divided by x2 minus x1
148:05 - then I'm going to define the y intercept which is b and that's because that's where we begin many
148:11 - things happen in the first quadrant where everything's positive so we begin on the y
148:16 - axis somewhere where x is zero so we'll connect this with the algebra that we we looked at you
148:24 - know how if how do I if if I know a point and an x so an x y value and a slope and a slope how can
148:33 - I solve for b a couple steps of algebra so then b is you know y1 minus m times x1 now I have m and b
148:46 - b solve print out the equation so this will just print out the equation and we'll see
148:54 - that it'll display nice y equals three x plus four and I still it will still by default give it
149:05 - as a float variable so three point zero it's not worth trying to cast it as integers because
149:12 - this is going to work for any number and then that way does not have to be an integer
149:17 - to to make this work so there we go knowing these calculate the slope calculate the intercept and
149:23 - then put it all together in the formula so then let's graph it same thing here defining my x and
149:33 - y points and I just kept these same points here so develop the equation m equals b equals just
149:40 - because we want to print it out so that we're going to print out the full equation and now we're going
149:45 - to go back to the graph that we were doing before define our x min x max now how do I want to display
149:54 - this line I can graph I can find two other points so I'm going to take the x minimum so we see here
150:02 - in the first line y3 I'm going to take the x minimum and I'm going to convert that times m
150:09 - plus b that's going to be my y value and then I'm going to take the x maximum times m plus b
150:16 - that's going to be my other y value so now I have these other two points basic setup for the graph
150:23 - same as we were doing before and we have now I'm going to plot that that line plot dot plt dot plot
150:31 - and my x values are going to be x min x max and my y values will be these new y values and I'm
150:39 - going to plot this as a red line so if I part if I put an o in here that would put these as two
150:47 - separate red points but just r makes it a red line and now when we run this
150:55 - there we go we calculate the equation and we graph the line good times so I can change anything else
151:09 - I can have any other two points there we go there we go two three and if I kept the same x value
151:20 - we know this actually some of this would break but it might still graph it but we know that that's
151:26 - not a function there so there we go six and I'll make this one eight
151:35 - eight just to show that we can just change these and all the rest of this will work
151:42 - solve for m and b get our equation plot them here and when I run it there we go
151:51 - so 1.25 x plus 0.5 and we see then it must cross the y-axis at 0.5 and then that slope
151:59 - up 1.25 over 1 there we go all right so now we can graph and
152:12 - do whatever you want with the two points you find
152:19 - now that we've worked through the core skills in this unit let's look through some extra problems
152:24 - and I'm going to work through extra problems using the CoLab notebook so you can see how
152:30 - you can apply these resources that you're building and use these to solve problems that
152:35 - might come up in a textbook or in day-to-day life so we're going to go through some more
152:40 - extra problems here so we're looking at how we can apply some of the things that we've been doing
152:47 - to real life situations and use this information to predict things to figure out some trends
152:56 - and real life or things that show up in a textbook that hopefully are realistic enough
153:01 - so let's take a look at some examples here and we'll work through these so if we look at 25
153:08 - a town's population increased at a constant rate in 2010 the population was 55,000 by 2012 the
153:15 - population had increased to 76,000 if this trend continues predict the population in 2016 so we
153:23 - want to notice that these are two x y coordinates time and population and time if you have it it's
153:34 - going to be on the x-axis almost all the time so if we look at this so 2010 55,000 2016 76,000
153:47 - or 2012 76,000 so when we when we do this we have I could make 2010 the x value but I could say hey
153:59 - hey this is the beginning of this situation I'll call it time zero so in time zero it and 55,000
154:07 - these are nice even thousand so I just might call it 55 so time zero the population is 55 and 2012
154:16 - is when we have the next year so that's two years later so two and then 76 so we want to take notice
154:26 - that we're recognizing these as you know x y coordinates that we can put on a graph and we're
154:33 - going to use that we're going to predict in 2016 so let's take a look at how we would do that now
154:40 - hopefully you've already been putting together some things that you know that you can use to graph
154:48 - you know your co-lab notebooks so that you would already have this something like this set up you
154:54 - know graph you've already done the imports this is the only thing that we're changing remember
154:59 - this for the two points and then we're going to calculate the slope and the intercept and everything
155:05 - so x1 0 y1 is 55 x2 I would want that to be 2 and y2 is 76 so you see that that matches up
155:18 - 0 55 2012 76 000 and these this would then be the only thing you needed to change is your two points
155:31 - because all the rest of this you'd have this you know already set up develop the equation so
155:39 - you know we're going to calculate the slope we're going to use that to calculate the y intercept
155:43 - now we happen to know because we have x1 is 0 so we know that the y intercept is going to be 55
155:52 - but that's okay we're going to print out the equation and then our classic graph now I would
156:00 - normally have this set at you know negative x min negative 10 x max 10 y minimum also negative 10 y
156:09 - maximum 10 so this is the other thing that we would change because we look at this graph and
156:15 - an x minimum of negative 10 so in time that would be 10 years ago but you know we're we're not going
156:26 - to worry about going in the past and making that negative 10 so I'll just keep it at zero and we
156:33 - I'll just keep it at zero and we can you know look at it from there then x maximum 10 we can keep that
156:39 - that's probably just as good you know we're looking at the most six years for this situation
156:45 - and y minimum I'll also make that zero actually because y is population so y minimum being less
156:56 - than zero would just be weird negative population they're not going to be in the upside down or
157:00 - anything all right or y maximum and I picked 150 because we already start at 55 and then we're
157:08 - going to 76 and we're predicting a few years in the future so I wanted to go up a little bit 100
157:13 - didn't seem like enough so we could always change these so all we need to do is change these and
157:20 - notice all the other things for the line that we're going to graph so notice even though I'm
157:25 - printing out this line I'm still just using these x min and max and then two more y values to calculate
157:35 - this line and we're just doing the line that way there's other ways to do this but we can keep this
157:41 - for how we're going to display this line this this works for linear equations
157:48 - and we still keep our basic setup now here's where we're also add the details so again hopefully you
157:53 - have these and you could also comment these out and then use them as needed like I have these
158:01 - commented out about setting the x ticks and the y ticks we'll see if we need to we'll see if we need
158:08 - to change that and you might have the default x label as x values or y labels y values but we
158:15 - can change these here time and population and I like I like seeing the grid especially for this
158:23 - situation so I'm going to put that in as true so we have these details that is that you could you
158:29 - could have your setup and have these all commented out that all you need to do is uncomment them
158:36 - as needed and then there we go we're going to plot this linear function and then here's what it looks
158:42 - like when we run it so we figured out the equation so it's going to be there it is 10.5 x plus 55
158:51 - so we see this trend and we see it starts at 55 increasing about 10,500 every year
159:01 - so year two we see yeah I'll estimate that as 76 year four and then year six this is what we want
159:11 - now this might not be exactly 120 we could we could plug that in and see because now we have
159:23 - the equation you know what what is the value at six years but also this is enough and that's why
159:31 - I didn't worry about changing the tick marks because the default that it gave us I think that
159:34 - actually ends up being pretty good so there we go as a good enough estimate I would say 120,000
159:45 - for you know population estimates you know you know the fact that it might be you know 119,500
159:52 - or something like that you know our rough estimate is going to be 120,000 and that works so you see
159:59 - and then we have our dice labels time and population the grid marks help so this is how
160:05 - we want to do this we can you know we can set up this equation and see the graph and that helps us
160:13 - answer all these questions there we go we see the trend and we can predict the population in 2016
160:19 - that's about 120,000 all right now here's another one the number of people afflicted with the common
160:26 - cold dropped steadily by 50 each year since 2004 until 2010 okay so we're looking at our keywords
160:38 - here so dropped steadily then we're talking about a subtraction and then I'll make time zero 2004
160:48 - since 2004 is the first not first year we we mentioned this now also a lot of these in real
160:59 - life yes they wouldn't be perfectly linear but a lot of times that linear trend gives us a decent
161:04 - enough approximation and that's that's the idea for some of these it's enough of a prediction
161:10 - so now we have in 2004 875 people were inflicted and notice even with the comma there you can
161:18 - definitely see there's your xy value year and then afflicted and then in 2010 it keeps dropping
161:29 - so one of the things that we can do here well this is find the linear function so one of the
161:36 - things we can do is I can make 2004 times zero and then that's 875
161:46 - so if we take a look at this 2004
161:55 - I'll make that time zero and then this one I'm going to make 875
162:01 - 875 all right so now if it drops steadily by 50 each year all we have to do is we just need one
162:16 - more point if this is linear so we can just do the subtract you can do the subtraction in your head
162:23 - here then if we have year one then it drops 50 so then that's going to be 825 and you see that's
162:37 - that's all we need two points and we'll be able to do everything else calculate the slope calculate
162:45 - the intercept and display the equation I might even well now the time and population won't mean
162:54 - anything so you know number of people afflicted you know okay how about how about cases number
163:07 - of cases of the flu there we go so there we go time cases and you can hit control or you can hit
163:16 - shift enter or click this and we see this trend negative 50 was still in the y equals mx plus b
163:27 - negative 50 x plus 875 and a lot of times you would see this they'd put the 875 first and
163:34 - and then subtract but that's okay now also this notice that you know my x y axis I'm not going
163:43 - to show anything why because it started 875 and you see 140 doesn't cut it so we have to go to
163:54 - x minimum and maximum that's fine y minimum that's fine but y maximum it can't be 150
164:01 - maybe I'll call it like 900 so now we can see
164:11 - the graph and sometimes you know you graph it and you say well why didn't it show up and then you
164:17 - look and see oh it's the window out of bounds here so there's 875 and we see this downward trend
164:23 - so there we go and we can use this to predict you know in in any year now there's other ways
164:31 - to get the exact amount we can you know for any any year we can actually plug in that x value
164:36 - and then solve so that works and remember that even works within a print statement so if we have
164:46 - you know so the interesting thing is this plot dot show
164:52 - um that needs to be last so if I do another print statement I could I would do it later
164:59 - but I could right under here
165:05 - you know the same place where I print this I could print so
165:11 - print this I could print so what if the question was how many you know what's how many people had
165:24 - the flu we might say oh look at this two years later you know we had the now we we can do the
165:29 - subtraction so let's say like five years and you see given our graph here you know we see this
165:37 - trend we can estimate it but we don't know exactly you know it's not detailed enough to see it so I
165:44 - can say oh about in about five five years how many people were afflicted with the flu and supposing
165:50 - I want that exact number so I can go back to this and then x is five so one of the things you can do
166:00 - is in the print statement you can actually just do do the math and you can have like a more elaborate
166:08 - print statement if you want but we can just do our math here negative 50 times five plus 875
166:19 - so we see you know our negative 50 times five plus 875 and that would give us the y value what would
166:29 - be the value what would be the number of people afflicted after five years and again you could
166:35 - have a more elaborate print statement to say something but since we already know what that
166:42 - question is now that that's 625 that that means something to me when I see it there so you see
166:50 - that that might be you know could I estimate it exactly oh that's 625 and not necessarily but I
166:57 - can plug in the number and get it so we see you know some different things we can do see the graph
167:02 - we can answer some questions do some math for you know some specific some specific questions related
167:09 - to this now all right all right linear function so here's another question when will no one be
167:21 - afflicted so we want to know looking at this graph when is the y value the number of cases going to
167:29 - be zero now rather than now one of the things you could expand the graph is the y value is
167:39 - until it gets to zero we'll come back and do that in a second but one of the things that we could do
167:46 - is if you already also have your setup to solve an equation so you know you have this and remember
167:57 - this was the whole setup to solve an equation and print the solution and so the only thing we needed
168:03 - to do here we keep this equation variable the only thing we need to do is put your equation there in
168:09 - this case i'll put it here h 75 minus 50 x and remember it's remember the python 50 times x
168:22 - so that's by default set equal to zero so when we run it so the answer is 35 over two interesting
168:34 - that gave us a fraction but there you go so that's 17.5 so 17.5 years it's going to be zero
168:44 - so yeah now again fictional numbers i feel like you know in 17.5 years from now no but it's not
168:53 - going to be that nobody has the flu or something like that but we can actually take a look at this
169:00 - and we can change the x maximum to 18 and then we can see this trend so we look at that you see then
169:12 - according to this trend you know time zero and that would be you know at 17.5 years and in this
169:25 - case according to these numbers who knows it may in some particular town but in 2004 so 17.5
169:37 - or 18 years that would be like 2022 and yeah i feel like that would it's not that there's
169:50 - nobody afflicted with the common cold all right but anyway you see the trend though we see you know
169:57 - the these are realistic enough that we can use these to take a look at how we would solve these
170:02 - and this is what we want to use this math for predicting trends given the information that we
170:08 - have so here's another one where they even give you the partial line based on the graph they have
170:18 - all right so this is showing profit so this figure one is showing profit in thousands of a company
170:25 - in a given year x and they also do x represents years since 1980 so there we go if x if time
170:36 - zero is 1980 so then 20 so so 20 that would be 2000 and 30 that'd be 2010 we see you know there
170:48 - we go now given these we want to find the linear function all right so let's take a look at if i
170:57 - want to look at these i just want to find two nice points that i feel confident that i'm not just
171:03 - estimating the points so i like this first one at year five it was 10 000 now it it's interesting
171:14 - because it says y in thousands so therefore 10 000 would be 10 million you see so if y is in
171:27 - thousands then 10 000 would be 10 million in which case they could have just said it was in millions
171:35 - but that's okay and then we have so five i'm going to shift it to millions and just make the
171:45 - y value 10 so five ten and then let's find another nice point i like this 25 four so we can go back
171:57 - and we can plug in in these so i don't have that zero value and we're probably going to want that
172:05 - at some point so five years then we're talking 10 million and then at 25 years
172:19 - then we were talking two four
172:25 - four
172:34 - okay so there we go we have that point five years 10 million 25 years 4 million and
172:43 - since we already see this graph since i made them 10 i really could now we could we could take
172:53 - a look at this and say oh yeah 12 is probably fine as far as a y maximum and we could continue
173:01 - this to 30 or you know we can take it further so when i go to graph it zero x maximum 18 is not
173:14 - going to be enough maybe i'll just make it a nice round 50 y minimum fine y maximum 900 that
173:21 - would the scale would be so much it would this would just be in the tiny corner of the graph
173:27 - so maybe we'll just call that 15 or something like that all right there we go and for this one
173:38 - we could
173:42 - just delete this
173:43 - like the space in there we could just delete this and we have i'm going to print out the correct
173:48 - the equation so when we run it so here's our equation negative point three x plus 11.5
173:59 - and we see this downward trend over time and here's another one where if i wanted to
174:11 - change these tick marks maybe i could change this to the x ticks
174:21 - is two enough yeah yeah maybe and then i can change the y ticks is two enough yeah maybe we'll see
174:34 - and we'll run it so we see we get much many more lines all right and we'll see what happens
174:44 - we see we get much many more lines all right and with that we see that the uh this is 38
174:57 - now just because these end up being rectangles more i might change my y ticks to one i think
175:06 - i just like that better and you know in doing this you can you know change some things and go
175:12 - go there we go so with this then we can really see the trend there's your 11.5 and then we can see
175:22 - this downward trend down 0.3 so it should go you know over 10 it just went down three to 8.5
175:33 - here we go and then 38 years later then they would have no profit because that's the trend
175:42 - that we're saying there we go so whatever this company is this is their profit since 1980
175:51 - and then and then there we go um
175:55 - um 38 years later then they would have no more profit so who knows what company this is but
176:04 - you know our fictional company is you know something would have to change but that's where
176:11 - the prediction lines you know the the the simplest prediction is okay these would go in a straight
176:18 - line whatever trend would continue in a straight line unless something changed but we know then in
176:25 - uh normal business normal day-to-day life things do change and that's why our lines aren't always
176:30 - perfectly straight but this gives a often enough of a prediction oh and you see then time and then
176:38 - cases then we would change that to profit okay just just to make it official here time and profit
176:52 - so there we go another another situation and we can see where it would start and then
177:02 - profit declining and that's enough years that you know 11.5 million was a lot more money in 1980
177:11 - and then profit declining and yeah so this this company is definitely whatever they were doing
177:17 - there you know they were in uh in sad shape all right and we have the y intercept and all that
177:25 - okay so we see another very very similar we'll do we'll do one more here so consider this scenario
177:32 - 2004 school population was 1700 by 2012 the population had grown to 2500 so all right and
177:41 - again assume assume the population is growing linearly all right now how much did the population
177:50 - now how much did the population grow so this a is really just the subtraction
177:58 - so 2500 minus 1700 is 800 so it grew that much and then the average per year you see
178:10 - anything per year the rate that's the slope and we can divide that but we're also going to then
178:19 - just plug these numbers in and you'll see that we can see the slope so 2004 maybe we'll call that
178:26 - time zero 2004 1700 2012 2500 and i might even leave the hundreds because we want it to be
178:39 - you know more exact we know that the population would be continuous it wouldn't just jump hundreds
178:46 - so 1700 and then y minimum and then we have 2500 so then after this if i wanted to graph this
179:03 - yes then my y maximum on the oh i put in the wrong so there you go time zero 1700
179:19 - 1500 and so in 2012 so time zero and then in 2012 so that's eight years later it was 2500
179:40 - so eight years later then it was 2500
179:42 - so here we go okay so we'll have that and
179:53 - x minimum and then the x maximum so let's just make it a nice even 10
180:02 - and we could always change it if we need to y maximum 2500 but we're going a little bit
180:09 - further so let's make it 3000 and see if that's going to be enough
180:20 - there we go and do i want the ticks for right now see if you comment them out the graph will
180:30 - as we saw it will still give you the it will still give you the tick marks it's just that the
180:41 - default whatever python wanted to calculate and where you can force them into however often you
180:47 - want there we go and for school population yeah all right so we see it's growing by about 100 a year
181:08 - here
181:15 - and maybe that's you know depending on what you wanted to estimate these tick marks might be fine
181:21 - the grid might be fine and you know if you wanted to you could always add more change it you know
181:32 - i think that works out so growing by 100 every year and we can use that to predict so the average
181:43 - probably growth per year was 100 there we go 100 x so the slope is 100
181:51 - and there's the equation for the population for two years after 2004
182:02 - so we see you know we've done a few of these i think i think we don't need to do another
182:07 - population model but there's some other form there's some other uh practice problems that we see
182:16 - in other tech all these all these are coming from that uh textbook the second textbook algebra and
182:21 - trigonometry because that's a lot of good business applications in it so you know here's the idea
182:28 - that just the notation g equals f of p the amount of garbage g produced by a city with a
182:37 - population p so we can go a g equals f of p and that's how we would read that so it's a function
182:44 - of population and what that tells us is population is the independent variable and then garbage is
182:51 - the dependent and population very often is an independent variable that causes a lot of other
183:00 - trends so we look at that and we see the same type of thing the town of tola has a population of 40
183:07 - thousand and produced 13 tons of garbage each week express this information as a function
183:16 - so now if we have this one of the things that we would guess is that if it's a function of
183:28 - population then no people would mean no garbage so in our y equals mx plus b scenario b would be
183:40 - zero and notice we because we only get exactly one point here 40,000 13 tons
183:50 - so if we wanted to set this up you know we want to look you know we know that we have the
183:57 - python scripts to solve this but if we want to set this up we want to take a look at at
184:04 - how we're going to set this up 40,000 is going to be the population and who knows maybe i might
184:09 - just call it in thousands and then 13,000 is going to be the population and who knows maybe i might
184:15 - just call it in thousands and then 13 tons same thing i'll just call it 13 um
184:25 - and then we say well that's one point where do i get the second one but we have to look at the
184:31 - situation would i think that it would start at zero zero and if that's the case then we could go
184:40 - back and say so here's zero zero and then remember our x values are going to be population
184:52 - so we'll call that 40 and then that's going to be 13 because it's in tons
185:00 - and therefore the x minimum zero fine but x maximum 40 is probably not even enough
185:12 - um 40 is probably not even enough because we start with that and we can expect that it increases
185:19 - and we can expect that it increases so then let's say the x maximum would be i don't know let's make
185:31 - it 100 and we'll see y minimum zero now 13 maybe make it like 50 we'll see see if that's
185:44 - enough of a y maximum so there we go and we can just write this in thousands
186:00 - and we can make this in tons
186:06 - so thousands of people tons of garbage
186:08 - so we have this trend here there we go 40,000 generates 13 tons of garbage
186:23 - and we can see this trend here so there's the rate here 0.325
186:35 - 0.325 x so remember the x value is in thousands so every thousand people
186:50 - according to this fictional scenario makes 300.325 tons so that would be
186:59 - about tons 2,000 pounds so that times 2,000 would be about 650
187:09 - but then if that's thousands of people so that's each person making less than a ton of
187:20 - less than a pound of garbage maybe so again this is this is not the you know latest research this is
187:37 - you know a couple numbers that seem realistic and then what's the meaning of this and we
187:43 - would read this as f of five equals two so notice that the function like our functions in python
187:53 - that five is the input and any input or independent variable that's x or you know
188:02 - even though we call them p and g here so that input five and then output two so f of five is two
188:10 - so we would expect then that that means that when we're talking about 5,000 people
188:21 - then the 5,000 people would produce two tons of garbage so that's the meaning of that you know
188:29 - five is the input two is the output so in our x y scenario here that that's what that would mean
188:37 - that's what that would mean 5,000 people would produce two tons of garbage
188:46 - all right and so let's go over here to 89 and another one you see don't get caught up in the
188:56 - alphabet soup of of this as people use different notation notice the trend of
189:02 - of i would read this as g of a so it's a function of this input a so the number of cubic yards of
189:12 - dirt d is needed to need to cover a garden with a square feet so d for dirt is g of a
189:21 - and we read like that g of a and the common notation you'll see in just general math is
189:29 - f for function and then often we just go through the alphabet fgh for other functions we want to
189:35 - talk about in python and pretty much across computer science your function can and should
189:42 - have a much better name so you know that's something that computer science has an advantage of
189:49 - but nonetheless you'll see this all the time you know g of a so again we notice the trend a is the
189:54 - input that's the area and then given that area then how much dirt would it be so we have 5,000
190:07 - square feet area requires 50 cubic yards of dirt so that 5,000 requires 50 now we're not even going
190:19 - to do any calculations to this but i just want to show you that it that would be g of 5,000
190:30 - equals 50
190:34 - so that's just how we would write that given that input you know area that we would know
190:41 - first then therefore how much dirt we need and that that would just be how we would we would
190:47 - write that there's we don't need to do any math to that right now and the same thing g of 100 equals
190:53 - one so 100 cubic yards or 100 square feet of garden requires one cubic yard of dirt
191:04 - all right and number and question 90 we'll see just another situation f of t so there you go some
191:18 - function the number of ducks in the lake after t years after 1990 so f of five is 30 so we know
191:27 - five is the time years after 1990 so in 1995 there were 30 ducks in the lake and then f of 10 so
191:38 - years so in 2000 there were 40 ducks in the lake and given these you see we can x y x y we can
191:48 - find the overall equation plot the points graph it you know make some other predictions but that's
191:54 - the notation here and this is what that means all right now 91 the interesting thing is for
192:06 - just answering these questions it this won't matter but this is not going to be linear
192:13 - but we can still answer these questions because each of these is still going to be the same
192:17 - each of these is still going to be the same now notice h of t and now in this case h for height but
192:24 - you know again another way of expressing this so as x y values x is one y would be 200 the h
192:34 - the h of one is 200 so that x value is t for time in seconds so after one second it's 200 feet up
192:44 - after two seconds it's 350 feet up and again this is not linear so
192:54 - the same things that we've been doing actually won't work for this but we can still get the
192:58 - meaning of each statement here and 92 the one to one is this is still a function but that each
193:10 - x value like each x value and y value pair up like that neither of them show up again but this is a
193:16 - parabola because we see x squared and we'll talk about parabolas later but the one to one
193:24 - that there's actually positive x values and negative x values that might still have the same y value
193:32 - so that's why it's just not one to one but it's still a function
193:35 - i don't want to talk too much about that we'll get to these these types of functions later but i just
193:38 - want to mention that in case you're looking at that and saying well what does this mean one to one
193:45 - so in number 60 now this is also not linear and you see the height of a projectile is more like
193:54 - something like this after t seconds here's the function h of t is the height of a projectile
194:03 - seconds here's the function h of t equals negative 16 t squared plus 96 t
194:10 - so that's showing that you know it isn't linear in fact it's a parabola because it goes up turns
194:18 - around comes back down okay so the domain anytime we talk about the domain that's the the x values
194:26 - so the domain is all the x values that are possible here and then the range this doesn't ask it but
194:33 - the range is all the y values and this actually has a limited range so uh because this is a
194:46 - parabola that goes up and then comes back down there's a maximum y value so after that y value
194:54 - after that y value there's no more like y values beyond that are not a part of the range because
195:01 - it'll just never get to those numbers then the domain mathematically the domain is all real
195:09 - numbers but realistically in the context of the problem time zero would be the first part of the
195:19 - domain so you see mathematically these other numbers exist and they don't break this problem
195:26 - but realistically if i'm launching something it starts at time zero and yes i know that we
195:33 - can talk about t minus whatever and talk about negative values because we're awaiting the launch
195:40 - you know and this is second so if it's like t minus 10 then it's you know the t value is negative
195:48 - 10 and that's 10 seconds until the launch but realistically we're we want this to be time zero
195:56 - and then the other one would be it does go up and comes back down so there's a time where it hits
196:03 - the ground again and beyond that it's not really within the scope of this problem so let's take a
196:09 - look at how we can solve this just because even though that's beyond what this is asking
196:15 - i want to find out what that t value is when does it come back down to the ground all right so
196:21 - negative 16 t plus 96 t we can go into this where we're going to import our symbols and instead of
196:31 - t we're going to make it x just because i already have x as a symbol so you could always change it
196:36 - and make a t that's fine so negative 16 and again we're going to use x squared minus 96
196:54 - x and that's always the this is the equation set equal to zero and that's what i want what x value
197:04 - makes the zero now negative six would not be
197:20 - plus 96 t oh because i put minus
197:28 - yeah all right
197:30 - so it only gives us zero what if i have
197:44 - so i was doing this with things that only had one solution so storing this as a finite set and i
197:53 - just printed the first one but this does have two solutions you see and i mean i could get re i
198:01 - could get really fancy here and then actually just make another print statement but see this is my
198:06 - finite set it's not zero six as a coordinate it's x equals zero or x equals six and i could then put
198:15 - this zero and i could have another print statement
198:28 - there we go to show the first one and but this is just a matter of you know how you want the
198:33 - output to look okay so i'm going to go ahead and i'm going to go ahead and i'm going to go ahead and
198:40 - show the first one and but this is just a matter of you know how you want the output to look
198:49 - and we have these you know we also have the you know which we looked at before you could
198:55 - you know loop through this to get solution to get multiple solutions but there we go yes
199:02 - x equals zero it's on the ground and then x equals six so that's another way that we could you know
199:09 - that we could graph this and we see that it back on the ground at six now this is a little
199:18 - bit ahead because we'll talk about quadratics later so yes we will we will not worry about
199:27 - graphing this because we'll get into this with quadratics but this gives us the solution that
199:33 - at six at six seconds later it's back on the ground so some projectile launched it went up and
199:40 - turned and i'll tell you this that you know halfway through these parabolas are symmetrical so halfway
199:46 - through it's halfway through it's uh at its maximum point so we could even print here
199:58 - what is that maximum point and we can do that math negative 16 here's what i'm going to do
200:13 - so halfway through that so that would be three would be x and you see that's really the idea
200:20 - that you know we set up the situation where i have x and then i can plug in my value so zero six zero
200:27 - zero six it's back on the ground so three seconds later it goes 144 feet up in the air
200:39 - so realistically then the domain for this function as that's that's practical not just like
200:48 - you know mathematically it exists but related to this situation the the only number the only x
200:54 - values that mean anything for this are anywhere between zero and six including zero and six
201:02 - because everything else doesn't really mean anything for this situation you know after
201:07 - this then if it keeps going down like it doesn't go back down into the ground and the y values here
201:13 - are between zero and 144 so that's my domain between zero and six including both and the
201:21 - range between zero and 144 so you know these are some things we can look at you know solve
201:29 - when does it equal zero and plug in some various numbers
201:37 - all right so if we look at 61 just again reading reading is these we might not even need to do
201:46 - any code for this we have this situation the cost of making x items is 10 x plus 500
201:53 - and the fixed cost is determined when zero items are produced so find the fixed cost and remember
202:00 - zero so then if x is zero that 10 x drops out and then we're left with 500 that's why it's be gate
202:07 - it's b for begin you know when you know before we produce anything you know the fixed costs are 500
202:15 - now maybe this is some sort of business and 500 is like rent and utilities and everything that
202:23 - even if they're there they didn't make anything they still had to pay all that
202:26 - and then they pay ten dollars for whatever you know for whatever they're making
202:30 - so then the cost of making 25 items would be 10 times 25 we just plug that in 250 plus 500 750
202:45 - all right and supposing the maximum cost allowed is 1500 what is the domain in the range so if we
202:55 - have to set this equal to 1500 now if we take a look at this and i'll just again write this here
203:07 - so if we have 1500 equals 10 x plus 500 and notice i'm not this isn't python syntax because i'm not
203:18 - worried about doing anything with this yet but then what do i want to do i want to put this equal
203:26 - to zero so if i subtract 1500 from both sides then i get zero equals 10 x minus 1000
203:39 - because if i subtract 1500 from both sides and so that's set equal to zero 10 x minus 1000 then
203:50 - that's where i could plug this in here so you see you can work out the math before you get to the
203:56 - python code so 10 and then here i do need 10 x minus 1000 so if that's the case now with this
204:10 - one i know there's only one solution so if i keep the other one that's going to give me an error
204:16 - i know there's only one solution so if i keep the other one that's going to give me an error
204:25 - so whatever it is we know that we could only make a hundred
204:30 - because you know maybe they only have that budget you know whatever they're making they make a
204:35 - hundred of them their total expenses were 15 total expenses were 1500 and then
204:43 - you know then we have to go out and sell whatever they are i don't know t-shirts you know
204:50 - whatever they're whatever else they're making all right
204:56 - okay so we and we see these same types of things we i just want to look at the setup of this
205:02 - that at the number 44 at the start of the trip the odometer on a car read 21 395
205:10 - at the end of the trip 13.5 hours later the odometer read 22 125
205:18 - there we go assuming the scale is miles so average speed we want to take notice that that
205:25 - anything like a rate like that that slope and we have two values time zero and then the miles
205:31 - 21 395 and then time 13.5 and then the miles and we can go through and plug that in whether i care
205:40 - about graphing this or not it still will output the slope which is the answer to this question
205:45 - the average speed and that's where average speed it would be a linear function whereas realistically
205:54 - we know especially over 13.5 hours the speed's going up and down you know sometimes stopped
206:02 - sometimes faster sometimes slower but we get that average speed we know that whatever that answers
206:09 - they're not going to that exact speed the entire time all right and 45 the driver stopped at the
206:19 - gas station to fill up his tank and he looked at his watch the timer at exactly 340 this time he
206:25 - started pumping gas in the tank exactly 344 the tank was full now if i was filling gas for four
206:32 - minutes especially with these prices these days i would be expecting it to be a lot a lot more
206:38 - money but he noticed he had pumped 10.7 gallons so surprisingly not that many not that many gallons
206:47 - but what is the average rate of flow of the gasoline so again time is going to be x so if
206:54 - we want to call it minutes we can call it four minutes and then 10.7 gallons so we could calculate
207:03 - to gallons per minute or and again same thing plug it in you know 10 well actually this one
207:12 - because we already did that subtraction is just 10.7 divided by four so some of these you know
207:20 - you have these scripts and everything available but some of these you might be able to solve
207:24 - even before you look at those or you could break it down into seconds how many seconds
207:29 - in four minutes and you know the rate of flow per second but that's just you know other possibilities
207:36 - gallons per minute is probably fine so we see all these situations we want to see like that recognize
207:43 - how we can set these up and the things that you're building that you already have to be able to solve
207:49 - an equation even if you know the equation is something else and you can just do one step of
207:54 - algebra you know because that's it you want to get it equal to zero so keeping in mind from
208:01 - from earlier that one step of algebra so then you have it equal to zero and you can solve it
208:06 - so you'll have these things set up solve any equation or you know graph a solution find the
208:14 - rate all that so you know if all you needed was the rate you know everything else here would be
208:20 - bonus but it'll still also answer that question for you so we want to see that you know different
208:26 - ways that we can interpret these questions and solve solve the problems graph them take notice
208:33 - of some of the keywords and hopefully you see how you can apply some of this to different situations
208:40 - that you come across you know look look for situations in in your day-to-day life and how
208:46 - you can apply these all right so hopefully that was pretty useful for you so when we talk about
208:56 - factoring in algebra then we're going to talk about dividing out something so any factor is
209:04 - something that we're multiplying and therefore i'm looking for things like when i see a number what
209:10 - am i multiplying so when i see a number like six then i can say oh what are the factors that's two
209:19 - times three and here i'll put the dot for multiplying to separate the factors so you
209:28 - know when i when i look at a number you know like 15 then what are the factors oh that's five times
209:37 - three and it's useful to be able to think about numbers and what are the factors because that
209:46 - helps us reduce fractions and simplify other other terms so for example if i had since i'll use these
209:54 - two numbers here supposing i had a fraction that was six out of 15 and i said oh well i want to
210:03 - reduce that fraction to lowest terms there's a better way to write this so then if i remember
210:10 - that they both are divisible by three that three is a factor of both of these then i can say six
210:18 - divided by three is two and fifteen divided by three is five and so this is the that reduced
210:27 - is five and so this is the that reduced fraction and i got this by factoring i recognized the common
210:35 - factors and i divided out those common factors so just like other parts of algebra if i do the same
210:41 - thing to the left side of the equal sign and the right then it's still equal here with a fraction
210:48 - if i do the same thing to the top as i do to the bottom but that has to do with just multiplying
210:53 - and dividing adding or subtracting doesn't doesn't work so if i have these i can reduce you know
211:02 - reduce my factors i can even keep going supposing i had something like six out of 24
211:13 - and supposing i didn't recognize that 20 that six was a factor of 24 but i at least saw that they
211:19 - were both even so i could then divide by two six divided by two is three 24 divided by two is 12
211:32 - i could start reducing again recognizing that common factor or then i could take it further
211:39 - oh three and twelve both divisible by three and then i could say three divided by three is one
211:46 - twelve divided by three is four so again i factored things out and therefore reduced the fraction
211:54 - now a lot of times you know we see things and we don't we see fractions and we we can't you know
212:00 - especially bigger numbers we don't right away think about the common factors and we can always
212:04 - do long division in a couple minutes i'll show you how to how to do this with code to set up a loop
212:14 - to find the common factors that way even if you don't see them or if it's a lot and you know how
212:20 - do i go through all these possible factors i'll show you how to write the code to develop a loop
212:24 - to do that find those common factors but this is one of the big uses of common factors another use
212:32 - and this is more related to other algebra topics we might not need this as much as far as writing
212:40 - code but if i have something like you know 4x plus 16 something like that and i say oh these two
212:52 - the four the 16 have a common factor which is four and i can divide that out
213:00 - and we can divide it out like this way so this is another use of the term factoring
213:04 - because i see these common factors and i divide it out 4x divided by 4 is what is 1x so i'll just
213:11 - put x and then 16 divided by 4 is 4 so and again this has more to do with other algebra
213:21 - applications but i want to show you this because this is also factoring out then you know if i have
213:26 - this i see the common factor and i can divide it out and it looks like this or i can distribute
213:32 - the 4 4 times x is 4x 4 times 4 is 16 and get back to that so that's another use of the common factor
213:41 - one of the other things we're going to do is talk about factoring out square roots
213:46 - and that also i'm going to show you how to do this but then we're going to look at the code
213:51 - you know how to find common square factors and then factor them out but let's take a look at this
213:57 - if i have a square root and sometimes we have square roots that don't work out evenly they're
214:03 - not perfect squares but i can factor them and sometimes that helps because that those factors
214:08 - cancel out with other things later so if i have let's say the square root of 24 now square 25 is
214:21 - 5 that's great square root of 24 almost 5 it'll be some long decimal because it's an irrational number
214:28 - but if i can factor that out recognizing these common factors and now in this case i don't want
214:33 - just any factor i want a square factor so if i remember that 24 is 6 times 4 that helps because
214:45 - 4 is a perfect square and then i can say so i want to identify these factors but i'm interested in
214:52 - the ones that are square factors and four square so the square root of four is two
214:59 - and then since i took the square root of four i still have that six underneath the radical so even
215:06 - if i can't square root the whole number i can square root part of it and factor that out so
215:13 - sometimes then even if i can't factor out something like the square root of 24 i can get it down to
215:19 - something like this and that's the simplified square root this factored square root and sometimes
215:24 - that's really useful now again bigger numbers things that you can't often think about oh is
215:31 - this a perfect square we'll talk about how to write the code to find these perfect squares and
215:36 - divide them out and even use the simpy library to display it in a nice way so that that's really
215:44 - the essence of what we want to do with factory recognizing factors of numbers and this is where
215:49 - even if you're going to write code the more you remember your multiplication tables the better
215:54 - things will be it just makes things you know come together a little bit easier but you know we're
215:59 - looking at numbers thinking about what factors made that number and then we're looking at common
216:04 - factors that we could possibly divide out and so let's take a look at that we'll take a look at
216:10 - the code so here we're going to do the same thing we were doing with working it out by hand finding
216:18 - the common factors dividing them out and it's going to work a lot better with writing code
216:24 - because it'll go through and easily find all the factors for you and to do that we're going to use
216:30 - the modules operator so modulus that is the percent symbol so on the keyboard it's the shift on the
216:37 - five key so what that does is that finds the remainder so i already ran it so if you print
216:44 - five modules three it's like five divided by three but the whole number answer doesn't matter we just
216:51 - want the remainder five divided by three three goes in there once with a remainder of two and
216:56 - that's what it'll print out the two and if we want we'll just comment this one out and uncomment this
217:05 - just to show you another one so 31 module is 10 so 31 divided by 10 is three but that part doesn't
217:14 - matter it's a remainder of one so when we run it it'll output one now that's going to be important
217:21 - for finding factors because a remainder means that it's not enough the number is not a factor
217:28 - but if the remainder is zero then it's a factor and that's what we're going to do use the modulus to
217:33 - find factors so i just picked this number 12 and we're going to put this up in a loop so
217:41 - in our loop so i i made this variable just called test factor so we have for test factor in range
217:50 - one to the number plus one because i'm dividing so i have to make sure i start at one if i start
217:57 - at zero it'll give me an error and i want to include that number itself so i have to do plus
218:02 - one otherwise it won't do that last number so for test factor in range and then we go to this line
218:09 - here if number modulus test factor is zero then it must be a factor so then i'm just going to print
218:18 - out the test factor so that's what this is going to do given my number 12 here it's going to run
218:25 - through that and try each number and see if it's a factor and print it out if it is so then when i run
218:33 - it see it prints there we go one two three four six and twelve all of those are factors of twelve
218:41 - 12 so how can i reduce fractions to lowest terms so let's take a look at this and i'm defining more
218:52 - variables here my numerator let's call it 12 denominator 24 now we know that this is going
219:00 - to reduce to one half and i'm going to define a variable called factor which is one that will be
219:07 - a factor and who knows for some things that might be the greatest common factor so now once i have
219:14 - my numerator to find the greatest common factor all right so for test factor in range one denominator
219:23 - plus one because that's really it i want to you know i want to go up through everything in the
219:27 - denominator beyond that the numerator it's not going to really work out so now if the numerator
219:38 - module so we'll do this line here if the numerator modulus test factor is zero and denominator
219:45 - modulus test factor is zero so for each of those if it's a factor of numerator and denominator
219:52 - now that's going to be my variable factor and then once i have that now i'm going to divide that out
220:01 - so i'm going to do numerator divided by factor and i want to cast it as an integer because that's
220:09 - going to look nicer when we do you know the sense of this is that they should be integers if they're
220:14 - factors so this is going to look nicer when we display it so once i find my factor and you know
220:21 - you know it could stay at one or it's going to get you know the largest factor i can find once
220:26 - i find that numerator divided by factor cast as an integer and i'll just call it n denominator
220:32 - divided by that factor cast as an integer i'll call it d and then we're going to print out the
220:38 - original numerator divided by denominator and then the reduced fraction and divided by d so let's run
220:47 - this and we see that the original was 12 over 24 and the reduced is one half so there we go we can reduce
220:59 - any fraction and you can even copy this code and use it within something else you have
221:06 - or you can put this as its own function and deal with it that way we'll talk about creating
221:14 - functions out of a lot of this code later on in the course so the first thing i mentioned about
221:22 - adding it let's just do this so we had the decimal to fraction code and you know this one we already
221:30 - we had an input rather than just have the number here i have this input i asked the user to enter
221:36 - a decimal number to convert and remember then that input gets stored as digits but it comes in as a
221:44 - string and we've done this before converted to a fraction so i go here you know the length of that
221:54 - input you know how how many digits minus one well convert it to an integer because i want to have
222:04 - an and minus one because that it that will come in as a string that'll include the decimal place
222:09 - so there we go then that becomes my exponent and then i'll still also cast that as a float number
222:20 - which is n and then as a fraction my numerator is going to be the my numerator here will be n times
222:32 - 10 to that exponent so what that's doing is taking that value and moving the decimal place
222:40 - so there we go so the so n has all those digits including the decimal place then
222:46 - this line for the numerator moves the decimal place and then the denominator is 10 to that
222:52 - exponent so now i have an integer for the numerator this will end up being an integer for
222:57 - the denominator and now what we're going to do is just like we were doing earlier i want to reduce
223:05 - that fraction so same thing factor equals one everything else i already had that same loop
223:13 - finding the greatest factor dividing it out and there we go inputting the decimal which is the
223:22 - original number that the person entered and then print the fraction so when we run it
223:29 - enter a decimal number to convert so let's convert something like 0.125 there we go
223:40 - and it took it and it reduced it to one eighth which 0.125 is one eighth
223:46 - and we can run it again just to see that if i have a point zero two
223:58 - there we go the decimal and then that's one fiftieth as a fraction so we can apply that code
224:07 - into other things that we've been doing all right now we're going to take it to the next level
224:11 - factoring out square roots so this is all good to reduce the fractions but remember when we square
224:20 - root something now this one if i just print math that square root there we go uh square you know
224:29 - the square root of 25 here is five great but what if i have something like the square root of 24
224:36 - now that doesn't work out nicely and by default it'll just give me that decimal answer but what
224:42 - if i want to factor it and this is how we want to factor it i use square root of 12 as an example
224:50 - square root of 12 because underneath the radical 12 is four times three and then four is a perfect
224:57 - square so the square root of four is two and that comes out and then i have a three left over nothing
225:04 - else i can do with that so that's the factored square root we want to find our square factors
225:09 - and divide them out the square root of that there we go so here we have numbered a factor you could
225:18 - make it user interface but i just put it here n equals 12 and max factor i just made that one
225:28 - that's the one that will change and here's i put this as the key ingredient because this is how we
225:34 - get to you know if i have my loop where do i start where do i stop so the upper limit of math dot
225:42 - floor of math dot sqrt of n so i'm going to take the square root of that then that's going to be
225:53 - that's going to be some weird decimal number now i just did this math dot floor and then i added
225:59 - one i probably could have done math dot ceiling also but i just did it this way so take the square
226:06 - root and whatever you know math dot floor so drop all the decimal places you know not rounded just
226:13 - drop them all and then add one so that's going to be the upper limit and now we want to go here
226:20 - here so for maybe factor in range again starting at one zero would give an error to upper limit
226:31 - if n modulus maybe factor squared so you see i'm running through those factors and
226:42 - you know each of these is the square root factor so if i square n divided by that
226:49 - factor squared if that's zero then now that maybe factor is now my max factor so we go through
227:01 - and we're going to cycle through all these you know divided out does this work and once i get
227:08 - some factor that's what's going to be on the outside so then i have the results my original
227:16 - my original number the square rooted factor square factor and there's a reason why i'm printing all
227:23 - of these out here like this because we're going to build upon this and make it look nice in the next
227:28 - step but to show that square rooted factor square factor max factor squared and then the integer
227:37 - that's left over so for 12 since we had that example earlier we see that n is 12 and the square
227:48 - rooted factor is 2 square factor is 4 and the integer is 3 even though i called it integer that
227:55 - was just text it actually comes out as a float so what we have is that this gets to that factor 2
228:07 - on the outside you know 4 was a part of our in-between step and then 3 and that square
228:14 - rooted factor and then the integer that matches up with 2 coming out that's that square rooted
228:20 - factor that's the greatest one and then 3 is the integer still in there so like i said we're going
228:29 - to use simpy to make this look nice import math import simpy and from simpy import symbols
228:37 - so now i have this there we go and same variables i had before upper limit there we go and it's
228:48 - square rooting it but then you know find a one more to see where the maximum is going to be
228:57 - the like the greatest square factor i could possibly have so then i have all these other
229:04 - factor and then square they're all starting out as one and i'm going to overwrite these
229:09 - so slightly different variable strategy so if maybe for maybe factor in the range
229:14 - if n modules may be factor squared then we have the max factor is maybe factor squared
229:25 - all right and then the other factor is n divided by max factor so we see here then this becomes
229:40 - the factor that i divide out because i'm squaring it here and then i have the other factor underneath
229:50 - the radical is that original number divided by max factor so then the output variables and to make
229:58 - this look nice we cast them all as integers so the square root of max factor because that's what i
230:05 - want the square root of it cast as an integer and then that's the square root that's my variable
230:11 - square root other factor cast it as an integer there we go it i mean it essentially will be but
230:19 - we need to cast it as an integer here other factor and then the output this is this its own
230:26 - variable output and we see it's square root times simpy dot square sqrt other factor that's what
230:37 - that output looks like in simpy and this presentation here we don't need a print statement in fact that
230:46 - uh that might not make it look as nice but this simpy output so i store all that as the variable
230:52 - and then when i output it here there we go it factored out as two root three
231:00 - and if i put it back to my other 24 that we were talking about before we know that that doesn't
231:10 - work out and so it factors that to two root six because it's six times four and then the square
231:18 - root of four is two and that's what we're doing the types of things that we would be thinking
231:22 - through we just want to translate that into code you know i'm thinking through all the factors
231:29 - of that number and which ones are square perfect squares so 24 i want to find all these factors
231:37 - that are perfect square and i find that it's four and then the square root comes out and then
231:44 - the simpy makes it nice so we can do this to factor square roots and there we go so we have
231:53 - this we can divide out common factors we can reduce fractions we can factor square roots
231:58 - and these are a lot of the things that you know we often do by hand in math and
232:04 - now you have the code that you you can do this
232:07 - you can do this now that we've worked through the core skills in this unit
232:15 - let's look through some extra problems and i'm going to work through
232:18 - extra problems using the colab notebook so you can see how you can apply these resources that
232:24 - you're building and use that use these to solve problems that might come up in a textbook or
232:30 - in day-to-day life so we're going to go through some more extra problems here so we're going
232:35 - to do a walkthrough of the first certification in foundational math now each of these notebooks
232:43 - there's five of them we'll do three of them for this course and then two of them in the next course
232:50 - but they were i also designed them to be standalone that you know the directions would be enough that
232:55 - you could walk through and be able to do all this still though i'm going to give you the walkthrough
233:01 - uh maybe you already did this and you want to check some things or maybe some of it didn't
233:07 - uh turn out as you expected or you're stuck somewhere so you can always jump to that spot
233:11 - in in this video and see so each of these steps lead you towards the certification and you know
233:18 - we've built upon each thing so the first thing you're going to do is make a copy of this whole
233:24 - notebook this notebook is read-only and this is what gets shared out to everybody so
233:30 - so you make a copy and that copy is going to be in your google drive
233:35 - uh and it will be in a folder called colab notebooks by default but if not you can put
233:41 - it in whatever folder you'd want it to be you want it to be in and this is the ongoing theme
233:47 - for this course you're building your resources so you're going to put this stuff in your google
233:51 - drive uh especially if you have other colab notebooks or something you could make a different
233:56 - folder for everything uh in foundational math one you know or algebra with python if you want
234:03 - to call it that so you make your own folder you're putting all these resources in there that you'll
234:09 - have so you walk through as you work through these you'll understand how to do all these things
234:14 - but then you also have some code that you can reference so you have this in your in your drive
234:19 - i already did this and then each of these i have as a different section heading and then you can
234:29 - click on the triangle here to expand the next step and with each of these being section headings
234:36 - then up here you have a table of contents that you can go through so later on when you build yours
234:45 - you you can jump to whatever part you want you know you can add the table of contents by just
234:51 - making each of these a section heading so you do need to acquire the testing library because
234:58 - this is actually self-contained you're going to write the code and then it's going to test the
235:02 - code that you wrote and see if it's correct or not so this cell you don't need to do anything to it
235:10 - maybe for other things you might do in the future you might take notice of you know how we import
235:15 - this other library as this raw.py file in github and really save it as a library locally here
235:26 - and then you'll be able to access it so this i have the note here you may need to run this
235:34 - at the beginning of every session and the only reason i said may is because maybe if you walked
235:40 - away for two minutes and come back don't count that as another session but these codelab notebooks
235:47 - they do time out the runtime will time out after 30 minutes of inactivity and that doesn't mean no
235:55 - typing that means no running any cell or even if you are really active all day it'll time out at 12
236:02 - hours so then you you know you might say wait i haven't i've been active all day and why did it
236:08 - time out they have that time out too all these are security features that you don't just like
236:12 - leave it open for you know indefinite amounts of time all right so you're just going to get
236:20 - this library and you're going to run it and we'll take a look at this so click run
236:29 - and as this is going yep it'll save the library locally and then that's what it's going to reference
236:34 - so it'll say requirement already satisfied even though it said that don't think that oh why did
236:42 - i do this i already it was already okay that's just what it prints out and then when you see this
236:49 - test pass go on to the next step then you know you're good so it imports this and you know now
236:57 - you know now we have this library available and each step will use that to test it so these first
237:05 - four yes i do have add subtract multiply divide i know you know how to do these you probably even
237:09 - know how to do them in python but it kind of walks you through just gradually getting familiar with
237:13 - the notebook you might be already familiar with it but so you know we'll take a look so
237:18 - so we go through just you know two variables and then you're going to have one thing here
237:28 - with the comment change the next line now this was just add so there we go i'm just going to do
237:34 - a plus b and i'm going to click run and you see two plus one is three and then it said code test
237:44 - passed go on to the next step so we go to the next one subtract seven minus three so i'm going to do
237:52 - c minus d and i could hit run or i can hit shift enter which i'll do that time code test passed
238:02 - so this is just getting you familiar and then each of these imports the test so
238:08 - so you've run that first cell and then you have the test and that's what's going to check your
238:16 - code and tell you one of these steps in a little bit i'll do one that that gets it wrong
238:24 - and you'll see what what it'll tell you so here we go so we'll expand multiply and again remember
238:31 - multiply in python like a lot of things is the asterisk same key or most keyboards same key is
238:42 - the eight so just hit shift and it's above the eight there we go e times f all good code test
238:50 - passed and then we divide now when we divide here g and h now they happen to be integers and this
238:59 - happens to work out but if i had them as numbers that didn't work out if they were definitely
239:08 - defined as integers then i would have to do something else because if i divide the answer
239:12 - and if i divide it won't work out the answer will be a float but python gets pretty flexible with
239:17 - this you know i just define g equals h equals and when i divide it's not going to give me a hard
239:24 - time about whether they're integers or not it's just going to divide and there we go
239:33 - so you can and a lot of things that you might work through here if this is your your notebook
239:38 - you might just have things where you define your input or your variables right there in the code
239:44 - but you could also
239:48 - actually just prompt for input and so in that case you don't have to change the code because
239:54 - when when you run it it will prompt for input and then that could be the different numbers that
239:58 - that you want that way you don't have to worry about changing the code so in this case enter
240:04 - a positive integer it actually could for what we're doing here it could be negative but i
240:08 - just put that there and then we just cast it because the input always comes in as a string
240:14 - and then i need to cast it in this case as an integer to do some math to it
240:17 - all right so i need to do an integer or a float and then the only thing you need to do here is
240:25 - following that model i have string b and a lot of these have you know some code that something
240:35 - there that won't break the code but you do need to change it all right it's not just zero it's
240:40 - going to be this and you absolutely could just copy this and paste it there we go now
240:55 - what if i just change this now that's really all you need to do but what if i just said oh
241:00 - just for me i feel like you entered one i want to say enter another oh and i copied the wrong one
241:06 - and i want to cast it as a string as i want to cast as an integer so string b okay so if i have
241:23 - that now so i don't need to tinker with this at all so i might not but if i wanted to change this
241:30 - to another or something like that that you know we'll see all right so enter positive integer
241:44 - and another one eight
241:48 - there we go so what i was saying is if i wanted to change you know some little things that might
241:56 - not be central even if it gave an error it shouldn't stop you all right but this case yeah
242:04 - casting it as an integer and adding it we're fine if i cast each as an integer and then i went to
242:10 - divide it would give me an error oh but i didn't want to worry about that for right now we're
242:18 - defining them as integers we're just adding we'll cross that bridge when we get to it
242:22 - and we can get input and cast it on the same line so notice just open parentheses there we go and
242:34 - i'm going to do the same thing here i'm going to copy this whole line
242:40 - because that's really what i want to do
242:44 - all right now here's one where i really don't need to do anything else but supposing i just
242:50 - change that to another now just the way i have it
243:04 - see it actually just tested a bunch of these things because you know that's part of the line and
243:11 - part of the line and you know i really didn't need to change that word it so it'll tell me hey
243:20 - your into your input should be this now my point here is this will not prevent you to go
243:27 - from going on to the next step so you know maybe that's it maybe there's some something little
243:33 - in there that like why why did it say it was never it looks correct or something like that
243:39 - and maybe you're watching this video because that's where you were stuck it should not prevent you
243:44 - from going on to the next step and in fact you know that's fine you can say all right i see what
243:48 - what was different i'm not worried about it on to the next step but if you wanted to you say oh
243:54 - okay well maybe i just should have just said this you know you could always go back through and
244:01 - check it and then see there we go and then and then you can make your change so the whole thing
244:11 - is that this is supposed to be just you know a teaching tool check your code and then you know
244:18 - move on but you know not to get you caught in something that you know is preventing you from
244:26 - moving on all right now as i was mentioning about dividing casting things as a float so the float
244:34 - number allows for decimal places and most of the time i'm just going to cast things as a float
244:40 - anyway because just in case somewhere along the way i need the decimal places there's only a few
244:46 - situations where i might definitely need an integer certain simpy things to display we'll get to
244:55 - that soon enough and counting but other other numbers that i'm going to do math to it i'm going
245:03 - to cast it as a float okay so again prompt and then cast as a float we're really just going to do
245:13 - the same thing and that's okay you need you know if you copy you need to know what line to copy
245:19 - and need to know exactly where to put it but there we go and we don't need to change this enter a
245:26 - number enter a number and see now we will divide so i definitely want them to be floats because
245:33 - i didn't even say integer i just said a number so this is going to work no matter what somebody
245:38 - enters in and then when we take a look then you see it's waiting for us so i will do enter number
245:48 - three enter number four and 0.75 which is perfectly fine because they're float numbers there we go
245:59 - good times all right so order of operations and yes python knows order of operations
246:07 - so in case you forgot you know here's the acronym PEMDAS
246:11 - uh parentheses exponents multiplication and division addition and subtraction so
246:21 - you can and then remember the python syntax for exponents is the two asterisks so in this case
246:33 - what i wanted you to do is test your knowledge of order of operations we're not even worried
246:38 - about actually writing code here then you're going to put your answer here but don't don't
246:48 - really think about the code see if you can do this in your head what would this actual answer be
246:53 - and then you're going to put that here well you're going to put that here for your answer and then
247:00 - when you run it python is going to calculate the actual answer and your answer and then you'll see
247:05 - you'll see all right so let's look at order of operations everything in the parentheses first
247:12 - and then multiplication and division as they come up so
247:20 - uh four times two and then we have 14 divided by two so you can actually go back and forth
247:27 - multiplying and dividing all day so as they come up four times two is eight and then 14
247:36 - divided by two is seven so then we're going to have one plus eight minus seven and so one plus
247:48 - eight is nine minus seven is two so then we take two now we're done the parentheses to the exponent
247:56 - two to the third power is eight and so there you go put your answer in there
248:06 - and there we go actual answer is eight your answer is eight code test passed
248:14 - okay so all these things and remember you can just like the other ones you can do all this you can
248:23 - put print statements you know all whatever math you want just straightforward math in a print
248:29 - statement python will do that for you so those are some simple calculator tricks you can do
248:37 - okay so remainder remember when we divide something that does not work out evenly we have a remainder
248:43 - and the modulus operator looks like a percent sign but if i'm using it in the code
248:51 - it tells me just what the remainder is there we go so as i have the directions here 10 divided by
248:58 - four is two but with but as a remainder so two and then two left over so 10 modulus four
249:10 - would give me two because that's the remainder or 14 divided by six will have a remainder so
249:18 - so if i do eight a modulus b and again it's the percent sign on most keyboards it's on the same
249:27 - key as the five but you have to hit shift so 14 divided by six now let's take a guess 14 divided
249:33 - by six is two with a remainder of two so that's what we're expecting to see the printout
249:41 - printout there we go now actually we could we don't need to do this but we could you know show
249:53 - well supposing if i had 15 divided by six so six times two is 12 so there'd be three left over
250:04 - and so a modules b would be three if you wanted to you can test these out because
250:12 - this particular code is testing did you do it correctly here so if you wanted to go back and
250:17 - try some different things whereas then if i go to 18 that works out evenly so the modulus would
250:26 - be zero there there would be no remainder and we can use that to find factors so we'll have an if
250:37 - statement here so if i have 20 modulus five so that's 20 divided by five is four works out nicely
250:51 - so 20 modules five the remainder would be zero so if that zero which it is then that means five is
251:01 - a factor so you see we're using the double equals to test it so that's what we're going to do here
251:08 - we're going to walk through this and we're going to cast this times we do want integers because
251:14 - factoring really only works with integers if you know we can divide a lot of things but
251:22 - you know if it's a factor there's going to be a nice integer in there so i'm going to just
251:29 - enter an integer so input cast it as int and that's going to be our number and then here
251:35 - next one enter an integer to see if it's a factor and again cast that as an integer and that's going
251:42 - to be test factor because i don't know if it's a factor yet and in the if statement i just have if
251:51 - number now remember whatever this is if it's true it's going to do that so if number exists which
252:00 - it will then it's going to do this but we're going to change the next line so what do we want number
252:09 - modulus test factor and then now if that divided by that gives you zero
252:26 - then we can say true it is a factor and then or else it's false
252:32 - it's false so there we go and enter an integer so let's do one that doesn't work so if we have 11
252:46 - and five false
252:49 - and we can run it again and let's say make it 12 3 true so there we go showing how we can cast
253:02 - things and we can use that to test if something is a factor that that that itself might be useful
253:09 - but we're going to take that and we're going to build that into other things like this finding
253:14 - factors all right finding all the factors of a number so very similar to what we did but we're
253:20 - not asking for second input here we have the first input and then we want to find all the factors
253:29 - so now i have my for loop for test factor in range so i'm going to take this range
253:39 - let's look at this backwards here i'm going to take this range and if i just had one number in
253:44 - there it would start at zero but i can't have that because that'll give me a divide by zero error
253:49 - right away so i'm going to start the range at one and then end the range at number plus one
253:56 - because normally the range it won't do that last number so i have to add one and now to make sure
254:03 - whatever that number is i want to include that all right so now for test factor in in this range
254:12 - it's going to loop through everything every number in this range and one at a time like test factor
254:20 - is going to be one and then the next num next time through the loop test factor is going to be two
254:25 - so it will just loop through how for that many times yeah for every number in that range
254:35 - all right and this is what we're going to change the if statement so we want to say if it's a factor
254:44 - so number is our in is the original number we want and each of these test factors what do we
254:51 - want to do with it we want to say if number modulus test factor
255:01 - equals zero just like we were doing before we're just kind of putting it in an if statement now
255:06 - so i get this number and i'm going to loop through all these factors from one up to that number
255:12 - and i'm going to loop through all these factors from one up to that number and then if number divided
255:19 - by test factor gives me a remainder of zero then it is a factor so then i'll print it out
255:31 - all right so we run it and what do we have let's say 12 12 is a lot of factors
255:39 - and you see it'll print them all out 1 2 3 4 6 and 12 and we can run it again enter an integer
255:47 - supposing enter like 17 1 and 17 because it's prime so that's what we're doing just showing all
255:55 - the factors here this type of thing we will revisit this at another time to reduce fractions
256:02 - to lowest terms okay now what about prime numbers so a prime number is a number that the only factors
256:14 - are one in itself so we're going to and then anything that's not prime is composite so if i
256:24 - so if i have you know five is prime because the only way you can multiply to get there is one times
256:31 - five but six as one you can do one times six but you can also do two times three so you because
256:38 - you have those other factors it's composite so here now we're going to have same input
256:47 - and again integers because we're looking at factors and i'm going to start out with this
256:53 - variable prime or comp say being prime and then same thing range now notice i started the range
257:06 - two because one will go into everything and that's not what i that's not what i want that
257:12 - does that won't tell me anything so i'm going to start at two up to and including the number
257:18 - again not including the number because this this this time it won't include the number i
257:22 - didn't add the one there because again same reason i didn't have one one and the number itself yeah
257:29 - we know that those are factors but i want to find out from two through any of the other numbers
257:35 - if it's a factor and very similar then if number we're going to do the same loop and you could
257:44 - always go back if number divided by test factor equals zero there we go because we have the same
257:57 - variables here you always double check just in case the variable names change or a slightly
258:05 - different way of doing things but yes if that test factor works oh see because this is test number
258:13 - so this would have given me an error
258:19 - and and that's the thing with with reusing code yes we know we're all going to use a lot of copy
258:25 - and paste because that helps you know if it's a whole block of code but be really careful that
258:31 - it is exactly the variables and everything that match up correctly so you know a lot of times
258:38 - people do too much copy and paste and then they're lost because things don't match up
258:45 - so this one we call it test number so if number divided by test number if that has a remainder
258:52 - of zero then that means that is a factor which means all it has to do is happen once and that
258:58 - means the number is composite and it's only prime starts out that variable is prime and it stays
259:06 - prime only if it goes through and we never get a factor here throughout the entire thing all right
259:14 - so let's take a look if we have this and enter a positive integer so let's enter one let's say four
259:26 - composite right because i can also do two times two and then let's enter one that we have seven
259:36 - prime and that way you can check all kinds of other things you know oh some huge number
259:43 - is it prime is a composite there we go and you know now that you have this you don't have to
259:52 - change any of the code when you run this it'll you know it'll uh test it for you all right other
260:00 - interesting things reciprocals so writing it in math it's the number flipped so i have this
260:11 - reciprocal of two-thirds is three over two you see it just flipped and then any whole number
260:18 - the reciprocal of five is one-fifth because any whole number it's understood that it's
260:24 - denominator of zero or sorry sorry denominator of one so that'd be five over one so then that's why
260:31 - it's one-fifth as the reciprocal and you can multiply a number by its reciprocal and get one
260:36 - there we go pretty good so and there we go zero has no reciprocal because it'd be divided by zero
260:50 - so we can write the reciprocal whatever the number is we can just actually flip it one divided by n
261:01 - there that's actually all you need to do to find the reciprocal
261:06 - and some of these might be decimals but nonetheless this will find the reciprocal for you
261:16 - and we see our output here enter a number and what if i have the number as
261:23 - um five see point two but that's the decimal equivalent of one-fifth
261:35 - all right so just putting this in there showing you what you can do with finding reciprocals
261:44 - other things we can do with the input is supposing i wanted to have an output like this
261:50 - and are two numbers separated by a comma oh well now but i want to test each of these numbers
262:00 - so i can split it so this i'll store it as the variable nums still didn't cast it as anything
262:08 - and then here this is actually going to be an array in this case with two elements it's going
262:14 - to split it at the comma and then now this array sp has two elements so i have sp0 the first one
262:25 - i'll cast that as a float and then i have sp1 so that's it you know asking for it to be separated
262:35 - by a comma split the input and then then cast each of them separately so sp0 and then sp1
262:45 - and notice the code here just says cast it as a float so float remember to close the parentheses
262:54 - over here there we go and then what do we want to do and that the directions here are then divide
263:07 - the two numbers so that's why we cast them as a float divide the two numbers and we have a divided
263:15 - by b all right so there we go split it cast it and in this case then we're going to divide
263:29 - okay so and our two numbers separated by a comma and let's see how about we do
263:34 - um this one will be a repeating decimal of eight comma nine
263:48 - there you go i'd notice if you have just one number repeating the fraction equivalent is
263:55 - that number over nine so point one repeating would be one ninth point two repeating would be
264:01 - two ninth and this one eight over nine so there we go okay now this is building up to something here
264:14 - is building up to you being able to factor square roots but let's talk about square numbers first
264:21 - so factor multiplied by itself is a square and it is kind of like the area of a square you know both
264:32 - sides would be the same or all sides would be the same so when i do length times width to get area
264:37 - they're the same and so is that number times itself and we would use the exponents that to
264:43 - the second power okay so all we're doing here is you know we're taking a number and then
264:53 - getting the square so in this case it's going to take the input as n and we're just going to square
265:05 - it there we go okay there we go number square all right five i'll put 25
265:19 - okay so let's go the other way square root function so anything to the second power
265:26 - it's squared but what if i knew the result and i wanted to square root it so if i knew the area
265:34 - of my square yard but i want to know what's the side side measure so we have sqrt and that's the
265:45 - first thing we're encountering here that is not built into python so we have to import the math
265:50 - library and this is where colab really helps you out because a lot of times you might have to go
265:57 - through some other things to install things you know in other notebooks the colab notebook import
266:04 - math and you don't have it behind the scenes it works you just have to have the import statement
266:11 - all right so a number to find the square root definitely going to cast as a float
266:18 - all right and how do we get the square root of that once we import it it's going to be math dot
266:23 - sqrt and we call it a number n
266:32 - especially you know think even if things don't come up automatically just you make sure
266:37 - open parentheses one two close parentheses one two we got it so we're going to enter a number
266:44 - and we see here and remember to find the square root so we'll do one that works out evenly how
266:51 - about 16 square roots four and we can do another one that doesn't work out evenly how about 21
267:04 - and it'll give you a bunch of decimal places
267:08 - i remember yep so 4.5 yeah about there we go okay
267:14 - okay other cool functions the floor function this is another one we have to import math to use it
267:24 - so the floor function so we have a floor function which just drops any decimals
267:31 - and there we go drops any decimals and sometimes called integer part or the greatest integer
267:38 - so even if it's like 3.9 it's going to drop and just go down to 3 the uh we have the floor function
267:49 - we have the ceiling function which as you can imagine if floor drops all the decimals ceiling
267:54 - is no matter how many what decimals are even if it's 0.1 it goes up to the next number and then
268:00 - round the one we use possibly most often round remember 0.5 and above rounds up and point
268:09 - anything less than 0.5 0.4 and down rounds down so we're going to look at the math that floor
268:17 - function here all right enter a number decimal place and we're just going to practice doing the
268:22 - math dot floor function here math dot floor of n so enter a number with decimal places so i'm going
268:35 - to call it 5.99999 and when i hit enter yep and that's the floor function even if it's 0.999
268:45 - drops down to five so there we go and remember supposing you went back and said oh wait floor
268:58 - you know i'm upside down ceiling function supposing i wanted to do that then all right so
269:07 - um 7.1 because that should round it up to eight and so that code works but because that wasn't
269:19 - what these directions are it'll tell you oh you should include math dot floor and again if you
269:25 - end up trying different things it doesn't prevent you from going on but if you know either if you
269:31 - either if you spelled it wrong or something or you did something different it'll tell you there you go
269:37 - floor and go nine point three
269:48 - right good drops it okay so we're going to put some of this together finding square factors
269:56 - all right so a few things we've already done we're going to import math and what we're going to do is
270:03 - we're going to enter an integer to define the greatest square factor so
270:12 - i'll call that max factor and right now it'll be one and then the upper limit so notice we're
270:21 - stacking on these functions here uh the math dot floor of math that square root of n
270:29 - but then we're going to add one to it so we want to find the greatest square factor so whatever
270:34 - number you enter it in we're going to square root it that's going to of course have some bunch of
270:40 - decimal places and so we could do the math dot floor and then add one to it now i realize that
270:48 - now i realize that i could have just done math that ceiling and then skipped the plus one i
270:57 - for whatever reason i did this i like it so i kept it but there we go that's why yes uh
271:05 - so that gives us the upper limit square root of that number and then but we really want the next
271:11 - number now what do we have now in my range from one to upper limit so and remember this upper
271:23 - that was the square fact the square root factor i square rooted it first so for maybe factor in
271:30 - that range so it's going to go through and maybe factor is going to be one and then it's going to
271:37 - be two it's going to be three you know up to this upper limit so if n modules maybe factor squared
271:50 - equals zero so that's it these these factors if i square them is that a factor can i can i divide
271:58 - that out and if that is then max factor you see it's not going to be zero what's it going to be
272:08 - you know that's and that's the idea with some of these change one line so if you go through and
272:14 - think about what you're doing then we see yep i'm going through this range and maybe factor is it
272:22 - and then finding square factors if n divided by maybe factor squared if that gives a remainder
272:30 - of zero then max factor equals maybe factor so that's what we change there we go
272:43 - so and again knowing that these were the square rooted so for our purposes here
272:54 - we're just printed out squared
272:59 - so we'll see this here so if i have something like 12
273:04 - all the greatest square factor is four because two you see it prints out square two squared is four
273:15 - that and that's a factor of 12 three squared is nine does not work out to be an integer
273:23 - here okay so here we're going to build upon that code and then we're going to have
273:36 - all of this
273:39 - because when we look at factoring out square roots that's kind of what we're building up to here
273:45 - when you have a square root that doesn't work out perfectly but yet you can factor it a little bit
273:52 - that's what we want to do here so i still have get the same integer same upper limit and i just put
274:02 - all these variables equal to one because we'll change those square root max factor other factor
274:08 - all right and then take a look at what this is doing same thing right because i still
274:15 - got that same upper limit and so still maybe factor is going through that range
274:23 - check for square factors just like we did before
274:29 - and then
274:32 - there we go and in this case max factor equals maybe factor squared
274:37 - squared there we go and then other factor is n the original number divided by max factor
274:50 - so
274:54 - there we go so what we have is the result is going to be that original number n equals
275:02 - this times this and we're just looking at how that divides out so in this case
275:15 - you don't need to change anything because i i thought that this was a little bit you know
275:21 - a little bit complex to try to follow like what what i was thinking through so i didn't
275:27 - through so i didn't didn't want to have you have to change anything and just take a look at what's
275:32 - going on here how we're dividing that out and then when you run it so if i enter an integer
275:40 - to factor maybe i'll do the same 12 here see 12 equals four times three or if i do this again
275:49 - let's say 50 50 equals 25 times two and again that first part is a square factor
276:02 - so now
276:05 - there we go the last four steps prepares you for this so factoring out a square root this is kind
276:10 - of what we want 12 if we look at the square root of 12 is four times three so then since four is a
276:21 - perfect square the square root of four comes out and it becomes two root three and that's what we're
276:26 - kind of building as we're building this code to do is this whatever is that square root number
276:33 - i'm finding the greatest square factor and then that comes out because the square root of four is
276:39 - two two is on the outside now all right and in doing this we're going to import math because
276:47 - we have square root and for our final output we're going to import simpy and symbols because that's
276:55 - going to give us a nice output at the end that looks like this so that's the thing you know
277:01 - that's the thing you know python outputs a certain way and then if i wanted to output
277:06 - that looks more like math symbols that's what we have symbolic python using our math symbols so
277:17 - similar input without the radical and our square root factor using those same variables
277:23 - dividing these same type of thing where we're finding maybe factor and then max factor
277:37 - now in this case i kept it like this maybe factor squared so the max factor squared
277:44 - max factor squared and then we divide so now we do the output so i am going to square root it again
277:57 - yes and i realized that up here there's maybe factor squared and then down here i'm square
278:03 - rooting it again and the key is casting it as an integer because this will be an integer at this
278:11 - point oh did not want to do that there yeah because this will be an integer at this point
278:23 - casting it as an integer
278:27 - okay so that's the square root and then remember other factor out here was my original divided by
278:38 - that max factor and if there's anything left over other that's other factor down here i'm casting
278:46 - that as an integer and you know that's it i'm just taking this other factor but casting it
278:54 - as an integer and you see that you can do that with variables so now it's now it's an integer
279:02 - and now the output is square root which was this variable up here times simpy so this simpy dot
279:15 - square root is different than math that square root and using this simpy output i want that to
279:23 - be my last i want to be that to be my last thing is this output so down here after it does
279:35 - this for the test that's why output the word output shows up here we store it as this here
279:41 - but notice it's not a print statement it just says output and the last thing just says output
279:45 - and it will display it so these types of simpy displays sometimes just need to put that there
279:52 - output as the last thing
279:57 - okay so what do we have uh let's take a look at our um
280:05 - let's take a look at 50 as we were talking about before
280:12 - so and just because this came first that's why it says test passed here and then we see the output
280:20 - but 50 factors out to five root two
280:28 - and if we run it again then we have you know go back to our 12 12 is two root three
280:38 - and we can see how we can factor out these square roots
280:42 - so there we go this is now one of the things that you can do
280:49 - and this would be a bonus we could do this later is we already talked about functions
280:54 - you could put all this in a function
280:59 - you know all you know you don't need to the testing part but the output you could put this
281:05 - the testing part but the output you could put this all in a function that would factor square roots
281:13 - for you so just like you have math that square dot sqrt to output the number which may be a
281:21 - decimal you could actually make your own function that would do all this and then output a radical
281:28 - you know like this so some interesting things that you can do and that's kind of what i wanted
281:34 - you to see the build-up of this and how we can use these you know loops and factors and do this
281:41 - to factoring a square root which is something that's you know pretty interesting in math
281:46 - useful for some math you get into and then you can write code to do it
281:52 - all right here's some rounding just interesting things so if i just say round it'll round it to a
281:59 - whole number if i have something like this if i round comma and then have a number that'll tell
282:07 - me how many decimal places and if i have this round and it's a negative number that'll be for
282:14 - big numbers so that will give me that many zeros so there we go so first number rounded to the
282:25 - millions the second number rounded the sixth decimal places so and i do need to go back to
282:32 - my print statements print round and the first number six zeros so i have to make it negative six
282:47 - and then the second one print round
282:51 - be and i wanted three decimal places so it'd be three
282:59 - there we go and we can print so that there's my six decimal places and you see then you know
283:07 - i don't want it around to the next integer it already is an integer but i want uh 14 million
283:15 - 14 million 500 thousand rounds to 15 million and then the next one yep rounds to 007 of course
283:27 - all right there we go and fractions decimals and percents
283:35 - percents so we could see here and we've done some things like this before that
283:45 - here we're going to take the input as a string see i'm going to import math for for later take
283:51 - the input as a string and as a string every string has this built-in len which is the length of that
283:59 - string so i want to take the length of that string and then i need to cast it as an integer
284:09 - now remember the person who enters this in is going to put a decimal place so that's why
284:14 - i have to subtract one because i don't want that decimal place i just want how many decimal places
284:17 - without that dot all right so that's going to be the exponent and then now that i've done that
284:26 - now my input digits i'm going to cast that as a float so the numerator is going to be n times
284:39 - 10 to that exponent and i wrote it all out just to make it clear what we're talking about here so
284:50 - anything with three decimal places it's going to be times 10 to the third and move doing that is
284:55 - going to move the decimal place over and then my numerator is actually going to be an integer
285:02 - and the denominator is that 10 to the third oh 10 to the exponent
285:10 - oh 10 to the exponent there we go so there's my fraction and this is really what we're doing
285:21 - anytime we're converting fractions but now we're just writing code to make it easier
285:25 - so how many decimal places that's really what this is essentially doing here
285:29 - how many decimal places am i talking about and then that number times 10 to that those decimal
285:35 - places 10 to that exponent and the denominator is 10 to that exponent so then the percent
285:43 - because now that i have it as numerator denominator now i actually really can just
285:53 - go back to n if i want or i could put numerator times numerator divided by denominator whichever
286:00 - one but i could do n times 100 which it's always times 100 because it moves the decimal place over
286:11 - and so that's it that's the first two digits are there are your percent so n times 100 gives you
286:16 - the percent and we can run it so if i have somebody enters in something like point one two five
286:27 - five there we go so the decimal is point one two five the fraction is one two five out of
286:35 - over a thousand and the percent is twelve point five percent
286:42 - so there we go converting any input fraction decimal percent
286:48 - percent and this is where i was saying that you could you could define
287:00 - this you can define a function here where you can execute a block of code with one command
287:07 - so you know here's the function definition d e f and then the name of the function
287:14 - open and close parentheses that may take input but they don't have to and then input indented
287:22 - four spaces one two three four so d e f name of the function colon anything in the function
287:31 - it can be as many lines as you want and it can have comments just indented four spaces
287:38 - and then there you go here's one something outside the function and then that function
287:43 - is defined and then it's
287:52 - it's then called it it won't do anything until it's called here
287:58 - so i could have this function definition and if i took out this line it wouldn't do anything
288:04 - again so now it'll have this is outside the function then it'll print this is in the function
288:15 - and then back outside the function
288:19 - there you go now change the name and remember to call it so
288:25 - there we go and then we want to run it then change the name to fun
288:30 - because it can't spell function without fun
288:36 - so if i just change the name i'm gonna call it fun and now i'm gonna call the function
288:46 - so that's what is the function call is when i you know when i tell all right let's run that function
288:51 - now there you go same thing to show you how to define a function and then call the function
289:02 - and then here's one with input
289:06 - so it can take input any input we're going to call an argument so there we go
289:14 - um now right here it's telling me that it's uh you know called greet a function called greeting
289:23 - it's going to take this input which will store its variable name that's within the function
289:27 - here and it's going to print hello whatever the name is now here outside the function so notice
289:36 - at the end of your function skip a line at least one line so then that's the break and now this is
289:42 - definitely not in the function and then the input and casting it as a string which is it is a string
289:51 - and we'll keep it that that way what is your name and notice inside the quotes that slash n will
289:58 - indicate a new line so now when we run the greeting you see it's passed you know i take that variable
290:06 - and i'm going to pass that into the function so now that function takes input and then it's
290:12 - going to be this variable and then it'll do the greeting so here you go what is your name head
290:24 - hello there we go and now now that you see this working this is just changing the
290:31 - this because it's like remembering where these are
290:39 - so you know greeting and then when we call it i'm going to change this variable here
290:51 - there we go so we see you know where these variables are especially in a small simple
290:57 - function like this so then you see you know this variable how do how do i pass it to the function
291:02 - as an argument there and then in the function definition it's expecting input and doing
291:08 - something with it but the function of this should actually be the same go
291:20 - yep see all good and these functions which is kind of cool you could have more than one
291:27 - input so we have this so i can have multiple input in this function and then in this case
291:42 - you know do something with it well we're just going to add them all but you you could use this
291:46 - for any formula you have you see like i just made this add but you can use this for whatever
291:52 - formula you have make a function out of it so notice here you know the third i'll leave this
292:00 - as three and then it's going to expect three inputs a b c and then a plus b plus c
292:09 - c and now down here i have to call it with all three variables so now notice this variable
292:28 - existed before but then it just stayed there floating not doing anything and then we have
292:35 - here you know now that we have have this i'm going to call the function with all three inputs
292:43 - because the function is expecting three inputs and then it's going to do something with those
292:49 - and so there we go
292:53 - so we see enter a number and i'll enter a number
292:59 - and another number six another number seven oh because there you go five and six is eleven
293:06 - plus three is fourteen
293:10 - so there we go
293:16 - hey fun with functions now all the this function and the ones we had so far they included a print
293:24 - statement as a way to show output and that's good but we could also have a function with a return
293:32 - value so notice this function here then it just returns that that value
293:47 - and what that does is it returns it right where you call the function so notice that
293:52 - right where you call the function so notice this if we're going to take this enter a number
293:59 - you know there's our input it's the float i don't know stored as variable a so now
294:08 - what i print is your number multiplied equals and then right here
294:15 - it's going to be that function i call that function with variable a and that's what this is
294:24 - and it's just going to take it times two
294:29 - there we go
294:32 - all right so notice some of these you run it and then we're going to change something and then run
294:37 - it again so enter a number all right there you go 16 your number multiplied is 32
294:47 - so all we're doing here is changing the return statement multiply it by three instead
294:54 - everything else we actually can keep the same there you go enter a number 16
295:01 - enter a number 16 and it's 48 so that's the return statement is right where you call the function
295:12 - that's where the number shows up your number multiplied equals and then
295:18 - returns that so that's pretty useful sometimes because we want that to just be where you know
295:24 - where do i want this output to be right there and so we put the function call there
295:28 - so that's the return statements good useful statement here so we have all these different
295:35 - things we have all these functions we you know we're looking at factoring we're looking at
295:38 - solving some things you can even just solve for x and there we go x as the classic unknown
295:49 - now notice here we're importing simpy again or for our symbolic math and we're going to take
295:54 - it even further from simpy we're going to import symbols and from simpy solvers we're going to
295:59 - import solve so all these now i'll just define it here x equals symbols and notice it's just x
296:12 - in single quotes so that's telling us that we're going to use x as a symbol in math
296:18 - and the way that simpy solve works is the equation has to be equal to zero
296:28 - so at what i'm going to do all right well we'll see
296:35 - here's the output solve for x and i even have this here zero equals and then you're going to
296:40 - enter it in now what this does simpy has this built in solve and notice the output's going to
296:52 - be right here so that solve we know that behind the scenes it has a return value so solve that
296:58 - equation using the variable x and this is just like a subtle thing that we'll talk about at
297:09 - another time but this returns a finite set and for this we're going to say this is the first
297:17 - answer that we want equation zero so enter an equation and then this is going to output the
297:25 - answer there we go all right enter an equation and so if i have let's let's do like you know two times x
297:42 - minus eight so we can see that x must be four
297:47 - four and i'll put it there now if i didn't have this
297:59 - i'll do the i'll do the exact same thing two times x minus eight
298:07 - it just the way it displays it because it's a finite set now that also opens up the door
298:12 - to possibly if i put in something that had more than one answer i could do that and that works
298:17 - too if i have let's see i'll run it again so supposing i have now this will work
298:32 - even if it doesn't work out to a nice integer but i'm going to make this work to a nice integer
298:37 - x squared minus nine
298:39 - you see negative three and three it does have two answers and it'll output both of those
298:50 - so this one
298:57 - you know and
299:03 - enter an equation
299:03 - function x minus four so there we go
299:14 - if you didn't get a syntax error you're ready for the project
299:18 - so different things you can do so this is where we now can make make your own functions
299:26 - and this is where i leave it open to you how you could do this you know make your own functions
299:33 - like you could take one of these functions here like the factoring the square root
299:48 - yeah so you could take this factoring the square root and copy all of this
299:54 - and
300:03 - all right so as an example of something something you could do and down here you could make this
300:10 - a function so you could do
300:15 - this now what's interesting is you as defining the function here uh you could define it
300:27 - factor sqrt
300:32 - and we definitely want input and i'm going to make it n
300:39 - and i'm going to make it n so we could do this that
300:49 - it factors the square root and you could make each of these then you have to make sure
300:59 - you indent everything
301:02 - indent everything now since we're factoring square and we don't need that input then we can actually
301:13 - delete that and here we go use you know we can keep all these
301:25 - and this is the thing with a function
301:27 - is you do want everything to be and you can take out things like notice what it's doing in the loop
301:41 - there we go then this has to be indented
301:48 - and this has to be indented there we go and all of these divide up we can even keep these
302:03 - and we see that we have output okay
302:09 - okay
302:17 - all right and this part we don't need you know
302:29 - and what do we want to do we want to
302:32 - do we can backspace that
302:41 - okay
302:45 - yes this stuff does not have a test because this is so what you have is you can define that factor
302:51 - square root and then down here later we could try to call it factor
302:59 - square root and you know uh let's see 20
303:12 - yeah and
303:14 - and oh maybe I have to return the output
303:31 - it's actually kind of funny that just popped up but there we go
303:34 - so you see the output but because it's in a function we have to include that as a return statement
303:45 - all right so this is you know this is not the part of the function but everything else is
303:51 - and these are some things you can do because then you can you know different ways you can
303:56 - just define them in your own you know colab code cell with some text ahead of it you could
304:06 - you know you can make them all functions but that's the idea and then you could create a menu
304:11 - if you wanted to where you just have um
304:19 - which one you know what function should you run
304:22 - should you run you could do a table of contents there too and then that's the that's the project
304:31 - you're building this multi-function calculator you're putting all these things together into
304:36 - a colab notebook that you're going to be able to use and it's going to be your multi-function
304:42 - calculator and then as of making this video I can't tell you exactly where to upload that that code
304:53 - but hold on to it and then you'll see where to put it together for you know officially
305:01 - getting the credit for passing this part of the certification and then maybe on to the next part
305:06 - all right so hopefully this was useful you know how to work through this and
305:15 - how to put all this together into this certification project and you know we want it to be you know that
305:24 - there's more than one way to do all this so find find a way that works for you you know
305:32 - making your own calculator all right and we'll go on to the next project
305:43 - so with graphing a system of equations we're looking at really just graphing two equations on
305:49 - on the same x y axis and we want to see where do these two lines cross that's going to be the
305:55 - two lines cross that's going to be the solution to our system of equations so as an example here we
306:02 - have two equations and this one's y equals three x plus ten and this other one is y equals four x
306:09 - so let's say I don't know it's a place you like to go let's say costs you know four dollars admission
306:16 - so four dollars times x which is every time you go then y would be the total cost and then they
306:23 - have a deal oh well if you pay ten dollar membership fee then your admissions three dollars
306:30 - so there you have the the decision like okay well with this membership fee my admissions lower
306:37 - but when would these be the same price you know how many times would i have to go for these to be
306:43 - the same price so we want you know that's just one example of the of you know the use of this
306:50 - so i put these both in y equals because we're going to get into some other ways to solve this
306:56 - but we're looking at just how this graph plays out here so if i graph that y equals three x plus ten
307:02 - so without numbers here we're just going to estimate let's say 10 is here and you know that's
307:09 - how we plot begin at 10 and then up three over over one and let's just say you know it's something
307:16 - like this and let's just say that's the line and then we have y equals four x so there's no beginning
307:26 - it begins at zero but it's a steeper slope you know be at zero steeper slope and then let's just
307:32 - say you know it looks something like this and then they cross somewhere where do these lines
307:39 - intersect that's going to be the solution to our system of equations and let's just imagine that
307:46 - there are numbers here and it was you know somewhere around 10 so you know let's just say
307:55 - that that would be like 10 you know 40 something like that you know i see the invisible numbers on
308:02 - there so you see where these cross and depending on what you're using to graph you know it might be
308:10 - clearer to see might be harder to see but we can then always test it oh if i see it looks like
308:14 - that's where that's where these lines intersect we can plug that in does that work for each one
308:20 - so if x is 10 so it would be three times 10 plus 10 and then y would be 40 so our question is does
308:30 - that work three times 10 is 30 plus 10 is 40 yes that does work and then it would be the same thing
308:37 - you know four times 10 and y is 40 and then that works so that's how we would confirm it and if we
308:47 - were doing this you know old school plotting a bunch of points i could always put you know my x
308:52 - y table and plot a bunch of points i was using graph paper and what we're going to do though
308:58 - and the reason why i didn't worry about getting this you know these exact details this is not
309:03 - drawn to scale is because i want to just you want you to see you know the the way that this comes
309:10 - together two lines on the same graph my question is where do these lines intersect and then next
309:15 - we're going to look at the code how can i set up a graph how can i plot two points on the same graph
309:21 - and you know for whatever the answer might be however you know minute the fraction or decimal
309:28 - might be how we can find the solution each time so now let's take a look at the code so if
309:36 - you remember graphing one equation on a on a cartesian plane this isn't going to be that much
309:44 - different one of the big things though is we're going to use the numpy library instead of a loop
309:49 - so we'll talk about that more in a second but the first thing we need to do is import it here
309:55 - import numpy now you know this plt that makes it a lot shorter instead of writing that plot live
310:02 - dot pi plot numpy we shorten it you know it's just a little bit shorter but np seems to be the
310:09 - you know the common abbreviation so we're going to do that and you'll see np dot this and dot that
310:16 - throughout throughout this code so like before we are going to define our
310:22 - our range x min x max y min y max there we go and one of the things with the numpy array is
310:31 - instead of creating a loop like we were doing before what this does is this defines an array
310:38 - of x values and the first thing we need to do then is to find how many points i want to plot so
310:44 - i'll take these x values you know notice x max minus x min so how many values i have there
310:51 - and that should give me an integer number but i'm going to say 10 you know 10 times this number
310:58 - that's how many points i want that's actually going to be for linear equations you really don't
311:04 - need that many they it displays very nicely for anything with a little bit of a curve on it that's
311:08 - probably plenty and for some more complicated graphs you might do more than 10 so that gives
311:17 - me the number of points i have and just again based on these so if i change the window then
311:23 - this updates automatically and then here's where i'm going to define the array of x values once
311:28 - so using that library np dot linspace and it gives it takes the arguments x min x max
311:37 - and then how many points so there we go it's just going through these where am i going to start
311:42 - and and how many points in between and i'm just storing that as x because i'm going to use that
311:47 - as my x values hopefully this is looking familiar setting up you know the window size the axis
311:55 - for x and y and here's where we're going to plot line one so in this case i have y1 equals
312:03 - two times x there we go and what it does is that will take each of these x values rather than me
312:09 - needing to create a loop it'll go through each of these x values and plot them and then i have plt
312:16 - dot plot x and then y1 so here we go i have this and the second line i'm gonna do the same thing
312:24 - y2 equals and this one i took it beyond linear i just made x squared minus three just to change
312:30 - it up a little bit and so there we go that's my second y value and here we go what do i want to
312:37 - plot here x the x values and then y2 so there we go to find the x values and show the graph so
312:51 - when we run this there we have it we have our each axis that first y1 is a linear equation
313:00 - light blue line and y2 was the parabola now that's a pretty good parabola just to show you that if i
313:10 - had fewer points let's just say even two times this yeah that's probably low enough that you're
313:20 - still going to see this become choppy yeah wasn't that bad but if i really only have
313:27 - one times this then it really becomes a lot choppier because i'm only plotting every integer
313:35 - and there's a lot more going on here but you see how that linear equation yeah straight line worked
313:43 - out just fine but this one yeah so that's why just as a default i'll do 10 times that and so there
313:57 - we go and then to graph anything else all we have to do is change these y1 okay well how about if i
314:05 - oh okay well how about if i make this like negative negative 3x i'll just leave it at that
314:15 - oh because
314:19 - three times x there we go if you write it by hand you know doing the math often you know
314:26 - you forget the multiplying so that's the key python syntax you have to remember there you go
314:32 - um and let's take a look at this and maybe we'll make this one um
314:40 - there we go just to the third power how about that so there we go another linear equation
314:48 - and this one here cubic and we'll run this
314:56 - there we go and we see
314:57 - you know even this yep the curve looks nice
315:02 - so there we go all you have to do is change y1 and y2 and you actually can graph more than more than
315:07 - two but a lot of times we're going to do linear equations and have two lines on the same and our
315:13 - questions where do they intersect so there we go numpy and use that now that we've worked through
315:27 - the core skills in this unit let's look through some extra problems and i'm going to work through
315:33 - extra problems using the colab notebook so you can see how you can apply these resources that
315:38 - you're building and use these to solve problems that might come up in a textbook or in day-to-day
315:45 - life so we're going to go through some more extra problems here okay so i want to show you just a
315:50 - few other things you can do with graph with graphing and one of them is shading in between
315:56 - lines or just in general above and below so if you have an inequality you can shade above the line or
316:04 - below the line we see we don't need to import anything different this should look familiar from
316:09 - the graphs you've been doing set up x min and maximum how many points and then you know linspace
316:16 - for your array and we've been doing this before here's the line and then we're going to plot that
316:23 - now this one if you're doing an inequality you could also add the other argument of making it
316:30 - a dashed line but this might be hard to see this line but here's the twist here the fill between
316:38 - so we're going to say from x at still the same x values and then the fill between is between these
316:48 - two y values from y1 up to 10 and you could define that as a definite number 10 you know we've
316:55 - already set our maximum or you could actually say up to y max like that's another way to do it and
317:03 - this one we call it you know we want to make this red so that takes the other argument python will
317:09 - give you a default but you know you can define these and that makes it a lot better so there we
317:14 - go the fill between same x value and then you have the range of y values that's the way that's going
317:20 - to work and we'll do a few lines here we'll make make some art so line two you can see again the
317:28 - familiar define the line and then plot there we go but then we're going to do the fill between
317:34 - between that x and y2 and y1 so you see you can define it even you know this one i'm going to go
317:42 - up to the top this one i'm going to go up to the other line and then we're going to do the fill
317:50 - line and here we go so fill line three very similar and there we go each of these i'm defining a
318:02 - different face color and this one's going to be green where am i fill in between i'm filling
318:09 - between this one that we've defined up here y3 and y2 so that's so these are just these two line
318:15 - are just going to be a band and here we go i can do this one between uh graphing another one and
318:24 - notice all these are just simple linear equations to show you this and we're graphing between these
318:29 - two so what happens when we run this so we see we get the first one from that line up to the top
318:37 - and then from there to there from there to there and there we go so if the second one if we had
318:48 - let's say all right we see this red we see this yellow so if the yellow one instead of ending it
318:55 - there i went up to y max it would just overlap and i know you might be you might have been
319:08 - thinking hey you might have might turn orange you know yellow yellow and red but actually
319:13 - it's the order of things that it graphs this that was red but then then it graphed this and then
319:23 - it overwrote the red and if i wanted to i still call it a line one but if i wanted to move that
319:35 - down here so now this is yellow and then this whole thing would be red
319:45 - and remember because the yellow started down lower so the red will go on top of that but
319:52 - but it didn't go down this far so the red didn't cover this so we see you know that's it
320:01 - you know the yellow line was x plus three and then the red line was x plus six so you still
320:08 - had that little gap that you know when the red went on it didn't totally cover the yellow all
320:14 - right but then we can you know y1 and now this one i definitely need to put this one back because
320:23 - y1 wasn't defined yet so you see it gave me that little error there so just i'll move it back and
320:30 - make this official before we go on to the next thing
320:35 - and we can see so since i've moved a few things around before we run it let's
320:41 - let's change something else here i was saying that we need we could do the dashed line so we'll make
320:48 - the red line and the yellow line the dashed line and it might be hard to see but we will hope you
320:55 - can always hope here so single quotes and then i'm going to make it a dash and i'll do the same
321:01 - thing with this one the other argument single quotes and i'll make it a dash so that those
321:06 - two would be dashed lines instead of a solid line it's hard to see it's a little bit but you know
321:17 - there we go and because these you know with the shading sometimes you might not even need to plot
321:25 - the exact line i mean mathematically you might just be in the habit hey i want to also show that
321:30 - line but the way it shows up on the graph you know it's not you see the dividing line it you know
321:36 - it's nice but sometimes you might say oh okay if i'm making some sort of art sometimes i might not
321:42 - want or need that extra line so there we go so there's some different things you can do you know
321:50 - draw lines shade above and below and you can be you can get creative with this and make all sorts of
321:56 - of all sorts of things and this is essentially you know what vector graphics are you know not
322:04 - you know defining each individual pixel but defining the lines that you draw based on
322:09 - equations and then that way you can scale things because let's say i wanted to scale that if i just
322:18 - change the dimensions of my graph i could scale this line with the same code in the same equations
322:25 - so that's the advantage vector graphics you can make larger things but with not much bigger file
322:32 - size because it's all defined on equations anyway so there we go some some cool things you can do
322:38 - with that other cool things you can create an interactive graph all right and with interact
322:44 - interactive we're going to set up some sliders this one's called interactive if you might come
322:49 - across some python code that defines sliders that actually uses the word slider that you know that
322:54 - works too but here's what we're going to import there we go in line and the inline part is going
323:02 - to get us to be able to adjust these sliders and see the effect on the graph right away
323:09 - so there we go and then this interactive widget so i'm going to define all the graphing notice
323:16 - is going to happen within this function so i'm going to define this function so again i made it
323:26 - a simple slope intercept so i'm going to define the function of m b and then i put another variable
323:32 - for zoom so notice all of your dimensions here are based on that variable for zoom
323:40 - and then we still have the points and the plot that's my y value mx plus b so now this function
323:54 - takes these inputs and here's the slider it's really the most of it is right here on this line
324:02 - is right here on this line so interactive plot now i can make that whatever variable i want i
324:10 - just decided to call it that and interactive open parentheses so the first thing is what function
324:18 - am i going to run and i made it f and the main reason i made it f is so that the line this line
324:26 - of code was not that long but there you go what function am i going to run and then let's define
324:32 - some ranges here m will go from negative 99 b will go from negative 99 and zoom will go from 1 to 100
324:42 - so notice the zoom i could make it really small and x min max you know i could zoom it all in
324:50 - it's still going to be square but i could zoom it really into just one in every direction
324:57 - or i could zoom it out to 100 and i could change that number as i see fit so there we go so what
325:03 - we have is this and when we run that interactive plot it's going to take the input from these
325:10 - sliders and then run this function so let's see how that works so a lot of times the default
325:18 - puts everything right in the middle
325:20 - so my slope is zero and b is zero so you might be able to see that the axis is black but this line
325:30 - this blue line is on there because it's a slope of zero zero what what happens when i move that up
325:35 - see look at that now i have a slope of three and as i move up b then it crosses the y-axis at a
325:45 - different place it begins right there now we see it starts right in the middle at 50 so i could
325:53 - bring this down and you see i can zoom in
326:03 - pretty cool and see this is what i zoom if i'm so zoomed in one every direction notice b was five
326:11 - so that's off the graph now i'd have to move that back now you start seeing it on the graph
326:20 - and these are some cool things you can do with your graph you can add this interactive
326:24 - even if you you know you're graphing all kinds of things you just want to change the zoom
326:28 - this is a nice way to zoom and you know you might see some things on other calculators
326:34 - where you can zoom and here's how you can write the code you can have your own
326:37 - graph that zooms in and out and you can adjust some other things so there we go some cool some
326:45 - cool things you can do and i just want to you know it's a good way to illustrate you know
326:50 - slope and intercept as they change how does the graph change you see and then i can make b negative
326:56 - and therefore across the y-axis down here and i can change the zoom you know all the way
327:05 - all the way so now i'm really zoomed out and it it looks like this might even cross it zero zero
327:12 - because it's so tiny it only crosses at negative three and my graph is so zoomed out but there we
327:19 - go some interesting things you can do with zooming and you see that just you make that
327:26 - interactive plot and then your function all the graphing happens in that function
327:30 - okay so here's another interesting way to graph we can actually because all this math is going
327:37 - to lead you to working with data science so let's just get a little taste of it here that somebody
327:44 - else created this library this mediostat library for getting just some basic weather information
327:53 - um here's you know the weather information that they take time average temperature minimum
328:00 - temperature maximum temperature precipitation snow wind direction wind speed this is the wind gusts
328:11 - the maximum wind gusts air pressure and the amount of sun so there you go planning setting up your
328:18 - solar panels you can calculate the hours of sun at a particular place uh planning to set up your
328:25 - wind turbines you can calculate wind speed at different places and here's how this works
328:33 - this one you do need to install this and so we're going to run pip install
328:39 - install this and so we're going to run pip install and i just made that its own separate
328:49 - it's a its own separate code block and there we go we just see that this stopped running and
328:55 - that installed this so there's a lot of things already built into colab you might have noticed
329:01 - we've imported some things but didn't need to install anything this is a newer library and
329:09 - therefore it's not already built in so some of those newer libraries the install i mean it's
329:16 - really pretty straightforward pip install mediostat done so install that library now
329:23 - we can import it date time that was our i was already at python library but we just
329:30 - do need to import that and then now we still need to import this because we're going to plot this
329:38 - this data so that's why we import that and then the install enabled us to do this import
329:45 - these i've included the link here you know for all the documentation
329:52 - all right so here's how it works start we'll define these variables and they take this date
329:58 - time year month day year month day so i decided let's do like the first half of 2022 and
330:10 - so we have uh uh created a point now the point you create this is latitude and longitude
330:22 - so they don't have really built in like type in the name of a city
330:26 - you want to have an idea like let you know where you live you can find it like an exact latitude
330:31 - and longitude of where you are you can find latitude longitude you know somewhere you know if
330:37 - you want a particular city somewhere in the city so the example that you might see if you look up
330:42 - look this up you know somebody uh did this for british columbia so i changed it and did this for
330:50 - philadelphia so there we go so here's a point in the middle of the city and
330:57 - we can just get the data here so from that point so there we go data daily and then
331:06 - um there's my data point philly and start and end so there we go so we have this you know start date
331:13 - you know start date end date location and then collect the data it seems like this would overwrite it but
331:22 - this does work using the same variable data equals this data equals data dot fetch so there we go
331:29 - it works out and this one i just said hey let's just plot the average temperature so notice
331:35 - it looks very similar data dot plot and then down here we have plt dot show but there's nothing else
331:45 - we need to do it actually all the rest of it the dimensions and even some other things the way it
331:50 - labels graph happen automatically so there we go we just have y equals and then we're going to plot
331:56 - these three things so when i run it we see the average temperature there we go average min max
332:08 - so all these things we know in a previous video we were talking about you know how to create a
332:14 - legend how to label the axis and everything this already does all that for you and it'll just graph
332:21 - it'll just graph what you have here all right so there we go and notice the temperature is in
332:29 - celsius so there you go if you're in philly you're like hey it hasn't been 30 degrees here in a long
332:35 - time but yes this is celsius so notice it's going way above that yep june july pretty hot
332:42 - and then we can just change this that we can have temperature average maybe we'll we'll keep
332:51 - that and maybe we'll do one of the other ones precipitation prcp there we go so we'll graph this
333:12 - and we see so average temperature and then precipitation
333:22 - there we go pretty cool and we can see and of course then you know there there is another one
333:31 - here snow now what you can see is all right if there's average temperature below zero and
333:39 - and then precipitation then you'd expect hey maybe there's going to be snow but we can
333:49 - add that and you will see
333:57 - so there we go snow is in green and you'd think look at that average precipitation
334:04 - and there's precipitation and below average temperatures but no snow precipitation below
334:12 - average temperatures but no snow or below zero temperatures and yep it's kind of weird but it
334:18 - happened but just there we go here beginning january some snow february some snow and there
334:28 - we go that's it so interesting things you can do and you know even we were talking about having
334:37 - this on your you know having the colab app on your phone you could have you you could have
334:44 - something you know related to uh you know write write another line in here to get you know to get
334:50 - today's date or yesterday's date and sort you know use that as the end date and you know have your
334:58 - app and click on click on something run it and you know see the historic temperatures or snowfall or
335:04 - wind up till now if that's interesting you could do some other things with this so just some good
335:12 - things we can do with graphing and you see just getting a little bit of taste at how this is why
335:17 - python is so good for data science because a lot of people make these apis that you can just write
335:24 - a few lines of code and get the get the data you need and automatically graph it it's pretty
335:31 - powerful like that and you see the the graphing that we end up doing is the same you know map plot
335:37 - library so pretty good some some cool things you can do with graphing and uh we'll continue on the
335:46 - theme that you know next we'll look at solving equations and graphing you know all together
335:52 - which ends up being tricky but we'll show you how to do it okay so yeah take a look at this tinker
335:59 - with it you know set up some you know some you know weather weather report code for yourself
336:08 - all right
336:08 - okay now we're going to look at how to solve a system of equations even without the graph
336:17 - and you can still picture the graph the idea that that's that's what this is these are two systems of
336:23 - equate these are two equations two functions that you could graph but i don't need to see the graph
336:30 - to get the solution and sometimes for solutions that it might not be easy to see on a graph
336:35 - then you know maybe it's you know not in a nice integer solving this this is going to work each
336:40 - time so we're going to look at how to do this just on paper or on the board and then we'll look at the
336:47 - code on how to do this and set it up to be able to solve anything just change the equation
336:54 - so if i have these two equations one of the ways to solve this and this is some version of substitution
337:01 - is if we notice if this equals y and this equals y then they can equal each other then three x plus
337:10 - ten equals four x so we see that if that equals y and that equals y then these must equal each other
337:21 - three x plus ten equals four x and that's a little bit of the logic that's inherent in in all math
337:27 - so now we can solve these what can i do to solve for x i can subtract three x from both sides
337:39 - and then i get ten equals x now once i solve that x is ten well i want a point so that's my x value
337:48 - i need my y value and i can plug this in to either equation so i would take this and let's say i want
337:56 - to plug it into here so y equals four x then i could take that and y equals four times ten
338:06 - and that gives me y equals 40
338:11 - and then that's how we would get the solution we can set these equal to each other
338:15 - and then solve solve usually for x and then plug that in either one of those and then
338:24 - get our y value now this is very similar to how this is going to work out in the code
338:30 - one of the things that makes uh sim the simpy library and solving this with python a little
338:36 - bit better is this works out nicely when they're equal to y and you know that looks but if i had
338:44 - equations that were not equal to y or something like that with the python code what i would do
338:52 - and we would do the same thing with this is the idea that i would make i would want each of these
338:58 - equal to zero so i would end up subtracting y here so i would get you know three x plus ten
339:09 - and i subtract y from both sides equals zero and that's the version i'm going to want this in
339:16 - when i solve it with the code and then the same thing here you know four x minus y equals zero
339:26 - and then with each of them set equal to zero then you will see how that that plays out using the
339:33 - simpy library but that's that's kind of the method that python uses to solve so one of the
339:40 - advantages of this is they could be in whatever form they want whatever you have on the other
339:45 - side of the equal sign just subtract it over and then now you have two equations equal to zero and
339:50 - you can solve it so you know and there's many other ways to solve systems of equations but
339:55 - that's kind of the couple ways i want to show you you know this this type of factoring where you can
340:00 - set these equations equal to each other solve for one variable and then get the other one
340:05 - and then we'll take a look at it now so let's take a look at the code so let's start with the
340:11 - simplest way to solve a system of equations now this is especially for linear equations
340:18 - so you want to set each equation equal to zero but as far as algebra steps go that's fine it
340:25 - you know it doesn't have to be simplified just as long as it equals zero so here we're going to
340:31 - use simpy our symbolic math library and i'm just importing everything from simpy import everything
340:37 - so that's the asterisk there and we're going to define x and y as symbols so we see this
340:45 - there we go x y symbols and now here's the equation set equal to zero so first one here
340:56 - and the second one here then i just defined it as first and second and here's how we get the
341:02 - solution so this is the lin solve is the is the formula from simpy lin solve and it takes notice
341:13 - the extra brackets first comma second so it takes this as essentially an array of two different
341:19 - equations and then the next argument comma x y in an additional parentheses so it's using these
341:27 - symbols so linear solve these two equations because after each set equal to zero we can set
341:36 - them equal to each other and use these symbols and when you run this i already ran it and we see it
341:42 - comes out as a finite set now again the simplest way is there we go we set these and here's the
341:51 - one line that puts it all together you can just change you know change these two equations and
341:58 - run it and you know you see your answer it's pretty clear it's a finite set x is negative one y is
342:05 - three supposing i want it to look a little bit nicer so still importing everything from simpy
342:14 - and these symbols still have the same i'm going to use the same equations first and second
342:20 - now here where i have this solution here that's the same line but now i know that this solution
342:30 - variable is going to be a finite set but there's things i can do with that so i'm going to create
342:37 - another variable x solution here and i'm going to take this solution dot args zero zero notice it
342:47 - behind the scenes it's a two-dimensional array so i want the first thing and then the y solution
342:53 - also a two-dimensional array solution dot args zero one so having this i can print
343:02 - a coordinate pair so there you all print the parentheses x solution comma y solution the
343:09 - closing parentheses and then when i run this there we go it will print you know negative one
343:17 - three in parentheses and i can do other things with that now there we go so what if i also
343:27 - want to see the graph now this gets tricky because we can't graph the same way that we would
343:34 - that we would otherwise because going through loops doesn't really work with simpy of going
343:43 - through numpy doesn't really work with simpy but simpy has its own plot that we can use so there
343:51 - we go it doesn't work with the others but it has its own so from simpy dot plotting i'm going to
343:56 - import plot and so this is the simpy plot and slightly different way i declare these variables
344:04 - here var x y here then this one is similar to what we were doing set equal to zero ready to solve
344:17 - that looks pretty similar to what we were just doing same with the second equation
344:21 - and so this part i'm still going to go through the same thing you know get the solution get the
344:32 - solution get the x solution the y solution and print so this is what i just this is all the same
344:39 - what we just did before but what the other things that we can do is now that i have these and i know
344:46 - that these are equations set equal to zero now simpy syntax for something set equal to zero
344:55 - if i want to get it ready to factor so my y value for the first equation i call it y first
345:02 - so in simpy we're going to define this as an equation first and then comma zero means
345:10 - that's that first equation and i'm just spelling it out that it was set equal to zero we kind of
345:16 - need that so now y first is that set equal to zero and then y1 i'm going to make this variable y1
345:27 - which solves that first equation you see y first comma y so i'm going to take that here
345:39 - spell it out that it's set equal to zero and then do my algebra factoring i'm going to solve for y
345:44 - and solve for y and then store it as this variable y1 i'm going to do the same thing for the second
345:50 - equation so set it as an equation second the second equation is comma zero y second and then
346:01 - i'm going to solve it y second comma y i'm going to solve it for y so now that i have y1 and y2
346:08 - i can print them because that might be interesting so it's just going to give me these so i have
346:14 - y equals that i will display exactly comma and then here's the variable y1 zero and y2
346:23 - zero again because you know the index of the array so we have these that i can show factor
346:31 - but we were talking about graphing this so let's do that next but now i have i will display
346:37 - the solution i will display these you know y equals equations and now when i plot the solution
346:48 - i didn't just factor it to see that as y equals though that is really nice i actually usually like
346:53 - that but to plot the solution here see now i'm going to just reference x as a symbol
347:00 - as a symbol and then take a look at this i'm going to plot but notice nothing dot plot this
347:09 - is just plot within simp i plot and what am i plotting this y value y1 zero and this one y2 zero
347:21 - so there we go so when we factored it into y equals that helped us not just display the solution
347:31 - but put this into here that this is what i'm plotting these two y equals equations and then
347:38 - the x value notice also a little bit different the way we display x comma negative 10 to 10
347:44 - to 10 i could you know make these other variables but that's going to work out just fine for us
347:51 - so then when we run this i see the solution i have it as y equals i have that one is y equals
347:59 - and then i see the graph and we see where the solution is negative one three there we go
348:06 - so we can do this for you know any other ones here there we go let's just change it up maybe make
348:17 - it negative 2x you know i don't know minus two and maybe this one make this like two times x
348:27 - x and i don't know like plus eight change it up a little bit and so we have our first ones and
348:36 - we'll solve it print out the solution factor it show the y equals equations and then graph it
348:49 - and now we have this new one two six is the solution here are my two equations y equals
348:56 - two times x plus two and y equals x plus four so we see these two and how do we know which one
349:06 - the two times x has a steeper slope so that's got to be this one that's the bottom line
349:11 - and then x plus four the slope is only one so that's got to be this top line
349:16 - and we see that they intersect here at two six
349:19 - all right so we see how we can solve and we can solve and graph there we go and this works for
349:27 - linear equations for equations beyond linear we'll cross that bridge when we get to it which is going
349:34 - to be in the upcoming sections now that we've worked through the core skills in this unit
349:43 - now that we've worked through the core skills in this unit let's look through some extra problems
349:48 - and i'm going to work through extra problems using the colab notebook so you can see how you can
349:54 - apply these resources that you're building and use that use these to solve problems that might
350:00 - come up in a textbook or in day-to-day life so we're going to go through some more extra problems
350:06 - here so here again is where we're going to put together all the newer functions you've been
350:12 - learning into your calculator so that you'll have these as a reference and remember we already have
350:20 - where you should already have proportions set up so the text to show the setup and then the code
350:26 - to enter it in and solve your proportion and remember we made this a heading so we can minimize
350:33 - that there we go and we already did this converting decimals to fractions and percent so again all the
350:40 - code there and that's also section heading solve for x so each week you know you're learning and
350:49 - we're building and then we're going to take like the final product all of it put together so here's
350:55 - one if you just have a an equation you want to solve for x pretty straightforward we'll have that
351:02 - there and factoring so we can solve or we could factor you know factor out a common term or
351:11 - something like that we have we have that and each of these you don't need to use our interface
351:17 - because you just have this the solving solving for x we did put a user interface in there
351:25 - it's going to prompt for the input and then you see that the equation set equal to zero
351:29 - whereas the factoring one it's just this equation that you know there to put put it there and then
351:38 - simpy dot factor okay so that's also a section heading then recently we were doing things like
351:47 - solving for a variable so not just set solve for x but even if it's not a definite number to actually
351:54 - rewrite it you know like y equals a over b or something like that where you don't even have
352:00 - numbers this will do that for you and we defined a lot of our basic variables that we might use
352:09 - it's not going to be an error to put them in there and not use them but you could always if you change
352:14 - what variables you use you can always edit that part and then whatever it is whether it be
352:21 - the involving numbers or a bunch of letters and variables you know left and right side of the
352:28 - equal sign and then we have this then we're just going to define the variable so that way you can
352:36 - pick what variable you want to solve for set it as an equation remember we did this and then we're
352:42 - going to solve and this loop runs through all possibilities for s in solve for solution so
352:53 - we have that that we can solve for a variable like again it's already heading and we have that
353:02 - therefore in the table of contents so we're going to add the other things we've been doing slope
353:07 - intercept from two points because this in itself is a very common thing to need to do so we're
353:14 - going to define the two points there we go x you know x and y and then using just our slope formula
353:28 - solve for b we're going to get m and b and having those two we're going to print out the equation
353:36 - and then we're going to use that for the graph and you can keep this at these numbers if you want you
353:41 - know you could always change this x min negative 10 and we could leave the others as is but you
353:52 - could always change them to 10 in every direction if you wanted to and having those we have have
353:59 - these you know for the graph and the setup the details could always add other details or change
354:07 - these and you see for things that we might use we might want to see the tick marks so we have them
354:14 - there so you don't have to really think about you know the exact syntax hopefully the more you do
354:19 - this you remember it but it's just there and it's commented out so you can use it if you want
354:25 - and then that way here we just plot the function as a red line so even if you end up changing some
354:31 - of these you have a lot of things that are there by default that if you really entered in two points
354:36 - you could solve whatever you wanted to solve and graph it so we have that here let's make that a
354:43 - section heading then we can double click and remember it's this hashtag because it's in the
354:50 - because it's in the text not in the code now that became a section heading and shows up in the table
354:56 - of contents so we have that now the section heading goes all the way down to the next heading or the
355:04 - bottom so that one we can minimize now this one if we minimize it that's all the rest of the
355:11 - document here so besides that i might just want to graph something and remember in you know we use
355:22 - this the other code as you're building it remember the slope intercept stuff came from week five and
355:28 - then other ways to customize the graph came from some of the extra things we're doing in week four
355:35 - in week four where we have you know again all the different things we want to do with the graph the
355:42 - labels as well as setting the tick marks and this one you know we even customized the labels down
355:53 - here you know and added a remember we customized it and added this whole legend here but in copying
356:03 - this for yours we're going to put all these as well as the zoom that we were doing all in one thing
356:10 - so this function then does all the graphing and i'm going to skip down here for a second
356:20 - the slider remember that interactive plot we're going to run this function f and the only slider
356:27 - we're going to have is to zoom and that's going to be our multiplier from one to i just picked a
356:33 - hundred that's good and then taking that so whatever that multiplier is that will define
356:43 - what we have for our x min and x max and then once we have those we can define the points
356:49 - for our np dot linspace to graph and there we go and i just put this you could do the same just
356:58 - two lines as by default you know maybe you want to have two lines and then you you know you want to
357:03 - see where they where they intersect so this graphs two different lines and notice does not have to be
357:09 - a linear equation as long as you're using python syntax whatever line you want to graph and we
357:16 - i commented this out but again you could have it if you want to fill between shade above or below
357:22 - and i just happen to have this one fill between same x values so the y value goes from y1 up to
357:29 - y max so that would shade above and it would make it green and the next one fill between same x
357:38 - values from y2 down to y min and make it blue so that would shade below so again you could have
357:45 - these here in case you need them we're making these default notebooks that you can use and you say oh
357:52 - okay i do want to shade above or below uncomment it and then we have the labels general labels you
358:01 - can change now for this one i kept this the tick marks in there and the grid and notice because a
358:10 - lot of this is based on the zoom so then how many ticks do i want and what i did is i got the
358:17 - difference the how you know from x max to x min divided by 20 i tickered with this and that seemed
358:25 - to be a good number to display nicely so we're going to get that divide by 20 and then round it
358:33 - and then cast it as an integer so the number of ticks has to be an integer so then that was
358:40 - then that way no matter what the zoom is you'll see that we can adjust the tick marks and show the
358:46 - grid so this will give us a few things that we can graph you know this default and then let's see
358:53 - given these equations that we have in here a lot of times i like to keep an equation in there rather
358:59 - than just like make that line blank so if you run the code it works and you see something
359:04 - something so here we have this graph and we see the default zoom goes right to the middle
359:11 - but i could move this back down and you see everything adjusts the tick marks adjust
359:21 - the graph zooms in and then you can see you know or we could zoom out
359:27 - out and we see
359:34 - so yeah pretty good i like kind of for this particular graph i like it zoomed in
359:39 - and then you can see you know about where they where they cross so sometimes you just might
359:45 - want to graph something and there there we have that and there we go we could put more directions
359:54 - and you could have the whole every all the directions don't have to be the heading you
359:59 - could have that and you could put an html break right after that if you wanted to and then more
360:09 - words underneath that would not become a part of the heading
360:14 - but for this we can just put the heading here
360:17 - here we go i remember there's really no entering we just put it on a little line you just click
360:22 - somewhere else and now that's also a part of the table of contents so we have that and then
360:32 - solve and graph a system and this is nice it brings it all together solving it and graphing it so here
360:40 - you can put in as long as you have python syntax whatever you have there is your first
360:43 - and second equation and i even have an extra one here just to be able to uncomment and you can see
360:51 - this will even work if you have a square root just to have different ones to show you and we've used
360:59 - the linsolve before to solve uh using simpy the linsolve to solve uh two equations and this
361:09 - is actually another one non-linsolve i like this one because it can be lit i just put the comment
361:14 - in there it can be linear or non-linear it works out so just because you have non-linsolve does not
361:20 - mean that you have to have you know something different if one of your functions is linear
361:28 - but there we go the comments just so you know here's where you enter in
361:32 - and then you already have the code that you would have copied this one would have been from
361:41 - eight uh yeah from from uh the recent week to solve and graph you can just copy these and then
361:52 - tinker with them a little bit you know as we went through and built up to these important
361:57 - uh blocks of code you know take the last one that brings it all together and then
362:05 - over here you know that's what you're doing you're building your your library here so solving graph
362:10 - the system of equations and then this will work solve and graph pretty much anything and
362:16 - i just want to show you some of these
362:18 - so even if it's non-linear and you see it'll give you the solution x y this one happens to have two
362:28 - solutions notice because we had the uh the loop the four loop here to account for multiple
362:37 - solutions so it'll have the two solutions then also show the two y equals equations and then
362:45 - graph them so that's pretty complete that's a good good one you want to have this is this type of
362:52 - thing in your toolbox double click and let's make this one a heading there we go so we have that
363:03 - and i've added one more thing here and we could still make this a heading
363:10 - notice this code isn't complete but i put one thing in here they give you a reference point
363:16 - so you certainly you would recognize that that's import so that would go first and then
363:23 - you see this you would also it would be something you already graphed so the plt would already work
363:30 - but notice you have this dot save fig and you're going to give it a name dot p l t
363:35 - notice you have this dot save fig and you're going to give it a name dot png that's a good file type
363:41 - to use notice that'll come before the plt dot show and that actually works if you put it after
363:50 - i've tried this if you put this after it actually will save something but it'll be a blank graph
363:56 - and what's interesting is this download can come after so that's okay i mean you could put it first
364:02 - that'd be fine too but it can come after because it doesn't interfere with what this shows
364:08 - and this is a way to download this to your computer or your phone there we go save the output
364:14 - because sometimes you might have have something that you wanted to save so therefore you take
364:20 - this and you would put if you wanted to up here you import that and then and then definitely you
364:29 - you know you would just do save fig and files download so there we go and we have this now we
364:38 - have all of this and one of the things you can do is in the view you can collapse all the sections
364:47 - all right and now you have all these in your table of contents and you can just jump to them
364:52 - if you need to there you go you have all the sections collapsed and oh do i need to solve
364:58 - for x do i need to solve for variable you know i i like i like shorter headings so i might
365:12 - and down save graph and download it
365:20 - there you go because that's what it does is it downloads an image
365:22 - so already we have so much of the core algebra that you're able to do and you and you can write
365:31 - the code for it and now you have this at the ready so one of the next things we're going to do is get
365:39 - to quadratics and more complicated graphs we kind of hinted at that last one you know you might if
365:48 - if you haven't seen a lot of these and you say oh wow okay now this graph has a curve now it's
365:53 - getting interesting so we'll get into quadratics parabolas you know where all the graphs do have a
365:59 - curve to them and things beyond that so we'll add more to this all right but well well on your way
366:09 - to being able being able to solve a lot of algebra problems in python
366:21 - so when working with word problems not just here's a math formula solve it work with you know word
366:29 - problems or some people call them story problems that's when a lot of times people have trouble
366:34 - translating that into a math equation that we can solve so what i want to do is help you with some
366:39 - keywords that you can find in the word problems in the sentences that'll tell you what math operation
366:48 - to use and this is not all of them but this is a lot of the main ones and you know you get the trend
366:55 - with this these are the things you're looking for and then after we look at these keywords we'll go
367:00 - we'll go through a bunch of examples in the code and how to use these you know translating sentences
367:05 - into math equations but let's take a look at these keywords so how do i know if i'm going to add well
367:13 - some of the words are going to be if i just actually see plus some number plus another number
367:20 - more so if i have something and then i got more how much do i have now you know the amount of
367:29 - money i had increased it might even just be and you know i have you know these cards and those
367:37 - cards how many cards do i have received because a lot of times that's something added to what we have
367:43 - up something goes up and a lot of times calculating elevation up we're adding
367:50 - it might even just come up and say added to sum also and sum means the total when i add up so we
367:58 - might see some of we might see these you know the sum of three and four means i'm going to do three
368:04 - plus four so these are some of the ones if you're looking and you see these then you know you're
368:10 - adding okay and a lot of this it's not so exact that you could write a program to find a number
368:19 - find one of these keywords and then automatically translate it to a math equation so you have to
368:24 - use a little bit of your human intuition there but it it's very much in that direction see these
368:31 - numbers what which one of these words are around there and that's going to give you an indication
368:35 - of the path operation so let's take a look at subtraction so subtract yeah it might just say
368:41 - minus less anytime i have less than i'm subtracting or it decreased the amount of money in my bank
368:47 - decreased so i subtract gave because a lot of times things if i receive something that
368:54 - it becomes added to what i have or if i gave then it becomes subtracted from what i have
369:00 - down and that also goes again with looking at elevation it might even just come out and say
369:07 - subtracted and then anytime it says the word difference or i know i want to find the difference
369:12 - between two numbers that's subtraction you know we just find the difference and you know that might
369:19 - be a negative difference might be a positive might be absolute value but if i if it says difference
369:24 - or if i want to find the difference then i'm going to subtract all right so with multiply
369:32 - so how do i know that i'm multiplying obviously things are increasing like there are you know
369:37 - we want to look for that general trend things are increasing and just right away if you have that
369:43 - since things are increasing you know it's multiplying or adding so how do i know that
369:47 - it would be multiplying by just the word by because if i'm calculating an area of something
369:54 - three by five and then i've won't you know also then just seeing the word area but three by five
370:00 - means the area would be three times five of so just the word of is going to be multiply a percent
370:09 - of something you have the percent and then you multiply times whatever that something is
370:15 - factor because two things you multiply together are factors times so yeah three times four
370:23 - you know it might just come out and say times and even if it doesn't have these it might just give
370:29 - dimensions and say what's the area and anytime i'm calculating the area of something i'm multiplying
370:35 - so there we go again not this is not all the numbers that lead to multiply but this is a lot
370:42 - of the main one all right so divide out of so notice of would be multiplying but out of is divide
370:50 - so you know four out of five that would be a fraction four divided by five
370:59 - per same actually per pretty much means out of but that's another way to think about dividing
371:06 - of miles per hour i would divide miles divided by hours or kilometers per hour kilometers divided by
371:12 - hours quotient we don't see this word that often but that quotient means that i'm quotient the word
371:21 - means that i'm dividing and actually that's the answer when i divide any rate and as i was saying
371:28 - you know you know kilometers per hour or something like that but anytime i have a rate it's going to
371:34 - be some sort of dividing something divided by something else usually divided by something
371:39 - related to time but it's not always so anytime i have a rate i know i'm dividing something
371:45 - and again it might just come out and say divided by so you know some of the key words here now i
371:50 - put the word each here because that actually could go for multiply or divide it's the sense
371:58 - of it you know if i have if i have 20 students in the class and i want to give them two pencils
372:06 - each how many pencils do i need so then that's multiplying because i have to do 20 times two
372:12 - but if i have if i know how many pencils i have and then you know i know and then i have 20 students
372:20 - and i you know how many can i how many can each of them get you know if i already know that i have
372:27 - 20 and then i have 20 students how many can each of them get i'm dividing so each can go either way
372:33 - we have to get the sense of it and dividing like subtraction if i get the sense that it's getting
372:39 - to be a smaller number then i know it's dividing or subtracting you know and then we we can look
372:45 - further you know what's the sense of it am i is it something you know each you know i'm dividing
372:50 - it out among different things or is it just a subtraction okay so these are some of the main
372:57 - things and the one that carries over a lot is or some version of is are was but is translates to
373:07 - equals so that's where we get the equal sign coming into our equation and so if i have these
373:13 - then i can translate you know this is was will be something like that becomes the equal sign
373:20 - so looking at these keywords you know we get the numbers from the from the situation as well as
373:25 - these keywords and we can put together an equation and so i wanted to give you these keywords and then
373:33 - in the code what we're going to do is we're going to look at a lot of you know some sentences
373:38 - and translating them into math equations and then of course solving them that's what we want to do
373:43 - we want to be able to translate this you know you're not always in life going to have like here's
373:46 - the math problem it's going to be you know some words and we have to translate that to a math
373:51 - problem so let's take a look at how to do this let's let's apply these translate some sentences
373:56 - into math problems all right so let's take a look at the code so now let's put some of this into
374:02 - practice some of the math we've been talking about with the linear equations slope intercept
374:07 - especially and some of the python developing equations finding slope graphing all that
374:14 - let's put all this together and use that to solve some problems here and first let's look at how we
374:22 - can see that y equals mx plus b pattern for a linear equation show up in slightly different
374:29 - ways you know sometimes we just change out the letters a little bit but be able to recognize
374:35 - that pattern so if we take a look at number one and this all comes from the textbook the one that
374:43 - i have listed as textbook two algebra and trig so you know there we go page 304 you can find it
374:52 - find these because we're just going to pick a few of these and i want to highlight
374:56 - you know what we can do with these so if we take a look terry is skiing down a steep hill
375:05 - terry's elevation e of t that's how i'd write that that's the function
375:09 - um instead of just y equals we'll call it e of t elevation as a function of time terry's elevation
375:18 - in feet after t seconds is given by this so e of t equals 3000 minus 70 t and we see then you know
375:26 - instead of x we're using t because it's time and we have 3000 minus 70 t and then our y value is
375:34 - e of t that's the function and so we see the slow the intercept come first that's where we begin
375:44 - she terry begins at 3000 feet up and then goes down the slope at 70 feet per second so we see
375:53 - that that is the slope the slope of our equation on the slope and negative because that elevation
376:02 - is going down there we go so we can see the slope we can see where terry begins 3000 feet up
376:10 - um and there we go just uh finding that slope we just look at it and we take a look at number two
376:18 - now we have jessica walking home from a friend's house after two minutes she's 1.4 miles from home
376:25 - 12 minutes after leaving she's 0.9 miles from home what's her rate in miles per hour
376:30 - miles per hour well right here we have distances in miles but the times in minutes
376:38 - so if the question asks for miles per hour we definitely see also that we have two points we
376:45 - have a time and a distance and then another time and distance so you know x will be time y will be
376:51 - distance and having these two points we can go to our calculator now hopefully this lines up with
377:00 - something that you've already created you know remember we might have called it like your
377:06 - calculator and then hopefully you know then you would have created the table of contents
377:13 - for the different things that we want to be able to do and we can jump to here slope intercept
377:18 - equation from two points because even though the that question didn't ask for the full equation
377:24 - and everything we're going to do more but the first thing it's going to do is find the slope
377:29 - for us and hopefully you know that's it you know we have these formulas you made these now we can
377:34 - make use of it so you would have had all this and then we would just change x1 y1 so the y value
377:45 - is 1.4 but that x value it's two minutes and we have to remember so i already put this in here
377:51 - it's two minutes and there's 60 minutes in an hour so it's two out of 60 you could reduce
377:58 - this if you want but you don't even have to python will take care of that in the other in between
378:03 - steps and the y value 1.4 miles so the second x value 12 minutes so same thing 12 minutes we want
378:13 - an hour so it's 12 out of 60 again that reduces but you don't you don't actually have to and then
378:20 - 0.9 so having all this you can just put in these four values here calculate the slope intercept
378:29 - we'll print that out so you see the equation and then we'll also graph it i mean we're going beyond
378:35 - what the question is but this will give you an idea of some things you can do you already have
378:39 - this and all we needed to do is recognize what these values were put them in here and then we
378:46 - run it all right so this i absolutely would take this slope as three so sometimes just the way
378:57 - python calculates things it might be this 0.9999 it's three and if you really wanted to seeing this
379:06 - you know you could always go back and put a round function in in your code you know round it same
379:13 - with this you could always round it to two decimal place to one decimal place which would be 1.5
379:22 - but either way we see that remember our first point was two minutes after she left so at time
379:30 - zero at two minutes she was 1.4 miles from home but at time zero she's that little bit more
379:36 - 1.49 or 1.5 it might round so we get our values here and you know again you could put a round
379:45 - function in there but i'm not worried about that right now and also python it gives us this warning
379:52 - but it's still ran occasionally that happens just the the way it calculates some things
379:58 - some things you know we get a warning you know some value maybe not even related to
380:05 - what we were working on gives us this warning but it's still ran it still gave us all this
380:12 - and then we also have this graphed now if we have you know the x values or the y values so
380:21 - so this is her time from home
380:31 - so this y value notice it seems like this graph is completely irrelevant because the y value
380:41 - only goes down to net 9.6 we want it down to zero and then we have negative time values what you
380:47 - know what's that all about so remember mathematically a lot you know all these things already exist
380:55 - these values exist you know we make this equation here negative 3x plus 1.5
381:03 - but that whole equation exists so we can actually change the graph and one of the things we have
381:09 - you know later on in this document is you know we can graph you can always graph and zoom
381:17 - but we can just change the graph here and our x minimum if x is time we can just make that zero
381:24 - because negative time you know she was still at her friend's house so that won't affect the
381:30 - the walking and the x maximum i mean we can really zoom in now once we figured out that she was
381:40 - going three miles an hour and she only had half a mile to go like we can make our x value really
381:46 - small i don't know i'll maybe i'll just reduce it to five for this one and the y minimum
381:53 - um is zero and the y maximum i don't even need that to be 10 i can even make it i'll make
382:05 - it five but we don't even need to that much we can really zoom in on this because it's a relatively
382:12 - short distance all right so now when we have this now we have graph we can zoom in on and
382:24 - you know this is the only part we needed so we could look at this that you know about one and
382:32 - a half miles away and so therefore you know she's walking about three miles an hour it takes her
382:39 - about a half hour to get home and there we go we see you know the rate you know the slope the
382:48 - whole equation we see the graph and then we can graph the the trip home we could also always you
382:55 - know change these you know if you really needed to explain this you know to someone else you could
383:02 - always put you know x values you could change that to time y value can make it distance from home so
383:10 - there we go so we have these calculators that you know we're talking about it here i'm talking
383:15 - about it here a lot now but if you had this at the ready you might even just you might might even
383:23 - just you know see this oh i see my two values plug them in click run and you have your answer
383:30 - you know move on in a few seconds here so some things we can do here notice number three very
383:38 - similar and maybe we'll do number three you know a lot quicker a boat is a hundred miles from the
383:43 - marina sailing directly at it at 10 miles per hour so now we already know that equation because
383:52 - because it's a hundred miles away so that's where we begin at 10 miles or an hour and if we want
384:00 - the distance from the marina then it's a negative 10 100 minus 10 x so we could always go here like
384:10 - that's the equation 100 minus 10 x and we could always go to something else and we could graph that
384:17 - and see you know just the trend how long does how long will it take for the boat to to get to the
384:23 - marina there you go 10 miles an hour you might even be able to do this in your head that it's 10
384:30 - 10 hours to get there and that's the thing we have the setup for when the numbers get more
384:35 - difficult but sometimes you can just calculate it yourself all right and we take a look at some of
384:43 - these and remember a linear function we'll get into the other functions quadratics and things
384:50 - beyond that but a linear function has no exponents so there we go no exponents so we see six is
384:58 - linear seven is linear eight is not because we have x squared nine is linear ten is not we have x
385:06 - squared nine is linear ten is not we have x squared eleven we have y squared so that's actually
385:14 - not even a function like the ones we've been doing so that's another story 12 yep actually not a
385:22 - function like the ones we've been doing and certainly not linear 13 if i had x in the
385:32 - denominator then that would not be linear but with just a five in the denominator we're okay
385:40 - so there we go and increasing or decreasing we would just look at the slope if the slope's
385:46 - positive it's increasing if the slope is negative it's decreasing and remember the slope is that x
385:50 - coefficient so slopes four it's increasing 15 slope is five it's decrease it's increasing
385:56 - and 16 the slope is negative two so it's decreasing 17 it's negative three it's decreasing so we see
386:04 - that and just like we were doing with these other problems you just like number 24 there you go you
386:12 - could just plug these in two four four ten there you go run it and have your equation and see the
386:20 - equation and see the graph so a lot of these you know once you have the code down you know it
386:27 - becomes a lot easier there you go same thing a line if we have two points then yeah we put this
386:36 - in there all right now let's take a look at 37 so these two lines now we get into the system
386:46 - of equations are they parallel perpendicular or neither well one of the things we can do then is
386:51 - we can look at one of our other notebook sections and we can graph these two and see so let's take
386:59 - a look at this 4x minus 7y equals 10 so let's take a look at this and you would have this you know
387:07 - how about this graph lines and zoom in or out remember you would have made something like that
387:11 - too and we defined our function so that we can zoom in or out and we have two lines so line one
387:26 - i could just graph this now also so one of the things we can do to graph these
387:35 - if you wanted to is put it and this would be something that you would do you have to put each
387:40 - of these in the y equals version because they're not in y equals and that's how we have it set up
387:49 - to graph you see it's it's going to be y equals and they are going to be functions so we have this
387:58 - well let's go to another one solve and graph a system because this one does not have to be
388:09 - equal to y in fact we just make it equal to zero so i actually already put this in here
388:15 - four four times x minus seven times y and the only thing we need to do is make it equal to zero so
388:22 - that equals ten subtract ten from both sides you see much quicker much easier to do and then the
388:29 - second one seven x plus four y equals one just subtract one from both sides and that's what we
388:37 - have here so it underlines these but the moments we run it'll be fine so that works out really
388:45 - well because as long as you have to set equal to zero just anything on the other side subtract it
388:49 - over and remember you would have already made this hopefully and you know your first equation
388:56 - your second set equal to zero and remember we're solve then we solve it and we're going to get that
389:07 - solution and then we're going to also convert it to y equals here
389:13 - and then graph it print the y equals version
389:27 - and when we run it we see we have the solution and it's not even you know this is again more
389:35 - than the question asked but if we already had the code you know we can do this the solution
389:40 - and yes these are two very weird fractions that you know it would be a little bit tedious if you
389:47 - were calculating this by hand we get the solution and so we also see the graph these are not parallel
389:56 - or perpendicular and we see where they intersect at this value negative 66 over 65 so all you know
390:06 - almost negative one little bit off and then a fraction there and then we see the y equals versions
390:17 - four times x over seven minus ten over seven so we see this one has a slope of four over seven
390:24 - and this one has a slope of negative seven over four oh then they would be perpendicular despite
390:33 - what this graph shows so let's try to change this because the slope here is four over seven you see
390:45 - even though we're multiplying by x that coefficient is four over seven and then over here it's negative
390:52 - seven over four and that's what makes them perpendicular the negative reciprocal four over
390:58 - seven negative seven over four that if you multiplied them together they would be negative one so if we
391:04 - change the scale on this we can probably it'll probably look more perpendicular and
391:15 - so this just naturally scales it this way all right so we have but that's why because
391:23 - in this same window the y value goes up to 15
391:31 - so the you know it perpendicular this intersection would be at a right angle
391:38 - and the you know we just can't see that right angle because of the scale of the graph
391:44 - all right so that work i would work for any of these now you know 38 yeah pretty easy i would
391:56 - just add y to both sides you know subtract 12 on the first one and they're equal set equal to zero
392:04 - and we can use that same thing same with 39 maybe we'll do another one here
392:11 - here so we get
392:19 - yeah if we have this let's just do yeah we'll do one more here three y plus x equals 12
392:27 - so if we go back to this then i'll make the first equation then we'll have three times y
392:37 - y plus x minus 12 because that i would have to equal zero three will remember python syntax you
392:46 - have to put the three times y whereas algebra you won't see that multiplication symbol in there
392:53 - so three three y plus x minus 12 equals zero and then on the second one eight x plus one plus y
393:00 - y so on the second equation we'll have eight x
393:09 - eight x eight times x plus one plus y and see i don't even for these are as bad but
393:20 - you know for other ones you don't have to worry about factoring it as long as it's set equal to
393:27 - zero we will get the solution and then we're going to show the y equals version and then graph it
393:36 - so yep these do have a solution where a point where they intersect and notice they are not
393:45 - perpendicular because the slope is negative one third you know one x over three and this one the
393:53 - slope is negative eight so a steep slope at negative eight and also a negative slope but
394:00 - not as steep so they will meet at this point there we go so pretty cool solving a more complicated
394:10 - system of equations solving it factoring it graphing it remember if you have you know
394:15 - you don't build these calculators for yourself then you have it you can answer all these questions and
394:23 - some other things and so we see you know the similar things lines passing through and
394:31 - in any of these you could build for yourself you know a notebook section of code that will
394:41 - do this for two for two point uh two lines or you could actually go back to the one you had
394:51 - and you could use the slope intercept equation for the one line and then write it in
394:59 - later and then you could use the slope intercept equation again for the second line and then write
395:04 - it in so that's what we have here like this one you know you have this slope intercept and you
395:10 - always could then take it and you know copy that and write it in here as you know line one go back
395:22 - and do the other one copy it as line two so that you know that that's one of the things you could
395:27 - do if you wanted to you know take take something like that and have it actually do two instead of
395:37 - one but nonetheless you know right now as i have it it was it was two separate things you can
395:43 - get the equation and you could if you wanted to copy it into the next one
395:47 - so all these yep same thing two points you get the equation two points get the equation
395:57 - and there we go just looking at that equation you know parallel they'd have the same slope
396:03 - perpendicular then you could multiply the slopes together to get negative one
396:08 - and neither is anything else as long as they have different slopes so we see all these different
396:14 - things you can calculate and i'll leave this to you if you want to you know go through and
396:20 - practice some of these see some of these you don't have to have the full equation
396:27 - or you don't have to have the the note jupiter notebook or co-lab because if you remember the
396:34 - pattern that slope intercept equation here what's the y-intercept it's five you can see it and then
396:42 - for this particular one you can actually count you know oh wow look at that you know we go down
396:48 - five over four so the slope would be negative five over four so it would be y equals negative
396:54 - y equals negative five over four x plus five or if you wanted to you could just take these two points
397:03 - and plug you know go back to the notebook plug them in and see it generate the equation but
397:09 - see that that'll work for any of these you know having this you can count the slope like in 58
397:17 - so b is one and then from that to the next nice point it looks like you go up two and then over
397:25 - three there you go there's your slope so you can you know work on these
397:34 - so some of these again any of these you want to see a graph
397:38 - we could just plug any of these into that other notebook section where you see the graph
397:42 - the graph all right sketch a line
397:48 - good and again you can practice all these if you want the tables
397:56 - so really just remember x and then whatever you want to call it g of x that's the y value
398:01 - and so if i want the equation then what we want is we can just take the first two points
398:08 - and get the equation
398:16 - so that's you know x is zero y is five and the next one x is five y is negative 10
398:25 - and we can get that equation but then also if you wanted to you get the next two points
398:31 - and see if it's the same slope so that's how we would determine if it's linear i mean we could
398:40 - always just plot any of these points and and see what it comes out as so that's another way we could
398:47 - just plot these points as their own array and see if it looks like they line up you know that's
398:53 - another interesting way to do it and there we go so so yeah let me let me just show you how to do
399:05 - that on on one of these and so if the x values are 0 5 10 and 15 now what you can do is in
399:17 - in one of these where you're going to graph so if we have
399:28 - yeah here and we'll even keep the zoom in so one of these where you're going to graph we
399:33 - we have all this for the zoom but what you can do is you could make an array of the x values
399:47 - all right so we could get x equals and make it you know 0 comma 5 comma and you see 0 5 10 15
400:04 - and we can just make that the array 10 15 and then
400:12 - and then you could now we could just comment out all of this because we don't need these and
400:27 - and take this and this first one we could put you know comment out this and we could have y1
400:40 - and we could have y1 and put your y values 5 negative 10 negative 25 negative 40
400:55 - so there we go 5 negative 10
400:59 - negative 25 negative 40 so remember that you know that that numpy essentially does give us an array
401:12 - of values and we could just put our own array and if you wanted to in here we could also then put
401:25 - you know make them make them dots i'll say ro so we'll make them red dots
401:34 - for the points so we could have the x array have the y array and then that's what we're plotting
401:42 - there we go we just commented all these out and
401:45 - so we have this looks to be that they're in line and we can change the scale i like to keep
401:56 - you know yep it definitely looks like they're in a line
402:01 - so we could you know there we go we could say that yep that's that would be a line and you know that
402:11 - works that is linear so some some of these you might just notice okay does the slope change
402:19 - in in that table but also i wanted to show you for this or for this example i'm going to show you
402:26 - in in that table but also i wanted to show you for this or for you know this might seem like a lot
402:34 - to do for that little question but also just showing you what you can do if you have you know
402:39 - more complicated sets because all of these that you know this this is designed to be practice
402:46 - and just a few values just to show you but remember this is this is going to lead you
402:52 - toward data science if you want to continue following this path and instead of having like
402:57 - four values you might have like you know four thousand and so we want to know hey how can we
403:03 - do this we'll have other ways rather than having to you know write our own array rather to grab
403:11 - those values if there was like a thousand of them and then store that as an array and same with the
403:17 - other y values but then you know can i do this can i just take this and plot all these points and see
403:22 - what it looks like now these are the things we want to be able to do so you know there we go
403:28 - some some things you know and and it answers a very simple question is it linear
403:36 - because otherwise you know they might get some of these that the plot's all over the place and i
403:40 - could not say that they're they all line up nicely so that's it you know here's some of these you
403:47 - know missing values of a linear function and remember you can graph and actually introduce
403:53 - a table of values too if you wanted to so you know those are some other things you can do
404:01 - so we have these
404:06 - here we go and some of these
404:10 - we would have to put the slope formula so remember the slope formula is you know without
404:20 - looking at the code you know find the equation of the line goes to the points here without looking
404:27 - at the code the y values b plus one and then the other y values b so when we subtract that it went
404:34 - up one you see the y value went from b to b plus one but then look at this the x value is a and that
404:43 - didn't change so a minus a is zero so we have it's actually not a function but it would just be an
404:53 - x value x equals a so these are some of the things just you know plugging in these values for uh in
405:02 - the slope and you could always do some of this with you could define all of these values
405:11 - if you look at the the other one that we were doing here solve and graph now the you might
405:18 - have to comment out the graph probably wouldn't do too well but taking these and you know you
405:26 - you know you if you define more variables you could still take these and define these values
405:34 - again the solution might not be uh really possible but you could take those values and then you could
405:41 - actually solve and this solves it for zero but you could actually solve it for you know solve it
405:52 - for y or whatever value you want so simpy will do that for you so that's it you know you could have
406:00 - you could have a make another section in your notebook that just does all that interesting
406:04 - factoring all right so there we go and so we have some other ones here so so here's one um
406:19 - now this we have at noon the barista knows she has twenty dollars in her tip jar and if she makes an
406:24 - average of fifty cents more from each customer so remember that's an average so you might have
406:30 - customers tipping more some tipping less and then it averages out so these are good estimates
406:36 - because we would right away see the equation we begin with 20 and then it's an additional
406:44 - because we know she's getting something more 50 cents from each customer so it's 20 plus 0.5 x
406:54 - so we see that equation then we you know right away we have that 20 plus 0.5 x
406:59 - and we can do something with that we could like graph it we could find values
407:06 - this particular question we just says n more
407:08 - so it would be 20 plus 0.5 n you know we just change that variable and then at any point
407:16 - she can plug in a number for n figure out you know how many tips she has all right
407:25 - and this 115 these are some of the things that you know you can calculate
407:30 - a gym membership with two personal training sessions and a gym membership with two personal
407:35 - training sessions cost 125 while gym membership with five personal training sessions cost 260
407:42 - what's the cost per session so we take it as the membership itself is just one thing
407:51 - and then you could have like you know each of these so really we have our x value would be how
407:58 - many training sessions and then the y value would be the cost and so that's it even though you know
408:07 - we don't it's not asking us to graph we absolutely could go back to this and two sessions was 125
408:16 - and then five sessions was 260 so we could go back to this and back to the earlier one
408:24 - you know slope intercept from two points and we could say you know there we go two sessions
408:33 - cost 125 you know how many sessions and then dollar amount and then we have five sessions
408:42 - would be then 260 and oh now this we need to change this the x minimum now that's probably
408:53 - fine for five but let's take a look at this and let's see what we can do here so let's
409:02 - go up to 10 y minimum zero is probably fine but the y maximum and there we go maybe we'll make it
409:12 - like you know 500 we're going to go beyond that but that's fine and when we see the graph so we
409:20 - can see that we're going to go beyond that we're going to go beyond that we're going to go beyond
409:27 - that but that's fine and when we see the graph so we see the equation 45 x plus 35 so the membership
409:39 - itself must be 35 dollars and each session must be 45 dollars and so we see this graph then you know
409:52 - there we go you know and we see where we see the cost 45 you know almost halfway there
410:00 - and then we see the increase okay if somebody wants to plan you know what it's going to cost
410:05 - how many training sessions do i want maybe this is in a month the person wants like two in a week so
410:11 - it might be about eight in a month and can calculate oh there we go eight training sessions
410:17 - that'd be four hundred dollars or you know do i want to just try to just pay the 35 dollars
410:27 - and not get any training sessions and you know there we go then it's somewhere around here
410:31 - at the zero value and that's what we want we want to you know use these to be able to calculate
410:38 - some different things you know the cost like 116 here so the linear relation clothing business finds
410:47 - there's a linear relationship between the number of shirts it can sell and the price
410:54 - price p that it can charge for sure so there you go selling and shirts if the price is p
411:00 - and this is you know things that people want to find out because then that helps people figure out
411:07 - what price you know they definitely start out like can't you know go below a certain price because i
411:12 - have to make money i can't lose money but then beyond that we see oh wow this is shirts all
411:20 - different prices are possible so somebody says that finds this historical data so finding data
411:27 - from somewhere else some other people selling shirts oh okay i can sell a thousand shirts
411:34 - if the price is thirty dollars but three thousand shirts if the price is twenty two dollars
411:43 - so there we go again that classic y equals mx plus b but we just changed the letters
411:48 - change the letters p of n you know the price based on n shirt n shirts is mn plus b so
412:03 - there we go we can we can look at this you know n shirts now something like this
412:11 - i might take that the price is the independent variable because that affects how many shirts
412:17 - you can buy and so we might you know do something like that and then we'll get into in uh later
412:24 - units here we'll get into other things where we can then based on that price you know given this
412:32 - we can find that that you know that equation for price and then based on that price we can take
412:39 - it a step further and say what would be my profit because just as an example here
412:44 - so a thousand shirts at thirty dollars so it'd be thirty thousand dollars so they sold a thousand
412:50 - shirts thirty dollars each but three thousand shirts at twenty two so twenty two times three
413:02 - thousand is forty four uh uh sixty six thousand dollars so just lowering that not just you know
413:11 - selling more shirts but the price that it had to lower or reduce to twenty two dollars not that
413:17 - much different and so it sells three thousand shirts so instead of thirty thousand dollars
413:24 - sixty six thousand dollars look at that almost uh more than twice the profit for a little bit
413:32 - less and some people who don't look at the math of this would say that you know what is is the
413:42 - you know reducing it eight dollars is that going to double my profit actually it does or at least
413:49 - the revenue we don't know the cost of making the shirts but it more than doubles the revenue
413:54 - just lowering that a little bit because it reached so many people
413:58 - and so that's what people are looking at you know and in again in further units we'll look at the
414:03 - math behind you know how to how to get this how to find that maximum profit value maximum revenue
414:10 - value and you know what you know what are we looking at here how can we find that
414:18 - you know ideal shirt price so there we go there we go all these others same situation linear
414:31 - equation we're trying to maximize things if we look at number 18 a farmer finds a linear
414:38 - relationship between the number of bean stalks she uh she plants and then the yield
414:44 - that each plant produces so 30 stalks each plant yield you know how many per per acre
414:52 - so 30 stocks each plant yields 30 ounces of beans but then 34 stalks reduces its 28 ounces of
415:02 - beans you know they're all competing for some of the same resources so we can definitely get that
415:08 - you know they're all competing for some of the same resources so we can definitely get that linear
415:14 - equation and then we can try to find so what would be the maximum you know how
415:22 - what would maximize the bean yield so you know it'd be really interesting so
415:31 - then we get this um
415:33 - um yes so notice this uh and the yield would be 30 ounces that many beans times 34 oh no sorry
415:48 - 30 stocks times 30 ounces see then 30 times 30 so that's 900 or then we have 34 times 28
415:59 - and i'm not going to do that in my head but we can see some different values and then we'll look at
416:06 - these in some of the other business applications later on so some more things if we if the town
416:13 - population and like number 120 drawing linearly we can write an equation for that you know here's
416:21 - another one where we often do this all the time converting temperature from celsius to fahrenheit
416:29 - and we have these two values zero degrees celsius is 32 degrees fahrenheit so then we know um
416:41 - 100 degrees celsius is when water boils and the corresponding temp is 212 fahrenheit so what you
416:47 - can do is we could just take these now we could also use this to make another function
416:57 - but we could also take this you know slope intercept from an equation equation from two points and
417:06 - there we go still better sub equation from two points and
417:19 - we can say all right so we have zero and then 32
417:25 - and celsius would be 100 and fahrenheit would be 212
417:31 - here we go and see the see the graph
417:37 - now the graph in this case okay and i'm not even worried about changing the values because
417:42 - the main thing we wanted was this equation here 1.8 x minus 32 some people like that 1.8 is a
417:50 - fraction that's nine over five so there we go that's and remember then the x value was celsius
417:59 - the x value was celsius so that's how we can convert celsius to fahrenheit times 1.8 plus 32
418:09 - and so if we look at the increase you know 1.8 is almost two so you know each celsius
418:21 - degree increases almost two degrees fahrenheit increase so we can see that change
418:28 - so if we take a look at this you know we you could always you can always make this that you know make
418:34 - another function for yourself that you could you know you could just have like you could just have
418:44 - celsius to fahrenheit fahrenheit to celsius you know that make another section add it you know
418:53 - you know put a heading to it because remember as soon as you have the heading you know not a comment
419:00 - because we're not in the code but if it's in there then it becomes a heading and it'll be in the table
419:05 - of contents so you can always make some of these things for yourself and you know that's why i
419:13 - want to give you some of these practice problems you know if some of these are relevant or if you
419:17 - want to combine some of the things you know you have room to explore and do some different things
419:24 - so there we go and then once you have that equation you can find you know there we go
419:31 - that function of 28 degrees what's that become in celsius or fahrenheit or negative 40
419:38 - uh that's a good one because negative 40 celsius is negative 40 fahrenheit so the one time where
419:48 - they actually agree it's got to be really cold but when it's that cold they agree and anybody not even
419:57 - having a thermometer would probably agree too yes it's cold so these are some of the things applying
420:02 - some of some of these and hopefully this is you know find this useful some some ways you can
420:09 - interpret some of the word problems and use some of the notebooks that you've been working on to
420:17 - solve problems answer questions and yeah you can continue you know add more to what you have you
420:23 - know make make it your calculator anytime you have different formulas they say oh this this
420:28 - might be useful make a function pick a formula another notebook section all right ready to go
420:36 - on to the next thing now that we've worked through the core skills in this unit let's look through
420:46 - some extra problems and i'm going to work through extra problems using the colab notebook so you can
420:52 - see how you can apply these resources that you're building and use these to solve problems that might
420:59 - come up in a textbook or in day-to-day life so we're going to go through some more extra problems
421:04 - here for these extra problems we're going to look at just ways to set up some formulas you know if
421:14 - you have different situations word problems how can we decode these put them into math terms and
421:19 - then use python to solve them so just here's some examples and all these come from the pages in the
421:26 - first textbook you have the link so let's look at number 10 on average this happens to be full-time
421:35 - canadians work 39.5 hours per week so if the typical adult requires eight hours of sleep per day
421:42 - what's the percentage of hours in a single week left over for personal activities
421:46 - so we need a few things here 30 so we need the number of hours in a week and
421:55 - even just going through your python colab notebook we have all these different things that you can do
422:02 - i'm going to click on solve and graph which we're not doing yet but in here you can just put a
422:11 - the blank you know line of code here and even in the print statement you can do a lot of math so
422:23 - first of all we can have the number of hours per week and that would be 24 hours times seven days
422:31 - and then if we want to look at the number of hours that canadians work we're going to subtract 39.5
422:43 - from that and python knows the word of operation so i can just put in here i like the spacing but
422:51 - you really don't need it 39.5 so there we go uh 24 hours a day times seven days a week minus 39.5
423:05 - and then we actually can also subtract eight hours a day eight times seven
423:16 - times seven so we have how many total hours in the week and then minus the work hours and then minus
423:26 - the sleep hours again all this in in python shift enter and we will have 72.5 hours so there we go
423:41 - 72.5 hours is you know and it works out look at look at that you know work sleep still have plenty
423:50 - of time to go out and do things and we can do all this just know knowing what we need to do each
423:57 - step you can break this up into different steps and put variables but this is just one way to do
424:01 - this all right and let's take a look at another one that number 14 housing starts in winnipeg
424:10 - for the first half of 20 2009 we're down 46.733 percent we'll talk about converting that in a
424:17 - second from 2008 when 1500 new homes were started so from 2008 to 2009 if it was the same amount it
424:29 - would be that times one or times 100 which would be times 1.00 so if it didn't change it would be
424:38 - that times one but then since it went down we want to think one minus that rate so it's not the 100
424:46 - percent it's the 100 minus this 46.733 and then the original was in 2008 it was 1500 new homes so
424:56 - so we can just go right back to this and we have 1500 new homes times one minus that
425:12 - 46.733 as a decimal is going to be 0.46733 and you see that we have that that decimal
425:27 - so one or you know 100 i mean it's not going to mess up the code if i put 0.00 we don't need to
425:37 - but so you know that's 100 so if it was that 1500 times one that would be would not change year to
425:43 - year and since it went down it's times one minus this rate you know we'll just overwrite this
425:52 - and these are number of homes so we're going to round it down and we're going to say it's 799
426:00 - you know that 0.005 is you know i don't know that's what five thousandths you know i don't
426:08 - know they put a few boards there or something on the lot said i started but there we go we're
426:14 - going to call it 799 and that's how we get this times you know one minus the rate since it
426:19 - went down and in later weeks we're going to talk a lot more about percent increase and decrease
426:24 - so this is not the only time you're going to see this and in that case we're going to skip some of
426:32 - these other percent increase or decrease but on page 73 i want to talk about this percent change
426:40 - so if 999 changed to 1049 so the amount of change we would just subtract 1049 minus 999
426:51 - and we see you know we can do that you can do that in your head it's an even 50 cents
426:57 - but then the percent changes we take that difference over the original number
427:01 - so if it started at 999 that's the that's the difference so that's the original number
427:10 - and again we can look at percent change so that 50 cents 0.50 divided by that original number 9.99
427:24 - so that's we get that difference divided by the original number and as a percent we're going to
427:32 - we're going to multiply it by 100 because it's the first two digits and even if I were to round it
427:41 - the next number is a zero so it's really a five percent change there we go and if you really want
427:49 - it to sometimes people like to put that into the formula times 100 and yeah there we go
427:58 - there we go as a percent I mean if it's just for your own calculations you don't have to
428:05 - make it fancier if you're doing this to explain you know costs and everything in some sort of
428:12 - business proposal yeah it's nice to have the extra bit you know have it display nicely and
428:19 - people can see oh this is exactly what you're talking about for your own calculations you can
428:23 - put it all in the print statement and you know see see the output and there we go so if we have
428:34 - 1999 lowered by 10 percent so we're looking at these keywords lowered by and if it's a percent
428:41 - we need that formula one minus the rate again might be new to think about it this way and
428:47 - we're going to talk a lot more about it in later weeks but 1999 lowered by 10 percent so
428:56 - we're not decreasing by an amount so we're not subtracting
429:02 - its times
429:07 - one minus three and I can even you know convert this as I'll just put this here one minus
429:14 - 10 remember 0.10 so I put that in there with the extra zeros but you can see that that's where we
429:23 - get this one minus three if it didn't change it would be that number times 100 percent or times
429:28 - one but it's times one minus three and then that's the new number there we go and this did not have
429:37 - any practical connection it was just what's the number if it's a dollar amount then I'll take it
429:45 - to two decimal places it's 17.99 so that'd be something like you know the the shirt cost
429:53 - 1999 and it was on 10 off so you end up paying 17.99 and knowing how to do these things you know
430:01 - you have calculator so you can do this you know right there on your phone because you can have
430:07 - this app you can set up different things for percent increase and decrease and you know you're
430:14 - in the store oh what would the actual price be and at that point is it worth it there we go
430:21 - we go and here we have this what about when increased by 40 is 3500 now for this
430:34 - before I even get to what we're going to calculate I'm going to put a couple comments here
430:41 - because I don't want the code I just want to show you the math of this if I have some amount which
430:47 - I'm going to call x increased by 40 percent so if it increased then it's times one plus the rate
431:01 - and then that would equal that new amount
431:08 - so you know the the beginning amount or you know x or we can call it the original amount
431:15 - times one plus the rate equals the new amount and I just put this in a comment we're
431:20 - just looking at this formula and so if I have this
431:27 - then the question is what amount number six here what amount when increased by 40 percent is 3500
431:35 - so that would be x times and when it's one plus three that makes it really easy because it's one
431:41 - point four I put the zero if I wanted to equals 3500 because one plus point 40 is 1.4
431:53 - and then in doing this we remember solving for x I'm multiplying so I divide and now really in
432:00 - the print statement I'm doing this 3500 divided by 1.4 and we see how in setting this up you know
432:11 - you could write your math in here some notes for yourself the formula you're using and then
432:17 - plug in the numbers so then we see what's the actual math that we're doing and then
432:23 - oh dividing by 1.4 so we'll do that and that's the one thing that will print the
432:29 - others are comments there you go 2500 so we have some of these all right and
432:43 - I actually want to skip over to this baseball one I skipped over that because I think those others
432:49 - are more straightforward now let's take a look at making use of you know as you're building these
432:54 - this notebook for yourself let's make use of the system of equations one so if we look at number
433:00 - 15 the local baseball team sells tickets with two price zones seats behind the plate from first base
433:08 - to third are priced at twenty dollars per ticket all the other seats down the baselines are ten
433:14 - dollars a ticket and last night's game 5332 fans were in attendance and the total ticket revenue is
433:22 - worth 71,000 how many tickets were in each zone so let's call x the good zone behind home plate
433:31 - those the twenty dollar tickets and let's call y the ones that are further out so we have the two
433:39 - things we want we want to know how many tickets in each zone so let's think about equations for this
433:46 - so twenty dollars for the good tickets ten dollars for the lower price tickets and the revenue is
433:55 - seventy one thousand seven fifty so if we go to our solvent graph and again you might have this
434:03 - you might have your table of contents jump right to it solvent graph we'll call the variables x
434:10 - and y and you can even write some more stuff in here and you know delete it later so let's take
434:15 - a look at this if our two equations are twenty dollars times x number of tickets plus ten dollars
434:26 - times y how many of those tickets did we sell equals that total seventy one thousand let's make
434:35 - sure we get it exact seventy one thousand seven fifty so now we have an equation for the revenue
434:46 - twenty dollars times this many tickets the good tickets plus ten dollars times this many tickets
434:51 - that are further out equals this how much this much money that but the error now i have two variables
434:58 - i want to solve this i need another equation so what about that second equation five thousand
435:06 - three hundred thirty two fans were in attendance so x and y were the number of tickets in each
435:15 - section so x plus y must equal five thousand three hundred thirty two okay so
435:29 - in the way we have this set up here we can just set this equal to zero so let's take the first
435:35 - equation and we're just going to put this twenty times x plus ten dollars times x plus ten dollars
435:44 - x plus ten times y and then equal to zero i just subtract that other value seven one seven five zero
435:56 - and then that would be that equal to zero
436:00 - all right and the second equation set equal to zero so x plus y so i'll do x plus y and then minus
436:11 - five three three two that would make that set equal to zero and this is the idea you can you can add
436:20 - other things here if you want to factor and then just setting up these equal to zero is the easiest
436:27 - way to set it up because remember we already set this up to solve factor it and then graph it
436:34 - and the graph you know just might help visualize it and when we solve this so there we go
436:47 - see the solution here and 1843 and 3489 so that's how many of each because when we add these up then
436:59 - because when we add these up then that's going to be five three three two and there we go that now
437:08 - we know how many of each each ticket so 1843 people sat you know from first base to third
437:18 - and 3489 as we expect that's there's more room out there in the outfield and beyond so you know
437:25 - that's how many people sat out there and now and now we can figure this out
437:33 - and we see the graph just to see the comparison here
437:39 - so pretty cool we can we can figure out given this information
437:43 - how many people sat in each place and who knows maybe if it wasn't totally sold out we can get a
437:49 - breakdown all right and you know some other applications we'll skip some of the percent
437:57 - increase maybe we'll take a look at this one here so number 15 from page 84 so if gabriel is famous
438:07 - for her trail mix recipe let's talk about but the by weight her recipe calls for 50 percent pretzels
438:15 - 30 percent cheerios 20 peanuts and she wants to make two kilograms of this mix so we could
438:25 - just calculate how much of each she's mixing so pretzels cheerios and peanuts and this one
438:37 - we could just go right to right to here and before i even get to a print statement
438:42 - we could just define some variables in python we like to use the underscore so maybe
438:53 - pretzel weight maybe we'll do pretzel uh pretzel there we go equals 0.5 times two
439:04 - times two because it was 50 percent pretzels and she wants to make two kilograms cheerios is
439:13 - going to be 30 percent and peanuts 20 percent so cheerios equals 0.3 times two and then
439:29 - uh peanuts equals 0.2 times two now we have now we're going to we know that we have the weight of
439:42 - each of these and you can put comments in there for yourself if you need to and now we want to
439:48 - uh talk about the cost so there we go if we have the the cost so all of this pretzels times
440:01 - 9.999 and so if we have this our cost equals pretzel times 9.99 because that's how many
440:17 - kilograms at 9.99 a kilogram plus and we'll look at cheerios 6.99 and peanuts 4.95
440:28 - plus cheerios times 6.99
440:39 - plus peanuts times 4.95
440:46 - so now we have the total cost here and that should be then the cost for two kilograms
441:02 - fine but the question then asks what's the average cost per 100 grams
441:08 - so 100 grams compared to two kilograms is divided by 20 and we could do the comparison if we wanted
441:19 - to also bring it up to the proportion earlier on in this notebook but knowing that this is two
441:27 - kilograms 100 grams and so it's we can just put this in the print statement cost divided by 20
441:38 - because that's the cost for 100 grams there we go so how many of each if we're making two kilograms
441:47 - but then the final question uh we need to divide it by 20 we only want 100 grams
441:52 - 100 grams and there we go 80 cents
441:59 - which makes sense because if we take a look at the total cost for each of these
442:06 - yeah when we when we're buying this full two kilograms you know given these rates yeah that's
442:11 - 16 dollars worth of trail mix i mean you know hopefully two kilograms of this this mix
442:18 - it'll last a while so she just wants to make 100 grams so that's why she is just dividing it by 20
442:27 - 100 grams you know so that people can eat it before it goes stale
442:33 - there you go 80 cents all right not bad so some other things that we can look at
442:41 - making use of these calculators that we have we can take a look at things like various like
442:49 - options for things like green energy and so i i put in here you know just a link to
442:57 - one thing you know one thing and it was i think i did one solar panel one battery so supposing
443:04 - you know you want to buy this you know live live off the grid or you know supplement electricity
443:10 - for somewhere so here's a solar panel charges up a battery and the cost was 245 dollars
443:17 - and then the output is 110 watt hours now 111 so you can certainly recharge this as as as much as
443:28 - possible that's just you know that output i normally would then think about this as using
443:34 - 111 watts for an hour and 111 watts that should be enough to charge you know power your laptop
443:42 - charge a phone few light bulbs also so you know that's something you know you could easily
443:53 - make use of 111 watts like i said laptop charge phone power a few light bulbs that'll be plenty
444:00 - and then that way so what what this would be is so the uh electricity very often is in kilowatt
444:11 - hours because we use so much and that's like 15 cents i think is about the national average
444:16 - so 111 watts that's you know 10 of that a little bit less so yes that is 1.5 cents so you know this
444:27 - you know this 111 watt hours and i was thinking you use 111 watts for an hour so that would save you
444:37 - a 1.5 cents okay now beyond the savings if you're also doing this for the sake of being off the
444:45 - grid or you know uh you want to run run some stuff like out in the middle of nowhere where you can't
444:50 - really plug it in well that's the value of this but let's just say you want to compare this to
444:57 - electricity cost so you know that 245 dollars and if you run this for you know
445:07 - all you're making full use of all this for an hour then it'd be 16 000 hours and dividing that out
445:15 - um rough estimate you know doing a little bit of rounding here thousand days you know which is
445:24 - you know a little bit less than three years and if you do that you could uh you know pay for itself
445:33 - in a thousand days which for a lot of investments that's not that bad
445:37 - and then after that free electricity you know you paid for this and all along the way you know
445:44 - you're saving this money for the thousand thousand days and then after that there you go you've
445:49 - already saved enough money to pay for it and you get the free electricity i did another one just as
445:57 - another comparison so this wind turbine i find all these nice you know it's kind of interesting
446:05 - isn't it you know it's kind of interesting so uh did that not click there we go so this particular
446:13 - wind turbine that can handle like low winds and it's rated for you know 400 watts but um
446:23 - the idea is that if it's low wind it might be a whole lot less and somewhere in here
446:29 - you know it can say 2.5 meters per second low wind speed which should be about five miles an hour
446:37 - and even at that point it'll turn it'll generate some electricity so let's say we have something
446:42 - like this and this one was 270 dollars 400 watts but low low wind it may just be 40 watts that's
446:50 - okay so let's just say you can generate 40 watts for 24 hours because not dependent on the sun
446:58 - not dependent on the sun you know you could have wind blowing anytime and we round that up to one
447:04 - kilowatt per day 40 watts it'd be like you know 960 watts we'll round it up because this is all
447:11 - just an estimate anyway so that one kilowatt hour you know on average costs about 15 cents
447:19 - so if you have it somewhere where it's low wind there we go that 270 dollars divided by 15 cents
447:26 - gives you how many days 1800 days so this one would be if it was low wind we're talking like
447:33 - five years to pay for itself and then after that you know free electricity again even five years
447:40 - not so bad as a return on your investment but i just happen to mention if you if you do live in
447:46 - a windy area and let's say you can produce a constant 400 watts you know this is a lot of
447:51 - places you know especially if you're near like a body of water sometimes lakes ocean bay you know
448:00 - wide river you could definitely get a consistent wind and if that's the case there you go
448:10 - and it would only take about half a year to pay for itself because if you're producing this 400
448:15 - watts that's 9.6 kilowatt hours per day or dollar 44 and then just do that division you know 270
448:23 - divided by a dollar 44 187 days you know just over half a year and really then enough wind in enough
448:33 - space hey by three of them and because you're making you know you're generating 400 watts
448:41 - uh three of them is probably enough to power you know somebody's house like everything so
448:49 - you know you're you're you're saying you would be saving all that electricity you'd be making use
448:52 - of the three of them and power the whole house yeah about six months so uh you know the same
449:01 - that it would be that about that same yeah so really interesting and this is the thing like
449:07 - you can do these calculations i just wrote them here but you can also bring up the google
449:14 - co-lab and do these different calculations graph different things if you wanted to see see it and
449:24 - that that that's the idea with having all all you know all the math calculations you know at your
449:29 - fingertips you can count you can calculate things and figure out is it worth it for me oh hey if i
449:34 - spend this much money and then you know generate this for electricity yeah maybe or or you might
449:41 - say it's not a priority right now and you know that's it but you but you know based on the
449:48 - numbers so that's that's really some of the some of the uses of of some of the math we've been doing
449:55 - and you know also making use of you know the co-lab
449:59 - uh graphing some different things or solving some problems so hopefully this was this was useful
450:07 - and hopefully this gives you ideas of other things you can do once you set up your your uh co-lab
450:14 - notebooks and you have the ability to calculate and graph some different things you know make
450:19 - use of it to see what you can do to make money or save yourself money all right and we'll go on to
450:25 - the next unit then so let's talk about quadratics so the word quad means square so
450:36 - why would we have you know quad square but then it's and we call this x squared but yet there's a
450:42 - two so where does the square come from the square in quadratics comes from the idea
450:49 - so where does the square come from the square in quadratics comes from the idea and this goes back
450:56 - to the original algebra back with al-khorizmi so the if i have a square and you know i don't know
451:07 - each side i'm just going to call them x but then the area of that square would be x times x would
451:14 - be x squared and that's where that's really where this notion of quadratics comes from you know as
451:21 - actually tied to physical area the area of a square but there's a lot of other applications
451:28 - and this comes up so often that we get beyond even the the actual measurements and we can use
451:34 - this for a lot of other things so we look at the our equation y equals x squared so if i were to
451:43 - graph this and when we get into the code we're going to get into graphing and we're going to
451:47 - look at some of those applications too but when i'm going when i graph this anytime i graph a
451:52 - quadratic it's going to be a parabola and you know it'll probably look like a nicer parabola
451:58 - than that but it'll be a parabola so that means you know and if we can picture this the positive
452:05 - values for x give me you know i square them and give me some y value but then the negative values
452:12 - when i square that negative times the negative makes it a positive so that's why it curves back
452:17 - around and so you know we keep going up and then these two ends go on as long as you want them to
452:25 - but yeah the the negative x values get squared so then the y values would still be positive
452:30 - i still can get negative y values because if in my graph i subtract something you know i can
452:36 - subtract you know five or something like that so there's definitely some x values there that even
452:41 - squared are less than five so when i subtract i get a negative y value so you can still do that
452:47 - but you see the the general trend of the parabola here and they you know kind of look like a smile
452:55 - but if you have if you have a negative x value
452:59 - you so any negative x value it looks like a frown so our coefficients here that one would would
453:11 - be negative so let's yeah let's take a look at this if i had any general
453:20 - quadratic and this is the general form so if i have the general form of any quadratic would be
453:27 - y equals ax squared plus bx plus c and that covers all the possible coefficients for
453:38 - any quadratic equation so a would be my coefficient for the x squared term b would
453:44 - be my coefficient for the x term and then c would be the constant and if i look at these as long as
453:52 - a has a number then i can have a quadratic b and c can be zero like the original y equals x squared
454:00 - oh well there's no x term b is zero c was zero and then the other one i i brought up i put minus
454:06 - five so then c would be minus five b would still be zero so there we go the general form for
454:13 - any quadratic and as long as a has a number to it then it's a quadratic a just can't be zero
454:20 - then it's some some other type so if we take a look at this and you know a is negative it opens
454:26 - down like a frown a is positive opens up like a smile and the other thing about these quadratics
454:32 - is they're all symmetrical so the vertex is the point at the bottom or at the top depending on
454:44 - how it turns up of where the gravel turns around so since it's symmetrical the x value
454:53 - is going to be this definite formula negative b over 2a so what i have is once i have a b and c
455:04 - i can plug in my four my values for a and b and get the x value for the vertex and then once i get
455:13 - the x value i would plug that x value in to get the y value and then i'd have this point and then
455:19 - that would be the point that if i had my parabola that would be the point at the very bottom where
455:26 - it turns around and also just looking at that x value remember they're symmetrical so that would
455:33 - divide the parabola nicely so we're going to look at doing this in the code importing a b and c
455:43 - and then finding the vertex finding a lot of other things so we're going to make use of the code to
455:49 - be able to do that so i'm not going to worry about all the factoring here but what i am going to show
455:55 - you is one other thing that we're also going to look at the code but sometimes it helps to see
456:00 - this formula is a lot of times when i graph this if i were to graph the parabola you know here's
456:07 - my x y and you know let's say i have a parabola there i might also be interested in the roots
456:14 - where does the parabola cross the x-axis and so when it crosses the x-axis then y would be zero
456:24 - because you know on the axis i'm not going up or down at all so if i have something you know we
456:33 - would talk about solving for x but if i have something like this yes i have equal zero and
456:38 - i have one variable which is x how would i solve it we approach it a little bit differently
456:44 - than we would the other the other ones because when i square root something and that's going
456:49 - to happen as a part of the process when i square root something the answers the positive there's
456:56 - positive or negative possibilities because if i had if i had the square if i had let's say
457:05 - four and then the square root that it's positive four or negative four because if i had or
457:12 - positive two because if i had two squared that equals four but if i had negative two squared
457:22 - that would also equal positive four so if i'm going the other way if i have a four and i'm
457:27 - square rooting yes it could be positive two or it could have been negative two and so when i'm
457:33 - finding the roots for a quadratic you know setting this equal to zero one of the steps is going to
457:39 - involve square rooting which gives me a possibility of a positive or negative answer and then that's
457:44 - where we have you know our two possible answers and so that's how in one formula you know many
457:54 - quadratics you know the way they cross they're going to cross the x-axis and touch it twice so
458:01 - to find the roots i want to find out those two values and the formula will give it to us
458:05 - so again knowing a b and c the quadratic formula
458:12 - all right so and notice it's that
458:18 - that vertex plus or minus something and then that's how we use plus or minus square root of
458:25 - b squared minus four a c all over two a again so this is the quadratic formula that you know
458:37 - because i have plus or minus it will give it will give me two roots you know i know and we'll see in
458:44 - the code we would run through this once for plus get that answer once for minus get that answer
458:49 - there we go but also since i'm square rooting something we're just we're going to stick with
458:57 - the real numbers here and if i have a negative value under this radical then there's no real
459:04 - solution so you know we could get into imaginary numbers and you know it's not real solution but
459:12 - why should we let that stop us but for our purposes we're not going to worry about that
459:17 - we're going to say that if it's negative then there's no real solution and we're going to
459:21 - just stop there so in doing this i would often test this we call this part under here the
459:28 - discriminant and i would often test this you know b squared minus four ac does that is that zero
459:36 - actually that can be zero which is fine because that'd be plus or minus zero you know that means
459:41 - it would have one root it would just touch the x-axis that's fine but if it's negative then that
459:47 - means i have no roots and i would have a parabola that just never touched the x-axis so that's
459:56 - that's perfectly fine it's possible and in that case i would test that first and if i knew that
460:02 - then that would save me some time you know not having to do all this because you know if we did
460:07 - this old school and just factored it all out you know right right in the notebook you know sometimes
460:12 - it takes a while we're going to look at how to make this a lot easier you know writing the code
460:17 - we're going to put these formulas in and then we're going to find the roots in the vertex
460:22 - oh you know maybe we'll even graph them too so this is the formula and notice in math
460:29 - they're both had the same denominator so i could i could make this all over one denominator
460:36 - like that works out
460:40 - you know do the adding or subtracting in the numerator all over one denominator
460:46 - and mathematically that works out you know it's another way to write it so this is very often
460:51 - this is the quadratic formula as we would often see it just like this all that all over 2a
460:57 - all over 2a and so for as complex as this could be there's only a few formulas all right i see this
461:06 - i get a b and c formula for the vertex formula for the roots we look at graphing it and then
461:14 - we'll you know then we can look at some of the applications but this is where this is kind of
461:19 - the essence of looking at quadratics here and so now let's take a look and we'll go into some other
461:27 - um well you know how to solve these formulas and everything so let's take a look at the code
461:33 - so solving a quadratic equation is much easier with code because all the formulas that we were
461:38 - talking about that we would work out by hand we're just going to put them all into the code so
461:43 - so you can just define a b and c once and then run those values through all the formulas you need
461:52 - and output your answer roots vertex and whatever else you need so i just picked some values here
461:59 - that work out uh nicely a b and c and what do we want to do let's first of all just print it
462:05 - so we'll print out what our function is then we'll calculate the vertex so notice vx i call the
462:14 - variable and that's the negative b over 2a that's going to calculate the x value and uh python does
462:22 - no order of operations but this 2a does need to be in parentheses because it is the whole denominator
462:30 - so we get that x value and then we're going to take that x value and plug that in for the one
462:35 - for the y value a times and my x value vx and then square it plus b times vx plus c
462:49 - so i get i plug all that in get the y value and just like before i'll print it now um
462:59 - there we go we just print the equation now we have the vertex as a point
463:03 - and we'll go on to the roots and the roots remember the quadratic formula d it works at abcd
463:10 - but it's actually d is for determinant here that's the part that's underneath the square root
463:14 - because if that's negative then i won't have any real roots and so i'll just define d as that part
463:21 - under the square root b squared minus 4ac and then i'll test it here if d is greater than or equal to
463:27 - zero because if it's not then i'm going to print out no real roots so if as long as it's greater
463:34 - than or equal to then we're going to calculate the roots and remember it's the rest of the
463:38 - quadratic formula so since i already figured out d i'll make use of that so negative b plus or minus
463:47 - so we're going to run through this twice for the first root negative b plus the square root of d
463:52 - and then all that's over 2a and notice parentheses for the numerator parentheses for the denominator
463:59 - and then the second root negative b minus the square root of d and then all that's over 2a
464:05 - so i'll print this out calculate the roots print it out or you know no real roots if that's the case
464:13 - and there we go so i actually already ran this and what do we have y equals so x1 x2
464:22 - x2 plus 5x plus 6 and then we have the vertex is this negative 2.5 negative 0.25
464:29 - and then the roots x equals 2 negative 2 and x equals negative 3
464:36 - so there we go if all you need to do is solve it it's nice to have all these formulas at the ready
464:42 - just change a b and c and run it again so if we want to graph it also we can
464:49 - do everything we were doing plus the graphing part remember our imports for graphing matplotlibrary
464:55 - numpy i'm also going to import math for some things that we'll do i'm going to define a b and c
465:02 - i just pick different numbers here and i'm going to print out a b and c so this part is very similar
465:10 - i'm going to print this out calculate the vertex print that out and now we get into the graphing
465:17 - so notice i didn't do the roots yet and we just have x min x max you know everything
465:26 - else we were doing for graphing define the x values set up the plot and now i can graph the
465:35 - parabola i just called it y1 even though i probably won't have a second y value here
465:41 - ax squared plus bx plus c there we go i'm going to graph that whole parabola and then that's y1
465:47 - so i'm going to plot x and y1 then i'm going to plot the vertex as a point so i put this all down
465:55 - here for the the plotting parabola the vertex point and then notice this one up here by default
466:03 - it's going to be a line and here i'm defining two arrays each of them with one item and then
466:12 - that's going to be a red dot so then we're going to find and plot the roots everything we were
466:18 - doing with calculating the roots from before but i'm going to add this one line here pi dot plot
466:26 - and once i get the plot i'm going to plot root one root one zero and root two zero and remember
466:33 - you know the array of my x values and then the y values and this one is going to be a green dot
466:39 - so that's why it's good so it's going to be a green circle so i'm going to plot that and then
466:44 - i'm also going to print out the roots because i want to see that too so when we have all this
466:49 - and then we run it
466:54 - it'll have your equation here there you go x squared plus four x plus one give you the vertex
467:01 - and give you the roots now these roots are irrational you know that's why it gets this
467:06 - wacky decimal we could you know do quite a few more lines of code to get to the
467:14 - wacky radical answer but we're not going to worry about that now that that's that's perfectly fine
467:20 - if you're writing this down somewhere you might round it to a couple decimal places
467:24 - but here we go we plot the vertex as a red dot the roots as green dots you know see where it crosses
467:30 - the x-axis and then we graph the parabola and so i can redo this then let's just try these numbers
467:40 - that we were doing before one five there we go six and that's all we need to do change a b and c
467:52 - and it'll run through and calculate all this there we go x squared plus five x plus six
467:57 - and here's the vertex negative two point five negative point two five and then the roots
468:04 - two and negative two and negative three there we go now there we go negative two negative three
468:12 - where it crosses the x-axis and see the y value of that vertex is negative point two five so it's
468:19 - two five so it's just below it but just barely and there we go so we can plot our quadratic formula
468:30 - we can graph it we can get our roots in our vertex and for most things when you're solving
468:36 - quadratics that's what you want to do so let's take a look at how a b and c actually affect the
468:44 - graph so i'm going to show you some sliders here and that's going to come up again in one of the
468:50 - other notebooks so how a b and c so the first thing is we're going to import this and just that way
468:59 - map plot live in line and we're going to write that first and then we're going to import these
469:05 - widgets and interactive the same and then the same other things we're going to do with the plot
469:12 - so the way that these widgets work is we're going to put all the graphing in this function so now
469:19 - we're going to connect again with functions here i still defined it just as f and that's because
469:25 - later on i wanted that to be a short name for that line but you'll see so i'm going to define
469:30 - this f but it's the function of a b and c i'm going to take those three things a b and c as inputs
469:36 - now you could always make this say quadratic and you know do everything that you want to do
469:45 - with the quadratic roots vertex we could actually take everything that we were doing before
469:51 - with the plotting and with solving and put all that in this function at that point i would call
469:57 - it more than just that if i might say quadratic and take the argument a b and c and do everything
470:02 - you need so kind of cool that you can do that but here we're just going to focus on the graphing
470:07 - so my function there we go x min x max all those i'm going to define all these things for graphing
470:14 - remember a b and c would be the input so we would have those and then plot the the parabola plot
470:23 - plot the the parabola plot uh the vertex as a point plot the roots as points and um
470:34 - there we go this all of this here is really just extra for the sake of setting the equation as the
470:43 - title of the graph i did that instead of printing it out which i guess we could we
470:49 - could have done but i wanted to show you we could set it as the title of the graph and the title
470:53 - needs to be a string so here i'm going to take a b and c and convert them all to strings then
471:04 - i'm going to take all of this and i was you know this doesn't necessarily connect with html
471:11 - but i was thinking of that h1 for the heading so i'm just going to combine all these or concatenate
471:18 - all these that exact y equals combined with sa that string and i'm going to combine all these
471:24 - as h1 but if i just leave it at that it'll still display in a weird way as the title there'll be
471:32 - like extra quotes and i don't like that so i'm going to just find this other one h2 which just
471:38 - it's just blank with quotes and that's going to be a string and i'm going to loop through this
471:42 - for w in h1 you know w like for word in h1 and then h2 equals h2 plus w so i still had to convert
471:52 - these two strings put it all together as h1 but then i still needed to put it in h2 if i do it
471:59 - this way combining these now h2 is a nice unified string without a lot of extra quotes and so that's
472:08 - you know again it's a lot to just it all leads up to the sake of for the sake of putting this
472:16 - as the title okay and you know we'll see hopefully you know it looks nice and you know you see oh
472:25 - that was you say oh that was worth it all right so here's where the interactive comes in so we have
472:31 - this interactive plot now that's just the variable that i chose interactive plot but here's what's
472:39 - really happening this interactive function so if we take a look at this so it runs this function f
472:46 - so that's where the name of your function goes and that's where you see how long this line got
472:51 - i wanted this to be short so i just that's why i called it f so it runs this function and then
472:57 - that function and then it defines a with a range from one to nine b with a range from negative nine
473:07 - to nine and c also with a range from negative nine to nine a i started at one because if it
473:17 - was zero that's actually not a quadratic and i want to illustrate quadratics and so i'll start
473:23 - at one so we just define this interactive plot and then notice this as the last line of code
473:30 - then if i just say interactive plot it's going to print it's going to run that
473:36 - so we'll see this interactive how that makes the sliders here
473:42 - there we go and it default shows them in the middle and see this is what i wanted it to be
473:48 - that when it starts out you see the title of the graph y equals five x squared plus zero x plus
473:55 - zero you see that's it just and if i go if i make that down to one this is the parent graph the most
474:04 - basic parabola you know x squared and i don't have to put the plus zero but in this case it's
474:10 - going to write that every time and then we can see what happens if i move c you see
474:22 - i can move c and it'll adjust the graph it'll adjust the title
474:26 - of the graph there we go and then we can see what happens if i move b
474:33 - b you see it moves it along here and now
474:44 - it got to this point that now where it is i do have roots in the vertex that i can display
474:51 - and then if i have i can see where b as i move that around
474:58 - affects this whole graph and i can see then how a affects the whole graph
475:15 - so we see some different things that we can do and all these are going to be accessible to you
475:22 - you can tinker with these but this is all you know it was just i wanted to show you this interactive
475:28 - that you can set up sliders and in this case to display the
475:37 - display the graph see the roots in the vertex
475:42 - you see and i move that down so we display the graph see the roots in the vertex and adjust it
475:48 - with sliders you can see how a b and c affect the graph so knowing this and being able to have all
475:56 - this code at your disposal you can really see you know most everything that you're going to need to
476:03 - do with quadratics you know find the roots in the vertex see the graph and you know adjust it and
476:10 - you know do some other things so there we go this and some practice you'll you'll know
476:17 - quadratics inside and out
476:19 - um now that we've worked through the core skills in this unit let's look through some extra problems
476:28 - and i'm going to work through extra problems using the colab notebook so you can see how you can
476:34 - apply these resources that you're building and use that use these to solve problems that might
476:39 - come up in a textbook or in day-to-day life so we're going to go through some more extra problems
476:45 - here so here we're going to walk through the foundational math certification too and if you
476:53 - have not already done it please give this a try on your own this is for if you're if you've already
477:00 - done that and you're stuck or if you just had a question about one of the parts you know we'll
477:07 - hopefully answer all those and just like the other certifications this one you're going to make a copy
477:16 - and put this in your uh in your google drive so you know file save a copy in your drive
477:24 - and this one we're going to focus on building cartesian graphs so most of this is going to
477:30 - deal with graphing we're going to look at some different functions and what you can do with that
477:33 - so you make a copy in your google drive it might be in your google colab notebooks folder where
477:40 - you can put it wherever you want and now hopefully you know i already did that so hopefully
477:47 - you're now working from your copy and we need to acquire the testing library so the code that you
477:54 - write just like the certification one the code do you write when you run it it'll run through
478:00 - it'll run through these tests to see if the code is what it's supposed to be and then give you
478:05 - some feedback so this first cell you don't need to do anything and you might just take note of
478:11 - what you need to do here for future reference in case you want to have your own custom library that
478:19 - you know you include in your colab notebook so this custom library it's on github and this
478:27 - code is going to get that and save it here in a work in a local working directory so you will
478:34 - need to run this for each new session as i mentioned before it'll the session will time out
478:45 - because of an activity after 30 minutes at the most or even if you're busy 12 hours it'll time
478:52 - out so each new session run this and it'll go through and then import the library so we click
479:00 - to run yep and see just a few seconds code test passed so there we go
479:11 - so let's take a look at some coordinates here cartesian coordinates and they're named from
479:17 - renee decart because that's part of his name cart and you know that's it you know you've arrived
479:25 - in life when your last name becomes an adjective so he among other things invented this x y
479:32 - coordinate system that we're familiar with with zero zero in the center and then x moving
479:38 - horizontally positive to the right negative to the left and y moving vertically positive up negative
479:44 - down so then each x y coordinate tells you you know how much you're going over and how much you're
479:51 - going up and we can plot all these points our go-to library is going to be matplot library
480:01 - and as we were talking about importing your own personal library custom library we needed
480:08 - to do that in a little bit different ways a few more lines but a lot of the common libraries
480:12 - uh i say commonly you know reasonably used i've been around a little bit uh behind the scenes
480:20 - google colab already did that install part so you just need to worry about importing it so you know
480:25 - we have that nice benefit you know things just work in the google colab so matplotlib.py plot
480:33 - and we're importing this library yeah that's a mouthful so we're going to import it as plt
480:37 - that way every time i reference it plt.plt. i don't have to rewrite all this
480:45 - okay so this is going to be the first thing is the basic just here's a graph there we go and
480:53 - you probably could change these variables but i don't this is what's in the example
480:59 - in the documentation for matplot library so i keep these and it does seem weird that you're
481:05 - assigning two different variables to this but it's you could have multiple subplots we're not
481:13 - going to worry about that right here but you could have multiple subplots and you know your one graph
481:19 - could have like nine little graphs in it if you wanted or something like that but so that you
481:26 - would put numbers in there but we're not worried about that now this establishes that this plot
481:31 - exists and then plt.show that's always going to be our last thing to show it
481:38 - you run it and there's our basic graph notice we didn't add anything else um
481:45 - so there's not nothing going on here and zero zero instead of being in the middle it's in the
481:51 - bottom left because we're just showing the positive quadrant here so just positive x
481:57 - values up to one positive y values up to one and that's it and notice all these the
482:06 - test and yes code test passed if you click the button correctly
482:11 - so we'll go to step two all right so now we have the standard window still not highlighting each
482:18 - axis and we're still going to go through import this establish this but now we're going to add
482:25 - something here so this gives us the size of the graph and i just put this here we're
482:35 - this would be better we're going to modify this as we go on but
482:39 - that'll give us the size of the graph 10 in every direction so when we do plot.show
482:47 - so you see it does give us 10 in the direction and if you follow these
482:50 - the zero zero exists in the middle here even if you don't see the axis lines and zero you know
482:58 - positive to the right up to 10 negative to the left down to negative 10 and on the y axis zero
483:04 - in the middle positive up to 10 negative down to negative 10 so they could line up in the middle
483:10 - here somewhere all right and this one was one of these that i ask you to change the values then
483:18 - rerun so it's run this to see what it looks like then change the window size to 20 in each direction
483:24 - so we go through here and we can just move this 20 20 in each direction
483:35 - now we notice from this even the one where we only went up to one the size of this graph doesn't
483:41 - change but we see the lines on the outside do and the tick marks change so now we're going up to 20
483:48 - in each direction there we go code test passed so some more graph dimensions now this is where
483:58 - i was saying we're going to modify this this is really what we were doing in that last one
484:05 - plt.axis so what were those numbers it really was an array of x minimum x maximum y minimum y maximum
484:15 - as just one group notice the parentheses and then the open brackets so that was an array and that
484:24 - was that defines the window size so that's why it's plt.axis so i think it just makes much more
484:31 - sense to define those as variables up here so this line here the plt.axis does not need to change
484:40 - and then it's really easy for you to then change the window size if you want you just change those
484:44 - numbers so there we go and this one is not one oh yeah this one is you could run it
484:54 - notice it should still do the same thing there we go and then we're just going to change these
484:59 - to 20 in each direction
485:01 - 20 you know and again we see 20 in each direction
485:12 - so this is going to be our go-to way to set up the graph and as we keep going let's look at those
485:21 - those axis lines that you might be making and we're going to change these to 20 in each direction
485:27 - so we have those axis lines that you might be missing i know i was missing them so how do we
485:35 - want to display these well we have our basic graph and we have the directions here if you
485:44 - were doing this on your own that the b that we're going to see here makes the line blue
485:50 - so we have this dimensions that we're building upon and these first two lines there we go
485:58 - subplots the window size so now we have the plt.plot and that's going to get plot a line for us or
486:11 - points now in this case we have this array here from x min to x max and then this array here
486:21 - what this is is a an array of the x values and then the y values so we have
486:29 - so we have it starts from x min zero and then goes to x max zero
486:42 - and rather than plot to those two points it plots a line from that point to that point
486:48 - and with this the line is going to be blue if you don't put something like this in here
486:53 - python will pick the color of the line for you and then for the y-axis
487:03 - then we're going to plot zero zero y min y max so what is this telling us it's from
487:11 - the x value of zero to the y value of y min so from zero y min to zero y max it's going to
487:21 - draw that line and again i'm forcing it into be this this space here whether you have this
487:27 - space or not doesn't matter so there we go so these two plot statements these two these two
487:36 - plot statements define whether you know define that it's going to be a line and then what color
487:43 - and i even have the comments here so then you see blue x-axis blue y-axis so
487:49 - y-axis so that's it we're going to show this plot and
487:57 - we see the x and y-axis
488:01 - we also see again the the value of defining everything up here because then all the rest
488:07 - of these the size of the graph and then where these lines go to and from it's all based on
488:18 - this up top so if i change the dimensions of this then everything else will adjust accordingly and
488:24 - the axis lines will still go to the ends so we run it and then change b to g
488:34 - and there we go change to g
488:38 - b and there we go it's green
488:49 - so you can make it whatever you want
488:55 - i just happen to like blue so there we go changing these so now supposing i wanted
489:02 - to plot a point like we saw that we did that into define a line we're going to plot a point
489:09 - well see as we continue to build this define these values here and now we're going to we're
489:17 - just going to end up keeping all of this as the window size and then the x and y-axis and keeping
489:26 - it blue so how do i plot exactly one point so notice this array of x values of which there's
489:35 - only one in there and y values so it's five four now here's what else we have it's ro that o makes
489:47 - it a point in fact a circular dot so if i have just b with nothing that's going to make it a line
489:55 - if i actually just had r with nothing that would make it a line but it actually has nowhere to go
489:59 - too so that would be weird but ro makes it a point and we'll see we can plot other things too
490:12 - so keeping all that the same and just plotting this one point
490:16 - one point there we go one point and it is five at five four over five up four
490:29 - now we could put the grid lines in but that'll be another story so now change the location
490:38 - so the directions run it then change the location to negative five one
490:41 - one okay so then we just change this to negative five and change this to one
490:52 - there we go and when we run it
490:56 - so we see negative five one
490:58 - all right so plotting a point we indicate that it's a point this way and
491:12 - plotting a line we have other ways to indicate that
491:20 - so how would i plot several points
491:21 - well let's take a look all right so a ray is to plot each point you know that's what we've been doing
491:37 - and we can still define it as an array here i'm just going to define the array here an array of
491:44 - the array here an array of x values and an array of y values so if i have these x values and y values
491:57 - we go down here so notice all that's still the same and here i can plot x y now i chose x y
492:09 - because you know x values and y values and i did not use exactly x and y as other variables already
492:15 - so we're okay i mean you really could name these arrays whatever you want
492:21 - but there we go we have what am i plotting the array of x values the array of y values
492:25 - and then here i have red points for each of them now right here i only have one l one number in each
492:37 - so we can add so that's the assignment for this step add two numbers to each so that also graphs
492:44 - one one and two five okay so the x value would be one and the y value would be one so there you go
492:52 - so i have point four two and then point one one and the next one two five so x value would be two
493:00 - y value would be five and there we go all right and changing those arrays now i can plot i still
493:14 - don't have to change this code plot that array and we see three different points because each of them
493:24 - because each of them i made a red point so let's mix it up let's plot some points and some lines
493:34 - okay so that's it hopefully you are noticing the subtle difference between the points and the lines
493:40 - each plot statements takes an array of x values an array of y values and a third argument to tell
493:44 - you what you're plotting so the default plot is a line if you actually skip that third argument
493:50 - it would give you a line and python would pick the color rbg indicate the colors and cmyk actually
494:01 - also work as just letters and beyond that there's actually a few other colors where you can just
494:07 - write in the word for the color give it a try you know i'm not gonna list all the possible colors
494:14 - but yeah give it a try and so these are the colors so then we have if it's a dot it's going to be
494:22 - ro the o indicates a dot rs you could plot a square and then r with a little carrot symbol
494:30 - would be a triangle so that if you have different things you're plotting you can mix it up and have
494:36 - dots or squares or triangles and then of course that combined with the different colors you can
494:41 - plot a lot of different things on one graph so notice we've already defined these arrays here
494:50 - and i'll call this one line x line y point x point y so yeah not liney and pointy
495:01 - and there we go so we have these we'll keep all these defining the graph the same way
495:07 - and let's plot so if i wanted to plot so the directions are a lot of red line and two green
495:17 - squares so if i plot here so line x comma line y and we want it to be red and it's a line so there
495:32 - we go and point x point y and it's a green square gs
495:49 - so you see if you've been working through the course hopefully this is a review and if you're
495:56 - coming at this you know relatively new hopefully it's seeming pretty straightforward but then the
496:01 - more you do this the more you just get familiar with with graphing everything and you know you'll
496:08 - be able to do this right off the top of your head so we graph this
496:15 - and we will see so there's the red line from that point to that point and the green squares over here
496:24 - here so there we go so we see how we can graph a line and different points
496:37 - okay so here's a scatter plot game and i call this making a scatter plot game
496:46 - but i kind of made the game so but we could take a look so this is what we want to do we
496:54 - want to look through this code how can i plot a random point and then you know you're going to
497:02 - try to guess the point i made the i made this uh you know a smaller axis for whatever reason
497:12 - and we'll define this once and here's what we're doing each time
497:20 - if we are we're going to get an x point which is going to be a random number so notice how this
497:30 - this is going to be good for different games or different things you do import random yes there's
497:36 - a whole library of randomness and random dot rand int and it gives the range here from x min to x
497:46 - max from x min to x max and actually the way most ranges work in python x min is a possibility but
497:56 - x max is x max it will won't go to that it'll go to the number before so y point y min y max
498:10 - so there we go so you see again if i change these dimensions it will still give me a random integer
498:16 - that so now if x point is the random integer then i'm going to store that as my x value
498:30 - store this as my y value and you see essentially it is an array with one element
498:37 - you know but then and i might have been able to skip this step but i like really spelling it out
498:47 - you know what what this is and now we go here i'm going to apply as a dot so there we go this
499:01 - uh gives the grid now this is we you know we had their axis lines this is the grid plt dot grid so
499:10 - that'll help because the game is going to be here's the point you tell me what the coordinates are
499:18 - so that's what this is yes and we're going to prompt for input enter the coordinates of the
499:24 - red point and that's going to be an x y with a comma so we're going to split it at the comma
499:37 - and that's going to be an array with two elements so then
499:43 - yes array zero so the first element cast as an integer that's going to be the x guess
499:49 - and the second element is the y value cast as an integer that's going to be the y guess
499:57 - and this is part of why i like to break it up here because i have this here these are the points
500:09 - this defines it as an array but this is the point that we wanted so we test it if x guess equals x
500:18 - point and y guess equals y point then that's going to increment your score
500:28 - and there we go all this in the loop and then if statements in the loop now the loop's done
500:33 - and you know in range zero to three we really because we're including zero we actually don't
500:41 - need that zero the range will start at zero by default so there we go for i in range
500:51 - it's going to go through it three times because it'll be zero one two and then
500:55 - again python ranges if it's range three it won't do three it'll do zero one two and then that's it
501:02 - it so we go through and guess it three times and then print out the score so the score
501:13 - was way at the top initialize it at zero and we'll see see what happens here so you see
501:21 - with the grid lines we can see so zero and look at these four five so the coordinates of the red
501:33 - point would be zero five and here we have zero negative three zero negative three and this is
501:53 - why i made it eight in every direction because it actually the grid lines just work out a little
501:57 - bit better so what's the coordinate of this point so looks like three on the x-axis and then down
502:06 - three so that would be three negative three all right and there we go you can try this out
502:22 - it'd be a good way to test your understanding of coordinates
502:28 - all right and step nine so now if i want to graph a whole linear equation so this was nice if i
502:35 - define these two points and i can draw a line between them but what if i actually just want
502:39 - the whole linear equation so numpy is the library we're going to use for that so we're going to
502:48 - import numpy as np now that one i mean numpy is not that big of a word to write but as np it
502:58 - just seems to be a common thing so you will see np dot this or np dot that for the different
503:02 - functions all right and then we have the linspace function so that defines an array of values
503:12 - an array of values when we're talking about functions we can you know loop through but
503:18 - this gives us that array and we're going to plot the function with two arguments
503:27 - so if we take a look at this all these so after we import numpy
503:34 - same setup for the graph and then linspace
503:43 - we give this now i purposefully made it a little bit less you actually
503:51 - we'll get to some other things that we can do with this that'll make it even better but i made it
503:57 - purposefully a little bit less than the maximum values here on the graph and then the third
504:05 - argument so it goes from it's the x values is what we want for this so the x value goes from
504:12 - negative nine to nine and in that there are 36 points so believe believe it or not that's
504:21 - actually going to be enough which is you know four points you know like every one fourth is a point
504:31 - that's actually going to be enough and notice then what we're plotting here are x values
504:39 - and you see that's the array of x values numpy gives us that array so that x values and then
504:47 - given this i can just put this equation in here as that's the y value each time so as it goes
504:58 - through this array of x values that y value is going to it calculated each time and then that's
505:05 - what it's going to plot so then when we run this we see that it actually plotted this point this
505:15 - this graph there we go two x minus three and yep looks like it crossed there about negative three
505:23 - and looks like about up two over one etc okay so there we go um
505:33 - um and we have this run it and then change it to graph negative x plus three so all these can stay
505:45 - the same now in this case since this was cut off here we didn't really notice that but if we just
505:55 - then change this to negative x plus three now we see the the limitations of this
506:14 - here because it cut cut off there so what can we do here well we could in this just make this we've
506:27 - already defined x min and x max we could actually make this go from x min to x max and you'll see
506:35 - this come up in the next things we do all right so we can create interactive graphs
506:49 - so in this case we've been talking about linear equations let's let's use these widgets to make a
506:59 - slider so we're going to import all these things here now you know numpy for our array of x values
507:08 - matplot library for the graph for the plot and then we have we're going to import this in line
507:16 - and then the widgets so we can make all the graphing happen in a function and we have
507:26 - there we go function of m and b and if you're if you're working through some of the other things
507:35 - in this course this might be familiar and then we'll see just you know what's the same and what's
507:41 - different about what we're doing here with this function so if i have this function of m and b
507:48 - everything happens in the function defining the x values y the maximum the final x values
507:54 - y the maximum defining all this and in this case we're going to give it a title because
508:01 - we already know that this is going to be a slope intercept equation so we're going to give it that
508:04 - title all right and then we have there we go np.lin space and we could always make this now this
508:18 - time i also rewrote the numbers but you could always make this just x min x max and something
508:27 - else here so what are we going to do here we're going to plot x and then mx plus b
508:37 - because these m and b values are going to come from slider and then the function is going to
508:45 - take that so here's our interactive plot i mean i could have made the variable something different
508:50 - but the function is interactive and then it takes f what's what function and then m equals so we give
509:00 - it a range and b equals and we give it a range and we run this interactive plot so
509:09 - so we can use this
509:16 - to plot now notice it default goes to zero so as soon as i increase m you see now i have a line
509:22 - with the slope of two line with the slope of four and then b is still zero but i can move this up
509:31 - up and i can move it down and we see that i can adjust my graph so it's nice to have these things
509:45 - that we can adjust a graph all right and then if i'm graphing a system so maybe you are already
509:56 - graphing system of equations that then hopefully this is a good review if this is new then take
510:04 - a look at here's one way to graph a system of equations all right same imports and same defining
510:13 - these now here's where we make it a lot better so how many points do i want i'm just going to take
510:21 - it also based on this x max minus x min so that's going to give me remember x min is very often
510:29 - the negative so that's going to give me you know this range and then times two so that might be
510:38 - enough times 10 that might be plenty for even more complicated graphs so that's how many points i
510:45 - have that you know there's the range and then times two and then define the x values once and
510:53 - here we are defining this linspace from x min to x max and then this many points
511:01 - so we see again we're building these i have this comment in there for you but
511:08 - pretty soon then you won't even need that and now we again we have
511:11 - our complete uh our base of what we're importing and then the basics for the graph
511:20 - so then i can plot two lines you know define y1 in terms of x because i just make my x values
511:31 - x because that's convenient
511:33 - and what what am i plotting x and then y1 there we go and in line two notice it doesn't have to be
511:46 - linear this this plot works you know x squared minus three and what am i plotting the x values
511:52 - and then y2 and we can see these so there we go all right change y2 and rerun the code
512:05 - so y2 we're going to make it negative x minus three so we're just going to rerun this as
512:14 - negative x minus three and we see there we go and with these you know i could define what color i
512:25 - want these lines to be but without that python gives me the colors light blue then orange you
512:32 - know it'll go through a few colors and then we'll go through a few colors and then we'll go through
512:39 - light blue then orange you know it'll go through a few colors and there we go defining
512:51 - two points so systems of equations you know so there we go that was graphing
512:58 - two equations and you can graph more if you want systems of equations we're going to import simpy
513:05 - so the simpy library and we probably don't need to import everything but i do for this particular
513:14 - example so the import asterisk is going to import everything from the simpy library and we're going
513:19 - to define these symbols so now i'm going to here i'm going to define x and y as symbols that i'm
513:26 - going to use to solve so i could define these separately and you'll see in other places that we
513:35 - do but what do i have i have lin solve and then notice open parentheses because that's the function
513:43 - for lin solve and then what do i have i have this array of these two equations set equal to zero
513:52 - zero so that's what you know it would be this two times x plus y minus one equals zero
514:00 - and then the other one x minus two times y plus seven equals zero so that's how we have to set it
514:07 - up if i want to solve these two it would be those set equal to zero and then i'm solving for the
514:13 - variables x and y and what happens when i run it it gives me this negative one three as
514:29 - as a point that's the solution there we go so one way to solve systems of equations
514:36 - and if we change these to 2x plus y minus 15 equals zero so 2x plus y minus 15 we'll just
514:49 - change that and then 3x so remember three times x you know we'll write this 3x but in python we
514:59 - have to remember to put the multiplying symbol in there minus y so we're going to flip that part
515:04 - over and that's it just 3x minus y equals zero so there we go and if we run that there we go
515:16 - 39 is the solution
515:20 - so there you go one way one of the ways to solve a system of equations so graphing a system of
515:27 - equations solving a system of equations and you may have already gotten to it set it writing the
515:35 - code to solve and graph and output you know make the output even you know a little bit nicer so
515:45 - if you haven't already gotten to that you will
515:49 - so now we can get the solutions as coordinates so as we saw there it returns a finite set
516:00 - but given that set we can convert that into an x y coordinates so also here
516:09 - i split out first and second as two different as a way to put these here so now when i have this
516:16 - solution i don't have to change this code then solve first second and then we define them up here
516:24 - sometimes that's a little bit easier
516:28 - now we know that that solution is going to be a finite set so this is how we parse it out
516:37 - i'll call this variable x solution is solution dot args zero zero and then the y value is going to be
516:45 - solution dot args zero one and so there we go you don't have to think through like all the different
516:53 - ways that that's organized especially since you know you think that okay there's only
516:58 - one x y solution but there's a lot going on here so now i have these and i'm going to go ahead and
517:06 - so now i have these as x solution y solution and i'm going to print them out x equals y equals
517:14 - and just for kicks i'll also print it out as a coordinate pair
517:24 - so see zero zero i mean it works out
517:29 - because x plus y and x minus y so they would cross a zero zero
517:46 - so there we go again another way to then elevate that and solve it
517:52 - just showing you different different ways that you can parse these things out
517:55 - now we can even get the system from user input so i'm going to print for anybody
518:08 - you know this remember to use python syntax and then notice how each equation is already set equal
518:15 - to zero because i'm going to prompt for the input here first and the first equation and then second
518:24 - and the second equation and i'm not even casting these as anything i don't need to because then
518:34 - linsolve works out like that there you go first second and then parse the solutions so
518:45 - let's do this as long as as long as two things set equal to zero and i do want an x and a y so
518:52 - so i will have three times x
519:01 - plus four minus y so if you think about things in terms of y equals then you could just
519:10 - put a minus y here so three x plus four minus y okay
519:16 - and i just hit enter and it jumped down so now the second equation and we have
519:29 - all right so what if i have five times x
519:36 - what if i have five times x
519:46 - plus five here we go and notice the space minus y
519:53 - here we go hit enter it jumps down and there we go we have an x and a y solution
520:08 - pretty cool
520:13 - all right and then solving graph which
520:15 - which in in this whole course the solving graph we have the
520:28 - you'll see as we build and you know you get more and more familiar with all the different
520:33 - ways to solve and graph then you'll see that we can get more and more elegant solutions
520:41 - here we're going to import matplot library and simpy and numpy so we're using all of these
520:53 - so this one here we're just doing this with linear equations and knowing that it's linear equations
521:03 - notice i'm only asking for m and b separated by a comma so i'll call that input mb1 because then
521:19 - i'm going to split that and make that an array and from that i'm going to take
521:28 - the first one and that must be m and then the next one that must be b so we see that you know take
521:36 - this input i wanted it separated by a comma so then we're going to split it at the comma so that
521:44 - input is a string splitting the string makes the array and then now that array the first one is
521:55 - array the first element element zero i'm going to cast it as a float called m1 and then element one
522:07 - the second element i'm going to cast it as a float and that's going to be b1 and we're going to do
522:13 - the same thing for the second one m and b and then everything's going to be the second mb2
522:20 - split it at the comma makes that array and then that array the first element cast as a float m2
522:29 - second element cast as a float b2 and now that i have these
522:37 - i can solve it so here we're using simpy to solve it because i'm going to say that first equation
522:45 - i'm going to give it this variable first is this because i know it would be something in y equals
522:50 - mx plus b so it'd be m1 times x plus b1 and then minus y that would be that set to zero
522:58 - and then there's the second
522:59 - and then linsolve first second and then i'm going to just in case there's
523:16 - just in case there's a weird solution i want to take that solution
523:20 - to three decimal places so i'll take that solution cast as a float and then round it to three decimal
523:29 - places for many things you know i might not need it but i give that option so that you know whatever
523:39 - comes up it works so there we go solution i'm going to find these solutions three decimal places
523:47 - um three decimal places round them and now i have these the x solution and the y solution
523:56 - so then to make sure the window includes it rather than give it to be my normal
524:04 - my normal window and this is a float so if i cast as an integer
524:11 - and then i can add 20 subtract 20 you know i gave it each of these so that way each of these
524:20 - solutions i cast it as an integer and i know that my graph is going to include that solution
524:26 - and then given these you know points how many points do i want and then
524:32 - and then graph x because i already used x in other places so graph x is the value
524:41 - for my x values so there we go min max how many points
524:47 - and here's my y1 is m1 times graph x plus b1 and everything here for the weight y2 m2 times
524:57 - graph x plus b2 so then when we set up the graph and line one there we go graph x y1 and line two
525:13 - and the point so now i'm going to plot the point which is x solution y solution as a point
525:23 - okay so that way whatever equations we have and then print out the value
525:40 - so if we take a look at this x solution y solution we run this
525:46 - this first equation all right so let's see let's call it three five
525:59 - and let's call this one
526:05 - negative one
526:06 - one oh because i didn't put the comma
526:17 - so three five and negative one
526:25 - and there we go six
526:31 - six
526:36 - so we have these and we see these points this is the solution even though it showed up
526:47 - as not a nice integer decimal numbers but then we see the graph and then we see the point where
526:53 - they intersect and these are kind of the things that we want to build upon this is actually one
527:00 - good way to plot and graph where if you know that it's linear then just prompt for those coefficients
527:12 - and we can do that for other types of types of functions you know when we get to the
527:22 - when we get to all the parent graphs and all the different types of functions
527:25 - you see that this is one way we can prompt for you know if it's that type of function prompt for the
527:30 - coefficients and then that works out to solve use those coefficients to generate something in
527:37 - simpy to solve and use them again in that plot library to graph and then we can plot the point
527:44 - display the answer all right pretty good
527:48 - right pretty good
527:54 - so the next thing we have is quadratic functions when it's not a linear equation
528:03 - anymore not not a nice straight line so anything that involves x squared
528:11 - is a quadratic so x squared because it could be the area of a square i don't know the measure of
528:18 - the side but i know that the area would be that side times itself so if i if i have x squared in
528:25 - there there's going to be a parabola and here's the simplest here's the the root formula ax squared
528:32 - plus bx plus c so b and c could be zero they can be any number including zero a has to be a number
528:42 - because if a was zero then i don't have a quadratic
528:47 - so then you know there's the simplest one so now let's take a look at this
528:56 - back to our graphing setting up our points you know range our points linspace all this to set
529:03 - up the graph and i'm just going to have a basic y equals x squared so there we go x y y equals x
529:12 - squared and if we run this that's the most basic parabola so a in that case would be one and b
529:24 - a in that case would be one and you see it does touch it zero zero all right the most basic parabola
529:33 - so now quadratic function abc's let's take a look at abc and let's you let's go back to our interactive
529:44 - and we're going to use these widgets so
529:49 - so this one here all right you have a and b but we forgot c and we could have also
529:58 - put the values on you know in a different way but just did it this way that's fine
530:07 - now notice here it's our interactive that we want ab and c so we're going to run this function f
530:16 - f and we see function here of ab but i want ab and c so
530:24 - that's that's going to be your that'd be your assignment add c to the slider
530:31 - so there we go out here comma c equals and then i'll do the same values negative nine comma nine
530:42 - nine okay so there we go so now i have this interactive i'm going to have three sliders one
530:51 - for a one for b one for c and then when we define the function abc it needs three as the input
531:05 - and the plot is going to be ax squared plus bx and then we have to remember we also have plus c
531:20 - so now when we run it now it's all zeros that doesn't look like anything but as soon as a
531:27 - as soon as a is something now we have a parabola whether it be one now we can just take a look at
531:35 - what does a do to the parabola you see as a gets bigger the parabola gets narrower
531:44 - and zero we don't have a parabola but negative values it flips it so positive like a smile
531:54 - negative like a frown and there we go so let's let's have a positive so now what does c do
532:04 - i'm going to skip over b for a second what does c do notice the parabola keeps the same shape
532:11 - and c just moves it up or down
532:16 - and could be zero that's fine it just touches it zero zero so that's what c does it moves it up or
532:22 - down the y-axis and then b is the most interesting it moves it down and stretches the parabola a
532:35 - little bit now watch what happens when we move it so that was a very negative
532:43 - but now when b if b is zero it's symmetrical on the y-axis but then it goes around and then now
532:56 - positive b value stretches on this side so there we go some interesting things about the quadratic
533:03 - the a b and c and what they each do to the graph
533:06 - so this bottom part or if it's flipped over that'd be the top part where the turnaround happens
533:12 - that's the vertex so that's the point where the parabola turns around and the x value i'll give
533:22 - you the formula here negative b over 2a so the parabola turns around and the x value
533:31 - negative b over 2a so then given those inputs
533:43 - then we're going to create the parabola now this i even have the comment here
533:51 - because certainly i can print x with the two asterisks for the exponent but this is
533:58 - um just another fancier way to output this and you'll see it'll come out as an exponent
534:04 - it'll look like an exponent so supposing then we just prompt for these input values
534:13 - we know we know we're doing a parabola so we just prompt for these input values all right then
534:18 - then what would be the vertex well the x value was negative b over 2a so that's exactly what we're
534:30 - going to do negative b divided by and the 2a both all that needs to be in the denominator so i do
534:37 - need the parentheses so negative b over 2a because if i don't it'll divide by two then multiply by a
534:46 - do an order of operations now if i have that value then given that value what do we have that's the
534:56 - x value so we have a times and remember the general form of probably ax squared but what do
535:06 - i have i have vx is my x value squared plus b x so that'd be vx because i want the x value of the
535:22 - vertex plus c so there we go so i use this a b and c to get the x value of the vertex
535:32 - and then i'm going to plug that in to get the y value of the vertex and then we can plot it
535:39 - and then x minimum so for whatever we enter we'll just make sure that that does show up on the graph
535:48 - so counting whatever these values are and you know there you go take it as an integer
535:55 - take it as an integer and that's 10 minus 10 there we go and it's going to plot this point
536:04 - so notice just that x value just that y value as a red point and
536:13 - i probably could have done this based on x min x max but just doing this anyway notice
536:18 - the lin space just giving us that enough before and after it and then here's the y value so then
536:26 - we plot x y without the third argument by default it's going to be a line and then python will pick
536:32 - the color so let's see let's take a look so it's going to show us you see that's ax squared you see
536:40 - that little two that was the whole idea to get it to be that fancy so ax squared let's just try this
536:47 - one a is one and b is let's say negative negative five and c is six how about that
537:05 - so we see the vertex and the vertex is 2.5 negative 0.25 and we see the parabola and then
537:16 - we see the vertex plotted so pretty cool and that's it just same formula so if we just prompt for
537:28 - those coefficients and run it through those formulas we can plot this this graph just like
537:34 - we did the linear equation plotted for m and b we can do a quadratic and plot for a b and c
537:45 - so you know we could we could do this again and see some different graphs so now let's take a look
537:52 - at how to apply these parabola qualities to projectile motion and yes everything going
538:01 - through the air is a projectile and they all actually make the path of the parabola
538:09 - pretty interesting it can't not be a parabola so as we look at these the path of every projectile
538:18 - the graph of this that we're going to look at is going to be for something thrown up in the air
538:24 - straight up in the air so in this case the a value is going to be negative 4.9 each time
538:30 - because it accounts for gravity and that would be in meters per second squared so we know that
538:36 - the a value stays the same the b value represents the initial velocity so that'll change depending
538:42 - on how hard you throw the ball up in the air or launch something so that gets their initial
538:49 - velocity is b and then the c value is the initial height so c would be zero if something started on
538:55 - the ground you know like kicking kicking a ball and if it was on the ground you know the path of
539:02 - the ball is a parabola and then in that case c would be zero the initial height in meters so
539:10 - we have our classic quadratic ax squared plus bx plus c and in that case x is going to be time in
539:17 - seconds and then y is the height at any given time so let's take a look at how this is similar to
539:25 - what we were just doing but a little bit different so a stays negative 4.9 so i don't even need to
539:33 - prompt for that if it's a projectile that's going to stay the same the initial velocity
539:39 - i'm going to prompt for it and cast it as a float because remember the input will come in as a string
539:45 - so rather than just say oh what's b i'll prompt it as initial velocity and then c would be initial height
539:54 - now once we have those you can and i already did copy the vx and vy code from the last step because
540:04 - the equations for the vertex are exactly the same so you know once we have these then we use the
540:13 - same formulas vx and vy then if i'm going to graph it i'm going to change these now our default is
540:24 - always 10 in every direction just seems like a good starting point but really we just are going
540:30 - to be concerned about positive values here so i made x min negative one just that little bit
540:35 - negative just so that you can see the axis same with y min made a negative one just so that you
540:43 - can see the axis but any negative values won't apply here now because these were float values
540:51 - up here so how do i get these well the x value i'll tell you this all these parabolas are symmetrical
541:02 - so the x value of the vertex is exactly right down the middle sometimes we call it the line of
541:07 - the middle sometimes we call it the line of symmetry so it's symmetrical so whatever that x value is and
541:13 - we know we're dealing with all positive values here so whatever that x value is of the vertex
541:18 - i'm going to double it so that's why i have two times vx so there you go get that x value double
541:25 - it i should be at the end but i just added 20 just to be sure we see the end of it to you know and
541:33 - maybe a little bit more it just gives a good perspective on the graph so that's it take that
541:39 - x value double it i decided to add 20 but then we have to cast it as an integer because the other
541:44 - ones came in as float values and your dimensions here have to be integers so there we go and then
541:53 - sit with the y value i'll take that vy and yep that's the vertex that's going to be the highest
542:00 - point of our projectile and i'm just going to add 10 to it i figure that's plenty just enough so that
542:07 - you can see see this and it's not right at the edge also casting it as an integer because these
542:13 - need to be integers so this should look familiar we don't need to change this i only i actually
542:21 - changed this to four just to give you know four times this just just in case to make sure our
542:29 - graph isn't choppy two might even have been enough but there you go four should be a nice smooth curve
542:33 - to the graph and there we go we define the x values same function we've been using before and
542:40 - then that that that will work again we need these to be integers for this okay and define the y
542:50 - value as our quadratic ax squared plus bx plus c so now we're going to plot that same stuff we've
542:59 - been doing plot and then we're also going to plot you know a red dot for the vertex and display it
543:08 - so all this is going to be very similar but you'll see the prompting is a little bit different and
543:13 - then the graph the scale will be a little bit different so when we run it initial velocity
543:18 - uh let's call it 40 and initial height two so this could be something like a baseball that you throw
543:27 - up in the air you know you could probably throw it at 40 meters per second straight up and then
543:32 - by the time you release it yeah it's about two meters off the ground and so we see these and you
543:41 - see these and you could always round these i didn't for this but you always could round these numbers
543:48 - but we get the value of the vertex now what this means in time is that just over four seconds after
543:57 - you throw the ball up in the air it will hit its maximum height of a little more than 83 meters
544:04 - 83.6 meters so there we go if you could throw a ball you know that that hard and you see it the
544:14 - reason i have the negatives you see the blue for the for the axis so you know if you could throw
544:20 - a ball at 40 meters per second then uh straight up and you know there you go wow it can reach
544:27 - you know 83 meters in the air and then time wise you know four set four seconds or so in is good
544:37 - where it's going to hit its highest point and then a little more than eight seconds it'll hit the
544:42 - ground so there we go we can see what our parabola would be and you can use this to you know estimate
544:48 - different things relating to parabolas whether it be a ball thrown or a rocket launched
544:54 - yeah there we go so see i i just broke this out as you know see if everything else stays the same
545:03 - see just shifts the graph and here we're going to import all these to display this and rather
545:14 - than put a slider just decided to make this and i made it a negative so we take a look at this
545:23 - take a look uh our x values and then we plot we decided to make create this c value c equals
545:36 - and if we take a look so what do we want in in this range
545:43 - i'm going to actually didn't use c itself as a as a variable before this so i can use that for c in
545:49 - this range then i made it negative x squared plus c and then what are we going to do we're going to
545:58 - plot it you know to find the x values ones up here and here's the y value plot it c value
546:09 - and this just i did that just for the sake of setting the title you know there we go
546:14 - so you'll see how you'll see how that comes up in the title and we're going to display
546:23 - and this little this little display here you'll see how that that just makes it play out the
546:33 - the notice i don't have the defining x min max y min y max this uh plt dot gcf will actually
546:48 - just make the graph fit and each time so here's a python sleep method the argument is actually
546:58 - just in seconds sometimes sleep methods are in milliseconds this one's just in seconds
547:02 - so i wanted to display that and then wait a half a second then clear the output and then
547:14 - and then wait so you'll see it'll display this and then clear the output
547:25 - so you see
547:25 - so all those different c values we can see it grow and we can run this again if you want to see this
547:36 - so all those different c values and notice the the y-axis changed each time because it accommodated
547:50 - the larger graph so we can see that value all i have to do is you know increment c
547:59 - and it's the same shape it just moves up there we go
548:06 - okay so we found the vertex but the quadratic formula since we're dealing with quadratic
548:13 - equations what does this do this gives you the roots now if it was a protractor
548:19 - now if it was a projectile that would be when it hits the ground so you know that's a good way to
548:25 - think about it you know ground level is the x-axis and then you know the roots where does it hit and
548:31 - then you know like roots of anything growing you know wants to go below but we can call them the
548:36 - roots they are the x-intercepts because it's where the line intercepts the x-axis or we can call it
548:42 - the zeros because y equals zero so you'll see it come up with all these different things so now
548:51 - if i know a b and c here's the formula if i were to write it not in code so that if i know you know
549:02 - what x value makes y zero that's the question so that x value would be negative b plus or minus
549:09 - the square root of b squared minus four ac and all of that over two a and notice we have the plus or
549:16 - minus because somewhere along the way deriving this you do a square root and then the square root
549:23 - you have two possible answers so that and that's what it gives you the two possible answers here
549:30 - but also notice this is the common way you write it but this it's the vertex plus or minus something
549:37 - so we often write it like this you know all over one denominator but if you split it up this is the
549:45 - vertex you recognize that formula plus this and then the vertex minus this so you see that's
549:57 - another just another way to write it whether you split it into two fractions or put everything
550:02 - together over one denominator but when you write it this way then you can see that's the vertex
550:08 - plus or minus something and again we were saying that x value of the vertex is right in the middle
550:15 - so it would make sense that that value right in the middle and then plus something and then that
550:22 - value minus something you know that's where we get our two roots you know they're symmetrical
550:26 - you know they're symmetrical all right so given a b and c we have this formula to be able to
550:35 - find the roots now
550:40 - i have again here i'm just going to import math because i need that for the square root
550:44 - and i have it printed out like this where i just have the comment to remind you that that just
550:51 - prints two as an exponent i think that's just a little bit nicer and so i looked that up and
550:57 - found how to print that out nicer so you're going to print this and it's going to be showing you
551:04 - all right ax squared plus bx plus c equals zero and given that then you're going to prompt for a
551:10 - b and c so there we go now here this is where you're going to check so i just put these here
551:23 - we'll define these variables here they're zero but we're going to overwrite them not here but
551:27 - a little bit later because i want to define these variables that they exist outside of this if
551:35 - statement but i want to run it through this if statement here now notice what this is b squared
551:42 - minus four times a times c because remember that's what's underneath the square root here
551:54 - and if that was negative then your answer is imaginary because you can't square root a negative
552:01 - number now certainly you know some mathematicians you know years ago decided well why should we let
552:08 - that stop us if they're not real but for our purposes here we don't want a negative under
552:15 - the square root we're not going to go into imaginary numbers so we're going to test if this
552:22 - is less than zero then we're going to print no real roots and this there's a word actually for
552:28 - this stuff that's underneath the radical here and that's the discriminant because if b squared
552:36 - minus four ac if that was less than zero then there's no real roots if that actually equals
552:43 - zero then this plus or minus doesn't mean anything because plus zero minus zero it's the same thing
552:48 - so if that equals zero then there would be one root and then any other number then it would be
552:54 - two roots and i think that still comes out the most common it's going to have two roots but
553:00 - these other options come out often enough no real roots what that looks like in the graph
553:06 - is a parabola that does not touch or cross the x-axis so you could have that you know
553:13 - just parabola and it opens up and crosses early you know at some higher y value
553:20 - you so that's the discriminant and knowing that tells us you know if it's negative if it's less
553:27 - than zero then there's no real roots it if it if we only have one root if equals zero and there's
553:32 - only one root we're just going to print that out twice and not worry about it so how are we going
553:39 - to translate this this quadratic formula into this well we're going to do x one and two we're
553:48 - going to do the very similar thing just one's going to be plus in the middle one's going to be
553:52 - minus so let's try this so we have negative b let's do the plus side first plus math dot sqrt
554:04 - of b squared
554:10 - minus four times a times c
554:15 - c all right now all of that remember was in the numerator so i'm going to put parentheses around
554:26 - all this as the numerator and then divided by our vertex
554:37 - two divided by two a
554:38 - okay so order of operations all this stuff python will know but then since i have numerator and
554:52 - denominator i'll put everything in the numerator in parentheses and then everything in the
554:56 - denominator in parentheses and then the second root i can really just copy this
555:06 - and paste it here but the difference is it's going to be minus
555:14 - there we go so now a lot of things you can do that you know in solving a quadratic very often
555:25 - we already did the vertex and that and finding the roots these are really common things that
555:29 - you need to do with a quadratic formula so having this there we go showing that display
555:36 - so let's just try numbers that work out pretty nicely one and we have to do five and six let's
555:45 - try that look at that the roots are negative two and three good now i pick those that works out as
555:54 - nice integers but this will still work if you have you know like one five and let's say five
556:08 - you see it does have roots definite real roots but since it doesn't certain ones don't work out
556:15 - and there's actually like a more complicated square root answer for this
556:18 - this that could be a bonus bonus thing to do to output that square root answer
556:26 - so there we go the roots are this and this and you could always also
556:33 - expecting you know that you might have some weird irrational roots you could round it to you know
556:39 - three or four decimal places and i'll leave it up to you if you wanted to to you can put it put this
556:46 - all together and have something where whatever the application you can prompt for a b and c
556:54 - get the roots in the vertex and graph it you know as well as displaying the roots in the vertex
557:00 - so you know just to show you you know we can put these two things together you know some
557:07 - interesting things you can try so sometimes the graph i like the graph but i know it's a parabola
557:15 - i'm much more interested in just a table of values so in this case and just for the sake of it
557:25 - i made this linear so here we go we have this now notice i didn't have
557:32 - a fig dot or a comma x i just have x equals so i'm not going to need the figure
557:39 - here the graph i just want this because this plt dot subplot in matplot library that's that's
557:50 - going to give us a table and access off right because i just want a table so here's our table
557:58 - we're going to we're going to give it a title we're going to run this and then change it
558:03 - and notice how this works i can define my columns and i could use another variable but i just made
558:11 - it cols for columns so i can define my column headings and then each row notice it's a tuple
558:22 - tuple of values so in this case in the first row x is zero and y is zero
558:35 - and then what i can do is in this case since i have this for a in range i just decided to make
558:44 - it from one to ten here's what we do rows dot append and then i'm going to append my x and y
558:55 - values you see so x is my a value whatever that's going to end up being well it's going to be one
559:02 - then two then three and then two a you know just something simple for the y value so this is this
559:09 - is how you can get a table of values rather than graph it you can put it in a loop and append each
559:18 - row so you set the columns set the first row and then append each row so now outside of that loop
559:32 - x dot set title i've already defined it up there and then take a look at this plt dot table
559:37 - and it takes the argument cell text equals rows column label equals calls cell location and you
559:45 - know i feel like that's uh that location's you know okay this goes all the way over here and we
559:55 - just close the parentheses there just to show you so it's still this last direction plt dot show but
560:08 - what we're showing is a table instead of a graph and you see how it looks now you could always do
560:15 - both so you know that would be that would always be something you could do you do both table on
560:24 - table on the graph but who knows maybe you want one or the other and it as this is leading to
560:30 - data science this is like an introduction there's some things you can do to generate a table values
560:37 - or things like that but as you get into you know in the next math course and then certainly
560:45 - when we get into the stats course we're going to look at like all different ways to make tables
560:50 - so this is just one way and you can we'll see even more ways but there we go so y equals 2x
560:55 - there we go and you could always make this quadratic or whatever you'd like it to be
561:01 - again just for simplicity to illustrate the table itself i wanted to keep it we'll just call it y
561:07 - equals 3x plus 2 and where do i need to put this well this is just because i wanted to display the
561:15 - correct thing so that's going to be the title and here i this is where i'm going to take it and
561:26 - a is my x value so it would be three times a plus two there we go and we run it
561:36 - it you know and zero zero five ah now zero zero actually should because since this is plus two
561:55 - now one of the things you can do is you could keep this and then start the range at zero
562:03 - and remember for the range at zero you don't need to put anything if that that would start at zero
562:10 - or you could just say oh i know what this initial value is going to be let me just put that here
562:20 - so you know a couple different options there
562:26 - so there we go
562:27 - so there we go we have our table okay so different ways to display and i just wanted to you know
562:38 - have a nice an interesting uh mini project here so we have the quadratics and we're talking about
562:45 - projectiles so we could have you know we could we could you could make a projectile game
562:53 - um so what this would be is remember knowing where you're you're starting from you could uh
563:02 - randomize the height and location of a wall and you have a toy rocket that must clear the wall
563:11 - so you can you know the game would be determined what initial velocity
563:16 - would get the rocket over the wall and you could take it even further that bonus animation
563:23 - path or you could you know there's some other things you could do so i left this here for you
563:31 - to write but i'm going to show you here's one thing you know one one way to do this
563:37 - so we imported all this stuff and actually a lot of the things i took from
563:44 - uh one of the earlier steps where you're graphing a projectile so i took a lot of things from there
563:52 - and i'm also going to import random and import math so here i just now i i made this a modification
564:06 - so this is the what it will print out it just has to land so many meters away so you could um
564:15 - randomize also like h for the height of the wall i just made it the location of like a finish line
564:23 - so here's this random integer between one and a hundred and then it's going to print that a toy
564:30 - rocket has to land this many meters away and then we'll go through so here we go um
564:40 - so input initial velocity and instead of it it's zero zero it could i just put it made c1 it
564:50 - you know just because but it really could be zero and then same things we want to represent
564:57 - the vertex here and the x min what i would do is x max now i just made this 200 because
565:11 - i know that the wall is going to be you know anywhere between there and 100 and you know
565:18 - i just left it as that so and the y maximum i left it so that you could see where the
565:25 - projectile goes but we could always go back to what we were doing before and copy the y minimum
565:37 - and y maximum the same thing where we get this that where we get x min x max we could always copy
565:51 - we could always copy these because that's what we want to do here we want to put these in
566:03 - and that was that was the idea i want you to you know make use of code you already have that's
566:08 - these these later steps that's really what what it is i want you to make use of code you already
566:14 - have and then maybe modify it a little bit there we go we could have now this would be fine
566:23 - because wherever that wall ends up being or the the finish line this is still gonna it will still
566:29 - print everything and that'll be fine there you go path to the projectile and then here we have
566:37 - the lot the line for the distance and i'll just make it a red line and so notice i just have
566:46 - i just have it go all the way up to the top here location my two x values and then from zero up to
566:54 - y maximum so that's just going to be a line if you wanted to also make it a wall so you could make
567:05 - you know h equals and we'll do the same random integer
567:16 - where do i want this to be i want this to be i don't want um
567:21 - a hundred's probably plenty you could even make it a thousand
567:28 - um you'd be surprised you know these rockets um
567:31 - um has to uh uh clear a wall
567:43 - so many meters away and there we go so if h would be the height and then down here
567:50 - the height of the wall would just be h so that's the slight thing in looking at this a lot of
568:01 - times the wall the scale of us the wall end up being so tiny but it's fine we'll uh we'll keep
568:09 - that there so there we go so the line and plot the parabola now notice i have the roots and i
568:22 - pick just one of them and as it turns out because of the way you know a is negative the the negative
568:30 - b minus is the root that we want that's the one that's going to for the for our purposes here
568:36 - that's the one that's going to be greater than the parabola so notice you you could you know copy the
568:41 - quadratic formula again and the way it displayed i wanted to round this one so round to two decimal
568:49 - places so here we have if root two is greater than or equal to location i wanted to print out the
568:58 - distance i wanted to print out the distance and then tell you success and if not missed it by that
569:07 - much here we go all right so this is it there is actually no test for this but you could see so
569:21 - here we go a rocket has to clear a wall 85 meters away initial velocity and you could say oh okay
569:27 - my initial velocity 300 and then we see that initial velocity is 385 meters away and you see
569:45 - then we're still we didn't clear it so missed it by that much and you can run it again now other
569:55 - things you can do with this so 19 meters away i'm still going to just really increase the
570:02 - velocity of 250 let's make sure we clear it you see and we see the wall here and oh boy yes we
570:12 - did clear it now some of the other things you can do is you could take this even further and knowing
570:21 - that distance take that as your x value of your vertex and you could write a formula that would
570:31 - always make a parabola that perfectly that perfectly clears this this wall that'd be pretty
570:40 - interesting or you could modify this game to say that it has to actually get to a certain distance
570:48 - um not necessarily that distance or more but maybe you say all right you have to hit a target that's
570:55 - exactly 50 meters away and you don't want to miss so that would be an interesting thing because then
571:02 - you could you could actually write the code and i'll leave that to you as you know as for something
571:08 - as for something you could write the code to calculate the projectile that will land exactly at that spot
571:20 - so there we go now for this you know upward motion one of the ways you could take half of that
571:31 - you know whatever the distance half of that and then that's your x value um
571:36 - of the of the vertex and you can use that to calculate you can you can use that to calculate
571:46 - some formulas and as i said we'll get even better formulas as we get into pre-calc because
571:51 - we will do things to adjust the angle and such to get it to be exactly a distance but there you go so
571:58 - so showing you how to make a projectile game i think it's pretty interesting you know the
572:05 - you know that you could and you could even make it you know like loop through this and you know you
572:09 - have to how many ones do you get correct but there you go the projectile game now continuing on this
572:19 - the this is going to be more like the open-ended part all the things that we've been doing
572:23 - you you should put this together in a function that will graph or that will graph or display
572:33 - a table solve a system of equations now if you've been working through everything else in this course
572:39 - you might have some of this already put together and that's where this uh the certification project
572:48 - here is you know hopefully you've built up to this so you know you get to this point you're like okay
572:54 - i know how to do this and i have some of this stuff in place so they kind of just put it together to
573:00 - organize it use some of the code that you've already made you know you want to have all these
573:04 - different functions because then you get to the certification project too and you're going to uh
573:13 - display you know this is what you want to do build the calculator that does this display the graph
573:18 - and a table for any y equals input cool and you can make that prompt for input or something just
573:26 - very clear in the code that you know here's where the equation is solve a system of equations without
573:31 - graphing graph two equations and plot the point of intersection so there we go that's going to be
573:40 - pretty big you know graphing the two solving and graphing and given a b and c plot the roots
573:46 - in the vertex so that'd be some things you know we've been doing some things with linear equations
573:53 - do some things with quadratics enter a b and c see the graph plot as well as the roots in the vertex
573:59 - maybe also print them out you know solving and graphing systems of equations
574:06 - showing the table and then you have you know these projectile games you have the projectile
574:10 - game you have the scatter plot game you can even modify that scatter plot game and make it
574:16 - you know something else that might be interesting so there you go so you have the things you've been
574:21 - working on you put it all together to build this graphing calculator and that's going to be the
574:26 - certification project and by now you're even deeper you know what you're doing in algebra and
574:35 - we're about to then have some more twists and see some more complicated equations some more we can
574:41 - do with this all right
574:43 - so what do we mean by parent graphs and we'd have heard this in code the parent or child that the
574:53 - child graphs have everything that the parent graphs have plus some other
574:57 - additions and so these paragraphs are the basic patterns that other graphs then add to or change
575:06 - so let's take a look at this the one the most basic would be y equals some constant which i'll
575:13 - just call c here and so that would be this blue line here just a flat line no slope you know like
575:21 - y equals three or y equals four or something like that it could even be negative but that's it
575:27 - nothing else and whatever the constant is it's always going to be the same so that's why we
575:34 - call it a parent graph and whatever the constant is that graph's going to have that same look
575:41 - you know flat no slope you know nothing else going on just y equals some number
575:47 - and that's why it's a parent graph because that's like the basic pattern now we were talking about
575:52 - things like y equals mx plus b well the paragraph for that is y equals x just y equals x so notice
575:59 - b is zero and just that basic it's not y equals a constant because there is a slope to it but
576:07 - right the paragraph is just y equals x and then we can get like y equals you know two x plus one
576:14 - or anything like that we can have other things so this wouldn't add anything this could add two
576:21 - things you know i have a slope or i could have a different intercept you know so there we go
576:26 - this so that's the parent graph another one i wanted to show here because i think the drawing
576:32 - of this works better than somehow sometimes how it plays out with python but this is the floor
576:37 - function and so it's this step function some people call it step function floor function
576:43 - greatest integer but the floor is when you're not rounding you're just dropping the decimals even if
576:48 - it's 0.9 doesn't matter we're just dropping all the decimals so it's the same value so here all
576:54 - these decimals it's zero until i get to one now it's one and then 1.1 1.2 it's all the same
577:02 - until i get to two so that's it there there are no in between points here it's just that integer
577:10 - and then at the next integer it jumps up so again that's a parent function and the floor function
577:16 - the ceiling function where no matter what it is i go up to the next number or the round function
577:22 - they're all very similar looking graphs just shifted a little bit so that's why that's again
577:27 - a parent graph we talked about x squared as a parabola and i didn't worry about drawing the
577:36 - even the axes for these because i want to get the idea of this general shape and then x to the third
577:42 - it's kind of like half this parabola bends down now the reason why i just have these is because
577:48 - as you get into like x to the fourth x to the fifth all the even exponents if it's just the parent
577:55 - graph look more like this all the odd ones look more like this but then if i have other things
578:01 - going on in that graph so remember x squared could have ax squared plus bx plus c now if i
578:09 - had other things going on it's still a parabola but it's a little bit different shape parabola
578:13 - maybe it's like a little bit narrower a little bit wider or it moved somewhere else but it will
578:18 - still be a parabola the x to the third if i end up with x to the third plus other things in there
578:30 - then that those curves get a little bit deeper
578:34 - or you know that's you know again paragraph and then beyond that we get some other things
578:44 - and we'll take a look at some of this in the code too and the same with if i had x to the fourth
578:51 - so x to the fourth is going to look more like this maybe a little flattened in the middle
578:56 - but if i had x to the fourth plus a bunch of other things in there you know plus three x squared
579:01 - something else times x you know all these other things that could have three turnarounds at the
579:08 - most you know x to the fourth could turn around one two three times and you know might not be
579:15 - always perfectly symmetrical but if all the if all the exponents are even then it actually would be
579:23 - symmetrical kind of cool it works out that way so these other graphs we have the paragraph but then
579:29 - we could have other things going on and i didn't want to draw a lot of this here because i want to
579:35 - talk mostly about it when we get to the code because that way we can see the graph and the
579:40 - way python displays the graph is going to be much better than my drawing we get the sense of the
579:44 - parent graphs these are the basic patterns the simplest pattern of that type of graph
579:50 - and then we can look at what what else we can change or add to to each function and then how
579:57 - that affects the graph so let's take a look at the code so here we're going to look at all the
580:02 - parent graphs and the code to create them and they're all going to start out with the same
580:09 - setup we've had so far for setting up any plot mat plot library numpy set up our dimensions
580:17 - our points set up the graph so this simplest one is a just a constant y equals five or if y
580:27 - equaled any constant number notice x is not even in there just y always equals five so when i plot
580:35 - this in the same way that i'm plotting the x-axis i'm just going to have this plot minimum from the
580:46 - minimum to the maximum and then y is just always going to be five in this case i'm going to make it
580:51 - a red line and that's what it looks like it's a flat line there's no slope because i don't have
580:58 - that whole part of the equation no x value and y is just always five and it would be the same if
581:08 - y equals you know seven point five or y equals two or you know anything flat line no slope
581:15 - no slope so that's a constant graph
581:20 - and then the linear graphs we were talking about linear graphs but this is
581:24 - the simplest linear graph y equals x so anything else i do with that you know at have a slope
581:35 - in this case it's y equals one x so the slope is one plus zero so the y intercept is zero
581:43 - so again the simplest and then anything else i do that is an offshoot of this parent graph
581:51 - so there's our simplest and notice everything else i do to set this up and how do i plot it
581:58 - my x value and then the y value is x so there we go x x and there's my y equals x graph
582:08 - the slope is one and it just goes on the diagonal like this there we go
582:15 - so every point here you know three three four four five five etc
582:23 - so the quadratics we were looking at quadratics this is this basic quadratic graph
582:30 - y equals x squared so before i do anything else to it that's just enough to make it a parabola
582:40 - and here we're plotting this my x values and then the y value is x squared
582:48 - and there we go
582:49 - so our parabola so in this case you know x squared so a is one b is zero c is zero that's all we have
583:00 - and then any other thing we do to the x squared you know add other things x squared plus you know
583:08 - uh three x plus four or something like that or some you know whatever else we would have
583:15 - is uh an offshoot of this paragraph so there we go and i can make it negative and change that
583:24 - and we see the negative a flips it upside down so we have you know negative like a frown positive
583:33 - like a smile so i'll go back to the smile there we go again the basic paragraph x squared
583:41 - x squared and then a cubic graph y equals x to the third so the quadratic is x squared because
583:50 - it's like the area of a square if i know the sides the cubic x to the third because it's like the
583:56 - volume of a cube if i know the sides so setting up the graph here and uh the comment we'll talk
584:04 - about later just starting out with the basic x to the third and we see the graph looks like this
584:14 - so some you know some of these you know i could sketch it out enough to show you but we see it
584:22 - kind of looks like a parabola with the left side flipped down but not exactly and this is the
584:27 - simplest cubic graph so what i wanted to show you is also supposing we have supposing i just
584:38 - have other things so plot the x values and supposing i had like x to the third minus two x
584:45 - squared minus three x plus four you see i can have all these other things going on in the graph
584:51 - and this is how it affects the cubic graph you see it gets these deeper turns that were just
584:57 - kind of flattened out before but x to the third is going to turn around at the most twice so there
585:08 - we go we see these possibilities here all right so again you know now this is not a parent graph
585:14 - this is you know a more complex graph the parent graph still is x to the third so we're going to
585:21 - so we go x to the fourth and yes they have a name too quartic so x to the fourth and all of our
585:30 - even exponents so we see i'm just plotting x to the fourth all the even exponents look a lot like
585:39 - this so x to the fourth if i also had like x to the sixth notice how it's similar and i probably
585:52 - need more points to make this look smoother but you get the idea now this this is where it gets
585:57 - beyond what i can graphs what i can draw so i like showing showing up with the code but all these
586:03 - even exponent graphs uh we might be able to do x to the eighth and it a lot look horrible
586:11 - that looks kind of horrible so x to the fourth is probably the last good one
586:18 - other than that then we have to change you know how many points we're doing to really make
586:25 - it a lot smoother but that's where it kind of looks like a problem it just flattens out more
586:31 - around zero and all of the even exponent parent graphs will look like this and i also could have
586:39 - x to the fourth plus other things and then the graph would look totally different that could
586:44 - go up and down as many as three times i could have as many as three turnarounds and quintic
586:50 - you thought we were going to run out of names but nope x to the fifth we have a name for that
586:55 - quintic all right so x to the fifth and when we look at this there we go x to the fifth
587:07 - looks a lot like x to the third so all the odd exponent graphs are going to look a lot like this
587:16 - but again just a little bit more flattened out and if it's just this if i have x to the fifth plus
587:22 - other things then the graph could be all all over and it could turn around as many as four times
587:29 - but there we go so all the even graphs are like x to the second or fourth it's symmetrical about
587:38 - the y-axis and kind of looks like a flattened parabola all the odd graphs look like this x to
587:46 - the third the fifth all the odd numbers look like this you know and it would go back and forth and
587:53 - then with you know as they get more complex with other things going on you know you're getting
587:57 - beyond the parent graphs then we have all they can actually have the ups and downs so the absolute
588:04 - value graphs and there's a lot of patterns with absolute value graphs that are also the same
588:09 - as they would be for x squared graphs the way the vertex can move around so the simplest absolute
588:15 - value graph is just this absolute value of x but like the other graphs i could be multiplying by
588:20 - something here inside the absolute value or outside i can add or subtract something
588:26 - so this is how i would write absolute value with the two vertical lines here next to it not
588:32 - parentheses and here's how i would put this in code abs and notice i don't actually need to import
588:41 - anything that's part of the core python library so that's the absolute value of x so as i plot it
588:50 - then it looks like this because absolute value means it's just the number like positive or
588:57 - negative doesn't matter it's just the number so it would be like plotting y equals x and that
589:05 - would be in the positive direction but y equals negative x so for all these negative x values the
589:12 - y value is positive because it's absolute value so that's why instead of continuing down like
589:17 - the y equals x graph it comes to a point and makes a v so there we go so just like x squared
589:27 - whatever x is it's going to end up being positive when you square it absolute value just makes it
589:33 - all it just doesn't do anything except make it positive and so that's why there's there's
589:38 - similar patterns to some of these but there you go perfectly straight lines come to a point
589:42 - that's the absolute value graph and then i can have square root graphs there we go so here's
589:49 - how i write the square root if i was writing it out and if i'm plotting it i'm going to use this
589:56 - now there's math dot square root and there you know and other ways to get a square root but i'm
590:04 - going to use numpy dot square root because we're already using the numpy library for everything
590:10 - else so since i'm already using numpy for everything else that i'm graphing i definitely
590:15 - want to use np dot square root so the the comment we'll talk about in a second but here's the basic
590:23 - square root graph and we can start talking a little bit about inverse functions because this
590:32 - is the inverse of x squared and that's why i also included this that if i uncomment that and now run
590:43 - it you see now just the square root it's just going to be positive because if i include the
590:51 - negative part then that's not a function these x values have two possible y values but when i put
590:59 - them together i see that it looks like a parabola on its side and that's really what it is that's
591:04 - the inverse of x squared because i want to do the opposite i square root things so yeah that just
591:11 - helps us see it but the full graph the true square root graph is this because then it's still a
591:19 - function all these x values have one y value and then there is just no y value beyond here
591:28 - beyond this all right so there we go so there's the square root graph and another way to do this
591:35 - is with a rational exponent now overall for this graphing python does not like rational exponents
591:42 - so i'm going to do this here and i'm going to show you that this actually did work
591:47 - x to the one half exponent but if you try this for any pretty much any other fraction instead of one
591:54 - half it's just not going to work it's just going to give you an error python doesn't like it but
591:59 - there you go that's the same that same graph so x to the one half in solving it if you weren't
592:07 - graphing it you know it works out nicely the denominator is your root so square root denominators
592:14 - so square root denominators two or if i had a cube root the denominator is three so i'm going
592:21 - to write it like this here x to the one third so that's the cube root of x so it's what number
592:30 - times itself three times gets me x so like the cube root of eight would be two because two times
592:35 - two times two is eight so we're getting the cube root and i don't need to worry about the rational
592:44 - exponent here because numpy just like there's a square root there's a cube root also cbrt
592:54 - so that gets the cube root and this one i can have negative values because if the factor shows
593:03 - up three times i can have negative negative negative so that works so there we go i can get
593:09 - the cube root of x there we go so somewhere around here i have when x is eight y is one
593:18 - you know there we go and then we get the cube root so the all these parent graphs just like
593:26 - the other ones i could have other things going on in this equation the cube root of x plus something
593:31 - that would shift it up you know i can move it around but you know these are the basic
593:36 - paragraphs these types of shapes and then other graphs are just you know versions of these
593:43 - all right so the floor function now there's the floor notice it kind of looks like absolute
593:50 - value but the it does have feet at the bottom that go underneath kind of like an l and a backwards l
593:57 - to show you the floor the uh other function that's similar that's the ceiling function
594:03 - and the floor function is the one where you drop all the decimals so it doesn't matter if it's
594:10 - like 5.9 and it doesn't round you just drop it and the answer is five the floor function
594:19 - just drops the decimals and just takes the whole number other times people call it the greatest
594:24 - integer function or the integer part function same idea there's also the ceiling function which no
594:30 - matter what the decimal goes up to the next one and we have round they all work very similar
594:36 - so we have all these
594:40 - and to plot the floor function now i want to show you this this is actually
594:47 - the function np.floor but there's a reason why i didn't do that first because i put all this in
594:58 - in a loop to graph this as a bunch of points because i feel like this illustrates the floor
595:07 - function a lot better it does give these steps and sometimes on the graph people look call it
595:11 - a step function so it's the same value until you get to the next integer then it jumps up
595:20 - and it's that same value until you get to the next integer
595:24 - so all these are just sudden jumps once it gets to the next integer and it's the same value doesn't
595:30 - change because if it was 3.1 the floor is 3 if it was 3.5 the floor is 3 it's 3.6 you know all those
595:40 - values if the floor is 3 and then when it gets to 4 boom then it jumps up so the the reason why i
595:48 - went through all of that is that the actual floor function i feel like doesn't display well but i'll
596:00 - show you you see it gives these values but these vertical lines really shouldn't exist
596:12 - because it's not continuous like that and so it's just what you know numpy just wants to connect it
596:20 - but that's what the floor function looks like in numpy but truly mathematically that's not what
596:27 - it looks like so that's why i wanted to do the loop and show you so there we go so that's the
596:32 - floor function exponential functions so now we go from things like x squared to x is the on
596:43 - is the exponent so what happens when the base doesn't change but then the exponent changes
596:49 - so that's two to the first to the second to the third well we can right away see that that
596:55 - value is going to get really big really quickly
597:01 - and so here to the exponent of x so we have we see it gets really big really quickly
597:14 - and then when we think about our exponent rules when x is zero anything to the zero is one so
597:21 - so all these exponential functions cross the y-axis at zero one and then for negative exponents that
597:29 - flips it to the denominator so two to the negative first is one half to the negative second is
597:35 - negative is one fourth and so the negative exponents for negative x values just really
597:41 - get smaller and smaller so it has that curve but it's not at all parabola on the left here
597:49 - that just gets smaller and smaller but actually it will never touch zero if you get on something
597:56 - where you can keep zooming in you'll see that it just gets smaller and smaller but never touches
598:01 - zero and then over on the right it just has that upward curve and as steep as it looks it actually
598:07 - is never perfectly vertical it's just really steep and so that's the look of all the exponential
598:14 - functions we use this a lot of times in percent increase compound interest things like that
598:23 - but there we go that's a lot of the exponential functions here
598:27 - all right so there we go so these are all the key parent graphs
598:34 - all the other graphs you're going to look at in algebra are going to be some version of these
598:40 - graphs oh it's like this graph but then with some some other things that we that we added
598:47 - uh later on when we get into or another course in trigonometry the trig graphs are different
598:55 - and one of the big differences is they keep repeating these are all you know they do one
598:59 - thing and then that's it but we'll get to those graphs but for anything in algebra these are all
599:04 - the parent graphs so when you look at a graph and you want to figure out well what could the equation
599:10 - be that generated that graph you you say well which parent graph does it look like oh it looks
599:16 - like this so it could be you know an exponential oh it has that other sort of curve it could be a
599:22 - different one so you know that's why you want to get a sense of the parent graphs it helps you
599:27 - develop equations to fit different curves later on and we'll get into some of that stuff okay
599:33 - so there we go and you will have this as a resource too to consult as you know take a look at the
599:39 - different parent graphs now that we've worked through the core skills in this unit let's look
599:49 - through some extra problems and i'm going to work through extra problems using the colab notebook
599:54 - so you can see how you can apply these resources that you're building and use that use these to
600:00 - use these to solve problems that might come up in a textbook or in day-to-day life so we're going to
600:05 - go through some more extra problems here so now that we see these parent graphs let's let's do a
600:12 - little twist here let's look at the these sliders we can add to modify the parent graphs because
600:18 - that's it that they're meant to be modified so that first one y equals a or any you know value
600:26 - value just it's that horizontal line if we add a slider now notice the setup for the slider
600:34 - that you know we're going to import this in line and it's a widget for the slider and then all of
600:43 - our graphing is going to be in this function that we redefine here define and i called it the function
600:50 - f because i wanted a shorter function name f of and then it's going to take a for the slider and
600:57 - in this case we're going to also also going to zoom so all these values are based on the zoom
601:05 - slider so you can zoom in and out and we still have these points but just all the graphing happens
601:11 - here within the function set the plot and notice all this same thing but the zoom then would affect
601:19 - all this and so mathematically you know if i if i wasn't writing code i would just write you know
601:26 - y equals a but we're going to put it here i'm going to have two y values because just this
601:34 - perfectly horizontal line we kind of have to do it this way and we're going to plot this
601:41 - horizontal line just like we did with each axis you know the x values x min x max and then the
601:47 - y values y one and y two which are both the same which is whatever this a value is so here's the
601:55 - slider you know run this function f a goes from negative nine to nine and then the zoom so when
602:02 - we run this so there we go and as i increase the slider so we see our general graph and i can zoom
602:14 - in a little bit but that's what we get like y equals some constant and then i see the slider
602:22 - that parent graph it's still the same look that horizontal line it's just that from the parent
602:30 - graph to the child graph it just it just changes where it is see but then you know the slider and
602:40 - then the zoom that becomes even more interesting when i have our classic slope intercept form so
602:48 - now i have y equals mx plus b what happens when i use sliders and i'm going to change
602:56 - m b and i'm you know i like the zoom in there so i'll just keep that in there
603:01 - so we have everything for the zoom now here and these next few we can do the normal you know
603:07 - numpy linspace and that's the array that i want to graph for my x values so here
603:16 - i have y equals mx plus b so look at that m and b are still variables here because that slider
603:24 - is going to affect it and then that function is going to take that input so now i can have a
603:31 - slider change the m value change the b and i still have the zoom and then this is what i have
603:39 - so it's right here because the slope is zero but what happens as soon as i make the slope one
603:46 - now i start to see my graph and i can see the slope and then as b increases
603:53 - we can see it the y intercept moves up and down there we go and some of these
604:03 - you know now we have some more that we can see when we zoom in there we go and this particular
604:11 - one i didn't put the grid on there but just to show you that as that parent graph y equals x
604:18 - you know that's really just that's the paragraph y equals x because it does have a slope but then
604:23 - i can change the slider and see the negative values and from that paragraph changing these
604:31 - two values makes it its own graph but it still is that linear equation because that's the parent
604:37 - graph still has those core features but then we modify it a little bit i can change the slope
604:44 - i can change the slope i can change where it crosses the x-axis and sliders are a good way to
604:50 - illustrate this so we have now three variables for our quadratic ax squared plus bx plus c
605:02 - and so my function i'll take a b and c and zoom in
605:06 - so then my y value is just this standard quadratic i remember x squared is the parent graph you know
605:18 - a is one and then just x squared that would be the parent graph the simplest quadratic it's a
605:24 - parabola but then when i have these three it still has that core feature of the paragraph it's still
605:30 - parabola but then i change and we can see what a b and c do to these so we have this interactive
605:38 - i'm going to adjust a b and c and as well as the zoom and so we see it defaults to right in the
605:49 - middle so let's just put a now that's one but we can use these sliders to see what does what happens
605:58 - to the graph when a increases you see it gets narrower and then what happens zero it's not a
606:08 - parabola anymore but then as it's negative it flips it down there we go so we can see how these
606:16 - affect you know we'll bring it back up to positive like a smile then we can take a look at well i'll
606:24 - jump to c next because that's the easiest it just same shape it just moves it up or if c became
606:33 - negative same shape and it moves it down and see each time i move this the it runs the function
606:41 - again and then recalibrates it with these new values and then b i think is one of the most
606:48 - interesting because i move it as b increases it dips down to the left kind of interesting
606:59 - and then i can bring it back and then as b decreases it dips down to the right
607:07 - it dips down to the right so just some interesting things that you know so this would be a b and c so
607:18 - this would be x squared minus 5x minus 5 that'd be the equation here or then x squared minus 5x
607:29 - minus 6 and we can zoom in and see you know i i didn't put the values on here so so exactly but
607:45 - you could always do that too so we see these sliders now the reason why i like this and i
607:52 - want you to notice with absolute value how similar those patterns are to the x squared the absolute
607:59 - value because remember whatever x is if you square it it's positive absolute value also then just
608:06 - makes it positive but the core absolute value function so you see absolute value but i'm taking
608:17 - in three different values here from my absolute value parent graph i still have three sliders why
608:24 - because i have a times the absolute value and then inside the absolute value i could have x minus b
608:32 - that's where the b shows up and that shifts it left or right and then plus c shifts it up or down
608:39 - so we see that plus c shifting it up or down and let's take a look at these so again a is zero i've
608:49 - got nothing as soon as i change it now i have my absolute value and of course the big difference is
608:56 - this is linear each line is linear but then it comes to a point because again positive x values
609:03 - were negative the absolute value makes it positive so we see some of those similar patterns though
609:11 - as a increases a times the absolute value this gets narrower just like it did with the parabola
609:19 - and c keeps the same shape but just moves it directly up or moves it down and
609:36 - we have b this is this just moves it exactly side to side so that's you know this is where unlike
609:45 - the parabola there's no other deeper curve to it it just moves it exactly side to side so
609:57 - there we go and even if c
610:02 - you know c was more it's still it still moves it side to side
610:06 - it still moves it side to side so b is negative eight so the if we see the zoom here
610:19 - so if b was negative eight
610:26 - then we see that that is the x value
610:31 - value so it's at negative eight and then because it's b it's x minus b
610:44 - is the is the formula so b is negative eight then that means that's x plus b negative negative
610:52 - makes it a positive that's x plus b in the inside the absolute value so negative eight
610:58 - and then c is three then we go up three so we can see again you know where is that point
611:06 - and we see the basic absolute value and then what each of these things do and how it's very
611:11 - similar to the quadratic but that has its own its own things and we can do this you know those are
611:18 - the most useful i feel like for a lot of algebra you know more commonly useful but square root
611:25 - functions can have a slider too
611:31 - and this one it gives a runtime warning which i just left in there and it still ran because
611:40 - the you can't take the square root of a negative number so you know i still have all these different
611:46 - zoom values that i could you know at some point i get a negative number and it just does not
611:52 - compute it won't show up but it actually that doesn't break this it will give me the error
611:58 - but then that's it so here if i take a look at b and i make b zero here if we run this again
612:10 - so again everything zeroes out where is it but if a is anything there we go
612:16 - and we can zoom in a little bit see this curve a little bit better there we go so if a is anything
612:25 - and then we see b it moves it but remember it's because like the other one x minus b is the formula
612:37 - so when b increases it's really x minus three moves it three to the right
612:48 - and then c also you know moves it up and again we're looking at that point where this starts
612:56 - where that square root function starts whereas if b was zero and c was zero you see that's where
613:04 - we start at the origin zero zero so we see you know your basic square root graph and again you have
613:11 - these different values you can have a times the square root and then square root of what x minus
613:19 - b and then i still have plus c outside that can shift it up or down so we see from the basic
613:25 - parent graphs all these key things and we start hopefully you're starting to see the patterns of
613:29 - how this comes up and you can have these sliders with all different so if we have x to the third
613:36 - now all four sliders and we can see you know x to the third now for this one i just left it
613:47 - as this to show this is what happens you know a increases this you know can make it a little
613:56 - bit narrower but b is even zero c is negative d is even zero across is it zero zero but i just
614:06 - set up you know that's where you get you know some deeper dips in your x to the third functions here
614:14 - so and it's usually some mix of positive and negative coefficients that give you these deeper
614:19 - dips and you can do the same thing x to the fourth and you can have five sliders because
614:29 - x to the fourth would also have a times x to the fourth and then b times x to the third
614:36 - c times x squared d times x to the first and then the constant e which actually would be times x to
614:43 - the zero so there we go and having these you know we can adjust these they're not x these are not
614:56 - always symmetrical but i picked one that actually could make it symmetrical and what that is is
615:02 - notice where the zeros are because x to the fourth a is the coefficient i made that two x to the third
615:13 - b is the coefficient i made that zero x squared c is the coefficient negative six and then x to the
615:23 - first i mean that zero it's symmetrical because all of the even exponents have coefficients and
615:31 - the odd exponents zero out so these even functions happen only if i have all even exponents
615:41 - and notice i can have an e value because e is x to the zero and we'll count that as even
615:49 - so there we go so some things you can see when we have sliders you know same thing with this
615:57 - floor function this is just kind of cool and so what i did here is i you know still with the zoom
616:10 - but i made this floor function i did this
616:17 - to make these a bunch of dots because i like how that displays the floor floor function
616:25 - that's really like this is really the floor function and i made these dots you know to plot
616:31 - the points instead of lines and you know they're big enough that they connect you don't see spaces
616:36 - between but that's really this is really the floor function as we as we know it and we see that you
616:43 - know if a increases it just gets steeper and a could be negative and it could be like that
616:51 - but it still has that step look to it so and then c it's almost i guess it's noticeable there you go
617:02 - but that's it so this is the floor function we have the different steps and you see we still can
617:08 - have that's the parent function just the floor function but then and the floor the general
617:13 - parent function would be yes i would have a times this so i keep that as one and then you know
617:22 - nothing else going on that would be the parent function and then we can adjust things so all
617:28 - these you know that taking it beyond the parent functions you can have sliders and you know all
617:34 - kinds of other things for you know there we go some some other functions we can have all right
617:47 - oh this was the uh exponential function we'll end it on this here that if i have this so i still have
617:57 - my a coefficient and then b to the exponent of something cx minus d now
618:06 - nothing going on because a is zero but if a is at least one but still nothing going on because
618:13 - i have uh b has to be a value it has to be one won't do it it has to be greater than one
618:22 - it has to be greater than one and then c it's c times x this won't do it because that would make
618:34 - the exponent zero out so again it would be a constant that has to be at least something
618:40 - and there we go we can zoom in a little bit
618:43 - a little bit there we go and you know d that could shift it and e could shift it up just like we were
618:53 - doing before but you see these there's a few of these that needed to be non-zero to make this
619:01 - show something so we see you know again general parent graph of our exponential function and all
619:08 - the things we can do to shift it so applying some of the formulas we've been talking about
619:19 - in algebra we can use these for business applications like demand and revenue so demand
619:25 - would be how many would i be able to sell so imagine if we're selling laptop computers and
619:32 - and i find out that you know an average price of like six hundred dollars
619:42 - will get me you know i might sell like 84 million computers so we do some research we find that
619:54 - you know this might be the case and then maybe i find some some particular companies might say
620:01 - oh well you know what our average price is going to be triple it's going to be somewhere right in
620:07 - the neighborhood of 1800 hundred dollars but then maybe they'll only sell like eight million
620:16 - and then we look at this and we say okay well what should my price point be and
620:22 - we can find this we can use these two as you know an x value for you know uh price and y value for
620:32 - how many sold and we can do the slope formula and we can get an equation here to estimate this as
620:39 - being linear and i can take a look at what the demand might be so i could do the slope you know
620:46 - 84 minus 8 over 600 minus 1800 so remember our slope formula from earlier and so there we go so
621:00 - if we have 76 over and then the the denominator happens to be negative negative 1200 and i would
621:13 - get that into an exact decimal that would be my slope and you know some it's going to be
621:20 - something like negative 0.06 so then i could get that into a y equals equation you know
621:31 - um you know somewhere around there negative you know 0.06 x plus and i could have the you know
621:44 - what would be my y intercept i could i could go through that same formula and when we get into
621:48 - the code i'll show you that we can just bring in these formulas that we already know getting
621:55 - a couple points getting our slope intercept form and then i would have that value here um
622:04 - there we go and yeah it's probably you know i'm gonna just rough estimate here
622:12 - so let's let's just say that that would be it and then that would be notice a negative slope because
622:18 - as the price gets higher you know we would graph this as you know price and you know number sold
622:30 - and we would see that as the price gets higher then the number sold would be
622:35 - you know less and less and at some point actually the why are some somewhere more like 50
622:42 - and at some point you know we the price would be so high that nobody would want it but we would get
622:49 - that as the general estimate now let's just say that's the equation here now what so that would
622:58 - be the demand equation and a lot of times economists are looking for that you know um
623:04 - um business owners too what would be my ideal price point well then if i use that how what can
623:12 - i do to figure out my revenue well my revenue how many sold would be the demand but then the price
623:24 - as i was saying is defined as the x value so at every point i would get that the x value that the revenue
623:39 - is going to be the price
623:44 - times the demand
623:45 - the demand and in this case that price is always going to be x and if i figure this out then it's x
623:54 - times negative 0.06 x plus 50 and you see that would be my y value that i could that i could graph
624:07 - quick distributive property we recognize that this is
624:11 - a quadratic with a negative a value so that means it's going to open down you know plus 50x
624:23 - and so when we look at this then
624:29 - if i have you know the price but then instead of the number sold
624:34 - i want to have revenue so of course if the price is zero i have no revenue and then of course
624:44 - there's some other price that is so high that nobody buys it so i have no revenue and the shape
624:51 - of this graph is going to be a parabola that opens down so then i see that this is going to be a
625:00 - parabola that opens down so then i see that there is some middle price that would maximize revenue
625:13 - and that's kind of the thing that we want to look for you know using these formulas we're using
625:18 - the slope formulas we're using the formulas we've developed to generate a slope intercept equation
625:24 - this would always be true revenue is price times demand so then we can use that to develop this
625:31 - quadratic and we can graph these we can find out what these what these revenue points would be
625:40 - so pretty interesting then we could also apply this to profit so this is just revenue and then
625:46 - we could do this and then subtract subtract the total cost we could get profit so this is really
625:54 - some of the applications that we want to get to that you know using these formulas and determining
626:02 - based on some data you know what should my price point be to maximize my revenue or given you know
626:09 - if i already established a price point what would you know can i predict the revenue you know these
626:14 - are things people put in their business plans so we see these examples that are this one example
626:21 - and i when we look at the code i have two other examples so we can see how this would come
626:28 - together that you you know you can use your math skills you can use your python skills
626:32 - to make some business predictions and these are some of the good applications
626:37 - of of all this math and writing code so let's take a look at the code all right so i wanted
626:45 - to give you an another example or two to show how you can write code to work with these formulas
626:53 - and for this example i'm just saying we're selling t-shirts and i've made up these numbers hopefully
627:02 - they seem kind of realistic but you could define the price here and so these are all variables
627:08 - here so if we define the price and in this case we're going to say we're selling t-shirts for five
627:13 - dollars each and then we have the demand as our next variable and we're saying that if you were
627:21 - giving away t-shirts maybe you could give away 50 you know this is business you're not really
627:25 - not really going to give them away but then your demand decreases as the price increases so every
627:33 - time the price increases increases now in this case again if the price if it was free you'd give
627:41 - away 50 right here the price is five and then so two times the price is 10 so then the demand would
627:48 - be 40 but you see how it just cascades we just define the price and then we use that to talk
627:55 - about demand and then revenue is going to be price times demand now that is actually a go
628:03 - standard formula the price you're selling it four times how many you sold so you see we can do this
628:10 - we've you know once we've defined these then we have these other formulas that they can depend
628:16 - on them and then the total cost so this is another one that you would have to know and i just
628:22 - uh made it so i said four times the demand so if we have four you know the idea is that let's say
628:32 - it cost four dollars to make each t-shirt all right and i'm sure sometimes t-shirts cost less
628:38 - but i just said four dollars so that's where the total cost would be four dollars times
628:44 - you know however many we sold and then that's the total cost so then we have profit is revenue
628:51 - minus total cost makes sense what's the rev how much money do we bring in minus the cost
628:59 - and how you see how we have all these we can just define these formulas now this is a standard
629:05 - formula for for profit revenue minus cost and this is a standard formula for revenue price times
629:13 - demand and some of these then we could develop these equations if we knew if we had some other
629:19 - data so if you're making things to sell you would definitely have this information
629:25 - how much does it cost to make but there you go all these then if you define the price and some
629:32 - demand equation we can calculate all these and we would output you know given this price the demand
629:41 - and revenue because five times forty and then the total cost we 160 you make a profit of forty
629:49 - dollars and then having these this is where people can do some research and they can test things out
629:57 - oh well let's say supposing i decided to make the price ten dollars instead
630:04 - and we take a look at this the price increases the demand decreases as we expected
630:11 - but the revenue increases and so given that cost we still have a profit of
630:21 - of more than double so the price of each doubled i went from five dollars to ten dollars but the
630:27 - profit more than doubled it more than quadrupled so just interesting things that we can we can see
630:35 - here and how does this happen well it might be it might be helpful to see this on a graph too so
630:46 - we're going to graph these things import matplot library and i'm going to import numpy i'm just
630:52 - going to remind you here that the price is x and the demand is y and then we're going to change it
630:57 - that the demand later is going to be the revenue now this is where if you had data this is where
631:08 - you would have you know if i have at what at a certain price what would the demand be you see
631:16 - and i had in mind here you know that this was you know i don't know something else here
631:24 - you're buying two dollars 46 so it would it might not be t-shirts that might be really low
631:33 - but let's just say you know i don't know bottle of water and you know yes it's ten dollars but
631:41 - maybe you hype it up and tell people it's just this amazing bottle of water and if it's cold
631:47 - or if it's really hot that day and water's cold you know you still might have some demand so
631:52 - something else that you you might have but there we go so we can define these price one and demand
631:58 - one so if it was two dollars then the demand is 46 if it's ten dollars then the demand drops down
632:04 - to 30 as an example if just having some of this data from some other research and we can remember
632:12 - these formulas we did back with linear equations because this is essentially two points price and
632:19 - demand or x and y so i'm going to calculate the slope based on those two points calculate the y
632:25 - intercept and then this becomes a y equals mx plus b equation so pretty cool again again if i have
632:37 - you know some examples of some data that we have that we can we can test so given that equation
632:44 - that's going to be my demand equation and i'm going to go through there we go x min x max
632:50 - now notice this x minimum and y minimum i'm going to make zero because negative numbers for this
632:56 - aren't going to really have any practical meaning i'll make the x maximum 50 and the y maximum 320
633:05 - there we go the number of points that's all fine so after i define everything here
633:10 - i'm going to do a couple other things i'm going to do the x label is going to be price
633:18 - and then i'm going to give my graph a title so notice both these plt dot x label plt dot title
633:24 - there we go and then for this one line one i'm going to have so for line one here's my demand
633:32 - equation y equals m the demand equals m x plus b and so we figured out m and b up here
633:46 - and so i can use those but i'm going to use x because that's the array of x values that i've
633:52 - defined so we have our demand equation and then i'm going to plot y labeled demand so we see the x
634:01 - label is still going to be price but for this one y label is going to be demand and then we're going
634:05 - to plot x and then the demand i commented this out we'll get to that in a second
634:13 - so here we go so i have my graph and then we see yes if i was giving them away for free i could
634:18 - give away 50 the demand decreases as the price increases so at some point maybe like 25 dollars
634:25 - um you know whatever i'm selling here that started out as two dollars you know maybe it's cds or
634:34 - something you know some people still want those if i have 25 dollars you know nope too expensive
634:42 - nobody wants it and then somewhere in there we have the ideal now it's not always perfectly
634:50 - linear in real life but this is a good estimate so given these supposing i keep that same demand
634:59 - equation and as we were saying before i can build upon that and i can have
635:11 - revenue equals x time demand because as long as i keep that equation it will still use that
635:17 - and then so now i'm going to plot my x value and then revenue as y value and i'm going to change
635:26 - my y label to revenue so we see that we have a way to do this and when i graph this we see that yes
635:41 - of course i'm going to make no revenue if the price is zero and then we said that about 25 i'm
635:46 - going to sell none so i'll make no revenue but this is how the revenue goes and it's really
635:51 - interesting that i can have some you know low prices and i think that that's you know the the
635:58 - best i might sell the most but the revenue actually there's some middle number here
636:04 - that gives me my maximum revenue and you see it looks like now if if i make new revenue at zero
636:16 - and at 25 these parabolas are symmetrical so it's exactly 1250 would be the maximum revenue
636:23 - or if people like round numbers you know 12 or 13 so there we go we can see how we can
636:31 - use all of this and we can see that the you know the reason why revenue would be zero here this is
636:40 - where the demand would be zero so this is probably the more the line two is probably the more valuable
636:47 - one but having given getting some research of given prices demand price demand that if i have
636:56 - a couple values here then i could plot this out and i can plan oh from other prices and demand
637:04 - research that i've heard what should i make my price you know and this this is some of the research
637:09 - that people can do you know you have some new product how can you determine what the price should be
637:16 - all right and there you also then if you're making a business plan you could always then
637:23 - download or export these images you know you've you've written the code you see the graph export
637:30 - the graph as an image to include in your business plan so there we go you know a couple different
637:35 - examples of how we can make use of these you know formulas the graphs and you know
637:44 - generate some graph or some image and some data that we can really use
637:48 - okay so let's apply some of these graphs to some other economic theories and see how you can use
637:59 - python your math to plan predict you know look at trends in economics so we looked at cost revenue
638:10 - profit and if we take on that marginal cost revenue or profit if it's marginal then that's the result
638:21 - when making and selling one more product and for some of our examples we were doing some linear
638:28 - equations and for that the marginal cost revenue is the result of the marginal cost revenue
638:37 - and for that the marginal if cost is linear the marginal cost is going to be the same
638:44 - wherever you are but sometimes we have costs or we saw that definitely we have profits or
638:52 - revenue that are not linear and therefore we have some times when oh this is it makes more sense
639:01 - from a cost revenue profit perspective to make one more and sometimes you know it doesn't
639:12 - sometimes you know oh that one more is only going to get me a tiny bit of profit not worth it
639:21 - and cost sometimes it goes the other way you know setting up everything making one product might
639:28 - be a really high cost but now it's all set up so making two three four a hundred thousand
639:35 - you know might make that worth it you know things like newspapers and book printing and
639:43 - you know there's a big setup for the printer and so the marginal cost to make one wouldn't be worth
639:51 - it now there's definitely you know other methods printers but for a lot of the big printers like a
639:57 - big printers like a newspaper marginal cost it'd be a whole lot for one newspaper but no they're
640:04 - going to print thousands and thousands so the marginal cost after they've printed you know
640:10 - a hundred thousand newspapers printing one more is almost nothing as far as cost so these are the
640:17 - things you know what what's it cost to make one more and you know we might notice that for revenue
640:22 - and profit the same thing and so if we have revenue you know and this kind of a lot of times
640:32 - comes up but you know toward the end of the day people say oh what you know what would it take to
640:38 - make one more sale you know maybe it's a store should i stay open for a lot longer and everybody's
640:45 - tired to make one more sale that might be you know a lot more cost to in a lot of ways for a
640:54 - little bit of revenue not worth it and so they say okay these are the hours and we close
640:59 - so these are some deeper analyses as we get into things beyond linear equations
641:07 - we can do even more than that makes that even more interesting but just to mention that you
641:12 - know as we talk about this the marginal is that at any given point what's the cost revenue or profit
641:19 - to make one more all right and let's look at some other things that impact that supply and demand
641:27 - and here again i'm going to give some simple numbers and make it linear equations the true
641:34 - supply and demand graph it's not going to you know and in real life it's not going to be perfectly
641:39 - linear there might even be a little curve to it but even at that it you know if you get the data
641:45 - it might be you know a little bit of a bumpy line but we have supply and demand and we know these
641:53 - definitions are at supply how much are people making you know what's the supply of whatever
641:58 - i'm looking for and the demand how much will do people want how much are people willing to buy
642:03 - so you know if you're looking at you know a movie the movie theater if you wanted to see it in the
642:13 - theater the supplies there's only so many seats you know only so many showings you know a movie or
642:18 - a play or a concert always so many seats only so many showings so that's this limited supply
642:24 - and then the demand could increase if it's something really good that everybody wants to see
642:29 - so a lot of times we see that you know that affects the price and that's what we're going to
642:35 - look at supply demand and price and we're going to graph supply and demand on the same axis so
642:41 - we'll see some similarities some familiar things here for the graph and i'm going to have two x
642:47 - values as old demand and new demand and i just gave them this complicated variable and i'm going
642:53 - x values as old demand and new demand and i just gave them this complicated variable name so that
643:00 - it reminds you that it's an x value so we have old demand and new demand and yes i notice i made
643:09 - the demand increase and then i have old price and new price so now just looking at that well
643:22 - we'll see this on the graph but the price is also going to be the y value and on the same graph
643:31 - i'm going to have supply old supply and new supply i made that you know two variables each of these
643:38 - as i was mentioning you could potentially get data from a table supply and demand data
643:47 - data you could have one table that has you know a particular price supply demand price
643:54 - and you know make all these numpy notice i did not import numpy for anything i'm just
644:01 - putting a few variables here and you know to illustrate the graph but you could absolutely
644:05 - get that data from a table and you know make each of these numpy arrays and graph them
644:11 - that would be really interesting too and that's something that we'll address later on in the
644:15 - course so given these and then i have a basic graph set up adding a couple labels here i'm
644:24 - going to make the x label quantity just general quantity and the y label price
644:32 - and i have this title which i already graphed but we'll get to that so here's the demand function
644:40 - and i'm going to plot this as a red line just because all right so notice the x and y my old x
644:50 - i'm just making this just like i do it with the axis i'm going to plot you know these two x values
644:57 - and these two y values and make you know make that a red line so so we see this you know i'm
645:06 - not going to even put an equation to it i'm just graphing this linear equation from these points
645:10 - to this point and i'm going to do the same thing for supply as a green line and same thing i'm
645:18 - just going to use this data that i had these numbers that i came up with as an example
645:24 - um and this graph we can take a look at this again it's simplified but it really is the general trend
645:34 - of supply and demand so if i made green supply red demand then we take a look at the x axis is
645:41 - quantity so the green that would be quantity supplied and the red that would be quantity demanded
645:49 - supplied and the red that would be quantity demanded and then on the y axis we have price
645:55 - so graphing them both on price we take a look at this and we see if the price is high
646:05 - then the quantity demanded is going to be low and a lot of times we're used to seeing you know
646:15 - um an independent variable on the x axis and we think cause and effect but this is really
646:21 - correlations so i'm not saying necessarily one causes the other but you know it goes together
646:33 - so uh at the when uh x is let's say one and y is 14 so we look at this this this demand there's very
646:45 - low quantity of demand when the price is high and then as the quantity see we see the quantity
646:55 - increase as the price decreases so that's what happens oh you know what is this oh it's 14
647:04 - you know $14 no i don't i don't think i want it but as the price gets down lower then maybe
647:11 - you know the demand increases more people would want this now supply wise people making
647:18 - this they have a different incentive they want to make money so when the when the demand is low
647:26 - the and when the price and when the price is low then nobody nobody wants to nobody wants to get
647:36 - into this so you see we have low demand but we also have low when the when the when the price
647:44 - is low here then nobody wants to get into this what you know why would i get into this new business
647:50 - if i'm you know whatever i'm selling is not going to be you know that lucrative but the quantity in
647:58 - the green line the quantity supplied will increase as the price increases and we see that in different
648:07 - industries that you know oh you know why why are people you know getting into this industry oh
648:16 - because they all see they can make money oh this is the hot item oh i can get in on this and somehow
648:22 - you know uh make money so that's what we have that the supply quantity increases as the price
648:31 - increases so there we go so we have these two opposite trends and this is kind of like the
648:39 - core of economics because as you know i get different data this is i just did these numbers
648:45 - as an example but these graphs could shift you know maybe there's some something else that affects
648:52 - this that maybe you know instead of uh the supply increasing like this maybe something
649:00 - causes it to increase a little bit steeper or maybe you know if we say that you know the quantity
649:07 - supplied is low here for this price but maybe you know for whatever we're making that the entry
649:15 - level was even at a higher price and this whole thing shifts so you know that's really what a lot
649:21 - of economists are trying to do and then if this is quantity across the x-axis let's take a look at
649:30 - where these lines intersect and then that would be the point of equilibrium because what we're
649:36 - saying is the quantity here supplied and the quantity demanded would be the same and i mean
649:45 - that's ideal you know you know let's say you have a bakery and you make fresh things every
649:52 - morning and then at the end of the day you have it all sold nothing left over that's great here
650:00 - on the left you know and we'll say let's say that you know for our fictional numbers that happens
650:03 - at six but let's say a little bit before that so it's still to the point that the price is too high
650:11 - so the demand's not really there the price is increasing but not so good yet so the supply is
650:18 - not really there and we still have a gap between demand and supply so here on the left the red
650:27 - line is higher there's more of a demand but not enough of a supply and then we have on the right
650:38 - side of that we have more of a supply but not as much demand and that would be the one this would
650:48 - be on the right that would be the one that's dangerous for anybody supplying whatever product
650:56 - because you know they're getting into this trying to make money the price is starting to get to
651:01 - where somebody's happy oh good the price is going up i'll make more money but then there's you know
651:05 - the demand drops off so now they really have to scramble for customers you know that's trouble or
651:12 - the price here or on the left for the people who want this product the demand is still higher than
651:20 - supply and that's part of what keeps the price higher because the demand is there not as much
651:27 - supply well then the price increases you know things like you know stock trading people argue
651:33 - about this stuff all day anytime somebody wants to too many people want to sell a particular stock
651:40 - oh well then you know the supply increases too many and we go to the right too many people want to
651:47 - sell this you know then other people notice that you're oh you're really trying to get rid of this
651:53 - and then the demand kind of goes down you know what's wrong with it and that affects price and
651:59 - and on the left then we have the price is too high because there's not enough of supply supply
652:08 - and you know that sometimes causes oh there's you know there's not much supply nobody wants to
652:14 - sell that you know this must be good and then that kind of increases the demand and the hype a little
652:20 - bit so you see this one simple graph describes all these complicated trends and we see this that you
652:29 - know our goal all around is you know finding these points of equilibrium supply meets demand
652:37 - you know therefore everybody you know making whatever products are making money people looking
652:43 - for these products are finding them you know and you know fair trade people are paying reasonable
652:49 - prices we're all trying to get to that but we see all these things happen all around there
652:56 - and it's not just one direction of cause and effect it's multiple things going on as well
653:02 - as just general correlations all things happening together so we look at this you know and and let's
653:10 - say we say the trend is like as the price goes down how does how does that affect demand or
653:16 - it goes the other way too as the price goes up how does that affect demand and the word to describe
653:23 - that is elasticity so elasticity is how quickly does uh demand change when price changes
653:37 - and we can look at this there's the formula percent change in demand over percent change in price
653:44 - and this is again all these economic formulas i'm just going to give you a couple of them here
653:49 - that when you have these formulas you can use this you know get data uh use it to graph and
653:56 - then use it to calculate these formulas to answer these questions you know how elastic is that price
654:01 - how elastic is that price because if things change if the price changes and then that really
654:09 - changes demand then we can say it's a very elastic like it like an elastic band or something that
654:16 - bounces that you know it stretches and changes easily or things you know if price changes and
654:25 - it does not change demand you know things like uh gasoline you know we don't like to pay the
654:32 - price goes up we don't like to pay it but if the price went up a little bit i still have to fill my
654:36 - car so that demand would not be very elastic the price could change and the demand doesn't change
654:44 - and you know we can so we can see that if the percent change in price let's say it's it's you
654:51 - know some significant number but then the percent change in demand is like almost nothing we
654:58 - calculate that you know the total value of that fraction is going to be close to zero
655:04 - um and we're going to say that's not very elastic but maybe some other things um
655:10 - you know a concert ticket you know there's ones i've seen where oh i'd like to go see
655:17 - i'd like to go see this but the price is too much no i won't go and as the price goes down
655:23 - oh i heard the price went down that would absolutely change the demand oh too much
655:28 - i i won't go oh the price went down now i want to go and that really changed it you know things
655:33 - that aren't essential and we would say that that would be very elastic so in calculating this
655:41 - and you know down the road you could always combine all these into one thing but i'm
655:46 - just going to show you like just old demand new demand old price new price and we're going to
655:51 - calculate the percent change so remember then that's you know the new price minus the old so
655:58 - there's their difference divided by the old price and it's going to get a decimal that we can convert
656:03 - to a percent so you see again and we want to get in the habit like you you're so familiar with
656:10 - you know colab that oh i have a formula i want to use you know write write a quick program to do it
656:16 - and then now all we have to do is change these values up here and we can calculate everything
656:22 - that we need so price change and that's the ends up being the percent change and then the same thing
656:29 - with demand the new demand minus the old demand and that's the difference divided by the old demand
656:37 - and that gives you a percent it will give you a decimal that you can convert to a percent and so
656:42 - elasticity number is demand change divided by price change so what i have is then it'll just
656:50 - print that number and here's some of the analysis so again different things oh you what you know
656:58 - what's the cutoff point you can always just put these in you know a nice little if statement
657:04 - statement and so if the number is greater than one then i'm going to print the demand is elastic
657:12 - and notice this is you know else if so i just continue this on you know lf the number equals
657:21 - one then it's unitary or proportional so sometimes you know we we do get one that's there you go an
657:29 - increase i think that that proportional increase increases demand but you know
657:39 - and then if it's less than one then that's inelastic that those are all the ones that
657:44 - you know again it the demand hardly changes based on price and i just decided to attack one more
657:51 - and so you see this is how you can you know i i like to when i do my lf statements i like to
657:58 - tag on one more thing at the end you know for whatever reason suppose you know this should
658:04 - capture everything if it's it's either greater than one equals one or less than one i mean it's
658:08 - really but capture one other like grab bag you know what you know if something else happened
658:15 - very often we'll have if and lf without you know exhausting every possibility and then you just
658:22 - easily just put an else there at the end so i have some sample numbers here and then we can click
658:29 - and it would print out so we get this negative 2.2 and then demand is inelastic
658:37 - so as that example and we can do the same thing with supply so remember you know supply changes
658:47 - um as price change because people say oh hey i want to this is a hot industry i want to get
658:53 - into this or then people say oh nope it's uh you know this is cooled off i'm gonna get out um
659:03 - so in uh it you know in the united states kind of recently the real estate market
659:10 - market uh was hot and that's supply like okay not everybody necessarily is going to sell their
659:17 - house or try to be a realtor or try to sell some property but when the prices are so good
659:23 - more people decide to get into it like oh maybe i will sell this you know so that's the idea
659:30 - that if the price is good and people see oh opportunities to make money they get into that
659:36 - so price elasticity of supply answers that question how how responsive is this supply
659:47 - to changes in price so very similar formula percent change in supply over percent change in price
659:54 - and just a few values to sample and very similar formula you know new price minus the old price
660:04 - divided by the old price and uh new supply minus old supply divided by the old supply
660:14 - and we're going to go through the same thing elasticity number and very similar analysis
660:21 - greater than one it's elastic which remember as a fraction greater than one is going to be
660:28 - that this percent change in supply is much greater than the change in price percent change in price
660:37 - and we have to do percent change because if we just do you know actual dollar amounts or actual
660:43 - number of things supplied that really doesn't always give us a good example some things just
660:50 - in general are low cost so a change of a dollar might be a whole lot some things are really
660:57 - high cost like you know a change for a car that a price change of a dollar is not going to be much
661:04 - at all so same thing with supply you know what what's what's the relevance you know how is it
661:10 - relevant to the previous supply so that's why we do the percent change so yeah if price change is
661:20 - you know a certain percent but supply change is a lot more related to that then we're going to say
661:24 - oh wow that's elastic people are noticing these trends and we can go through this and same exact
661:34 - analysis either supplies elastic unitary or any elastic and i just you know just had these so
661:41 - there we go this number and it's inelastic because it's this tiny decimal so yeah not
661:52 - everything you know supply cannot always be you know elastic and so notice you can take this
662:00 - and given the old prices and old supply you could always take these things and combine them with
662:07 - something like this so that therefore you could graph and if you had you know other you know
662:18 - other numbers so notice this i mean even though these numbers might be fictional if you had any
662:25 - bit of research that you just had a few values here you can get these you know and with these
662:34 - you know six things calculate you know the graph and elasticity of supply elasticity of demand
662:46 - and really just get a handle on you know where where you are in this graph and what are the
662:52 - potential changes you know is it you know these graphs i kind of made the linear and it's kind of
663:00 - proportional but you know very often it's going to be bumpier and you know where are you on this
663:05 - graph and what's what's what's going on if you really wanted to you could even um
663:15 - there's other plugins for other uh data especially things like stock prices and you could
663:23 - use this uh to calculate elasticity for various stock prices you could calculate some of the trends
663:33 - um and a lot of these it'll work within colab there's a lot of things that will work within colab
663:39 - that are a lot of things that'll work within your google drive and those particular free tools tend
663:47 - to update things like stock prices maybe like every 15 minutes at the at the most but that's
663:55 - going to be enough to give some sort of analysis you know for an amateur investor take a look at
664:00 - different things you know that's kind of what we want to take this and like these types of
664:07 - formulas and build upon these so that you know you can uh build data pipelines and get information
664:18 - at some reasonably regular level have all the formulas and calculate and say you know okay now
664:26 - you know have this output at some sort of report for you let's see the graph let's see it in real
664:30 - time you know pretty much real time let's run through some formulas and see you know hey i'm
664:37 - thinking about investing in this what's it looking like oh it's it's very you know the demand's very
664:43 - elastic so you know you really have to take notice of the price or oh this you know um
664:51 - i see this trend maybe you know a supply of something that maybe i can get into
664:57 - all these things we want to you know use this information to uh make decisions about what we
665:04 - want to invest in yeah and you can do this all right here in colab and right here in your google
665:09 - drive so uh we'll get in some more some some more math now and you know the next step of our
665:18 - journey so let's talk about calculating interest and usually that's going to be money i put in the
665:28 - bank or in some investment or sometimes it's going to be money that i borrow and then how much extra
665:34 - am i paying so the simple interest formula is exactly that simple and it's good for short term
665:41 - it's good for you know not a lot of money if it's long term but the longer you go with this
665:49 - the less accurate it's going to be and we'll see why that is but for short term principle times
665:55 - rate times time it gives you the interest so if i was borrowing something what you know let's say
666:03 - you know i have borrowed you know a hundred dollars and the rate would be uh
666:11 - 0.05 so the rate's always a percent converted to a decimal so the rate would be five percent
666:20 - and as a decimal it'd be 0.05 and then the time would be always in years so you know let's say
666:27 - i borrowed a hundred dollars for two years then what in what extra interest would i owe on that
666:36 - so there we go that would be another ten dollars
666:40 - so what i would then say is okay well you know given this rate if i needed a hundred dollars now
666:50 - and it's going to take me two years to pay it off you know maybe if it's going to take me two
666:55 - years to pay off a hundred dollars maybe calculating interest isn't my biggest problem but the uh if i
667:03 - if you know i could calculate oh how much extra would that cost me an interest now to figure out
667:08 - the total amount that i would pay i would take that interest and i would add it to the original
667:15 - principle because i have to pay that hundred dollars back plus the extra ten dollars so let's
667:21 - take a look at this you know if time is one like let's say one year and what that is is that's
667:30 - compounding that's the notion of compounding that i'm taking that interest and then i'm adding it to
667:37 - the principle so let's say the time was one year and so
667:45 - so this would be times point zero five times one then the interest would be five dollars
667:53 - and then what am i going to do i'm going to i'm going to add that together so i'm going to say
667:59 - you know the principle plus the interest
668:02 - um is is going to be five dollars now the reason why we compound it is because after let's say
668:13 - a year so then i have that new principle plus the interest but then that new principle plus the
668:21 - interest that's my new amount and then that would then generate another five percent of the interest
668:30 - generate another five percent in interest so you see that becomes my new principle times five
668:38 - percent gives me my new amount of interest and then i'd have to add that so you see i would take
668:43 - that you know times that point oh five there we go and then i take that amount and add it to the
668:52 - new new bit so that could potentially be a lot you know every time i have to calculate the interest
669:01 - add it to the principle again and then recalculate it but let's take a look in terms of algebra what
669:07 - what's really happening here so if i have this the original principle plus the interest
669:14 - and i probably don't even need the parentheses here so the principle
669:24 - plus but remember the interest was principle times rate times time
669:32 - so we're doing a little bit of substitution there so the compounding part principle plus the interest
669:38 - but the interest remember that was this formula so i'll just put that in here and notice if i
669:44 - factor out p so you see the things we were doing before with common factors that comes around again
669:50 - then i factor out p times one plus rt but supposing t is one if t is one then that would be r times one
670:06 - which you know times one i really don't have to write that and then i won't write it in this step
670:11 - so we see a nice algebraic way to write this where i have the original calculating the interest and
670:20 - then also adding it now we're not going to stop there what makes this really useful
670:26 - because that is now my principle calculating the interest for that one year and then now that's my
670:34 - new amount what happens when i have to calculate it for the next year well what did i do to the
670:38 - original principle i did principle is what i started out with and then i did times one plus
670:46 - the rate so if i had to do it again for the next year it would be times one plus the rate again
670:53 - because that's what i did to get the principle plus the interest and then again times one plus
670:58 - the rate and when we think about this in another way it really makes sense because we're seeing
671:06 - really makes sense because we're saying that that principle times one plus the rate is that i'm
671:14 - saying you know this original principle 100 or whatever it is if that rate is five percent
671:21 - you know then that's 1.05 so you know what do i have i have a hundred percent of it plus the extra
671:29 - five percent and then doing that you know that 105 percent every time we can even simplify this
671:39 - that that principle times one plus the rate because if that's what i'm doing every time
671:47 - how can i simple that with an exponent and that's where time comes back in i have that exponent of
671:54 - time because every year then i'm doing that times one plus the rate times one plus the rate and so
672:02 - now we get from simple which is nice principle times rate times time to get just the interest
672:09 - and again good for a short term but you see on long term this is the formula that we want that
672:16 - compound interest because that accounts for every time it goes a little bit bit i earn some interest
672:22 - but then that becomes a part of that new principle and then that's earning some sort of interest
672:28 - and if this was my money in the bank that's great that's good news for me but then if this is money
672:33 - that i'm borrowing then the bank is going to be wanting to do this sort of formula to make sure
672:39 - that they get all the money that they that that they deserve you know and then i have to make
672:44 - sure that i pay that extra interest so that's where we get the principle uh simple and compound
672:49 - interest and then we get to this so then that's the you know that's the formula and then that
672:56 - gives you you know your new amount so there we go a new amount and then when we get to the code
673:05 - we're going to talk about that new amount we're going to call it annuity we're going to call it
673:09 - a maybe as a variable a for amount but then it'll be annuity which is a fancier word for the amount
673:16 - that we end up with so there we go the connection with simple and compound interest and we'll take
673:21 - this a little bit further when we get into the code so let's take a look at that let's take a
673:26 - look at the code so we're looking at simple interest as the well as the name says simple
673:36 - because it's good for short term and for some things that might be good for an estimate
673:41 - but we just get principle times rate times time equals the amount of interest and there we go
673:48 - again short term because we're going to do some other things to it when we get to longer term
673:53 - and that's what we'll get to here so the principle if we just put some example numbers here thousand
674:00 - dollars let's say i borrowed money from the bank a thousand dollars the rate five percent so it's
674:06 - always the percent the annual rate converted to a decimal and then time is always in years so if i
674:12 - borrowed a thousand dollars from the bank they said okay it's five percent interest for three
674:16 - years i'll pay it back here's the formula interest equals prt and when we run it there we go we get
674:24 - a hundred and fifty dollars in interest so i'd pay back that thousand plus the extra interest
674:31 - but right away then that tells me the cost of borrowing that i need it now and i don't have it
674:37 - so that's going to cost me 150 dollars so then i want to find out the total amount well then
674:44 - the new amount is just that principle plus the interest and there we go i'm going to calculate
674:50 - the interest just like we did before and then this new amount is principle plus the interest
674:57 - so there we go and we add that that hundred and fifty plus the thousand makes it eleven fifty so
675:03 - now i have that new amount okay so most of the time we're going to be calculating the interest
675:10 - and then adding it to the new amount it's very rare that i'm paying just the interest or somehow
675:16 - just the amount and not worrying about interest so here's what we were just talking about that new
675:21 - amount is that new amount is principle plus the interest and if it's for one year that's
675:29 - principle plus for one year that would be p times r times t which would be one so that won't change
675:36 - it so that would be the new amount principle plus the interest so some algebra that common factor p
675:44 - if i divide that out i get p times one plus r and if i do the distributive property i get back to
675:52 - this so p times one is is p and p times r is p r now this is going to be very useful that we factored
676:02 - out this p because now i have that new amount just that original p times one plus r and the
676:11 - and the rate is always going to be some decimal that it's going to be pretty easy to add that to
676:16 - one one plus point oh five is one point oh five you can do that in your head it doesn't even feel
676:21 - like a step and then this is what you're going to enter in the calculator so there we go that
676:29 - one step that you automatically would do in your head and you're most likely going to have the
676:34 - calculator for these so that was what you would enter in the calculator p times one plus r
676:40 - now again this is for one year and 50 so if we go back to that original supposing the time was one
676:51 - year just to show you that this works one year that'd be fifty dollars in interest and for one
676:59 - year then then the new amount would be 1050 so that what we're doing there adding the interest
677:07 - to the principal that's compounding and compounding is exactly that adding the interest to the
677:13 - principal and then calculating the percent interest from this new amount so let's look at how this
677:18 - happens over a few years so if my original amount is p so then the next year it's p times one plus
677:26 - r but now that's my new amount so so again the next year so p is the time zero after one year
677:36 - after one year i multiply times one plus r and after another year i multiply times one plus r again
677:44 - and we'll just do this one more and again p after one year after two years after three years so
677:54 - then that's just the same as making this an exponent p times one plus r to the third power
678:00 - because i'm multiplying this factor one plus r three times and now we have compound interest
678:09 - that instead of having to go back and every time calculate the interest simple interest add it and
678:18 - then do it again you know in some loop i have one formula that does the compounding and all i need
678:26 - to do is add the exponent for how many years so now the annuity from the original e times one plus
678:34 - r exponent t so that's 1157 now it's not an error that this is different and remember the original
678:46 - was 1150 when i did this by hand i just you know calculated the interest based on simple interest
678:54 - and then added it but that's after three years that was 1150 and like i said simple interest is
679:00 - good for short term but the longer it goes the less accurate it is so when i have this comp when
679:09 - i'm compounding it every year notice that's every year that i'm adding the interest and then the
679:15 - next year so remember after after one year it was 1050 so then for this for year two i'm getting
679:23 - that five percent interest on not on a thousand but on 1050 and on the next year i get that five
679:31 - percent interest on that new amount so that's the compounding it's like a snowball that rolls down
679:36 - the hill and accumulates more snow and gets bigger and bigger as it goes down that's what we're doing
679:43 - every time we're compounding because i'm still taking that rate five percent of a larger and
679:49 - larger amount so compounded i get 1157 just that same amount over three years i earned an extra
679:57 - seven dollars just because the formula was better so time is always in years and that's compounding
680:05 - every year but we also have a formula supposing compounding happens n times per year so that gives
680:13 - us this more complicated formula but that's okay we see how it connects t times one plus and instead
680:22 - of r we're doing r over n because this is happening n times per year so that rate isn't always an
680:30 - annual rate so i have to divide it by how many times i'm recalculating it but since then
680:36 - every year was the exponent the exponent becomes nt how many times a year times the number of years
680:44 - so then i'm compounding however many times as an example here i put it as 12 because that's pretty
680:51 - common monthly we know recalculate compounding 12 times a year so then one plus r for n what's in
681:00 - these parentheses gets smaller but then the exponents larger and it still ends up working out
681:06 - if this is money now if this is money you're paying back it ends up paying you end up paying
681:10 - more but if this is money you're putting in the bank earning interest then it works out in your
681:16 - benefit so that thousand dollars five percent for three years but now this time compounded 12 times
681:23 - per year i use the extra parentheses for any fraction so there you go instead of just r here
681:31 - it was one plus r over n i put that in parentheses also and you definitely need the parentheses here
681:36 - to make sure that stays because that is the whole exponent nt and remember the python syntax you
681:44 - know in math we might skip the multiplying symbol because we're just they're next to each other but
681:49 - python have to put that asterisk there so there's the annuity the other thing we're going to talk
681:56 - about this instead of just amount that's annuity and principle is the word for the amount we start
682:02 - out with and annuity is the word for the amount we end up with so now the annuity compounded
682:10 - monthly look at that 1161 so we go back from that simple interest that was kind of off to compounded
682:22 - annual 1157 much better to 1161 because we're compounding it monthly and guess what it gets
682:33 - better but first i'm going to start talking about this irrational number e now in the middle of all
682:40 - these very practical money in the bank things that we can understand why am i going to start talking
682:46 - about this irrational number e and yes it's e but it's a number because this is going to come up in
682:54 - the next formula all right so just a quick note about e we're going to import math we're going to
683:01 - import math because e is a weird number and so when i print math dot e this is the number
683:11 - there we go and as a good estimate you can just call it 2.7 but in your calculations you actually
683:17 - want to use this whole number so that's why i want to import math dot e i don't want to just
683:22 - you know say 2.7 and call it good another interesting thing about this it's 2.7 and then
683:29 - we see it's 1828 and then the 1828 repeats again that's kind of interesting but it only does that
683:36 - a couple times and then it just all falls apart so math dot e use that for the irrational number e
683:46 - and it's e because it's euler's number his name began with an e but uh john napier who invented
683:54 - logarithms and other things when he came up with this number he named it e after uh another
684:01 - mathematician that you liked euler so sometimes people call it euler's number but anyway it's e
684:09 - now if we're talking about compounding n times per year we go from being irrational and talking
684:19 - about e to being very rational well what if i just keep compounding it many times and that's where
684:26 - we get to continuous growth so in that previous formula n could be 12 now in this example i made
684:36 - it 100 because we're going to do some things with this uh you know it could be 12 every month 52
684:43 - every week you know i just made it a nice round number 100 could be 365 as n gets to be a bigger
684:51 - and bigger number then we get the annuity becomes this formula p e to the rt and that's why we we're
685:04 - talking about e so i get this irrational number e and then the exponent is rt because as we get well
685:14 - i'll just demonstrate this so let's say n is 100 and if we do that actually let's even make it
685:23 - 52 so compounding every week and then here i'm going to compare these two formulas so this one
685:31 - i call the variable n times so there's the there's our other formula p times one plus r over n to the
685:37 - nt and then we're going to compare that with our continuous growth p times math dot e exponent rt
685:45 - and then we're going to print it this one or this one
685:48 - one so n times we remember that from before 1161 that should be the same number
686:02 - and then the continuous growth 1161.83 so it's pretty close but it's a little bit more for the
686:11 - 1161.75 1161.83 it's pretty close but the continuous growth gives us even more
686:21 - and if n gets to be a much larger number like a thousand
686:28 - you'll see it gets really close 1161.829 or 1161.834
686:37 - so we see if we took it to two decimal places they actually round to be the same
686:44 - and that's the idea with continuous growth you see it it's not that it's always going to be more
686:51 - than this it's that as n gets larger it approaches this value so if i have anything that's compounded
686:58 - a lot or other things beyond money in the bank or things like that that i can say are continuous
687:05 - growth applications you know population increase or things like that then i'm going to use this
687:13 - and you know i can call it annuity i can call it the you know the new amount but i'm going to use
687:19 - this formula so it's very useful for anything continuous growth it comes up a lot i mean
687:25 - throughout math and calculus some version of this comes up a lot so i have this kind of
687:33 - formula so i have this continuous growth formula if i want to calculate this all right now
687:42 - for really large amounts
687:46 - the mortgage formula and the mortgage payment formula is if i have a really large amount of money
687:54 - and that's usually a mortgage you know as an example i think this might be you know pretty
688:00 - close to the average mortgage these days 240 000 so that's a large amount of money and then time
688:08 - is 30 years that's a long amount that's a long time so for such a large amount of money over
688:14 - such a long period of time then it actually really makes a difference how like if i'm paying just a
688:23 - little bit you know every month the fact that i'm paying you know a little bit and then that
688:30 - principle reduces just a little then the next month i'm earning interest on that slightly lower
688:36 - principle well that really makes a difference so if we use any of the other formulas to calculate
688:43 - mortgage payments it's going to be a lot more than you know you would expect you'd be like oh my gosh
688:50 - how can i afford that but when we use this more complicated formula this accounts for the fact
688:55 - that we're paying it off gradually and looking at all that then we can take a look at for that given
689:02 - amount of time what would my monthly payment be so that it'll work out nicely you know if i'm
689:10 - paying over 30 years times 12 months that's 360 payments so i can calculate it if i borrowed
689:17 - this amount of money after exactly 360 payments my balance is zero and it works out so just
689:26 - given that i can figure out the payment and then we'll look at you know how that plays out so this
689:32 - being a complicated formula if we want to write code for this and most of the time you're going
689:37 - to you this you don't even usually enter this into your calculator you're going to make a formula
689:43 - that you can plug in the numbers here so that's what we're going to do and here's how i decided
689:49 - to break that down i just took the numerator that r over 12 one plus r over 12 12 t and just that
689:57 - numerator i made it a variable and we see r over 12 times one plus r over 12 to the 12 t all right
690:08 - and they did the same thing with the denominator so just the denominator and i have one plus r
690:15 - over 12 so the exponent 12 t and then minus one separate from that so i have numerator denominator
690:23 - two separate variables so then the payment see i didn't forget about that p for principle there
690:29 - the capital p for principle so i'll talk about the so i'm going to round this because this is
690:35 - going to be a weird number and the first part is p times numerator divided by denominator so there's
690:44 - my mortgage payment so p times numerator divided by denominator and then i'm going to round that
690:52 - because that's going to be a very long decimal i'm going to round that so it takes the first
690:57 - argument and then the second one how many decimal places there we go so when we take a look at this
691:04 - and when we run it mortgage payment 1362 and 69 cents so given that then we know that's the payment
691:18 - that will make this work out that after 360 payments of this so each time you know we're
691:27 - still accruing interest and we're still making a payment and it's going to work out now
691:33 - to see how that plays out we call it the amortization schedule so and that's it
691:40 - that's the mortgage payment schedule and yes all these have the word more in it uh which
691:48 - means death you know kind of like you know what's what's true life you know death and taxes
691:54 - and i guess mortgage but yeah it was very morbid when people first came up with this word but it
691:59 - came up with this word but it stuck we will end this after this with something much more positive
692:05 - so you know don't worry i don't want to leave you in the more morbid state so the mortgage payment
692:11 - schedule if i take this there we go given these three things i just rewrote i just rewrote
692:19 - all this how we're going to calculate the payment all right so i'm going to print this payment just
692:25 - like what i did before so that's all the same as what we just did but the amortization schedule
692:32 - is i want to have a loop to show the interest amounts and we can also do this in a spreadsheet
692:38 - that's pretty common and later on in the course we'll talk about that so i can i'm going to have
692:45 - a loop so i'm going to set this new variable called balance and the starting balance is going
692:50 - to be that original p principle okay then i'm going to print this which is going to be my headings
693:00 - month i'm going to put a tab there balance put a tab and then interest so that's what i want i want
693:06 - the number you know what month am i talking about what's the balance at that point and then what's
693:11 - the interest that i'm paying for that month so here's what we have in my loop for a and range
693:20 - and how many months 12 t okay so the interest is round so again i'm going to round these
693:31 - because calculating these you know it's going to be a lot of weird decimals i want it to be
693:36 - two decimals dollars and cents so the interest that we're going to pay is this is simple interest
693:44 - again because that short term this is only for one month and then we're going to manually compound
693:50 - it here in this loop so i do want simple interest it still has usefulness balance times so that's my
693:57 - p for that month times r and then t is 1 12th so i'm not just going to multiply by one i'm just
694:05 - going to divide by 12 but that's what it is this is the original simple interest prt
694:10 - the balance is the principle for that month rate and then time is 112 so i'm just going to divide
694:16 - by 12 so there we go and all that i'm going to round it to two decimal places so now that i have
694:22 - the interest this will still calculate the interest and i just put this here for the sake
694:32 - of the displaying is that i only want if a is divisible by 24 you see remember the modulus
694:42 - a remain a divided by 24 if the remainder is zero then or if a is 359 which is going to be
694:50 - almost the last month so these are the ones so i'm rather than print out every single month i
694:57 - would just want to skip a few normally if i know if i put this in a spreadsheet i'd want the whole
695:02 - schedule and i'd print out all 360 months but only for these we're going to print out a select few
695:09 - so i want a and then tab so that you know a is going to be what month because that's a in
695:18 - range and then tab balance tab and then interest so there we go that's what's going
695:27 - to line up month balance interest so then after i do this so i put this line last because the
695:37 - first time through i want it to be the current amount and then i'm going to increase the balance
695:44 - so you see what i'm doing to increase the balance here all right i'm going to round
695:52 - balance plus interest minus payment so you see that's what's happening every month
695:59 - so we're manually compounding it the balance at that month plus the interest that accrues that
696:04 - month minus the payment and then round it to two decimal places so when we run this
696:14 - so we have the payment is 1362 just so we figured and then here we have our abbreviated table month
696:23 - balance interest so month zero we start out owing 240 000 as we expected but look at that this is
696:31 - why it makes a difference you're paying 1100 in interest just for that month that's a lot of money
696:40 - and you know that's it it's you know it's almost the whole mortgage payment you know it's shocking
696:48 - at first after you do this enough times you come to terms with it and say yes that's right i'm
696:53 - paying almost all interest at the beginning you know and then 1362 pay 1100 so really then
697:02 - notice that only 262 is going toward the payment now we could see this really increase slightly
697:12 - but at month 24 we've paid down some things but it's probably not as low as you'd expect it to be
697:19 - you'd think like oh i'm paying so much i'd expect this balance to be lower but you see you really
697:24 - just chip away at it and even then you're paying less interest but it's still more than a thousand
697:29 - dollars and that's you know month 24 so after two years and you see after month 48 you're paying a
697:39 - little bit less interest we do see this moving in the right direction you're paying this down
697:44 - and you're paying a little bit less interest but probably not going down as quickly as you'd want
697:51 - and that's why i just wanted to skip ahead you know every two years we check in and see the balance
697:57 - and you know how much interest we're paying you know we take a look at this
698:04 - now you know we take and we look at this so if we have just over 140 so remember we originally
698:14 - borrowed 240 still a 140 but at this point now that difference we start building annuity or
698:23 - start start building equity in in you know if this is a mortgage equity in the house which means
698:29 - the house is worth is worth a lot more than what we owe and so you could borrow money against that
698:36 - you know home equity loans that's where that comes in as you start getting lower
698:40 - and you know the the value of the house is worth a certain amount and then you only owe a certain
698:48 - amount the difference you know you can actually borrow money against that that'll be a discussion
698:54 - for another time so we have this and finally now it's still a lot i mean you know sometimes it's
699:02 - you know to think about wow i'm still you know look at that 20 years in i'm still paying more
699:08 - than five hundred dollars a month just in interest you know it but at least that's only five hundred
699:15 - dollars a month and you know we're getting the vast majority of our payments are going at this
699:20 - point to paying off the mortgage and now when we take a look you know look at that double digits
699:29 - instead of three digits thirty thousand and then the amount of interest at that point is a hundred
699:35 - and forty one dollars so uh i wanted to skip ahead and then just do month 359 because look at that
699:46 - now the balance at that point is just under what the mortgage payment would be and then the interest
699:53 - is this tiny amount and that would be if you know month 360 when you make your last payment it ends
700:02 - up being like four or five dollars more than the normal mortgage payment but then it's done
700:08 - so it works out that that that monthly payment you know using that formula gave us that monthly
700:15 - payment 1362 and 69 cents and that monthly payment did work out that that exact payment
700:24 - as you know we're look at the amortization table at 360 months it was you know it we paid it off
700:34 - and there we go for an extra five dollars the last month i'm not going to stress about that
700:38 - so these are you know interesting things to think about seeing how using these percent interest
700:44 - payments applied to loans how that plays out how you're paying off interest how we're making use
700:51 - of the simple interest and then paying down this balance so this mortgage is the most common but
701:02 - for any large amount of money over a significant amount of time we would use this formula does not
701:08 - have to be a mortgage car payments not always because a lot of times they're a lot lower but
701:13 - if it was a car payment for like particularly expensive car or over that over a longer period
701:19 - of time then we might use this doesn't have to go to 30 years that time can be anything so we see
701:27 - this you know paying off this debt over time so let's use something very similar but let's turn
701:35 - it around and have something positive retirement account estimation now this one instead of owing
701:46 - money you know this p is not money that i'm borrowing it's money that i'm going to put
701:51 - into an account and instead of owing money every month i'm going to contribute and so there's no
701:59 - formula for this that i'm just going to estimate this oh okay let's say 350 just because uh you'll
702:10 - see you'll see how this plays out and i just picked these numbers here so let's say the
702:16 - principle is a thousand and this is just estimation here well let's say you start out with a thousand
702:21 - dollars now this is where the estimation comes in most of the time the retirement account you know
702:28 - any decent fund manager is going to be able to get you point eight percent or eight percent interest
702:34 - so now this is your money growing in an account this isn't you paying off a debt it's your money
702:40 - growing in an account so if you had a thousand dollars and we estimate that it's growing at eight
702:46 - percent per year that's great and i made this time 38 years as you know not entirely random it was i
702:55 - just thought like age 22 till age 60 38 years so you start it put a thousand dollars in this
703:05 - account and then you start saving that you know from that point like you know your whole career
703:13 - you put away 350 every month in this account okay and i'm going to establish this other variable
703:21 - annuity which i'm going to start out the original is p so now here's my loop for the contribution
703:30 - and the percent growth so again 38 years so for a in range 12 t so there you go because every month
703:40 - we're contributing something so notice what we're doing with this annuity we're taking the annuity
703:49 - that we already have plus the monthly contribution and then that's going to grow
703:59 - one plus r over 12 because that's a monthly notice that percent increase formula but this is monthly
704:09 - so the exponent if it was nt the exponent n would be 12 and t would be 112 which cancels out to one
704:20 - so i don't need to write the exponent of one but that's where this comes from it is that same
704:25 - formula r over n to the nt but nt and is n is 12 t is one over 12 and so that cancels out so
704:34 - so each month then if we take this and that's why i wanted to break this down still monthly
704:41 - because i want to allow for this contribution here the annuity plus the monthly contribution
704:47 - we want that to happen each time and then it's going to grow so in this loop now this continues
704:55 - to grow so at the end we're going to print this out and i'm going to go around because
705:01 - that'll end up being a weird decimal annuity okay so now the annuity is going to seem like a lot
705:10 - but this is what we want to break this down if we're if our rate is eight percent so at the end
705:18 - let's say it's still earning eight percent when you start taking what so the annual income from
705:25 - interest you see and so that's annuity times the rate that's it and yeah i'm going to two decimal
705:34 - places but that so if i have this this amount of money that i'm going to eventually get to
705:43 - then the idea is that money now is yours in the bank or in this in this fund somewhere
705:50 - that the annual income is just that percentage rate
706:00 - so when we run it
706:04 - so take a look at this annuity here so one zero six one five nine seven yes that's more than a
706:14 - million dollars and if it continues to earn that eight percent the annual income just from the
706:23 - interest is eighty four thousand dollars or almost eighty five thousand and that's the idea that
706:32 - this money in the bank or in some investment not not in the bank not saving because nothing in the
706:39 - bank is going to get you this eight percent interest that makes this happen but this retirement
706:45 - investment if you're you know you have this and you can contribute something it's you're
706:52 - constantly contributing and it's growing so at some point then you retire and you have this
706:59 - million dollars that earns this amount of interest and i just picked you know 38 years um
707:11 - the earlier you start the better and the later you stop start uh taking money out you know it
707:19 - can grow even more that you could take the money out at you know uh age i just i just rough
707:28 - estimated did age 22 to 60 you know if you if you start as early as you can i mean even 18 and
707:37 - you know till 68 if you look at that that'd be like 50 years that really is what makes a difference
707:43 - because remember this snowball so that eight percent in those later years that's eight percent
707:49 - of larger and larger amounts of money and then if you get it to this million then eight percent
707:56 - of a million is more than 80 000 so that's that's the idea we want to get to this larger amount
708:04 - of money that just the interest on that you know if this investment keeps going just the interest
708:11 - on that is enough to live on and you take the interest and then you're back to this amount
708:16 - which will earn interest the next year so we want to leave you with that that positive idea of how
708:22 - we can use all this you know that's that's what use all all these you know percent increase formulas
708:29 - to you know turn that into money in the bank that's that's the goal here all right and you know
708:38 - hopefully then it works out and if you have these this code you can tinker with this and say you
708:42 - know how much do you start out with you know keep this rate maybe change the rate a little bit oh
708:47 - you know my fund manager is doing really well change the time monthly contribution you can
708:53 - tinker with these and run it and you know see the results so you know prepare for uh you know what
709:01 - you need to do to invest for retirement so let's look at some more ways you can use these mortgage
709:10 - mortgage formulas here now like we were doing before i'm going to define actually the payment
709:18 - formula as its own function so there we go uh def and then payment and i'm going to take the arguments
709:24 - pr t run it through this formula and i'll just return the payment so this you'll see some places
709:32 - we can use this and all of these you know we're going to apply these to you know let's say you
709:37 - know you're looking for a house you're comparing different things so to get this i'm just going
709:45 - to run this and there we go and i don't need to run that again now i have that the formula here
709:53 - so i'm going to do a similar function and i get something different because i just want to
709:59 - show you this one i'm just going to define it pmt and i'm only taking the principle as the argument
710:06 - because i'm going to just give a set rate and time so with this and then i'll run that through
710:14 - taking the input as whatever the principle is i'm going to calculate the payment and the reason why
710:20 - i'm doing this and we see these imports is because i'm going to make this a slider where
710:26 - i'm just going to go from zero to three hundred thousand and see how the payment changes based on
710:36 - that principle of course the slider shows it somewhere in the middle
710:41 - four hundred and fifty thousand the monthly payment would be eight ninety nine thirty three
710:46 - and we can see how this goes up and here's something you can do you know again if you're
710:52 - comparing different mortgages or houses you can see how does this really affect my monthly payment
711:00 - you know and we look at this oh two hundred and twenty one thousand
711:05 - should i buy a house it's more expensive i know my payment will go up but the question is by how
711:10 - much you see and we can look at this now that's great to see these exact numbers but maybe i want
711:18 - to see the trend maybe there's i want to graph it so notice our standard for graphing and in this
711:28 - case i just define my x maximum is three hundred thousand and my y maximum four thousand that's
711:36 - going to be plenty all these standard things you would already have set up you know x min max the
711:43 - points you're going to use for np dot linspace and everything you're going to do to graph
711:52 - something that i don't always put in there plt dot grid just to show the grid lines and
711:59 - axe dot set x label and set y label so the x will be the amount borrowed and we see that that goes
712:06 - from zero to 300 000 and the y will be the monthly payment so now that payment function i defined
712:15 - earlier i can just use that as my y value i only need the x that i'm going to use as a variable
712:23 - here and i'm still going to give it just a consistent rate and time so you know x is
712:32 - the input all these are going to given the same rate and time how does the principal affect the
712:37 - monthly payment and when we run this we can see that the payment change is actually linear given
712:46 - that same rate and time and this would be realistic maybe you get pre-approved from the bank so you
712:54 - you would know your interest rate and you would know the time so just comparing different mortgages
713:03 - it is linear how much would it increase you know for how much would the payment increase
713:10 - for increases in the amount borrowed well all right this is a good visual of it but let's
713:16 - get down to the numbers so it's linear i'm just going to do the slope formula
713:21 - and i'm just going to pick two values you know and you know x1 and then the payment and notice
713:28 - this i just put rate and time here and i define them up here just a different way of doing it
713:34 - i'm using the same numbers consistently throughout this i feel like that would be good
713:38 - for the consistent example and just pick two x values calculate the payment based on those x
713:44 - values and calculate the slope formula and what we'll find so without rounding now notice
713:52 - this is you know dollars and cents so really it would go up you know six cents for every ten dollars
714:05 - of you know price increase or we can you know multiply it by a thousand here and say it would
714:13 - go up six dollars you know because 5.99 i'll round up it would go up your mortgage rate would go up
714:19 - six dollars for every thousand extra dollars you borrow and now you have that in in mind oh okay
714:27 - an extra thousand that's going to be an extra six dollars in the monthly payment
714:31 - and you know you can put things in perspective do i like it that much you know oh the extra
714:36 - thousand it's only six more dollars so we see some things we can do with this we can take these
714:43 - formulas that we we've been working with and we can define them as their own functions we can
714:50 - use them in sliders we can graph them and finding aspects of the graph that we can use
714:59 - and finding aspects of the graph we can do other analysis this is kind of like we want to be
715:05 - building upon for our data analysis so this is all good and i want to actually then have like a bonus
715:13 - here beyond the python i know this is almost all python but i want to get into showing how you can
715:19 - do this in a spreadsheet because that will give you like that full amateurization table and i want
715:26 - you also how to build that because these are some good spreadsheet skills you'll want okay so notice
715:32 - the balance here is a formula but we'll get to that in a second so given that given a home price
715:39 - i picked this two hundred and fifty thousand that's somewhere around the median home price
715:45 - in the united states right now i want it to be some realistic middle of the road number
715:50 - down payment it's going to be we want 20 percent so notice if i click on this this is cell g3
715:58 - up here is the formula and i just did 20 times g2 0.02 times g2 so that way if i change this
716:10 - and i make g2 you know 300,000 instead click somewhere else then it will automatically
716:18 - calculate the down payment i think i do want to go back to 250,000 again that's
716:24 - i feel like that's a good middle of the road number for us to use as our example
716:30 - and click and it'll adjust again now then the borrowed amount i would subtract that so i'm
716:36 - going to double click in this and equals g2 minus g3 actually that's exactly what i wanted sometimes
716:44 - sometimes google will prompt you will give you that and notice that i can click on this and you
716:52 - can see the borrowed amount and then up here this is the formula g2 minus g3 which is the home price
716:59 - minus the down payment all right so let's just say the interest rate you know 0.06 and time uh 30 years
717:09 - now i'm going to write the word years here i'm not going to use this number for anything else
717:14 - but here the interest rate i will all right now monthly payment we can always then go right back
717:22 - to this and calculate the monthly payment so we see here i just had this monthly payment there
717:34 - you go six percent 30 years and i already have this so what if i just made it my borrowed amount
717:44 - which was 200,000 even and i can just go to this borrowed amount
717:52 - oh 200,000 now i could actually also just make another since i already have that payment
718:05 - i could actually right under here write print
718:11 - payment 250 uh 200 comma 0.06 comma 30
718:26 - so you see i could just actually just put this in here
718:31 - and
718:32 - output the monthly payment all right there we go 11.99 and 10 cents
718:40 - so monthly payment will be 11.99 and 10 cents
718:48 - so now notice here this is just a couple of things that we can do here
718:54 - and 10 cents so now notice here this is just a good reference for all the things we want home
719:04 - price down payment and everything but these notice i already had to just populate over here
719:11 - the monthly payment and if you'll notice i have these dollar signs here that's going to be for
719:17 - some things we're going to do later i mean i don't need them over here but we're going to do some
719:23 - things later we're going to drag these formulas down and it's going to adjust for according to
719:29 - the row and the dollar sign will keep that the same so dollar sign g dollar sign four that means
719:38 - if i ever adjust this that's not going to change it's going to stay too it's going to stay referencing
719:43 - that cell g4 and same with the payment that's always going to reference g7 and that's what i
719:50 - that's what i want now the interest we've been doing all these fancy interest formulas but
719:56 - actually this is going to be monthly each of these is going to be a each of these roads is
720:00 - going to be a month so for monthly interest we can just do simple interest equals the print that
720:08 - balance which is a2 times the rate which is 0.06 times the time which is one month
720:19 - so one month is one twelfth of a year so i'm just going to say divided by 12
720:27 - and this works out i mean you know that's very nice but it's not always going to work out evenly
720:34 - so what i want to do is i want to add another function around here round
720:40 - round open parentheses and i will put you know so it rounds this and if i don't put anything else
720:53 - you see it'll round it to the whole number but i want to put comma two because that'll round it
721:00 - to two decimal places and this is google sheets if you you do this in microsoft excel you have to
721:08 - have that comma and then however many decimal places even if it's zero google if i eliminate
721:14 - that it'll just round it to the whole number so there we go so round i have my payment and
721:21 - then my new balance equals the original balance which was a2 plus the interest of the crude
721:30 - so that's b2 minus the payment which is c2 and i want to take this so we see even you know earned
721:43 - a thousand dollars in interest you know just you know just sometimes it's a lot to stop and think
721:49 - about that and all that the paid you just took a little bit off because that earned a thousand
721:55 - dollars in interest and then the payment was only 11.99 so a little bit of that like 200 bucks went
722:02 - to the paying down the original principle so i want to take this because then we have the balance
722:10 - it accrues interest i make a payment new balance and i want to take this and carry it over here
722:16 - so that was cell d2 so i'm just going to put equals d2 here
722:20 - here and here now notice if i drag this down
722:30 - it changed because it's calculating the interest now based on this this balance you see a3
722:37 - times 0.06 divided divided by 12 and then here when i drag that down it's going to be the same
722:45 - because i put the dollar sign in there it won't adjust anything and here i will drag this down one
722:52 - and we see again doing that it adjusts it for this row now everything here was based on row
723:00 - two everything here is based on row three and we got that by mousing over the bottom right
723:06 - hand corner you get a little tiny plus sign and this is magnified but you know you'll see
723:13 - the that thin plus sign and you click and drag that but we're going to do that for the entire row
723:20 - so i'm holding down shift in the arrow key to highlight the entire row and i'm going to mouse
723:26 - over that i get that thin plus sign and i'm going to click and drag and this is how we make our
723:31 - amateurization table now notice my mouse is down below the bottom of this because for 30 years
723:40 - that's 360 months so somewhere around there is where i'll stop
723:48 - and these are all negatives so i'm going to take this highlight all these negative numbers and
723:56 - then just delete them so now here this is you know after this the balance is a dollar so
724:12 - so we can just make this 11.99 plus that additional dollar 13 and i'm not going to take it to multiple
724:28 - decimals like that and that should be yes 10 cents negative 10 cents dollar three
724:48 - three and that should be enough to make that we're just going to call it that many zeros
724:58 - we're going to call it zero and what we have the row number is always one more because we had the
725:06 - first row as headings so three given that mortgage payment it works out exactly 30 years exactly 360
725:17 - months you have a balance of zero so we're going to take take this and we see this is the
725:31 - amateurization table and you know you can look through it and scroll through it and see how
725:36 - the payment stays the same but what happens is the amount of interest keeps going down
725:42 - gradually because for such a large amount of money for such a long period of time every month the
725:49 - fact that you're paying interest on just that little bit less that really makes a difference
725:57 - and then that means that look you know that same payment a little bit less interest a little bit
726:02 - more of it goes to the principal so you know you're you're making some progress
726:06 - paying this off but it takes a while until see look at this i mean that's almost 1200 so we have
726:20 - to go into you know 225 months you know we're coming up on 20 years until you know half of your
726:32 - payment goes to interest or less than half of your payment goes to interest so it's just good
726:38 - interesting to see that whole table and then this balance here at any given month that's the payoff
726:46 - amount you know supposing you come into some money and you say oh i just want to pay off the rest of
726:50 - it you know that that's the balance that's your payoff amount and we have all this now besides
726:58 - showing you the spreadsheet and how you can set this up and how we can you know grab values from
727:05 - other cells and how we can add formulas and how we can drag all this down that's great amortization
727:13 - and you know mortgage mort you know it does sound like death because you know it is the same word
727:21 - mort so let's do something more positive with a very similar type of formula so supposing
727:32 - i set up the same thing balance interest i'll capitalize it and payment but i'm going to say
727:44 - contribution and then new balance so let's look at this in a more positive way supposing that what
728:01 - this was this amount that you owed that you're paying off but let's talk about a retirement
728:09 - account that you're adding to so i don't know let's let's start by some like round number like
728:15 - five thousand dollars and a lot of retirement accounts you know people managing it could
728:22 - you know get like eight percent interest that's pretty reasonable to think of so we have equals
728:30 - so we have equals so this is column i two times zero point zero eight
728:47 - eight percent interest and then for one month so then you know one twelfth of the year so divided
728:53 - by 12 there we go and maybe you know we could do this we could do this with or without rounding
729:04 - i'll round it that might that might work out it'll just look nicer round and i'll round it
729:11 - to two decimal places again dollars and cents okay now monthly contribution so who knows like
729:20 - you know you can contribute a few hundred dollars let's start with something like this like let's
729:29 - start with like 200 and we're going to change that later so with balance it gains some interest
729:40 - and you contribute so it's all plus equals i2 plus j2 plus k2
729:57 - and then we're going to carry that around so that's l2 equals l2
730:02 - l2 and we're going to do the same thing drag this down one drag this down one
730:12 - drag this down one and what we have is you know given that you know rate of interest
730:20 - given the contribution you could always add more different times but i want to show you this
730:27 - for about the same amount of time so if we drag this down
730:35 - now this being a retirement account a lot of times people will start this earlier
730:41 - so we don't really even have to stop at 360 let's stop with like 400 nice even number there
730:49 - um there we go uh 401 because the first rose so what we have is this at that point then
731:03 - you know this amount that you have is 469 thousand dollars and the interest every month is 3000
731:11 - this 3000 so you could easily like take that interest and then you're back to 465
731:20 - you take that 3106 out every month and live on that and then you're back down to this
731:27 - so you know it it you know goes from this and then back to this take that out and then you're
731:32 - back to this that's one way to do it i just want to show you so let's let's get even more optimistic
731:39 - here and say then we contribute something like you know 400 dollars a month we're going to drag
731:46 - that down in a little bit and this one let's say you know 0.085 i don't know a little bit
731:57 - more optimistic on the there we go drag that down a little bit and so now that second row again is
732:06 - correct and we'll drag this down and the other thing i'm going to do is take this a little bit
732:11 - longer maybe even like uh 450 months or something like that 40 years would be 480 months
732:25 - so we can take this even further and you'll see that just you know some of these you know you get
732:36 - some poss some nice possibilities here all right and because look at this final number here so
732:46 - because look at this final number here so yes that one is one million so you know that's what
732:55 - we're talking about here you know one million dollars and the monthly interest is nine thousand
733:03 - eight hundred eighty five dollars so this is something you know again i want to you know
733:11 - take this same math and turn it around and make it positive something that you could be contributing
733:15 - to and then at this point you have this money you know in this investment that you can take this
733:23 - out every month or or less and you know not have to worry about it ever running it running out
733:29 - take that out and then you're still left with this you know more than a million boom take that out
733:35 - live off the interest and you still have this every month take that out you still have this
733:40 - to generate interest the next month and these are some of the things that you can look at
733:45 - that you know from the other side of it you know you owe all this money to pay off this mortgage
733:52 - but then you own this house and on the same time you're contributing and you know here then you
733:59 - have money that you can live off of and you know these you know these are the types of things we
734:04 - want to do with our math skills look at how we can manage manage money to you know later on
734:12 - in life then have this you know property that has equity and you know as value and something else
734:21 - in the bank that you can live off of and there we go you know putting the math skills to use
734:27 - and seeing how you can make this work for you seeing the trends that you know it seems like
734:33 - now you might be working hard and owing a lot and not having that much but you know over time like
734:39 - many years you build things and then you have things oh i have this that i can now you know
734:45 - they've built over decades and can live off of it so that's really good and you know we were doing
734:51 - some of this with the other uh python you know generating just some of the values but you see
734:57 - like these you know these are some of the ways you can make this work for you and you know look
735:02 - at the trends and hopefully this helps you make some decisions about investments you know
735:09 - whether it be real estate or borrowing money or other retirement investments all right so that was
735:15 - just you know some bonus and there we go we're in the home stretch hopefully you're really seeing
735:22 - this all come together you know skills that you're building
735:26 - building
735:31 - so let's talk about exponents and logarithms so the exponential form
735:38 - is this two to the exponent three two to the third power equals eight so we know how to do that
735:45 - we've been doing this so far in algebra then logarithm is the same information rearranged
735:53 - so this same information the log base two of eight equals three so the logarithm is always what's the
736:04 - exponent that's what we want to know that's what we want to know and in what we've been doing so
736:12 - far and in most calculators you know two to the third no problem i know how to put that into the
736:17 - calculator in python they don't even have to import anything but if i know the base
736:23 - and i know what i often call the result if i know the base i know the result but the exponent
736:30 - is what i don't know then that sometimes becomes a problem especially when it doesn't work out
736:36 - nicely like this works out but supposing you know it wasn't a nice you know a nice nice exponent
736:43 - even nice exponent like three supposing you know two to what exponent gets me nine or ten
736:50 - it's going to be some weird decimal but how do i how do i get that and so you know we we have
736:56 - to appreciate that you know uh john napier you know spent like about 400 years ago spent like
737:02 - 20 years of his life figuring this out and making tables and now we have this at the touch of a
737:06 - button on the calculator and we're going to look at also how to write the code for this now with
737:12 - logarithms we do have to import something but you know we'll import a library you know much quicker
737:18 - than spending 20 years years of your life figuring this out so if we have you know two to the third
737:24 - um you know the the base is always going to be whatever you know the same thing with an exponent
737:31 - what i call the base so if i have you know log base two of eight you know it's what's the exponent
737:37 - now what's interesting is our count in our calculators we you know you can do the log
737:44 - you'll see a log button now if i have the log if i just say the log of a hundred and supposing
737:57 - i don't see any number there if i don't see a number then it's understood base 10 and we call
738:03 - and we call that the common log because our number system is base 10 so if it's 10 i don't have to
738:09 - write that and so the log of a hundred is two because 10 to the second power is 100
738:16 - and we're going to use this a lot of times for working with scientific notation and maybe even
738:22 - converting decimals so that you know that's that's where a lot of times i i'm going to use
738:29 - the common log and then i might even if i'm doing things like scientific notation i might even do
738:34 - the floor function because if you know what's the log uh you know like 150 it's going to be
738:42 - two point something but then for converting it to scientific notation i may be just interested in
738:47 - the two because then that tells me to move the decimal place too so then that would be you know
738:52 - 1.5 times 10 to the second you see you know different things that we want to do with uh
739:02 - converting this for scientific notation all right other interesting things about logarithms well
739:10 - that exponents and logarithms they're inverses of each other so if i have
739:17 - um if i have the log base two of two to the third then or actually i'm not even going to put it to
739:29 - a definite number i'm going to call this x because then anytime the answer is x you see if i take
739:37 - the log of the exponent anytime you have a function of its inverse it cancels out to x now
739:45 - now notice then what we're saying here the log base two so two to what exponent gets me two to the
739:55 - x oh x is the exponent you know makes sense and the same type of thing works with if i have two
740:04 - to the log base two of x exponent same thing that's exponent and log inverse because remember take a
740:18 - look at this log base two of x so it's two to what exponent gets me x so remember anytime we log we
740:27 - want the exponent two to what exponent gets me x and whatever the answer is it's an exponent and i
740:32 - am and then in fact taking two to that exponent so i would end up with x so we see you know that
740:41 - we're going to use these inverses and this is where it becomes very useful you know for whatever
740:48 - for whatever base i have if i'm solving something if i have three to the x equals you know 25 now
741:01 - that doesn't work out nicely if it was 27 x is three that's nice but i know i'm going to do this
741:07 - on the calculator what am i going to put on the calculator well how can i get how can i get it to
741:13 - x equals something well if it's three to the x then if i take the log the log base three
741:25 - of this three to the x and then on the other side it's going to be the log base three of 25
741:35 - so in algebra in the things you know i do the same thing to both sides what are the things that i can
741:40 - do well one of the things i can do to both sides is take the log of both sides as long as it's the
741:44 - same base so if i take the log and i pick base three because of this because then that cancels
741:51 - down to x and then over here i have the log base three of 25 which is what i would do in the
741:57 - calculator and we'll see in the code you know we're going to import a library and we'll be
742:03 - able to do this you know no problem on the calculator or in the python code now another
742:11 - thing is if you're on a calculator or you know you want to do different sort of python code
742:19 - i could just do the common log for this it actually works out also the log of 25
742:26 - divided by the log of three so the log of this divided by the log of the base and again it can
742:34 - use common log or whatever i'd want for that so you know that's pretty interesting
742:41 - you know what another way that like that works so change of base formula if you ever find yourself
742:47 - in a situation where you don't have the ability to do the log of any base you know you can use
742:53 - you can use whatever logarithm you have and do this so that's where you know exponents and logs
743:00 - we use that inverse property when we're solving and that comes up a lot you know if i if i want
743:05 - to look at things you know things that are growing exponentially anything continuous growth
743:10 - sometimes it's you know radioactive decay for dating carbon all kinds of things sometimes i'm
743:16 - in this situation exponent my unknowns in the exponent and so i want to use a logarithm to
743:22 - figure that out the other log is going to be the so we have all the different bases and
743:32 - the common log which is base 10 but then i also have the natural log
743:38 - and if i was writing this it's i'm going to i'm going to write it as l n we'll see that a lot of
743:44 - the logarithm functions in python they actually if i just say log it actually goes to natural log
743:53 - not base 10 so that that's really interesting in python the default is natural log if i don't put
743:58 - another base there but if i was writing it out it's l n for natural log and so if i have the
744:06 - natural log of of anything so the natural log means that it's base e and so and base e
744:18 - e is about equal to that 2.71828 1828 and then after that it's less than five but then you know
744:28 - it just that pattern stops so oh 2.71828 so he's about 2.71828 1828 and it keeps going this is used
744:42 - for a lot of continuous growth formulas so if i have you know the natural log of you know 2.7
744:51 - well then my answer is going to be you know about one it's going to be a little bit less than one
744:54 - it's like 0.99 or something like that you know 0.99 and i can you know i can use the natural log
745:04 - for for some other things and we'll see some of the applications of that too when we get to the
745:08 - code but that's where if i have base e so if if it's base e i just make this l n if it's base 10
745:17 - i can just write log and if it's any other base and the bases we usually want to have them as
745:22 - whole numbers but if it's any other base then i'm just going to actually write the base
745:29 - so okay so we take a look at this we'll see how we can actually calculate a lot of this
745:37 - in the code and that's going to be pretty useful for some of the some of the applications we have
745:42 - so let's take a look at the code so when using logarithms in python we'll just import the math
745:50 - library and now we have math dot log there we go math dot log and it takes two arguments the number
745:59 - and then the base so this is math dot log of 10 000 base 10 so when i run it there we go it'll be
746:07 - four this works out nicely for things that we know are going to be a nice integer but i also want to
746:16 - show you that python weirdness sometimes even when you think it's going to be a nice integer
746:24 - math dot log of a thousand base 10 so i expect this to be exactly three but when i run it
746:31 - it gives me this long decimal so any of these even when you think it's going to work out nicely just
746:38 - the way that this works behind the scenes you might want to just build in a rounding function here
746:49 - so i'm going to round all this math dot log of a thousand base 10 and i'm going to round all that
746:56 - to four decimal places so you just might want to build build that in so that way you're going to
747:02 - get that answer and notice i still said four decimal places but because it worked out
747:06 - not rounding not needing decimal places it didn't have to give me like four zeros after the decibel
747:12 - there we go so that's just the usefulness of it that it's just worth it build the round function
747:20 - in there all right so that said i have a few of these that i don't have the round function
747:27 - just to show you what the exact answer might be so if i have base two there we go again import math
747:33 - and then we're going to do math dot log in this case 16 base 2 so when we run it it's going to be
747:42 - four and i don't have the log in there so if i have something like 15 base 2 i don't have the
747:51 - rounding so you see it'll give you all that if you need these decimals all these decimals for
747:55 - for something it will give you that but there you go just whatever the number is and then base
748:01 - natural log i'm going to import math again and notice here i can just do math dot log of a number
748:10 - and if i don't give it that second argument of what the base is it'll default to natural log
748:16 - and e is about 2.7 so if we we do this we see you know it gives it that rounding now what i also
748:25 - want to show you is as we were talking about before uh so math dot e if i just want to use e for anything
748:32 - math dot e is going to be the most exact you know it'll give you all those decimal places you don't
748:37 - have to just you know guess at it but also e to the fourth then and i store that as variable x
748:47 - so if i have e to the fourth and then i take the log which is the natural log my answer should be
748:53 - four because the log of that exponent or if i have e to the third the answer is three so you know if
749:04 - i use that math dot e to get the most exact uh approximation of e and then log without the other
749:13 - argument then it will cancel out and that'll that'll work out the same way if i did like
749:19 - you know 10 to the fifth and then log you know base 10 you know that works too so
749:27 - just just to show you this all right so other good uses of log or especially natural log
749:34 - answering the question how long will it take for an investment to double
749:38 - and i still wanted to put the algebra in here so if we have our general continuous growth formula
749:44 - so i have p and then i have the annuity what number p what what it starts out as an annuity
749:50 - what number it ends up so if it's doubling then whatever i have for p doubling would be two p
749:58 - whatever the number is so i can divide both sides by p and then i get this e to the rt equals two
750:06 - so as we were looking before about getting to exponents if my unknowns in the exponent
750:13 - it what's my base and then i'm going to take that log of both sides so if it's base e i'm going to
750:19 - take the natural log so on the left i have the natural log of two and on the right natural log
750:25 - of e to the rt as we just saw is going to be that exponent so that's why we do that if it's base e
750:32 - i'll take natural log and then they will cancel out the function of its inverse and then if i
750:38 - want to solve for t now i have rt divide by r so i would have this the natural log of two divided
750:46 - by r gives me how long it would take money to double so we can just put this in some code i'll
750:54 - just define r as the rate here you know two percent you know sort of like a low inflation rate and
751:02 - natural log of two divided by the rate so i am going to round this log two so notice no other
751:10 - argument there log two and divided by r and also the rounding is no other argument so it'll be a
751:16 - whole number there we go and we get it to be 35 years so if something's increasing at two percent
751:23 - 35 years from now it'll be double and like i said as a low inflation rate something that costs
751:29 - whatever now 35 years from now it'll be about double that price so we have this or if i have
751:37 - you know some investment you know oh nine you know nine percent and i say oh this you know this seems
751:43 - to be doing okay i put money in this investment how long will it take for that money to double
751:49 - in this case eight years so there we go so you know some people might make that determination
751:56 - for what they invest in and there we go answering that question write some code so in graphing this
752:04 - i want to show you this pattern of graphing the exponent and the logarithm so we're going to do
752:10 - all the usual imports for any graph we're going to do all the usual you know x min x max set the
752:18 - dimensions here and we've done this before when we use numpy i need the no i need this the number of
752:26 - points here because then i'm going to create my numpy array np dot linspace from x min to x max
752:35 - using this many points so there's my array now for this i also created a second array
752:41 - array specifically because my x min i don't want it to go down to negative 10 i wanted to start
752:50 - at 0.01 and we'll see that in a second and then again set up all the all the graph here so
752:59 - i'm going to graph this first line here y1 equals math dot e to the x so there we go
753:06 - i imported math just for this using math dot e so if i'm graphing e to the x plot that
753:13 - and then line two so then if it's e to the x i want to do the natural log and so notice it's log
753:21 - and i didn't use the math one here i wanted to use the np dot log for use the numpy because i'm
753:28 - graphing so numpy has log built in also so i want to use that because i'm graphing that'll match up
753:34 - with with the numpy array and that's this is why i wanted x2 as my argument here because logarithms
753:42 - can't be zero and they can't be negative so i didn't this actually would give give an error
753:49 - but it would still graph it just with that error and i didn't feel like seeing that so i i created
753:56 - that other array starting at 0.01 so there we go so now i have e to the x natural log and my line three
754:07 - it's just y equals x all right so this is what this looks like and this blue line that curves
754:16 - upward that's the exponential function and going to the left it actually doesn't really touch zero
754:22 - it just gets really really close beyond what this display can show but it doesn't ever get to zero
754:29 - and then this orange line that logarithm it the x value can't be zero and then it goes up and it
754:36 - has this curve to it as x gets bigger this increases but it not so much especially as it
754:43 - goes on and on and then the green line is y equals x so if it looks like these are mirror images of
754:50 - each other across that line that's true like any inverse functions they are mirror images across
754:57 - the line y equals x so kind of cool how that works out so we see this numpy arrays of points
755:06 - e to the x natural log of x and just as a slight comparison i wanted to show you that if i have
755:14 - two to the x and i'm going to use this and comment out this other one so instead of e to the x if i
755:20 - have two to the x all right there you go two exponent x and then here i have the log base two
755:31 - and again i'm going to use numpy and you see numpy's log instead of a second argument they
755:37 - have different functions so this is so log is natural log log two is log base two and then
755:43 - there's log 10 so those are the main ones you'd you'd want to be able to use there we go so i'm
755:50 - gonna have log two here and then the line y equals x so if i run that it's going to be slightly
755:56 - different because two is not as big as 2.7 but very similar and often you know if but if it were my
756:07 - drawing i i wouldn't be able to draw the subtle differences so i would say oh they all kind of
756:11 - look the same you know exponential logarithmic y equals x there we go so we use these as some
756:20 - good good estimates here all right we can also use logs for scientific notation now here i just had
756:28 - it print out 3.2 times 10 to the fifth now i wrote that in scientific notation but it'll print it out
756:35 - with with all the zeros here and here i have it as a negative exponent 4.5 times 10 to the negative
756:44 - second there we go and you might be wondering about that comment why negative two works fine
756:50 - why that's an important thing and there we go uh we see the output here because exponent negative
756:58 - three gets weird very interesting because the exponent of positive three 10 to the third you
757:06 - know got a little weird too and you see just the way it works behind the scenes the negative three
757:13 - we would think that it would stop there and that'd be fine but it gives you all these other zeros
757:18 - and then a five at the end unnecessary but as i was mentioning before the rounding will
757:25 - will solve a lot of these problems so you know i just use this with for the for the negative four
757:32 - so i have this 10 4.5 times 10 to the negative four and i'm going to round it to five decimal
757:41 - places so if i have a negative exponent let's say negative four then i want to round it to five
757:48 - decimal places and then that gives all of these because it'd be 4.5 and i want that extra decimal
757:54 - place to show that so you see rounding rounding again works out very nicely and then if i have
758:05 - negative five and greater it forces the scientific notation so as much as i want to say that i'm just
758:13 - going to print this out i already have it in scientific notation i even say round it to six
758:18 - decimal places doesn't matter the output python wants to put in scientific notation and notice
758:26 - this e is not e 2.7 but it's 4.5 times 10 to this exponent so python uses this and a lot of
758:35 - calculators use that notation also we can convert something to scientific notation
758:41 - if i take this so i want to get the number of decimal places so if i take the log so this is
758:50 - variable a so if i take the log of a and base 10 so this one i'm just using the math library if i
758:58 - take the log but since it's not 0.001 it's not going to work out to it's going to be like one
759:07 - it's going to be like one point you know it's going to be like uh this is four decimal places
759:12 - is going to be four point something so that's why i want to do math dot floor to get just that
759:18 - exponent i want to chop off all the the extra decimals in my answer here and then the log of
759:26 - that the floor of that is going to be the exponent so that's what's going to give me that negative
759:33 - four and then if i take n i'm going to round that 10 divided by that exponent and this formula also
759:44 - works for larger numbers too but if i take that and then round it then in this case rounded to
759:52 - two decimal places that's fine that's n i could stop there but i have this extra loop here just
759:59 - in case there's rounding errors because it could work out somewhere that n ends up being
760:06 - greater than 10 you know that that happens and so in that case then i then i want to make sure that
760:13 - i still get true scientific notation one number than the decimal so there we go i'm going to just
760:19 - if it's greater than i'm going to increase the exponent now for this one there you go a equals
760:25 - point zero zero zero five and there we go it gives you point zero zero zero five equals five times
760:35 - ten to the negative four and then this should work for all kinds of other exponents that you're
760:43 - converting it to scientific notation if you wanted to so these are some of the uses of
760:48 - logarithms you know we can see the graph that's pretty interesting but we can see
760:52 - the applications the solving sometimes if my unknowns in the exponent we can see converting
760:59 - to and from scientific notation so these are a few applications of logarithms and i'm sure
761:06 - you will find even more so you can make use of make use of this code and enjoy
761:14 - here we have the foundational math three certification three and like the others you're
761:22 - going to make a copy first of all and work through this whole notebook make a copy put it in your
761:29 - google drive and then from your copy we'll do first step like before according to the
761:38 - testing library and later on in this unit or the next unit we'll look at the mechanics behind this
761:48 - and how you can set up your own virtual your own library hosted on github and use that import that
761:57 - into whatever notebooks you want so you know as you can see here we have the first step
762:05 - whatever notebooks you want so you know as we get through this course you know you see the mechanics
762:12 - of setting it up and then you'll learn how to set up all these things but for now i just have the
762:19 - comments here you know install requests here's the library and when we run this then it will get the
762:28 - library take it uh as as a new file locally here uh behind the scenes we won't have to worry about
762:39 - it and it's imported there we go and this last thing says that yes it works and so we will go
762:50 - on to the next step there we go and remember the runtime run uh it times out you know 12 hours
763:01 - consecutively at the most or about a half hour of inactivity so you just just get in the habit if
763:08 - you know working on part of this you leave come back then you go and run this first cell again
763:14 - so we were looking a lot of into graphing before now we're going to graph inequalities so when
763:22 - i have let's say y is greater than or equal to 2x well if i have then if i can graph a line but how
763:32 - do i shade that well we have this argument here fill between and so it gives us a range of values
763:40 - so we're going to go here import matplot library and import numpy like we were doing before
763:50 - and we're going to set our window like we were doing before how many points you know numpy that
763:59 - linspace give our points setting up the graph all this is very similar this one got a little
764:08 - fancy put a title on there so we have the plot title y1 just like we would do before supposing
764:16 - i was graphing this just as a line we see all the similarities there we go here's the code change
764:25 - and remember this we have plot these two and then we have this third argument
764:34 - we had this third argument so if you're working through this and remember you know this if you're
764:43 - watching this video maybe hopefully you already did work through this so this is going through
764:48 - you know double checking anything you did or if you want any deeper insight about this but then
764:55 - we have the second arguments are the fill between so this one notice we have here you see it's
765:07 - fill between so we still have one x value and the y values are what we're between so between y1 and
765:17 - zero and i'm just going to run this to show you you see it fills between y1 and zero so
765:29 - that doesn't matter you know that's not a consistent you know over on the left here zero
765:35 - is up top and over on the right it's down to zero but thinking about the top of the graph
765:42 - oh what if i just change that to if i want to shade above what if i change that to y max
765:51 - without the caps
765:56 - without the caps
766:00 - and then we're always shading above between that line and the maximum y value so you see then shade
766:10 - below you can change it to y min and there we go and when we do that there we go code test passed
766:18 - so part two well we had this one is a nice solid line and remember then that's greater than or equal
766:28 - to but what if i wanted you know not that solid line so we have all the rest of the same things
766:40 - here we know the logic of this so now if i have y min now that's going to change you know to shade
766:51 - below and this is the only thing we're going to change if i have this remember the default
766:59 - gives me a line until i do the fill between but what if i wanted this to be a dotted line
767:14 - so we see you know see if i have b dash dash r dash dash gives it a dotted red line
767:26 - and we run this so now we see and sometimes i'll do that i'll make the line red so that it really
767:34 - stands out if i made the blue just blend in so now we know this would be less than but not equal to
767:44 - and there we go yes and knowing now that we can make some lines you can define these lines
767:50 - you can define these lines we can make art for example we can do that fill between and we can
767:57 - fill between two different graphs two different functions oh that might be interesting then
768:05 - this defaulted to notice i didn't even define the color blue here
768:10 - but i can define that face color what color do i want to do i want to make this so
768:16 - so if you know like a lot of your basic colors you actually can just get away with just putting
768:23 - that you know i want to be green put it in green in quotes single quotes yellow a lot of the common
768:29 - color names this will work out so that'll work so the directions here would be run the code
768:39 - and then reverse the order so we see here like before here's the graph this is the line we're
768:50 - plotting and remember we defined the x value up here once so here's this y value plot this
769:01 - i'm not worried about making a particular line so two arguments are fine and now i have the fill
769:07 - between and see what i have x y1 and between that and 10 or i could just easily make it you know y
769:18 - max but that's fine and then i add the other argument face color red line two i have this
769:28 - and fill between now notice between y2 and y1 so you know we can always define it as
769:36 - you know between other values that's this is this will come up especially if you want to make art
769:42 - you can define your lines and then fill between these lines i mean this is really vector graphics
769:49 - so then change this you know we have this color and same thing all of these
769:56 - you know this line y3 and i'm going to fill between y3 and y2 next one y4 there is that
770:03 - function fill between y4 and y3 and so when we run this see that first one it filled between
770:12 - there up to the top and then i did not decide to have another one to fill down to the bottom we
770:19 - just left it here so if we take this and reverse the colors so we're just going to take these face
770:26 - colors and make the first one blue there we go and we'll reverse them blue green yellow and then
770:38 - red at the end so the next one will be green and the next one will be yellow and the next one will
770:49 - be red there we go so now we have this and we see when we run it it reversed the colors
771:02 - so there we go interesting things you can do and if you were making art you can make these
771:09 - whatever formulas you want remember you know we were looking at all the different you know
771:14 - you know quadratic you know uh exponential functions so if you want different curved lines
771:20 - and you can just define that you want it to be between something and something and
771:28 - where i define this linspace here once so that's the reason why all these go to the edge
771:36 - but you could always for each of them you could define lines you can define that linspace as
771:43 - within certain values and you can make all kinds of shapes and then continuing on what we're doing
771:51 - with other graphing i kept these axis lines but you could always eliminate them too there we go
771:57 - you just keep your window size but then you could always eliminate each axis again you can
772:05 - again you can get creative with this make some different art all right and now we get into
772:15 - looking further into factoring into representing equations so monomial is one thing uh we see that
772:25 - mono is one and then it actually overlaps n o m is name that exact word is name in some languages
772:36 - and then i al just makes it a noun so one thing one term so each term has a sign coefficient
772:47 - and variable and an exponent we don't think about that all the time but when we see it here
772:55 - definitely i see a negative sign i see the coefficients three x to the second power so
773:02 - but if i have you know all of these the term x also has that so this is positive one x to the
773:13 - first power just things to think about because that really comes into play for some other things
773:19 - that we do with factoring etc even even a constant like five is five to the zero five
773:28 - five x to the zero because x to the zero is one and this will help us you know in thinking about
773:37 - each of these you can have a monomial and just make sure that you define each of these even though
773:43 - sometimes these values might be one or zero and you might not display them so here we have this
773:53 - now this is just a very interesting within simp i we have eq which is going to display the equation
773:59 - and you see how this equation is eq and then in parentheses i'm going to have what's on the left
774:09 - and then what's on the right so i define it as an equation and left and right just gets separated
774:14 - by a comma so you see what we have here so just showing you that this is one way you could you
774:26 - could use this within simp i for some other things that you might have been doing in in other parts
774:32 - of this course you know if you wanted to make sure you have a nice display at the end you know bring
774:39 - up eq you know use your variables that you already have and you see we just defined x as the as the
774:47 - symbol here so we could do this and then just display it and then look at that nice display there we go
775:00 - and so we have monomials one thing binomial bi is two trinomial
775:08 - is three and after that we kind of stop counting so polynomial is just many poly is many
775:13 - three and we'll usually put them in order so we take x as the variable we'll put them in order of
775:22 - the highest exponent and if we want to graph this then it would be all that equal to y
775:29 - so there we go here's your example and it continued on to the next line so what i can do is if if i
775:38 - know this i this is the normal standard standard form setup so you could prompt for each of these
775:46 - coefficients and then display them and so there's what we have here that's what i'm asking you to do
775:54 - so we're going to use this display and we're also going to use some math we're also going to
776:04 - to import everything from simpy so now we have these symbols and we want a coefficient and yes
776:12 - i do want to cast it as an integer though i mean realistically the coefficients do not have to be
776:18 - integers so there's our coefficient and a and b continue to prompt for variable c and d so what
776:28 - you can do is you can copy this and make this c input coefficient c and then we'll do
776:47 - for d input coefficient d
777:02 - all right so we've done that and now we want to display the full one so we have we're going to
777:08 - display ax to the third bx squared and then we do the rest plus c x
777:24 - plus d and notice we you might have remembered this from before yeah in in writing the math
777:32 - i just put these right next to each other ax means i'm multiplying but remember the python
777:40 - notation i have to put that multiplying in there so it is ax to the third bx squared cx d there we
777:50 - go now we have this this is great we have this in python notation and we were just talking about
778:00 - we want to display this in a nice way oh well i have to convert that to latex which is really the
778:10 - way we're going to you know to display math terminal math formulas so now we have this
778:18 - i'm going to convert that python to there you go so if we have this two
778:26 - two three four and five
778:37 - so you see we can take this and convert it that way you have all this for things you know we're
778:46 - thinking ahead we're building things that you can use you have all this that once you bring in these
778:54 - coefficients you could do other math to this here and then maybe at the very end display
779:04 - this this formula in a nice way so there we go that's what we have and yes that does look nice
779:14 - so this is going through so interactive polynomial so now we're going to take this
779:21 - this you know here's well quadratic but there we go and given this polynomial
779:30 - we're going to adjust each of these coefficients so again in doing this this
779:37 - certification notebook you should see that this is coming up you know things that you've done before
779:44 - and hopefully you've already worked through this and you know maybe there's just some of these that
779:49 - you were stuck on or if you forgot so remember we were doing before that plot library in line
779:57 - and we're going to bring in the interactive from the widgets there we go all these things
780:06 - and remember these the function of a b and so for this one we're going to change it to include a
780:14 - third slider so there we go so my function needs to include c
780:26 - because i need these three inputs great and then all the rest of these are fine
780:34 - ax squared plus bx i have to add this plus c
780:39 - c and so that will show the plot and then we want to make all these interactive so
780:48 - i'm going to run this function a b i just need c
780:58 - so we can just copy that comma
781:00 - c
781:07 - so now we will have three sliders a b and c and we have the interactive and then we're going to
781:15 - display the interactive plot so there we go so that's how we can and you see how
781:24 - you know using the same thing you can modify this to have four coefficients so now we see and it
781:33 - looks like nothing because everything is zeroed out but as soon as a gets to be something
781:41 - then we have a quadratic you know negative all right so that's nice and then we have b
781:49 - and it's always interesting to move these and see what this does to the graph
781:55 - so you can tinker with this and see remember that just moves it up or down
782:08 - there we go so you can take these and you can tinker with you know once you have this i mean
782:13 - code test pass but these notebooks you can always tinker with these what you know you pass the test
782:19 - you know you've learned that step you can go back in there and pull around with these sliders and
782:24 - see let's see what it looks like so now we're going to do exponential functions and remember
782:30 - our exponential function y equals a times b to the x and there we go as long as a is greater than
782:40 - zero then we'll have an upward or as long as a is greater than one it'll curve upward and same
782:49 - thing as long as b is greater than one we'll curve upward all right so again thinking about
782:58 - some of the exponential functions the so what we're going to do is we're going to run this code
783:05 - see the sliders and then change the slider so that a actually does have negative values
783:11 - instead of positive so here we have all these importing same imports and notice i made a y
783:21 - minimum and y maximum a lot bigger things grow exponentially so kind of need this to display a
783:27 - decent graph here we just have a and b and you see one to nine we just want them to be positive
783:37 - so when we run this we're just going to see what this looks like
783:44 - there we go and
783:45 - either one you see as i increase this it gets to be steeper
783:56 - but we see the general shape of this it just gets to be steeper and then if i change a
784:03 - it just gets to be steeper and then if i change a
784:14 - i'll even make this low because it don't it still will be positive
784:19 - so that's that's really all these you know they kind of do the same thing
784:25 - thing maybe b has a little more of an effect but then you see it's kind of that same upwards
784:35 - upward curve and then as the x values get negative this really doesn't touch it's you know you can
784:44 - get it's beyond what the resolution of any computer screen could do because if you keep zooming in
784:50 - in you know it looks like it doesn't touch and then it looks like it does but if you zoom in
784:55 - then it doesn't so you know that's the general trend so if we make this negative then we still
785:05 - need to do one more thing because this interactive graph takes this range as lowest to highest so
785:14 - net making it negative negative one is not the lowest we have to switch these negative nine
785:21 - is the low value and negative one is the high value remember because it's more negative so if
785:27 - we don't switch those also then we would get an error so we get this and we can run this and we
785:36 - see just making the a value negative would make the whole graph go below the y-axis because
785:45 - b to the x would be positive still so then a being negative there you go just flips it
785:52 - and just a note making b negative i'm not going to even worry about doing this right now but if
785:57 - we did that it works for integer values of the exponent but since this is a continuous graph
786:04 - it would be integer it would be work it would work and it would be you know positive if it's
786:10 - an even exponent negative if it's an odd exponent and it would go up and down like that but all
786:16 - those in between values because that would be mathematically doable also in this case they
786:24 - would actually be imaginary they wouldn't they would not necessarily work out well
786:29 - sometimes if we had you know some of them would and it would just be a mess so we're not we're
786:35 - not even going to mess with that changing b to negative it just really would end up not displaying
786:42 - anything but behind the scenes that's what's happening it works out for some values but
786:48 - doesn't work out nicely for others and you know a graph would be a mess but let's look at stuff
786:54 - that does work out nicely percent increase so hopefully you remember the formula from
787:02 - working through it in the previous unit but then we have you know all the percent increase
787:08 - and if i were to graph this so we have a equals p times one plus r to the t
787:13 - and a is annuity and that would be the y value if you were graphing this and you would know
787:20 - p and you would know r so t would be time in years but that would be the x value if you were
787:26 - graphing it and so we have all this yes p is the principal the amount you start out with r is the
787:33 - rate converted to a decimal and t is time in years and just the way we often see it p usually is
787:46 - capitalized so it's just interesting in in my variables i kept them all lowercase but a lot of
787:52 - times you'll see that written you know they're lowercase but p gets capitalized
787:59 - um all right so you have your starting amount so you can prompt for these and then you not have to
788:04 - worry about changing the code well we are going to change this here so you can prompt starting
788:09 - amount as input and converting all these to float numbers so you don't have to worry about changing
788:15 - numbers percentage rate converted to a decimal and how many years that'll be t so we're just
788:23 - going to take this equation and put it down here in python terms so we have p which we would have
788:29 - gotten from here so p times and remember i have to put the times it the multiplication in times
788:38 - one plus the rate and all that to the exponent of time and there we go just translating that
788:49 - equation to to python and then we'll print out the annuity so when we run it starting amount
788:57 - one thousand just take these nice even numbers all right and we have point zero five as the rate so
789:08 - that'd be five percent and how many years then let's see uh let's say like seven years all right
789:19 - and i didn't worry about putting in another function around this but you probably would
789:22 - but there you go to two decimal places this is what the annuity would be thousand dollars at five
789:28 - percent for seven years and then we have percent decrease very similar formula except notice we're
789:38 - subtracting inside the parentheses because it's one minus three and this does this does happen we
789:47 - does happen we have car value values of cars or some other products that might decrease at a
789:54 - certain percentage rate every year the decay of some elements so that radioactive decay or
790:00 - certain elements like carbon 14 that are very predictable so that decays at a definite rate
790:07 - knowing how much that we can measure how much that is we can figure out the
790:12 - the age of something some sales discounts maybe there's something that decreases
790:16 - at a percentage you know every week if it's not sold so you have some applications of this
790:23 - and notice we're going to do same thing prompt for pr and t and then we'll put our formula in here
790:31 - very similar p times and then in parentheses one minus r close the parentheses exponent t
790:39 - so there we go and we see you know the jupyter notebook the colab notebook always wants to give
790:47 - us tool tips and advice on what variable and everything so there we go we have this and we'll
790:54 - run it all right so there you go so let's just say i had my you know twenty thousand dollar car
791:04 - that uh decreases at 0.09 which might be the you know rate of decrease who knows and then
791:18 - how many years will decrease you know let's just say 10
791:21 - so there you go that twenty thousand car twenty thousand dollar car average uh rate of decrease
791:30 - depreciation is nine percent so it loses nine percent of its value every year for ten years so
791:35 - then ten years later that car is worth seventy seven hundred dollars seventy seven eighty eight
791:41 - that might be the case i mean you know this is not uh don't quote me on on this rate but you know
791:48 - for the sake of practicing it that that rate's probably realistic
791:54 - all right so now we have compound interest which is very much like the percent increase
792:00 - but we're taking it you know we could use compound interest we could use that formula
792:05 - before if it's compounded once a year so now we have this formula notice how similar it is
792:15 - but it's r divided by n and then the exponent is nt so if it was compounded once per year
792:22 - and is one so that doesn't that goes back to that formula we were just using
792:26 - but where n is multiple times per year you know this is the formula that we we would use
792:35 - and remember that that's really and that's why we wanted for any percent increase that's why we
792:40 - wanted to convert it to that formula that it's something that's a multiplier and we can then
792:47 - easily adjust the rate of decrease that's why we wanted to convert it to that formula
792:53 - and we can then easily adjust this for how many years something you know increases or decreases
793:03 - and in this case now we had the other twist also then for how many times we are calculating this
793:10 - every year i mean n being 12 that's pretty common you know a lot of banks a lot of bills
793:15 - you know they calculate things you know once a month so we're going to do all these starting
793:22 - amount all the rest very similar and then we're going to add this line here n number of times
793:29 - compounded so using this formula then we'll do p times and in parentheses one plus but now i have
793:42 - r over n i'd rather use extra parentheses just to make sure that nothing gets mixed up in the math
793:48 - uh r divided by n and all that to the
793:58 - so you see r over n in the extra parentheses to the nt but again just to be sure i'll put that
794:05 - in parentheses n times t in parentheses so that way it stays together that python doesn't actually
794:15 - python might not but i want to make sure it doesn't accidentally take it to the n power and then
794:21 - you know well then multiply by t so there we go p times one plus r over n to the nt
794:28 - and that's going to give us our annuity so
794:36 - just to be interesting let's use the same one we did two steps ago that one thousand dollars
794:42 - converted to a decimal and we were saying that that was at 5.05 and we said seven years
794:54 - and and 12 is pretty common but i'm going to say 52 let's say it was compounded
794:59 - you know every every week all year
795:01 - here so what do we get 14 18 and 82 cents and let's just quick go back and compare this
795:16 - to our
795:19 - increase 1407 and 10 cents so look at that just that little amount of money
795:27 - made us another 11 because it was compounded that often it's a little bit more because
795:38 - you have that little bit extra advantage this is money growing and then that little bit extra
795:46 - percent for that little bit more time you know gets you a few more dollars so you might be thinking
795:52 - well okay 52 then maybe 365 would give you a little bit more that's true and we can just
796:01 - quick do that so remember that was 1418 and if we did this so that same thousand dollars percent
796:12 - we're going to do the same 0.05 the same seven years but then this is going to be 365 compounded
796:24 - every day so you see 1419 it gave you another dollar so compared to once a year you know you
796:34 - made about 11 more dollars doing this every week but from every week to every day you know gave you
796:41 - one more dollar so there is a point to where it doesn't really get you that much more and then
796:48 - we start thinking about well okay can I compound it multiple times per day etc that's when we get
796:55 - into continuous growth and continuous growth if i use that formula and then compounded it multiple
797:05 - times a day if i compounded that like three times a day and who knows maybe i just make could even
797:12 - make n like an even thousand it starts approaching this other formula for continuous growth so to
797:19 - recap so there you go that's you know money compounding annually so that's the percent
797:26 - increase but we take it as annually and then n times per year we have this formula and then as
797:35 - n gets to be really big like i said like a thousand or something it actually approaches this other
797:41 - formula pe to the rt and this is useful because as we see later better ways to even figure out
797:52 - what the rate or the time would be if i know these other values so it goes from this a little more
797:58 - complicated to i actually think this is a little bit easier formula p times e to the rt and that
798:06 - e is not just a random variable e is this constant equal to about 2.718281828 that 1828 after looping
798:19 - through that twice the next time it's not exact so it's not just like this you know keeps repeating
798:25 - that would make it even easier but it actually after that second time then it's a little bit
798:31 - different okay so we give the code that we're already going to prompt for these and this time
798:43 - we're going to add one more import statement we're going to import math so that we can use
798:47 - math.e you know you don't have to worry about typing in this because actually math.e is going
798:53 - to take it to even more decimal places so we have the same thing here principal rate time and
799:03 - there you go time and that can be an integer that doesn't have to be it can be an integer or float
799:11 - and is going to be an integer because you can you can't like maybe you know how many times
799:16 - do you compound it you can't say like oh one time i kind of like halfway did it that doesn't work
799:22 - okay so now we're going to use these these same formulas we did before
799:29 - annual so that's going to be p times times one plus r exponent t just like that first formula
799:41 - and then this one is going to be p times one plus the extra parentheses r over n all that to the
799:55 - exponent of nt so these are those two formulas and now this one we're going to use math.e
800:07 - math.e so that's going to be p times math.e to the exponent of r times t
800:23 - so there we go we see pe to the rt
800:26 - t and now we have these three so we can prompt and let's compare these compounded annually
800:37 - compounded n times per year i'm going to put an extra space in there and compounded continuously
800:46 - so let's take something here and let's just say a principle of there we go 11,000 rate 0.06
801:06 - and time and let's just say you know 15 years n and we only need that for one of those formulas
801:14 - but let's say n is a normal 12 so given this compounded annually you would have this much
801:27 - 2632 compounded 12 times a year 26,995 so wow that made you know more than 630 more dollars
801:40 - just by compounding it but look at that compounded continuously 27,055 so there we go yeah so you
801:58 - see from here from once a year to multiple times we're talking about making you know more than 600
802:04 - but then from that to compounding it continuously you know compared to the original you know we're
802:11 - up to about 700 more and it kind of evens out that oh and this one i think i it gave this error
802:31 - it gave this error because i used the parentheses so if you're going through this and if you know
802:40 - you know these errors messages are supposed to be hints just to help you out so it was without the
802:47 - parentheses and that is okay because python does no word of operations but without the parentheses
802:55 - it should give us not the error so there we go and should give us the same same values here
803:04 - so 11,000 rate 0.06 time 15 years and and we said it was 12 so we see same values and the error
803:22 - message saying you know maybe i'll go in and change that that the parentheses are okay all
803:31 - right so there we go prompting once and comparing these three different ways of calculating interest
803:41 - interest so now some of this comes in where we have you know some investment here and investment
803:54 - often you know something you might be contributing to for retirement and you have some accumulated
804:02 - value so we have any of these formulas but we also contribute money every month and this i
804:12 - will say month monthly that's that's kind of a normal normal thing so i'm not going to worry
804:18 - about like all the different values that that could be okay so we have something that's going
804:24 - to increase by a percentage and we're using just that simple interest formula interest equals
804:31 - principal times rate times time so that is just simple interest but for one month that works out
804:42 - and for one month t equals one over 12 because time in years but then over 12 you can just divide
804:50 - by 12 so here if i have this we can set up a loop here so prt but then monthly we're going to
805:04 - ask for the monthly contribution all right now this annuity at the beginning it is p what do you
805:16 - have i have this i have this amount done so we'll keep that but it's the it's the annuity variable
805:25 - that we're going to keep updating so somebody said time in years so then our loop is going to be
805:34 - 12 times t so monthly contributions for this long for a and range 12 t
805:40 - t and now let's see we're just going to say first of all the annuity equals annuity plus monthly
805:50 - all right so now that annuity value is greater and then now we want the interest just the interest
805:57 - so that's why simple interest is just the interest equals annuity which is the times rate
806:06 - time and then times one over 12 and i'm just going to say divide it by 12 so we see the
806:17 - in principle times rate times time and then 1 12 is divided by 12 so now we have just the interest
806:23 - and now again i'm going to update annuity annuity equals annuity plus interest
806:27 - annuity plus interest and because i'm making this a loop then you know these other formulas
806:37 - are useful for not having to do a loop but we also wanted to add in this contribution
806:42 - and then there we go so you know we have a few things going on in this loop and then after all
806:48 - the loop it's going to go through and each time you know add the contribution increase it by that
806:55 - percentage for that little bit of time you know now update annuity and keep going so when we have
807:06 - this so starting amount maybe we can say 5 000 and annual percentage rate let's be optimistic
807:17 - for you know some uh you know retirement account 0.08 and then number of years but then these are
807:27 - some of the things you might contribute and then have it grow for years so we can even say some
807:34 - like long amount of time 35 years there we go monthly contribution so let's say like 400 there
807:47 - we go so that's that's what we have you start out and then every month you're contributing 400
807:53 - and you know we hope it's growing at that rate
807:55 - so given this notice how notice what this number is that's a million dollars so what this is saying
808:06 - is and to get some of these the the rate it it changes that's that's a good estimate but um
808:14 - it's a reasonable very reasonable estimate so putting money away you know start working
808:21 - put five thousand dollars away and some good account for as eight percent for 35 years and
808:31 - then each you know each paycheck you're contributing contributing money then you retire
808:39 - with a million dollars there you go things to think about that you can put away this little bit
808:47 - that you can put away this little bit forget about it for 35 years well not forget but you know
808:55 - and you know have this because if it's earning if it still is earning eight percent as a good
809:02 - estimate eight percent of that million is eighty thousand dollars and that way you know eighty
809:08 - thousand dollars interest you can live on that and it still has the million dollars there to
809:14 - keep generating more interest so there you go
809:20 - okay so we go from the positive saving money and having a million when you retire to mortgage
809:27 - payments and yes more like the word for death somebody originally coined that as you know like
809:35 - this death payment but nonetheless mortgage for any large amount of money over a long period
809:45 - of time those other percent increase formulas won't quite do it otherwise you you will end up
809:52 - paying a lot more than is reasonable so this is the much more complicated formula but remember
810:00 - that's the value of you know setting these up and writing the code that you don't have to like
810:04 - remember this formula or you know plug the numbers in every time you can again prompt for just like
810:10 - we were doing before pr and t and figure out what your monthly payment would be
810:19 - so given that some large some huge amount of money and how banks will set up your mortgage that's
810:26 - um something else but knowing how much you're going to borrow and then being able to just run
810:34 - it through this formula and figure out what would your monthly payment be that's going to be very
810:38 - useful you and again this applies to mortgage or possibly car payments because that's also
810:47 - large enough sum and a long enough time that this is a much better formula so this is the
810:55 - this is the formula and again p is principal r is rate t is time and this would have n there
811:02 - but n would be 12 each time so i just put 12 in there so it kind of goes along with that
811:10 - formula but n is 12 each time you know there's no other setup you know daily or weekly mortgage
811:17 - payments or yearly no it's it's always monthly all right there we go so we have all these so
811:23 - so now i gave you a hint to do this use other variables i like other variables because
811:32 - look at this r over 12 comes up a few times so you know we can make this um
811:44 - um there you go r over 12 is uh you know multiplier or if you don't want to use
811:52 - other variables you can do this there we go and since i don't have n because n is 12
812:03 - um i could have i might have like just like math n for numerator and d for denominator
812:11 - and so the payment would be n divided by d because that just might simplify this a little bit
812:21 - um and then it would be p times n divided by d so i could have just my numerator so equals
812:30 - r over 12 times and then in parentheses one over r over 12
812:44 - oh one oh sorry one plus r over 12
812:52 - 12 and all that to the exponent in parentheses 12 times t
813:07 - so r over 12 times one plus r over 12 to the exponent 12 t there we go so that's the numerator
813:17 - not bad and then i can have the denominator equals so one plus r over 12 there we go to the exponent
813:34 - 12 put up with some parentheses 12 t and now when i subtract one
813:47 - you see then that's definitely not a part of that
813:51 - so yeah and again you could add other variables you can make r over 12 its own variable or
813:57 - something like that you can make one plus r over 12 its own variable you know different ways to
814:03 - do that i feel i felt like this wasn't that bad so but breaking up numerator denominator
814:10 - and then payment times numerator over denominator
814:15 - so we take a look at this and the amount borrowed we could just say like 200,000
814:23 - uh annual percentage rate 0.07 you know some of the rates have been going up so i'm just going
814:34 - to say that for now and number of years 30 is pretty common and so there we go so
814:45 - there we go so 1330 and change and this helps because then you say okay well you know what's
814:53 - the cost of the house and i have a down payment you know you get down to how much you're borrowing
814:58 - that's one thing okay but what's really going to make the difference is knowing this what would
815:05 - your monthly payment be that's the important thing and you know bonus knowledge that no matter
815:16 - whatever your income is the monthly payment should be for mortgage or rent right it should be one
815:22 - fourth of your income or less so just to remember you know if that's your monthly payment then each
815:31 - month you should be making at least four times that or if you're not then that's not the right
815:38 - house because sometimes you might say oh yeah i'm making more than that i can afford it but then you
815:42 - end up being house poor yes you can afford your your mortgage payment but you can't afford much
815:46 - else all right so let's go on to exponents and logarithms with exponents and logarithms
815:55 - they're inverse functions they're the same information rearranged so i have this example
816:04 - here two to the fourth power equals 16 so there you go two base two the fourth power equals 16
816:12 - and then the log base two of 16 equals four there we go both of those have the same information
816:21 - rearranged and that's what logarithms are you know picture everything on the one side of the equal
816:26 - sign oh two to the fourth power i know how to do that plug that into the calculator but supposing
816:32 - it's the exponent you don't know the log base two of 16 the answer is an exponent you know what
816:38 - exponent gets me to that so uh this guy john napier like 400 years ago you know he was a
816:49 - 400 years ago he realized that that was a missing piece that that was a situation a lot of people
816:57 - wanted to know the exponent for different things and he spent like 20 years of his life
817:00 - developing this and it was you know very useful you know the original logarithms it was just books
817:07 - you could like look them up now we have this at the benefit of you know calculator pretty easy
817:14 - and we're going to take it one more we're going to even write the code that you can just put in a
817:19 - couple numbers and it'll calculate it so if you use the math library and we'll also look at the
817:30 - numpy library that's another way but if you use the math library so it's math dot log
817:39 - and then the arguments are you know the log of what so 16 and then comma and then what's the base
817:45 - so there we go and if you don't have that first argument or if you don't have the second argument
817:51 - if you just say the log of 16 it takes it as base e but we'll get to that later all right so there
817:57 - we go the log base two of 16 so here's the code we're going to import math and you know base i
818:06 - always call the the exponent the result just because it reminds me i'm doing a logger and that's
818:12 - what i want so there we go so or you know that's the the result of exponential notation so
818:22 - i had somebody input the base and we're going to input cast as a float and the base can be a float
818:29 - but usually it's an integer and the result and cast that as a float so what do we want to do
818:41 - change the next line okay math dot log and we were just saying result comma base there we go
818:53 - and it'll import this for it and it'll do this for you so that's all you needed to do for this
818:58 - and we'll run it and this should check it for you there we go base 27 oh how about this base um
819:08 - three result 81 so it should return four there we go nice you might be able to do some of these
819:23 - in your head but if you have you know base you know three to what exponent gets you 81 all right
819:29 - you can do that in your head that's four but this is useful three to what exponent gets you like 80
819:34 - or gets you 85 you know when it becomes some weird decimal all right so natural logs and we
819:43 - talked about e so uh this is the this is another use of a logarithm so e and uh just to recap
819:56 - if you have this formula annuity equals pe to the rt there we go so supposing i want to know
820:05 - how long it will take for something to double and you'll see the logarithm connection here so
820:11 - you know whatever i start out with p the annuity needs to be double so if the annuity is double
820:19 - then whatever p is and annuity is twice then i could cancel it out you know annuity would be 2p
820:26 - so it simplifies to this and then now one of the many situations i want to know the exponent
820:33 - exponent well i have base e so math terms i would say natural log i do the natural log of both sides
820:43 - the natural log of two on the left and the natural log of e to the rt and remember then that cancels
820:49 - the natural log of e to the rt because that says e the natural log says e to what exponent gets me
820:56 - this so e to what exponent gets me e to the rt well it's obviously rt so now we're in this situation
821:07 - we know that take the natural log of both sides now we're in this situation and i get natural log
821:12 - of two good thing i have a calculator to do this and then if i want to know how long it takes to
821:19 - double if i know the rate then i would just divide by the rate and then my answer is time so in doing
821:29 - that math dot log and you see no other argument necessary if i don't put the argument or as far
821:38 - as what base it is it takes it as base e natural log so there we go and in this one r input the
821:46 - rate as a decimal and for this one i just put the end just it's this seemed like a long sentence so
821:56 - the input comes in as a new line on a new line and once the person input the rate there we go it's
822:02 - just math dot log of two divided by r is time and we'll print out it will double in t years
822:10 - this is pretty useful so you can run this now this one remember you just needed to run it
822:18 - so and put the rate so if
822:25 - let's say i have some investment growing at eight percent and it will double in 8.66 years
822:34 - six six years so some of the you know you might say all right if my investment's growing at eight
822:41 - percent and we can even round this down to eight and a half and you can do things in your head
822:47 - okay well eight and a half years it'll double 17 years it'll double from that you know etc
822:54 - and you know you could use this to estimate some outcomes all right common logs so if i have base
823:02 - 10 it's the common log if you were writing this in math notation you would just you could just say
823:07 - log so uh with without the little number because then you know if you don't put the little number
823:15 - then oh we'll take it as base 10 because that's our number system the common log so this is what
823:21 - we're going to be using when we want to have you know how many decimal places do i have we're using
823:27 - things for scientific notation so in the code you see we'll just do math dot log n and then base 10
823:41 - so you see uh if i don't say the base it's e but 10 even though it's common i do have to say the
823:50 - base there we go so if we have this and our number with several digits or several decimal places
823:58 - and this one i just separated into two lines to show you can do that also take the input
824:06 - you know cast it as n the other reason to put this into two lines is you might notice this vertical
824:13 - line over here maybe even before writing python you know you might have the sense of you know
824:19 - you only want the lines to be so long you don't have to scroll over but python really makes that
824:23 - a design decision if i continued beyond this line it would still work it wouldn't just cut off
824:30 - that code but just as a convention for writing python code we usually make it i think it's like
824:37 - 80 characters brings it over to that line so there we go i have this one and then i didn't
824:44 - want to go further on that line so i just made it a separate line casting that as a float okay so now
824:51 - all right now we have the round the code so this one we have math dot floor so i'm going to
825:02 - take the log of that but i'm not gonna round but instead of running i'm just taking the floor
825:16 - of this because i don't want the decimals i don't i don't want to potentially round it up
825:23 - and i would just you know drop the decimals math dot floor that's going to give me my exponent
825:29 - and that's actually what what we really want and this is a weird python quirk when the exponents
825:39 - exactly three it sometimes doesn't give you the answer you want i don't know it's just weird
825:44 - python quirk so just bonus insight here after doing this enough times i just added this little
825:51 - if statement here all right and we're going to print the exponent so when we run it
826:03 - there we go several digits so if i have point you know zero zero zero five all right and
826:16 - exponent is negative four
826:17 - four yep
826:23 - there we go and if we remove the math dot four function
826:30 - then it will just give us it'll be you know negative four point something else and we'll
826:38 - just do that there we go so you can see and i'll just to compare i'll do the same number point zero
826:50 - zero zero five all right and that's it now notice in positive numbers it would be four point
827:05 - something or three if this was positive three point something and it would drop the decimals
827:10 - it'd be down to three but with negative numbers the floor from negative three point something the
827:17 - floor of that is negative four so just interesting insight and again you're watching this video
827:24 - because if you've gone through the the foundational math three and maybe you're stuck
827:31 - on something you're what we want some other insight into some of these so hopefully you know
827:36 - this helps all right now all that you know we can use these logarithms you know how long to take
827:43 - something to double you know things like this uh number of decimal places and notice i call that
827:51 - exp for exponent because well first of all that's what we're asking for in the logarithm
827:58 - but also that leads to scientific notation you know how can i write very big numbers or very small
828:04 - numbers without all those zeros so if i had like 45 million oh but i can write that as 4.5 times 10
828:11 - to the seventh or point zero zero zero all these could be 4.5 times 10 to the negative seventh
828:20 - and there we go so it's always n times 10 to an exponent and n is always one digit than the decimal
828:27 - so that's what we want you know because 4.5 that's i want that one digit than the decimal
828:36 - that that's the true scientific notation now this is just changing you know this one here we're
828:47 - not actually writing code this is determine the value by just by counting uh i just want you know
828:55 - just to see so you know as we count so how many decimal place how many places one two three four
829:03 - five six seven eight nine ten eleven because it has to be down to this so that's why we have a
829:11 - one is 1.56 that's where the decimal would go and a2 would be 11 and then we're going to print that
829:19 - out a that that is a1 times 10 to a2 so then we'll do this for here so the decimal point would be there
829:33 - so the decimal point would be there so then it's yeah so then we would move it one two three four
829:44 - five six seven eight nine ten so it would be 4.13 and we have to move it in the negative direction
829:59 - so it'd be to the negative 10 and so then that would print b is 4.13 times 10 to the negative 10
830:09 - there we go and we run it there we go now
830:16 - now this one works displays nicely this one how we want to display it here is nice but python
830:32 - automatically and this is fine you know you go on the next step but python automatically converted
830:37 - this one a positive 11th power fine it didn't see a reason to change that but negative 10 so that's
830:49 - the python notation 4.13 e negative 10 so and this is not the same e this is just indicating exponent
830:58 - so times 10 to the negative 10 so there we go in this you know hopefully also again if you're
831:07 - watching this it's you know illustrating like why there's some of these quirks in python all right
831:14 - so we can use these logs for scientific notation because if i want you know if i want to convert
831:22 - this to scientific notation in an easy way so what do i do so i did this for for a putting
831:34 - together the things we did in the last two exercises so for a i'm going to do the floor
831:44 - of the log of a base 10 there we go and now i'm going to round it so
831:55 - so it was a i called it x1 for exponent one and so if i have this a times 10 to the negative x1
832:15 - and it rounds it to two decimal places so if that's the if that's the log then i'm going to
832:25 - multiply this times 10 to the negative x1 and it's going to print this out so
832:34 - i'll just show you the code and then we'll run it and you'll see so now using that as a model
832:40 - what i want x2 and i want to show you that this actually works for positive or negative exponents
832:48 - oh yeah
832:56 - so if we have so but this one i want this for b so take the log of b base 10 and the floor of that
833:10 - and if i have this then i'm going to round that so i'm going to round that um
833:26 - again referencing b this time
833:30 - to the negative x2
833:33 - to there we go so it's what exponent got me there but then when i take that
833:45 - then that will divide it out that's why it's that that's why it becomes a negative exponent
833:50 - because i want to divide it out to get that early number there all right so if we run this
833:59 - and this just took those so you see we get a is 2.34 times 10 to the negative 12
834:12 - and b is 1.23 times 10 to the 13th
834:21 - so pretty cool how you could just take this and whether i wanted to show you that whether it be
834:27 - a decimal so a negative exponent or a huge number with the positive exponent either way
834:33 - this this works take the log base 10 and the floor of that and that's the negative exponent
834:42 - that's how we get n1 you know then we're then multiplying it by that and we can display it so
834:52 - and we can display so this way now you have it you can have a code to convert anything
834:58 - to scientific notation pretty cool
835:05 - and that's what we get into step 19 there we go now this one very similar to what we were doing
835:13 - before and we're just added one more thing of entering a number to convert to scientific
835:20 - notation so see this is where you can make it as your calculator to convert because i'll just take
835:31 - this and it works either way i'll copy this code that we had from before and paste it here but
835:51 - i don't need the number ones because i'm only doing one thing
835:53 - right and in that case if we want to print you see i even left this that's what we want to print
836:09 - so we can reuse this and this is the key with copying and reusing code you can do it just
836:16 - be aware to notice these little things if you just copy and paste something
836:20 - there there might be a little subtle things that don't line up you know just copying pasting no
836:26 - good you have to understand the code well enough to know these little things that you need to change
836:32 - oh okay i needed to delete the ones here all around and you know copy and paste with the
836:42 - copy paste with the follow-up editing now that works and see what you can do is now you have this as a
836:51 - standalone uh you know input you didn't have to like define the variables in the code here
836:58 - and there you go enter in whatever number all right so one two three
837:07 - three there we go there we go
837:20 - one two three
837:24 - oh that's very weird
837:25 - two three i got to one point two three ah look at this it see as i was mentioning it i didn't
837:38 - i didn't delete the one there and that variable was still in in memory for that little bit
837:46 - so it gave me this you know exponent that i was not expecting one two three
837:59 - there we go
838:04 - all right pretty good so anything that you have now now we have this standalone code
838:10 - and then later on what we're going to do is and then maybe i'll use this as an example is we can
838:16 - put all of this code within one function and so then now you can just define a function that will
838:27 - convert to scientific notation and all this code is within that function and we can take that and
838:33 - then that function we can use wherever all right so let's go on to the next one now we'll get to
838:43 - graphing exponents and logarithms so just connecting with the math natural log is l n
838:54 - putting the adjective first natural log if i was just writing it on the on the board it'd be l n
839:00 - and that would be base e and so comparing y equals e to the x and y equals natural log of x
839:10 - those two are the inverse functions and mirrored over the line y equals x so when we see the graph
839:17 - we'll see these and then we'll see the line y equals x so we were just talking about using the math
839:24 - library if i just want to calculate a logarithm i'll use math.log but because when we graph we're
839:34 - using numpy and we're using the linspace function to create an array of values that we're going to
839:41 - graph so i have to keep with numpy which i usually import as np so then i'll do np.log math.log as
839:53 - you see if i want to do one thing yeah that works if i'm using the math library i'll use that here
839:58 - i'm using np.log and np has it slightly different np has np.log 10 obviously base 10 np.log 2 for
840:14 - base 2 and if i just do np.log it's going to be base e realistically we don't need to do every
840:24 - other base because we have the change of base formula which i'll talk about in a second so there
840:32 - we go so we have the positive x values now e to the if i was graphing this e to the x i have my
840:42 - all my x values whatever i want but when i do natural log then the x value will never be zero
840:49 - because remember they're inverses so in this case e to whatever exponent the y value will never be
840:55 - zero as the inverse here the x value will never be zero so when i graph this hopefully this looks
841:04 - familiar from other graphing we might have done i'm going to define this and i'll just use this
841:13 - minimum maximum you know based on here what i did here that's fine but then when i do
841:26 - log i need i'm going to use a different linspace i won't do zero i'll just pick some like really
841:31 - tiny number 0.001 and that should be enough to illustrate this point so there we go all right
841:41 - so i'm graphing these i'll use x1 is my array of x values and linspace goes from minimum to maximum
841:50 - and then within that range i want a thousand points i mean you'll see for this you'll see a
841:57 - smooth graph even if you don't have a thousand points all right there we go and then plot x1
842:04 - and i'll just write the y value here instead of separating it out math dot e for my e value
842:12 - and then that to the to that exponent there we go and i'll make this a blue line so then we have
842:20 - the red line for y equals x then x1 and we see if i have this x1 i just can put x1 x1 because
842:33 - it's y equals x so i don't need to define a new y value which i know it's the same
842:38 - and here now for my log y equals log of x i'll do this linspace and then np dot log x2 so there we go
842:54 - all right so we're just going to run this and then change it so we see i see this notate notation
843:00 - and there we go so we have the blue line e to the x exponential function and graphing that green line
843:10 - y equals x or y equals the log of x and there we go and this works for any inverse function
843:18 - there are mirror images across the line y equals x but this there you go it illustrates it nicely
843:23 - it illustrates it nicely all right now change the blue line and the green line because we want to
843:30 - make these log base two so here instead of math dot e i'm going to make this just two to the x
843:42 - you know that's fine and this one instead of np dot log i'll do np log two
843:57 - now we're not going to notice that much of a difference here because
844:01 - i went from a base of 2.7 to a base of 2 but there we go that's all you need to do for this one
844:09 - one i don't want to include some applications here if you have the hydrogen concentration
844:18 - as a decimal number that's really where the ph comes in so proportion of hydrogen
844:27 - so the way this this works it's the negative log of the hydrogen concentration
844:33 - so if we have 0.007 as scientific notation that would be seven times ten to the negative three
844:41 - which would be a ph of three and then we see that as we got more and more zeros as placeholders
844:49 - you know a really tiny decimal number then that would be ten to the negative four five six you
844:58 - know ten to the negative ten you know really tiny number and that really tiny number then
845:07 - ten to the negative ten would be a ph of ten you know we get the idea so that's really it i just
845:14 - just taking this and if you knew the hydrogen concentration i was thinking about adding this
845:20 - in as like going into the chemistry and finding hydrogen concentrations but i'll leave that for
845:28 - the those of you that want to uh you know pursue the chemistry angle on this but you can you could
845:35 - actually get you know various uh hydrogen concentrations of molecules and you know
845:43 - work it out from there okay but nonetheless so what we want to do is we just want the hydrogen
845:49 - concentration so it's the negative log and for this one i will use math so there we go so we're
846:00 - going to make this negative math dot uh log and i'm going to log as decimal ten
846:14 - ten there we go so that's that's really it and now that log i get that number base ten
846:25 - and what do i want to do i want the ceiling so i'll do math dot
846:32 - ceiling of this
846:36 - there we go
846:37 - perfect all right so there we go when we run this end of the hydrogen concentration
846:47 - and what if i put your point two three four and there you go and i'll put let's put the number five
847:00 - i could put a one there
847:01 - uh math dot ceiling yes so
847:11 - i would take this as we we look at this and yeah this is the function here we run the function as
847:19 - is and then do the math dot ceiling so that's what we'll do we'll move our decimal place
847:24 - and these are the things that i wanted to put in here as you know indications and you see
847:33 - we see why this this ended up being wrong because then it gave a ph of four
847:36 - putting the math dot ceiling in the wrong spot
847:41 - all right so i'll do the same same one here point
847:46 - i'll put a one that's okay there we go now that gives it a ph of five
847:51 - there we go now that gives it a ph of five you see how that makes a difference doing the formula
847:58 - first with the negative log then doing the math dot ceiling there we go now that gets a ph of five
848:09 - there we go all right so now with functions here
848:13 - calc these are some of the things how could we write a function well if you want a function
848:21 - you're going to define the function and calculating mortgage payments okay so maybe
848:30 - i'll call it mort pay and now notice you would think that it when i hit enter it gave me the
848:44 - indent automatically but for other things that i do or i might use this code i am all about the
848:51 - four spaces so i backspace i delete that and then i want to make sure i do the four spaces so what
849:00 - can i do i can define this function here so and and this is i'll do one and then you can see how
849:08 - you can do more here so if i have the mortgage payment now we also have our
849:15 - um table of contents i can jump right to mortgage payments so notice i have
849:25 - p r and t here
849:30 - and then i will define these in here
849:37 - so
849:38 - here so i'm going to just copy this and actually um
849:53 - there we go so i'm going to show you one way to do this and then maybe we'll do it a different way
849:58 - okay there we go and more functions here so one of the things that you can do
850:10 - is just put everything in here
850:19 - and i might just
850:21 - here we go
850:32 - you probably don't need that extra line and same here so this works as
850:43 - the payment maybe that's all you need you want to be able to then prompt for these things and then
850:49 - print out the answer so that works another way is
851:02 - what i'm going to do i'm going to copy this and i'm going to show you another function that you can do
851:09 - you can do and that one
851:19 - all right so mort pay
851:25 - p r t and for this one i'm going to require input input p r t
851:34 - t and then
851:42 - i'm going to not need these
851:53 - and instead of print
851:55 - and i'm going to return payment
852:08 - so this one's nice if that's the if and you know there we go so this one's nice if you wanted to
852:17 - prompt you know this could this could go a lot of different places but this one you can put this in
852:27 - maybe then just put this function in and return the payment like exactly where you know it's going
852:35 - it's going to go so two different situations and that's why you know i'll make it you know
852:43 - that's why you know i'll make it you know p r t so we know what the input would be and then this one
852:49 - is different so there we go so that's that's one one way
852:53 - and i have here more functions now the interactive polynomial graph we were working
853:00 - with that too i'm going to do one more up here because i wanted to show you the scientific notation
853:13 - so here we have
853:15 - enter a number to convert to scientific notation so if we have this uh maybe we want the number to
853:30 - convert so if i have a as my variable so there's my scientific notation there really just two lines
853:45 - and if i take that and convert this i could create a function to
854:04 - a there we go and maybe it just takes that input of a
854:25 - there we go and
854:28 - and
854:33 - return
854:37 - n
854:42 - so that could work too
854:47 - there we go so we take this and move around um
854:54 - um oh but i would probably have it as a string here so i could go back to that
855:09 - and instead of the print
855:15 - uh i could instead of printing it
855:18 - i could
855:29 - i could turn this into
855:35 - um there we go uh answer
855:42 - answer
855:46 - and so we may you know i could just make that a string and then return answer
855:58 - so i probably don't need this a equals
856:03 - uh
856:11 - and it should give you n times 10 to the x so just to give you some examples this is where
856:25 - i want you to be able to you create the functions and then the internet active
856:31 - graph with sliders we we have that so turn that into a new turn that into a function
856:39 - but here's the examples how you can just take and and that's the whole thing that we wanted to get
856:45 - to you know through this course you learn and you're practicing and then you're grabbing the
856:52 - parts that now you know and you can turn just the important parts that you're going to use later on
856:59 - into their own functions and you can you know give them other names you know here's more functions
857:07 - and there you go uh create a function for you know how long it would take money to double
857:16 - go back to that other one again turn that into a function and all of this
857:20 - is going to be in a financial app that you'll make so what you can do is you can have one display of
857:33 - all of these and you could have this work out that it's within all the code here or you could
857:43 - have it within uh within google co-lab where you have text that gives you like number one
857:51 - calculate mortgage payment number two retirement account balance number three etc you could have
857:58 - the text there and then require input which option do you want and then have all your functions so
858:09 - that's that's one way to do it defining all the functions having the text input that would be like
858:15 - the menu and then when you pick your option then it runs that function so that that's really what i
858:22 - want to get to is that you're putting all this together and it becomes your financial app so that
858:29 - you can use this for other things you know calculating your own finances and this combined
858:38 - with what you're doing certifications one and two see now where the goal is that you're getting to
858:46 - the end of this and you have understand the math and you have all these functions at your disposal
858:53 - you know calculate things graph things solve problems and then you can apply that later so
859:01 - the next unit which i call it week 15 is going to be the wrapping up and putting all this together
859:14 - so we reached the home stretch in our algebra journey here and now we're going to connect
859:19 - all the different things we've been doing with math we've been looking a lot at functions
859:25 - taking things that turn into x lists of x y values that we can graph and then now we're going to look
859:34 - at how we can get the get that data from the web from the cloud from a spreadsheet from wherever
859:42 - and bring that data in whether it be columns in a table or all sorts of information and pair it up
859:51 - in those x y coordinates and then we can do math to it so really that's that's the connection we've
859:57 - been working with all the math content and now pretty much everything we're going to be doing
860:01 - beyond this we're going to bring that math content and into the code and do a lot more code how can i
860:08 - into the code and do a lot more code how can i get this data turn it into a numpy array and
860:16 - then do whatever graph i can do and you know analyze the data so let's let's get to it let's
860:24 - get to the code so now this is some ways you can bring in data from other sources and graph it and
860:33 - do other things so let's talk about the other sources pandas is the library that really deals
860:41 - with data frames tables columns rows everything like that so we're going to import pandas import
860:50 - the matplot library we've done that before and we're also going to import from google colab we're
860:56 - going to import files and that's also going to give our file operations you'll see that and import
861:04 - io input output there we go i separate these out because you can run these once and you know this
861:12 - takes a few seconds i already did it so run it once and that saves you a few seconds each time
861:19 - because we want to go through you'll see test some things now we have all those imports here's
861:26 - ways that we can get the files all right here's one option if you have a csv on your computer
861:32 - you can upload it and because we imported that google dialogue or the google files all right so
861:42 - this is all we need files dot upload and we're going to upload that you know it'll give you that
861:50 - file dialogue you can search for on your computer and that's what the one you select will will store
861:57 - that as that variable uploaded and then so i have my file name because we have this we're going to
862:05 - take that uploaded file and iteration so iter and the argument is uploaded and we're going to go to
862:13 - the next one and what that is going to do is just one time you know you selected a file and we're
862:20 - going to select that and store it as file name and here that file name we know the file name and we
862:29 - know that it's a csv so pandas has this nice building pd dot read csv that's what we want to
862:38 - get to and don't worry about this it's because i already stored that as file name you can use this
862:45 - for you know whatever file you upload so uploaded file name and it reads that io dot bytes io and
862:55 - it will store it as this table so there we go these three lines from you know uploading something
863:03 - you know give you the file dialogue upload it from your computer and select it now when you run this
863:12 - when you select that file it's stored as table one awesome so we'll do more stuff with that table
863:24 - in in a minute here another way is you can get a csv from a url so maybe you already know you're
863:32 - looking at different websites and you found you know this uh url and you see this one um
863:42 - uh yeah this this guy uh seems to put put out a few good examples so there we go uh faithful
863:52 - dot csv old faithful geyser you know it rups for a little you know briefly but like on such a
864:02 - regular basis that's why it's called old faithful and that just might be some interesting data we
864:07 - can look at so i'll just store it as this variable url which is the exact address pointing right to
864:13 - the csv there you go plenty you could also and i didn't include this here but you could also if
864:20 - you wanted to you know make your own like you know input statement you know prompt you know for
864:26 - somebody else using you know you made this program for somebody else you could prompt somebody else
864:31 - to just copy and paste the url and store it you know that works too but you know this is your code
864:38 - so you just put the url here store it as variable url now same type of thing but here so we have pd
864:47 - dot uh because we imported pan does it as pd pd dot read csv and i just need to read that url
864:55 - and that's enough and i'll store it as table one
865:01 - okay and yes those imports and everything that you run i just even have notes in here to remind
865:08 - you so that's good for maybe 20 minutes google colab will uh have this runtime you're running
865:16 - on their server and you know colab has a runtime once we started this it will time out after about
865:26 - 30 minutes of inactivity or even if you're active like you know let's say you have a really
865:35 - busy day i think it's like about 12 hours of running it'll time out you know you could say
865:42 - well wait i haven't been inactive but there's still an absolute time out and then you have to
865:47 - start it again so that gives that gives you time you can import that and then it gives you time
865:53 - to go through and then run a few of these and tinker with it okay so that way you don't have
866:00 - to repeat those steps and again you know importing you know importing all those that actually takes a
866:07 - few seconds to run it and then prompting you know if we want to do some different things and
866:13 - test some things you don't have to upload it every time that saves you a few seconds or this even
866:20 - so there we go now we have this what do we want to do with it you know i have you in the notes
866:27 - we're going to eventually determine what columns we want and convert them to numpy arrays and
866:33 - remember numpy arrays that's what we're that's what we end up graphing so one of the things and
866:40 - i even still commented this out but you could display the whole table that might be too much
866:49 - especially the the more you get into big data you know that's that's going to be just time consuming
866:54 - resource consuming and so i i include that in there you know just to show you can do it but
867:01 - but what else might we want to do i might just want to print out so we've always stored everything
867:07 - as table one for this example so i might just want to print out the headers all right so table
867:14 - one dot head and if i don't put a number in parentheses it will default to five but i can
867:23 - put a number in there and it's going to give me the headings and i put a two so it's going to be
867:29 - that give me the headings in two rows that might be enough you want to you know let's say even if
867:36 - you've seen the column you might want to see the see it here or you know you got that url you want
867:41 - to take a look at it i want to see the heading i want to see the column names and i want to see
867:47 - two rows give me an idea of what kind of data because if i start seeing words in there then i
867:54 - know that i'm not going to be able to convert that to a numpy array all right another way i could just
868:01 - store column names as a variable because if i have table one in pandas that this exists table
868:10 - one dot columns there you go so now this column names is a list of the column names that's great
868:18 - um and again i can i only need to do this once and now that i have the column names what can i do with
868:24 - them all right instead of printing out the heading i could and i just put this here you know
868:32 - new line column names and then i could loop through them so i'll count them so a in range length
868:42 - range length column names so column names i'm going to get the length get that as range and
868:50 - then each time i'll print that number the space and then that column name that works that's one
868:59 - way to do it or another way i could actually just loop through those names call and column names
869:06 - and just print that each time so let's see what that looks like all right and so these are the
869:16 - benefits here so notice this is the first one we did uh there you go print table header and that
869:29 - print statement that head statement gave me these but this table also had an index column
869:34 - and notice their index starts at one so that's just something to remember and eruption length
869:42 - and eruption wait time so there we go and notice these quotes are within the
869:53 - with within the name of the call you know that's something the more you get into uh
870:00 - more you get into uh working with data and maybe other people you know creating columns and
870:06 - everything i'll tell you this you really want column names without extra quotes in them and
870:12 - without spaces but you know there's ways to deal with that we can do this but it just it just
870:17 - usually makes it easier for this stuff and for like some of the sql queries okay so now i get
870:23 - an idea of what i have and here again you see the column names you know index eruption there
870:33 - and the the other way we did it index eruption length eruption wait time so now that i have
870:40 - these exact column names so you know i could now this is how i did it here because i had them right
870:51 - here and i can see them so table one and then in those square brackets i'm going to put the name
870:59 - of that column i want and then also that name in single quotes to numpy so boom that'll convert
871:08 - that to a numpy array and then eruption length in minutes so again table one and then in the
871:16 - square brackets and remember that extra space and those quotes were in there so i need to make sure
871:23 - i include them and convert that to a numpy array so now i have my x and y values that i can that i
871:30 - can plot there you know going through each of them you know it's going to be you know my first value
871:38 - x is 3.6 y is 779 x is 1.8 y is 54 oh no actually i had it as index so x is 1 y is 3.6 x is 2 y is
871:53 - 1.8 i can graph the eruption length or i can do it for eruption wait times and i'd like to go back
872:02 - to the index again x is 1 y is 79 x is 2 y is 54 so i just graphed it for that first one and we
872:13 - can go back and do that for the second one also if you wanted to so we have x and y because they're
872:21 - numpy arrays i can call that function x.min and this you know if if you haven't really looked at
872:30 - like the entire table this just might be a good way i'll just take the minimum value minus five
872:36 - because it's just a little bit of a buffer on the edge and store that as x min x max same thing plus
872:42 - five a little bit of a buffer y min y max so this goes back to things we were doing a while ago
872:51 - with graphing set my x min x max and each of these now notice i don't have some of the things we were
873:05 - doing in other other units we were defining the points here but i already have my x and y values
873:11 - defined as num numpy arrays so when i graph i can plot i can plot them here as you know
873:22 - you know the x refers to that array y refers to that array and i can do a scatter plot or a line graph
873:39 - so i have these here as numpy arrays and i can do them as a scatter plot or a line graph
873:52 - all right let's see what this looks like
873:58 - now i had it as both and it looks like a huge mess but one of the things i notice is i
874:04 - i don't want the line graph is probably not useful so i'll just go i'll just comment that
874:14 - out right now and run it again and we see it seems to cluster it's around here or around here
874:24 - that's kind of interesting what if i change my x my y value maybe i'll keep all these points but
874:34 - what if i change this so what i can do is my y minimum and these are the things this is what we
874:42 - want to do now we know how to use your math graphing skills to look at this you know how
874:51 - to get all this data into this graph and this is now where we get to the analysis part what can i
874:59 - do i can look at this and say all right you know they're all less than six and they're all greater
875:06 - well actually they're all greater than zero so i can just make my y minimum zero and i'm just
875:14 - going to comment out the rest of this and i can make my y maximum six and i'll just comment out
875:21 - the rest of that and when we see that we might see it seems like it clusters it's for whatever
875:34 - reason it's really rare for it to be around three and remember what are we graphing here
875:41 - here we are graphing the eruption length time so it really seems to cluster around oh about two
875:50 - minutes or about four minutes yeah interesting so we can look at this and then one of the other
876:02 - things that we can do now let's look at another twist on this you can use variables for the column
876:11 - names so remember earlier we made column names this array so i can have column name zero column
876:20 - names one and that's my x name and my y name i'll make these variables so that also depending on
876:29 - the actual names of your columns doing that once might save you some typing because
876:34 - then you can reuse that variable here just yeah i don't have to worry about all the quotes every
876:43 - time now i have my x variable is that column to numpy my y variable that column just like we were
876:53 - doing before but again reusing that variable save you some typing i went back to this and we'll see
877:02 - why in a minute and i just want to show you that that same scatter plot back to that those original
877:10 - dimensions are there but you see using that as the column name i can also set the labels for the graph
877:19 - and again without having to rewrite so now we have index and eruption length
877:30 - there we go then if i wanted to talk about the eruption time or the erupt the wait time so all
877:41 - the things that we were doing i can just change this i still want the index but then uh column
877:48 - uh columns one was the eruption length i'll change that to that was the wait time and now i have those
877:58 - names everything else stays the same and again going to different columns that's why i like
878:05 - giving the dimensions of the graph based on that because these numbers are very different
878:14 - i'll still have the same index because they did match but instead of times between you know zero
878:20 - and five i will have you know wait wait time in minutes you know 40 minutes up to even you know
878:30 - almost 100 minutes so we see that now again let's get to some analysis here this looks like a mess
878:40 - it looks like maybe i have this range of 40 minutes to you know more than 90 minutes and this is key
878:48 - like let's say this is in yellowstone let's say you go to visit and you say okay how long should
878:53 - i have to wait it just erupted i want to go do other things when should i come back well should
878:59 - i come back in 40 minutes should i come back in 90 minutes you know that's a huge range you know
879:05 - could keep you you know waiting there almost an hour but let's let's start looking at other
879:11 - patterns here again the default i keep this index i want to zoom in on some range here
879:18 - so i'll go to that index that x value i'll keep the same minimum but what if i change that maximum
879:25 - value instead of that plus five maybe i'll make it like 50 and comment out the rest of this so
879:38 - that's interesting i'm just going to run this again doesn't help you but it spreads it out you
879:46 - see now instead of a scatter plot actually i'll keep the scatter plot because that looks nice
879:57 - but i'll also make it a line graph and i'll make the dots red and the line blue
880:07 - so look at that
880:07 - and you see that just looks nice and if i don't you know there's my y-axis at zero but if i don't
880:17 - want that then i can just make my x x minimum you know one that way and comment that that way i
880:27 - comment that that way i don't even get distracted by that there we go so we take a look at this
880:39 - now besides seeing the scatter pot that was a mess the line graph actually shows us some
880:46 - interesting things with very few exceptions if it was a shorter weight like 50 minutes
880:52 - the next one's a longer weight closer to 90 and then the next one's a shorter minute a shorter
880:58 - weight longer weight you see every so often you get one that it was another long weight
881:05 - but we get a shorter weight a longer weight a shorter weight you know exception longer weight
881:12 - that happens most of the time so what we can do is we could look at this and say oh well how long
881:21 - oh well how long was it last time and then therefore i can use that to predict and we get
881:30 - that from you know we get that from looking at the graph here so yeah really interesting i mean
881:36 - you could probably then now connecting this to you know real-time data science
881:42 - doing this then we could graph you know a certain amount of this and always you know have another
881:53 - table that always just updates you know when it erupted and how long that would require somebody
882:01 - each time you know just you know maybe even we could get this to clicking a button okay it
882:06 - erupted it stopped erupting and then do the calculations what was the wait time what was the
882:11 - eruption time add that new data and we could be looking at this and doing some sort of analysis
882:20 - to give people you know real-time estimates of it just erupted when can you expect the next
882:28 - eruption and get it down even probably to some like you know uh confidence interval that you know the
882:36 - that you know the point is that you would want to be able to say instead of should i get there 50
882:42 - minutes later or 90 minutes later i want to be able to have i don't know like a few minutes um
882:48 - you know if it just erupted and it was an 80 minute wait then you know would it be
882:56 - you know 50 minutes so you get some range that you know when to show back up and you know you
883:03 - don't have to wait too long and that's really what we want to get this down to we want to look at
883:07 - these patterns and be able to then predict the next one you know that's really the goal you know
883:17 - if i go to here and i want to be able to predict and say oh all right at 50 that was a wait time
883:23 - of 60 minutes so i'm going to just predict that the next wait time is going to be more than 80
883:31 - and if we really want we can just change this to like 55
883:38 - so with the wait time of 50 minutes then the next one wasn't quite 80 and so that's like your range
883:48 - of well i wouldn't go i wouldn't wait more than 80 minutes i might wait almost 80 and it would show
883:53 - up so there we go because remember the other graph the eruption time it's you know three to five
884:02 - minutes you are two you know two minutes and it could be two minutes and you missed it could be
884:08 - five minutes that's not even that long so you don't want to be you know five minutes late you're
884:14 - going to miss it all so yeah just interesting we can use this to predict and again looking at the
884:21 - math of it we have we you know once you have those column names
884:31 - so once we have we get that table what once you have that table and we get table one dot columns
884:41 - we have those column names and then we can do other things with that whatever we want you know
884:46 - whatever we want you know number them you know just loop through them or then
884:55 - pick certain ones and i'll use that as my x and y so that's the advantage of then having the graph
885:03 - minimum maximum we can try this because we want to make this template that you're going to have this
885:10 - and maybe certain things you can comment out and certain things you keep in certain things you
885:15 - modify just a little bit that what you can use the same code for whatever graph you have you know
885:24 - whatever table you have this is a good start you start getting some analysis what what am i trying
885:31 - to compare what am i trying to graph and then as you get into it then you can modify it you know
885:38 - you can always then copy all this and then you know do in here then copy all this do a new code cell
885:46 - some text to give you know yourself or whoever read this some some notes on what's going on in
885:52 - this code cell and you know that that's the beauty of the colab notebooks you know you don't have to
885:58 - like you can delete things and retry things or you can keep that and then just you know oh this is
886:06 - this is interesting information keep that and then just do a new code cell or new text and
886:13 - you know let's do the next next analysis so here's another way to get data into colab and
886:22 - then graph it this particular library so not a csv but the full library medial stat it's a lot
886:30 - of weather data so yes may install need to only install once right once per one runtime and
886:38 - i just have this as its own cell there you go pip install medial stat to install the library
886:46 - doing that i mean this actually might take almost 30 seconds
886:49 - so sometimes that seems like forever so i already did that and here we go
886:54 - um successfully installed and then we go on to the next one and for your own organization or anybody
887:03 - else working with this you put put in some text areas here so now i know and it reminds me what
887:11 - columns i have in this library so time uh and all the other these other teasers temperature
887:20 - average temperature minimum temp maximum temperature the amount of precipitation
887:26 - amount of snow wind direction wind speed the pressure so average you know air pressure
887:34 - uh air pressure uh the wind gusts so uh after wind speed we have wind gusts air pressure
887:45 - and the last one is uh time in the sun so you know how many minutes of sunlight
887:53 - would you get and these are really good i picked these because it might be useful
887:59 - you know you can things like wind speed you know plan your uh wind turbines and where to put them
888:06 - time in the sun plan for your solar panels and where to put them
888:10 - um so i have these to remind me and then the reminder change start and end date time
888:19 - and you know point we're going to use this a lot so what arguments is this expecting point
888:27 - latitude longitude meters above the ground so now we have these notes you know maybe you set this
888:36 - up for yourself and you don't use it for a while and then you forget you know what you can what
888:41 - variables you can use so all this you know we can just keep this same i just have the notes here
888:49 - because we have from numpy we're going to import mean because we're going to use that
888:56 - and then the rest of these are from you know the media stat library we definitely want
889:02 - daytime plot and for media stat we're going to just import these couple things also it's just
889:12 - it's useful put the documentation in you know that here's the website where all the documentation is
889:17 - you know put that in there as a comment again just like the other notes for yourself or for other
889:22 - people good to keep track of these things so now we know what we're expecting we can set the time
889:28 - period and what i wanted to do is i just picked you know sometime you know one month in the summer
889:36 - start and end so i have eight time there we go year month day your month start and end and
889:46 - so the person who put out this one example online did this for vancouver so you know i just
889:56 - commented that out and i did one for philadelphia and i picked a random point in the middle of the
890:03 - city because it you know the uh if you want to click places and you get latitude and longitude
890:10 - he had a lot of decimal places so i just wanted to round it to two decimal places and see where
890:15 - you know you know in philadelphia in general and then round it to two dozen places and see
890:20 - where we got so it's a some random street corner in the city and remember that third argument is
890:27 - how many meters above the ground so i put 10 because this could be a wind turbine you know
890:34 - on top of a building and i wanted to compare this to somewhere in the suburb so you know it are the
890:43 - closely packed buildings does that affect wind speed well we're still talking 10 meters above
890:49 - the ground so this is in you know residential neighborhood that is probably above all the
890:54 - buildings but i picked a point in the suburbs and i picked a point that seemed to be like a relatively
891:00 - open field as something to compare so now i have these two points and i can get this daily data
891:11 - uh so daily so that's the function in in media stat and there we go i get this particular point
891:20 - you know these are arguments that point and then start time and end time and then we go to this
891:26 - daily data dot fetch and i'm going to store it as my data now we want to take this my data
891:36 - my data and which one do i want i want wind speed for this one and remember our function
891:42 - dot to numpy and i'm going to store that so now num data is my array and you see the these layers
891:50 - that we want to do this library requires this function here i'll store that as a variable now
891:57 - that variable uh got fetched that's also from media stat i'll store that but then i that's not
892:04 - a numpy array so i want to make that a number i want to take that calculate you know wind speed
892:12 - that column and make that a numpy array so i'll print that you know city mean equals and i wanted
892:19 - to get the mean to compare so now i have the second one again i'll do the same thing that daily
892:30 - function fetch the data convert it to a numpy array and in this case i'll do the suburbs mean
892:39 - but remember num data and num data too they're my two numpy arrays so i can use them to plot
892:48 - so we can plot the line plot the line there we go and
892:54 - and so i have this you know these two things i have you know the x value is
893:06 - since i know that i made my since i know that i made my start and end time you know 30 you know
893:15 - 30 days i wanted to make the x value there you go same thing one to 31 uh 31 instances because
893:26 - it includes the first one so there we go and then i can plot these wind speed and run it
893:38 - all right now i'll tell you why i have that commented out i'll tell you now that i have
893:44 - these because this works like uh i wanted to again connect it with the same type of plot you know
893:53 - matplot library that we use i wanted to connect it to that same matplot library that we've been
894:00 - using and show you that that's what you can do you know get those arrays and plot them here
894:07 - matplot.show but i commented this out this works also just a unique feature of this library um
894:18 - you can just take that my data dot plot and then in parentheses you know what the y value is so
894:25 - these two work so i just wanted to show you i'll leave them in there they work but in order
894:32 - to connect this with the same type of math and plotting we're using i plotted them this way and
894:38 - so i had it calculate and then just display you know the city mean and suburbs mean i could have
894:45 - rounded it but and quite honestly this is why we do data analysis this totally surprised me
894:51 - i really thought the average wind speed in this suburban area that was like a relatively open
894:57 - field would have been significantly higher and it was definitely higher in the city yeah interesting
895:06 - um maybe you know a little bit of a tunnel effect maybe there is some something going on with uh
895:12 - you know the buildings maybe that wasn't high enough also at least in philadelphia that city
895:19 - and if it's high enough that's a little bit closer to the river delaware river is you know any river
895:26 - gives off a little bit more wind and this was a little bit closer so that might have had an
895:31 - effect but there we go so then we see the mean but beyond that we can see the tracking you know day
895:40 - to day and you know they're still these two points that i picked are not that far apart
895:47 - so it tracks they're in the same area the wind speeds go up and down you know in very similar
895:52 - patterns but we see that not just the mean but at every single point that city location was higher
896:02 - so there we go and
896:07 - you know we could take a look now i made this so that's good and we can just pick that and
896:11 - we can pick like any number of days so i could since all the rest is already in there i could
896:21 - just pick this and say well what about over the course of the year so maybe i make that like one
896:29 - one and maybe i make that 12 31 and there we go so if it would include then there we go so 365
896:51 - and 365 so i want to graph it this way so from one to 365 and 365 points if that doesn't line
897:04 - up perfectly then i might have to do one more or one less but we can take this and we can run this
897:12 - oh value error and it was 365 357 oh that's really interesting all right so 357 and 357
897:42 - and so we can see you know the scattering but also i liked this now why what what i picked was uh
897:53 - you know not 365 days that seemed like that would be it i'm not really going to overthink that
897:58 - right now maybe there were some days that were missing but you know maybe that's not the
898:08 - pattern but you know maybe that sometimes that happens we go and we can uh go through and you
898:17 - know take out missing information or incomplete information but now we take a look that over so
898:23 - the day that i picked happened to be slightly lower than average so in both it was up a little
898:31 - bit you know 14 miles an hour 8 miles an hour and then we can see the patterns here so if this was
898:41 - wind speed you know the average then what you could do is you know you could count based on
898:49 - that average you actually don't need to plot it out because it works out given the given those
898:54 - averages you can work on that so if your wind speed is you know in the city and it's you know
899:01 - almost it's like 14 miles an hour throughout the year then you can look up well what size
899:08 - wind turbine and it would be actually relatively small but what size wind turbine you know would
899:15 - you need for 14 mile an hour winds and you can do some calculations given that size of the turbine
899:22 - how much electricity would that generate for you over the course of the year yeah so pretty cool
899:31 - and again you can you know you can do that with you know any other aspect of this the temperature
899:36 - you know maybe you know you're trying to plan something you know you can get uh you know
899:41 - temperatures just one other thing i did just was you know different so i can't i loop it through
899:50 - for you know a month just to show you and and all the rest of this is the same documentation link
899:56 - and what i did is i just made it a loop so you know range 1 to 11 and so that would be the
900:09 - month and i have you know what month there we go and you know there we go i think i picked just
900:22 - this because i thought oh well is that does that change and these monthly loops
900:29 - um yeah the way that the x value displays sometimes it seems like a little cut off
900:37 - but we can see we have you know wind speed and we can just see you know a few different months
900:45 - over the course of it and you see each month i have the mean and then and then the graph
900:55 - and and then the graph so we can just see it's just interesting you know the mean and the graph
901:04 - for each month the display it a little this might be a little clunky this might just be for your own
901:14 - interest or you could have something that displays them all in some nice little you know three by
901:20 - four the grid it gets to be small graphs though but nonetheless we see that there's times when the
901:30 - when it goes down so i just wanted to show you some of these things that you can do with this
901:36 - with this with this graph and you know beyond that that there's other ways and what you can do
901:45 - to in you know any other data you find if you you know you're looking up some things you might find
901:55 - them maybe it's a csv but maybe somebody you know put together an entire library and with that they
902:03 - not only have the data and then that's stored somewhere but you know somebody also wrote these
902:09 - so that you have all these already how can i get a point and how can i get all this different data
902:16 - from any of those points so things that you can make and things that you can find online that
902:24 - somebody else made you know different ways that you can find this data and then graph it so trying
902:32 - to give you some more tools now you know now that you know math and python and can use this to graph
902:39 - you know some more tools and some more sources of data
902:47 - so what i want to show you here is just a few more things that you can do right within colab
902:52 - and we already looked at over here on the left the table of contents that you can
902:59 - get to appear disappear then we have the search you can even search for directly for variables here
903:06 - and then we have this folder icon where you can click to mount your google drive directly
903:14 - and then once you do that then you can also see give it permission and down here we see
903:21 - it's mounting the google drive once you do that then you'll see it has the slash through it now
903:29 - so you can unmount the google drive if you want if if you wanted to do that so this makes it easy
903:34 - so this makes it easy to find things and move things back and forth within your google drive
903:40 - then the really big thing down here is the look at these tags you can get all these code snippets
903:49 - that are already in the google colab you see adding form from fields oh i want to add a form
903:56 - get the code right here you can copy it or even click it you know if you happen to be
904:01 - right in the place where you want to put it you click insert all these other things camera capture
904:07 - and notice this even uses javascript within python interfaces this so it's pretty cool
904:16 - again all these and some of these you know downloading files
904:24 - from google drive from github all kinds of things importing libraries that
904:30 - you know that are in co-laboratory all of these zip reader there's a lot of other things that you
904:38 - can do open files from github from your google drive from your local file system how you can
904:43 - just upload those so it even gets down in here into pandas data frame and that's kind of where
904:53 - we want to get our math skills too that we can take data from wherever well that's the
904:59 - pandas part and then bring it in and then do some different math to it what can i graph can i
905:04 - display it in different ways and that's what we want to take this to so what i'm going to do is
905:12 - you'll see below this video there's other code that i'll include but i'm not going to go through
905:20 - every one of these but check these out i mean there's so many different things already built
905:24 - into colab that you can you can do you know open up a sample you know and tinker with it i have a
905:31 - colab notebook i just call it code tester and i just have different things that i can go through
905:36 - and you know let's try this let's try that and then you know you put together in your notebook
905:41 - of stuff that works but here's all these things available and then i'm going to put together
905:45 - another colab notebook of just a few other things you know to tackle on this end of this class to
905:52 - continue you know some things that you can do with math and with code and you know we're building
905:59 - upon this leading to you know working with data and doing some other interesting things with that
906:04 - so check these out and you know tinker with them and enjoy
906:14 - wow you made it so now having gone through this now you should have a good understanding of algebra
906:21 - you should be familiar with all the key concepts and how to write the code to do all of your
906:26 - algebra you should have your at least one or however you organized it colab notebook that's
906:34 - ready with all of your scripts for solving all different sorts of algebra problems you made it
906:43 - through certification one two and three and you have the ability to solve a lot of different
906:52 - problems and you know write the code or reference code that you've already written
906:56 - to solve these problems so there you go you should be you should be all set this is the
907:03 - foundational math because it is the math that we're going to use and that you'll be able to use for
907:09 - so many other things in math including data science data science we're going to bring up
907:14 - formulas like this functions like you've been working on you know algebra level solving some
907:22 - graphing so now you have an understanding of all that and then you can apply it to other things
907:28 - for yeah statistics data science and a few other subjects too so if you continue on with the next
907:38 - step we will do a pre-calc trig that type of topic so you know some other deeper understanding of
907:50 - other graphs we didn't get to in in algebra because they're a little bit different
907:53 - other sorts of patterns dealing with locations of things and circles and more angles and a lot of
908:01 - triangles so that'll be something that we'll do next and again that's going to also build to help
908:07 - you with statistics and data science because as you represent data on graphs or use different sort
908:16 - of mathematical analyses to see relationships among data points you know the deeper math will
908:23 - get you to be able to detect more and more complex relationships among data so this is the
908:32 - foundation i feel like you have a good foundation hopefully you're feeling the same and there you go
908:39 - you made it and on to on to the next adventure

Cleaned transcript:

This college algebra course is different than other college algebra courses. Like many other ones, you will be learning all the concepts from an experienced university professor. But in this course, the instructor Ed Protowski will also show you how to implement all the concepts in Python. This course is for everybody, but especially those interested in computer science. Hello and welcome to the Algebra with Python course. My name is Ed and I'll be your guide on this adventure. So we're going to learn about algebra and how to write Python code to do all of your algebra. Because there's so many different things that you can do with formulas. You learn these formulas. Hey, anytime you have a formula, you can write code to use it. So that's what we're going to do. We're going to write some code using the Google CoLab notebook. That's Python, a Jupyter notebook, essentially in your Google Drive. So one of the next things we'll do is look at how to set that up. We're going to go through each unit. We're going to look at the math. We're going to look in the actual lessons. I'll be writing things on the board and we'll look at the concepts, how to do the math on the board. And then we'll look at then how to write the code to do this. And you'll be able to create your own CoLab notebooks. In fact, I hope you do create your own notebook or two along the way, building your own resources that you can use. You can also, you know, once we set it up, you can also actually download the CoLab, the Google CoLab app, and you have access to each of these notebooks on your phone. So, you know, you can make your own like, you know, super calculator that you have access to on your phone, you know, solve all kinds of things, you know, and that's great. You know what, you know, building these resources, but also understanding how to use them so that as you go further in math and in writing code and eventually leading up to, you know, working in data science, that you really understand these concepts and you know how to use all the formulas that you're creating. So that's really, that's the idea. That's what we want to do. And each unit is going to be a lot like this. I'm going to talk about the math, you know, we'll do some things on the board and then we'll flip it and we'll look at how to do that with code. I'll include all the resources for you. And then in addition to the core concepts in each unit, the next thing, then what we'll do is I'll have another video or two of extra working through the problems. So, you know, you know how to write the code, you're building your resources, and then we'll just work through a bunch of extra problems, you know, putting this into practice. And it'll be really great. You know, you'll learn algebra, you'll learn code, and you'll have all these skills under your belt that you can use for a lot of other things. And we're going to build upon these in future courses. So I hope you enjoy. Okay, so let's look at how to set up Google CoLab in your Google Drive. So in your Google Drive, hopefully you have it organized in folders and, you know, you have a, you'll set up a folder for this course. That way, you know, you can have all the documents and notebooks and everything there, just like I have here, and you will have access to all these documents you see, you know, soon enough. So if we take a look at the little yellow infinity symbol, that's the Google CoLab. And, you know, if you want to create a new Google CoLab, you're in the folder where you want it to be, click on new, and it won't be here, and you go to more, and then it'll be down here. So Google CoLab. Now, if you don't have it already, if you have not yet set it up, then you go down to connect more apps. And, you know, it's begins at C, it might show up, you know, here. But if not, then you can search, you know, and look at this like CoLab, even if you just do Co, it comes up. But if you type in CoLab, then it'll come up. There we go. And again, mine's already installed. But if it wasn't, you'd see it there, you click on it. And this blue button, instead of saying uninstall, it would say install. And then you'd have have it available. And there we go. Then when you go to new, and then you can go to Google CoLab laboratory, and it loads. There you go. So as you see, I like the dark theme for CoLab. So that's just the one, that's just what I picked. You know, you can change that. So this little block here, this is where you're going to write the code, you know, it's set up to write a block of code. And in addition to that, you have the ability to add more code or more text. So you see, you can add another block of code, you can add more text. And if you click up there, it just adds it in line. And, you know, if you type text, now, if I hit enter, that just gives me a new line, I have to click somewhere else to get out of that. So there you go, you can add code or text by doing that. Also, if you might have noticed this appear, if you hover around the middle, you can add code or text. And that works anywhere. You see, so you can add, you know, text right here, in between these two. And there we go. And that text actually, besides writing text, you can actually use some a few HTML tags to, you know, make new line breaks, or some things like that. And then if you get really fancy, you can use the latex math notation to display different math formulas. But we'll get to that soon enough. Alright, so you have all these different things you can do, you know, your code, your text. And one of the other things you want to do first, like any document, give it a name. And you'll notice the familiar setup compared to other Google Docs, you can, there we go. Let's just call this week one example. All right, so, you know, give it a name, you know, you don't want to leave all your stuff just untitled, might be, you might forget, and it might be hard to find later. And you can write your code there, whatever you'd like to put in there, print. Okay. And, you know, there we go. It just sits there as code until you run it. And you can click this run button, or if you're familiar with the Jupiter notebooks, you can hit shift enter, that'll run it also. And there we go. This, this is the output here. Notice you can also do a lot of math right there in the print statement. So if you just put in math formulas, you see hit enter, it just gives you a new line, run it. You can do all sorts of math formulas. And remember, the add, subtract, multiply, divide, that all works, that's built in. The, the exponent would be this asterisk, two of them. So there you go. So that would be three to the fourth power. And you see it'll, it'll do the math right there. If you wanted to do something like square root, you have to import something. And we'll get to imports as we go through a lot of this. But notice you can, you know, you can have your text, you can have, do your math for, for a lot of simple things. You can just do that right in the print statement. One of the other interesting things you can do is, and if I make this, I'll just make that B for a certain reason, then you have a table of contents here. Now this has nothing because I don't have any headings or sections. So that's what the table of contents looks for. If you click on a new section, then you can, I'll just leave it as new section and call it good right there. You see it shows up in the table of contents. And if you double click, now this B is underneath that section. So if I click on this arrow, it becomes minimized within that section. And then here, A, if I want to make this its own section, then take a look at the section heading. If I double click on it, it's that hashtag that would be normally used for a Python comment, but we're, but we're in the comment. It would be normally used for a Python comment, but since we're in the text part, then you would just use it to indicate a new section. So I can go up to here, this text, and I can make it a new section. You probably don't need the space, but I like it. And again, click somewhere else to get out of that. So now I have A and I have my new section here. So I can do some different things. I can put some, I can put some code here and I can, in this code, I can move it up. See the arrow over there? I can move it up. And then maybe I'll make B, double click on this, and maybe I'll make B its own section. I'll click somewhere else. And so I can have all these sections and now B is its own section. That kind of didn't matter because I don't have anything underneath of it. There we go. Put text in here, click somewhere else, and then I can collapse it. So you see, I can have these different sections collapsed, and then they all show up in the table of contents, A, new section, B. So if you give them names more than A, then you're going to have them more than A and B. It becomes useful because you can find them in the table of contents. And then you just click to expand each section in whatever else. And you can have, within the section, you can have code, text, you know, and as many of those blocks as you want. And that section goes until you create a new section. So some good useful things you can do in building your own Google CoLab notebooks. You might decide that you might like that as a way to organize them, you know, keep them in sections. So that helps. Also, the Google CoLab, like everything else in the Google Drive, it does save automatically, but it doesn't do it as often. So you do have a file and you do have a save here, and also the normal shortcuts, Ctrl S, or Command S. So that does work. And that way, sometimes, you know, if it goes a while in between saving, if you try to close it, it might actually prompt you to say that you might need to save it. So that's just something to think about. You know, you actually do actually make an effort to save things here in the Google CoLab. So we set up our code. We can do math right there in the print statement. We set up our sections, table of contents, and all these sections, you know, within the view, you can actually expand or collapse them all at once if you want. You know, that's kind of interesting. And through all the code we're going to work on, you know, you also have down here one of the other things that looks like, you know, XML or HTML tags, and it's a bunch of code snippets that you can use, you know, copy and paste, try these right in your Google CoLab right here. So some pretty cool things to explore. And there we have it. You're going to be building your Google CoLab notebooks. You might want to build one for algebra and, you know, just continually add to it, in this, in which case, definitely make sections because that's going to be a helpful table of contents to find what you want. So you could do that. You could make a different notebook, you know, for each unit or each week or however you want to organize it. But then the idea is you're building these resources that you will have access to. And as well as installing it on the Google Drive, you can also download and install the app. So that'll be useful. Have it on your phone. That when you first run it, you need to do a few things to go through setting it up, you know, authentication and such. But, you know, it doesn't take that long. All right, so we have this, you're going to be building your stuff in your Google, in your Google CoLab and it's going to be exciting. We'll get to a lot of, a lot of interesting things. So let's get into the math next. So we can't talk about proportions without talking about ratios. And ratio is another word for a fraction. So this two out of four, I can write that as, well, two out of four, but I could say two fourths. I can call it a fraction, but it's also a ratio. And then a proportion is two equal ratios. So if I know that these are equal, then there's other things I can do with this. And one of the things that works and becomes very useful is cross multiply. So if these two are equal ratios, then I can cross multiply, multiply the diagonals. I can do two times 10 equals four times five. And that's another way to write this. So then I can get it out of the proportion mode and I can use this to double check or I can solve for things. So two times 10, we see 20 equals 20 and then that's true. So, you know, we confirm that that works. We can always do this. If these were other numbers, I can check to see if this really is true cross multiplying, because if that doesn't work, then that wouldn't be true. And I can also use it if one of these numbers is unknown. So if I have three out of six equals X out of four. Now there's other ways to solve this, but this is the goto way because it works every time. So when I do my when I do my cross multiplying, then I can do this three times four is 12 equals six X. So there we go. Three times four is 12 and then six times X is six X. And then I know that the next step I'm going to do is going to be dividing by six. So then I get that X equals two. Now in doing that, we can jump ahead and say, okay, let's I know that when I multiply this diagonal, I can picture this step. It's going to be six X. So the next thing I'm doing is dividing by six. So a lot of times we just put this in one step. So I multiply the diagonal that I can divide by the other number because I know that the next step and then my answer is X. So we can really make use of this in writing code. I can see the proportion and I can then just put this all in one step to solve for X. And again, that's it's the goto way it works every time. So I can write code to then prompt for these numbers, cross multiply and then solve for X. One of the ways this is also useful is some of the other applications. If I have, let's say I'm converting something like miles to kilometers. So if I have one mile is about 1.6 kilometers, then I can set this up. This is the ratio that I know. So as long as I have miles and then kilometers, then if I know one, I can figure out the other. This unknown can be either place. So if I have two miles, then how many kilometers is that? You see, we can make use of this. I know that I'm cross multiplying two times 1.6 divided by one. And then, so there we go. So X would be 3.2. And again, multiplying the diagonal that I can, two times 1.6 dividing by the other number, which in this case, it's convenient that it's one. So then I can solve. So this is what we're going to use. And we're going to take a look at how to put this into code. And so prompt for these four numbers or three of them, and then figure out the fourth one. So let's take a look at how that'll happen. So let's take a look at the code. So we're going to see here how much easier it is to write some code to solve some of our problems. And just like proportions, we have that cross multiplying that we know works every time. So I'm going to put just a display here to remind us that we're setting up the proportion. And here's what it looks like. N1, D1 equals N2 over D2. So N for numerator, D for denominator. And if I have a proportion, I would know one of the ratios. So I would know, let's say N1 and D1. And then N2 or D2, one of those I would not know, but I would know the other one. So I have my comment here in the code, put a zero in for the unknown value, because realistically, none of these values would be zero. That would just, you know, you wouldn't even need to think hard about that, that zero is everything out, or if it's in the denominator, it's undefined. So that would never occur in something that we're really trying to solve. So I would know N1 and D1, and I would just change these numbers, put in my numbers that I know, and I'll put a zero in for the one I don't know. And then I'll put two if statements. So I have if N2 equals zero. And there we go. Notice the setup of the if statement in Python. If N2 at the double equals, because I'm testing it, I have a colon. And then the indentation afterward is one, two, three, four spaces, I would hesitate some people use a tab, I would hesitate to not use a tab. They don't often give you the right number of spaces. So indent four spaces. And then I have the answer is, and I'm going to just do that cross multiplying. So you see D2 times N1 divided by D1, that cross multiplying that we that we know, and then we'll print out the answer. And we'll do the same thing here. If it's D2 that I don't know, so my if statement, if D2 equals zero, colon, four spaces indent, and then this answer, notice the cross multiplying. So D2 is what I don't know. So I'd be doing N2 times D1 divided by N1. And then I'd print out that answer. So there we go. And then given these one over two equals what over 16. And then if I would run this, and it will output the answer right here. There we go. N2 equals eight. Or if I had this, I'll keep this and maybe I'll put this one as zero. Rio, and if we run it, there we go. Really straightforward. We want to get to this point that we know these we know these formulas, and we can just put something in here, maybe even display something to set it up, and cross multiply, solve any proportion this way. Now that we've worked through the core skills in this unit, let's look through some extra problems. And I'm going to work through extra problems using the CoLab notebook. So you can see how you can apply these resources that you're building and use these to solve problems that might come up in a textbook or in daytoday life. So we're going to go through some more extra problems here. We're going to work through some extra problems here relating to some things that might come up in working with proportions and ratios. And one of the things that comes up, we work with mixed numbers. And in math, I might write it like this, but then you think, how could I do this in Python? And Python, remember, you can even do math in the print statement. So you could put this as one and two thirds becomes one plus two thirds, and you see two divided by three. Notice I didn't even, sometimes I use parentheses, extra parentheses, but we really don't, Python knows order of operations. So you could have one plus two thirds, plus three and four thirds. So it'd be plus three plus four divided by five. And, you know, you can change up minus seven. You can put that all in a print statement there and it would output the answer. Now, later on in the third unit, we're going to also talk about converting that output. If it was a weird decimal into a fraction or mixed number, but we'll get to that. So you can do this, but even also at this point, you could, if you wanted to, instead of print and you don't need the parentheses, but I'll just keep them there, you can store them as a variable. So if you had something that you wanted to store as a variable and then use that later on, or any one of these, you know, convert a mixed number stored as a variable, because some of these, like two thirds, that will come out as a mixed number, mixed number, or the one and two thirds that will come out as that repeating decimal. Well, later on, you might want to keep as many of those decimal places as possible and storing it as a variable will do that for you without you having to write down all the decimals. So really, that's the whole thing. We're trying to build, you know, for all the different times, you might use a calculator. Hey, might as well use Google CoLab because you can have all these formulas in there, store variables and everything. So for all the different times, you might need to work with mixed numbers. Yeah. Print it out, store it as a variable and continue on and work with the rest of the problem. So if this comes out as a repeating variable, let's take a look at one other thing here. If this comes out, so let's just say I have that one and two thirds. So we know the one, but if I look at the two thirds, you know, that would be, you know, 0.6 and it keeps repeating. You know, it'll keep repeating. If you get output like this, how would you know that that would be two thirds? Well, one of the ways you can do this is we can throw in some other variables here. Let's call, let's call this X. So X is all these repeating decimals. So if it repeats each, um, each place, then I just need to multiply it by 10. You see, and that keeps going because if this keeps going and then this keeps going, then if I subtract them 10 X minus one X, so that would be nine X equals six. Now notice I did not rewrite it, but I am subtracting this bottom row minus the top row because then all these decimal places line up and it would subtract. So multiplying it by 10 moves it over. Now I have six points something and when I subtract 10 X minus one X is nine X, then that all cancels. And if I have nine X, how do I get to X divide both sides by nine? So we get six over nine, which we know then mathematically we can reduce divided by three is two divided by three is three. And actually this works, any single digit that repeats is a factor of nine. So if I have, um, if I have anything else, and actually I might use the same, same formula, but if I have anything else, like if I have, um, um, point four and it's a four that keeps repeating. So then 10 times that would be four point and as many fours as you want. So then when we subtract 10 X minus X is nine X. And then when I subtract this, everything after the decimal subtracts. And so your answer is four and divide by nine X equals four over nine. Now, so this works for any number one, one through nine, but this is kind of interesting then, um, how, what if you get a point nine repeating? Because would that be then nine over nine? Yes, maybe. So if I have point nine repeating, and so then 10 times that would be nine point and as many nines as you want, we'll do the same thing. So nine X equals, so you see if this is point nine repeating, this still follows 10 times that. And then when we subtract, it all lines up, it becomes nine X equals nine over nine, which is one. So you see some algebra acrobatics. How do I show that point nine, nine, nine repeating equals one? And these are kind of the things that we want to bring in. Um, some of the other things that we can do, you know, this works out nicely just seeing it on the board. But later on, as we do different things to convert decimals to fractions, you can see that it'll work in the code too. But yeah, some math acrobatics, this is kind of what we want to be able to do. We want to also sometimes use the code to show different ways to get to solutions. And when we see it get to a solution in different ways, it kind of like reproves, Hey, this works. This is the true solution. So these are some of the things that we can do, um, with proportions and, um, you know, some of the other things we'll do, we, you know, we could look at like converting, um, convert converting, uh, money like. Yeah. So if I have, you know, let's say, um, you know, one U S dollar is right now, I just looked this up. It's 1.29 Canadian dollars. So if I want to convert, then I can set up my ratio and proportion as long as you know, I know one of these, so I know the ratio. And then as long as I know one of these, I can figure out the other. And in the code, you remember, we just add it, whichever one I want to figure out, I put a zero there because either way zero over anything is zero. So that would not apply here. You know, the zero in the numerator, the answer is zero and zero in the denominator would be undefined. You know, you could look up different, uh, images of divide by zero online, you know, things like going into the abyss and all kinds of fun things like that. But yeah, we don't want to divide by zero. So if I know one of these and neither of these would be zero, that just really would, we would never arrive at that situation. So, you know, we saw that that's why we would put a zero in for the one we want to know. And there we go. As long as we have it set up, you know, then I can figure out, oh, okay. Well, in that case, you know, um, how many, I'll put the question mark here since we're not in the code, you know, okay, if one U S is 1.29 Canadian, then what's one Canadian hour worth. And then you see cross multiply divide by 1.29 and you'll get that exchange rate. So that's how we can change it from unit to this one, one U S to how many Canadian, we can change it to one Canadian to how many U S you know, cause very often you find exchange rates and they'll give you it in one direction. And maybe you want to find it in the other direction. So these are some things you can use this for. We can also do things like miles to kilometers or, or whatever, you know, other unit conversion you want, but you know, if you have one mile is 1.6 kilometers, um, it's that exactly 1.6, you know, there's like, you know, another nine meters or something, but okay. And then there we go. If I want to convert then as long as I have miles and I have kilometers, then it'll work out. And we looked at how to put that in the code. So now that you have these tools, you can convert anything. As long as you have that ratio of one aspect of it, then you can, you know, plug in one of these two numbers and figure out the other. So, you know, here, you know, some, some of the good things, and these are some of the things we want to do in the extra practice section. You'll see this come up in every unit that, you know, we're going to get to the core, um, core skills in those units are going to build your ongoing, uh, CoLab notebook. So you have some resources and then we'll have an extra practice, um, extra practice, extra problem section where we then use some of the things that you've created and let's apply this and let's solve a bunch of extra problems. So there we go. Um, and we will, uh, we'll go on to the next unit. Here, we're going to look at four different ways to solve for the unknown number. And in algebra, we often call this X just because X works nicely, X marks the spot. So if I have, I had to put four different situations here, add, subtract, multiply, divide. So I put simple numbers because you might be able to do this in your head to see the answer, but the algebra explanation is you want to see what you're doing and do the opposite. So then if these two sides are equal, both sides of the equal sign, if you do the same thing to both sides, then they stay equal. So that works. What am I doing? I want to do the opposite to cancel things out. Then the next thing is do the same thing to both sides of the equal sign. I'm going to show this with the four different algebra operations here. So if we have X plus three equals five, so in each time, the goal is that I get X equals something. So I would like that X by itself on that side, on the left side of the equal sign. So what am I doing? I'm adding three. So I want to do the opposite, subtract three, and then I'm going to do the same thing to the other side. And three minus three is zero. I don't have to write plus zero. Five minus three is two, solved. X equals two. So it's like Sherlock Holmes eliminating possibilities, and then we get to the answer. So the next one, if I'm subtracting, I'm going to do the opposite. So again, my goal is X equals something. So X minus two, if I add two, that cancels. That's why I add two, and then I do the same thing to the other side. So negative two plus two is zero. Don't have to write plus zero. Have to write plus zero. And then 10 plus two is 12. There we go, solved. We go to multiplying, very similar. Also notice in writing math, most textbooks, you won't see the fact that you won't see a multiplication symbol at some point. Just the fact that they're next to each other means that I'm multiplying. Now we have to remember this in Python syntax, you have to put that multiplication symbol. But here three X means three times X. So to get X by itself, I'm multiplying, so I have to want to divide. And notice I'm going to write that like a fraction, divided by three, and then divided by three here. Now here's something else about the notation. Three divided by three is one, but I don't have to put one X. You could, but you don't have to. In most places, you won't see it. One X. Any other number there, I'd have to write the number, but one, we often don't write that. So then 12 divided by three is four. And we go here, X divided by four. Somehow, whatever I teach this, everybody's like, get it, get it, get it. Confused. It's the same thing. I'm dividing. So I'm going to do the opposite, which is multiply. Now in this case, I might write it, how can I write multiplied by four? I might even just put it in parentheses, just saying it's next to that, so that means I'm multiplying. That's one way to put it. And so here I'll put in parentheses. So divided by four times four cancels out, so it's one, and then that's one X. And then here, two times four is eight. So with some simple numbers that we see these methods here, add, subtract, multiply, and divide. And the key is no matter what the numbers, no matter what else you encounter, how complicated the numbers are, it's the same method. So we recognize this method, then whatever number comes up, then we can figure this out. Because this I can do in my head, but supposing I have instead of X plus three, supposing I have X plus 7.2 equals 11.1 or something like that. So supposing I have something like this, how could I solve it? Oh, I have an algebra method. What am I doing? I'm subtracting, in this case, 7.2 from both sides. And so then I get X equals, and even if it was something more complicated, I know what I'm doing on the calculator. I'm subtracting 11.1 minus 7.2, and then I know what I'm doing on the calculator. There we go. So we can also use this anytime I have a twostep equation. And in the twostep equations, it's more like order of operations in reverse, because the addition is the easiest. So if I have something like 4X plus 6 equals 22, so two steps, I'm still going to combine those same four steps we were talking about. I'm just going to do one than the other. And I'll look at the addition. Like I said, like order of operations in reverse, the addition or subtraction is going to be the easiest to do first. If I then subtract 6 from both sides, so if I have minus 6, minus 6, so then I have 4X equals 16. And now I get to my second step, divide by 4, divide by 4, divide by 4, divide by 4, then I get X equals 4. So we have our twostep equation. And in all this, some of these are, you're going to get quick enough at this that it's not even worth trying to write code or anything to solve this. But some of these, as they get more difficult, then it will, and there's other factoring and more elaborate problems, then it would be worth it to write code because I'll show you now how we can just put this in Python, write out the equation, and it'll output the answer. So let's take a look at the code. So it's a lot easier to solve for X in Python because we can just import the Sympy library here. And that's the symbolic math library. You don't have to install anything. You can just import it. Google Colab works nicely behind the scenes like that. And then from Sympy, we're going to import symbols. And from Sympy.solvers, we're going to import solve. So we can import symbols to use X as a math symbol and solve for that. And solve is going to be the function we use. So we see here, then I'll define X equals symbols X. And that's defining that X is the variable we're solving for. I just put this comment here. But then the next thing we have, I define this variable eq equals X minus two. And this is the function set equal to zero. So it's X minus two equals zero is what we're solving for. And then that's the equation. So then I just put it in a print statement, print X equals, and Python syntax, then print that exactly, comma, and then our answer. And here's where we see solve eq, the equation, and use X as the variable. So we're going to solve that X minus two equals zero. And you see it outputs X equals two. It'll print an array of whatever your answer is. This just had one answer. But if I had something like X, X squared, X squared minus two, now that'll give me a square root answer. Kind of interesting how that'll show up. You see square root of two, rather than try to make that a decimal. But if we make this something that works out nicely to an integer, and we run that, see it'll give me an array of my two answers. X squared minus four equals zero is the equation. And negative two or positive two, either one works. And remember, then, if I have something like two X, I can't just write two X. I have to put, I have to put two times X, because that's Python syntax. Two X minus four. And then if we run that, there we go. It'll solve that. There we go. Much easier. And all this stays the same. You just put your equation here, and run it, and you can solve anything. Just make sure it's that equation set equal to zero. Now that we've worked through the core skills in this unit, let's look through some extra problems. And I'm going to work through extra problems using the Colab notebook. So you can see how you can apply these resources that you're building, and use these to solve the problem. You can use these to solve problems that might come up in a textbook or in daytoday life. So we're going to go through some more extra problems here. All right. So let's go a little bit deeper, looking at different ways we can solve for X here, using Python code. And here is the code that we were talking about before. So we import Sympy, so we can use our symbols, and then we're still from Sympy, import symbols, and some Sympy.solvers. And here I'm just going to define that symbol X. And this is the simplest thing. We can have all of this code, and I can just put my equation right here. Here's my equation. And then I can solve that equation, and I'm solving for X. Notice I don't even really need a print statement, as long as this solve function is the last thing there. And then when we run it, we see it will give this negative 1 half. And notice the brackets around it, because it's a finite set. Nice. Solve. Pretty easy. And if I have something that solves for even, you know, something more complex, like 2X squared plus 1. Now this is setting this equal to zero. So 2X squared plus 1 actually won't have a real solution. We can actually take a look at that. And you see the negative square root of I, and that is I, the imaginary number. So it will give us this. There's other ways to make that square root display in a better way, but we'll get to that later. And there we go. But we see, you know, it gives us two solutions as this finite set of these two. And if I were to make it, you know, minus 1, or I can even make it minus, you know, 4, we'll have two real solutions there. But there's still going to be square root solutions. There we go. Different ways that this will output. But you get this. You can put the equation in there and see the answer. It'll solve pretty much anything you can type in there. All right. But let's start making this a little bit fancier. What if we prompt for input? So let's say I want this to be, you know, somewhere else, and rather than somebody going in and finding that correct line and putting the code there, we can just prompt for the input here. And notice the function is input, and then it's going to display this. Enter equation. And I even have it as zero equals to remind the person that it must be equal to zero. You could add another print statement saying make sure x is the variable, you know, if that's what you'd like. And this input does come in as a string. But the fact that we are using these symbols, it will be able to interpret that. And here then we're solving and just putting that into a print statement. There we go. So we have this prompts you enter the equation. And maybe I just make it three x minus six. How about that? There we go. Something good. One solution. Three x minus six, because if x is two, then that works. Okay, that's great. But again, if, you know, I have multiple solutions, or maybe if I just don't want it to look like this, maybe I want it to be a little bit fancier. So, again, this solve stores this as a finite set, so we can do more. All right, we're going to import all the rest of these. Now, here, knowing that it's a finite set, I'm going to store that answer as this variable called solution. And then this particular equation, I know this has one solution, so I'm just going to have it display solution index zero. And that's going to be the first solution, which in this case is going to be the only solution. So when we run it, there we go. And again, this is pretty useful if I want it a little bit nicer output, just like having that nice user interface, you know, having it display zero equals and then waiting for the prompt. So, you know, some other ways we can do this. And, you know, here's saving this. Okay, that's great. Now, what if I have multiple answers? And what if I don't know how many answers I'll have? So I'm going to put this here, so if I enter the solution, now, maybe I'll just put the first one here. We'll get we'll get to this one next soon enough. So I'll just take the same solution that I know has one solution. And just like we were doing before, I'm going to solve it and store that as a solution. Now, notice my loop here and Python has this great method of iterating through everything in that list. So for S in solution, so there we go, every item in that solution set, whether it be one, whether it be however many, it'll iterate through that. So S is that solution. And then it'll go through. It'll be that solution. And each time, I'm just going to print x equals, and then I'm going to print out S. So, you know, we make use of the Python shortcuts. There we go. So 2x minus 4, the solution is 2. And we went through and did this. So what if I have something like something that has multiple solutions? So what if I have something like something that has multiple solutions? And so I'd also supposing I want to prompt for this. All right. So what if I just plug in something like this? Now, this, I know is going to have three solutions, because the three possibilities that would make that zero. So let's see what this does. Again, loops through, and it will output all three solutions very nicely. So we see we're building some of these things behind the scenes that will output one or multiple solutions and output it in a nice way. So we see, you know, if you're going to copy some code that you're going to use, this is the one to do it. Because, you know, you could even like, you know, you take out this, this was my demonstration. But there we go. And you really don't even need these. So this could be your code. And that will work for anything, because it's going to prompt anybody, you or you or anybody else using this to enter the enter the equation. So there we go. You see, we're building some tools here that we can use to solve. All right. What other ways can we do this? Now, some interesting things. We're also this time, we're going to call it VAR for variables, and we're going to use x, y, but we'll come back to the y. And we have this one first. You can, because you can use this for multiple equations, but I just call this one first. So there you go, two x plus 10. All right. Now, we know that this is set equal to zero. That's kind of the the goto way of doing this. But then this simpy syntax, we're actually going to spell it out and define it. EQ first, comma zero, saying that this is set equal to zero. Because then I can solve for x. That's great. And this solution I just called sol. And since I have this one, I know that the solution is, you know, there's only one. So I just put salt. You know, that's my finite set. And I want the index zero. So this is it. And actually, these are factored results, but this is actually going to give me a nice actual answer because I can get that answer. X is negative five. All right. Now, here's where y comes in. Now, I have to have y there. If I define y as a variable. Now, down here, I can say, supposing this is equal to y. And you see that works. So spelling it out here that it's equal to y. But now I now I'll solve for x. So that's kind of interesting. And then when we do this, you see, Python could actually do some of this factoring for you. You know, rearranging an equation algebraically. So now it's solved. Why over two minus five. Pretty cool. So we can do something like that. We can rearrange things. And then if I have this, you know, I could I could change it around a little bit or whatever. But some different things you can do. The default is make this equal to zero. Make this equal to zero. But this gives you this other flexibility. You can call it equal to y. And then you can do some other things you can solve for it. So pretty cool. As you do this, as you incorporate this into, you know, some of the notebooks that you're going to create, tinker around with this and, you know, try some different things. You know, that's the idea. You go through some different some different formulas or different equations in a textbook and say, hey, can I try this? Like, we could take a look at this and say, all right, let's see, solve for y. Now, what about if I have two x, then, then if I want to solve it for and you can even include y in here. So there we go. And if that's included in y, then I still might then go back down here and say that this is equal to zero, because that's kind of the default way for that to go. And I, I can still go back and solve for x, and it should end up being very similar. Because, you know, if I want to do something very similar, because whether that was, you know, without this minus y saying it, it's equal to y or with this minus y saying it's equal to zero, see algebraically very similar. And, you know, we could even just to show you, we can even say this to x minus y. And we can run this. There we go, x is y over two, all kinds of different things you can do. If you need to rearrange this, you can put that in this setup here. And then, you know, what is, what is this set equal to now? And what am I solving for here? And in this case, it pretty much will be index zero for that solution set each time. So these are some cool things you can get the code to do all the factoring for you. Well, here's some other factoring. Supposing I have something like this, you know, we can divide out common factors. Now, you might see this, two x, two times x, ten times y, plus four. Now, supposing this is another thing in SymPy, I can just factor it. You know, I'm not saying that's equal to zero or anything. I just want to take a look at this. I don't want to factor it. Look at that. And SymPy also does the nice display on the output, too. So you see, there was a common factor of two. And that worked. Now, supposing I had this, and let's say this is three, which then doesn't factor at all. So when I run it, you know, it will just output that because it's not factorable. All right. Now, what's really interesting is if I have something else, like x squared, and let's say x squared minus four. Now, you may or may not be familiar with that factoring, but I can factor something like that, too. I look at that. It'll factor that out. That's the correct factoring of that, x minus two, x plus two. So it will do a lot of really interesting factoring for you. So pretty good. Here's another one that we can, you know, just to show you that we can even take it to the next level. X to the third minus two x squared minus five x plus six. So we have that. And if I factor that, there we go. Look at that. It breaks it down into these factors. So some of these really good things, you know, knowing that you can set your factoring, you know, you know, you can set your factoring, you can make your own factoring calculator here. All right. So let's take a look at some of the functions here. So when we have, you know, we have that, we can factor. And then you've been doing some of this practice with these functions. So I want to show you, you know, you know, looking at these and this different input, how we can, how these functions are working that, you know, remember you were doing the practicing the one step functions, the one step addition, one step multiply. There we go. Now, that first one I want to show you is because you can't do string to a fraction. This print, this works out just fine. But when we take this input, now other inputs, if it's actually a number or a decimal, you can do this and you can cast it as a float. So that's a number that could include a decimal. But if you know that it's going to be a fraction, this float won't work because that slash for the fraction doesn't parse nicely. So then this will give an error. Now, just because it says fraction here, that's just a display. If I just disobeyed that and put in a number, then it wouldn't give me an error. But if I, as soon as they use that divided by, I need that. So that's our first function here is how do I convert the string input, including fractions to a float? So this is the way Python functions work. I'm going to use this DEF to define it. And then once I define that function, I give it the name of the function. I need the open and closed parentheses. And this particular and this particular one will also have input. So I define this variable in the parentheses. That's going to be the input and then colon at the end. So once I define that, then everything under this is indented for spaces. Yep. And I recommend don't use tabs, use indentations. So then I have an if statement and if, and then here's the condition. If this is true, colon, and then that's indented for spaces. Okay. So I take this input string and I'm testing to see if this fraction bar is in there. And notice if this exact character in, in string, cause that's what I called it. That's my input. If it's in there, then we have this split. Each string has this split function. So you can split it and say, all right, at this point, I'm going to split it. And then that creates two different arrays. Now this was all based on string input. So it's going to be two string arrays or two or one array with two elements. And so it's going to be ND. I call that for numerator denominator. So then ND zero is going to be everything before that. And ND one is going to be everything after that. So if this was a fraction, if somebody put a fraction in there, then ND zero, everything before that would be the numerator. So I'll cast it as a float, store it as N for the numerator. And then ND one is everything after that. So I will cast it as a float, store it as D for denominator. And now see, we had to split, we had to detect that split that string. And then each of these two elements individually, cast them as float numbers. And now these are numbers N and D. And now I can actually do that division N divided by D. So you see, because that slash doesn't work for for parsing numbers, I have to like work around it. And now I have ANS as this answer. And then I have the return statement. So this, this function doesn't have a print statement, just returns this. And we'll see where how that comes up. But it just, you know, wherever this function is, it'll out, it'll put that answer. So that's if it has that. And if it doesn't, because I want to be able, I want to use this either way. So anything else, colon, indent, then I won't have a problem. So I'll just take that in string cast as a float. That works. So anything else you put in, we're good. And then again, return ANS. Now, where this comes in, I'll come back to that one, is in the one step multiply. So here's this function, one step more. And I put this common in here, to remind myself or anybody else using this, that it uses this function. So we need to make sure that it's in the same place. All right, so here's, here's the idea to generate, you know, some practice problems for you import random. And then here, I'm going to get random dot Rand int from one to 11. So that's going to be a random integer, and I'll store it as variable A. So that's going to be a random integer, including one, but not including 11. So one could show up, 10 could show up, but 11 won't. So that's, that's the way the random integer works. It includes the first one, but not the last. And then B, I just wanted to make this two to 24. So given these two random integers, notice what we're going to print here. So AX equals B. So we see it's always going to be something times X. And I just want to display this. So I didn't need to worry about the Python syntax with to show the multiplying. All right, so AX equals B. And then you would know, what do you want to do? You want to divide both sides by A. So you know that, and we're going to take your answer, input, you know, X equals, and whatever your input is, we'll store it as ants in. And then the actual answer at this point is going to be, we know divide both sides by A, so the actual answer is going to be B divided by A. So then this was the actual input, notice, still a string. And that's where we're going to use that in our function that we created earlier, string frack. So see, it's going to take that answer, run it through that function, run it through that function, and return right here, that answer. So that way we can easily compare it because this function will return that answer, and then the double equal sign to compare, and we're going to compare it to the actual answer. So there we go. So that's the return statement, wherever I don't have to print or output anything, it just returns that value right here where I have the function. And if it's, if it is good, we're going to print correct. If not, try again, but then print out the answer. So there we go. And now it'll loop through this. Well, this will do it once, and then, you know, we can create a loop to have as many of these as you want, practice onestep equations. So there we go, and then test them each time. And then test them each time. So, you know, we have the simplest onestep addition, is another very similar one. There we go, import random, display the problem, random integers, and yes, you can go through negative numbers if you want. All right. And what are we printing out here? X plus A equals B, because then you know that to solve for X, subtract A. So we'll take your input. What do you think X equals? But also we're going to calculate exactly B minus A. What is it really? And then down here, we don't need to do anything else. We just say, if A and S equals answer. There we go. And here, see, we can cast the float, cast the input as a float right away, because we're not expecting anything fancy. You see the other one, knowing that I'm going to divide, you know, I need to address all the other things that could come up. And there we go. If it's correct, there we go. If not, and then we print out the answer. Cool. So some different things you can do, and you know, onestep addition with negative numbers, just we just did in a slightly different way. So here's a bunch of things that we can do, just practicing your own ability to solve. But we'll also get more into some other functions later, but, you know, good to see these functions. But yeah, yeah, here we go. Just some of the things you can do, factor or solve. So these are the things that you want to be able to do and, you know, set up, you know, start again, start building your own, your own CoLab notebook. So by now, you might have some things that, you know, solve for proportions. You might have some things to, you know, solve for X and, you know, maybe you can even copy one of those, you know, convert fraction input to something, you know, feel free to, you know, copy, copy these, tweak them, make use of them on your own. And, you know, you see you're building your library as well as really understanding the code as you're building this. And, you know, hopefully your understanding of the math, understanding of the code gets deeper and deeper as we, as we go on here. All right, so I think we're ready to go on to the next unit. So let's talk about fractions and decimals and how to convert from one to the other. Well, fractions, when I say out of, like this could be one out of 10. If I say out of, that means divide. So any fraction numerator divided by denominator, you can do that on your calculator and it most likely is going to return at your decimal. There you go. So fractions, decimals, you know, pretty easy. Calculator, do the decimal, you know, pretty easy. Calculator, do the division and then, you know, you have your decimal. But what about doing it in the reverse process? So when we look at this, this, I would read each of these one out of 10, I could call it one tenth or 0.1 is what you would get if you did that division. I would still call that one tenth because that first decimal place is the tenths. So that would be one tenth. Or then if I had one out of a hundred, then there we go, two decimal places. So tenths, the second one, the hundredths. So whether I write it like this or like this, I would still call it one hundredth with the th. Then, you know, I just wrote it one more, you know, third decimal is would be thousandths. So, and it would keep on going. So knowing that we have that, you know, tenths, hundredths, thousandths, then that would be our denominator if we want to convert it back the other way. So if I would, if I had something that I would, you know, 0.234, so something that I wanted to convert, then I would take this as tenths, hundredths, thousandths. That's where it ends. So then I could make that 234 out of a thousand. And I could reduce that, but that still is the fraction that I'm looking for. So 234 out of a thousand. Or if I had something, you know, like 0.4 one place, that's one tenth. So that would be four out of ten. And again, I could reduce it or I could leave it as that, you know, that that's converting my decimal right to a fraction. And when we get into the code, we're going to look at how to see here. I'm just looking at this and remembering these tenths, hundredths, thousandths, et cetera. It could keep going. You could convert any decimal, but I'm looking at these remembering the place values and then saying, oh, that's three. So I'll have ten with one followed by three zeros, you know, one decimal place. So my denominator is one followed by one zero. And we get into the code, we're going to look at how to do that in a different way rather than just, well, there's a few ways you can like take it as a string and count how many places, or we're going to, you know, one of the lessons we're looking at the logarithm way, probably the string and just counting it, that's probably a little more straightforward. We'll do that one. But there we go. Converting these, you know, how do I get this and then, you know, how do I reduce it? Okay. So we think we have it all worked out, but what about if I have a repeating decimal? So supposing I have 0.3333 and it keeps repeating. And mathematically, if I was writing this, you put the line over one of the, the part that repeats. So I really could just keep it as one, but I want to show you three repeats, just put it over the three. So that keeps repeating. Okay. So we were just talking about, you know, how many decimal places and then put it over that. But if it keeps repeating, where do I stop? So let's take a look at a trick how to do this. We want to get to the end of the repeating. So if it only repeats one repeats once, then if I multiply this, let's, let me call this X and actually I'm going to write this down a little bit further. This is, that's going to make sense in a second here. So if I say X is my 0.3333 repeating. All right. So if that's my value, I only need to multiply it by 10 to move the decimal place once. And then that cancel out. So if I have 10 X, then that's 3.3333, et cetera. And these keep repeating. Now, the reason I do that is because of all the repeating decimals, everything that repeats now is going to line up. And so if I subtract these, what can I do on the left? 10 X minus X is nine X equal sign still there. And three point, all this minus zero point, all this that cancels all this, however many decimal places you want to go, it all cancels and my answer's three. And then one step of algebra, solve for X divide both sides by nine. So I get X equals three over nine because nine divided by nine is one. So that's one X, three divided by nine. And I could reduce that as one third if I wanted to. Now keeping it as three over nine, you know, that's nice, like bonus math insight. If I have a single number that repeats, it's that number over nine. That's the fraction. So if I had four over nine, if I had four, if I had, you know, very similar type, type of question, but if I had something like, uh, if I had zero point four repeating, so then 10 times that would be four point or four, et cetera. They both keep repeating. Do the same subtraction. 10 minus one is nine X. And when I subtract these, all the repeating decimals cancel. So four point this minus point four is exactly four. And when I divide both sides by nine, X equals four over nine. So there we go. And, uh, so one more bonus here. If I had nine repeating, we could do the same thing. And you would think 0.999. That's not exactly one. And well later on in calculus, we can look at limits and how 0.9 repeating. If it keeps on going for all practical purposes, that is one. But if we did this, it would be nine's repeating and we divide by nine and you get X equals one. So it kind of works out nicely, but this is, this is how we can do this. You know, notice we're not looking at code here. Now we're just taking this. And, um, if we have something that repeats, then that's what we need to do. We need to find out where it repeats. If I had something that repeated, um, you know, three, two, two places over and over again, uh, let's do that one. And just to give you an idea of a different way, if I have something that repeats, then if I have, uh, so X equals, uh, 0.090909, something like that, and it's the zero nine that it's the zero nine that repeats. So I need to multiply it by a hundred to line it up. So 100 X because that would move the decimal place twice and that makes it 9.090909, et cetera. So when I do that now, same method, if I subtract these, that's 99 X equals nine because then that cancels. So then X equals 99, uh, nine over 99 and fine, perfectly acceptable answer, but we can reduce this divided by nine. So that's one out of 11. We'll get into reducing fractions and also the code for that too, but you see, this is, this is one way. If you have something that repeats and maybe you're right the way you write the code, it might seem to break it. If, if you don't, uh, if you don't find some way around it, this is the way around it. So we can convert any repeating decimal, but now we're going to, what we're going to do is we're going to get into the code and how to take any decimal. Just here's the decimal input. How can I find a way to count how many spaces that is and reframe that as a fraction so that given the decimal and then turn it into a fraction related to that is percents because remember the first is 10th hundredth. So the first two digits are the hundredths and that's really what percent means out of a hundred. So percent is all the same thing. And then just, I'm always looking at the first two decimal places. That's my percent. So, you know, very similar, but just the first two decimal places. So let's take a look at the code and we'll see how to convert any decimal to a fraction. All right. So let's talk about how to convert decimals to fractions with code. And first we'll get some background here because this is going to be useful. So if I have 10 two different exponents, let's take a look at the positive exponents. So 10 to the first power, we see this first one, 10 to the first power, 10 to the second, 10 to the third. We'll see these come up. What happens when we take 10 to a positive exponent, 10 or anything else to the zero exponent, and then we'll take a look at 10 to the negative one or negative two or negative three. So this will just print these out, but let's take a look at what this does. So we see 10 to the first, second, or third becomes 10, 100, 1,000, 10 or anything to the zero is 1. And then the negative exponents are how many decimal places? 0.1, 0.01, 0.001. So these are the things we're looking for and we're going to make use of this as we convert our our decimals to fractions. So the next thing, we'll take a look at how to get user input. And we have this formula here, user input, open parentheses, and in quotes here, this is what it will display. And then you'll see then a box, you know, then asking for input. And then here we're going to store that as text as that's the variable. For our purposes here, we're just going to show you that you can enter a number and we're going to print it out. I call the variable text just to remind you it comes in as a string. We can't do any math with it yet. But one of the things I can do, any string, I can figure out the length of that string. So we're just going to print that out. And I just have, again, this comment here, if I tried to do math with it, then there would be an error. So let's take a look. So you see, enter a number. And then if I had a number with a decimal, like 0.123, I hit enter. You see 0.123, the length of it is four, because as a string, these are four characters, the decimal point counts as one character. So different things I can do with this. So I, you know, if I wanted to enter a number, now, if I have, if I cast it as a float, now I can do math to it. And I can cast it as a float or an int for integer. So just keeping in mind, you know, things I might want to do with this, a float can have decimal places. So that's usually my default cast. But, you know, if you definitely know that you want it to be an integer, we would use that. But we're going to enter a number, cast it as a float and store it as the variable number num. Now I can do math to it. I'm going to print out num plus four. So we'll see. There we go. If I enter a number, there we go. And if I have 0.123, then hit enter. You see now I can, now I can add. All right, or whatever other math operation you want. Once you cast as a float or an int, then you can do math to it. And the float, because it can handle decimal, any math operation that there might be a chance of a decimal use float. Okay, so we're going to put all this together. So converting this input, which will come in as a decimal. So I'm going to take this input and here's what I'm going to print out. Enter a decimal number to convert. There we go. So we know that that's input and that's going to be stored as digits. And we know that that's a decimal. And we know that that's going to be a string. So to get the number of decimal places, the next thing. So I'm going to use this, the length of that input digits, and I'm going to cast it as an integer first. So notice that happens first. Then I'm going to subtract one, because remember as a string, that decimal point is going to count when I do the length of that string. So I want to subtract one because I don't want that decimal. So now whatever decimal enter minus the decimal point itself, that's going to be an integer that's going to be the exponent. And now here I go back to digits that is still a string. Now I'm going to cast that exactly as a float number. I'll store that as n. So now I know how many decimal places it took to make that and the number itself is a float. So let's talk about our fraction. My numerator is going to be n times 10 to a certain exponent, 10 to that exponent. So in my previous example, point one, two, three, then it's going to be, you know, that was four, the length of that was four, so minus one, so the one, two, three becomes my exponent. And then when I multiply it by that exponent, it makes it a whole number. And since I know it's going to be a whole number, I will cast it as an integer. So that's going to be my numerator. And then the denominator is going to be 10 times that exponent. So you see that that is what we were doing before we were doing the code. You know, how many digits, how many decimal places, and then, you know, my numerator is that times 10 to that many des 10 to that exponent, and the denominator is just 10 to that exponent. So three decimal places would be that times 10 to the third, and then the numerator denominator would be 10 to the third, and it gets you that decimal place. Now, that's numerator and denominator for any fraction. Percent is just the first two decimal places. So whatever n is, I'm going to multiply it by 100, because then that just gets the percent. That decimal, move it over tw move decimal place twice, which is multiplying by 100. So now we'll see the output, the decimal. There we go. We just repeat the decimal again. The fraction, numerator, and I'm just going to print this out to show you it's numerator over denominator, and then the percent, and then I'll print out the percent symbol. There we go. This, remember, in math means something else, but here I'm putting it in quotes. It'll just be the percent symbol. So we're going to enter a decimal number to convert, and there we go. Point, uh, one, two, five, enter. There we go. The decimal, point, one, two, five, and then the fraction is 125 out of a thousand. That's correct, and the percent's 12.5. And we can run this again and do this for however many decimals we want. Um, you know, point two, enter. So it's point two, two out of 10, or 20 percent. And there we go. The same things we were doing, and this is what we want to get, look at throughout this course. You know, the steps that we're doing in math, we can break this down, and we're pretty much doing the same steps, but then now once we have this written in code, then, you know, you have a formula that you can reuse. Okay, I'll bring up this, bring up the script here, and I'll be able to convert any decimal to a fraction. There we go. Now that we've worked through the core skills in this unit, let's look through some extra problems, and I'm going to work through extra problems using the Colab notebook, so you can see how you can apply these resources that you're building, and use these to solve some of the problems that we have, problems that might come up in a textbook or in daytoday life. So we're going to go through some more extra problems here. So now I want to show you how to put together your own calculator. You know, this is what we're talking about here. You're making resources for yourself. So in all the things that I'm showing you, and you'll have access to all these different, uh, resources here, but you're going to put together yours. So you're going to click on new, and you would have already the Google Colab, so go over to Google Colaboratory, click on it, and now this is going to be yours, so actually I will call it that. I'm going to put the underscore, it accepts spaces though, your calculator, and you just hit enter or click somewhere else, and there we go. So this is what you can do to put together your calculator based on things that we've been doing so far, and then things that we do further on in the class, then you can add to it. So you can go through and go to, let's say, the week one notebook where you solve for proportions, and here's some things you can do. So if you click on this text here to set up the proportion, let's copy that first. So you click on that text and go all the way over the three dots. This looks like copy, but it actually doesn't do what you're expecting it to do. Click on the three dots, copy that cell, and when you go back to your calculator, I'm just going to click in the open space here and paste it, Ctrl V or Command V. Actually, it's kind of cool. So, you know, Ctrl V for the Windows, Command V for Mac, and CoLab accepts either one, and then we can go back. That's your proportion set up there, and let's copy this again over all the way over the three dots, copy cell, and your calculator, and we're going to paste it. So you can have this, you know, we don't need this. If you have an extra one, that one, the trash can over there. So there we go. Now you have your text set up proportion, and then it really is then selfexplanatory. You know, you see the setup and put in N1, D1, N2, D2, and even the comment there, put the zero in for the unknown value. So you can go through each of these. Then if we look at week two, now we were doing a lot of things for solving for X, and maybe you don't need to do the simplest one. Maybe you like the prompting. You can include that. Doing more with the solution, how we split it up. Now, I personally, I like this one, so that might be the one that I copy as one of them. And what you can do is, you know, click on here, because notice this one, I personally like this one. It prompts for the input, already showing that it's something equal to zero. You know, there we go. We already have X as the symbol, and then this also prints out multiple solutions if you have them. So this is nice. We can copy this. And when you go back into yours, now if I just paste this, that's great. I actually don't need that. And notice it didn't paste where I wanted it to be. So watch what we can do here. I'm going to click in here and use these arrows. I'm going to move it down, and actually down one is just fine. Now, we wanted some text in there. So right above it, you hover there, add text, and solve for X. Maybe I'll just add that text there. So there's more from that week. So we have that. That's nice. Now, this solve in other ways, that was pretty good. And then notice there's also factoring. So you could include something like this, solve in other ways, or factor, you know, simpy.factor. Now, I might include this because you'll see we'll come back to the one of the other ones. So if we copy this, and this is just factoring, we can actually do this. And this is just factor when there's, you know, nothing else to solve. You see, so maybe we'll copy this cell, and paste this down here. Now, maybe I'm going to add text and just put factor. And down here, then I will paste it. Didn't show up where I wanted to. I can use the arrow, move it down. So, you know, there we go. We have set equation equal to zero ready to solve. But we can even make this, you know, equation to factor. And see, you can put this however you want. There we go. And then, you know, you can factor things. So we have these. We can go into the next week. Now, notice to put it all together, because when we went through and looked at some of these leading up to converting a decimal to a fraction. So this was putting it all together. You're prompting the person to enter in this, and then we're going to convert that output, the decimal, the fraction, the percent. So that's nice. Maybe we copy this. And the factoring we'll get back to. So then we go down to here. Maybe I'll paste that here. And that's good. So we just want some text ahead of it. Decimal to fraction. So you see now you're putting together your resources here. And we don't need that output right now. Now, we have one more here. Factoring and solving for a variable. And notice it's when I paste this, I might put it with the other one. But we see, remember we did this, then you have the left side, which could be equal to zero, and the right side of the equation, which could be anything. You know, this would be about the only thing that you would need to change here. Change the variable you want to solve for. And I put all these as your basic common variables that you would use, but you know, you could always change that too if you want, but you might not need to change that line. And then this one will solve it, even if it is something that you can just, you know, solve for a variable. It doesn't come down to an exact number here. So that might be a nice one. And then we keep this example in here. You know, copy this. Now, we might put this in here with factor solve for x, factor solve for x, and factor solve for a variable. Maybe we put it in here somewhere. And notice you can just click and add code. I'll click right in here and paste it. And this will be pretty much right where I want it to be. Then I might delete this, add some text, solve for a variable. Now, these are just some examples here of how you could put this together. So that then you have your resource here, proportion. There we go. Solve for x, factor, solve for a variable, convert decimal to fraction to percent. And then things that we do later on, you could add more into this here. Now, supposing you want you you want it to put a lot here and then you add all this, that's this is a lot of scrolling. So one of the things you can do is, is now I'm going to start with proportion. I like so right around here, you could there's there's multiple ways to do this. You could insert, you go up top, insert a section header cell. So I'll do it one way this way. I'll do insert section header cell. And actually, I want that above. So I noticed this, when you double click on this, you see some of this. These text boxes accept HTML, look at that the br to split the split the line, and they accept latex, which is how to format various things fractions, formulas, all kinds of things. So in this new section, and you see, because it's in this text part, that's not a comment in Python, it's the new section. And I might just make this proportions. Okay, so now, you see, it takes that and all these cells become a part of that section. I don't want that. But what I want to do is, if this next one, I want to make this this section, and I don't need another one, I think that'll be the section header. There we go. So I'm just going to put this here. Now that's a new section. So we see proportions now just has the two cells, the text about setting it up, and then the code. And solve for x has just one cell because that section said it all. And then we have the code. There we go factor. And maybe you want to say something more than just factor, but you can make this a section heading. Solve for a variable. There we go. And in seeing all this this together. So you see solve for a variable. Convert decimal to fraction. You know, that probably I didn't need anything else here, solve for a variable. All the rest was explained in the comments. And convert decimal to fraction. So now this just has the one cell. And the advantage of doing this is, over here, you see these lines. Now we have the table of contents here. There we go. And I could change, you know, that's long enough. I don't like it when it goes on to two lines, but that fits so that it's a longer title, but that's okay. And you can have your table of contents that you can actually go through. And you see jump to proportions. Jump to solve for x. You know, different things. And in the view, you could change the view to collapse sections. You don't have to, but you could. And then you see you have all these. So these are some things you can do in putting together your Google code like this. Putting together your Google CoLab notebook. You know, I want this to be your calculator that you're building. So then you're learning how to do all this, but then you also are building your resources here that you can then refer to. Oh, what do I need to do? Click on it. Enter what I need to enter and solve it. You know, you're essentially making your menu here. So that's what I want you to do for this unit, is take a look at what we've been doing so far and put it together in your own notebook. Some of the things we'll do later will even get fancier and we'll, you know, make some of these into functions that you can use in different places. But this would be a good place. Put together your notebook of resources. Here's one way to do it, but you know, you can tweak it to the way you like it. All right. And now we're ready to learn the next thing. So what does it mean to be a function? A function means it in math and in code that you're taking some input and then doing something to it. And actually there are some functions in code you don't have to take input, but in math we will. So like we were talking about our unknown number being X, the output will be Y. So each function we want to take X as the input and then we're going to say that the output is Y. And here we're dealing with all numbers. What am I doing to X and then outputting Y. So you see we have like solving for X we were doing before, but now we have a second variable and we still want the idea that just like in the alphabet X comes before Y in science and in research, we can call X the independent variable because that's what changes first. And then Y is the dependent variable because it depends on what X does. So if I want to solve this or do anything to it, then I'm going to plug in a value for X and I can pick any value. I might start with zero. So I'm going to define it over here. My input X is zero. And then what happens when I plug that in? So that'd be Y equals two times zero plus three. And you see I'll just put in zero in parentheses where I plug in this number because it highlights that that's what I just plugged in. And also the fact that they're next to each other I'm still multiplying. So when we do this two times zero zero plus three, then that would be Y equals three and my output is Y. And if you remember then that's an XY coordinate on the graph. X is zero, Y is three and I'd be able to plot that point and I can keep going. What other points can I, what other numbers can I plug in? I'm even just going to keep this. So supposing I have X equals X equals one. Plug in one. Two times one is two plus three is five. Y equals five. And then we'll plug that in and I can plug in as many or as few. I don't have to have integers. I tend to do that so you can see the numbers a little bit clearer. But you know you don't have to worry about doing any other calculations in your head. But if I have this I can put in whatever numbers I want as many or as few. I can put decimal numbers in there and we can plot these on the graph which we'll talk about a little bit later. But this is the essence of a function that X comes before Y. I plug in an X value and then output the Y value. So another function notation that a lot of people like is instead of using another variable Y and this connects a lot with the way the code's going to look. We call it F of X and F for function. So two X plus three. So if you see these, these are the same thing. Y equals two X plus three or F of X equals two X plus three. This notation F of X and that's what we read F of X, F for function. We solve it the same and this connects a lot more with your computer science. So if I have the output called F of X, one of the advantages when we get into writing the code is that in algebra we tend to just say F for function. But in writing Python or other code you can actually give your function a name and it doesn't have to just be F for function. It can be add, divide, calculate the area, something really even a long phrase like that as long as there's no spaces. So if we have this and then sometimes then let's say if I wanted to plug into two I could write in F of two. And so again the usefulness of this notation is because I see what what am I already defining as my input and then I know what am I doing next. I'm going to do two times two plus three. Two times two is four plus three is seven. So F of two is seven. So now I know that answer and when I see that X is two, Y is seven. And we'll see how this you know really relates to the code and how we can write even a little bit more elaborate functions with code and how we can define the input there. Then we'll look at graphing it. All right so let's take a look at the code. So with the code and functions we can do very similar to what we would be doing by hand writing out the math. Here I'm just going to define one X value as an example and here is the function that Y value. Y equals four times X plus three. And you see Python syntax have to make sure we put the times. So I'm just going to plug in that Y X value become you know substitutes in for this X value. So it's four times five plus three and then I'm just going to print out my solution X comma Y. So we see that and before I print that out. So that's one thing one X value but I can loop this. So I'm going to print out this line here which is X and then I'm going to put a tab Y. So that's defining my columns here X and Y. And then what I'm going to do is loop through all those values. So for X in range 11 so X is going to go 0 through 10. And then I'm going to take that same function and each time then I'm going to plug in that X value solve for Y and I'm going to print out the X Y values. And in this case again I'm going to put the tab in between. So this is the essence of what we're doing with a function. Each time I get an X value plug it in solve for Y and then I have an X Y value and this is going to print this out as a table. So when I run this we'll see it'll come out first of all we'll have that that one solution you see five twenty three five comma twenty three that first solution and then we have our table X Y and all of our X Y values if X is zero Y is three if X is one Y is seven etc. And we also have five twenty three that shows up on the list too. So that's defining a function. Now Python has a lot of other functions beyond math you can do things with and we can still use that same type of Python function definition for our math. Here we can on this line define the function. So D E F space and Python I can name my function anything but I'm going to use the classic math notation F of X and then here I have a colon. So this is going to define the function everything underneath is indented four spaces and I have Y equals my four times X plus three. That's the function and what am I going to do then I'll return the Y value. So whenever I run this that'll return the Y value. So you see this in use if I print here if I print five so I already know I want that to be my X value comma and then I'm going to call this function right here F of five and it's going to take that and run it through there we go. Same type of thing same type of thing then we'll define this and when we run this it's just going to print that 523 and next we could put this in a loop I could just take the same loop here and I'm going to copy this and I can just take that same loop if I wanted to and in this case I'm going to print because I already have that function defined I don't need this and I could really just put put that here F of X you see so I could I could just have right here since I defined that function X F of X and I don't have my headings and I don't have my headings here but I think we can use our imaginations there we go so printed that one value but then in the loop just went through and looped so these are the ways that we can illustrate a function in code and you know what we can do with these functions you know is almost limitless you know you can have a function do anything and you can name it anything more more complex than this you know give it a word but I wanted to show you the connection with the classic math notation and functions in Python whether I actually just call it y equals that that still works as a function or whether I define it and next we're going to look at graphing functions so now when we talk about graphing functions we'll use this equation y equals two x plus three and I'll use the x and y notation so we have our input and output you know all the different x values and what y values match up so if you ever come across something like something like this you can see that if I plug in both of these x and y that should make the statement true and so we have a few of our points here and then now we're going to see how that matches up with the Cartesian plane our x y coordinate plane it's Cartesian because Rene Descartes invented this so we have zero zero at the center and how much I count for x positive to the right negative to the left and it comes first like x comes first in the alphabet then my y value positive up negative down and and my coordinate pair would be my x y so this zero three would be zero so I'm not going left or right at all up to three plot the point now I don't also need to write this but I'll show you so then that would be the point zero three so x y and then one five so I would go over one up five plot the point and then that's one five two seven plot the point now I just plotted three points but I'll tell you if you really wanted to try many in between points decimals or other numbers that are in between you could bet that each of these whatever you know one point something two point something they would all end up being on this line it's continuous there's no x value that can't go into this well whatever weird fraction or decimal you know mixed number anything so all the numbers would be on this line so with this type of function we're going to call it linear and we'll get into other types of functions but that's where we plot a few points and then we want to look at these patterns what type of graph does this end up looking like so what we're going to do now is look at in the python code how to create a graph and plot points to make a basic blank graph we're going to import this library matplotlib.pyplot and that's a lot so we're going to we can import this as plt so I can reference this whole library as plt from here on out and here's what we're going to do the first line is these are standard variables that we use fig for the figure axe for the axis so these two variables and that equals plt.subplots and then that sets this up and we'll do plt.show the base there you go import set this up and then show and then that gives a basic graph these are all the defaults nothing else going on there and you know we have this set up so we're going to build upon that now let's define the dimensions here notice that was all just the first quadrant everything's positive and even only one goes in positive and even only one goes up to one so again import matplot library plot we set that same two first lines but now let's take a look at these dimensions now I have that plt so it's plt.axis and I'm going to set this axis all right and it gives you the range of x values and y values I'm going to show a better way in a second but you can do this on one line here's the dimensions and now when we show it I want it to go from negative 10 we see across the bottom the xaxis negative 10 up to 10 zero in the middle and on the yaxis negative 10 up to 10 zero in the middle that's great but I have no lines I have no axis and you know not the clearest so here's first of all here's a better way to set the dimensions is I'll define them right at the beginning as variables x min x max y min y max and that way all right I want it 10 in every direction and I can set them here easy to see it and change it if I want to and now when I do all this this is really what I'm doing when I set the axis size x min x max y min y max that's really the arguments that it's taking and it becomes a lot clearer when we set it up like this so then I have this and I can set this and then if I wanted to I say oh for this one this y value goes really a lot higher so maybe I want that y maximum to be 20 instead of 10 and then when I run it now notice the the size of this still looks the same but it adjusted accordingly and on my yaxis it goes up to 20 and on my xaxis negative 10 to 10 and so let's display axis lines here if I have my dimensions defined and now when I plot the axis well that's the one we already did here the window size but I'm going to just plot them as lines so this line here I have x min x max as my array of x values see notice it's plt.plot and I have my array of x values and then my array of y values and the default is to make this a line so it won't just plot two x values and two y values it'll draw the line from x min 0 to x max 0 and this b in quotes makes it blue so we're going to do the same thing with the y plt.plot and my x values are going to be 0 at 0 y min 0 y max and then it'll get make that a blue yaxis just because I like blue and there we go so now we have this that will give us our x yaxis so from everything we do now we have an axis we have a point of reference so everything that we plot is going to you know start with this now define the dimensions set all this up we might not even need to change any of this and that's going to give us our graph with an x yaxis all right so how do we plot one point so we see the axis the default is a line and I made it blue b in quotes so how do I plot a point well I make this line here I have an array of one value which is five for the x value one value which is four for the y value and then the r makes it red and the zero makes it a circle actually that's oh so there's some other options you can do you can do a dash you can do different symbols but for right now I'm going to make this a red circle and that's how we make make that circle and that's how we make that here if I have these two and so when I run this it'll still plot those as an axis and then we'll do five four and then that's going to be a red dot all right so if I wanted to plot multiple now connecting with what we were doing with the functions here I'm going to set up my graph and here in rain in my range I'm going to have the range from 10 so I'm going to go from this from this value my y value y equals 0.5 x plus one and in this case instead of making it a table I'm going to do plot plt dot plot and I'm going to plot that x y value as a dot so this range and I'm going to plot these x y values and again that's the essence of graphing a function I have all these different values and when I plot all these points I'm going to see this nice pattern emerge that this all lines up and I'll tell you if I plotted points that were in between whatever x values there would be they would also line up that's why it's a linear function the graph of it's going to be a straight line and then every point on this line every x y value if I plug in this function it's going to work so my loop to graph a function and here then we'll create a loop to do the function and the table so like we were doing before I'm going to build upon this basic graph that I have I'm going to print the x tab y for the heading of the table and then in my loop I'll use the same function here I'm going to plot the point and I'm going to add it to the table and all these it it actually won't plot all the it'll kind of save these points and it won't plot them all it's really just going to add them all to the table and display the table because it really doesn't show the graph until the last thing outside the loop here is going to be plt.show when you have graphs I think Python just likes to have that plt.show last so do your other stuff first and then show the graph so then we have this and we have our table of y values notice if I just put one number in the range it'll do zero to that number but I can have negative five comma ten or I could even just go back to those original values that I defined up here and make this x min x max you see and then but as you know you can put any two numbers in here and it'll do the range between there and you see it just abruptly starts here and abruptly ends here but I could change that to make this x min and I can make this x max but remember I want to graph that last point so I'll do x max plus one and I can have that range and now it'll give the full table of values and it'll graph the full dimensions so there we go we see what we can do with the function I have whatever math function I have plug in different values and see the results see the numerical output see the graphing output and now we see the connection of graph the table and the functions now that we've worked through the core skills in this unit let's look through some extra problems and I'm going to work through extra problems using the codelab notebook so you can see how you can apply these resources that you're building and use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here so let's talk about more ways to graph and more things we can do with the graph because we want to be able to display our data our functions so we did look already at how we can loop through inputs you know I can define my graph and we already did this the x min and max y min and max and we talked about how we can loop through I get x in a range and then each time I'm going to plug this in and plot that value and that's the idea of the function that each time I get an x value in this range plug it in for y plug it in here get y and I plot that x y point in this case as a red dot after doing all that then we show the graph but what if we didn't have to do a loop for our input what if we could use an array and we'll revisit this again in other units but we have this numpy array and it's not that long of a word but it just seems to be the convention that we import it as np and so you'll see a lot of examples throughout the internet that np dot this or that so that's what we're going to do and again defining x min x max so given this numpy array here's what we're going to do then given these values I'm going to define how many points I want in my array and in this case it's going to be two times x max minus x min I feel like that's probably enough for our purposes but that number two you can up that to 10 or whatever you want and then we see so then we want to make as many things dependent on these values as we can that way if that changes if I change my window everything else will change accordingly and I don't have to go through and find all these variables so yeah I get the full range times two so that's two points through that you'll see that that's actually going to work out just fine but you can always increase that so now they have any points this is how I define my array of x values and since I really am only using this once I'm going to just call it x because that is my array of x values and so numpy we have np dot linspace so we have this function here which is going to set up our array you know space for linear graphing so it takes the argument where do I start where do I end and how many points do I have so we see we just make all this dependent and then I get my x value so this saves us the time of having to do a loop python will do this for us here's all the graphs and we're going to talk about how to change some of this stuff too in a minute so now I'll just I like to define my x value up there right where I have number of points in the range so I have my y value and for our purposes here we'll just call it you know call it y equals but you can graph multiple things on the same axis and you know you can have y1 y2 whatever you'd like so I just define this relatively simple linear function here so then when I plot I'll plot x and y and if you remember before we were plotting x and y each as an array in this case with only one element but here you see I define my x value as an array of x values and therefore y becomes an array of y values so I can just reference these variables x y because they each do represent an array in this case then I decided to make the line red so I put it r in quotes so there we go and when we graph this then we can see I have my graph and yeah that looks about like that would be 2x plus 1 with the red line all right so let's talk about some other things we can customize here now yes r g b work well you know I just had to put b for the blue line r g for green and if I want it to be a black line then I will put k so you see r g b c m y k those all work as you know simplified ways to define the color of the line if you don't put anything python will actually assign a color to each line and it'll cycle through so that if you plot a few lines they each get a different color but if you really say you know okay I want it specifically to be this line for this color you can define this and then other than those major colors you can actually just write in colors then you know there's no one letter abbreviation for pink but if I want my line to be pink I can write in the word and I can't say like every color that will be acceptable here but it's going to be a bunch you know if you want a line of a particular color type it in try it and there we go so we have all these different ways to define the color of line because remember this plot when this plot graphs the default is that it's a line so if I want it to be a point then I would have to define these definitely not as an array but as each an array of one value and then the the letter but then something like oh for a circle or the carrot for a triangle or something like that so or a dash so you know we could define if we just wanted to be a point we'll see that in a second here so there we go so we have our axis and our line but we're you know we're not done customizing it first of all let's take a look at a look at these tick marks you know zero and then every 2.5 maybe I don't want it exactly like that we'll change some of these things and maybe you know this seems kind of blank maybe I want to see the grid lines so here's some other things we can do all right I'm still going to import certainly matplotlibrary but I'm also doing numpy because we use that for some of the things for graphing and same thing I'll define you know the window up here and the x values based on that window so for now I'll keep this you know the same axis I just like blue so we'll keep that now notice when we do up here figure and axis so the labels would be in the axe variable so axe dot set x label axe dot set y label axe dot set title there we go x values y values and some graph and I didn't mean that some graph like whatever I meant more like you know like from charlotte's web or some graph so anyway so we have these and I commented these out we'll get to these later and I have a few other things here so I still have one y value and then I'm going to plot that now notice this I'm going to define this as a label you know it can have a label rather than a color rather than a color but notice no color I can also do a color but since I don't have one we'll see what color python assigns to us and then I decided to plot a point and in this case it's red and see zero red or that's actually oh the lower case o so it's going to be a circular point and then this one's going to have a label too and I'm going to plot something else here's same x values and then notice I can define the y value up here and then say y right there or I could put the y value in here directly either way whichever you feel like doing I don't want to show you the different options here and again we have this label also so let's just take a look at the x label the y late set x label y label and the title and then we'll see these different these different lines so there we go and you know we get nice orange a different shade of blue and I define that as a red dot so there we go but what if all right so let's see what if I want the axis to show the grid it looks kind of plain what if I want to see the grid so when I comment that out and this one notice true is a capital T it will actually show the grid lines and you see it does line up to the tick marks that are already there every 2.5 but there we go so if we want to see the grid lines and we have this I can and we have this and now we have our x you know our labels x values y values some graph you could actually put the graph and in one of the later units we'll look at some details about how to even automatically if I wanted to graph one line and have the title of the graph be that line but you know you could always just type that in you know instead of some graph you could actually just type that in as a string you know the equation of the line okay so let's take a look at numpy again and in this case let's say the 2.5 in each direction is not really what I want so again we have x dot and we're going to set x ticks and set y ticks so setting these tick marks on each axis so it's a different sort of array I'm going to do num mp dot arrange and what do I want to arrange very similar to the way we did x values I get my minimum my maximum and then this is how often do I want to tick mark every two numbers so that's what we're going to do from y min to y max and you see again basing it off of those original variables if the window changes then all this will update automatically so there we go so let's just take a look at that supposing I change the tick marks and we see then now every two and maybe that's a little bit better instead of 2.5 and we see these now if I wanted it every one then I'm going to change that just to one and notice this is just for the tick marks along the side but up here when we do x dot grid true that's going to just follow whatever tick marks we've assigned so now we just change this every one and now we get this sort of graph where I definitely can count the boxes and see you know let's take a look at the slope of each line let's see these and python still does it around the edge so that way it doesn't get in the way of anything that's in the middle of the graph all right there we go so we can keep this that's that's pretty nice okay so what's one of the things we have all these labels but we didn't see them anywhere so if you have all these labels then we add this other plt dot legend here we go and we can see these labels so I wanted to show you that each of these labels we can have you know this line we labeled with the equation the point I just wrote the word point but you could put anything and the other one labeled with just some more steeper line so we could always do this and in the same way you know even if python assigns it you'll see the matching you know which line are we referencing which point are we referencing so some good things that we can do with these we can have the tick marks or not we can change how often they come up we can have the grid or not we can change these labels all right and I encourage you just to get in and you know tinker with this you know take a look at all some of the different ways you can you know match up different graphs you can you know set different things and we will get into even more graphing but that's going to be when we get to systems of equations and some other more complex graphs so then we'll revisit this and then we'll you know go a little bit deeper try a few more things with the graph but I think I think this will get you to be able to display any function you have and you know hopefully display it in a way that you say yeah this is exactly how I wanted it to look there we go customizing your graph all right so yeah get in there and tinker with this and see see different ways that you can change the graph so let's talk about slope how can I describe this line that's on an angle using you know describing how it goes up and over so that's what slope is picturing these lines that have a slope to them that they go on some sort of angle but we're going to describe them going up and over like steps how much am I going up and how much am I going over up and over up and over like steps so if I have two points and if I have the graph that I'm looking at that's great I can just count it down that's great I can just count you know looking at two nice points that work out as integers that makes it easier to count so I can say from this point to this point I'm going up three one two three and then over one so up three over one well then my slope is three and I can do the same thing you know from that to the next point I can go up three over one plot a point up three over one plot a point etc and it would be the same slope anywhere on the line because it's a linear equation it's a perfectly straight line so that's great I can count if I don't have the boxes or you know just have things like this but if I have the points that counting that how much am I going up that's the change in y because y tells me if I'm going up or down so if I look at this I'm going up I just counted three but I could also subtract taking a look at the y values four minus one or then how much am I going over and it's always over to the right so I could look at the x values so from one then to two two minus one how much am I going over so it's always over to the right in this case it's positive because left to right it's going up if it was left to right going down then my second y value would be less and when I subtract then it'd be a negative number so it's always going to the right but y would be positive if it's going up or negative if it's going down and so if I had these and I can count but looking at this I know I can subtract so what's that formula look like well I can write out the formula here slope m equals and that's right m for slope because it's how much we move on the graph so somebody started using m and it caught on caught on so we're gonna use m for slope how much we move on the graph and remember I said it's how much am I going up so that's the change in y and I can subtract that y2 minus y1 and so I would use a little subscripts you know y2 y1 and that indicates my second y value minus the first one then the change in x would be very similar x2 minus x1 and again the subscript for the second x value minus the first one okay so now that I have this formula let's plug in these numbers and see so we'd have four minus one or minus one I'm subtracting my y values and then two minus one two minus one subtracting the x values and what do I get four minus one is three two minus one is one and three over one any whole number over one that you know divided by one it's a whole number I don't have to write over one so I can just write three so that's where anytime we see anytime you see a slope that just is a whole number it's that number over one and there we go so we have counting if I have the graph subtracting if I just have these two points and you know I'm using that formula so this is great it's the same formula you know anytime we have slope for a linear equation so let's take a look at how we can turn this into code because I want you to get into the mindset that anytime we have a formula you can write write a program for this and you know there we go input the numbers and output in this case the slope so let's take a look at the code and we'll see how we can do this now this part is going to be brief because I just want to show you that you can connect any formula if you know here we we're going to define our x1 y1 x2 y2 and put that into the slope formula slope equals y2 minus y1 divided by x2 minus x1 and really then this is a useful formula and others you can just define your variables and run it through the formula here we're just going to output the slope there we go all you need is the two points next we're going to work on developing the full equation but then let's take a look at how that comes together on the graph first all right so we've already figured out that the slope is three in our two points but let's say we have this two points and we want to figure out the equation of this line we know that this is linear and I have these two points that we figured out that the slope m because moving from one point to the next we went up three and over one or I just subtract four minus one over two minus one and then four minus one is three two minus one is one so three over one we figured out that the slope is three and we want the full equation of of this line now knowing that it's linear we can imagine here that it would cross the yaxis somewhere and that's what the yintercept is the intercept is where does it cross so we have a nice formula slope intercept form and that slope intercept form is y equals mx plus b now we call the slope m because that's how much we move from one point to the next and we'll call the other one b because that's where we begin on the yaxis so many things happen in this first quadrant where everything's positive so we picture that we begin on the yaxis and then move in that direction of course you know we can go in different directions but so I have this y equals mx plus b now what we have is our slope is m the x y comes from any of these x y points so I'll pick one of these points and then b would be the yintercept it works out that way so if we take a look at this I'm going to take one of the x y points how about I take this this first one here because it's one one that that would be nice and easy to calculate it works for either one so when I plug in this the y value is one and then the slope which we just figured out was three and then the x value is also one I'll just put that in parentheses so notice mx you know in my math notation I don't have to write that I'm multiplying just because they're next to each other so I'll do the same thing when I plug in you know m and then plug in for x and now b I don't know so that's where I have I plug in slope that I know one point so that's four things that I know one point one point one point one point two things I know three of them I can figure out the fourth one and we'll do this multiplying one equals three plus b and remember our one step equation subtract three from both sides so I get negative two equals b so now that I have this I figured out that the slope is three I figured out that b is negative two then I put it together leaving x y open because any x y point on this line will work in this equation and my final equation is y equals three x minus two so there we go we've figured out this slope intercept and so now I know that minus two it crosses down here so that coordinate point would be zero negative two and we can see we can see why this is what it shows up like this because when x is zero whatever I plug in as an x value it's good it's going to zero out so three x three times zero it zeroes out and then when x is zero that drops out and then I have minus two so we see that that works out so this is our slope intercept equation and we can when we see this now if we know the slope we can generate the equate slope in the intercept if I had this line I could generate that equation we're going to pretend that that's a straight line but if I had this but if I had this line I could generate that equation oh where does it begin at negative two oh I know that that's b and then I can count for the slope up three over one so then I know that the slope is three and I can go the other way if I had this equation but didn't have the graph I could say oh I'm going to begin at negative two zero negative two plot that point and then the slope is three I would go up three over one plot a point up three over one plot a point and if I was doing this by hand you know paper and pencil I'd probably plot like three points and get out the roar and connect the dots but what we're going to then do here what we're going to do here is take a look at how we can write the code to develop the equation so all I would need is two points and I'm going to do more than calculate the slope I'm going to figure out the full equation so we're going to look at how to take two points and develop a slope intercept equation so now we're going to put it all together and develop the equations so like before we're going to define our x1 y1 x2 y2 from two different points and we're going to calculate the slope which now we're going to call m that's been the goto variable for slope m for how much the line moves so same formula but now it's going to be m equals y2 minus y1 divided by x2 minus x1 then I'm going to define the y intercept which is b and that's because that's where we begin many things happen in the first quadrant where everything's positive so we begin on the y axis somewhere where x is zero so we'll connect this with the algebra that we we looked at you know how if how do I if if I know a point and an x so an x y value and a slope and a slope how can I solve for b a couple steps of algebra so then b is you know y1 minus m times x1 now I have m and b b solve print out the equation so this will just print out the equation and we'll see that it'll display nice y equals three x plus four and I still it will still by default give it as a float variable so three point zero it's not worth trying to cast it as integers because this is going to work for any number and then that way does not have to be an integer to to make this work so there we go knowing these calculate the slope calculate the intercept and then put it all together in the formula so then let's graph it same thing here defining my x and y points and I just kept these same points here so develop the equation m equals b equals just because we want to print it out so that we're going to print out the full equation and now we're going to go back to the graph that we were doing before define our x min x max now how do I want to display this line I can graph I can find two other points so I'm going to take the x minimum so we see here in the first line y3 I'm going to take the x minimum and I'm going to convert that times m plus b that's going to be my y value and then I'm going to take the x maximum times m plus b that's going to be my other y value so now I have these other two points basic setup for the graph same as we were doing before and we have now I'm going to plot that that line plot dot plt dot plot and my x values are going to be x min x max and my y values will be these new y values and I'm going to plot this as a red line so if I part if I put an o in here that would put these as two separate red points but just r makes it a red line and now when we run this there we go we calculate the equation and we graph the line good times so I can change anything else I can have any other two points there we go there we go two three and if I kept the same x value we know this actually some of this would break but it might still graph it but we know that that's not a function there so there we go six and I'll make this one eight eight just to show that we can just change these and all the rest of this will work solve for m and b get our equation plot them here and when I run it there we go so 1.25 x plus 0.5 and we see then it must cross the yaxis at 0.5 and then that slope up 1.25 over 1 there we go all right so now we can graph and do whatever you want with the two points you find now that we've worked through the core skills in this unit let's look through some extra problems and I'm going to work through extra problems using the CoLab notebook so you can see how you can apply these resources that you're building and use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here so we're looking at how we can apply some of the things that we've been doing to real life situations and use this information to predict things to figure out some trends and real life or things that show up in a textbook that hopefully are realistic enough so let's take a look at some examples here and we'll work through these so if we look at 25 a town's population increased at a constant rate in 2010 the population was 55,000 by 2012 the population had increased to 76,000 if this trend continues predict the population in 2016 so we want to notice that these are two x y coordinates time and population and time if you have it it's going to be on the xaxis almost all the time so if we look at this so 2010 55,000 2016 76,000 or 2012 76,000 so when we when we do this we have I could make 2010 the x value but I could say hey hey this is the beginning of this situation I'll call it time zero so in time zero it and 55,000 these are nice even thousand so I just might call it 55 so time zero the population is 55 and 2012 is when we have the next year so that's two years later so two and then 76 so we want to take notice that we're recognizing these as you know x y coordinates that we can put on a graph and we're going to use that we're going to predict in 2016 so let's take a look at how we would do that now hopefully you've already been putting together some things that you know that you can use to graph you know your colab notebooks so that you would already have this something like this set up you know graph you've already done the imports this is the only thing that we're changing remember this for the two points and then we're going to calculate the slope and the intercept and everything so x1 0 y1 is 55 x2 I would want that to be 2 and y2 is 76 so you see that that matches up 0 55 2012 76 000 and these this would then be the only thing you needed to change is your two points because all the rest of this you'd have this you know already set up develop the equation so you know we're going to calculate the slope we're going to use that to calculate the y intercept now we happen to know because we have x1 is 0 so we know that the y intercept is going to be 55 but that's okay we're going to print out the equation and then our classic graph now I would normally have this set at you know negative x min negative 10 x max 10 y minimum also negative 10 y maximum 10 so this is the other thing that we would change because we look at this graph and an x minimum of negative 10 so in time that would be 10 years ago but you know we're we're not going to worry about going in the past and making that negative 10 so I'll just keep it at zero and we I'll just keep it at zero and we can you know look at it from there then x maximum 10 we can keep that that's probably just as good you know we're looking at the most six years for this situation and y minimum I'll also make that zero actually because y is population so y minimum being less than zero would just be weird negative population they're not going to be in the upside down or anything all right or y maximum and I picked 150 because we already start at 55 and then we're going to 76 and we're predicting a few years in the future so I wanted to go up a little bit 100 didn't seem like enough so we could always change these so all we need to do is change these and notice all the other things for the line that we're going to graph so notice even though I'm printing out this line I'm still just using these x min and max and then two more y values to calculate this line and we're just doing the line that way there's other ways to do this but we can keep this for how we're going to display this line this this works for linear equations and we still keep our basic setup now here's where we're also add the details so again hopefully you have these and you could also comment these out and then use them as needed like I have these commented out about setting the x ticks and the y ticks we'll see if we need to we'll see if we need to change that and you might have the default x label as x values or y labels y values but we can change these here time and population and I like I like seeing the grid especially for this situation so I'm going to put that in as true so we have these details that is that you could you could have your setup and have these all commented out that all you need to do is uncomment them as needed and then there we go we're going to plot this linear function and then here's what it looks like when we run it so we figured out the equation so it's going to be there it is 10.5 x plus 55 so we see this trend and we see it starts at 55 increasing about 10,500 every year so year two we see yeah I'll estimate that as 76 year four and then year six this is what we want now this might not be exactly 120 we could we could plug that in and see because now we have the equation you know what what is the value at six years but also this is enough and that's why I didn't worry about changing the tick marks because the default that it gave us I think that actually ends up being pretty good so there we go as a good enough estimate I would say 120,000 for you know population estimates you know you know the fact that it might be you know 119,500 or something like that you know our rough estimate is going to be 120,000 and that works so you see and then we have our dice labels time and population the grid marks help so this is how we want to do this we can you know we can set up this equation and see the graph and that helps us answer all these questions there we go we see the trend and we can predict the population in 2016 that's about 120,000 all right now here's another one the number of people afflicted with the common cold dropped steadily by 50 each year since 2004 until 2010 okay so we're looking at our keywords here so dropped steadily then we're talking about a subtraction and then I'll make time zero 2004 since 2004 is the first not first year we we mentioned this now also a lot of these in real life yes they wouldn't be perfectly linear but a lot of times that linear trend gives us a decent enough approximation and that's that's the idea for some of these it's enough of a prediction so now we have in 2004 875 people were inflicted and notice even with the comma there you can definitely see there's your xy value year and then afflicted and then in 2010 it keeps dropping so one of the things that we can do here well this is find the linear function so one of the things we can do is I can make 2004 times zero and then that's 875 so if we take a look at this 2004 I'll make that time zero and then this one I'm going to make 875 875 all right so now if it drops steadily by 50 each year all we have to do is we just need one more point if this is linear so we can just do the subtract you can do the subtraction in your head here then if we have year one then it drops 50 so then that's going to be 825 and you see that's that's all we need two points and we'll be able to do everything else calculate the slope calculate the intercept and display the equation I might even well now the time and population won't mean anything so you know number of people afflicted you know okay how about how about cases number of cases of the flu there we go so there we go time cases and you can hit control or you can hit shift enter or click this and we see this trend negative 50 was still in the y equals mx plus b negative 50 x plus 875 and a lot of times you would see this they'd put the 875 first and and then subtract but that's okay now also this notice that you know my x y axis I'm not going to show anything why because it started 875 and you see 140 doesn't cut it so we have to go to x minimum and maximum that's fine y minimum that's fine but y maximum it can't be 150 maybe I'll call it like 900 so now we can see the graph and sometimes you know you graph it and you say well why didn't it show up and then you look and see oh it's the window out of bounds here so there's 875 and we see this downward trend so there we go and we can use this to predict you know in in any year now there's other ways to get the exact amount we can you know for any any year we can actually plug in that x value and then solve so that works and remember that even works within a print statement so if we have you know so the interesting thing is this plot dot show um that needs to be last so if I do another print statement I could I would do it later but I could right under here you know the same place where I print this I could print so print this I could print so what if the question was how many you know what's how many people had the flu we might say oh look at this two years later you know we had the now we we can do the subtraction so let's say like five years and you see given our graph here you know we see this trend we can estimate it but we don't know exactly you know it's not detailed enough to see it so I can say oh about in about five five years how many people were afflicted with the flu and supposing I want that exact number so I can go back to this and then x is five so one of the things you can do is in the print statement you can actually just do do the math and you can have like a more elaborate print statement if you want but we can just do our math here negative 50 times five plus 875 so we see you know our negative 50 times five plus 875 and that would give us the y value what would be the value what would be the number of people afflicted after five years and again you could have a more elaborate print statement to say something but since we already know what that question is now that that's 625 that that means something to me when I see it there so you see that that might be you know could I estimate it exactly oh that's 625 and not necessarily but I can plug in the number and get it so we see you know some different things we can do see the graph we can answer some questions do some math for you know some specific some specific questions related to this now all right all right linear function so here's another question when will no one be afflicted so we want to know looking at this graph when is the y value the number of cases going to be zero now rather than now one of the things you could expand the graph is the y value is until it gets to zero we'll come back and do that in a second but one of the things that we could do is if you already also have your setup to solve an equation so you know you have this and remember this was the whole setup to solve an equation and print the solution and so the only thing we needed to do here we keep this equation variable the only thing we need to do is put your equation there in this case i'll put it here h 75 minus 50 x and remember it's remember the python 50 times x so that's by default set equal to zero so when we run it so the answer is 35 over two interesting that gave us a fraction but there you go so that's 17.5 so 17.5 years it's going to be zero so yeah now again fictional numbers i feel like you know in 17.5 years from now no but it's not going to be that nobody has the flu or something like that but we can actually take a look at this and we can change the x maximum to 18 and then we can see this trend so we look at that you see then according to this trend you know time zero and that would be you know at 17.5 years and in this case according to these numbers who knows it may in some particular town but in 2004 so 17.5 or 18 years that would be like 2022 and yeah i feel like that would it's not that there's nobody afflicted with the common cold all right but anyway you see the trend though we see you know the these are realistic enough that we can use these to take a look at how we would solve these and this is what we want to use this math for predicting trends given the information that we have so here's another one where they even give you the partial line based on the graph they have all right so this is showing profit so this figure one is showing profit in thousands of a company in a given year x and they also do x represents years since 1980 so there we go if x if time zero is 1980 so then 20 so so 20 that would be 2000 and 30 that'd be 2010 we see you know there we go now given these we want to find the linear function all right so let's take a look at if i want to look at these i just want to find two nice points that i feel confident that i'm not just estimating the points so i like this first one at year five it was 10 000 now it it's interesting because it says y in thousands so therefore 10 000 would be 10 million you see so if y is in thousands then 10 000 would be 10 million in which case they could have just said it was in millions but that's okay and then we have so five i'm going to shift it to millions and just make the y value 10 so five ten and then let's find another nice point i like this 25 four so we can go back and we can plug in in these so i don't have that zero value and we're probably going to want that at some point so five years then we're talking 10 million and then at 25 years then we were talking two four four okay so there we go we have that point five years 10 million 25 years 4 million and since we already see this graph since i made them 10 i really could now we could we could take a look at this and say oh yeah 12 is probably fine as far as a y maximum and we could continue this to 30 or you know we can take it further so when i go to graph it zero x maximum 18 is not going to be enough maybe i'll just make it a nice round 50 y minimum fine y maximum 900 that would the scale would be so much it would this would just be in the tiny corner of the graph so maybe we'll just call that 15 or something like that all right there we go and for this one we could just delete this like the space in there we could just delete this and we have i'm going to print out the correct the equation so when we run it so here's our equation negative point three x plus 11.5 and we see this downward trend over time and here's another one where if i wanted to change these tick marks maybe i could change this to the x ticks is two enough yeah yeah maybe and then i can change the y ticks is two enough yeah maybe we'll see and we'll run it so we see we get much many more lines all right and we'll see what happens we see we get much many more lines all right and with that we see that the uh this is 38 now just because these end up being rectangles more i might change my y ticks to one i think i just like that better and you know in doing this you can you know change some things and go go there we go so with this then we can really see the trend there's your 11.5 and then we can see this downward trend down 0.3 so it should go you know over 10 it just went down three to 8.5 here we go and then 38 years later then they would have no profit because that's the trend that we're saying there we go so whatever this company is this is their profit since 1980 and then and then there we go um um 38 years later then they would have no more profit so who knows what company this is but you know our fictional company is you know something would have to change but that's where the prediction lines you know the the the simplest prediction is okay these would go in a straight line whatever trend would continue in a straight line unless something changed but we know then in uh normal business normal daytoday life things do change and that's why our lines aren't always perfectly straight but this gives a often enough of a prediction oh and you see then time and then cases then we would change that to profit okay just just to make it official here time and profit so there we go another another situation and we can see where it would start and then profit declining and that's enough years that you know 11.5 million was a lot more money in 1980 and then profit declining and yeah so this this company is definitely whatever they were doing there you know they were in uh in sad shape all right and we have the y intercept and all that okay so we see another very very similar we'll do we'll do one more here so consider this scenario 2004 school population was 1700 by 2012 the population had grown to 2500 so all right and again assume assume the population is growing linearly all right now how much did the population now how much did the population grow so this a is really just the subtraction so 2500 minus 1700 is 800 so it grew that much and then the average per year you see anything per year the rate that's the slope and we can divide that but we're also going to then just plug these numbers in and you'll see that we can see the slope so 2004 maybe we'll call that time zero 2004 1700 2012 2500 and i might even leave the hundreds because we want it to be you know more exact we know that the population would be continuous it wouldn't just jump hundreds so 1700 and then y minimum and then we have 2500 so then after this if i wanted to graph this yes then my y maximum on the oh i put in the wrong so there you go time zero 1700 1500 and so in 2012 so time zero and then in 2012 so that's eight years later it was 2500 so eight years later then it was 2500 so here we go okay so we'll have that and x minimum and then the x maximum so let's just make it a nice even 10 and we could always change it if we need to y maximum 2500 but we're going a little bit further so let's make it 3000 and see if that's going to be enough there we go and do i want the ticks for right now see if you comment them out the graph will as we saw it will still give you the it will still give you the tick marks it's just that the default whatever python wanted to calculate and where you can force them into however often you want there we go and for school population yeah all right so we see it's growing by about 100 a year here and maybe that's you know depending on what you wanted to estimate these tick marks might be fine the grid might be fine and you know if you wanted to you could always add more change it you know i think that works out so growing by 100 every year and we can use that to predict so the average probably growth per year was 100 there we go 100 x so the slope is 100 and there's the equation for the population for two years after 2004 so we see you know we've done a few of these i think i think we don't need to do another population model but there's some other form there's some other uh practice problems that we see in other tech all these all these are coming from that uh textbook the second textbook algebra and trigonometry because that's a lot of good business applications in it so you know here's the idea that just the notation g equals f of p the amount of garbage g produced by a city with a population p so we can go a g equals f of p and that's how we would read that so it's a function of population and what that tells us is population is the independent variable and then garbage is the dependent and population very often is an independent variable that causes a lot of other trends so we look at that and we see the same type of thing the town of tola has a population of 40 thousand and produced 13 tons of garbage each week express this information as a function so now if we have this one of the things that we would guess is that if it's a function of population then no people would mean no garbage so in our y equals mx plus b scenario b would be zero and notice we because we only get exactly one point here 40,000 13 tons so if we wanted to set this up you know we want to look you know we know that we have the python scripts to solve this but if we want to set this up we want to take a look at at how we're going to set this up 40,000 is going to be the population and who knows maybe i might just call it in thousands and then 13,000 is going to be the population and who knows maybe i might just call it in thousands and then 13 tons same thing i'll just call it 13 um and then we say well that's one point where do i get the second one but we have to look at the situation would i think that it would start at zero zero and if that's the case then we could go back and say so here's zero zero and then remember our x values are going to be population so we'll call that 40 and then that's going to be 13 because it's in tons and therefore the x minimum zero fine but x maximum 40 is probably not even enough um 40 is probably not even enough because we start with that and we can expect that it increases and we can expect that it increases so then let's say the x maximum would be i don't know let's make it 100 and we'll see y minimum zero now 13 maybe make it like 50 we'll see see if that's enough of a y maximum so there we go and we can just write this in thousands and we can make this in tons so thousands of people tons of garbage so we have this trend here there we go 40,000 generates 13 tons of garbage and we can see this trend here so there's the rate here 0.325 0.325 x so remember the x value is in thousands so every thousand people according to this fictional scenario makes 300.325 tons so that would be about tons 2,000 pounds so that times 2,000 would be about 650 but then if that's thousands of people so that's each person making less than a ton of less than a pound of garbage maybe so again this is this is not the you know latest research this is you know a couple numbers that seem realistic and then what's the meaning of this and we would read this as f of five equals two so notice that the function like our functions in python that five is the input and any input or independent variable that's x or you know even though we call them p and g here so that input five and then output two so f of five is two so we would expect then that that means that when we're talking about 5,000 people then the 5,000 people would produce two tons of garbage so that's the meaning of that you know five is the input two is the output so in our x y scenario here that that's what that would mean that's what that would mean 5,000 people would produce two tons of garbage all right and so let's go over here to 89 and another one you see don't get caught up in the alphabet soup of of this as people use different notation notice the trend of of i would read this as g of a so it's a function of this input a so the number of cubic yards of dirt d is needed to need to cover a garden with a square feet so d for dirt is g of a and we read like that g of a and the common notation you'll see in just general math is f for function and then often we just go through the alphabet fgh for other functions we want to talk about in python and pretty much across computer science your function can and should have a much better name so you know that's something that computer science has an advantage of but nonetheless you'll see this all the time you know g of a so again we notice the trend a is the input that's the area and then given that area then how much dirt would it be so we have 5,000 square feet area requires 50 cubic yards of dirt so that 5,000 requires 50 now we're not even going to do any calculations to this but i just want to show you that it that would be g of 5,000 equals 50 so that's just how we would write that given that input you know area that we would know first then therefore how much dirt we need and that that would just be how we would we would write that there's we don't need to do any math to that right now and the same thing g of 100 equals one so 100 cubic yards or 100 square feet of garden requires one cubic yard of dirt all right and number and question 90 we'll see just another situation f of t so there you go some function the number of ducks in the lake after t years after 1990 so f of five is 30 so we know five is the time years after 1990 so in 1995 there were 30 ducks in the lake and then f of 10 so years so in 2000 there were 40 ducks in the lake and given these you see we can x y x y we can find the overall equation plot the points graph it you know make some other predictions but that's the notation here and this is what that means all right now 91 the interesting thing is for just answering these questions it this won't matter but this is not going to be linear but we can still answer these questions because each of these is still going to be the same each of these is still going to be the same now notice h of t and now in this case h for height but you know again another way of expressing this so as x y values x is one y would be 200 the h the h of one is 200 so that x value is t for time in seconds so after one second it's 200 feet up after two seconds it's 350 feet up and again this is not linear so the same things that we've been doing actually won't work for this but we can still get the meaning of each statement here and 92 the one to one is this is still a function but that each x value like each x value and y value pair up like that neither of them show up again but this is a parabola because we see x squared and we'll talk about parabolas later but the one to one that there's actually positive x values and negative x values that might still have the same y value so that's why it's just not one to one but it's still a function i don't want to talk too much about that we'll get to these these types of functions later but i just want to mention that in case you're looking at that and saying well what does this mean one to one so in number 60 now this is also not linear and you see the height of a projectile is more like something like this after t seconds here's the function h of t is the height of a projectile seconds here's the function h of t equals negative 16 t squared plus 96 t so that's showing that you know it isn't linear in fact it's a parabola because it goes up turns around comes back down okay so the domain anytime we talk about the domain that's the the x values so the domain is all the x values that are possible here and then the range this doesn't ask it but the range is all the y values and this actually has a limited range so uh because this is a parabola that goes up and then comes back down there's a maximum y value so after that y value after that y value there's no more like y values beyond that are not a part of the range because it'll just never get to those numbers then the domain mathematically the domain is all real numbers but realistically in the context of the problem time zero would be the first part of the domain so you see mathematically these other numbers exist and they don't break this problem but realistically if i'm launching something it starts at time zero and yes i know that we can talk about t minus whatever and talk about negative values because we're awaiting the launch you know and this is second so if it's like t minus 10 then it's you know the t value is negative 10 and that's 10 seconds until the launch but realistically we're we want this to be time zero and then the other one would be it does go up and comes back down so there's a time where it hits the ground again and beyond that it's not really within the scope of this problem so let's take a look at how we can solve this just because even though that's beyond what this is asking i want to find out what that t value is when does it come back down to the ground all right so negative 16 t plus 96 t we can go into this where we're going to import our symbols and instead of t we're going to make it x just because i already have x as a symbol so you could always change it and make a t that's fine so negative 16 and again we're going to use x squared minus 96 x and that's always the this is the equation set equal to zero and that's what i want what x value makes the zero now negative six would not be plus 96 t oh because i put minus yeah all right so it only gives us zero what if i have so i was doing this with things that only had one solution so storing this as a finite set and i just printed the first one but this does have two solutions you see and i mean i could get re i could get really fancy here and then actually just make another print statement but see this is my finite set it's not zero six as a coordinate it's x equals zero or x equals six and i could then put this zero and i could have another print statement there we go to show the first one and but this is just a matter of you know how you want the output to look okay so i'm going to go ahead and i'm going to go ahead and i'm going to go ahead and show the first one and but this is just a matter of you know how you want the output to look and we have these you know we also have the you know which we looked at before you could you know loop through this to get solution to get multiple solutions but there we go yes x equals zero it's on the ground and then x equals six so that's another way that we could you know that we could graph this and we see that it back on the ground at six now this is a little bit ahead because we'll talk about quadratics later so yes we will we will not worry about graphing this because we'll get into this with quadratics but this gives us the solution that at six at six seconds later it's back on the ground so some projectile launched it went up and turned and i'll tell you this that you know halfway through these parabolas are symmetrical so halfway through it's halfway through it's uh at its maximum point so we could even print here what is that maximum point and we can do that math negative 16 here's what i'm going to do so halfway through that so that would be three would be x and you see that's really the idea that you know we set up the situation where i have x and then i can plug in my value so zero six zero zero six it's back on the ground so three seconds later it goes 144 feet up in the air so realistically then the domain for this function as that's that's practical not just like you know mathematically it exists but related to this situation the the only number the only x values that mean anything for this are anywhere between zero and six including zero and six because everything else doesn't really mean anything for this situation you know after this then if it keeps going down like it doesn't go back down into the ground and the y values here are between zero and 144 so that's my domain between zero and six including both and the range between zero and 144 so you know these are some things we can look at you know solve when does it equal zero and plug in some various numbers all right so if we look at 61 just again reading reading is these we might not even need to do any code for this we have this situation the cost of making x items is 10 x plus 500 and the fixed cost is determined when zero items are produced so find the fixed cost and remember zero so then if x is zero that 10 x drops out and then we're left with 500 that's why it's be gate it's b for begin you know when you know before we produce anything you know the fixed costs are 500 now maybe this is some sort of business and 500 is like rent and utilities and everything that even if they're there they didn't make anything they still had to pay all that and then they pay ten dollars for whatever you know for whatever they're making so then the cost of making 25 items would be 10 times 25 we just plug that in 250 plus 500 750 all right and supposing the maximum cost allowed is 1500 what is the domain in the range so if we have to set this equal to 1500 now if we take a look at this and i'll just again write this here so if we have 1500 equals 10 x plus 500 and notice i'm not this isn't python syntax because i'm not worried about doing anything with this yet but then what do i want to do i want to put this equal to zero so if i subtract 1500 from both sides then i get zero equals 10 x minus 1000 because if i subtract 1500 from both sides and so that's set equal to zero 10 x minus 1000 then that's where i could plug this in here so you see you can work out the math before you get to the python code so 10 and then here i do need 10 x minus 1000 so if that's the case now with this one i know there's only one solution so if i keep the other one that's going to give me an error i know there's only one solution so if i keep the other one that's going to give me an error so whatever it is we know that we could only make a hundred because you know maybe they only have that budget you know whatever they're making they make a hundred of them their total expenses were 15 total expenses were 1500 and then you know then we have to go out and sell whatever they are i don't know tshirts you know whatever they're whatever else they're making all right okay so we and we see these same types of things we i just want to look at the setup of this that at the number 44 at the start of the trip the odometer on a car read 21 395 at the end of the trip 13.5 hours later the odometer read 22 125 there we go assuming the scale is miles so average speed we want to take notice that that anything like a rate like that that slope and we have two values time zero and then the miles 21 395 and then time 13.5 and then the miles and we can go through and plug that in whether i care about graphing this or not it still will output the slope which is the answer to this question the average speed and that's where average speed it would be a linear function whereas realistically we know especially over 13.5 hours the speed's going up and down you know sometimes stopped sometimes faster sometimes slower but we get that average speed we know that whatever that answers they're not going to that exact speed the entire time all right and 45 the driver stopped at the gas station to fill up his tank and he looked at his watch the timer at exactly 340 this time he started pumping gas in the tank exactly 344 the tank was full now if i was filling gas for four minutes especially with these prices these days i would be expecting it to be a lot a lot more money but he noticed he had pumped 10.7 gallons so surprisingly not that many not that many gallons but what is the average rate of flow of the gasoline so again time is going to be x so if we want to call it minutes we can call it four minutes and then 10.7 gallons so we could calculate to gallons per minute or and again same thing plug it in you know 10 well actually this one because we already did that subtraction is just 10.7 divided by four so some of these you know you have these scripts and everything available but some of these you might be able to solve even before you look at those or you could break it down into seconds how many seconds in four minutes and you know the rate of flow per second but that's just you know other possibilities gallons per minute is probably fine so we see all these situations we want to see like that recognize how we can set these up and the things that you're building that you already have to be able to solve an equation even if you know the equation is something else and you can just do one step of algebra you know because that's it you want to get it equal to zero so keeping in mind from from earlier that one step of algebra so then you have it equal to zero and you can solve it so you'll have these things set up solve any equation or you know graph a solution find the rate all that so you know if all you needed was the rate you know everything else here would be bonus but it'll still also answer that question for you so we want to see that you know different ways that we can interpret these questions and solve solve the problems graph them take notice of some of the keywords and hopefully you see how you can apply some of this to different situations that you come across you know look look for situations in in your daytoday life and how you can apply these all right so hopefully that was pretty useful for you so when we talk about factoring in algebra then we're going to talk about dividing out something so any factor is something that we're multiplying and therefore i'm looking for things like when i see a number what am i multiplying so when i see a number like six then i can say oh what are the factors that's two times three and here i'll put the dot for multiplying to separate the factors so you know when i when i look at a number you know like 15 then what are the factors oh that's five times three and it's useful to be able to think about numbers and what are the factors because that helps us reduce fractions and simplify other other terms so for example if i had since i'll use these two numbers here supposing i had a fraction that was six out of 15 and i said oh well i want to reduce that fraction to lowest terms there's a better way to write this so then if i remember that they both are divisible by three that three is a factor of both of these then i can say six divided by three is two and fifteen divided by three is five and so this is the that reduced is five and so this is the that reduced fraction and i got this by factoring i recognized the common factors and i divided out those common factors so just like other parts of algebra if i do the same thing to the left side of the equal sign and the right then it's still equal here with a fraction if i do the same thing to the top as i do to the bottom but that has to do with just multiplying and dividing adding or subtracting doesn't doesn't work so if i have these i can reduce you know reduce my factors i can even keep going supposing i had something like six out of 24 and supposing i didn't recognize that 20 that six was a factor of 24 but i at least saw that they were both even so i could then divide by two six divided by two is three 24 divided by two is 12 i could start reducing again recognizing that common factor or then i could take it further oh three and twelve both divisible by three and then i could say three divided by three is one twelve divided by three is four so again i factored things out and therefore reduced the fraction now a lot of times you know we see things and we don't we see fractions and we we can't you know especially bigger numbers we don't right away think about the common factors and we can always do long division in a couple minutes i'll show you how to how to do this with code to set up a loop to find the common factors that way even if you don't see them or if it's a lot and you know how do i go through all these possible factors i'll show you how to write the code to develop a loop to do that find those common factors but this is one of the big uses of common factors another use and this is more related to other algebra topics we might not need this as much as far as writing code but if i have something like you know 4x plus 16 something like that and i say oh these two the four the 16 have a common factor which is four and i can divide that out and we can divide it out like this way so this is another use of the term factoring because i see these common factors and i divide it out 4x divided by 4 is what is 1x so i'll just put x and then 16 divided by 4 is 4 so and again this has more to do with other algebra applications but i want to show you this because this is also factoring out then you know if i have this i see the common factor and i can divide it out and it looks like this or i can distribute the 4 4 times x is 4x 4 times 4 is 16 and get back to that so that's another use of the common factor one of the other things we're going to do is talk about factoring out square roots and that also i'm going to show you how to do this but then we're going to look at the code you know how to find common square factors and then factor them out but let's take a look at this if i have a square root and sometimes we have square roots that don't work out evenly they're not perfect squares but i can factor them and sometimes that helps because that those factors cancel out with other things later so if i have let's say the square root of 24 now square 25 is 5 that's great square root of 24 almost 5 it'll be some long decimal because it's an irrational number but if i can factor that out recognizing these common factors and now in this case i don't want just any factor i want a square factor so if i remember that 24 is 6 times 4 that helps because 4 is a perfect square and then i can say so i want to identify these factors but i'm interested in the ones that are square factors and four square so the square root of four is two and then since i took the square root of four i still have that six underneath the radical so even if i can't square root the whole number i can square root part of it and factor that out so sometimes then even if i can't factor out something like the square root of 24 i can get it down to something like this and that's the simplified square root this factored square root and sometimes that's really useful now again bigger numbers things that you can't often think about oh is this a perfect square we'll talk about how to write the code to find these perfect squares and divide them out and even use the simpy library to display it in a nice way so that that's really the essence of what we want to do with factory recognizing factors of numbers and this is where even if you're going to write code the more you remember your multiplication tables the better things will be it just makes things you know come together a little bit easier but you know we're looking at numbers thinking about what factors made that number and then we're looking at common factors that we could possibly divide out and so let's take a look at that we'll take a look at the code so here we're going to do the same thing we were doing with working it out by hand finding the common factors dividing them out and it's going to work a lot better with writing code because it'll go through and easily find all the factors for you and to do that we're going to use the modules operator so modulus that is the percent symbol so on the keyboard it's the shift on the five key so what that does is that finds the remainder so i already ran it so if you print five modules three it's like five divided by three but the whole number answer doesn't matter we just want the remainder five divided by three three goes in there once with a remainder of two and that's what it'll print out the two and if we want we'll just comment this one out and uncomment this just to show you another one so 31 module is 10 so 31 divided by 10 is three but that part doesn't matter it's a remainder of one so when we run it it'll output one now that's going to be important for finding factors because a remainder means that it's not enough the number is not a factor but if the remainder is zero then it's a factor and that's what we're going to do use the modulus to find factors so i just picked this number 12 and we're going to put this up in a loop so in our loop so i i made this variable just called test factor so we have for test factor in range one to the number plus one because i'm dividing so i have to make sure i start at one if i start at zero it'll give me an error and i want to include that number itself so i have to do plus one otherwise it won't do that last number so for test factor in range and then we go to this line here if number modulus test factor is zero then it must be a factor so then i'm just going to print out the test factor so that's what this is going to do given my number 12 here it's going to run through that and try each number and see if it's a factor and print it out if it is so then when i run it see it prints there we go one two three four six and twelve all of those are factors of twelve 12 so how can i reduce fractions to lowest terms so let's take a look at this and i'm defining more variables here my numerator let's call it 12 denominator 24 now we know that this is going to reduce to one half and i'm going to define a variable called factor which is one that will be a factor and who knows for some things that might be the greatest common factor so now once i have my numerator to find the greatest common factor all right so for test factor in range one denominator plus one because that's really it i want to you know i want to go up through everything in the denominator beyond that the numerator it's not going to really work out so now if the numerator module so we'll do this line here if the numerator modulus test factor is zero and denominator modulus test factor is zero so for each of those if it's a factor of numerator and denominator now that's going to be my variable factor and then once i have that now i'm going to divide that out so i'm going to do numerator divided by factor and i want to cast it as an integer because that's going to look nicer when we do you know the sense of this is that they should be integers if they're factors so this is going to look nicer when we display it so once i find my factor and you know you know it could stay at one or it's going to get you know the largest factor i can find once i find that numerator divided by factor cast as an integer and i'll just call it n denominator divided by that factor cast as an integer i'll call it d and then we're going to print out the original numerator divided by denominator and then the reduced fraction and divided by d so let's run this and we see that the original was 12 over 24 and the reduced is one half so there we go we can reduce any fraction and you can even copy this code and use it within something else you have or you can put this as its own function and deal with it that way we'll talk about creating functions out of a lot of this code later on in the course so the first thing i mentioned about adding it let's just do this so we had the decimal to fraction code and you know this one we already we had an input rather than just have the number here i have this input i asked the user to enter a decimal number to convert and remember then that input gets stored as digits but it comes in as a string and we've done this before converted to a fraction so i go here you know the length of that input you know how how many digits minus one well convert it to an integer because i want to have an and minus one because that it that will come in as a string that'll include the decimal place so there we go then that becomes my exponent and then i'll still also cast that as a float number which is n and then as a fraction my numerator is going to be the my numerator here will be n times 10 to that exponent so what that's doing is taking that value and moving the decimal place so there we go so the so n has all those digits including the decimal place then this line for the numerator moves the decimal place and then the denominator is 10 to that exponent so now i have an integer for the numerator this will end up being an integer for the denominator and now what we're going to do is just like we were doing earlier i want to reduce that fraction so same thing factor equals one everything else i already had that same loop finding the greatest factor dividing it out and there we go inputting the decimal which is the original number that the person entered and then print the fraction so when we run it enter a decimal number to convert so let's convert something like 0.125 there we go and it took it and it reduced it to one eighth which 0.125 is one eighth and we can run it again just to see that if i have a point zero two there we go the decimal and then that's one fiftieth as a fraction so we can apply that code into other things that we've been doing all right now we're going to take it to the next level factoring out square roots so this is all good to reduce the fractions but remember when we square root something now this one if i just print math that square root there we go uh square you know the square root of 25 here is five great but what if i have something like the square root of 24 now that doesn't work out nicely and by default it'll just give me that decimal answer but what if i want to factor it and this is how we want to factor it i use square root of 12 as an example square root of 12 because underneath the radical 12 is four times three and then four is a perfect square so the square root of four is two and that comes out and then i have a three left over nothing else i can do with that so that's the factored square root we want to find our square factors and divide them out the square root of that there we go so here we have numbered a factor you could make it user interface but i just put it here n equals 12 and max factor i just made that one that's the one that will change and here's i put this as the key ingredient because this is how we get to you know if i have my loop where do i start where do i stop so the upper limit of math dot floor of math dot sqrt of n so i'm going to take the square root of that then that's going to be that's going to be some weird decimal number now i just did this math dot floor and then i added one i probably could have done math dot ceiling also but i just did it this way so take the square root and whatever you know math dot floor so drop all the decimal places you know not rounded just drop them all and then add one so that's going to be the upper limit and now we want to go here here so for maybe factor in range again starting at one zero would give an error to upper limit if n modulus maybe factor squared so you see i'm running through those factors and you know each of these is the square root factor so if i square n divided by that factor squared if that's zero then now that maybe factor is now my max factor so we go through and we're going to cycle through all these you know divided out does this work and once i get some factor that's what's going to be on the outside so then i have the results my original my original number the square rooted factor square factor and there's a reason why i'm printing all of these out here like this because we're going to build upon this and make it look nice in the next step but to show that square rooted factor square factor max factor squared and then the integer that's left over so for 12 since we had that example earlier we see that n is 12 and the square rooted factor is 2 square factor is 4 and the integer is 3 even though i called it integer that was just text it actually comes out as a float so what we have is that this gets to that factor 2 on the outside you know 4 was a part of our inbetween step and then 3 and that square rooted factor and then the integer that matches up with 2 coming out that's that square rooted factor that's the greatest one and then 3 is the integer still in there so like i said we're going to use simpy to make this look nice import math import simpy and from simpy import symbols so now i have this there we go and same variables i had before upper limit there we go and it's square rooting it but then you know find a one more to see where the maximum is going to be the like the greatest square factor i could possibly have so then i have all these other factor and then square they're all starting out as one and i'm going to overwrite these so slightly different variable strategy so if maybe for maybe factor in the range if n modules may be factor squared then we have the max factor is maybe factor squared all right and then the other factor is n divided by max factor so we see here then this becomes the factor that i divide out because i'm squaring it here and then i have the other factor underneath the radical is that original number divided by max factor so then the output variables and to make this look nice we cast them all as integers so the square root of max factor because that's what i want the square root of it cast as an integer and then that's the square root that's my variable square root other factor cast it as an integer there we go it i mean it essentially will be but we need to cast it as an integer here other factor and then the output this is this its own variable output and we see it's square root times simpy dot square sqrt other factor that's what that output looks like in simpy and this presentation here we don't need a print statement in fact that uh that might not make it look as nice but this simpy output so i store all that as the variable and then when i output it here there we go it factored out as two root three and if i put it back to my other 24 that we were talking about before we know that that doesn't work out and so it factors that to two root six because it's six times four and then the square root of four is two and that's what we're doing the types of things that we would be thinking through we just want to translate that into code you know i'm thinking through all the factors of that number and which ones are square perfect squares so 24 i want to find all these factors that are perfect square and i find that it's four and then the square root comes out and then the simpy makes it nice so we can do this to factor square roots and there we go so we have this we can divide out common factors we can reduce fractions we can factor square roots and these are a lot of the things that you know we often do by hand in math and now you have the code that you you can do this you can do this now that we've worked through the core skills in this unit let's look through some extra problems and i'm going to work through extra problems using the colab notebook so you can see how you can apply these resources that you're building and use that use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here so we're going to do a walkthrough of the first certification in foundational math now each of these notebooks there's five of them we'll do three of them for this course and then two of them in the next course but they were i also designed them to be standalone that you know the directions would be enough that you could walk through and be able to do all this still though i'm going to give you the walkthrough uh maybe you already did this and you want to check some things or maybe some of it didn't uh turn out as you expected or you're stuck somewhere so you can always jump to that spot in in this video and see so each of these steps lead you towards the certification and you know we've built upon each thing so the first thing you're going to do is make a copy of this whole notebook this notebook is readonly and this is what gets shared out to everybody so so you make a copy and that copy is going to be in your google drive uh and it will be in a folder called colab notebooks by default but if not you can put it in whatever folder you'd want it to be you want it to be in and this is the ongoing theme for this course you're building your resources so you're going to put this stuff in your google drive uh especially if you have other colab notebooks or something you could make a different folder for everything uh in foundational math one you know or algebra with python if you want to call it that so you make your own folder you're putting all these resources in there that you'll have so you walk through as you work through these you'll understand how to do all these things but then you also have some code that you can reference so you have this in your in your drive i already did this and then each of these i have as a different section heading and then you can click on the triangle here to expand the next step and with each of these being section headings then up here you have a table of contents that you can go through so later on when you build yours you you can jump to whatever part you want you know you can add the table of contents by just making each of these a section heading so you do need to acquire the testing library because this is actually selfcontained you're going to write the code and then it's going to test the code that you wrote and see if it's correct or not so this cell you don't need to do anything to it maybe for other things you might do in the future you might take notice of you know how we import this other library as this raw.py file in github and really save it as a library locally here and then you'll be able to access it so this i have the note here you may need to run this at the beginning of every session and the only reason i said may is because maybe if you walked away for two minutes and come back don't count that as another session but these codelab notebooks they do time out the runtime will time out after 30 minutes of inactivity and that doesn't mean no typing that means no running any cell or even if you are really active all day it'll time out at 12 hours so then you you know you might say wait i haven't i've been active all day and why did it time out they have that time out too all these are security features that you don't just like leave it open for you know indefinite amounts of time all right so you're just going to get this library and you're going to run it and we'll take a look at this so click run and as this is going yep it'll save the library locally and then that's what it's going to reference so it'll say requirement already satisfied even though it said that don't think that oh why did i do this i already it was already okay that's just what it prints out and then when you see this test pass go on to the next step then you know you're good so it imports this and you know now you know now we have this library available and each step will use that to test it so these first four yes i do have add subtract multiply divide i know you know how to do these you probably even know how to do them in python but it kind of walks you through just gradually getting familiar with the notebook you might be already familiar with it but so you know we'll take a look so so we go through just you know two variables and then you're going to have one thing here with the comment change the next line now this was just add so there we go i'm just going to do a plus b and i'm going to click run and you see two plus one is three and then it said code test passed go on to the next step so we go to the next one subtract seven minus three so i'm going to do c minus d and i could hit run or i can hit shift enter which i'll do that time code test passed so this is just getting you familiar and then each of these imports the test so so you've run that first cell and then you have the test and that's what's going to check your code and tell you one of these steps in a little bit i'll do one that that gets it wrong and you'll see what what it'll tell you so here we go so we'll expand multiply and again remember multiply in python like a lot of things is the asterisk same key or most keyboards same key is the eight so just hit shift and it's above the eight there we go e times f all good code test passed and then we divide now when we divide here g and h now they happen to be integers and this happens to work out but if i had them as numbers that didn't work out if they were definitely defined as integers then i would have to do something else because if i divide the answer and if i divide it won't work out the answer will be a float but python gets pretty flexible with this you know i just define g equals h equals and when i divide it's not going to give me a hard time about whether they're integers or not it's just going to divide and there we go so you can and a lot of things that you might work through here if this is your your notebook you might just have things where you define your input or your variables right there in the code but you could also actually just prompt for input and so in that case you don't have to change the code because when when you run it it will prompt for input and then that could be the different numbers that that you want that way you don't have to worry about changing the code so in this case enter a positive integer it actually could for what we're doing here it could be negative but i just put that there and then we just cast it because the input always comes in as a string and then i need to cast it in this case as an integer to do some math to it all right so i need to do an integer or a float and then the only thing you need to do here is following that model i have string b and a lot of these have you know some code that something there that won't break the code but you do need to change it all right it's not just zero it's going to be this and you absolutely could just copy this and paste it there we go now what if i just change this now that's really all you need to do but what if i just said oh just for me i feel like you entered one i want to say enter another oh and i copied the wrong one and i want to cast it as a string as i want to cast as an integer so string b okay so if i have that now so i don't need to tinker with this at all so i might not but if i wanted to change this to another or something like that that you know we'll see all right so enter positive integer and another one eight there we go so what i was saying is if i wanted to change you know some little things that might not be central even if it gave an error it shouldn't stop you all right but this case yeah casting it as an integer and adding it we're fine if i cast each as an integer and then i went to divide it would give me an error oh but i didn't want to worry about that for right now we're defining them as integers we're just adding we'll cross that bridge when we get to it and we can get input and cast it on the same line so notice just open parentheses there we go and i'm going to do the same thing here i'm going to copy this whole line because that's really what i want to do all right now here's one where i really don't need to do anything else but supposing i just change that to another now just the way i have it see it actually just tested a bunch of these things because you know that's part of the line and part of the line and you know i really didn't need to change that word it so it'll tell me hey your into your input should be this now my point here is this will not prevent you to go from going on to the next step so you know maybe that's it maybe there's some something little in there that like why why did it say it was never it looks correct or something like that and maybe you're watching this video because that's where you were stuck it should not prevent you from going on to the next step and in fact you know that's fine you can say all right i see what what was different i'm not worried about it on to the next step but if you wanted to you say oh okay well maybe i just should have just said this you know you could always go back through and check it and then see there we go and then and then you can make your change so the whole thing is that this is supposed to be just you know a teaching tool check your code and then you know move on but you know not to get you caught in something that you know is preventing you from moving on all right now as i was mentioning about dividing casting things as a float so the float number allows for decimal places and most of the time i'm just going to cast things as a float anyway because just in case somewhere along the way i need the decimal places there's only a few situations where i might definitely need an integer certain simpy things to display we'll get to that soon enough and counting but other other numbers that i'm going to do math to it i'm going to cast it as a float okay so again prompt and then cast as a float we're really just going to do the same thing and that's okay you need you know if you copy you need to know what line to copy and need to know exactly where to put it but there we go and we don't need to change this enter a number enter a number and see now we will divide so i definitely want them to be floats because i didn't even say integer i just said a number so this is going to work no matter what somebody enters in and then when we take a look then you see it's waiting for us so i will do enter number three enter number four and 0.75 which is perfectly fine because they're float numbers there we go good times all right so order of operations and yes python knows order of operations so in case you forgot you know here's the acronym PEMDAS uh parentheses exponents multiplication and division addition and subtraction so you can and then remember the python syntax for exponents is the two asterisks so in this case what i wanted you to do is test your knowledge of order of operations we're not even worried about actually writing code here then you're going to put your answer here but don't don't really think about the code see if you can do this in your head what would this actual answer be and then you're going to put that here well you're going to put that here for your answer and then when you run it python is going to calculate the actual answer and your answer and then you'll see you'll see all right so let's look at order of operations everything in the parentheses first and then multiplication and division as they come up so uh four times two and then we have 14 divided by two so you can actually go back and forth multiplying and dividing all day so as they come up four times two is eight and then 14 divided by two is seven so then we're going to have one plus eight minus seven and so one plus eight is nine minus seven is two so then we take two now we're done the parentheses to the exponent two to the third power is eight and so there you go put your answer in there and there we go actual answer is eight your answer is eight code test passed okay so all these things and remember you can just like the other ones you can do all this you can put print statements you know all whatever math you want just straightforward math in a print statement python will do that for you so those are some simple calculator tricks you can do okay so remainder remember when we divide something that does not work out evenly we have a remainder and the modulus operator looks like a percent sign but if i'm using it in the code it tells me just what the remainder is there we go so as i have the directions here 10 divided by four is two but with but as a remainder so two and then two left over so 10 modulus four would give me two because that's the remainder or 14 divided by six will have a remainder so so if i do eight a modulus b and again it's the percent sign on most keyboards it's on the same key as the five but you have to hit shift so 14 divided by six now let's take a guess 14 divided by six is two with a remainder of two so that's what we're expecting to see the printout printout there we go now actually we could we don't need to do this but we could you know show well supposing if i had 15 divided by six so six times two is 12 so there'd be three left over and so a modules b would be three if you wanted to you can test these out because this particular code is testing did you do it correctly here so if you wanted to go back and try some different things whereas then if i go to 18 that works out evenly so the modulus would be zero there there would be no remainder and we can use that to find factors so we'll have an if statement here so if i have 20 modulus five so that's 20 divided by five is four works out nicely so 20 modules five the remainder would be zero so if that zero which it is then that means five is a factor so you see we're using the double equals to test it so that's what we're going to do here we're going to walk through this and we're going to cast this times we do want integers because factoring really only works with integers if you know we can divide a lot of things but you know if it's a factor there's going to be a nice integer in there so i'm going to just enter an integer so input cast it as int and that's going to be our number and then here next one enter an integer to see if it's a factor and again cast that as an integer and that's going to be test factor because i don't know if it's a factor yet and in the if statement i just have if number now remember whatever this is if it's true it's going to do that so if number exists which it will then it's going to do this but we're going to change the next line so what do we want number modulus test factor and then now if that divided by that gives you zero then we can say true it is a factor and then or else it's false it's false so there we go and enter an integer so let's do one that doesn't work so if we have 11 and five false and we can run it again and let's say make it 12 3 true so there we go showing how we can cast things and we can use that to test if something is a factor that that that itself might be useful but we're going to take that and we're going to build that into other things like this finding factors all right finding all the factors of a number so very similar to what we did but we're not asking for second input here we have the first input and then we want to find all the factors so now i have my for loop for test factor in range so i'm going to take this range let's look at this backwards here i'm going to take this range and if i just had one number in there it would start at zero but i can't have that because that'll give me a divide by zero error right away so i'm going to start the range at one and then end the range at number plus one because normally the range it won't do that last number so i have to add one and now to make sure whatever that number is i want to include that all right so now for test factor in in this range it's going to loop through everything every number in this range and one at a time like test factor is going to be one and then the next num next time through the loop test factor is going to be two so it will just loop through how for that many times yeah for every number in that range all right and this is what we're going to change the if statement so we want to say if it's a factor so number is our in is the original number we want and each of these test factors what do we want to do with it we want to say if number modulus test factor equals zero just like we were doing before we're just kind of putting it in an if statement now so i get this number and i'm going to loop through all these factors from one up to that number and i'm going to loop through all these factors from one up to that number and then if number divided by test factor gives me a remainder of zero then it is a factor so then i'll print it out all right so we run it and what do we have let's say 12 12 is a lot of factors and you see it'll print them all out 1 2 3 4 6 and 12 and we can run it again enter an integer supposing enter like 17 1 and 17 because it's prime so that's what we're doing just showing all the factors here this type of thing we will revisit this at another time to reduce fractions to lowest terms okay now what about prime numbers so a prime number is a number that the only factors are one in itself so we're going to and then anything that's not prime is composite so if i so if i have you know five is prime because the only way you can multiply to get there is one times five but six as one you can do one times six but you can also do two times three so you because you have those other factors it's composite so here now we're going to have same input and again integers because we're looking at factors and i'm going to start out with this variable prime or comp say being prime and then same thing range now notice i started the range two because one will go into everything and that's not what i that's not what i want that does that won't tell me anything so i'm going to start at two up to and including the number again not including the number because this this this time it won't include the number i didn't add the one there because again same reason i didn't have one one and the number itself yeah we know that those are factors but i want to find out from two through any of the other numbers if it's a factor and very similar then if number we're going to do the same loop and you could always go back if number divided by test factor equals zero there we go because we have the same variables here you always double check just in case the variable names change or a slightly different way of doing things but yes if that test factor works oh see because this is test number so this would have given me an error and and that's the thing with with reusing code yes we know we're all going to use a lot of copy and paste because that helps you know if it's a whole block of code but be really careful that it is exactly the variables and everything that match up correctly so you know a lot of times people do too much copy and paste and then they're lost because things don't match up so this one we call it test number so if number divided by test number if that has a remainder of zero then that means that is a factor which means all it has to do is happen once and that means the number is composite and it's only prime starts out that variable is prime and it stays prime only if it goes through and we never get a factor here throughout the entire thing all right so let's take a look if we have this and enter a positive integer so let's enter one let's say four composite right because i can also do two times two and then let's enter one that we have seven prime and that way you can check all kinds of other things you know oh some huge number is it prime is a composite there we go and you know now that you have this you don't have to change any of the code when you run this it'll you know it'll uh test it for you all right other interesting things reciprocals so writing it in math it's the number flipped so i have this reciprocal of twothirds is three over two you see it just flipped and then any whole number the reciprocal of five is onefifth because any whole number it's understood that it's denominator of zero or sorry sorry denominator of one so that'd be five over one so then that's why it's onefifth as the reciprocal and you can multiply a number by its reciprocal and get one there we go pretty good so and there we go zero has no reciprocal because it'd be divided by zero so we can write the reciprocal whatever the number is we can just actually flip it one divided by n there that's actually all you need to do to find the reciprocal and some of these might be decimals but nonetheless this will find the reciprocal for you and we see our output here enter a number and what if i have the number as um five see point two but that's the decimal equivalent of onefifth all right so just putting this in there showing you what you can do with finding reciprocals other things we can do with the input is supposing i wanted to have an output like this and are two numbers separated by a comma oh well now but i want to test each of these numbers so i can split it so this i'll store it as the variable nums still didn't cast it as anything and then here this is actually going to be an array in this case with two elements it's going to split it at the comma and then now this array sp has two elements so i have sp0 the first one i'll cast that as a float and then i have sp1 so that's it you know asking for it to be separated by a comma split the input and then then cast each of them separately so sp0 and then sp1 and notice the code here just says cast it as a float so float remember to close the parentheses over here there we go and then what do we want to do and that the directions here are then divide the two numbers so that's why we cast them as a float divide the two numbers and we have a divided by b all right so there we go split it cast it and in this case then we're going to divide okay so and our two numbers separated by a comma and let's see how about we do um this one will be a repeating decimal of eight comma nine there you go i'd notice if you have just one number repeating the fraction equivalent is that number over nine so point one repeating would be one ninth point two repeating would be two ninth and this one eight over nine so there we go okay now this is building up to something here is building up to you being able to factor square roots but let's talk about square numbers first so factor multiplied by itself is a square and it is kind of like the area of a square you know both sides would be the same or all sides would be the same so when i do length times width to get area they're the same and so is that number times itself and we would use the exponents that to the second power okay so all we're doing here is you know we're taking a number and then getting the square so in this case it's going to take the input as n and we're just going to square it there we go okay there we go number square all right five i'll put 25 okay so let's go the other way square root function so anything to the second power it's squared but what if i knew the result and i wanted to square root it so if i knew the area of my square yard but i want to know what's the side side measure so we have sqrt and that's the first thing we're encountering here that is not built into python so we have to import the math library and this is where colab really helps you out because a lot of times you might have to go through some other things to install things you know in other notebooks the colab notebook import math and you don't have it behind the scenes it works you just have to have the import statement all right so a number to find the square root definitely going to cast as a float all right and how do we get the square root of that once we import it it's going to be math dot sqrt and we call it a number n especially you know think even if things don't come up automatically just you make sure open parentheses one two close parentheses one two we got it so we're going to enter a number and we see here and remember to find the square root so we'll do one that works out evenly how about 16 square roots four and we can do another one that doesn't work out evenly how about 21 and it'll give you a bunch of decimal places i remember yep so 4.5 yeah about there we go okay okay other cool functions the floor function this is another one we have to import math to use it so the floor function so we have a floor function which just drops any decimals and there we go drops any decimals and sometimes called integer part or the greatest integer so even if it's like 3.9 it's going to drop and just go down to 3 the uh we have the floor function we have the ceiling function which as you can imagine if floor drops all the decimals ceiling is no matter how many what decimals are even if it's 0.1 it goes up to the next number and then round the one we use possibly most often round remember 0.5 and above rounds up and point anything less than 0.5 0.4 and down rounds down so we're going to look at the math that floor function here all right enter a number decimal place and we're just going to practice doing the math dot floor function here math dot floor of n so enter a number with decimal places so i'm going to call it 5.99999 and when i hit enter yep and that's the floor function even if it's 0.999 drops down to five so there we go and remember supposing you went back and said oh wait floor you know i'm upside down ceiling function supposing i wanted to do that then all right so um 7.1 because that should round it up to eight and so that code works but because that wasn't what these directions are it'll tell you oh you should include math dot floor and again if you end up trying different things it doesn't prevent you from going on but if you know either if you either if you spelled it wrong or something or you did something different it'll tell you there you go floor and go nine point three right good drops it okay so we're going to put some of this together finding square factors all right so a few things we've already done we're going to import math and what we're going to do is we're going to enter an integer to define the greatest square factor so i'll call that max factor and right now it'll be one and then the upper limit so notice we're stacking on these functions here uh the math dot floor of math that square root of n but then we're going to add one to it so we want to find the greatest square factor so whatever number you enter it in we're going to square root it that's going to of course have some bunch of decimal places and so we could do the math dot floor and then add one to it now i realize that now i realize that i could have just done math that ceiling and then skipped the plus one i for whatever reason i did this i like it so i kept it but there we go that's why yes uh so that gives us the upper limit square root of that number and then but we really want the next number now what do we have now in my range from one to upper limit so and remember this upper that was the square fact the square root factor i square rooted it first so for maybe factor in that range so it's going to go through and maybe factor is going to be one and then it's going to be two it's going to be three you know up to this upper limit so if n modules maybe factor squared equals zero so that's it these these factors if i square them is that a factor can i can i divide that out and if that is then max factor you see it's not going to be zero what's it going to be you know that's and that's the idea with some of these change one line so if you go through and think about what you're doing then we see yep i'm going through this range and maybe factor is it and then finding square factors if n divided by maybe factor squared if that gives a remainder of zero then max factor equals maybe factor so that's what we change there we go so and again knowing that these were the square rooted so for our purposes here we're just printed out squared so we'll see this here so if i have something like 12 all the greatest square factor is four because two you see it prints out square two squared is four that and that's a factor of 12 three squared is nine does not work out to be an integer here okay so here we're going to build upon that code and then we're going to have all of this because when we look at factoring out square roots that's kind of what we're building up to here when you have a square root that doesn't work out perfectly but yet you can factor it a little bit that's what we want to do here so i still have get the same integer same upper limit and i just put all these variables equal to one because we'll change those square root max factor other factor all right and then take a look at what this is doing same thing right because i still got that same upper limit and so still maybe factor is going through that range check for square factors just like we did before and then there we go and in this case max factor equals maybe factor squared squared there we go and then other factor is n the original number divided by max factor so there we go so what we have is the result is going to be that original number n equals this times this and we're just looking at how that divides out so in this case you don't need to change anything because i i thought that this was a little bit you know a little bit complex to try to follow like what what i was thinking through so i didn't through so i didn't didn't want to have you have to change anything and just take a look at what's going on here how we're dividing that out and then when you run it so if i enter an integer to factor maybe i'll do the same 12 here see 12 equals four times three or if i do this again let's say 50 50 equals 25 times two and again that first part is a square factor so now there we go the last four steps prepares you for this so factoring out a square root this is kind of what we want 12 if we look at the square root of 12 is four times three so then since four is a perfect square the square root of four comes out and it becomes two root three and that's what we're kind of building as we're building this code to do is this whatever is that square root number i'm finding the greatest square factor and then that comes out because the square root of four is two two is on the outside now all right and in doing this we're going to import math because we have square root and for our final output we're going to import simpy and symbols because that's going to give us a nice output at the end that looks like this so that's the thing you know that's the thing you know python outputs a certain way and then if i wanted to output that looks more like math symbols that's what we have symbolic python using our math symbols so similar input without the radical and our square root factor using those same variables dividing these same type of thing where we're finding maybe factor and then max factor now in this case i kept it like this maybe factor squared so the max factor squared max factor squared and then we divide so now we do the output so i am going to square root it again yes and i realized that up here there's maybe factor squared and then down here i'm square rooting it again and the key is casting it as an integer because this will be an integer at this point oh did not want to do that there yeah because this will be an integer at this point casting it as an integer okay so that's the square root and then remember other factor out here was my original divided by that max factor and if there's anything left over other that's other factor down here i'm casting that as an integer and you know that's it i'm just taking this other factor but casting it as an integer and you see that you can do that with variables so now it's now it's an integer and now the output is square root which was this variable up here times simpy so this simpy dot square root is different than math that square root and using this simpy output i want that to be my last i want to be that to be my last thing is this output so down here after it does this for the test that's why output the word output shows up here we store it as this here but notice it's not a print statement it just says output and the last thing just says output and it will display it so these types of simpy displays sometimes just need to put that there output as the last thing okay so what do we have uh let's take a look at our um let's take a look at 50 as we were talking about before so and just because this came first that's why it says test passed here and then we see the output but 50 factors out to five root two and if we run it again then we have you know go back to our 12 12 is two root three and we can see how we can factor out these square roots so there we go this is now one of the things that you can do and this would be a bonus we could do this later is we already talked about functions you could put all this in a function you know all you know you don't need to the testing part but the output you could put this the testing part but the output you could put this all in a function that would factor square roots for you so just like you have math that square dot sqrt to output the number which may be a decimal you could actually make your own function that would do all this and then output a radical you know like this so some interesting things that you can do and that's kind of what i wanted you to see the buildup of this and how we can use these you know loops and factors and do this to factoring a square root which is something that's you know pretty interesting in math useful for some math you get into and then you can write code to do it all right here's some rounding just interesting things so if i just say round it'll round it to a whole number if i have something like this if i round comma and then have a number that'll tell me how many decimal places and if i have this round and it's a negative number that'll be for big numbers so that will give me that many zeros so there we go so first number rounded to the millions the second number rounded the sixth decimal places so and i do need to go back to my print statements print round and the first number six zeros so i have to make it negative six and then the second one print round be and i wanted three decimal places so it'd be three there we go and we can print so that there's my six decimal places and you see then you know i don't want it around to the next integer it already is an integer but i want uh 14 million 14 million 500 thousand rounds to 15 million and then the next one yep rounds to 007 of course all right there we go and fractions decimals and percents percents so we could see here and we've done some things like this before that here we're going to take the input as a string see i'm going to import math for for later take the input as a string and as a string every string has this builtin len which is the length of that string so i want to take the length of that string and then i need to cast it as an integer now remember the person who enters this in is going to put a decimal place so that's why i have to subtract one because i don't want that decimal place i just want how many decimal places without that dot all right so that's going to be the exponent and then now that i've done that now my input digits i'm going to cast that as a float so the numerator is going to be n times 10 to that exponent and i wrote it all out just to make it clear what we're talking about here so anything with three decimal places it's going to be times 10 to the third and move doing that is going to move the decimal place over and then my numerator is actually going to be an integer and the denominator is that 10 to the third oh 10 to the exponent oh 10 to the exponent there we go so there's my fraction and this is really what we're doing anytime we're converting fractions but now we're just writing code to make it easier so how many decimal places that's really what this is essentially doing here how many decimal places am i talking about and then that number times 10 to that those decimal places 10 to that exponent and the denominator is 10 to that exponent so then the percent because now that i have it as numerator denominator now i actually really can just go back to n if i want or i could put numerator times numerator divided by denominator whichever one but i could do n times 100 which it's always times 100 because it moves the decimal place over and so that's it that's the first two digits are there are your percent so n times 100 gives you the percent and we can run it so if i have somebody enters in something like point one two five five there we go so the decimal is point one two five the fraction is one two five out of over a thousand and the percent is twelve point five percent so there we go converting any input fraction decimal percent percent and this is where i was saying that you could you could define this you can define a function here where you can execute a block of code with one command so you know here's the function definition d e f and then the name of the function open and close parentheses that may take input but they don't have to and then input indented four spaces one two three four so d e f name of the function colon anything in the function it can be as many lines as you want and it can have comments just indented four spaces and then there you go here's one something outside the function and then that function is defined and then it's it's then called it it won't do anything until it's called here so i could have this function definition and if i took out this line it wouldn't do anything again so now it'll have this is outside the function then it'll print this is in the function and then back outside the function there you go now change the name and remember to call it so there we go and then we want to run it then change the name to fun because it can't spell function without fun so if i just change the name i'm gonna call it fun and now i'm gonna call the function so that's what is the function call is when i you know when i tell all right let's run that function now there you go same thing to show you how to define a function and then call the function and then here's one with input so it can take input any input we're going to call an argument so there we go um now right here it's telling me that it's uh you know called greet a function called greeting it's going to take this input which will store its variable name that's within the function here and it's going to print hello whatever the name is now here outside the function so notice at the end of your function skip a line at least one line so then that's the break and now this is definitely not in the function and then the input and casting it as a string which is it is a string and we'll keep it that that way what is your name and notice inside the quotes that slash n will indicate a new line so now when we run the greeting you see it's passed you know i take that variable and i'm going to pass that into the function so now that function takes input and then it's going to be this variable and then it'll do the greeting so here you go what is your name head hello there we go and now now that you see this working this is just changing the this because it's like remembering where these are so you know greeting and then when we call it i'm going to change this variable here there we go so we see you know where these variables are especially in a small simple function like this so then you see you know this variable how do how do i pass it to the function as an argument there and then in the function definition it's expecting input and doing something with it but the function of this should actually be the same go yep see all good and these functions which is kind of cool you could have more than one input so we have this so i can have multiple input in this function and then in this case you know do something with it well we're just going to add them all but you you could use this for any formula you have you see like i just made this add but you can use this for whatever formula you have make a function out of it so notice here you know the third i'll leave this as three and then it's going to expect three inputs a b c and then a plus b plus c c and now down here i have to call it with all three variables so now notice this variable existed before but then it just stayed there floating not doing anything and then we have here you know now that we have have this i'm going to call the function with all three inputs because the function is expecting three inputs and then it's going to do something with those and so there we go so we see enter a number and i'll enter a number and another number six another number seven oh because there you go five and six is eleven plus three is fourteen so there we go hey fun with functions now all the this function and the ones we had so far they included a print statement as a way to show output and that's good but we could also have a function with a return value so notice this function here then it just returns that that value and what that does is it returns it right where you call the function so notice that right where you call the function so notice this if we're going to take this enter a number you know there's our input it's the float i don't know stored as variable a so now what i print is your number multiplied equals and then right here it's going to be that function i call that function with variable a and that's what this is and it's just going to take it times two there we go all right so notice some of these you run it and then we're going to change something and then run it again so enter a number all right there you go 16 your number multiplied is 32 so all we're doing here is changing the return statement multiply it by three instead everything else we actually can keep the same there you go enter a number 16 enter a number 16 and it's 48 so that's the return statement is right where you call the function that's where the number shows up your number multiplied equals and then returns that so that's pretty useful sometimes because we want that to just be where you know where do i want this output to be right there and so we put the function call there so that's the return statements good useful statement here so we have all these different things we have all these functions we you know we're looking at factoring we're looking at solving some things you can even just solve for x and there we go x as the classic unknown now notice here we're importing simpy again or for our symbolic math and we're going to take it even further from simpy we're going to import symbols and from simpy solvers we're going to import solve so all these now i'll just define it here x equals symbols and notice it's just x in single quotes so that's telling us that we're going to use x as a symbol in math and the way that simpy solve works is the equation has to be equal to zero so at what i'm going to do all right well we'll see here's the output solve for x and i even have this here zero equals and then you're going to enter it in now what this does simpy has this built in solve and notice the output's going to be right here so that solve we know that behind the scenes it has a return value so solve that equation using the variable x and this is just like a subtle thing that we'll talk about at another time but this returns a finite set and for this we're going to say this is the first answer that we want equation zero so enter an equation and then this is going to output the answer there we go all right enter an equation and so if i have let's let's do like you know two times x minus eight so we can see that x must be four four and i'll put it there now if i didn't have this i'll do the i'll do the exact same thing two times x minus eight it just the way it displays it because it's a finite set now that also opens up the door to possibly if i put in something that had more than one answer i could do that and that works too if i have let's see i'll run it again so supposing i have now this will work even if it doesn't work out to a nice integer but i'm going to make this work to a nice integer x squared minus nine you see negative three and three it does have two answers and it'll output both of those so this one you know and enter an equation function x minus four so there we go if you didn't get a syntax error you're ready for the project so different things you can do so this is where we now can make make your own functions and this is where i leave it open to you how you could do this you know make your own functions like you could take one of these functions here like the factoring the square root yeah so you could take this factoring the square root and copy all of this and all right so as an example of something something you could do and down here you could make this a function so you could do this now what's interesting is you as defining the function here uh you could define it factor sqrt and we definitely want input and i'm going to make it n and i'm going to make it n so we could do this that it factors the square root and you could make each of these then you have to make sure you indent everything indent everything now since we're factoring square and we don't need that input then we can actually delete that and here we go use you know we can keep all these and this is the thing with a function is you do want everything to be and you can take out things like notice what it's doing in the loop there we go then this has to be indented and this has to be indented there we go and all of these divide up we can even keep these and we see that we have output okay okay all right and this part we don't need you know and what do we want to do we want to do we can backspace that okay yes this stuff does not have a test because this is so what you have is you can define that factor square root and then down here later we could try to call it factor square root and you know uh let's see 20 yeah and and oh maybe I have to return the output it's actually kind of funny that just popped up but there we go so you see the output but because it's in a function we have to include that as a return statement all right so this is you know this is not the part of the function but everything else is and these are some things you can do because then you can you know different ways you can just define them in your own you know colab code cell with some text ahead of it you could you know you can make them all functions but that's the idea and then you could create a menu if you wanted to where you just have um which one you know what function should you run should you run you could do a table of contents there too and then that's the that's the project you're building this multifunction calculator you're putting all these things together into a colab notebook that you're going to be able to use and it's going to be your multifunction calculator and then as of making this video I can't tell you exactly where to upload that that code but hold on to it and then you'll see where to put it together for you know officially getting the credit for passing this part of the certification and then maybe on to the next part all right so hopefully this was useful you know how to work through this and how to put all this together into this certification project and you know we want it to be you know that there's more than one way to do all this so find find a way that works for you you know making your own calculator all right and we'll go on to the next project so with graphing a system of equations we're looking at really just graphing two equations on on the same x y axis and we want to see where do these two lines cross that's going to be the two lines cross that's going to be the solution to our system of equations so as an example here we have two equations and this one's y equals three x plus ten and this other one is y equals four x so let's say I don't know it's a place you like to go let's say costs you know four dollars admission so four dollars times x which is every time you go then y would be the total cost and then they have a deal oh well if you pay ten dollar membership fee then your admissions three dollars so there you have the the decision like okay well with this membership fee my admissions lower but when would these be the same price you know how many times would i have to go for these to be the same price so we want you know that's just one example of the of you know the use of this so i put these both in y equals because we're going to get into some other ways to solve this but we're looking at just how this graph plays out here so if i graph that y equals three x plus ten so without numbers here we're just going to estimate let's say 10 is here and you know that's how we plot begin at 10 and then up three over over one and let's just say you know it's something like this and let's just say that's the line and then we have y equals four x so there's no beginning it begins at zero but it's a steeper slope you know be at zero steeper slope and then let's just say you know it looks something like this and then they cross somewhere where do these lines intersect that's going to be the solution to our system of equations and let's just imagine that there are numbers here and it was you know somewhere around 10 so you know let's just say that that would be like 10 you know 40 something like that you know i see the invisible numbers on there so you see where these cross and depending on what you're using to graph you know it might be clearer to see might be harder to see but we can then always test it oh if i see it looks like that's where that's where these lines intersect we can plug that in does that work for each one so if x is 10 so it would be three times 10 plus 10 and then y would be 40 so our question is does that work three times 10 is 30 plus 10 is 40 yes that does work and then it would be the same thing you know four times 10 and y is 40 and then that works so that's how we would confirm it and if we were doing this you know old school plotting a bunch of points i could always put you know my x y table and plot a bunch of points i was using graph paper and what we're going to do though and the reason why i didn't worry about getting this you know these exact details this is not drawn to scale is because i want to just you want you to see you know the the way that this comes together two lines on the same graph my question is where do these lines intersect and then next we're going to look at the code how can i set up a graph how can i plot two points on the same graph and you know for whatever the answer might be however you know minute the fraction or decimal might be how we can find the solution each time so now let's take a look at the code so if you remember graphing one equation on a on a cartesian plane this isn't going to be that much different one of the big things though is we're going to use the numpy library instead of a loop so we'll talk about that more in a second but the first thing we need to do is import it here import numpy now you know this plt that makes it a lot shorter instead of writing that plot live dot pi plot numpy we shorten it you know it's just a little bit shorter but np seems to be the you know the common abbreviation so we're going to do that and you'll see np dot this and dot that throughout throughout this code so like before we are going to define our our range x min x max y min y max there we go and one of the things with the numpy array is instead of creating a loop like we were doing before what this does is this defines an array of x values and the first thing we need to do then is to find how many points i want to plot so i'll take these x values you know notice x max minus x min so how many values i have there and that should give me an integer number but i'm going to say 10 you know 10 times this number that's how many points i want that's actually going to be for linear equations you really don't need that many they it displays very nicely for anything with a little bit of a curve on it that's probably plenty and for some more complicated graphs you might do more than 10 so that gives me the number of points i have and just again based on these so if i change the window then this updates automatically and then here's where i'm going to define the array of x values once so using that library np dot linspace and it gives it takes the arguments x min x max and then how many points so there we go it's just going through these where am i going to start and and how many points in between and i'm just storing that as x because i'm going to use that as my x values hopefully this is looking familiar setting up you know the window size the axis for x and y and here's where we're going to plot line one so in this case i have y1 equals two times x there we go and what it does is that will take each of these x values rather than me needing to create a loop it'll go through each of these x values and plot them and then i have plt dot plot x and then y1 so here we go i have this and the second line i'm gonna do the same thing y2 equals and this one i took it beyond linear i just made x squared minus three just to change it up a little bit and so there we go that's my second y value and here we go what do i want to plot here x the x values and then y2 so there we go to find the x values and show the graph so when we run this there we have it we have our each axis that first y1 is a linear equation light blue line and y2 was the parabola now that's a pretty good parabola just to show you that if i had fewer points let's just say even two times this yeah that's probably low enough that you're still going to see this become choppy yeah wasn't that bad but if i really only have one times this then it really becomes a lot choppier because i'm only plotting every integer and there's a lot more going on here but you see how that linear equation yeah straight line worked out just fine but this one yeah so that's why just as a default i'll do 10 times that and so there we go and then to graph anything else all we have to do is change these y1 okay well how about if i oh okay well how about if i make this like negative negative 3x i'll just leave it at that oh because three times x there we go if you write it by hand you know doing the math often you know you forget the multiplying so that's the key python syntax you have to remember there you go um and let's take a look at this and maybe we'll make this one um there we go just to the third power how about that so there we go another linear equation and this one here cubic and we'll run this there we go and we see you know even this yep the curve looks nice so there we go all you have to do is change y1 and y2 and you actually can graph more than more than two but a lot of times we're going to do linear equations and have two lines on the same and our questions where do they intersect so there we go numpy and use that now that we've worked through the core skills in this unit let's look through some extra problems and i'm going to work through extra problems using the colab notebook so you can see how you can apply these resources that you're building and use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here okay so i want to show you just a few other things you can do with graph with graphing and one of them is shading in between lines or just in general above and below so if you have an inequality you can shade above the line or below the line we see we don't need to import anything different this should look familiar from the graphs you've been doing set up x min and maximum how many points and then you know linspace for your array and we've been doing this before here's the line and then we're going to plot that now this one if you're doing an inequality you could also add the other argument of making it a dashed line but this might be hard to see this line but here's the twist here the fill between so we're going to say from x at still the same x values and then the fill between is between these two y values from y1 up to 10 and you could define that as a definite number 10 you know we've already set our maximum or you could actually say up to y max like that's another way to do it and this one we call it you know we want to make this red so that takes the other argument python will give you a default but you know you can define these and that makes it a lot better so there we go the fill between same x value and then you have the range of y values that's the way that's going to work and we'll do a few lines here we'll make make some art so line two you can see again the familiar define the line and then plot there we go but then we're going to do the fill between between that x and y2 and y1 so you see you can define it even you know this one i'm going to go up to the top this one i'm going to go up to the other line and then we're going to do the fill line and here we go so fill line three very similar and there we go each of these i'm defining a different face color and this one's going to be green where am i fill in between i'm filling between this one that we've defined up here y3 and y2 so that's so these are just these two line are just going to be a band and here we go i can do this one between uh graphing another one and notice all these are just simple linear equations to show you this and we're graphing between these two so what happens when we run this so we see we get the first one from that line up to the top and then from there to there from there to there and there we go so if the second one if we had let's say all right we see this red we see this yellow so if the yellow one instead of ending it there i went up to y max it would just overlap and i know you might be you might have been thinking hey you might have might turn orange you know yellow yellow and red but actually it's the order of things that it graphs this that was red but then then it graphed this and then it overwrote the red and if i wanted to i still call it a line one but if i wanted to move that down here so now this is yellow and then this whole thing would be red and remember because the yellow started down lower so the red will go on top of that but but it didn't go down this far so the red didn't cover this so we see you know that's it you know the yellow line was x plus three and then the red line was x plus six so you still had that little gap that you know when the red went on it didn't totally cover the yellow all right but then we can you know y1 and now this one i definitely need to put this one back because y1 wasn't defined yet so you see it gave me that little error there so just i'll move it back and make this official before we go on to the next thing and we can see so since i've moved a few things around before we run it let's let's change something else here i was saying that we need we could do the dashed line so we'll make the red line and the yellow line the dashed line and it might be hard to see but we will hope you can always hope here so single quotes and then i'm going to make it a dash and i'll do the same thing with this one the other argument single quotes and i'll make it a dash so that those two would be dashed lines instead of a solid line it's hard to see it's a little bit but you know there we go and because these you know with the shading sometimes you might not even need to plot the exact line i mean mathematically you might just be in the habit hey i want to also show that line but the way it shows up on the graph you know it's not you see the dividing line it you know it's nice but sometimes you might say oh okay if i'm making some sort of art sometimes i might not want or need that extra line so there we go so there's some different things you can do you know draw lines shade above and below and you can be you can get creative with this and make all sorts of of all sorts of things and this is essentially you know what vector graphics are you know not you know defining each individual pixel but defining the lines that you draw based on equations and then that way you can scale things because let's say i wanted to scale that if i just change the dimensions of my graph i could scale this line with the same code in the same equations so that's the advantage vector graphics you can make larger things but with not much bigger file size because it's all defined on equations anyway so there we go some some cool things you can do with that other cool things you can create an interactive graph all right and with interact interactive we're going to set up some sliders this one's called interactive if you might come across some python code that defines sliders that actually uses the word slider that you know that works too but here's what we're going to import there we go in line and the inline part is going to get us to be able to adjust these sliders and see the effect on the graph right away so there we go and then this interactive widget so i'm going to define all the graphing notice is going to happen within this function so i'm going to define this function so again i made it a simple slope intercept so i'm going to define the function of m b and then i put another variable for zoom so notice all of your dimensions here are based on that variable for zoom and then we still have the points and the plot that's my y value mx plus b so now this function takes these inputs and here's the slider it's really the most of it is right here on this line is right here on this line so interactive plot now i can make that whatever variable i want i just decided to call it that and interactive open parentheses so the first thing is what function am i going to run and i made it f and the main reason i made it f is so that the line this line of code was not that long but there you go what function am i going to run and then let's define some ranges here m will go from negative 99 b will go from negative 99 and zoom will go from 1 to 100 so notice the zoom i could make it really small and x min max you know i could zoom it all in it's still going to be square but i could zoom it really into just one in every direction or i could zoom it out to 100 and i could change that number as i see fit so there we go so what we have is this and when we run that interactive plot it's going to take the input from these sliders and then run this function so let's see how that works so a lot of times the default puts everything right in the middle so my slope is zero and b is zero so you might be able to see that the axis is black but this line this blue line is on there because it's a slope of zero zero what what happens when i move that up see look at that now i have a slope of three and as i move up b then it crosses the yaxis at a different place it begins right there now we see it starts right in the middle at 50 so i could bring this down and you see i can zoom in pretty cool and see this is what i zoom if i'm so zoomed in one every direction notice b was five so that's off the graph now i'd have to move that back now you start seeing it on the graph and these are some cool things you can do with your graph you can add this interactive even if you you know you're graphing all kinds of things you just want to change the zoom this is a nice way to zoom and you know you might see some things on other calculators where you can zoom and here's how you can write the code you can have your own graph that zooms in and out and you can adjust some other things so there we go some cool some cool things you can do and i just want to you know it's a good way to illustrate you know slope and intercept as they change how does the graph change you see and then i can make b negative and therefore across the yaxis down here and i can change the zoom you know all the way all the way so now i'm really zoomed out and it it looks like this might even cross it zero zero because it's so tiny it only crosses at negative three and my graph is so zoomed out but there we go some interesting things you can do with zooming and you see that just you make that interactive plot and then your function all the graphing happens in that function okay so here's another interesting way to graph we can actually because all this math is going to lead you to working with data science so let's just get a little taste of it here that somebody else created this library this mediostat library for getting just some basic weather information um here's you know the weather information that they take time average temperature minimum temperature maximum temperature precipitation snow wind direction wind speed this is the wind gusts the maximum wind gusts air pressure and the amount of sun so there you go planning setting up your solar panels you can calculate the hours of sun at a particular place uh planning to set up your wind turbines you can calculate wind speed at different places and here's how this works this one you do need to install this and so we're going to run pip install install this and so we're going to run pip install and i just made that its own separate it's a its own separate code block and there we go we just see that this stopped running and that installed this so there's a lot of things already built into colab you might have noticed we've imported some things but didn't need to install anything this is a newer library and therefore it's not already built in so some of those newer libraries the install i mean it's really pretty straightforward pip install mediostat done so install that library now we can import it date time that was our i was already at python library but we just do need to import that and then now we still need to import this because we're going to plot this this data so that's why we import that and then the install enabled us to do this import these i've included the link here you know for all the documentation all right so here's how it works start we'll define these variables and they take this date time year month day year month day so i decided let's do like the first half of 2022 and so we have uh uh created a point now the point you create this is latitude and longitude so they don't have really built in like type in the name of a city you want to have an idea like let you know where you live you can find it like an exact latitude and longitude of where you are you can find latitude longitude you know somewhere you know if you want a particular city somewhere in the city so the example that you might see if you look up look this up you know somebody uh did this for british columbia so i changed it and did this for philadelphia so there we go so here's a point in the middle of the city and we can just get the data here so from that point so there we go data daily and then um there's my data point philly and start and end so there we go so we have this you know start date you know start date end date location and then collect the data it seems like this would overwrite it but this does work using the same variable data equals this data equals data dot fetch so there we go it works out and this one i just said hey let's just plot the average temperature so notice it looks very similar data dot plot and then down here we have plt dot show but there's nothing else we need to do it actually all the rest of it the dimensions and even some other things the way it labels graph happen automatically so there we go we just have y equals and then we're going to plot these three things so when i run it we see the average temperature there we go average min max so all these things we know in a previous video we were talking about you know how to create a legend how to label the axis and everything this already does all that for you and it'll just graph it'll just graph what you have here all right so there we go and notice the temperature is in celsius so there you go if you're in philly you're like hey it hasn't been 30 degrees here in a long time but yes this is celsius so notice it's going way above that yep june july pretty hot and then we can just change this that we can have temperature average maybe we'll we'll keep that and maybe we'll do one of the other ones precipitation prcp there we go so we'll graph this and we see so average temperature and then precipitation there we go pretty cool and we can see and of course then you know there there is another one here snow now what you can see is all right if there's average temperature below zero and and then precipitation then you'd expect hey maybe there's going to be snow but we can add that and you will see so there we go snow is in green and you'd think look at that average precipitation and there's precipitation and below average temperatures but no snow precipitation below average temperatures but no snow or below zero temperatures and yep it's kind of weird but it happened but just there we go here beginning january some snow february some snow and there we go that's it so interesting things you can do and you know even we were talking about having this on your you know having the colab app on your phone you could have you you could have something you know related to uh you know write write another line in here to get you know to get today's date or yesterday's date and sort you know use that as the end date and you know have your app and click on click on something run it and you know see the historic temperatures or snowfall or wind up till now if that's interesting you could do some other things with this so just some good things we can do with graphing and you see just getting a little bit of taste at how this is why python is so good for data science because a lot of people make these apis that you can just write a few lines of code and get the get the data you need and automatically graph it it's pretty powerful like that and you see the the graphing that we end up doing is the same you know map plot library so pretty good some some cool things you can do with graphing and uh we'll continue on the theme that you know next we'll look at solving equations and graphing you know all together which ends up being tricky but we'll show you how to do it okay so yeah take a look at this tinker with it you know set up some you know some you know weather weather report code for yourself all right okay now we're going to look at how to solve a system of equations even without the graph and you can still picture the graph the idea that that's that's what this is these are two systems of equate these are two equations two functions that you could graph but i don't need to see the graph to get the solution and sometimes for solutions that it might not be easy to see on a graph then you know maybe it's you know not in a nice integer solving this this is going to work each time so we're going to look at how to do this just on paper or on the board and then we'll look at the code on how to do this and set it up to be able to solve anything just change the equation so if i have these two equations one of the ways to solve this and this is some version of substitution is if we notice if this equals y and this equals y then they can equal each other then three x plus ten equals four x so we see that if that equals y and that equals y then these must equal each other three x plus ten equals four x and that's a little bit of the logic that's inherent in in all math so now we can solve these what can i do to solve for x i can subtract three x from both sides and then i get ten equals x now once i solve that x is ten well i want a point so that's my x value i need my y value and i can plug this in to either equation so i would take this and let's say i want to plug it into here so y equals four x then i could take that and y equals four times ten and that gives me y equals 40 and then that's how we would get the solution we can set these equal to each other and then solve solve usually for x and then plug that in either one of those and then get our y value now this is very similar to how this is going to work out in the code one of the things that makes uh sim the simpy library and solving this with python a little bit better is this works out nicely when they're equal to y and you know that looks but if i had equations that were not equal to y or something like that with the python code what i would do and we would do the same thing with this is the idea that i would make i would want each of these equal to zero so i would end up subtracting y here so i would get you know three x plus ten and i subtract y from both sides equals zero and that's the version i'm going to want this in when i solve it with the code and then the same thing here you know four x minus y equals zero and then with each of them set equal to zero then you will see how that that plays out using the simpy library but that's that's kind of the method that python uses to solve so one of the advantages of this is they could be in whatever form they want whatever you have on the other side of the equal sign just subtract it over and then now you have two equations equal to zero and you can solve it so you know and there's many other ways to solve systems of equations but that's kind of the couple ways i want to show you you know this this type of factoring where you can set these equations equal to each other solve for one variable and then get the other one and then we'll take a look at it now so let's take a look at the code so let's start with the simplest way to solve a system of equations now this is especially for linear equations so you want to set each equation equal to zero but as far as algebra steps go that's fine it you know it doesn't have to be simplified just as long as it equals zero so here we're going to use simpy our symbolic math library and i'm just importing everything from simpy import everything so that's the asterisk there and we're going to define x and y as symbols so we see this there we go x y symbols and now here's the equation set equal to zero so first one here and the second one here then i just defined it as first and second and here's how we get the solution so this is the lin solve is the is the formula from simpy lin solve and it takes notice the extra brackets first comma second so it takes this as essentially an array of two different equations and then the next argument comma x y in an additional parentheses so it's using these symbols so linear solve these two equations because after each set equal to zero we can set them equal to each other and use these symbols and when you run this i already ran it and we see it comes out as a finite set now again the simplest way is there we go we set these and here's the one line that puts it all together you can just change you know change these two equations and run it and you know you see your answer it's pretty clear it's a finite set x is negative one y is three supposing i want it to look a little bit nicer so still importing everything from simpy and these symbols still have the same i'm going to use the same equations first and second now here where i have this solution here that's the same line but now i know that this solution variable is going to be a finite set but there's things i can do with that so i'm going to create another variable x solution here and i'm going to take this solution dot args zero zero notice it behind the scenes it's a twodimensional array so i want the first thing and then the y solution also a twodimensional array solution dot args zero one so having this i can print a coordinate pair so there you all print the parentheses x solution comma y solution the closing parentheses and then when i run this there we go it will print you know negative one three in parentheses and i can do other things with that now there we go so what if i also want to see the graph now this gets tricky because we can't graph the same way that we would that we would otherwise because going through loops doesn't really work with simpy of going through numpy doesn't really work with simpy but simpy has its own plot that we can use so there we go it doesn't work with the others but it has its own so from simpy dot plotting i'm going to import plot and so this is the simpy plot and slightly different way i declare these variables here var x y here then this one is similar to what we were doing set equal to zero ready to solve that looks pretty similar to what we were just doing same with the second equation and so this part i'm still going to go through the same thing you know get the solution get the solution get the x solution the y solution and print so this is what i just this is all the same what we just did before but what the other things that we can do is now that i have these and i know that these are equations set equal to zero now simpy syntax for something set equal to zero if i want to get it ready to factor so my y value for the first equation i call it y first so in simpy we're going to define this as an equation first and then comma zero means that's that first equation and i'm just spelling it out that it was set equal to zero we kind of need that so now y first is that set equal to zero and then y1 i'm going to make this variable y1 which solves that first equation you see y first comma y so i'm going to take that here spell it out that it's set equal to zero and then do my algebra factoring i'm going to solve for y and solve for y and then store it as this variable y1 i'm going to do the same thing for the second equation so set it as an equation second the second equation is comma zero y second and then i'm going to solve it y second comma y i'm going to solve it for y so now that i have y1 and y2 i can print them because that might be interesting so it's just going to give me these so i have y equals that i will display exactly comma and then here's the variable y1 zero and y2 zero again because you know the index of the array so we have these that i can show factor but we were talking about graphing this so let's do that next but now i have i will display the solution i will display these you know y equals equations and now when i plot the solution i didn't just factor it to see that as y equals though that is really nice i actually usually like that but to plot the solution here see now i'm going to just reference x as a symbol as a symbol and then take a look at this i'm going to plot but notice nothing dot plot this is just plot within simp i plot and what am i plotting this y value y1 zero and this one y2 zero so there we go so when we factored it into y equals that helped us not just display the solution but put this into here that this is what i'm plotting these two y equals equations and then the x value notice also a little bit different the way we display x comma negative 10 to 10 to 10 i could you know make these other variables but that's going to work out just fine for us so then when we run this i see the solution i have it as y equals i have that one is y equals and then i see the graph and we see where the solution is negative one three there we go so we can do this for you know any other ones here there we go let's just change it up maybe make it negative 2x you know i don't know minus two and maybe this one make this like two times x x and i don't know like plus eight change it up a little bit and so we have our first ones and we'll solve it print out the solution factor it show the y equals equations and then graph it and now we have this new one two six is the solution here are my two equations y equals two times x plus two and y equals x plus four so we see these two and how do we know which one the two times x has a steeper slope so that's got to be this one that's the bottom line and then x plus four the slope is only one so that's got to be this top line and we see that they intersect here at two six all right so we see how we can solve and we can solve and graph there we go and this works for linear equations for equations beyond linear we'll cross that bridge when we get to it which is going to be in the upcoming sections now that we've worked through the core skills in this unit now that we've worked through the core skills in this unit let's look through some extra problems and i'm going to work through extra problems using the colab notebook so you can see how you can apply these resources that you're building and use that use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here so here again is where we're going to put together all the newer functions you've been learning into your calculator so that you'll have these as a reference and remember we already have where you should already have proportions set up so the text to show the setup and then the code to enter it in and solve your proportion and remember we made this a heading so we can minimize that there we go and we already did this converting decimals to fractions and percent so again all the code there and that's also section heading solve for x so each week you know you're learning and we're building and then we're going to take like the final product all of it put together so here's one if you just have a an equation you want to solve for x pretty straightforward we'll have that there and factoring so we can solve or we could factor you know factor out a common term or something like that we have we have that and each of these you don't need to use our interface because you just have this the solving solving for x we did put a user interface in there it's going to prompt for the input and then you see that the equation set equal to zero whereas the factoring one it's just this equation that you know there to put put it there and then simpy dot factor okay so that's also a section heading then recently we were doing things like solving for a variable so not just set solve for x but even if it's not a definite number to actually rewrite it you know like y equals a over b or something like that where you don't even have numbers this will do that for you and we defined a lot of our basic variables that we might use it's not going to be an error to put them in there and not use them but you could always if you change what variables you use you can always edit that part and then whatever it is whether it be the involving numbers or a bunch of letters and variables you know left and right side of the equal sign and then we have this then we're just going to define the variable so that way you can pick what variable you want to solve for set it as an equation remember we did this and then we're going to solve and this loop runs through all possibilities for s in solve for solution so we have that that we can solve for a variable like again it's already heading and we have that therefore in the table of contents so we're going to add the other things we've been doing slope intercept from two points because this in itself is a very common thing to need to do so we're going to define the two points there we go x you know x and y and then using just our slope formula solve for b we're going to get m and b and having those two we're going to print out the equation and then we're going to use that for the graph and you can keep this at these numbers if you want you know you could always change this x min negative 10 and we could leave the others as is but you could always change them to 10 in every direction if you wanted to and having those we have have these you know for the graph and the setup the details could always add other details or change these and you see for things that we might use we might want to see the tick marks so we have them there so you don't have to really think about you know the exact syntax hopefully the more you do this you remember it but it's just there and it's commented out so you can use it if you want and then that way here we just plot the function as a red line so even if you end up changing some of these you have a lot of things that are there by default that if you really entered in two points you could solve whatever you wanted to solve and graph it so we have that here let's make that a section heading then we can double click and remember it's this hashtag because it's in the because it's in the text not in the code now that became a section heading and shows up in the table of contents so we have that now the section heading goes all the way down to the next heading or the bottom so that one we can minimize now this one if we minimize it that's all the rest of the document here so besides that i might just want to graph something and remember in you know we use this the other code as you're building it remember the slope intercept stuff came from week five and then other ways to customize the graph came from some of the extra things we're doing in week four in week four where we have you know again all the different things we want to do with the graph the labels as well as setting the tick marks and this one you know we even customized the labels down here you know and added a remember we customized it and added this whole legend here but in copying this for yours we're going to put all these as well as the zoom that we were doing all in one thing so this function then does all the graphing and i'm going to skip down here for a second the slider remember that interactive plot we're going to run this function f and the only slider we're going to have is to zoom and that's going to be our multiplier from one to i just picked a hundred that's good and then taking that so whatever that multiplier is that will define what we have for our x min and x max and then once we have those we can define the points for our np dot linspace to graph and there we go and i just put this you could do the same just two lines as by default you know maybe you want to have two lines and then you you know you want to see where they where they intersect so this graphs two different lines and notice does not have to be a linear equation as long as you're using python syntax whatever line you want to graph and we i commented this out but again you could have it if you want to fill between shade above or below and i just happen to have this one fill between same x values so the y value goes from y1 up to y max so that would shade above and it would make it green and the next one fill between same x values from y2 down to y min and make it blue so that would shade below so again you could have these here in case you need them we're making these default notebooks that you can use and you say oh okay i do want to shade above or below uncomment it and then we have the labels general labels you can change now for this one i kept this the tick marks in there and the grid and notice because a lot of this is based on the zoom so then how many ticks do i want and what i did is i got the difference the how you know from x max to x min divided by 20 i tickered with this and that seemed to be a good number to display nicely so we're going to get that divide by 20 and then round it and then cast it as an integer so the number of ticks has to be an integer so then that was then that way no matter what the zoom is you'll see that we can adjust the tick marks and show the grid so this will give us a few things that we can graph you know this default and then let's see given these equations that we have in here a lot of times i like to keep an equation in there rather than just like make that line blank so if you run the code it works and you see something something so here we have this graph and we see the default zoom goes right to the middle but i could move this back down and you see everything adjusts the tick marks adjust the graph zooms in and then you can see you know or we could zoom out out and we see so yeah pretty good i like kind of for this particular graph i like it zoomed in and then you can see you know about where they where they cross so sometimes you just might want to graph something and there there we have that and there we go we could put more directions and you could have the whole every all the directions don't have to be the heading you could have that and you could put an html break right after that if you wanted to and then more words underneath that would not become a part of the heading but for this we can just put the heading here here we go i remember there's really no entering we just put it on a little line you just click somewhere else and now that's also a part of the table of contents so we have that and then solve and graph a system and this is nice it brings it all together solving it and graphing it so here you can put in as long as you have python syntax whatever you have there is your first and second equation and i even have an extra one here just to be able to uncomment and you can see this will even work if you have a square root just to have different ones to show you and we've used the linsolve before to solve uh using simpy the linsolve to solve uh two equations and this is actually another one nonlinsolve i like this one because it can be lit i just put the comment in there it can be linear or nonlinear it works out so just because you have nonlinsolve does not mean that you have to have you know something different if one of your functions is linear but there we go the comments just so you know here's where you enter in and then you already have the code that you would have copied this one would have been from eight uh yeah from from uh the recent week to solve and graph you can just copy these and then tinker with them a little bit you know as we went through and built up to these important uh blocks of code you know take the last one that brings it all together and then over here you know that's what you're doing you're building your your library here so solving graph the system of equations and then this will work solve and graph pretty much anything and i just want to show you some of these so even if it's nonlinear and you see it'll give you the solution x y this one happens to have two solutions notice because we had the uh the loop the four loop here to account for multiple solutions so it'll have the two solutions then also show the two y equals equations and then graph them so that's pretty complete that's a good good one you want to have this is this type of thing in your toolbox double click and let's make this one a heading there we go so we have that and i've added one more thing here and we could still make this a heading notice this code isn't complete but i put one thing in here they give you a reference point so you certainly you would recognize that that's import so that would go first and then you see this you would also it would be something you already graphed so the plt would already work but notice you have this dot save fig and you're going to give it a name dot p l t notice you have this dot save fig and you're going to give it a name dot png that's a good file type to use notice that'll come before the plt dot show and that actually works if you put it after i've tried this if you put this after it actually will save something but it'll be a blank graph and what's interesting is this download can come after so that's okay i mean you could put it first that'd be fine too but it can come after because it doesn't interfere with what this shows and this is a way to download this to your computer or your phone there we go save the output because sometimes you might have have something that you wanted to save so therefore you take this and you would put if you wanted to up here you import that and then and then definitely you you know you would just do save fig and files download so there we go and we have this now we have all of this and one of the things you can do is in the view you can collapse all the sections all right and now you have all these in your table of contents and you can just jump to them if you need to there you go you have all the sections collapsed and oh do i need to solve for x do i need to solve for variable you know i i like i like shorter headings so i might and down save graph and download it there you go because that's what it does is it downloads an image so already we have so much of the core algebra that you're able to do and you and you can write the code for it and now you have this at the ready so one of the next things we're going to do is get to quadratics and more complicated graphs we kind of hinted at that last one you know you might if if you haven't seen a lot of these and you say oh wow okay now this graph has a curve now it's getting interesting so we'll get into quadratics parabolas you know where all the graphs do have a curve to them and things beyond that so we'll add more to this all right but well well on your way to being able being able to solve a lot of algebra problems in python so when working with word problems not just here's a math formula solve it work with you know word problems or some people call them story problems that's when a lot of times people have trouble translating that into a math equation that we can solve so what i want to do is help you with some keywords that you can find in the word problems in the sentences that'll tell you what math operation to use and this is not all of them but this is a lot of the main ones and you know you get the trend with this these are the things you're looking for and then after we look at these keywords we'll go we'll go through a bunch of examples in the code and how to use these you know translating sentences into math equations but let's take a look at these keywords so how do i know if i'm going to add well some of the words are going to be if i just actually see plus some number plus another number more so if i have something and then i got more how much do i have now you know the amount of money i had increased it might even just be and you know i have you know these cards and those cards how many cards do i have received because a lot of times that's something added to what we have up something goes up and a lot of times calculating elevation up we're adding it might even just come up and say added to sum also and sum means the total when i add up so we might see some of we might see these you know the sum of three and four means i'm going to do three plus four so these are some of the ones if you're looking and you see these then you know you're adding okay and a lot of this it's not so exact that you could write a program to find a number find one of these keywords and then automatically translate it to a math equation so you have to use a little bit of your human intuition there but it it's very much in that direction see these numbers what which one of these words are around there and that's going to give you an indication of the path operation so let's take a look at subtraction so subtract yeah it might just say minus less anytime i have less than i'm subtracting or it decreased the amount of money in my bank decreased so i subtract gave because a lot of times things if i receive something that it becomes added to what i have or if i gave then it becomes subtracted from what i have down and that also goes again with looking at elevation it might even just come out and say subtracted and then anytime it says the word difference or i know i want to find the difference between two numbers that's subtraction you know we just find the difference and you know that might be a negative difference might be a positive might be absolute value but if i if it says difference or if i want to find the difference then i'm going to subtract all right so with multiply so how do i know that i'm multiplying obviously things are increasing like there are you know we want to look for that general trend things are increasing and just right away if you have that since things are increasing you know it's multiplying or adding so how do i know that it would be multiplying by just the word by because if i'm calculating an area of something three by five and then i've won't you know also then just seeing the word area but three by five means the area would be three times five of so just the word of is going to be multiply a percent of something you have the percent and then you multiply times whatever that something is factor because two things you multiply together are factors times so yeah three times four you know it might just come out and say times and even if it doesn't have these it might just give dimensions and say what's the area and anytime i'm calculating the area of something i'm multiplying so there we go again not this is not all the numbers that lead to multiply but this is a lot of the main one all right so divide out of so notice of would be multiplying but out of is divide so you know four out of five that would be a fraction four divided by five per same actually per pretty much means out of but that's another way to think about dividing of miles per hour i would divide miles divided by hours or kilometers per hour kilometers divided by hours quotient we don't see this word that often but that quotient means that i'm quotient the word means that i'm dividing and actually that's the answer when i divide any rate and as i was saying you know you know kilometers per hour or something like that but anytime i have a rate it's going to be some sort of dividing something divided by something else usually divided by something related to time but it's not always so anytime i have a rate i know i'm dividing something and again it might just come out and say divided by so you know some of the key words here now i put the word each here because that actually could go for multiply or divide it's the sense of it you know if i have if i have 20 students in the class and i want to give them two pencils each how many pencils do i need so then that's multiplying because i have to do 20 times two but if i have if i know how many pencils i have and then you know i know and then i have 20 students and i you know how many can i how many can each of them get you know if i already know that i have 20 and then i have 20 students how many can each of them get i'm dividing so each can go either way we have to get the sense of it and dividing like subtraction if i get the sense that it's getting to be a smaller number then i know it's dividing or subtracting you know and then we we can look further you know what's the sense of it am i is it something you know each you know i'm dividing it out among different things or is it just a subtraction okay so these are some of the main things and the one that carries over a lot is or some version of is are was but is translates to equals so that's where we get the equal sign coming into our equation and so if i have these then i can translate you know this is was will be something like that becomes the equal sign so looking at these keywords you know we get the numbers from the from the situation as well as these keywords and we can put together an equation and so i wanted to give you these keywords and then in the code what we're going to do is we're going to look at a lot of you know some sentences and translating them into math equations and then of course solving them that's what we want to do we want to be able to translate this you know you're not always in life going to have like here's the math problem it's going to be you know some words and we have to translate that to a math problem so let's take a look at how to do this let's let's apply these translate some sentences into math problems all right so let's take a look at the code so now let's put some of this into practice some of the math we've been talking about with the linear equations slope intercept especially and some of the python developing equations finding slope graphing all that let's put all this together and use that to solve some problems here and first let's look at how we can see that y equals mx plus b pattern for a linear equation show up in slightly different ways you know sometimes we just change out the letters a little bit but be able to recognize that pattern so if we take a look at number one and this all comes from the textbook the one that i have listed as textbook two algebra and trig so you know there we go page 304 you can find it find these because we're just going to pick a few of these and i want to highlight you know what we can do with these so if we take a look terry is skiing down a steep hill terry's elevation e of t that's how i'd write that that's the function um instead of just y equals we'll call it e of t elevation as a function of time terry's elevation in feet after t seconds is given by this so e of t equals 3000 minus 70 t and we see then you know instead of x we're using t because it's time and we have 3000 minus 70 t and then our y value is e of t that's the function and so we see the slow the intercept come first that's where we begin she terry begins at 3000 feet up and then goes down the slope at 70 feet per second so we see that that is the slope the slope of our equation on the slope and negative because that elevation is going down there we go so we can see the slope we can see where terry begins 3000 feet up um and there we go just uh finding that slope we just look at it and we take a look at number two now we have jessica walking home from a friend's house after two minutes she's 1.4 miles from home 12 minutes after leaving she's 0.9 miles from home what's her rate in miles per hour miles per hour well right here we have distances in miles but the times in minutes so if the question asks for miles per hour we definitely see also that we have two points we have a time and a distance and then another time and distance so you know x will be time y will be distance and having these two points we can go to our calculator now hopefully this lines up with something that you've already created you know remember we might have called it like your calculator and then hopefully you know then you would have created the table of contents for the different things that we want to be able to do and we can jump to here slope intercept equation from two points because even though the that question didn't ask for the full equation and everything we're going to do more but the first thing it's going to do is find the slope for us and hopefully you know that's it you know we have these formulas you made these now we can make use of it so you would have had all this and then we would just change x1 y1 so the y value is 1.4 but that x value it's two minutes and we have to remember so i already put this in here it's two minutes and there's 60 minutes in an hour so it's two out of 60 you could reduce this if you want but you don't even have to python will take care of that in the other in between steps and the y value 1.4 miles so the second x value 12 minutes so same thing 12 minutes we want an hour so it's 12 out of 60 again that reduces but you don't you don't actually have to and then 0.9 so having all this you can just put in these four values here calculate the slope intercept we'll print that out so you see the equation and then we'll also graph it i mean we're going beyond what the question is but this will give you an idea of some things you can do you already have this and all we needed to do is recognize what these values were put them in here and then we run it all right so this i absolutely would take this slope as three so sometimes just the way python calculates things it might be this 0.9999 it's three and if you really wanted to seeing this you know you could always go back and put a round function in in your code you know round it same with this you could always round it to two decimal place to one decimal place which would be 1.5 but either way we see that remember our first point was two minutes after she left so at time zero at two minutes she was 1.4 miles from home but at time zero she's that little bit more 1.49 or 1.5 it might round so we get our values here and you know again you could put a round function in there but i'm not worried about that right now and also python it gives us this warning but it's still ran occasionally that happens just the the way it calculates some things some things you know we get a warning you know some value maybe not even related to what we were working on gives us this warning but it's still ran it still gave us all this and then we also have this graphed now if we have you know the x values or the y values so so this is her time from home so this y value notice it seems like this graph is completely irrelevant because the y value only goes down to net 9.6 we want it down to zero and then we have negative time values what you know what's that all about so remember mathematically a lot you know all these things already exist these values exist you know we make this equation here negative 3x plus 1.5 but that whole equation exists so we can actually change the graph and one of the things we have you know later on in this document is you know we can graph you can always graph and zoom but we can just change the graph here and our x minimum if x is time we can just make that zero because negative time you know she was still at her friend's house so that won't affect the the walking and the x maximum i mean we can really zoom in now once we figured out that she was going three miles an hour and she only had half a mile to go like we can make our x value really small i don't know i'll maybe i'll just reduce it to five for this one and the y minimum um is zero and the y maximum i don't even need that to be 10 i can even make it i'll make it five but we don't even need to that much we can really zoom in on this because it's a relatively short distance all right so now when we have this now we have graph we can zoom in on and you know this is the only part we needed so we could look at this that you know about one and a half miles away and so therefore you know she's walking about three miles an hour it takes her about a half hour to get home and there we go we see you know the rate you know the slope the whole equation we see the graph and then we can graph the the trip home we could also always you know change these you know if you really needed to explain this you know to someone else you could always put you know x values you could change that to time y value can make it distance from home so there we go so we have these calculators that you know we're talking about it here i'm talking about it here a lot now but if you had this at the ready you might even just you might might even just you know see this oh i see my two values plug them in click run and you have your answer you know move on in a few seconds here so some things we can do here notice number three very similar and maybe we'll do number three you know a lot quicker a boat is a hundred miles from the marina sailing directly at it at 10 miles per hour so now we already know that equation because because it's a hundred miles away so that's where we begin at 10 miles or an hour and if we want the distance from the marina then it's a negative 10 100 minus 10 x so we could always go here like that's the equation 100 minus 10 x and we could always go to something else and we could graph that and see you know just the trend how long does how long will it take for the boat to to get to the marina there you go 10 miles an hour you might even be able to do this in your head that it's 10 10 hours to get there and that's the thing we have the setup for when the numbers get more difficult but sometimes you can just calculate it yourself all right and we take a look at some of these and remember a linear function we'll get into the other functions quadratics and things beyond that but a linear function has no exponents so there we go no exponents so we see six is linear seven is linear eight is not because we have x squared nine is linear ten is not we have x squared nine is linear ten is not we have x squared eleven we have y squared so that's actually not even a function like the ones we've been doing so that's another story 12 yep actually not a function like the ones we've been doing and certainly not linear 13 if i had x in the denominator then that would not be linear but with just a five in the denominator we're okay so there we go and increasing or decreasing we would just look at the slope if the slope's positive it's increasing if the slope is negative it's decreasing and remember the slope is that x coefficient so slopes four it's increasing 15 slope is five it's decrease it's increasing and 16 the slope is negative two so it's decreasing 17 it's negative three it's decreasing so we see that and just like we were doing with these other problems you just like number 24 there you go you could just plug these in two four four ten there you go run it and have your equation and see the equation and see the graph so a lot of these you know once you have the code down you know it becomes a lot easier there you go same thing a line if we have two points then yeah we put this in there all right now let's take a look at 37 so these two lines now we get into the system of equations are they parallel perpendicular or neither well one of the things we can do then is we can look at one of our other notebook sections and we can graph these two and see so let's take a look at this 4x minus 7y equals 10 so let's take a look at this and you would have this you know how about this graph lines and zoom in or out remember you would have made something like that too and we defined our function so that we can zoom in or out and we have two lines so line one i could just graph this now also so one of the things we can do to graph these if you wanted to is put it and this would be something that you would do you have to put each of these in the y equals version because they're not in y equals and that's how we have it set up to graph you see it's it's going to be y equals and they are going to be functions so we have this well let's go to another one solve and graph a system because this one does not have to be equal to y in fact we just make it equal to zero so i actually already put this in here four four times x minus seven times y and the only thing we need to do is make it equal to zero so that equals ten subtract ten from both sides you see much quicker much easier to do and then the second one seven x plus four y equals one just subtract one from both sides and that's what we have here so it underlines these but the moments we run it'll be fine so that works out really well because as long as you have to set equal to zero just anything on the other side subtract it over and remember you would have already made this hopefully and you know your first equation your second set equal to zero and remember we're solve then we solve it and we're going to get that solution and then we're going to also convert it to y equals here and then graph it print the y equals version and when we run it we see we have the solution and it's not even you know this is again more than the question asked but if we already had the code you know we can do this the solution and yes these are two very weird fractions that you know it would be a little bit tedious if you were calculating this by hand we get the solution and so we also see the graph these are not parallel or perpendicular and we see where they intersect at this value negative 66 over 65 so all you know almost negative one little bit off and then a fraction there and then we see the y equals versions four times x over seven minus ten over seven so we see this one has a slope of four over seven and this one has a slope of negative seven over four oh then they would be perpendicular despite what this graph shows so let's try to change this because the slope here is four over seven you see even though we're multiplying by x that coefficient is four over seven and then over here it's negative seven over four and that's what makes them perpendicular the negative reciprocal four over seven negative seven over four that if you multiplied them together they would be negative one so if we change the scale on this we can probably it'll probably look more perpendicular and so this just naturally scales it this way all right so we have but that's why because in this same window the y value goes up to 15 so the you know it perpendicular this intersection would be at a right angle and the you know we just can't see that right angle because of the scale of the graph all right so that work i would work for any of these now you know 38 yeah pretty easy i would just add y to both sides you know subtract 12 on the first one and they're equal set equal to zero and we can use that same thing same with 39 maybe we'll do another one here here so we get yeah if we have this let's just do yeah we'll do one more here three y plus x equals 12 so if we go back to this then i'll make the first equation then we'll have three times y y plus x minus 12 because that i would have to equal zero three will remember python syntax you have to put the three times y whereas algebra you won't see that multiplication symbol in there so three three y plus x minus 12 equals zero and then on the second one eight x plus one plus y y so on the second equation we'll have eight x eight x eight times x plus one plus y and see i don't even for these are as bad but you know for other ones you don't have to worry about factoring it as long as it's set equal to zero we will get the solution and then we're going to show the y equals version and then graph it so yep these do have a solution where a point where they intersect and notice they are not perpendicular because the slope is negative one third you know one x over three and this one the slope is negative eight so a steep slope at negative eight and also a negative slope but not as steep so they will meet at this point there we go so pretty cool solving a more complicated system of equations solving it factoring it graphing it remember if you have you know you don't build these calculators for yourself then you have it you can answer all these questions and some other things and so we see you know the similar things lines passing through and in any of these you could build for yourself you know a notebook section of code that will do this for two for two point uh two lines or you could actually go back to the one you had and you could use the slope intercept equation for the one line and then write it in later and then you could use the slope intercept equation again for the second line and then write it in so that's what we have here like this one you know you have this slope intercept and you always could then take it and you know copy that and write it in here as you know line one go back and do the other one copy it as line two so that you know that that's one of the things you could do if you wanted to you know take take something like that and have it actually do two instead of one but nonetheless you know right now as i have it it was it was two separate things you can get the equation and you could if you wanted to copy it into the next one so all these yep same thing two points you get the equation two points get the equation and there we go just looking at that equation you know parallel they'd have the same slope perpendicular then you could multiply the slopes together to get negative one and neither is anything else as long as they have different slopes so we see all these different things you can calculate and i'll leave this to you if you want to you know go through and practice some of these see some of these you don't have to have the full equation or you don't have to have the the note jupiter notebook or colab because if you remember the pattern that slope intercept equation here what's the yintercept it's five you can see it and then for this particular one you can actually count you know oh wow look at that you know we go down five over four so the slope would be negative five over four so it would be y equals negative y equals negative five over four x plus five or if you wanted to you could just take these two points and plug you know go back to the notebook plug them in and see it generate the equation but see that that'll work for any of these you know having this you can count the slope like in 58 so b is one and then from that to the next nice point it looks like you go up two and then over three there you go there's your slope so you can you know work on these so some of these again any of these you want to see a graph we could just plug any of these into that other notebook section where you see the graph the graph all right sketch a line good and again you can practice all these if you want the tables so really just remember x and then whatever you want to call it g of x that's the y value and so if i want the equation then what we want is we can just take the first two points and get the equation so that's you know x is zero y is five and the next one x is five y is negative 10 and we can get that equation but then also if you wanted to you get the next two points and see if it's the same slope so that's how we would determine if it's linear i mean we could always just plot any of these points and and see what it comes out as so that's another way we could just plot these points as their own array and see if it looks like they line up you know that's another interesting way to do it and there we go so so yeah let me let me just show you how to do that on on one of these and so if the x values are 0 5 10 and 15 now what you can do is in in one of these where you're going to graph so if we have yeah here and we'll even keep the zoom in so one of these where you're going to graph we we have all this for the zoom but what you can do is you could make an array of the x values all right so we could get x equals and make it you know 0 comma 5 comma and you see 0 5 10 15 and we can just make that the array 10 15 and then and then you could now we could just comment out all of this because we don't need these and and take this and this first one we could put you know comment out this and we could have y1 and we could have y1 and put your y values 5 negative 10 negative 25 negative 40 so there we go 5 negative 10 negative 25 negative 40 so remember that you know that that numpy essentially does give us an array of values and we could just put our own array and if you wanted to in here we could also then put you know make them make them dots i'll say ro so we'll make them red dots for the points so we could have the x array have the y array and then that's what we're plotting there we go we just commented all these out and so we have this looks to be that they're in line and we can change the scale i like to keep you know yep it definitely looks like they're in a line so we could you know there we go we could say that yep that's that would be a line and you know that works that is linear so some some of these you might just notice okay does the slope change in in that table but also i wanted to show you for this or for this example i'm going to show you in in that table but also i wanted to show you for this or for you know this might seem like a lot to do for that little question but also just showing you what you can do if you have you know more complicated sets because all of these that you know this this is designed to be practice and just a few values just to show you but remember this is this is going to lead you toward data science if you want to continue following this path and instead of having like four values you might have like you know four thousand and so we want to know hey how can we do this we'll have other ways rather than having to you know write our own array rather to grab those values if there was like a thousand of them and then store that as an array and same with the other y values but then you know can i do this can i just take this and plot all these points and see what it looks like now these are the things we want to be able to do so you know there we go some some things you know and and it answers a very simple question is it linear because otherwise you know they might get some of these that the plot's all over the place and i could not say that they're they all line up nicely so that's it you know here's some of these you know missing values of a linear function and remember you can graph and actually introduce a table of values too if you wanted to so you know those are some other things you can do so we have these here we go and some of these we would have to put the slope formula so remember the slope formula is you know without looking at the code you know find the equation of the line goes to the points here without looking at the code the y values b plus one and then the other y values b so when we subtract that it went up one you see the y value went from b to b plus one but then look at this the x value is a and that didn't change so a minus a is zero so we have it's actually not a function but it would just be an x value x equals a so these are some of the things just you know plugging in these values for uh in the slope and you could always do some of this with you could define all of these values if you look at the the other one that we were doing here solve and graph now the you might have to comment out the graph probably wouldn't do too well but taking these and you know you you know you if you define more variables you could still take these and define these values again the solution might not be uh really possible but you could take those values and then you could actually solve and this solves it for zero but you could actually solve it for you know solve it for y or whatever value you want so simpy will do that for you so that's it you know you could have you could have a make another section in your notebook that just does all that interesting factoring all right so there we go and so we have some other ones here so so here's one um now this we have at noon the barista knows she has twenty dollars in her tip jar and if she makes an average of fifty cents more from each customer so remember that's an average so you might have customers tipping more some tipping less and then it averages out so these are good estimates because we would right away see the equation we begin with 20 and then it's an additional because we know she's getting something more 50 cents from each customer so it's 20 plus 0.5 x so we see that equation then we you know right away we have that 20 plus 0.5 x and we can do something with that we could like graph it we could find values this particular question we just says n more so it would be 20 plus 0.5 n you know we just change that variable and then at any point she can plug in a number for n figure out you know how many tips she has all right and this 115 these are some of the things that you know you can calculate a gym membership with two personal training sessions and a gym membership with two personal training sessions cost 125 while gym membership with five personal training sessions cost 260 what's the cost per session so we take it as the membership itself is just one thing and then you could have like you know each of these so really we have our x value would be how many training sessions and then the y value would be the cost and so that's it even though you know we don't it's not asking us to graph we absolutely could go back to this and two sessions was 125 and then five sessions was 260 so we could go back to this and back to the earlier one you know slope intercept from two points and we could say you know there we go two sessions cost 125 you know how many sessions and then dollar amount and then we have five sessions would be then 260 and oh now this we need to change this the x minimum now that's probably fine for five but let's take a look at this and let's see what we can do here so let's go up to 10 y minimum zero is probably fine but the y maximum and there we go maybe we'll make it like you know 500 we're going to go beyond that but that's fine and when we see the graph so we can see that we're going to go beyond that we're going to go beyond that we're going to go beyond that but that's fine and when we see the graph so we see the equation 45 x plus 35 so the membership itself must be 35 dollars and each session must be 45 dollars and so we see this graph then you know there we go you know and we see where we see the cost 45 you know almost halfway there and then we see the increase okay if somebody wants to plan you know what it's going to cost how many training sessions do i want maybe this is in a month the person wants like two in a week so it might be about eight in a month and can calculate oh there we go eight training sessions that'd be four hundred dollars or you know do i want to just try to just pay the 35 dollars and not get any training sessions and you know there we go then it's somewhere around here at the zero value and that's what we want we want to you know use these to be able to calculate some different things you know the cost like 116 here so the linear relation clothing business finds there's a linear relationship between the number of shirts it can sell and the price price p that it can charge for sure so there you go selling and shirts if the price is p and this is you know things that people want to find out because then that helps people figure out what price you know they definitely start out like can't you know go below a certain price because i have to make money i can't lose money but then beyond that we see oh wow this is shirts all different prices are possible so somebody says that finds this historical data so finding data from somewhere else some other people selling shirts oh okay i can sell a thousand shirts if the price is thirty dollars but three thousand shirts if the price is twenty two dollars so there we go again that classic y equals mx plus b but we just changed the letters change the letters p of n you know the price based on n shirt n shirts is mn plus b so there we go we can we can look at this you know n shirts now something like this i might take that the price is the independent variable because that affects how many shirts you can buy and so we might you know do something like that and then we'll get into in uh later units here we'll get into other things where we can then based on that price you know given this we can find that that you know that equation for price and then based on that price we can take it a step further and say what would be my profit because just as an example here so a thousand shirts at thirty dollars so it'd be thirty thousand dollars so they sold a thousand shirts thirty dollars each but three thousand shirts at twenty two so twenty two times three thousand is forty four uh uh sixty six thousand dollars so just lowering that not just you know selling more shirts but the price that it had to lower or reduce to twenty two dollars not that much different and so it sells three thousand shirts so instead of thirty thousand dollars sixty six thousand dollars look at that almost uh more than twice the profit for a little bit less and some people who don't look at the math of this would say that you know what is is the you know reducing it eight dollars is that going to double my profit actually it does or at least the revenue we don't know the cost of making the shirts but it more than doubles the revenue just lowering that a little bit because it reached so many people and so that's what people are looking at you know and in again in further units we'll look at the math behind you know how to how to get this how to find that maximum profit value maximum revenue value and you know what you know what are we looking at here how can we find that you know ideal shirt price so there we go there we go all these others same situation linear equation we're trying to maximize things if we look at number 18 a farmer finds a linear relationship between the number of bean stalks she uh she plants and then the yield that each plant produces so 30 stalks each plant yield you know how many per per acre so 30 stocks each plant yields 30 ounces of beans but then 34 stalks reduces its 28 ounces of beans you know they're all competing for some of the same resources so we can definitely get that you know they're all competing for some of the same resources so we can definitely get that linear equation and then we can try to find so what would be the maximum you know how what would maximize the bean yield so you know it'd be really interesting so then we get this um um yes so notice this uh and the yield would be 30 ounces that many beans times 34 oh no sorry 30 stocks times 30 ounces see then 30 times 30 so that's 900 or then we have 34 times 28 and i'm not going to do that in my head but we can see some different values and then we'll look at these in some of the other business applications later on so some more things if we if the town population and like number 120 drawing linearly we can write an equation for that you know here's another one where we often do this all the time converting temperature from celsius to fahrenheit and we have these two values zero degrees celsius is 32 degrees fahrenheit so then we know um 100 degrees celsius is when water boils and the corresponding temp is 212 fahrenheit so what you can do is we could just take these now we could also use this to make another function but we could also take this you know slope intercept from an equation equation from two points and there we go still better sub equation from two points and we can say all right so we have zero and then 32 and celsius would be 100 and fahrenheit would be 212 here we go and see the see the graph now the graph in this case okay and i'm not even worried about changing the values because the main thing we wanted was this equation here 1.8 x minus 32 some people like that 1.8 is a fraction that's nine over five so there we go that's and remember then the x value was celsius the x value was celsius so that's how we can convert celsius to fahrenheit times 1.8 plus 32 and so if we look at the increase you know 1.8 is almost two so you know each celsius degree increases almost two degrees fahrenheit increase so we can see that change so if we take a look at this you know we you could always you can always make this that you know make another function for yourself that you could you know you could just have like you could just have celsius to fahrenheit fahrenheit to celsius you know that make another section add it you know you know put a heading to it because remember as soon as you have the heading you know not a comment because we're not in the code but if it's in there then it becomes a heading and it'll be in the table of contents so you can always make some of these things for yourself and you know that's why i want to give you some of these practice problems you know if some of these are relevant or if you want to combine some of the things you know you have room to explore and do some different things so there we go and then once you have that equation you can find you know there we go that function of 28 degrees what's that become in celsius or fahrenheit or negative 40 uh that's a good one because negative 40 celsius is negative 40 fahrenheit so the one time where they actually agree it's got to be really cold but when it's that cold they agree and anybody not even having a thermometer would probably agree too yes it's cold so these are some of the things applying some of some of these and hopefully this is you know find this useful some some ways you can interpret some of the word problems and use some of the notebooks that you've been working on to solve problems answer questions and yeah you can continue you know add more to what you have you know make make it your calculator anytime you have different formulas they say oh this this might be useful make a function pick a formula another notebook section all right ready to go on to the next thing now that we've worked through the core skills in this unit let's look through some extra problems and i'm going to work through extra problems using the colab notebook so you can see how you can apply these resources that you're building and use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here for these extra problems we're going to look at just ways to set up some formulas you know if you have different situations word problems how can we decode these put them into math terms and then use python to solve them so just here's some examples and all these come from the pages in the first textbook you have the link so let's look at number 10 on average this happens to be fulltime canadians work 39.5 hours per week so if the typical adult requires eight hours of sleep per day what's the percentage of hours in a single week left over for personal activities so we need a few things here 30 so we need the number of hours in a week and even just going through your python colab notebook we have all these different things that you can do i'm going to click on solve and graph which we're not doing yet but in here you can just put a the blank you know line of code here and even in the print statement you can do a lot of math so first of all we can have the number of hours per week and that would be 24 hours times seven days and then if we want to look at the number of hours that canadians work we're going to subtract 39.5 from that and python knows the word of operation so i can just put in here i like the spacing but you really don't need it 39.5 so there we go uh 24 hours a day times seven days a week minus 39.5 and then we actually can also subtract eight hours a day eight times seven times seven so we have how many total hours in the week and then minus the work hours and then minus the sleep hours again all this in in python shift enter and we will have 72.5 hours so there we go 72.5 hours is you know and it works out look at look at that you know work sleep still have plenty of time to go out and do things and we can do all this just know knowing what we need to do each step you can break this up into different steps and put variables but this is just one way to do this all right and let's take a look at another one that number 14 housing starts in winnipeg for the first half of 20 2009 we're down 46.733 percent we'll talk about converting that in a second from 2008 when 1500 new homes were started so from 2008 to 2009 if it was the same amount it would be that times one or times 100 which would be times 1.00 so if it didn't change it would be that times one but then since it went down we want to think one minus that rate so it's not the 100 percent it's the 100 minus this 46.733 and then the original was in 2008 it was 1500 new homes so so we can just go right back to this and we have 1500 new homes times one minus that 46.733 as a decimal is going to be 0.46733 and you see that we have that that decimal so one or you know 100 i mean it's not going to mess up the code if i put 0.00 we don't need to but so you know that's 100 so if it was that 1500 times one that would be would not change year to year and since it went down it's times one minus this rate you know we'll just overwrite this and these are number of homes so we're going to round it down and we're going to say it's 799 you know that 0.005 is you know i don't know that's what five thousandths you know i don't know they put a few boards there or something on the lot said i started but there we go we're going to call it 799 and that's how we get this times you know one minus the rate since it went down and in later weeks we're going to talk a lot more about percent increase and decrease so this is not the only time you're going to see this and in that case we're going to skip some of these other percent increase or decrease but on page 73 i want to talk about this percent change so if 999 changed to 1049 so the amount of change we would just subtract 1049 minus 999 and we see you know we can do that you can do that in your head it's an even 50 cents but then the percent changes we take that difference over the original number so if it started at 999 that's the that's the difference so that's the original number and again we can look at percent change so that 50 cents 0.50 divided by that original number 9.99 so that's we get that difference divided by the original number and as a percent we're going to we're going to multiply it by 100 because it's the first two digits and even if I were to round it the next number is a zero so it's really a five percent change there we go and if you really want it to sometimes people like to put that into the formula times 100 and yeah there we go there we go as a percent I mean if it's just for your own calculations you don't have to make it fancier if you're doing this to explain you know costs and everything in some sort of business proposal yeah it's nice to have the extra bit you know have it display nicely and people can see oh this is exactly what you're talking about for your own calculations you can put it all in the print statement and you know see see the output and there we go so if we have 1999 lowered by 10 percent so we're looking at these keywords lowered by and if it's a percent we need that formula one minus the rate again might be new to think about it this way and we're going to talk a lot more about it in later weeks but 1999 lowered by 10 percent so we're not decreasing by an amount so we're not subtracting its times one minus three and I can even you know convert this as I'll just put this here one minus 10 remember 0.10 so I put that in there with the extra zeros but you can see that that's where we get this one minus three if it didn't change it would be that number times 100 percent or times one but it's times one minus three and then that's the new number there we go and this did not have any practical connection it was just what's the number if it's a dollar amount then I'll take it to two decimal places it's 17.99 so that'd be something like you know the the shirt cost 1999 and it was on 10 off so you end up paying 17.99 and knowing how to do these things you know you have calculator so you can do this you know right there on your phone because you can have this app you can set up different things for percent increase and decrease and you know you're in the store oh what would the actual price be and at that point is it worth it there we go we go and here we have this what about when increased by 40 is 3500 now for this before I even get to what we're going to calculate I'm going to put a couple comments here because I don't want the code I just want to show you the math of this if I have some amount which I'm going to call x increased by 40 percent so if it increased then it's times one plus the rate and then that would equal that new amount so you know the the beginning amount or you know x or we can call it the original amount times one plus the rate equals the new amount and I just put this in a comment we're just looking at this formula and so if I have this then the question is what amount number six here what amount when increased by 40 percent is 3500 so that would be x times and when it's one plus three that makes it really easy because it's one point four I put the zero if I wanted to equals 3500 because one plus point 40 is 1.4 and then in doing this we remember solving for x I'm multiplying so I divide and now really in the print statement I'm doing this 3500 divided by 1.4 and we see how in setting this up you know you could write your math in here some notes for yourself the formula you're using and then plug in the numbers so then we see what's the actual math that we're doing and then oh dividing by 1.4 so we'll do that and that's the one thing that will print the others are comments there you go 2500 so we have some of these all right and I actually want to skip over to this baseball one I skipped over that because I think those others are more straightforward now let's take a look at making use of you know as you're building these this notebook for yourself let's make use of the system of equations one so if we look at number 15 the local baseball team sells tickets with two price zones seats behind the plate from first base to third are priced at twenty dollars per ticket all the other seats down the baselines are ten dollars a ticket and last night's game 5332 fans were in attendance and the total ticket revenue is worth 71,000 how many tickets were in each zone so let's call x the good zone behind home plate those the twenty dollar tickets and let's call y the ones that are further out so we have the two things we want we want to know how many tickets in each zone so let's think about equations for this so twenty dollars for the good tickets ten dollars for the lower price tickets and the revenue is seventy one thousand seven fifty so if we go to our solvent graph and again you might have this you might have your table of contents jump right to it solvent graph we'll call the variables x and y and you can even write some more stuff in here and you know delete it later so let's take a look at this if our two equations are twenty dollars times x number of tickets plus ten dollars times y how many of those tickets did we sell equals that total seventy one thousand let's make sure we get it exact seventy one thousand seven fifty so now we have an equation for the revenue twenty dollars times this many tickets the good tickets plus ten dollars times this many tickets that are further out equals this how much this much money that but the error now i have two variables i want to solve this i need another equation so what about that second equation five thousand three hundred thirty two fans were in attendance so x and y were the number of tickets in each section so x plus y must equal five thousand three hundred thirty two okay so in the way we have this set up here we can just set this equal to zero so let's take the first equation and we're just going to put this twenty times x plus ten dollars times x plus ten dollars x plus ten times y and then equal to zero i just subtract that other value seven one seven five zero and then that would be that equal to zero all right and the second equation set equal to zero so x plus y so i'll do x plus y and then minus five three three two that would make that set equal to zero and this is the idea you can you can add other things here if you want to factor and then just setting up these equal to zero is the easiest way to set it up because remember we already set this up to solve factor it and then graph it and the graph you know just might help visualize it and when we solve this so there we go see the solution here and 1843 and 3489 so that's how many of each because when we add these up then because when we add these up then that's going to be five three three two and there we go that now we know how many of each each ticket so 1843 people sat you know from first base to third and 3489 as we expect that's there's more room out there in the outfield and beyond so you know that's how many people sat out there and now and now we can figure this out and we see the graph just to see the comparison here so pretty cool we can we can figure out given this information how many people sat in each place and who knows maybe if it wasn't totally sold out we can get a breakdown all right and you know some other applications we'll skip some of the percent increase maybe we'll take a look at this one here so number 15 from page 84 so if gabriel is famous for her trail mix recipe let's talk about but the by weight her recipe calls for 50 percent pretzels 30 percent cheerios 20 peanuts and she wants to make two kilograms of this mix so we could just calculate how much of each she's mixing so pretzels cheerios and peanuts and this one we could just go right to right to here and before i even get to a print statement we could just define some variables in python we like to use the underscore so maybe pretzel weight maybe we'll do pretzel uh pretzel there we go equals 0.5 times two times two because it was 50 percent pretzels and she wants to make two kilograms cheerios is going to be 30 percent and peanuts 20 percent so cheerios equals 0.3 times two and then uh peanuts equals 0.2 times two now we have now we're going to we know that we have the weight of each of these and you can put comments in there for yourself if you need to and now we want to uh talk about the cost so there we go if we have the the cost so all of this pretzels times 9.999 and so if we have this our cost equals pretzel times 9.99 because that's how many kilograms at 9.99 a kilogram plus and we'll look at cheerios 6.99 and peanuts 4.95 plus cheerios times 6.99 plus peanuts times 4.95 so now we have the total cost here and that should be then the cost for two kilograms fine but the question then asks what's the average cost per 100 grams so 100 grams compared to two kilograms is divided by 20 and we could do the comparison if we wanted to also bring it up to the proportion earlier on in this notebook but knowing that this is two kilograms 100 grams and so it's we can just put this in the print statement cost divided by 20 because that's the cost for 100 grams there we go so how many of each if we're making two kilograms but then the final question uh we need to divide it by 20 we only want 100 grams 100 grams and there we go 80 cents which makes sense because if we take a look at the total cost for each of these yeah when we when we're buying this full two kilograms you know given these rates yeah that's 16 dollars worth of trail mix i mean you know hopefully two kilograms of this this mix it'll last a while so she just wants to make 100 grams so that's why she is just dividing it by 20 100 grams you know so that people can eat it before it goes stale there you go 80 cents all right not bad so some other things that we can look at making use of these calculators that we have we can take a look at things like various like options for things like green energy and so i i put in here you know just a link to one thing you know one thing and it was i think i did one solar panel one battery so supposing you know you want to buy this you know live live off the grid or you know supplement electricity for somewhere so here's a solar panel charges up a battery and the cost was 245 dollars and then the output is 110 watt hours now 111 so you can certainly recharge this as as as much as possible that's just you know that output i normally would then think about this as using 111 watts for an hour and 111 watts that should be enough to charge you know power your laptop charge a phone few light bulbs also so you know that's something you know you could easily make use of 111 watts like i said laptop charge phone power a few light bulbs that'll be plenty and then that way so what what this would be is so the uh electricity very often is in kilowatt hours because we use so much and that's like 15 cents i think is about the national average so 111 watts that's you know 10 of that a little bit less so yes that is 1.5 cents so you know this you know this 111 watt hours and i was thinking you use 111 watts for an hour so that would save you a 1.5 cents okay now beyond the savings if you're also doing this for the sake of being off the grid or you know uh you want to run run some stuff like out in the middle of nowhere where you can't really plug it in well that's the value of this but let's just say you want to compare this to electricity cost so you know that 245 dollars and if you run this for you know all you're making full use of all this for an hour then it'd be 16 000 hours and dividing that out um rough estimate you know doing a little bit of rounding here thousand days you know which is you know a little bit less than three years and if you do that you could uh you know pay for itself in a thousand days which for a lot of investments that's not that bad and then after that free electricity you know you paid for this and all along the way you know you're saving this money for the thousand thousand days and then after that there you go you've already saved enough money to pay for it and you get the free electricity i did another one just as another comparison so this wind turbine i find all these nice you know it's kind of interesting isn't it you know it's kind of interesting so uh did that not click there we go so this particular wind turbine that can handle like low winds and it's rated for you know 400 watts but um the idea is that if it's low wind it might be a whole lot less and somewhere in here you know it can say 2.5 meters per second low wind speed which should be about five miles an hour and even at that point it'll turn it'll generate some electricity so let's say we have something like this and this one was 270 dollars 400 watts but low low wind it may just be 40 watts that's okay so let's just say you can generate 40 watts for 24 hours because not dependent on the sun not dependent on the sun you know you could have wind blowing anytime and we round that up to one kilowatt per day 40 watts it'd be like you know 960 watts we'll round it up because this is all just an estimate anyway so that one kilowatt hour you know on average costs about 15 cents so if you have it somewhere where it's low wind there we go that 270 dollars divided by 15 cents gives you how many days 1800 days so this one would be if it was low wind we're talking like five years to pay for itself and then after that you know free electricity again even five years not so bad as a return on your investment but i just happen to mention if you if you do live in a windy area and let's say you can produce a constant 400 watts you know this is a lot of places you know especially if you're near like a body of water sometimes lakes ocean bay you know wide river you could definitely get a consistent wind and if that's the case there you go and it would only take about half a year to pay for itself because if you're producing this 400 watts that's 9.6 kilowatt hours per day or dollar 44 and then just do that division you know 270 divided by a dollar 44 187 days you know just over half a year and really then enough wind in enough space hey by three of them and because you're making you know you're generating 400 watts uh three of them is probably enough to power you know somebody's house like everything so you know you're you're you're saying you would be saving all that electricity you'd be making use of the three of them and power the whole house yeah about six months so uh you know the same that it would be that about that same yeah so really interesting and this is the thing like you can do these calculations i just wrote them here but you can also bring up the google colab and do these different calculations graph different things if you wanted to see see it and that that that's the idea with having all all you know all the math calculations you know at your fingertips you can count you can calculate things and figure out is it worth it for me oh hey if i spend this much money and then you know generate this for electricity yeah maybe or or you might say it's not a priority right now and you know that's it but you but you know based on the numbers so that's that's really some of the some of the uses of of some of the math we've been doing and you know also making use of you know the colab uh graphing some different things or solving some problems so hopefully this was this was useful and hopefully this gives you ideas of other things you can do once you set up your your uh colab notebooks and you have the ability to calculate and graph some different things you know make use of it to see what you can do to make money or save yourself money all right and we'll go on to the next unit then so let's talk about quadratics so the word quad means square so why would we have you know quad square but then it's and we call this x squared but yet there's a two so where does the square come from the square in quadratics comes from the idea so where does the square come from the square in quadratics comes from the idea and this goes back to the original algebra back with alkhorizmi so the if i have a square and you know i don't know each side i'm just going to call them x but then the area of that square would be x times x would be x squared and that's where that's really where this notion of quadratics comes from you know as actually tied to physical area the area of a square but there's a lot of other applications and this comes up so often that we get beyond even the the actual measurements and we can use this for a lot of other things so we look at the our equation y equals x squared so if i were to graph this and when we get into the code we're going to get into graphing and we're going to look at some of those applications too but when i'm going when i graph this anytime i graph a quadratic it's going to be a parabola and you know it'll probably look like a nicer parabola than that but it'll be a parabola so that means you know and if we can picture this the positive values for x give me you know i square them and give me some y value but then the negative values when i square that negative times the negative makes it a positive so that's why it curves back around and so you know we keep going up and then these two ends go on as long as you want them to but yeah the the negative x values get squared so then the y values would still be positive i still can get negative y values because if in my graph i subtract something you know i can subtract you know five or something like that so there's definitely some x values there that even squared are less than five so when i subtract i get a negative y value so you can still do that but you see the the general trend of the parabola here and they you know kind of look like a smile but if you have if you have a negative x value you so any negative x value it looks like a frown so our coefficients here that one would would be negative so let's yeah let's take a look at this if i had any general quadratic and this is the general form so if i have the general form of any quadratic would be y equals ax squared plus bx plus c and that covers all the possible coefficients for any quadratic equation so a would be my coefficient for the x squared term b would be my coefficient for the x term and then c would be the constant and if i look at these as long as a has a number then i can have a quadratic b and c can be zero like the original y equals x squared oh well there's no x term b is zero c was zero and then the other one i i brought up i put minus five so then c would be minus five b would still be zero so there we go the general form for any quadratic and as long as a has a number to it then it's a quadratic a just can't be zero then it's some some other type so if we take a look at this and you know a is negative it opens down like a frown a is positive opens up like a smile and the other thing about these quadratics is they're all symmetrical so the vertex is the point at the bottom or at the top depending on how it turns up of where the gravel turns around so since it's symmetrical the x value is going to be this definite formula negative b over 2a so what i have is once i have a b and c i can plug in my four my values for a and b and get the x value for the vertex and then once i get the x value i would plug that x value in to get the y value and then i'd have this point and then that would be the point that if i had my parabola that would be the point at the very bottom where it turns around and also just looking at that x value remember they're symmetrical so that would divide the parabola nicely so we're going to look at doing this in the code importing a b and c and then finding the vertex finding a lot of other things so we're going to make use of the code to be able to do that so i'm not going to worry about all the factoring here but what i am going to show you is one other thing that we're also going to look at the code but sometimes it helps to see this formula is a lot of times when i graph this if i were to graph the parabola you know here's my x y and you know let's say i have a parabola there i might also be interested in the roots where does the parabola cross the xaxis and so when it crosses the xaxis then y would be zero because you know on the axis i'm not going up or down at all so if i have something you know we would talk about solving for x but if i have something like this yes i have equal zero and i have one variable which is x how would i solve it we approach it a little bit differently than we would the other the other ones because when i square root something and that's going to happen as a part of the process when i square root something the answers the positive there's positive or negative possibilities because if i had if i had the square if i had let's say four and then the square root that it's positive four or negative four because if i had or positive two because if i had two squared that equals four but if i had negative two squared that would also equal positive four so if i'm going the other way if i have a four and i'm square rooting yes it could be positive two or it could have been negative two and so when i'm finding the roots for a quadratic you know setting this equal to zero one of the steps is going to involve square rooting which gives me a possibility of a positive or negative answer and then that's where we have you know our two possible answers and so that's how in one formula you know many quadratics you know the way they cross they're going to cross the xaxis and touch it twice so to find the roots i want to find out those two values and the formula will give it to us so again knowing a b and c the quadratic formula all right so and notice it's that that vertex plus or minus something and then that's how we use plus or minus square root of b squared minus four a c all over two a again so this is the quadratic formula that you know because i have plus or minus it will give it will give me two roots you know i know and we'll see in the code we would run through this once for plus get that answer once for minus get that answer there we go but also since i'm square rooting something we're just we're going to stick with the real numbers here and if i have a negative value under this radical then there's no real solution so you know we could get into imaginary numbers and you know it's not real solution but why should we let that stop us but for our purposes we're not going to worry about that we're going to say that if it's negative then there's no real solution and we're going to just stop there so in doing this i would often test this we call this part under here the discriminant and i would often test this you know b squared minus four ac does that is that zero actually that can be zero which is fine because that'd be plus or minus zero you know that means it would have one root it would just touch the xaxis that's fine but if it's negative then that means i have no roots and i would have a parabola that just never touched the xaxis so that's that's perfectly fine it's possible and in that case i would test that first and if i knew that then that would save me some time you know not having to do all this because you know if we did this old school and just factored it all out you know right right in the notebook you know sometimes it takes a while we're going to look at how to make this a lot easier you know writing the code we're going to put these formulas in and then we're going to find the roots in the vertex oh you know maybe we'll even graph them too so this is the formula and notice in math they're both had the same denominator so i could i could make this all over one denominator like that works out you know do the adding or subtracting in the numerator all over one denominator and mathematically that works out you know it's another way to write it so this is very often this is the quadratic formula as we would often see it just like this all that all over 2a all over 2a and so for as complex as this could be there's only a few formulas all right i see this i get a b and c formula for the vertex formula for the roots we look at graphing it and then we'll you know then we can look at some of the applications but this is where this is kind of the essence of looking at quadratics here and so now let's take a look and we'll go into some other um well you know how to solve these formulas and everything so let's take a look at the code so solving a quadratic equation is much easier with code because all the formulas that we were talking about that we would work out by hand we're just going to put them all into the code so so you can just define a b and c once and then run those values through all the formulas you need and output your answer roots vertex and whatever else you need so i just picked some values here that work out uh nicely a b and c and what do we want to do let's first of all just print it so we'll print out what our function is then we'll calculate the vertex so notice vx i call the variable and that's the negative b over 2a that's going to calculate the x value and uh python does no order of operations but this 2a does need to be in parentheses because it is the whole denominator so we get that x value and then we're going to take that x value and plug that in for the one for the y value a times and my x value vx and then square it plus b times vx plus c so i get i plug all that in get the y value and just like before i'll print it now um there we go we just print the equation now we have the vertex as a point and we'll go on to the roots and the roots remember the quadratic formula d it works at abcd but it's actually d is for determinant here that's the part that's underneath the square root because if that's negative then i won't have any real roots and so i'll just define d as that part under the square root b squared minus 4ac and then i'll test it here if d is greater than or equal to zero because if it's not then i'm going to print out no real roots so if as long as it's greater than or equal to then we're going to calculate the roots and remember it's the rest of the quadratic formula so since i already figured out d i'll make use of that so negative b plus or minus so we're going to run through this twice for the first root negative b plus the square root of d and then all that's over 2a and notice parentheses for the numerator parentheses for the denominator and then the second root negative b minus the square root of d and then all that's over 2a so i'll print this out calculate the roots print it out or you know no real roots if that's the case and there we go so i actually already ran this and what do we have y equals so x1 x2 x2 plus 5x plus 6 and then we have the vertex is this negative 2.5 negative 0.25 and then the roots x equals 2 negative 2 and x equals negative 3 so there we go if all you need to do is solve it it's nice to have all these formulas at the ready just change a b and c and run it again so if we want to graph it also we can do everything we were doing plus the graphing part remember our imports for graphing matplotlibrary numpy i'm also going to import math for some things that we'll do i'm going to define a b and c i just pick different numbers here and i'm going to print out a b and c so this part is very similar i'm going to print this out calculate the vertex print that out and now we get into the graphing so notice i didn't do the roots yet and we just have x min x max you know everything else we were doing for graphing define the x values set up the plot and now i can graph the parabola i just called it y1 even though i probably won't have a second y value here ax squared plus bx plus c there we go i'm going to graph that whole parabola and then that's y1 so i'm going to plot x and y1 then i'm going to plot the vertex as a point so i put this all down here for the the plotting parabola the vertex point and then notice this one up here by default it's going to be a line and here i'm defining two arrays each of them with one item and then that's going to be a red dot so then we're going to find and plot the roots everything we were doing with calculating the roots from before but i'm going to add this one line here pi dot plot and once i get the plot i'm going to plot root one root one zero and root two zero and remember you know the array of my x values and then the y values and this one is going to be a green dot so that's why it's good so it's going to be a green circle so i'm going to plot that and then i'm also going to print out the roots because i want to see that too so when we have all this and then we run it it'll have your equation here there you go x squared plus four x plus one give you the vertex and give you the roots now these roots are irrational you know that's why it gets this wacky decimal we could you know do quite a few more lines of code to get to the wacky radical answer but we're not going to worry about that now that that's that's perfectly fine if you're writing this down somewhere you might round it to a couple decimal places but here we go we plot the vertex as a red dot the roots as green dots you know see where it crosses the xaxis and then we graph the parabola and so i can redo this then let's just try these numbers that we were doing before one five there we go six and that's all we need to do change a b and c and it'll run through and calculate all this there we go x squared plus five x plus six and here's the vertex negative two point five negative point two five and then the roots two and negative two and negative three there we go now there we go negative two negative three where it crosses the xaxis and see the y value of that vertex is negative point two five so it's two five so it's just below it but just barely and there we go so we can plot our quadratic formula we can graph it we can get our roots in our vertex and for most things when you're solving quadratics that's what you want to do so let's take a look at how a b and c actually affect the graph so i'm going to show you some sliders here and that's going to come up again in one of the other notebooks so how a b and c so the first thing is we're going to import this and just that way map plot live in line and we're going to write that first and then we're going to import these widgets and interactive the same and then the same other things we're going to do with the plot so the way that these widgets work is we're going to put all the graphing in this function so now we're going to connect again with functions here i still defined it just as f and that's because later on i wanted that to be a short name for that line but you'll see so i'm going to define this f but it's the function of a b and c i'm going to take those three things a b and c as inputs now you could always make this say quadratic and you know do everything that you want to do with the quadratic roots vertex we could actually take everything that we were doing before with the plotting and with solving and put all that in this function at that point i would call it more than just that if i might say quadratic and take the argument a b and c and do everything you need so kind of cool that you can do that but here we're just going to focus on the graphing so my function there we go x min x max all those i'm going to define all these things for graphing remember a b and c would be the input so we would have those and then plot the the parabola plot plot the the parabola plot uh the vertex as a point plot the roots as points and um there we go this all of this here is really just extra for the sake of setting the equation as the title of the graph i did that instead of printing it out which i guess we could we could have done but i wanted to show you we could set it as the title of the graph and the title needs to be a string so here i'm going to take a b and c and convert them all to strings then i'm going to take all of this and i was you know this doesn't necessarily connect with html but i was thinking of that h1 for the heading so i'm just going to combine all these or concatenate all these that exact y equals combined with sa that string and i'm going to combine all these as h1 but if i just leave it at that it'll still display in a weird way as the title there'll be like extra quotes and i don't like that so i'm going to just find this other one h2 which just it's just blank with quotes and that's going to be a string and i'm going to loop through this for w in h1 you know w like for word in h1 and then h2 equals h2 plus w so i still had to convert these two strings put it all together as h1 but then i still needed to put it in h2 if i do it this way combining these now h2 is a nice unified string without a lot of extra quotes and so that's you know again it's a lot to just it all leads up to the sake of for the sake of putting this as the title okay and you know we'll see hopefully you know it looks nice and you know you see oh that was you say oh that was worth it all right so here's where the interactive comes in so we have this interactive plot now that's just the variable that i chose interactive plot but here's what's really happening this interactive function so if we take a look at this so it runs this function f so that's where the name of your function goes and that's where you see how long this line got i wanted this to be short so i just that's why i called it f so it runs this function and then that function and then it defines a with a range from one to nine b with a range from negative nine to nine and c also with a range from negative nine to nine a i started at one because if it was zero that's actually not a quadratic and i want to illustrate quadratics and so i'll start at one so we just define this interactive plot and then notice this as the last line of code then if i just say interactive plot it's going to print it's going to run that so we'll see this interactive how that makes the sliders here there we go and it default shows them in the middle and see this is what i wanted it to be that when it starts out you see the title of the graph y equals five x squared plus zero x plus zero you see that's it just and if i go if i make that down to one this is the parent graph the most basic parabola you know x squared and i don't have to put the plus zero but in this case it's going to write that every time and then we can see what happens if i move c you see i can move c and it'll adjust the graph it'll adjust the title of the graph there we go and then we can see what happens if i move b b you see it moves it along here and now it got to this point that now where it is i do have roots in the vertex that i can display and then if i have i can see where b as i move that around affects this whole graph and i can see then how a affects the whole graph so we see some different things that we can do and all these are going to be accessible to you you can tinker with these but this is all you know it was just i wanted to show you this interactive that you can set up sliders and in this case to display the display the graph see the roots in the vertex you see and i move that down so we display the graph see the roots in the vertex and adjust it with sliders you can see how a b and c affect the graph so knowing this and being able to have all this code at your disposal you can really see you know most everything that you're going to need to do with quadratics you know find the roots in the vertex see the graph and you know adjust it and you know do some other things so there we go this and some practice you'll you'll know quadratics inside and out um now that we've worked through the core skills in this unit let's look through some extra problems and i'm going to work through extra problems using the colab notebook so you can see how you can apply these resources that you're building and use that use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here so here we're going to walk through the foundational math certification too and if you have not already done it please give this a try on your own this is for if you're if you've already done that and you're stuck or if you just had a question about one of the parts you know we'll hopefully answer all those and just like the other certifications this one you're going to make a copy and put this in your uh in your google drive so you know file save a copy in your drive and this one we're going to focus on building cartesian graphs so most of this is going to deal with graphing we're going to look at some different functions and what you can do with that so you make a copy in your google drive it might be in your google colab notebooks folder where you can put it wherever you want and now hopefully you know i already did that so hopefully you're now working from your copy and we need to acquire the testing library so the code that you write just like the certification one the code do you write when you run it it'll run through it'll run through these tests to see if the code is what it's supposed to be and then give you some feedback so this first cell you don't need to do anything and you might just take note of what you need to do here for future reference in case you want to have your own custom library that you know you include in your colab notebook so this custom library it's on github and this code is going to get that and save it here in a work in a local working directory so you will need to run this for each new session as i mentioned before it'll the session will time out because of an activity after 30 minutes at the most or even if you're busy 12 hours it'll time out so each new session run this and it'll go through and then import the library so we click to run yep and see just a few seconds code test passed so there we go so let's take a look at some coordinates here cartesian coordinates and they're named from renee decart because that's part of his name cart and you know that's it you know you've arrived in life when your last name becomes an adjective so he among other things invented this x y coordinate system that we're familiar with with zero zero in the center and then x moving horizontally positive to the right negative to the left and y moving vertically positive up negative down so then each x y coordinate tells you you know how much you're going over and how much you're going up and we can plot all these points our goto library is going to be matplot library and as we were talking about importing your own personal library custom library we needed to do that in a little bit different ways a few more lines but a lot of the common libraries uh i say commonly you know reasonably used i've been around a little bit uh behind the scenes google colab already did that install part so you just need to worry about importing it so you know we have that nice benefit you know things just work in the google colab so matplotlib.py plot and we're importing this library yeah that's a mouthful so we're going to import it as plt that way every time i reference it plt.plt. i don't have to rewrite all this okay so this is going to be the first thing is the basic just here's a graph there we go and you probably could change these variables but i don't this is what's in the example in the documentation for matplot library so i keep these and it does seem weird that you're assigning two different variables to this but it's you could have multiple subplots we're not going to worry about that right here but you could have multiple subplots and you know your one graph could have like nine little graphs in it if you wanted or something like that but so that you would put numbers in there but we're not worried about that now this establishes that this plot exists and then plt.show that's always going to be our last thing to show it you run it and there's our basic graph notice we didn't add anything else um so there's not nothing going on here and zero zero instead of being in the middle it's in the bottom left because we're just showing the positive quadrant here so just positive x values up to one positive y values up to one and that's it and notice all these the test and yes code test passed if you click the button correctly so we'll go to step two all right so now we have the standard window still not highlighting each axis and we're still going to go through import this establish this but now we're going to add something here so this gives us the size of the graph and i just put this here we're this would be better we're going to modify this as we go on but that'll give us the size of the graph 10 in every direction so when we do plot.show so you see it does give us 10 in the direction and if you follow these the zero zero exists in the middle here even if you don't see the axis lines and zero you know positive to the right up to 10 negative to the left down to negative 10 and on the y axis zero in the middle positive up to 10 negative down to negative 10 so they could line up in the middle here somewhere all right and this one was one of these that i ask you to change the values then rerun so it's run this to see what it looks like then change the window size to 20 in each direction so we go through here and we can just move this 20 20 in each direction now we notice from this even the one where we only went up to one the size of this graph doesn't change but we see the lines on the outside do and the tick marks change so now we're going up to 20 in each direction there we go code test passed so some more graph dimensions now this is where i was saying we're going to modify this this is really what we were doing in that last one plt.axis so what were those numbers it really was an array of x minimum x maximum y minimum y maximum as just one group notice the parentheses and then the open brackets so that was an array and that was that defines the window size so that's why it's plt.axis so i think it just makes much more sense to define those as variables up here so this line here the plt.axis does not need to change and then it's really easy for you to then change the window size if you want you just change those numbers so there we go and this one is not one oh yeah this one is you could run it notice it should still do the same thing there we go and then we're just going to change these to 20 in each direction 20 you know and again we see 20 in each direction so this is going to be our goto way to set up the graph and as we keep going let's look at those those axis lines that you might be making and we're going to change these to 20 in each direction so we have those axis lines that you might be missing i know i was missing them so how do we want to display these well we have our basic graph and we have the directions here if you were doing this on your own that the b that we're going to see here makes the line blue so we have this dimensions that we're building upon and these first two lines there we go subplots the window size so now we have the plt.plot and that's going to get plot a line for us or points now in this case we have this array here from x min to x max and then this array here what this is is a an array of the x values and then the y values so we have so we have it starts from x min zero and then goes to x max zero and rather than plot to those two points it plots a line from that point to that point and with this the line is going to be blue if you don't put something like this in here python will pick the color of the line for you and then for the yaxis then we're going to plot zero zero y min y max so what is this telling us it's from the x value of zero to the y value of y min so from zero y min to zero y max it's going to draw that line and again i'm forcing it into be this this space here whether you have this space or not doesn't matter so there we go so these two plot statements these two these two plot statements define whether you know define that it's going to be a line and then what color and i even have the comments here so then you see blue xaxis blue yaxis so yaxis so that's it we're going to show this plot and we see the x and yaxis we also see again the the value of defining everything up here because then all the rest of these the size of the graph and then where these lines go to and from it's all based on this up top so if i change the dimensions of this then everything else will adjust accordingly and the axis lines will still go to the ends so we run it and then change b to g and there we go change to g b and there we go it's green so you can make it whatever you want i just happen to like blue so there we go changing these so now supposing i wanted to plot a point like we saw that we did that into define a line we're going to plot a point well see as we continue to build this define these values here and now we're going to we're just going to end up keeping all of this as the window size and then the x and yaxis and keeping it blue so how do i plot exactly one point so notice this array of x values of which there's only one in there and y values so it's five four now here's what else we have it's ro that o makes it a point in fact a circular dot so if i have just b with nothing that's going to make it a line if i actually just had r with nothing that would make it a line but it actually has nowhere to go too so that would be weird but ro makes it a point and we'll see we can plot other things too so keeping all that the same and just plotting this one point one point there we go one point and it is five at five four over five up four now we could put the grid lines in but that'll be another story so now change the location so the directions run it then change the location to negative five one one okay so then we just change this to negative five and change this to one there we go and when we run it so we see negative five one all right so plotting a point we indicate that it's a point this way and plotting a line we have other ways to indicate that so how would i plot several points well let's take a look all right so a ray is to plot each point you know that's what we've been doing and we can still define it as an array here i'm just going to define the array here an array of the array here an array of x values and an array of y values so if i have these x values and y values we go down here so notice all that's still the same and here i can plot x y now i chose x y because you know x values and y values and i did not use exactly x and y as other variables already so we're okay i mean you really could name these arrays whatever you want but there we go we have what am i plotting the array of x values the array of y values and then here i have red points for each of them now right here i only have one l one number in each so we can add so that's the assignment for this step add two numbers to each so that also graphs one one and two five okay so the x value would be one and the y value would be one so there you go so i have point four two and then point one one and the next one two five so x value would be two y value would be five and there we go all right and changing those arrays now i can plot i still don't have to change this code plot that array and we see three different points because each of them because each of them i made a red point so let's mix it up let's plot some points and some lines okay so that's it hopefully you are noticing the subtle difference between the points and the lines each plot statements takes an array of x values an array of y values and a third argument to tell you what you're plotting so the default plot is a line if you actually skip that third argument it would give you a line and python would pick the color rbg indicate the colors and cmyk actually also work as just letters and beyond that there's actually a few other colors where you can just write in the word for the color give it a try you know i'm not gonna list all the possible colors but yeah give it a try and so these are the colors so then we have if it's a dot it's going to be ro the o indicates a dot rs you could plot a square and then r with a little carrot symbol would be a triangle so that if you have different things you're plotting you can mix it up and have dots or squares or triangles and then of course that combined with the different colors you can plot a lot of different things on one graph so notice we've already defined these arrays here and i'll call this one line x line y point x point y so yeah not liney and pointy and there we go so we have these we'll keep all these defining the graph the same way and let's plot so if i wanted to plot so the directions are a lot of red line and two green squares so if i plot here so line x comma line y and we want it to be red and it's a line so there we go and point x point y and it's a green square gs so you see if you've been working through the course hopefully this is a review and if you're coming at this you know relatively new hopefully it's seeming pretty straightforward but then the more you do this the more you just get familiar with with graphing everything and you know you'll be able to do this right off the top of your head so we graph this and we will see so there's the red line from that point to that point and the green squares over here here so there we go so we see how we can graph a line and different points okay so here's a scatter plot game and i call this making a scatter plot game but i kind of made the game so but we could take a look so this is what we want to do we want to look through this code how can i plot a random point and then you know you're going to try to guess the point i made the i made this uh you know a smaller axis for whatever reason and we'll define this once and here's what we're doing each time if we are we're going to get an x point which is going to be a random number so notice how this this is going to be good for different games or different things you do import random yes there's a whole library of randomness and random dot rand int and it gives the range here from x min to x max from x min to x max and actually the way most ranges work in python x min is a possibility but x max is x max it will won't go to that it'll go to the number before so y point y min y max so there we go so you see again if i change these dimensions it will still give me a random integer that so now if x point is the random integer then i'm going to store that as my x value store this as my y value and you see essentially it is an array with one element you know but then and i might have been able to skip this step but i like really spelling it out you know what what this is and now we go here i'm going to apply as a dot so there we go this uh gives the grid now this is we you know we had their axis lines this is the grid plt dot grid so that'll help because the game is going to be here's the point you tell me what the coordinates are so that's what this is yes and we're going to prompt for input enter the coordinates of the red point and that's going to be an x y with a comma so we're going to split it at the comma and that's going to be an array with two elements so then yes array zero so the first element cast as an integer that's going to be the x guess and the second element is the y value cast as an integer that's going to be the y guess and this is part of why i like to break it up here because i have this here these are the points this defines it as an array but this is the point that we wanted so we test it if x guess equals x point and y guess equals y point then that's going to increment your score and there we go all this in the loop and then if statements in the loop now the loop's done and you know in range zero to three we really because we're including zero we actually don't need that zero the range will start at zero by default so there we go for i in range it's going to go through it three times because it'll be zero one two and then again python ranges if it's range three it won't do three it'll do zero one two and then that's it it so we go through and guess it three times and then print out the score so the score was way at the top initialize it at zero and we'll see see what happens here so you see with the grid lines we can see so zero and look at these four five so the coordinates of the red point would be zero five and here we have zero negative three zero negative three and this is why i made it eight in every direction because it actually the grid lines just work out a little bit better so what's the coordinate of this point so looks like three on the xaxis and then down three so that would be three negative three all right and there we go you can try this out it'd be a good way to test your understanding of coordinates all right and step nine so now if i want to graph a whole linear equation so this was nice if i define these two points and i can draw a line between them but what if i actually just want the whole linear equation so numpy is the library we're going to use for that so we're going to import numpy as np now that one i mean numpy is not that big of a word to write but as np it just seems to be a common thing so you will see np dot this or np dot that for the different functions all right and then we have the linspace function so that defines an array of values an array of values when we're talking about functions we can you know loop through but this gives us that array and we're going to plot the function with two arguments so if we take a look at this all these so after we import numpy same setup for the graph and then linspace we give this now i purposefully made it a little bit less you actually we'll get to some other things that we can do with this that'll make it even better but i made it purposefully a little bit less than the maximum values here on the graph and then the third argument so it goes from it's the x values is what we want for this so the x value goes from negative nine to nine and in that there are 36 points so believe believe it or not that's actually going to be enough which is you know four points you know like every one fourth is a point that's actually going to be enough and notice then what we're plotting here are x values and you see that's the array of x values numpy gives us that array so that x values and then given this i can just put this equation in here as that's the y value each time so as it goes through this array of x values that y value is going to it calculated each time and then that's what it's going to plot so then when we run this we see that it actually plotted this point this this graph there we go two x minus three and yep looks like it crossed there about negative three and looks like about up two over one etc okay so there we go um um and we have this run it and then change it to graph negative x plus three so all these can stay the same now in this case since this was cut off here we didn't really notice that but if we just then change this to negative x plus three now we see the the limitations of this here because it cut cut off there so what can we do here well we could in this just make this we've already defined x min and x max we could actually make this go from x min to x max and you'll see this come up in the next things we do all right so we can create interactive graphs so in this case we've been talking about linear equations let's let's use these widgets to make a slider so we're going to import all these things here now you know numpy for our array of x values matplot library for the graph for the plot and then we have we're going to import this in line and then the widgets so we can make all the graphing happen in a function and we have there we go function of m and b and if you're if you're working through some of the other things in this course this might be familiar and then we'll see just you know what's the same and what's different about what we're doing here with this function so if i have this function of m and b everything happens in the function defining the x values y the maximum the final x values y the maximum defining all this and in this case we're going to give it a title because we already know that this is going to be a slope intercept equation so we're going to give it that title all right and then we have there we go np.lin space and we could always make this now this time i also rewrote the numbers but you could always make this just x min x max and something else here so what are we going to do here we're going to plot x and then mx plus b because these m and b values are going to come from slider and then the function is going to take that so here's our interactive plot i mean i could have made the variable something different but the function is interactive and then it takes f what's what function and then m equals so we give it a range and b equals and we give it a range and we run this interactive plot so so we can use this to plot now notice it default goes to zero so as soon as i increase m you see now i have a line with the slope of two line with the slope of four and then b is still zero but i can move this up up and i can move it down and we see that i can adjust my graph so it's nice to have these things that we can adjust a graph all right and then if i'm graphing a system so maybe you are already graphing system of equations that then hopefully this is a good review if this is new then take a look at here's one way to graph a system of equations all right same imports and same defining these now here's where we make it a lot better so how many points do i want i'm just going to take it also based on this x max minus x min so that's going to give me remember x min is very often the negative so that's going to give me you know this range and then times two so that might be enough times 10 that might be plenty for even more complicated graphs so that's how many points i have that you know there's the range and then times two and then define the x values once and here we are defining this linspace from x min to x max and then this many points so we see again we're building these i have this comment in there for you but pretty soon then you won't even need that and now we again we have our complete uh our base of what we're importing and then the basics for the graph so then i can plot two lines you know define y1 in terms of x because i just make my x values x because that's convenient and what what am i plotting x and then y1 there we go and in line two notice it doesn't have to be linear this this plot works you know x squared minus three and what am i plotting the x values and then y2 and we can see these so there we go all right change y2 and rerun the code so y2 we're going to make it negative x minus three so we're just going to rerun this as negative x minus three and we see there we go and with these you know i could define what color i want these lines to be but without that python gives me the colors light blue then orange you know it'll go through a few colors and then we'll go through a few colors and then we'll go through light blue then orange you know it'll go through a few colors and there we go defining two points so systems of equations you know so there we go that was graphing two equations and you can graph more if you want systems of equations we're going to import simpy so the simpy library and we probably don't need to import everything but i do for this particular example so the import asterisk is going to import everything from the simpy library and we're going to define these symbols so now i'm going to here i'm going to define x and y as symbols that i'm going to use to solve so i could define these separately and you'll see in other places that we do but what do i have i have lin solve and then notice open parentheses because that's the function for lin solve and then what do i have i have this array of these two equations set equal to zero zero so that's what you know it would be this two times x plus y minus one equals zero and then the other one x minus two times y plus seven equals zero so that's how we have to set it up if i want to solve these two it would be those set equal to zero and then i'm solving for the variables x and y and what happens when i run it it gives me this negative one three as as a point that's the solution there we go so one way to solve systems of equations and if we change these to 2x plus y minus 15 equals zero so 2x plus y minus 15 we'll just change that and then 3x so remember three times x you know we'll write this 3x but in python we have to remember to put the multiplying symbol in there minus y so we're going to flip that part over and that's it just 3x minus y equals zero so there we go and if we run that there we go 39 is the solution so there you go one way one of the ways to solve a system of equations so graphing a system of equations solving a system of equations and you may have already gotten to it set it writing the code to solve and graph and output you know make the output even you know a little bit nicer so if you haven't already gotten to that you will so now we can get the solutions as coordinates so as we saw there it returns a finite set but given that set we can convert that into an x y coordinates so also here i split out first and second as two different as a way to put these here so now when i have this solution i don't have to change this code then solve first second and then we define them up here sometimes that's a little bit easier now we know that that solution is going to be a finite set so this is how we parse it out i'll call this variable x solution is solution dot args zero zero and then the y value is going to be solution dot args zero one and so there we go you don't have to think through like all the different ways that that's organized especially since you know you think that okay there's only one x y solution but there's a lot going on here so now i have these and i'm going to go ahead and so now i have these as x solution y solution and i'm going to print them out x equals y equals and just for kicks i'll also print it out as a coordinate pair so see zero zero i mean it works out because x plus y and x minus y so they would cross a zero zero so there we go again another way to then elevate that and solve it just showing you different different ways that you can parse these things out now we can even get the system from user input so i'm going to print for anybody you know this remember to use python syntax and then notice how each equation is already set equal to zero because i'm going to prompt for the input here first and the first equation and then second and the second equation and i'm not even casting these as anything i don't need to because then linsolve works out like that there you go first second and then parse the solutions so let's do this as long as as long as two things set equal to zero and i do want an x and a y so so i will have three times x plus four minus y so if you think about things in terms of y equals then you could just put a minus y here so three x plus four minus y okay and i just hit enter and it jumped down so now the second equation and we have all right so what if i have five times x what if i have five times x plus five here we go and notice the space minus y here we go hit enter it jumps down and there we go we have an x and a y solution pretty cool all right and then solving graph which which in in this whole course the solving graph we have the you'll see as we build and you know you get more and more familiar with all the different ways to solve and graph then you'll see that we can get more and more elegant solutions here we're going to import matplot library and simpy and numpy so we're using all of these so this one here we're just doing this with linear equations and knowing that it's linear equations notice i'm only asking for m and b separated by a comma so i'll call that input mb1 because then i'm going to split that and make that an array and from that i'm going to take the first one and that must be m and then the next one that must be b so we see that you know take this input i wanted it separated by a comma so then we're going to split it at the comma so that input is a string splitting the string makes the array and then now that array the first one is array the first element element zero i'm going to cast it as a float called m1 and then element one the second element i'm going to cast it as a float and that's going to be b1 and we're going to do the same thing for the second one m and b and then everything's going to be the second mb2 split it at the comma makes that array and then that array the first element cast as a float m2 second element cast as a float b2 and now that i have these i can solve it so here we're using simpy to solve it because i'm going to say that first equation i'm going to give it this variable first is this because i know it would be something in y equals mx plus b so it'd be m1 times x plus b1 and then minus y that would be that set to zero and then there's the second and then linsolve first second and then i'm going to just in case there's just in case there's a weird solution i want to take that solution to three decimal places so i'll take that solution cast as a float and then round it to three decimal places for many things you know i might not need it but i give that option so that you know whatever comes up it works so there we go solution i'm going to find these solutions three decimal places um three decimal places round them and now i have these the x solution and the y solution so then to make sure the window includes it rather than give it to be my normal my normal window and this is a float so if i cast as an integer and then i can add 20 subtract 20 you know i gave it each of these so that way each of these solutions i cast it as an integer and i know that my graph is going to include that solution and then given these you know points how many points do i want and then and then graph x because i already used x in other places so graph x is the value for my x values so there we go min max how many points and here's my y1 is m1 times graph x plus b1 and everything here for the weight y2 m2 times graph x plus b2 so then when we set up the graph and line one there we go graph x y1 and line two and the point so now i'm going to plot the point which is x solution y solution as a point okay so that way whatever equations we have and then print out the value so if we take a look at this x solution y solution we run this this first equation all right so let's see let's call it three five and let's call this one negative one one oh because i didn't put the comma so three five and negative one and there we go six six so we have these and we see these points this is the solution even though it showed up as not a nice integer decimal numbers but then we see the graph and then we see the point where they intersect and these are kind of the things that we want to build upon this is actually one good way to plot and graph where if you know that it's linear then just prompt for those coefficients and we can do that for other types of types of functions you know when we get to the when we get to all the parent graphs and all the different types of functions you see that this is one way we can prompt for you know if it's that type of function prompt for the coefficients and then that works out to solve use those coefficients to generate something in simpy to solve and use them again in that plot library to graph and then we can plot the point display the answer all right pretty good right pretty good so the next thing we have is quadratic functions when it's not a linear equation anymore not not a nice straight line so anything that involves x squared is a quadratic so x squared because it could be the area of a square i don't know the measure of the side but i know that the area would be that side times itself so if i if i have x squared in there there's going to be a parabola and here's the simplest here's the the root formula ax squared plus bx plus c so b and c could be zero they can be any number including zero a has to be a number because if a was zero then i don't have a quadratic so then you know there's the simplest one so now let's take a look at this back to our graphing setting up our points you know range our points linspace all this to set up the graph and i'm just going to have a basic y equals x squared so there we go x y y equals x squared and if we run this that's the most basic parabola so a in that case would be one and b a in that case would be one and you see it does touch it zero zero all right the most basic parabola so now quadratic function abc's let's take a look at abc and let's you let's go back to our interactive and we're going to use these widgets so so this one here all right you have a and b but we forgot c and we could have also put the values on you know in a different way but just did it this way that's fine now notice here it's our interactive that we want ab and c so we're going to run this function f f and we see function here of ab but i want ab and c so that's that's going to be your that'd be your assignment add c to the slider so there we go out here comma c equals and then i'll do the same values negative nine comma nine nine okay so there we go so now i have this interactive i'm going to have three sliders one for a one for b one for c and then when we define the function abc it needs three as the input and the plot is going to be ax squared plus bx and then we have to remember we also have plus c so now when we run it now it's all zeros that doesn't look like anything but as soon as a as soon as a is something now we have a parabola whether it be one now we can just take a look at what does a do to the parabola you see as a gets bigger the parabola gets narrower and zero we don't have a parabola but negative values it flips it so positive like a smile negative like a frown and there we go so let's let's have a positive so now what does c do i'm going to skip over b for a second what does c do notice the parabola keeps the same shape and c just moves it up or down and could be zero that's fine it just touches it zero zero so that's what c does it moves it up or down the yaxis and then b is the most interesting it moves it down and stretches the parabola a little bit now watch what happens when we move it so that was a very negative but now when b if b is zero it's symmetrical on the yaxis but then it goes around and then now positive b value stretches on this side so there we go some interesting things about the quadratic the a b and c and what they each do to the graph so this bottom part or if it's flipped over that'd be the top part where the turnaround happens that's the vertex so that's the point where the parabola turns around and the x value i'll give you the formula here negative b over 2a so the parabola turns around and the x value negative b over 2a so then given those inputs then we're going to create the parabola now this i even have the comment here because certainly i can print x with the two asterisks for the exponent but this is um just another fancier way to output this and you'll see it'll come out as an exponent it'll look like an exponent so supposing then we just prompt for these input values we know we know we're doing a parabola so we just prompt for these input values all right then then what would be the vertex well the x value was negative b over 2a so that's exactly what we're going to do negative b divided by and the 2a both all that needs to be in the denominator so i do need the parentheses so negative b over 2a because if i don't it'll divide by two then multiply by a do an order of operations now if i have that value then given that value what do we have that's the x value so we have a times and remember the general form of probably ax squared but what do i have i have vx is my x value squared plus b x so that'd be vx because i want the x value of the vertex plus c so there we go so i use this a b and c to get the x value of the vertex and then i'm going to plug that in to get the y value of the vertex and then we can plot it and then x minimum so for whatever we enter we'll just make sure that that does show up on the graph so counting whatever these values are and you know there you go take it as an integer take it as an integer and that's 10 minus 10 there we go and it's going to plot this point so notice just that x value just that y value as a red point and i probably could have done this based on x min x max but just doing this anyway notice the lin space just giving us that enough before and after it and then here's the y value so then we plot x y without the third argument by default it's going to be a line and then python will pick the color so let's see let's take a look so it's going to show us you see that's ax squared you see that little two that was the whole idea to get it to be that fancy so ax squared let's just try this one a is one and b is let's say negative negative five and c is six how about that so we see the vertex and the vertex is 2.5 negative 0.25 and we see the parabola and then we see the vertex plotted so pretty cool and that's it just same formula so if we just prompt for those coefficients and run it through those formulas we can plot this this graph just like we did the linear equation plotted for m and b we can do a quadratic and plot for a b and c so you know we could we could do this again and see some different graphs so now let's take a look at how to apply these parabola qualities to projectile motion and yes everything going through the air is a projectile and they all actually make the path of the parabola pretty interesting it can't not be a parabola so as we look at these the path of every projectile the graph of this that we're going to look at is going to be for something thrown up in the air straight up in the air so in this case the a value is going to be negative 4.9 each time because it accounts for gravity and that would be in meters per second squared so we know that the a value stays the same the b value represents the initial velocity so that'll change depending on how hard you throw the ball up in the air or launch something so that gets their initial velocity is b and then the c value is the initial height so c would be zero if something started on the ground you know like kicking kicking a ball and if it was on the ground you know the path of the ball is a parabola and then in that case c would be zero the initial height in meters so we have our classic quadratic ax squared plus bx plus c and in that case x is going to be time in seconds and then y is the height at any given time so let's take a look at how this is similar to what we were just doing but a little bit different so a stays negative 4.9 so i don't even need to prompt for that if it's a projectile that's going to stay the same the initial velocity i'm going to prompt for it and cast it as a float because remember the input will come in as a string so rather than just say oh what's b i'll prompt it as initial velocity and then c would be initial height now once we have those you can and i already did copy the vx and vy code from the last step because the equations for the vertex are exactly the same so you know once we have these then we use the same formulas vx and vy then if i'm going to graph it i'm going to change these now our default is always 10 in every direction just seems like a good starting point but really we just are going to be concerned about positive values here so i made x min negative one just that little bit negative just so that you can see the axis same with y min made a negative one just so that you can see the axis but any negative values won't apply here now because these were float values up here so how do i get these well the x value i'll tell you this all these parabolas are symmetrical so the x value of the vertex is exactly right down the middle sometimes we call it the line of the middle sometimes we call it the line of symmetry so it's symmetrical so whatever that x value is and we know we're dealing with all positive values here so whatever that x value is of the vertex i'm going to double it so that's why i have two times vx so there you go get that x value double it i should be at the end but i just added 20 just to be sure we see the end of it to you know and maybe a little bit more it just gives a good perspective on the graph so that's it take that x value double it i decided to add 20 but then we have to cast it as an integer because the other ones came in as float values and your dimensions here have to be integers so there we go and then sit with the y value i'll take that vy and yep that's the vertex that's going to be the highest point of our projectile and i'm just going to add 10 to it i figure that's plenty just enough so that you can see see this and it's not right at the edge also casting it as an integer because these need to be integers so this should look familiar we don't need to change this i only i actually changed this to four just to give you know four times this just just in case to make sure our graph isn't choppy two might even have been enough but there you go four should be a nice smooth curve to the graph and there we go we define the x values same function we've been using before and then that that that will work again we need these to be integers for this okay and define the y value as our quadratic ax squared plus bx plus c so now we're going to plot that same stuff we've been doing plot and then we're also going to plot you know a red dot for the vertex and display it so all this is going to be very similar but you'll see the prompting is a little bit different and then the graph the scale will be a little bit different so when we run it initial velocity uh let's call it 40 and initial height two so this could be something like a baseball that you throw up in the air you know you could probably throw it at 40 meters per second straight up and then by the time you release it yeah it's about two meters off the ground and so we see these and you see these and you could always round these i didn't for this but you always could round these numbers but we get the value of the vertex now what this means in time is that just over four seconds after you throw the ball up in the air it will hit its maximum height of a little more than 83 meters 83.6 meters so there we go if you could throw a ball you know that that hard and you see it the reason i have the negatives you see the blue for the for the axis so you know if you could throw a ball at 40 meters per second then uh straight up and you know there you go wow it can reach you know 83 meters in the air and then time wise you know four set four seconds or so in is good where it's going to hit its highest point and then a little more than eight seconds it'll hit the ground so there we go we can see what our parabola would be and you can use this to you know estimate different things relating to parabolas whether it be a ball thrown or a rocket launched yeah there we go so see i i just broke this out as you know see if everything else stays the same see just shifts the graph and here we're going to import all these to display this and rather than put a slider just decided to make this and i made it a negative so we take a look at this take a look uh our x values and then we plot we decided to make create this c value c equals and if we take a look so what do we want in in this range i'm going to actually didn't use c itself as a as a variable before this so i can use that for c in this range then i made it negative x squared plus c and then what are we going to do we're going to plot it you know to find the x values ones up here and here's the y value plot it c value and this just i did that just for the sake of setting the title you know there we go so you'll see how you'll see how that comes up in the title and we're going to display and this little this little display here you'll see how that that just makes it play out the the notice i don't have the defining x min max y min y max this uh plt dot gcf will actually just make the graph fit and each time so here's a python sleep method the argument is actually just in seconds sometimes sleep methods are in milliseconds this one's just in seconds so i wanted to display that and then wait a half a second then clear the output and then and then wait so you'll see it'll display this and then clear the output so you see so all those different c values we can see it grow and we can run this again if you want to see this so all those different c values and notice the the yaxis changed each time because it accommodated the larger graph so we can see that value all i have to do is you know increment c and it's the same shape it just moves up there we go okay so we found the vertex but the quadratic formula since we're dealing with quadratic equations what does this do this gives you the roots now if it was a protractor now if it was a projectile that would be when it hits the ground so you know that's a good way to think about it you know ground level is the xaxis and then you know the roots where does it hit and then you know like roots of anything growing you know wants to go below but we can call them the roots they are the xintercepts because it's where the line intercepts the xaxis or we can call it the zeros because y equals zero so you'll see it come up with all these different things so now if i know a b and c here's the formula if i were to write it not in code so that if i know you know what x value makes y zero that's the question so that x value would be negative b plus or minus the square root of b squared minus four ac and all of that over two a and notice we have the plus or minus because somewhere along the way deriving this you do a square root and then the square root you have two possible answers so that and that's what it gives you the two possible answers here but also notice this is the common way you write it but this it's the vertex plus or minus something so we often write it like this you know all over one denominator but if you split it up this is the vertex you recognize that formula plus this and then the vertex minus this so you see that's another just another way to write it whether you split it into two fractions or put everything together over one denominator but when you write it this way then you can see that's the vertex plus or minus something and again we were saying that x value of the vertex is right in the middle so it would make sense that that value right in the middle and then plus something and then that value minus something you know that's where we get our two roots you know they're symmetrical you know they're symmetrical all right so given a b and c we have this formula to be able to find the roots now i have again here i'm just going to import math because i need that for the square root and i have it printed out like this where i just have the comment to remind you that that just prints two as an exponent i think that's just a little bit nicer and so i looked that up and found how to print that out nicer so you're going to print this and it's going to be showing you all right ax squared plus bx plus c equals zero and given that then you're going to prompt for a b and c so there we go now here this is where you're going to check so i just put these here we'll define these variables here they're zero but we're going to overwrite them not here but a little bit later because i want to define these variables that they exist outside of this if statement but i want to run it through this if statement here now notice what this is b squared minus four times a times c because remember that's what's underneath the square root here and if that was negative then your answer is imaginary because you can't square root a negative number now certainly you know some mathematicians you know years ago decided well why should we let that stop us if they're not real but for our purposes here we don't want a negative under the square root we're not going to go into imaginary numbers so we're going to test if this is less than zero then we're going to print no real roots and this there's a word actually for this stuff that's underneath the radical here and that's the discriminant because if b squared minus four ac if that was less than zero then there's no real roots if that actually equals zero then this plus or minus doesn't mean anything because plus zero minus zero it's the same thing so if that equals zero then there would be one root and then any other number then it would be two roots and i think that still comes out the most common it's going to have two roots but these other options come out often enough no real roots what that looks like in the graph is a parabola that does not touch or cross the xaxis so you could have that you know just parabola and it opens up and crosses early you know at some higher y value you so that's the discriminant and knowing that tells us you know if it's negative if it's less than zero then there's no real roots it if it if we only have one root if equals zero and there's only one root we're just going to print that out twice and not worry about it so how are we going to translate this this quadratic formula into this well we're going to do x one and two we're going to do the very similar thing just one's going to be plus in the middle one's going to be minus so let's try this so we have negative b let's do the plus side first plus math dot sqrt of b squared minus four times a times c c all right now all of that remember was in the numerator so i'm going to put parentheses around all this as the numerator and then divided by our vertex two divided by two a okay so order of operations all this stuff python will know but then since i have numerator and denominator i'll put everything in the numerator in parentheses and then everything in the denominator in parentheses and then the second root i can really just copy this and paste it here but the difference is it's going to be minus there we go so now a lot of things you can do that you know in solving a quadratic very often we already did the vertex and that and finding the roots these are really common things that you need to do with a quadratic formula so having this there we go showing that display so let's just try numbers that work out pretty nicely one and we have to do five and six let's try that look at that the roots are negative two and three good now i pick those that works out as nice integers but this will still work if you have you know like one five and let's say five you see it does have roots definite real roots but since it doesn't certain ones don't work out and there's actually like a more complicated square root answer for this this that could be a bonus bonus thing to do to output that square root answer so there we go the roots are this and this and you could always also expecting you know that you might have some weird irrational roots you could round it to you know three or four decimal places and i'll leave it up to you if you wanted to to you can put it put this all together and have something where whatever the application you can prompt for a b and c get the roots in the vertex and graph it you know as well as displaying the roots in the vertex so you know just to show you you know we can put these two things together you know some interesting things you can try so sometimes the graph i like the graph but i know it's a parabola i'm much more interested in just a table of values so in this case and just for the sake of it i made this linear so here we go we have this now notice i didn't have a fig dot or a comma x i just have x equals so i'm not going to need the figure here the graph i just want this because this plt dot subplot in matplot library that's that's going to give us a table and access off right because i just want a table so here's our table we're going to we're going to give it a title we're going to run this and then change it and notice how this works i can define my columns and i could use another variable but i just made it cols for columns so i can define my column headings and then each row notice it's a tuple tuple of values so in this case in the first row x is zero and y is zero and then what i can do is in this case since i have this for a in range i just decided to make it from one to ten here's what we do rows dot append and then i'm going to append my x and y values you see so x is my a value whatever that's going to end up being well it's going to be one then two then three and then two a you know just something simple for the y value so this is this is how you can get a table of values rather than graph it you can put it in a loop and append each row so you set the columns set the first row and then append each row so now outside of that loop x dot set title i've already defined it up there and then take a look at this plt dot table and it takes the argument cell text equals rows column label equals calls cell location and you know i feel like that's uh that location's you know okay this goes all the way over here and we just close the parentheses there just to show you so it's still this last direction plt dot show but what we're showing is a table instead of a graph and you see how it looks now you could always do both so you know that would be that would always be something you could do you do both table on table on the graph but who knows maybe you want one or the other and it as this is leading to data science this is like an introduction there's some things you can do to generate a table values or things like that but as you get into you know in the next math course and then certainly when we get into the stats course we're going to look at like all different ways to make tables so this is just one way and you can we'll see even more ways but there we go so y equals 2x there we go and you could always make this quadratic or whatever you'd like it to be again just for simplicity to illustrate the table itself i wanted to keep it we'll just call it y equals 3x plus 2 and where do i need to put this well this is just because i wanted to display the correct thing so that's going to be the title and here i this is where i'm going to take it and a is my x value so it would be three times a plus two there we go and we run it it you know and zero zero five ah now zero zero actually should because since this is plus two now one of the things you can do is you could keep this and then start the range at zero and remember for the range at zero you don't need to put anything if that that would start at zero or you could just say oh i know what this initial value is going to be let me just put that here so you know a couple different options there so there we go so there we go we have our table okay so different ways to display and i just wanted to you know have a nice an interesting uh mini project here so we have the quadratics and we're talking about projectiles so we could have you know we could we could you could make a projectile game um so what this would be is remember knowing where you're you're starting from you could uh randomize the height and location of a wall and you have a toy rocket that must clear the wall so you can you know the game would be determined what initial velocity would get the rocket over the wall and you could take it even further that bonus animation path or you could you know there's some other things you could do so i left this here for you to write but i'm going to show you here's one thing you know one one way to do this so we imported all this stuff and actually a lot of the things i took from uh one of the earlier steps where you're graphing a projectile so i took a lot of things from there and i'm also going to import random and import math so here i just now i i made this a modification so this is the what it will print out it just has to land so many meters away so you could um randomize also like h for the height of the wall i just made it the location of like a finish line so here's this random integer between one and a hundred and then it's going to print that a toy rocket has to land this many meters away and then we'll go through so here we go um so input initial velocity and instead of it it's zero zero it could i just put it made c1 it you know just because but it really could be zero and then same things we want to represent the vertex here and the x min what i would do is x max now i just made this 200 because i know that the wall is going to be you know anywhere between there and 100 and you know i just left it as that so and the y maximum i left it so that you could see where the projectile goes but we could always go back to what we were doing before and copy the y minimum and y maximum the same thing where we get this that where we get x min x max we could always copy we could always copy these because that's what we want to do here we want to put these in and that was that was the idea i want you to you know make use of code you already have that's these these later steps that's really what what it is i want you to make use of code you already have and then maybe modify it a little bit there we go we could have now this would be fine because wherever that wall ends up being or the the finish line this is still gonna it will still print everything and that'll be fine there you go path to the projectile and then here we have the lot the line for the distance and i'll just make it a red line and so notice i just have i just have it go all the way up to the top here location my two x values and then from zero up to y maximum so that's just going to be a line if you wanted to also make it a wall so you could make you know h equals and we'll do the same random integer where do i want this to be i want this to be i don't want um a hundred's probably plenty you could even make it a thousand um you'd be surprised you know these rockets um um has to uh uh clear a wall so many meters away and there we go so if h would be the height and then down here the height of the wall would just be h so that's the slight thing in looking at this a lot of times the wall the scale of us the wall end up being so tiny but it's fine we'll uh we'll keep that there so there we go so the line and plot the parabola now notice i have the roots and i pick just one of them and as it turns out because of the way you know a is negative the the negative b minus is the root that we want that's the one that's going to for the for our purposes here that's the one that's going to be greater than the parabola so notice you you could you know copy the quadratic formula again and the way it displayed i wanted to round this one so round to two decimal places so here we have if root two is greater than or equal to location i wanted to print out the distance i wanted to print out the distance and then tell you success and if not missed it by that much here we go all right so this is it there is actually no test for this but you could see so here we go a rocket has to clear a wall 85 meters away initial velocity and you could say oh okay my initial velocity 300 and then we see that initial velocity is 385 meters away and you see then we're still we didn't clear it so missed it by that much and you can run it again now other things you can do with this so 19 meters away i'm still going to just really increase the velocity of 250 let's make sure we clear it you see and we see the wall here and oh boy yes we did clear it now some of the other things you can do is you could take this even further and knowing that distance take that as your x value of your vertex and you could write a formula that would always make a parabola that perfectly that perfectly clears this this wall that'd be pretty interesting or you could modify this game to say that it has to actually get to a certain distance um not necessarily that distance or more but maybe you say all right you have to hit a target that's exactly 50 meters away and you don't want to miss so that would be an interesting thing because then you could you could actually write the code and i'll leave that to you as you know as for something as for something you could write the code to calculate the projectile that will land exactly at that spot so there we go now for this you know upward motion one of the ways you could take half of that you know whatever the distance half of that and then that's your x value um of the of the vertex and you can use that to calculate you can you can use that to calculate some formulas and as i said we'll get even better formulas as we get into precalc because we will do things to adjust the angle and such to get it to be exactly a distance but there you go so so showing you how to make a projectile game i think it's pretty interesting you know the you know that you could and you could even make it you know like loop through this and you know you have to how many ones do you get correct but there you go the projectile game now continuing on this the this is going to be more like the openended part all the things that we've been doing you you should put this together in a function that will graph or that will graph or display a table solve a system of equations now if you've been working through everything else in this course you might have some of this already put together and that's where this uh the certification project here is you know hopefully you've built up to this so you know you get to this point you're like okay i know how to do this and i have some of this stuff in place so they kind of just put it together to organize it use some of the code that you've already made you know you want to have all these different functions because then you get to the certification project too and you're going to uh display you know this is what you want to do build the calculator that does this display the graph and a table for any y equals input cool and you can make that prompt for input or something just very clear in the code that you know here's where the equation is solve a system of equations without graphing graph two equations and plot the point of intersection so there we go that's going to be pretty big you know graphing the two solving and graphing and given a b and c plot the roots in the vertex so that'd be some things you know we've been doing some things with linear equations do some things with quadratics enter a b and c see the graph plot as well as the roots in the vertex maybe also print them out you know solving and graphing systems of equations showing the table and then you have you know these projectile games you have the projectile game you have the scatter plot game you can even modify that scatter plot game and make it you know something else that might be interesting so there you go so you have the things you've been working on you put it all together to build this graphing calculator and that's going to be the certification project and by now you're even deeper you know what you're doing in algebra and we're about to then have some more twists and see some more complicated equations some more we can do with this all right so what do we mean by parent graphs and we'd have heard this in code the parent or child that the child graphs have everything that the parent graphs have plus some other additions and so these paragraphs are the basic patterns that other graphs then add to or change so let's take a look at this the one the most basic would be y equals some constant which i'll just call c here and so that would be this blue line here just a flat line no slope you know like y equals three or y equals four or something like that it could even be negative but that's it nothing else and whatever the constant is it's always going to be the same so that's why we call it a parent graph and whatever the constant is that graph's going to have that same look you know flat no slope you know nothing else going on just y equals some number and that's why it's a parent graph because that's like the basic pattern now we were talking about things like y equals mx plus b well the paragraph for that is y equals x just y equals x so notice b is zero and just that basic it's not y equals a constant because there is a slope to it but right the paragraph is just y equals x and then we can get like y equals you know two x plus one or anything like that we can have other things so this wouldn't add anything this could add two things you know i have a slope or i could have a different intercept you know so there we go this so that's the parent graph another one i wanted to show here because i think the drawing of this works better than somehow sometimes how it plays out with python but this is the floor function and so it's this step function some people call it step function floor function greatest integer but the floor is when you're not rounding you're just dropping the decimals even if it's 0.9 doesn't matter we're just dropping all the decimals so it's the same value so here all these decimals it's zero until i get to one now it's one and then 1.1 1.2 it's all the same until i get to two so that's it there there are no in between points here it's just that integer and then at the next integer it jumps up so again that's a parent function and the floor function the ceiling function where no matter what it is i go up to the next number or the round function they're all very similar looking graphs just shifted a little bit so that's why that's again a parent graph we talked about x squared as a parabola and i didn't worry about drawing the even the axes for these because i want to get the idea of this general shape and then x to the third it's kind of like half this parabola bends down now the reason why i just have these is because as you get into like x to the fourth x to the fifth all the even exponents if it's just the parent graph look more like this all the odd ones look more like this but then if i have other things going on in that graph so remember x squared could have ax squared plus bx plus c now if i had other things going on it's still a parabola but it's a little bit different shape parabola maybe it's like a little bit narrower a little bit wider or it moved somewhere else but it will still be a parabola the x to the third if i end up with x to the third plus other things in there then that those curves get a little bit deeper or you know that's you know again paragraph and then beyond that we get some other things and we'll take a look at some of this in the code too and the same with if i had x to the fourth so x to the fourth is going to look more like this maybe a little flattened in the middle but if i had x to the fourth plus a bunch of other things in there you know plus three x squared something else times x you know all these other things that could have three turnarounds at the most you know x to the fourth could turn around one two three times and you know might not be always perfectly symmetrical but if all the if all the exponents are even then it actually would be symmetrical kind of cool it works out that way so these other graphs we have the paragraph but then we could have other things going on and i didn't want to draw a lot of this here because i want to talk mostly about it when we get to the code because that way we can see the graph and the way python displays the graph is going to be much better than my drawing we get the sense of the parent graphs these are the basic patterns the simplest pattern of that type of graph and then we can look at what what else we can change or add to to each function and then how that affects the graph so let's take a look at the code so here we're going to look at all the parent graphs and the code to create them and they're all going to start out with the same setup we've had so far for setting up any plot mat plot library numpy set up our dimensions our points set up the graph so this simplest one is a just a constant y equals five or if y equaled any constant number notice x is not even in there just y always equals five so when i plot this in the same way that i'm plotting the xaxis i'm just going to have this plot minimum from the minimum to the maximum and then y is just always going to be five in this case i'm going to make it a red line and that's what it looks like it's a flat line there's no slope because i don't have that whole part of the equation no x value and y is just always five and it would be the same if y equals you know seven point five or y equals two or you know anything flat line no slope no slope so that's a constant graph and then the linear graphs we were talking about linear graphs but this is the simplest linear graph y equals x so anything else i do with that you know at have a slope in this case it's y equals one x so the slope is one plus zero so the y intercept is zero so again the simplest and then anything else i do that is an offshoot of this parent graph so there's our simplest and notice everything else i do to set this up and how do i plot it my x value and then the y value is x so there we go x x and there's my y equals x graph the slope is one and it just goes on the diagonal like this there we go so every point here you know three three four four five five etc so the quadratics we were looking at quadratics this is this basic quadratic graph y equals x squared so before i do anything else to it that's just enough to make it a parabola and here we're plotting this my x values and then the y value is x squared and there we go so our parabola so in this case you know x squared so a is one b is zero c is zero that's all we have and then any other thing we do to the x squared you know add other things x squared plus you know uh three x plus four or something like that or some you know whatever else we would have is uh an offshoot of this paragraph so there we go and i can make it negative and change that and we see the negative a flips it upside down so we have you know negative like a frown positive like a smile so i'll go back to the smile there we go again the basic paragraph x squared x squared and then a cubic graph y equals x to the third so the quadratic is x squared because it's like the area of a square if i know the sides the cubic x to the third because it's like the volume of a cube if i know the sides so setting up the graph here and uh the comment we'll talk about later just starting out with the basic x to the third and we see the graph looks like this so some you know some of these you know i could sketch it out enough to show you but we see it kind of looks like a parabola with the left side flipped down but not exactly and this is the simplest cubic graph so what i wanted to show you is also supposing we have supposing i just have other things so plot the x values and supposing i had like x to the third minus two x squared minus three x plus four you see i can have all these other things going on in the graph and this is how it affects the cubic graph you see it gets these deeper turns that were just kind of flattened out before but x to the third is going to turn around at the most twice so there we go we see these possibilities here all right so again you know now this is not a parent graph this is you know a more complex graph the parent graph still is x to the third so we're going to so we go x to the fourth and yes they have a name too quartic so x to the fourth and all of our even exponents so we see i'm just plotting x to the fourth all the even exponents look a lot like this so x to the fourth if i also had like x to the sixth notice how it's similar and i probably need more points to make this look smoother but you get the idea now this this is where it gets beyond what i can graphs what i can draw so i like showing showing up with the code but all these even exponent graphs uh we might be able to do x to the eighth and it a lot look horrible that looks kind of horrible so x to the fourth is probably the last good one other than that then we have to change you know how many points we're doing to really make it a lot smoother but that's where it kind of looks like a problem it just flattens out more around zero and all of the even exponent parent graphs will look like this and i also could have x to the fourth plus other things and then the graph would look totally different that could go up and down as many as three times i could have as many as three turnarounds and quintic you thought we were going to run out of names but nope x to the fifth we have a name for that quintic all right so x to the fifth and when we look at this there we go x to the fifth looks a lot like x to the third so all the odd exponent graphs are going to look a lot like this but again just a little bit more flattened out and if it's just this if i have x to the fifth plus other things then the graph could be all all over and it could turn around as many as four times but there we go so all the even graphs are like x to the second or fourth it's symmetrical about the yaxis and kind of looks like a flattened parabola all the odd graphs look like this x to the third the fifth all the odd numbers look like this you know and it would go back and forth and then with you know as they get more complex with other things going on you know you're getting beyond the parent graphs then we have all they can actually have the ups and downs so the absolute value graphs and there's a lot of patterns with absolute value graphs that are also the same as they would be for x squared graphs the way the vertex can move around so the simplest absolute value graph is just this absolute value of x but like the other graphs i could be multiplying by something here inside the absolute value or outside i can add or subtract something so this is how i would write absolute value with the two vertical lines here next to it not parentheses and here's how i would put this in code abs and notice i don't actually need to import anything that's part of the core python library so that's the absolute value of x so as i plot it then it looks like this because absolute value means it's just the number like positive or negative doesn't matter it's just the number so it would be like plotting y equals x and that would be in the positive direction but y equals negative x so for all these negative x values the y value is positive because it's absolute value so that's why instead of continuing down like the y equals x graph it comes to a point and makes a v so there we go so just like x squared whatever x is it's going to end up being positive when you square it absolute value just makes it all it just doesn't do anything except make it positive and so that's why there's there's similar patterns to some of these but there you go perfectly straight lines come to a point that's the absolute value graph and then i can have square root graphs there we go so here's how i write the square root if i was writing it out and if i'm plotting it i'm going to use this now there's math dot square root and there you know and other ways to get a square root but i'm going to use numpy dot square root because we're already using the numpy library for everything else so since i'm already using numpy for everything else that i'm graphing i definitely want to use np dot square root so the the comment we'll talk about in a second but here's the basic square root graph and we can start talking a little bit about inverse functions because this is the inverse of x squared and that's why i also included this that if i uncomment that and now run it you see now just the square root it's just going to be positive because if i include the negative part then that's not a function these x values have two possible y values but when i put them together i see that it looks like a parabola on its side and that's really what it is that's the inverse of x squared because i want to do the opposite i square root things so yeah that just helps us see it but the full graph the true square root graph is this because then it's still a function all these x values have one y value and then there is just no y value beyond here beyond this all right so there we go so there's the square root graph and another way to do this is with a rational exponent now overall for this graphing python does not like rational exponents so i'm going to do this here and i'm going to show you that this actually did work x to the one half exponent but if you try this for any pretty much any other fraction instead of one half it's just not going to work it's just going to give you an error python doesn't like it but there you go that's the same that same graph so x to the one half in solving it if you weren't graphing it you know it works out nicely the denominator is your root so square root denominators so square root denominators two or if i had a cube root the denominator is three so i'm going to write it like this here x to the one third so that's the cube root of x so it's what number times itself three times gets me x so like the cube root of eight would be two because two times two times two is eight so we're getting the cube root and i don't need to worry about the rational exponent here because numpy just like there's a square root there's a cube root also cbrt so that gets the cube root and this one i can have negative values because if the factor shows up three times i can have negative negative negative so that works so there we go i can get the cube root of x there we go so somewhere around here i have when x is eight y is one you know there we go and then we get the cube root so the all these parent graphs just like the other ones i could have other things going on in this equation the cube root of x plus something that would shift it up you know i can move it around but you know these are the basic paragraphs these types of shapes and then other graphs are just you know versions of these all right so the floor function now there's the floor notice it kind of looks like absolute value but the it does have feet at the bottom that go underneath kind of like an l and a backwards l to show you the floor the uh other function that's similar that's the ceiling function and the floor function is the one where you drop all the decimals so it doesn't matter if it's like 5.9 and it doesn't round you just drop it and the answer is five the floor function just drops the decimals and just takes the whole number other times people call it the greatest integer function or the integer part function same idea there's also the ceiling function which no matter what the decimal goes up to the next one and we have round they all work very similar so we have all these and to plot the floor function now i want to show you this this is actually the function np.floor but there's a reason why i didn't do that first because i put all this in in a loop to graph this as a bunch of points because i feel like this illustrates the floor function a lot better it does give these steps and sometimes on the graph people look call it a step function so it's the same value until you get to the next integer then it jumps up and it's that same value until you get to the next integer so all these are just sudden jumps once it gets to the next integer and it's the same value doesn't change because if it was 3.1 the floor is 3 if it was 3.5 the floor is 3 it's 3.6 you know all those values if the floor is 3 and then when it gets to 4 boom then it jumps up so the the reason why i went through all of that is that the actual floor function i feel like doesn't display well but i'll show you you see it gives these values but these vertical lines really shouldn't exist because it's not continuous like that and so it's just what you know numpy just wants to connect it but that's what the floor function looks like in numpy but truly mathematically that's not what it looks like so that's why i wanted to do the loop and show you so there we go so that's the floor function exponential functions so now we go from things like x squared to x is the on is the exponent so what happens when the base doesn't change but then the exponent changes so that's two to the first to the second to the third well we can right away see that that value is going to get really big really quickly and so here to the exponent of x so we have we see it gets really big really quickly and then when we think about our exponent rules when x is zero anything to the zero is one so so all these exponential functions cross the yaxis at zero one and then for negative exponents that flips it to the denominator so two to the negative first is one half to the negative second is negative is one fourth and so the negative exponents for negative x values just really get smaller and smaller so it has that curve but it's not at all parabola on the left here that just gets smaller and smaller but actually it will never touch zero if you get on something where you can keep zooming in you'll see that it just gets smaller and smaller but never touches zero and then over on the right it just has that upward curve and as steep as it looks it actually is never perfectly vertical it's just really steep and so that's the look of all the exponential functions we use this a lot of times in percent increase compound interest things like that but there we go that's a lot of the exponential functions here all right so there we go so these are all the key parent graphs all the other graphs you're going to look at in algebra are going to be some version of these graphs oh it's like this graph but then with some some other things that we that we added uh later on when we get into or another course in trigonometry the trig graphs are different and one of the big differences is they keep repeating these are all you know they do one thing and then that's it but we'll get to those graphs but for anything in algebra these are all the parent graphs so when you look at a graph and you want to figure out well what could the equation be that generated that graph you you say well which parent graph does it look like oh it looks like this so it could be you know an exponential oh it has that other sort of curve it could be a different one so you know that's why you want to get a sense of the parent graphs it helps you develop equations to fit different curves later on and we'll get into some of that stuff okay so there we go and you will have this as a resource too to consult as you know take a look at the different parent graphs now that we've worked through the core skills in this unit let's look through some extra problems and i'm going to work through extra problems using the colab notebook so you can see how you can apply these resources that you're building and use that use these to use these to solve problems that might come up in a textbook or in daytoday life so we're going to go through some more extra problems here so now that we see these parent graphs let's let's do a little twist here let's look at the these sliders we can add to modify the parent graphs because that's it that they're meant to be modified so that first one y equals a or any you know value value just it's that horizontal line if we add a slider now notice the setup for the slider that you know we're going to import this in line and it's a widget for the slider and then all of our graphing is going to be in this function that we redefine here define and i called it the function f because i wanted a shorter function name f of and then it's going to take a for the slider and in this case we're going to also also going to zoom so all these values are based on the zoom slider so you can zoom in and out and we still have these points but just all the graphing happens here within the function set the plot and notice all this same thing but the zoom then would affect all this and so mathematically you know if i if i wasn't writing code i would just write you know y equals a but we're going to put it here i'm going to have two y values because just this perfectly horizontal line we kind of have to do it this way and we're going to plot this horizontal line just like we did with each axis you know the x values x min x max and then the y values y one and y two which are both the same which is whatever this a value is so here's the slider you know run this function f a goes from negative nine to nine and then the zoom so when we run this so there we go and as i increase the slider so we see our general graph and i can zoom in a little bit but that's what we get like y equals some constant and then i see the slider that parent graph it's still the same look that horizontal line it's just that from the parent graph to the child graph it just it just changes where it is see but then you know the slider and then the zoom that becomes even more interesting when i have our classic slope intercept form so now i have y equals mx plus b what happens when i use sliders and i'm going to change m b and i'm you know i like the zoom in there so i'll just keep that in there so we have everything for the zoom now here and these next few we can do the normal you know numpy linspace and that's the array that i want to graph for my x values so here i have y equals mx plus b so look at that m and b are still variables here because that slider is going to affect it and then that function is going to take that input so now i can have a slider change the m value change the b and i still have the zoom and then this is what i have so it's right here because the slope is zero but what happens as soon as i make the slope one now i start to see my graph and i can see the slope and then as b increases we can see it the y intercept moves up and down there we go and some of these you know now we have some more that we can see when we zoom in there we go and this particular one i didn't put the grid on there but just to show you that as that parent graph y equals x you know that's really just that's the paragraph y equals x because it does have a slope but then i can change the slider and see the negative values and from that paragraph changing these two values makes it its own graph but it still is that linear equation because that's the parent graph still has those core features but then we modify it a little bit i can change the slope i can change the slope i can change where it crosses the xaxis and sliders are a good way to illustrate this so we have now three variables for our quadratic ax squared plus bx plus c and so my function i'll take a b and c and zoom in so then my y value is just this standard quadratic i remember x squared is the parent graph you know a is one and then just x squared that would be the parent graph the simplest quadratic it's a parabola but then when i have these three it still has that core feature of the paragraph it's still parabola but then i change and we can see what a b and c do to these so we have this interactive i'm going to adjust a b and c and as well as the zoom and so we see it defaults to right in the middle so let's just put a now that's one but we can use these sliders to see what does what happens to the graph when a increases you see it gets narrower and then what happens zero it's not a parabola anymore but then as it's negative it flips it down there we go so we can see how these affect you know we'll bring it back up to positive like a smile then we can take a look at well i'll jump to c next because that's the easiest it just same shape it just moves it up or if c became negative same shape and it moves it down and see each time i move this the it runs the function again and then recalibrates it with these new values and then b i think is one of the most interesting because i move it as b increases it dips down to the left kind of interesting and then i can bring it back and then as b decreases it dips down to the right it dips down to the right so just some interesting things that you know so this would be a b and c so this would be x squared minus 5x minus 5 that'd be the equation here or then x squared minus 5x minus 6 and we can zoom in and see you know i i didn't put the values on here so so exactly but you could always do that too so we see these sliders now the reason why i like this and i want you to notice with absolute value how similar those patterns are to the x squared the absolute value because remember whatever x is if you square it it's positive absolute value also then just makes it positive but the core absolute value function so you see absolute value but i'm taking in three different values here from my absolute value parent graph i still have three sliders why because i have a times the absolute value and then inside the absolute value i could have x minus b that's where the b shows up and that shifts it left or right and then plus c shifts it up or down so we see that plus c shifting it up or down and let's take a look at these so again a is zero i've got nothing as soon as i change it now i have my absolute value and of course the big difference is this is linear each line is linear but then it comes to a point because again positive x values were negative the absolute value makes it positive so we see some of those similar patterns though as a increases a times the absolute value this gets narrower just like it did with the parabola and c keeps the same shape but just moves it directly up or moves it down and we have b this is this just moves it exactly side to side so that's you know this is where unlike the parabola there's no other deeper curve to it it just moves it exactly side to side so there we go and even if c you know c was more it's still it still moves it side to side it still moves it side to side so b is negative eight so the if we see the zoom here so if b was negative eight then we see that that is the x value value so it's at negative eight and then because it's b it's x minus b is the is the formula so b is negative eight then that means that's x plus b negative negative makes it a positive that's x plus b in the inside the absolute value so negative eight and then c is three then we go up three so we can see again you know where is that point and we see the basic absolute value and then what each of these things do and how it's very similar to the quadratic but that has its own its own things and we can do this you know those are the most useful i feel like for a lot of algebra you know more commonly useful but square root functions can have a slider too and this one it gives a runtime warning which i just left in there and it still ran because the you can't take the square root of a negative number so you know i still have all these different zoom values that i could you know at some point i get a negative number and it just does not compute it won't show up but it actually that doesn't break this it will give me the error but then that's it so here if i take a look at b and i make b zero here if we run this again so again everything zeroes out where is it but if a is anything there we go and we can zoom in a little bit see this curve a little bit better there we go so if a is anything and then we see b it moves it but remember it's because like the other one x minus b is the formula so when b increases it's really x minus three moves it three to the right and then c also you know moves it up and again we're looking at that point where this starts where that square root function starts whereas if b was zero and c was zero you see that's where we start at the origin zero zero so we see you know your basic square root graph and again you have these different values you can have a times the square root and then square root of what x minus b and then i still have plus c outside that can shift it up or down so we see from the basic parent graphs all these key things and we start hopefully you're starting to see the patterns of how this comes up and you can have these sliders with all different so if we have x to the third now all four sliders and we can see you know x to the third now for this one i just left it as this to show this is what happens you know a increases this you know can make it a little bit narrower but b is even zero c is negative d is even zero across is it zero zero but i just set up you know that's where you get you know some deeper dips in your x to the third functions here so and it's usually some mix of positive and negative coefficients that give you these deeper dips and you can do the same thing x to the fourth and you can have five sliders because x to the fourth would also have a times x to the fourth and then b times x to the third c times x squared d times x to the first and then the constant e which actually would be times x to the zero so there we go and having these you know we can adjust these they're not x these are not always symmetrical but i picked one that actually could make it symmetrical and what that is is notice where the zeros are because x to the fourth a is the coefficient i made that two x to the third b is the coefficient i made that zero x squared c is the coefficient negative six and then x to the first i mean that zero it's symmetrical because all of the even exponents have coefficients and the odd exponents zero out so these even functions happen only if i have all even exponents and notice i can have an e value because e is x to the zero and we'll count that as even so there we go so some things you can see when we have sliders you know same thing with this floor function this is just kind of cool and so what i did here is i you know still with the zoom but i made this floor function i did this to make these a bunch of dots because i like how that displays the floor floor function that's really like this is really the floor function and i made these dots you know to plot the points instead of lines and you know they're big enough that they connect you don't see spaces between but that's really this is really the floor function as we as we know it and we see that you know if a increases it just gets steeper and a could be negative and it could be like that but it still has that step look to it so and then c it's almost i guess it's noticeable there you go but that's it so this is the floor function we have the different steps and you see we still can have that's the parent function just the floor function but then and the floor the general parent function would be yes i would have a times this so i keep that as one and then you know nothing else going on that would be the parent function and then we can adjust things so all these you know that taking it beyond the parent functions you can have sliders and you know all kinds of other things for you know there we go some some other functions we can have all right oh this was the uh exponential function we'll end it on this here that if i have this so i still have my a coefficient and then b to the exponent of something cx minus d now nothing going on because a is zero but if a is at least one but still nothing going on because i have uh b has to be a value it has to be one won't do it it has to be greater than one it has to be greater than one and then c it's c times x this won't do it because that would make the exponent zero out so again it would be a constant that has to be at least something and there we go we can zoom in a little bit a little bit there we go and you know d that could shift it and e could shift it up just like we were doing before but you see these there's a few of these that needed to be nonzero to make this show something so we see you know again general parent graph of our exponential function and all the things we can do to shift it so applying some of the formulas we've been talking about in algebra we can use these for business applications like demand and revenue so demand would be how many would i be able to sell so imagine if we're selling laptop computers and and i find out that you know an average price of like six hundred dollars will get me you know i might sell like 84 million computers so we do some research we find that you know this might be the case and then maybe i find some some particular companies might say oh well you know what our average price is going to be triple it's going to be somewhere right in the neighborhood of 1800 hundred dollars but then maybe they'll only sell like eight million and then we look at this and we say okay well what should my price point be and we can find this we can use these two as you know an x value for you know uh price and y value for how many sold and we can do the slope formula and we can get an equation here to estimate this as being linear and i can take a look at what the demand might be so i could do the slope you know 84 minus 8 over 600 minus 1800 so remember our slope formula from earlier and so there we go so if we have 76 over and then the the denominator happens to be negative negative 1200 and i would get that into an exact decimal that would be my slope and you know some it's going to be something like negative 0.06 so then i could get that into a y equals equation you know um you know somewhere around there negative you know 0.06 x plus and i could have the you know what would be my y intercept i could i could go through that same formula and when we get into the code i'll show you that we can just bring in these formulas that we already know getting a couple points getting our slope intercept form and then i would have that value here um there we go and yeah it's probably you know i'm gonna just rough estimate here so let's let's just say that that would be it and then that would be notice a negative slope because as the price gets higher you know we would graph this as you know price and you know number sold and we would see that as the price gets higher then the number sold would be you know less and less and at some point actually the why are some somewhere more like 50 and at some point you know we the price would be so high that nobody would want it but we would get that as the general estimate now let's just say that's the equation here now what so that would be the demand equation and a lot of times economists are looking for that you know um um business owners too what would be my ideal price point well then if i use that how what can i do to figure out my revenue well my revenue how many sold would be the demand but then the price as i was saying is defined as the x value so at every point i would get that the x value that the revenue is going to be the price times the demand the demand and in this case that price is always going to be x and if i figure this out then it's x times negative 0.06 x plus 50 and you see that would be my y value that i could that i could graph quick distributive property we recognize that this is a quadratic with a negative a value so that means it's going to open down you know plus 50x and so when we look at this then if i have you know the price but then instead of the number sold i want to have revenue so of course if the price is zero i have no revenue and then of course there's some other price that is so high that nobody buys it so i have no revenue and the shape of this graph is going to be a parabola that opens down so then i see that this is going to be a parabola that opens down so then i see that there is some middle price that would maximize revenue and that's kind of the thing that we want to look for you know using these formulas we're using the slope formulas we're using the formulas we've developed to generate a slope intercept equation this would always be true revenue is price times demand so then we can use that to develop this quadratic and we can graph these we can find out what these what these revenue points would be so pretty interesting then we could also apply this to profit so this is just revenue and then we could do this and then subtract subtract the total cost we could get profit so this is really some of the applications that we want to get to that you know using these formulas and determining based on some data you know what should my price point be to maximize my revenue or given you know if i already established a price point what would you know can i predict the revenue you know these are things people put in their business plans so we see these examples that are this one example and i when we look at the code i have two other examples so we can see how this would come together that you you know you can use your math skills you can use your python skills to make some business predictions and these are some of the good applications of of all this math and writing code so let's take a look at the code all right so i wanted to give you an another example or two to show how you can write code to work with these formulas and for this example i'm just saying we're selling tshirts and i've made up these numbers hopefully they seem kind of realistic but you could define the price here and so these are all variables here so if we define the price and in this case we're going to say we're selling tshirts for five dollars each and then we have the demand as our next variable and we're saying that if you were giving away tshirts maybe you could give away 50 you know this is business you're not really not really going to give them away but then your demand decreases as the price increases so every time the price increases increases now in this case again if the price if it was free you'd give away 50 right here the price is five and then so two times the price is 10 so then the demand would be 40 but you see how it just cascades we just define the price and then we use that to talk about demand and then revenue is going to be price times demand now that is actually a go standard formula the price you're selling it four times how many you sold so you see we can do this we've you know once we've defined these then we have these other formulas that they can depend on them and then the total cost so this is another one that you would have to know and i just uh made it so i said four times the demand so if we have four you know the idea is that let's say it cost four dollars to make each tshirt all right and i'm sure sometimes tshirts cost less but i just said four dollars so that's where the total cost would be four dollars times you know however many we sold and then that's the total cost so then we have profit is revenue minus total cost makes sense what's the rev how much money do we bring in minus the cost and how you see how we have all these we can just define these formulas now this is a standard formula for for profit revenue minus cost and this is a standard formula for revenue price times demand and some of these then we could develop these equations if we knew if we had some other data so if you're making things to sell you would definitely have this information how much does it cost to make but there you go all these then if you define the price and some demand equation we can calculate all these and we would output you know given this price the demand and revenue because five times forty and then the total cost we 160 you make a profit of forty dollars and then having these this is where people can do some research and they can test things out oh well let's say supposing i decided to make the price ten dollars instead and we take a look at this the price increases the demand decreases as we expected but the revenue increases and so given that cost we still have a profit of of more than double so the price of each doubled i went from five dollars to ten dollars but the profit more than doubled it more than quadrupled so just interesting things that we can we can see here and how does this happen well it might be it might be helpful to see this on a graph too so we're going to graph these things import matplot library and i'm going to import numpy i'm just going to remind you here that the price is x and the demand is y and then we're going to change it that the demand later is going to be the revenue now this is where if you had data this is where you would have you know if i have at what at a certain price what would the demand be you see and i had in mind here you know that this was you know i don't know something else here you're buying two dollars 46 so it would it might not be tshirts that might be really low but let's just say you know i don't know bottle of water and you know yes it's ten dollars but maybe you hype it up and tell people it's just this amazing bottle of water and if it's cold or if it's really hot that day and water's cold you know you still might have some demand so something else that you you might have but there we go so we can define these price one and demand one so if it was two dollars then the demand is 46 if it's ten dollars then the demand drops down to 30 as an example if just having some of this data from some other research and we can remember these formulas we did back with linear equations because this is essentially two points price and demand or x and y so i'm going to calculate the slope based on those two points calculate the y intercept and then this becomes a y equals mx plus b equation so pretty cool again again if i have you know some examples of some data that we have that we can we can test so given that equation that's going to be my demand equation and i'm going to go through there we go x min x max now notice this x minimum and y minimum i'm going to make zero because negative numbers for this aren't going to really have any practical meaning i'll make the x maximum 50 and the y maximum 320 there we go the number of points that's all fine so after i define everything here i'm going to do a couple other things i'm going to do the x label is going to be price and then i'm going to give my graph a title so notice both these plt dot x label plt dot title there we go and then for this one line one i'm going to have so for line one here's my demand equation y equals m the demand equals m x plus b and so we figured out m and b up here and so i can use those but i'm going to use x because that's the array of x values that i've defined so we have our demand equation and then i'm going to plot y labeled demand so we see the x label is still going to be price but for this one y label is going to be demand and then we're going to plot x and then the demand i commented this out we'll get to that in a second so here we go so i have my graph and then we see yes if i was giving them away for free i could give away 50 the demand decreases as the price increases so at some point maybe like 25 dollars um you know whatever i'm selling here that started out as two dollars you know maybe it's cds or something you know some people still want those if i have 25 dollars you know nope too expensive nobody wants it and then somewhere in there we have the ideal now it's not always perfectly linear in real life but this is a good estimate so given these supposing i keep that same demand equation and as we were saying before i can build upon that and i can have revenue equals x time demand because as long as i keep that equation it will still use that and then so now i'm going to plot my x value and then revenue as y value and i'm going to change my y label to revenue so we see that we have a way to do this and when i graph this we see that yes of course i'm going to make no revenue if the price is zero and then we said that about 25 i'm going to sell none so i'll make no revenue but this is how the revenue goes and it's really interesting that i can have some you know low prices and i think that that's you know the the best i might sell the most but the revenue actually there's some middle number here that gives me my maximum revenue and you see it looks like now if if i make new revenue at zero and at 25 these parabolas are symmetrical so it's exactly 1250 would be the maximum revenue or if people like round numbers you know 12 or 13 so there we go we can see how we can use all of this and we can see that the you know the reason why revenue would be zero here this is where the demand would be zero so this is probably the more the line two is probably the more valuable one but having given getting some research of given prices demand price demand that if i have a couple values here then i could plot this out and i can plan oh from other prices and demand research that i've heard what should i make my price you know and this this is some of the research that people can do you know you have some new product how can you determine what the price should be all right and there you also then if you're making a business plan you could always then download or export these images you know you've you've written the code you see the graph export the graph as an image to include in your business plan so there we go you know a couple different examples of how we can make use of these you know formulas the graphs and you know generate some graph or some image and some data that we can really use okay so let's apply some of these graphs to some other economic theories and see how you can use python your math to plan predict you know look at trends in economics so we looked at cost revenue profit and if we take on that marginal cost revenue or profit if it's marginal then that's the result when making and selling one more product and for some of our examples we were doing some linear equations and for that the marginal cost revenue is the result of the marginal cost revenue and for that the marginal if cost is linear the marginal cost is going to be the same wherever you are but sometimes we have costs or we saw that definitely we have profits or revenue that are not linear and therefore we have some times when oh this is it makes more sense from a cost revenue profit perspective to make one more and sometimes you know it doesn't sometimes you know oh that one more is only going to get me a tiny bit of profit not worth it and cost sometimes it goes the other way you know setting up everything making one product might be a really high cost but now it's all set up so making two three four a hundred thousand you know might make that worth it you know things like newspapers and book printing and you know there's a big setup for the printer and so the marginal cost to make one wouldn't be worth it now there's definitely you know other methods printers but for a lot of the big printers like a big printers like a newspaper marginal cost it'd be a whole lot for one newspaper but no they're going to print thousands and thousands so the marginal cost after they've printed you know a hundred thousand newspapers printing one more is almost nothing as far as cost so these are the things you know what what's it cost to make one more and you know we might notice that for revenue and profit the same thing and so if we have revenue you know and this kind of a lot of times comes up but you know toward the end of the day people say oh what you know what would it take to make one more sale you know maybe it's a store should i stay open for a lot longer and everybody's tired to make one more sale that might be you know a lot more cost to in a lot of ways for a little bit of revenue not worth it and so they say okay these are the hours and we close so these are some deeper analyses as we get into things beyond linear equations we can do even more than that makes that even more interesting but just to mention that you know as we talk about this the marginal is that at any given point what's the cost revenue or profit to make one more all right and let's look at some other things that impact that supply and demand and here again i'm going to give some simple numbers and make it linear equations the true supply and demand graph it's not going to you know and in real life it's not going to be perfectly linear there might even be a little curve to it but even at that it you know if you get the data it might be you know a little bit of a bumpy line but we have supply and demand and we know these definitions are at supply how much are people making you know what's the supply of whatever i'm looking for and the demand how much will do people want how much are people willing to buy so you know if you're looking at you know a movie the movie theater if you wanted to see it in the theater the supplies there's only so many seats you know only so many showings you know a movie or a play or a concert always so many seats only so many showings so that's this limited supply and then the demand could increase if it's something really good that everybody wants to see so a lot of times we see that you know that affects the price and that's what we're going to look at supply demand and price and we're going to graph supply and demand on the same axis so we'll see some similarities some familiar things here for the graph and i'm going to have two x values as old demand and new demand and i just gave them this complicated variable and i'm going x values as old demand and new demand and i just gave them this complicated variable name so that it reminds you that it's an x value so we have old demand and new demand and yes i notice i made the demand increase and then i have old price and new price so now just looking at that well we'll see this on the graph but the price is also going to be the y value and on the same graph i'm going to have supply old supply and new supply i made that you know two variables each of these as i was mentioning you could potentially get data from a table supply and demand data data you could have one table that has you know a particular price supply demand price and you know make all these numpy notice i did not import numpy for anything i'm just putting a few variables here and you know to illustrate the graph but you could absolutely get that data from a table and you know make each of these numpy arrays and graph them that would be really interesting too and that's something that we'll address later on in the course so given these and then i have a basic graph set up adding a couple labels here i'm going to make the x label quantity just general quantity and the y label price and i have this title which i already graphed but we'll get to that so here's the demand function and i'm going to plot this as a red line just because all right so notice the x and y my old x i'm just making this just like i do it with the axis i'm going to plot you know these two x values and these two y values and make you know make that a red line so so we see this you know i'm not going to even put an equation to it i'm just graphing this linear equation from these points to this point and i'm going to do the same thing for supply as a green line and same thing i'm just going to use this data that i had these numbers that i came up with as an example um and this graph we can take a look at this again it's simplified but it really is the general trend of supply and demand so if i made green supply red demand then we take a look at the x axis is quantity so the green that would be quantity supplied and the red that would be quantity demanded supplied and the red that would be quantity demanded and then on the y axis we have price so graphing them both on price we take a look at this and we see if the price is high then the quantity demanded is going to be low and a lot of times we're used to seeing you know um an independent variable on the x axis and we think cause and effect but this is really correlations so i'm not saying necessarily one causes the other but you know it goes together so uh at the when uh x is let's say one and y is 14 so we look at this this this demand there's very low quantity of demand when the price is high and then as the quantity see we see the quantity increase as the price decreases so that's what happens oh you know what is this oh it's 14 you know $14 no i don't i don't think i want it but as the price gets down lower then maybe you know the demand increases more people would want this now supply wise people making this they have a different incentive they want to make money so when the when the demand is low the and when the price and when the price is low then nobody nobody wants to nobody wants to get into this so you see we have low demand but we also have low when the when the when the price is low here then nobody wants to get into this what you know why would i get into this new business if i'm you know whatever i'm selling is not going to be you know that lucrative but the quantity in the green line the quantity supplied will increase as the price increases and we see that in different industries that you know oh you know why why are people you know getting into this industry oh because they all see they can make money oh this is the hot item oh i can get in on this and somehow you know uh make money so that's what we have that the supply quantity increases as the price increases so there we go so we have these two opposite trends and this is kind of like the core of economics because as you know i get different data this is i just did these numbers as an example but these graphs could shift you know maybe there's some something else that affects this that maybe you know instead of uh the supply increasing like this maybe something causes it to increase a little bit steeper or maybe you know if we say that you know the quantity supplied is low here for this price but maybe you know for whatever we're making that the entry level was even at a higher price and this whole thing shifts so you know that's really what a lot of economists are trying to do and then if this is quantity across the xaxis let's take a look at where these lines intersect and then that would be the point of equilibrium because what we're saying is the quantity here supplied and the quantity demanded would be the same and i mean that's ideal you know you know let's say you have a bakery and you make fresh things every morning and then at the end of the day you have it all sold nothing left over that's great here on the left you know and we'll say let's say that you know for our fictional numbers that happens at six but let's say a little bit before that so it's still to the point that the price is too high so the demand's not really there the price is increasing but not so good yet so the supply is not really there and we still have a gap between demand and supply so here on the left the red line is higher there's more of a demand but not enough of a supply and then we have on the right side of that we have more of a supply but not as much demand and that would be the one this would be on the right that would be the one that's dangerous for anybody supplying whatever product because you know they're getting into this trying to make money the price is starting to get to where somebody's happy oh good the price is going up i'll make more money but then there's you know the demand drops off so now they really have to scramble for customers you know that's trouble or the price here or on the left for the people who want this product the demand is still higher than supply and that's part of what keeps the price higher because the demand is there not as much supply well then the price increases you know things like you know stock trading people argue about this stuff all day anytime somebody wants to too many people want to sell a particular stock oh well then you know the supply increases too many and we go to the right too many people want to sell this you know then other people notice that you're oh you're really trying to get rid of this and then the demand kind of goes down you know what's wrong with it and that affects price and and on the left then we have the price is too high because there's not enough of supply supply and you know that sometimes causes oh there's you know there's not much supply nobody wants to sell that you know this must be good and then that kind of increases the demand and the hype a little bit so you see this one simple graph describes all these complicated trends and we see this that you know our goal all around is you know finding these points of equilibrium supply meets demand you know therefore everybody you know making whatever products are making money people looking for these products are finding them you know and you know fair trade people are paying reasonable prices we're all trying to get to that but we see all these things happen all around there and it's not just one direction of cause and effect it's multiple things going on as well as just general correlations all things happening together so we look at this you know and and let's say we say the trend is like as the price goes down how does how does that affect demand or it goes the other way too as the price goes up how does that affect demand and the word to describe that is elasticity so elasticity is how quickly does uh demand change when price changes and we can look at this there's the formula percent change in demand over percent change in price and this is again all these economic formulas i'm just going to give you a couple of them here that when you have these formulas you can use this you know get data uh use it to graph and then use it to calculate these formulas to answer these questions you know how elastic is that price how elastic is that price because if things change if the price changes and then that really changes demand then we can say it's a very elastic like it like an elastic band or something that bounces that you know it stretches and changes easily or things you know if price changes and it does not change demand you know things like uh gasoline you know we don't like to pay the price goes up we don't like to pay it but if the price went up a little bit i still have to fill my car so that demand would not be very elastic the price could change and the demand doesn't change and you know we can so we can see that if the percent change in price let's say it's it's you know some significant number but then the percent change in demand is like almost nothing we calculate that you know the total value of that fraction is going to be close to zero um and we're going to say that's not very elastic but maybe some other things um you know a concert ticket you know there's ones i've seen where oh i'd like to go see i'd like to go see this but the price is too much no i won't go and as the price goes down oh i heard the price went down that would absolutely change the demand oh too much i i won't go oh the price went down now i want to go and that really changed it you know things that aren't essential and we would say that that would be very elastic so in calculating this and you know down the road you could always combine all these into one thing but i'm just going to show you like just old demand new demand old price new price and we're going to calculate the percent change so remember then that's you know the new price minus the old so there's their difference divided by the old price and it's going to get a decimal that we can convert to a percent so you see again and we want to get in the habit like you you're so familiar with you know colab that oh i have a formula i want to use you know write write a quick program to do it and then now all we have to do is change these values up here and we can calculate everything that we need so price change and that's the ends up being the percent change and then the same thing with demand the new demand minus the old demand and that's the difference divided by the old demand and that gives you a percent it will give you a decimal that you can convert to a percent and so elasticity number is demand change divided by price change so what i have is then it'll just print that number and here's some of the analysis so again different things oh you what you know what's the cutoff point you can always just put these in you know a nice little if statement statement and so if the number is greater than one then i'm going to print the demand is elastic and notice this is you know else if so i just continue this on you know lf the number equals one then it's unitary or proportional so sometimes you know we we do get one that's there you go an increase i think that that proportional increase increases demand but you know and then if it's less than one then that's inelastic that those are all the ones that you know again it the demand hardly changes based on price and i just decided to attack one more and so you see this is how you can you know i i like to when i do my lf statements i like to tag on one more thing at the end you know for whatever reason suppose you know this should capture everything if it's it's either greater than one equals one or less than one i mean it's really but capture one other like grab bag you know what you know if something else happened very often we'll have if and lf without you know exhausting every possibility and then you just easily just put an else there at the end so i have some sample numbers here and then we can click and it would print out so we get this negative 2.2 and then demand is inelastic so as that example and we can do the same thing with supply so remember you know supply changes um as price change because people say oh hey i want to this is a hot industry i want to get into this or then people say oh nope it's uh you know this is cooled off i'm gonna get out um so in uh it you know in the united states kind of recently the real estate market market uh was hot and that's supply like okay not everybody necessarily is going to sell their house or try to be a realtor or try to sell some property but when the prices are so good more people decide to get into it like oh maybe i will sell this you know so that's the idea that if the price is good and people see oh opportunities to make money they get into that so price elasticity of supply answers that question how how responsive is this supply to changes in price so very similar formula percent change in supply over percent change in price and just a few values to sample and very similar formula you know new price minus the old price divided by the old price and uh new supply minus old supply divided by the old supply and we're going to go through the same thing elasticity number and very similar analysis greater than one it's elastic which remember as a fraction greater than one is going to be that this percent change in supply is much greater than the change in price percent change in price and we have to do percent change because if we just do you know actual dollar amounts or actual number of things supplied that really doesn't always give us a good example some things just in general are low cost so a change of a dollar might be a whole lot some things are really high cost like you know a change for a car that a price change of a dollar is not going to be much at all so same thing with supply you know what what's what's the relevance you know how is it relevant to the previous supply so that's why we do the percent change so yeah if price change is you know a certain percent but supply change is a lot more related to that then we're going to say oh wow that's elastic people are noticing these trends and we can go through this and same exact analysis either supplies elastic unitary or any elastic and i just you know just had these so there we go this number and it's inelastic because it's this tiny decimal so yeah not everything you know supply cannot always be you know elastic and so notice you can take this and given the old prices and old supply you could always take these things and combine them with something like this so that therefore you could graph and if you had you know other you know other numbers so notice this i mean even though these numbers might be fictional if you had any bit of research that you just had a few values here you can get these you know and with these you know six things calculate you know the graph and elasticity of supply elasticity of demand and really just get a handle on you know where where you are in this graph and what are the potential changes you know is it you know these graphs i kind of made the linear and it's kind of proportional but you know very often it's going to be bumpier and you know where are you on this graph and what's what's what's going on if you really wanted to you could even um there's other plugins for other uh data especially things like stock prices and you could use this uh to calculate elasticity for various stock prices you could calculate some of the trends um and a lot of these it'll work within colab there's a lot of things that will work within colab that are a lot of things that'll work within your google drive and those particular free tools tend to update things like stock prices maybe like every 15 minutes at the at the most but that's going to be enough to give some sort of analysis you know for an amateur investor take a look at different things you know that's kind of what we want to take this and like these types of formulas and build upon these so that you know you can uh build data pipelines and get information at some reasonably regular level have all the formulas and calculate and say you know okay now you know have this output at some sort of report for you let's see the graph let's see it in real time you know pretty much real time let's run through some formulas and see you know hey i'm thinking about investing in this what's it looking like oh it's it's very you know the demand's very elastic so you know you really have to take notice of the price or oh this you know um i see this trend maybe you know a supply of something that maybe i can get into all these things we want to you know use this information to uh make decisions about what we want to invest in yeah and you can do this all right here in colab and right here in your google drive so uh we'll get in some more some some more math now and you know the next step of our journey so let's talk about calculating interest and usually that's going to be money i put in the bank or in some investment or sometimes it's going to be money that i borrow and then how much extra am i paying so the simple interest formula is exactly that simple and it's good for short term it's good for you know not a lot of money if it's long term but the longer you go with this the less accurate it's going to be and we'll see why that is but for short term principle times rate times time it gives you the interest so if i was borrowing something what you know let's say you know i have borrowed you know a hundred dollars and the rate would be uh 0.05 so the rate's always a percent converted to a decimal so the rate would be five percent and as a decimal it'd be 0.05 and then the time would be always in years so you know let's say i borrowed a hundred dollars for two years then what in what extra interest would i owe on that so there we go that would be another ten dollars so what i would then say is okay well you know given this rate if i needed a hundred dollars now and it's going to take me two years to pay it off you know maybe if it's going to take me two years to pay off a hundred dollars maybe calculating interest isn't my biggest problem but the uh if i if you know i could calculate oh how much extra would that cost me an interest now to figure out the total amount that i would pay i would take that interest and i would add it to the original principle because i have to pay that hundred dollars back plus the extra ten dollars so let's take a look at this you know if time is one like let's say one year and what that is is that's compounding that's the notion of compounding that i'm taking that interest and then i'm adding it to the principle so let's say the time was one year and so so this would be times point zero five times one then the interest would be five dollars and then what am i going to do i'm going to i'm going to add that together so i'm going to say you know the principle plus the interest um is is going to be five dollars now the reason why we compound it is because after let's say a year so then i have that new principle plus the interest but then that new principle plus the interest that's my new amount and then that would then generate another five percent of the interest generate another five percent in interest so you see that becomes my new principle times five percent gives me my new amount of interest and then i'd have to add that so you see i would take that you know times that point oh five there we go and then i take that amount and add it to the new new bit so that could potentially be a lot you know every time i have to calculate the interest add it to the principle again and then recalculate it but let's take a look in terms of algebra what what's really happening here so if i have this the original principle plus the interest and i probably don't even need the parentheses here so the principle plus but remember the interest was principle times rate times time so we're doing a little bit of substitution there so the compounding part principle plus the interest but the interest remember that was this formula so i'll just put that in here and notice if i factor out p so you see the things we were doing before with common factors that comes around again then i factor out p times one plus rt but supposing t is one if t is one then that would be r times one which you know times one i really don't have to write that and then i won't write it in this step so we see a nice algebraic way to write this where i have the original calculating the interest and then also adding it now we're not going to stop there what makes this really useful because that is now my principle calculating the interest for that one year and then now that's my new amount what happens when i have to calculate it for the next year well what did i do to the original principle i did principle is what i started out with and then i did times one plus the rate so if i had to do it again for the next year it would be times one plus the rate again because that's what i did to get the principle plus the interest and then again times one plus the rate and when we think about this in another way it really makes sense because we're seeing really makes sense because we're saying that that principle times one plus the rate is that i'm saying you know this original principle 100 or whatever it is if that rate is five percent you know then that's 1.05 so you know what do i have i have a hundred percent of it plus the extra five percent and then doing that you know that 105 percent every time we can even simplify this that that principle times one plus the rate because if that's what i'm doing every time how can i simple that with an exponent and that's where time comes back in i have that exponent of time because every year then i'm doing that times one plus the rate times one plus the rate and so now we get from simple which is nice principle times rate times time to get just the interest and again good for a short term but you see on long term this is the formula that we want that compound interest because that accounts for every time it goes a little bit bit i earn some interest but then that becomes a part of that new principle and then that's earning some sort of interest and if this was my money in the bank that's great that's good news for me but then if this is money that i'm borrowing then the bank is going to be wanting to do this sort of formula to make sure that they get all the money that they that that they deserve you know and then i have to make sure that i pay that extra interest so that's where we get the principle uh simple and compound interest and then we get to this so then that's the you know that's the formula and then that gives you you know your new amount so there we go a new amount and then when we get to the code we're going to talk about that new amount we're going to call it annuity we're going to call it a maybe as a variable a for amount but then it'll be annuity which is a fancier word for the amount that we end up with so there we go the connection with simple and compound interest and we'll take this a little bit further when we get into the code so let's take a look at that let's take a look at the code so we're looking at simple interest as the well as the name says simple because it's good for short term and for some things that might be good for an estimate but we just get principle times rate times time equals the amount of interest and there we go again short term because we're going to do some other things to it when we get to longer term and that's what we'll get to here so the principle if we just put some example numbers here thousand dollars let's say i borrowed money from the bank a thousand dollars the rate five percent so it's always the percent the annual rate converted to a decimal and then time is always in years so if i borrowed a thousand dollars from the bank they said okay it's five percent interest for three years i'll pay it back here's the formula interest equals prt and when we run it there we go we get a hundred and fifty dollars in interest so i'd pay back that thousand plus the extra interest but right away then that tells me the cost of borrowing that i need it now and i don't have it so that's going to cost me 150 dollars so then i want to find out the total amount well then the new amount is just that principle plus the interest and there we go i'm going to calculate the interest just like we did before and then this new amount is principle plus the interest so there we go and we add that that hundred and fifty plus the thousand makes it eleven fifty so now i have that new amount okay so most of the time we're going to be calculating the interest and then adding it to the new amount it's very rare that i'm paying just the interest or somehow just the amount and not worrying about interest so here's what we were just talking about that new amount is that new amount is principle plus the interest and if it's for one year that's principle plus for one year that would be p times r times t which would be one so that won't change it so that would be the new amount principle plus the interest so some algebra that common factor p if i divide that out i get p times one plus r and if i do the distributive property i get back to this so p times one is is p and p times r is p r now this is going to be very useful that we factored out this p because now i have that new amount just that original p times one plus r and the and the rate is always going to be some decimal that it's going to be pretty easy to add that to one one plus point oh five is one point oh five you can do that in your head it doesn't even feel like a step and then this is what you're going to enter in the calculator so there we go that one step that you automatically would do in your head and you're most likely going to have the calculator for these so that was what you would enter in the calculator p times one plus r now again this is for one year and 50 so if we go back to that original supposing the time was one year just to show you that this works one year that'd be fifty dollars in interest and for one year then then the new amount would be 1050 so that what we're doing there adding the interest to the principal that's compounding and compounding is exactly that adding the interest to the principal and then calculating the percent interest from this new amount so let's look at how this happens over a few years so if my original amount is p so then the next year it's p times one plus r but now that's my new amount so so again the next year so p is the time zero after one year after one year i multiply times one plus r and after another year i multiply times one plus r again and we'll just do this one more and again p after one year after two years after three years so then that's just the same as making this an exponent p times one plus r to the third power because i'm multiplying this factor one plus r three times and now we have compound interest that instead of having to go back and every time calculate the interest simple interest add it and then do it again you know in some loop i have one formula that does the compounding and all i need to do is add the exponent for how many years so now the annuity from the original e times one plus r exponent t so that's 1157 now it's not an error that this is different and remember the original was 1150 when i did this by hand i just you know calculated the interest based on simple interest and then added it but that's after three years that was 1150 and like i said simple interest is good for short term but the longer it goes the less accurate it is so when i have this comp when i'm compounding it every year notice that's every year that i'm adding the interest and then the next year so remember after after one year it was 1050 so then for this for year two i'm getting that five percent interest on not on a thousand but on 1050 and on the next year i get that five percent interest on that new amount so that's the compounding it's like a snowball that rolls down the hill and accumulates more snow and gets bigger and bigger as it goes down that's what we're doing every time we're compounding because i'm still taking that rate five percent of a larger and larger amount so compounded i get 1157 just that same amount over three years i earned an extra seven dollars just because the formula was better so time is always in years and that's compounding every year but we also have a formula supposing compounding happens n times per year so that gives us this more complicated formula but that's okay we see how it connects t times one plus and instead of r we're doing r over n because this is happening n times per year so that rate isn't always an annual rate so i have to divide it by how many times i'm recalculating it but since then every year was the exponent the exponent becomes nt how many times a year times the number of years so then i'm compounding however many times as an example here i put it as 12 because that's pretty common monthly we know recalculate compounding 12 times a year so then one plus r for n what's in these parentheses gets smaller but then the exponents larger and it still ends up working out if this is money now if this is money you're paying back it ends up paying you end up paying more but if this is money you're putting in the bank earning interest then it works out in your benefit so that thousand dollars five percent for three years but now this time compounded 12 times per year i use the extra parentheses for any fraction so there you go instead of just r here it was one plus r over n i put that in parentheses also and you definitely need the parentheses here to make sure that stays because that is the whole exponent nt and remember the python syntax you know in math we might skip the multiplying symbol because we're just they're next to each other but python have to put that asterisk there so there's the annuity the other thing we're going to talk about this instead of just amount that's annuity and principle is the word for the amount we start out with and annuity is the word for the amount we end up with so now the annuity compounded monthly look at that 1161 so we go back from that simple interest that was kind of off to compounded annual 1157 much better to 1161 because we're compounding it monthly and guess what it gets better but first i'm going to start talking about this irrational number e now in the middle of all these very practical money in the bank things that we can understand why am i going to start talking about this irrational number e and yes it's e but it's a number because this is going to come up in the next formula all right so just a quick note about e we're going to import math we're going to import math because e is a weird number and so when i print math dot e this is the number there we go and as a good estimate you can just call it 2.7 but in your calculations you actually want to use this whole number so that's why i want to import math dot e i don't want to just you know say 2.7 and call it good another interesting thing about this it's 2.7 and then we see it's 1828 and then the 1828 repeats again that's kind of interesting but it only does that a couple times and then it just all falls apart so math dot e use that for the irrational number e and it's e because it's euler's number his name began with an e but uh john napier who invented logarithms and other things when he came up with this number he named it e after uh another mathematician that you liked euler so sometimes people call it euler's number but anyway it's e now if we're talking about compounding n times per year we go from being irrational and talking about e to being very rational well what if i just keep compounding it many times and that's where we get to continuous growth so in that previous formula n could be 12 now in this example i made it 100 because we're going to do some things with this uh you know it could be 12 every month 52 every week you know i just made it a nice round number 100 could be 365 as n gets to be a bigger and bigger number then we get the annuity becomes this formula p e to the rt and that's why we we're talking about e so i get this irrational number e and then the exponent is rt because as we get well i'll just demonstrate this so let's say n is 100 and if we do that actually let's even make it 52 so compounding every week and then here i'm going to compare these two formulas so this one i call the variable n times so there's the there's our other formula p times one plus r over n to the nt and then we're going to compare that with our continuous growth p times math dot e exponent rt and then we're going to print it this one or this one one so n times we remember that from before 1161 that should be the same number and then the continuous growth 1161.83 so it's pretty close but it's a little bit more for the 1161.75 1161.83 it's pretty close but the continuous growth gives us even more and if n gets to be a much larger number like a thousand you'll see it gets really close 1161.829 or 1161.834 so we see if we took it to two decimal places they actually round to be the same and that's the idea with continuous growth you see it it's not that it's always going to be more than this it's that as n gets larger it approaches this value so if i have anything that's compounded a lot or other things beyond money in the bank or things like that that i can say are continuous growth applications you know population increase or things like that then i'm going to use this and you know i can call it annuity i can call it the you know the new amount but i'm going to use this formula so it's very useful for anything continuous growth it comes up a lot i mean throughout math and calculus some version of this comes up a lot so i have this kind of formula so i have this continuous growth formula if i want to calculate this all right now for really large amounts the mortgage formula and the mortgage payment formula is if i have a really large amount of money and that's usually a mortgage you know as an example i think this might be you know pretty close to the average mortgage these days 240 000 so that's a large amount of money and then time is 30 years that's a long amount that's a long time so for such a large amount of money over such a long period of time then it actually really makes a difference how like if i'm paying just a little bit you know every month the fact that i'm paying you know a little bit and then that principle reduces just a little then the next month i'm earning interest on that slightly lower principle well that really makes a difference so if we use any of the other formulas to calculate mortgage payments it's going to be a lot more than you know you would expect you'd be like oh my gosh how can i afford that but when we use this more complicated formula this accounts for the fact that we're paying it off gradually and looking at all that then we can take a look at for that given amount of time what would my monthly payment be so that it'll work out nicely you know if i'm paying over 30 years times 12 months that's 360 payments so i can calculate it if i borrowed this amount of money after exactly 360 payments my balance is zero and it works out so just given that i can figure out the payment and then we'll look at you know how that plays out so this being a complicated formula if we want to write code for this and most of the time you're going to you this you don't even usually enter this into your calculator you're going to make a formula that you can plug in the numbers here so that's what we're going to do and here's how i decided to break that down i just took the numerator that r over 12 one plus r over 12 12 t and just that numerator i made it a variable and we see r over 12 times one plus r over 12 to the 12 t all right and they did the same thing with the denominator so just the denominator and i have one plus r over 12 so the exponent 12 t and then minus one separate from that so i have numerator denominator two separate variables so then the payment see i didn't forget about that p for principle there the capital p for principle so i'll talk about the so i'm going to round this because this is going to be a weird number and the first part is p times numerator divided by denominator so there's my mortgage payment so p times numerator divided by denominator and then i'm going to round that because that's going to be a very long decimal i'm going to round that so it takes the first argument and then the second one how many decimal places there we go so when we take a look at this and when we run it mortgage payment 1362 and 69 cents so given that then we know that's the payment that will make this work out that after 360 payments of this so each time you know we're still accruing interest and we're still making a payment and it's going to work out now to see how that plays out we call it the amortization schedule so and that's it that's the mortgage payment schedule and yes all these have the word more in it uh which means death you know kind of like you know what's what's true life you know death and taxes and i guess mortgage but yeah it was very morbid when people first came up with this word but it came up with this word but it stuck we will end this after this with something much more positive so you know don't worry i don't want to leave you in the more morbid state so the mortgage payment schedule if i take this there we go given these three things i just rewrote i just rewrote all this how we're going to calculate the payment all right so i'm going to print this payment just like what i did before so that's all the same as what we just did but the amortization schedule is i want to have a loop to show the interest amounts and we can also do this in a spreadsheet that's pretty common and later on in the course we'll talk about that so i can i'm going to have a loop so i'm going to set this new variable called balance and the starting balance is going to be that original p principle okay then i'm going to print this which is going to be my headings month i'm going to put a tab there balance put a tab and then interest so that's what i want i want the number you know what month am i talking about what's the balance at that point and then what's the interest that i'm paying for that month so here's what we have in my loop for a and range and how many months 12 t okay so the interest is round so again i'm going to round these because calculating these you know it's going to be a lot of weird decimals i want it to be two decimals dollars and cents so the interest that we're going to pay is this is simple interest again because that short term this is only for one month and then we're going to manually compound it here in this loop so i do want simple interest it still has usefulness balance times so that's my p for that month times r and then t is 1 12th so i'm not just going to multiply by one i'm just going to divide by 12 but that's what it is this is the original simple interest prt the balance is the principle for that month rate and then time is 112 so i'm just going to divide by 12 so there we go and all that i'm going to round it to two decimal places so now that i have the interest this will still calculate the interest and i just put this here for the sake of the displaying is that i only want if a is divisible by 24 you see remember the modulus a remain a divided by 24 if the remainder is zero then or if a is 359 which is going to be almost the last month so these are the ones so i'm rather than print out every single month i would just want to skip a few normally if i know if i put this in a spreadsheet i'd want the whole schedule and i'd print out all 360 months but only for these we're going to print out a select few so i want a and then tab so that you know a is going to be what month because that's a in range and then tab balance tab and then interest so there we go that's what's going to line up month balance interest so then after i do this so i put this line last because the first time through i want it to be the current amount and then i'm going to increase the balance so you see what i'm doing to increase the balance here all right i'm going to round balance plus interest minus payment so you see that's what's happening every month so we're manually compounding it the balance at that month plus the interest that accrues that month minus the payment and then round it to two decimal places so when we run this so we have the payment is 1362 just so we figured and then here we have our abbreviated table month balance interest so month zero we start out owing 240 000 as we expected but look at that this is why it makes a difference you're paying 1100 in interest just for that month that's a lot of money and you know that's it it's you know it's almost the whole mortgage payment you know it's shocking at first after you do this enough times you come to terms with it and say yes that's right i'm paying almost all interest at the beginning you know and then 1362 pay 1100 so really then notice that only 262 is going toward the payment now we could see this really increase slightly but at month 24 we've paid down some things but it's probably not as low as you'd expect it to be you'd think like oh i'm paying so much i'd expect this balance to be lower but you see you really just chip away at it and even then you're paying less interest but it's still more than a thousand dollars and that's you know month 24 so after two years and you see after month 48 you're paying a little bit less interest we do see this moving in the right direction you're paying this down and you're paying a little bit less interest but probably not going down as quickly as you'd want and that's why i just wanted to skip ahead you know every two years we check in and see the balance and you know how much interest we're paying you know we take a look at this now you know we take and we look at this so if we have just over 140 so remember we originally borrowed 240 still a 140 but at this point now that difference we start building annuity or start start building equity in in you know if this is a mortgage equity in the house which means the house is worth is worth a lot more than what we owe and so you could borrow money against that you know home equity loans that's where that comes in as you start getting lower and you know the the value of the house is worth a certain amount and then you only owe a certain amount the difference you know you can actually borrow money against that that'll be a discussion for another time so we have this and finally now it's still a lot i mean you know sometimes it's you know to think about wow i'm still you know look at that 20 years in i'm still paying more than five hundred dollars a month just in interest you know it but at least that's only five hundred dollars a month and you know we're getting the vast majority of our payments are going at this point to paying off the mortgage and now when we take a look you know look at that double digits instead of three digits thirty thousand and then the amount of interest at that point is a hundred and forty one dollars so uh i wanted to skip ahead and then just do month 359 because look at that now the balance at that point is just under what the mortgage payment would be and then the interest is this tiny amount and that would be if you know month 360 when you make your last payment it ends up being like four or five dollars more than the normal mortgage payment but then it's done so it works out that that that monthly payment you know using that formula gave us that monthly payment 1362 and 69 cents and that monthly payment did work out that that exact payment as you know we're look at the amortization table at 360 months it was you know it we paid it off and there we go for an extra five dollars the last month i'm not going to stress about that so these are you know interesting things to think about seeing how using these percent interest payments applied to loans how that plays out how you're paying off interest how we're making use of the simple interest and then paying down this balance so this mortgage is the most common but for any large amount of money over a significant amount of time we would use this formula does not have to be a mortgage car payments not always because a lot of times they're a lot lower but if it was a car payment for like particularly expensive car or over that over a longer period of time then we might use this doesn't have to go to 30 years that time can be anything so we see this you know paying off this debt over time so let's use something very similar but let's turn it around and have something positive retirement account estimation now this one instead of owing money you know this p is not money that i'm borrowing it's money that i'm going to put into an account and instead of owing money every month i'm going to contribute and so there's no formula for this that i'm just going to estimate this oh okay let's say 350 just because uh you'll see you'll see how this plays out and i just picked these numbers here so let's say the principle is a thousand and this is just estimation here well let's say you start out with a thousand dollars now this is where the estimation comes in most of the time the retirement account you know any decent fund manager is going to be able to get you point eight percent or eight percent interest so now this is your money growing in an account this isn't you paying off a debt it's your money growing in an account so if you had a thousand dollars and we estimate that it's growing at eight percent per year that's great and i made this time 38 years as you know not entirely random it was i just thought like age 22 till age 60 38 years so you start it put a thousand dollars in this account and then you start saving that you know from that point like you know your whole career you put away 350 every month in this account okay and i'm going to establish this other variable annuity which i'm going to start out the original is p so now here's my loop for the contribution and the percent growth so again 38 years so for a in range 12 t so there you go because every month we're contributing something so notice what we're doing with this annuity we're taking the annuity that we already have plus the monthly contribution and then that's going to grow one plus r over 12 because that's a monthly notice that percent increase formula but this is monthly so the exponent if it was nt the exponent n would be 12 and t would be 112 which cancels out to one so i don't need to write the exponent of one but that's where this comes from it is that same formula r over n to the nt but nt and is n is 12 t is one over 12 and so that cancels out so so each month then if we take this and that's why i wanted to break this down still monthly because i want to allow for this contribution here the annuity plus the monthly contribution we want that to happen each time and then it's going to grow so in this loop now this continues to grow so at the end we're going to print this out and i'm going to go around because that'll end up being a weird decimal annuity okay so now the annuity is going to seem like a lot but this is what we want to break this down if we're if our rate is eight percent so at the end let's say it's still earning eight percent when you start taking what so the annual income from interest you see and so that's annuity times the rate that's it and yeah i'm going to two decimal places but that so if i have this this amount of money that i'm going to eventually get to then the idea is that money now is yours in the bank or in this in this fund somewhere that the annual income is just that percentage rate so when we run it so take a look at this annuity here so one zero six one five nine seven yes that's more than a million dollars and if it continues to earn that eight percent the annual income just from the interest is eighty four thousand dollars or almost eighty five thousand and that's the idea that this money in the bank or in some investment not not in the bank not saving because nothing in the bank is going to get you this eight percent interest that makes this happen but this retirement investment if you're you know you have this and you can contribute something it's you're constantly contributing and it's growing so at some point then you retire and you have this million dollars that earns this amount of interest and i just picked you know 38 years um the earlier you start the better and the later you stop start uh taking money out you know it can grow even more that you could take the money out at you know uh age i just i just rough estimated did age 22 to 60 you know if you if you start as early as you can i mean even 18 and you know till 68 if you look at that that'd be like 50 years that really is what makes a difference because remember this snowball so that eight percent in those later years that's eight percent of larger and larger amounts of money and then if you get it to this million then eight percent of a million is more than 80 000 so that's that's the idea we want to get to this larger amount of money that just the interest on that you know if this investment keeps going just the interest on that is enough to live on and you take the interest and then you're back to this amount which will earn interest the next year so we want to leave you with that that positive idea of how we can use all this you know that's that's what use all all these you know percent increase formulas to you know turn that into money in the bank that's that's the goal here all right and you know hopefully then it works out and if you have these this code you can tinker with this and say you know how much do you start out with you know keep this rate maybe change the rate a little bit oh you know my fund manager is doing really well change the time monthly contribution you can tinker with these and run it and you know see the results so you know prepare for uh you know what you need to do to invest for retirement so let's look at some more ways you can use these mortgage mortgage formulas here now like we were doing before i'm going to define actually the payment formula as its own function so there we go uh def and then payment and i'm going to take the arguments pr t run it through this formula and i'll just return the payment so this you'll see some places we can use this and all of these you know we're going to apply these to you know let's say you know you're looking for a house you're comparing different things so to get this i'm just going to run this and there we go and i don't need to run that again now i have that the formula here so i'm going to do a similar function and i get something different because i just want to show you this one i'm just going to define it pmt and i'm only taking the principle as the argument because i'm going to just give a set rate and time so with this and then i'll run that through taking the input as whatever the principle is i'm going to calculate the payment and the reason why i'm doing this and we see these imports is because i'm going to make this a slider where i'm just going to go from zero to three hundred thousand and see how the payment changes based on that principle of course the slider shows it somewhere in the middle four hundred and fifty thousand the monthly payment would be eight ninety nine thirty three and we can see how this goes up and here's something you can do you know again if you're comparing different mortgages or houses you can see how does this really affect my monthly payment you know and we look at this oh two hundred and twenty one thousand should i buy a house it's more expensive i know my payment will go up but the question is by how much you see and we can look at this now that's great to see these exact numbers but maybe i want to see the trend maybe there's i want to graph it so notice our standard for graphing and in this case i just define my x maximum is three hundred thousand and my y maximum four thousand that's going to be plenty all these standard things you would already have set up you know x min max the points you're going to use for np dot linspace and everything you're going to do to graph something that i don't always put in there plt dot grid just to show the grid lines and axe dot set x label and set y label so the x will be the amount borrowed and we see that that goes from zero to 300 000 and the y will be the monthly payment so now that payment function i defined earlier i can just use that as my y value i only need the x that i'm going to use as a variable here and i'm still going to give it just a consistent rate and time so you know x is the input all these are going to given the same rate and time how does the principal affect the monthly payment and when we run this we can see that the payment change is actually linear given that same rate and time and this would be realistic maybe you get preapproved from the bank so you you would know your interest rate and you would know the time so just comparing different mortgages it is linear how much would it increase you know for how much would the payment increase for increases in the amount borrowed well all right this is a good visual of it but let's get down to the numbers so it's linear i'm just going to do the slope formula and i'm just going to pick two values you know and you know x1 and then the payment and notice this i just put rate and time here and i define them up here just a different way of doing it i'm using the same numbers consistently throughout this i feel like that would be good for the consistent example and just pick two x values calculate the payment based on those x values and calculate the slope formula and what we'll find so without rounding now notice this is you know dollars and cents so really it would go up you know six cents for every ten dollars of you know price increase or we can you know multiply it by a thousand here and say it would go up six dollars you know because 5.99 i'll round up it would go up your mortgage rate would go up six dollars for every thousand extra dollars you borrow and now you have that in in mind oh okay an extra thousand that's going to be an extra six dollars in the monthly payment and you know you can put things in perspective do i like it that much you know oh the extra thousand it's only six more dollars so we see some things we can do with this we can take these formulas that we we've been working with and we can define them as their own functions we can use them in sliders we can graph them and finding aspects of the graph that we can use and finding aspects of the graph we can do other analysis this is kind of like we want to be building upon for our data analysis so this is all good and i want to actually then have like a bonus here beyond the python i know this is almost all python but i want to get into showing how you can do this in a spreadsheet because that will give you like that full amateurization table and i want you also how to build that because these are some good spreadsheet skills you'll want okay so notice the balance here is a formula but we'll get to that in a second so given that given a home price i picked this two hundred and fifty thousand that's somewhere around the median home price in the united states right now i want it to be some realistic middle of the road number down payment it's going to be we want 20 percent so notice if i click on this this is cell g3 up here is the formula and i just did 20 times g2 0.02 times g2 so that way if i change this and i make g2 you know 300,000 instead click somewhere else then it will automatically calculate the down payment i think i do want to go back to 250,000 again that's i feel like that's a good middle of the road number for us to use as our example and click and it'll adjust again now then the borrowed amount i would subtract that so i'm going to double click in this and equals g2 minus g3 actually that's exactly what i wanted sometimes sometimes google will prompt you will give you that and notice that i can click on this and you can see the borrowed amount and then up here this is the formula g2 minus g3 which is the home price minus the down payment all right so let's just say the interest rate you know 0.06 and time uh 30 years now i'm going to write the word years here i'm not going to use this number for anything else but here the interest rate i will all right now monthly payment we can always then go right back to this and calculate the monthly payment so we see here i just had this monthly payment there you go six percent 30 years and i already have this so what if i just made it my borrowed amount which was 200,000 even and i can just go to this borrowed amount oh 200,000 now i could actually also just make another since i already have that payment i could actually right under here write print payment 250 uh 200 comma 0.06 comma 30 so you see i could just actually just put this in here and output the monthly payment all right there we go 11.99 and 10 cents so monthly payment will be 11.99 and 10 cents so now notice here this is just a couple of things that we can do here and 10 cents so now notice here this is just a good reference for all the things we want home price down payment and everything but these notice i already had to just populate over here the monthly payment and if you'll notice i have these dollar signs here that's going to be for some things we're going to do later i mean i don't need them over here but we're going to do some things later we're going to drag these formulas down and it's going to adjust for according to the row and the dollar sign will keep that the same so dollar sign g dollar sign four that means if i ever adjust this that's not going to change it's going to stay too it's going to stay referencing that cell g4 and same with the payment that's always going to reference g7 and that's what i that's what i want now the interest we've been doing all these fancy interest formulas but actually this is going to be monthly each of these is going to be a each of these roads is going to be a month so for monthly interest we can just do simple interest equals the print that balance which is a2 times the rate which is 0.06 times the time which is one month so one month is one twelfth of a year so i'm just going to say divided by 12 and this works out i mean you know that's very nice but it's not always going to work out evenly so what i want to do is i want to add another function around here round round open parentheses and i will put you know so it rounds this and if i don't put anything else you see it'll round it to the whole number but i want to put comma two because that'll round it to two decimal places and this is google sheets if you you do this in microsoft excel you have to have that comma and then however many decimal places even if it's zero google if i eliminate that it'll just round it to the whole number so there we go so round i have my payment and then my new balance equals the original balance which was a2 plus the interest of the crude so that's b2 minus the payment which is c2 and i want to take this so we see even you know earned a thousand dollars in interest you know just you know just sometimes it's a lot to stop and think about that and all that the paid you just took a little bit off because that earned a thousand dollars in interest and then the payment was only 11.99 so a little bit of that like 200 bucks went to the paying down the original principle so i want to take this because then we have the balance it accrues interest i make a payment new balance and i want to take this and carry it over here so that was cell d2 so i'm just going to put equals d2 here here and here now notice if i drag this down it changed because it's calculating the interest now based on this this balance you see a3 times 0.06 divided divided by 12 and then here when i drag that down it's going to be the same because i put the dollar sign in there it won't adjust anything and here i will drag this down one and we see again doing that it adjusts it for this row now everything here was based on row two everything here is based on row three and we got that by mousing over the bottom right hand corner you get a little tiny plus sign and this is magnified but you know you'll see the that thin plus sign and you click and drag that but we're going to do that for the entire row so i'm holding down shift in the arrow key to highlight the entire row and i'm going to mouse over that i get that thin plus sign and i'm going to click and drag and this is how we make our amateurization table now notice my mouse is down below the bottom of this because for 30 years that's 360 months so somewhere around there is where i'll stop and these are all negatives so i'm going to take this highlight all these negative numbers and then just delete them so now here this is you know after this the balance is a dollar so so we can just make this 11.99 plus that additional dollar 13 and i'm not going to take it to multiple decimals like that and that should be yes 10 cents negative 10 cents dollar three three and that should be enough to make that we're just going to call it that many zeros we're going to call it zero and what we have the row number is always one more because we had the first row as headings so three given that mortgage payment it works out exactly 30 years exactly 360 months you have a balance of zero so we're going to take take this and we see this is the amateurization table and you know you can look through it and scroll through it and see how the payment stays the same but what happens is the amount of interest keeps going down gradually because for such a large amount of money for such a long period of time every month the fact that you're paying interest on just that little bit less that really makes a difference and then that means that look you know that same payment a little bit less interest a little bit more of it goes to the principal so you know you're you're making some progress paying this off but it takes a while until see look at this i mean that's almost 1200 so we have to go into you know 225 months you know we're coming up on 20 years until you know half of your payment goes to interest or less than half of your payment goes to interest so it's just good interesting to see that whole table and then this balance here at any given month that's the payoff amount you know supposing you come into some money and you say oh i just want to pay off the rest of it you know that that's the balance that's your payoff amount and we have all this now besides showing you the spreadsheet and how you can set this up and how we can you know grab values from other cells and how we can add formulas and how we can drag all this down that's great amortization and you know mortgage mort you know it does sound like death because you know it is the same word mort so let's do something more positive with a very similar type of formula so supposing i set up the same thing balance interest i'll capitalize it and payment but i'm going to say contribution and then new balance so let's look at this in a more positive way supposing that what this was this amount that you owed that you're paying off but let's talk about a retirement account that you're adding to so i don't know let's let's start by some like round number like five thousand dollars and a lot of retirement accounts you know people managing it could you know get like eight percent interest that's pretty reasonable to think of so we have equals so we have equals so this is column i two times zero point zero eight eight percent interest and then for one month so then you know one twelfth of the year so divided by 12 there we go and maybe you know we could do this we could do this with or without rounding i'll round it that might that might work out it'll just look nicer round and i'll round it to two decimal places again dollars and cents okay now monthly contribution so who knows like you know you can contribute a few hundred dollars let's start with something like this like let's start with like 200 and we're going to change that later so with balance it gains some interest and you contribute so it's all plus equals i2 plus j2 plus k2 and then we're going to carry that around so that's l2 equals l2 l2 and we're going to do the same thing drag this down one drag this down one drag this down one and what we have is you know given that you know rate of interest given the contribution you could always add more different times but i want to show you this for about the same amount of time so if we drag this down now this being a retirement account a lot of times people will start this earlier so we don't really even have to stop at 360 let's stop with like 400 nice even number there um there we go uh 401 because the first rose so what we have is this at that point then you know this amount that you have is 469 thousand dollars and the interest every month is 3000 this 3000 so you could easily like take that interest and then you're back to 465 you take that 3106 out every month and live on that and then you're back down to this so you know it it you know goes from this and then back to this take that out and then you're back to this that's one way to do it i just want to show you so let's let's get even more optimistic here and say then we contribute something like you know 400 dollars a month we're going to drag that down in a little bit and this one let's say you know 0.085 i don't know a little bit more optimistic on the there we go drag that down a little bit and so now that second row again is correct and we'll drag this down and the other thing i'm going to do is take this a little bit longer maybe even like uh 450 months or something like that 40 years would be 480 months so we can take this even further and you'll see that just you know some of these you know you get some poss some nice possibilities here all right and because look at this final number here so because look at this final number here so yes that one is one million so you know that's what we're talking about here you know one million dollars and the monthly interest is nine thousand eight hundred eighty five dollars so this is something you know again i want to you know take this same math and turn it around and make it positive something that you could be contributing to and then at this point you have this money you know in this investment that you can take this out every month or or less and you know not have to worry about it ever running it running out take that out and then you're still left with this you know more than a million boom take that out live off the interest and you still have this every month take that out you still have this to generate interest the next month and these are some of the things that you can look at that you know from the other side of it you know you owe all this money to pay off this mortgage but then you own this house and on the same time you're contributing and you know here then you have money that you can live off of and you know these you know these are the types of things we want to do with our math skills look at how we can manage manage money to you know later on in life then have this you know property that has equity and you know as value and something else in the bank that you can live off of and there we go you know putting the math skills to use and seeing how you can make this work for you seeing the trends that you know it seems like now you might be working hard and owing a lot and not having that much but you know over time like many years you build things and then you have things oh i have this that i can now you know they've built over decades and can live off of it so that's really good and you know we were doing some of this with the other uh python you know generating just some of the values but you see like these you know these are some of the ways you can make this work for you and you know look at the trends and hopefully this helps you make some decisions about investments you know whether it be real estate or borrowing money or other retirement investments all right so that was just you know some bonus and there we go we're in the home stretch hopefully you're really seeing this all come together you know skills that you're building building so let's talk about exponents and logarithms so the exponential form is this two to the exponent three two to the third power equals eight so we know how to do that we've been doing this so far in algebra then logarithm is the same information rearranged so this same information the log base two of eight equals three so the logarithm is always what's the exponent that's what we want to know that's what we want to know and in what we've been doing so far and in most calculators you know two to the third no problem i know how to put that into the calculator in python they don't even have to import anything but if i know the base and i know what i often call the result if i know the base i know the result but the exponent is what i don't know then that sometimes becomes a problem especially when it doesn't work out nicely like this works out but supposing you know it wasn't a nice you know a nice nice exponent even nice exponent like three supposing you know two to what exponent gets me nine or ten it's going to be some weird decimal but how do i how do i get that and so you know we we have to appreciate that you know uh john napier you know spent like about 400 years ago spent like 20 years of his life figuring this out and making tables and now we have this at the touch of a button on the calculator and we're going to look at also how to write the code for this now with logarithms we do have to import something but you know we'll import a library you know much quicker than spending 20 years years of your life figuring this out so if we have you know two to the third um you know the the base is always going to be whatever you know the same thing with an exponent what i call the base so if i have you know log base two of eight you know it's what's the exponent now what's interesting is our count in our calculators we you know you can do the log you'll see a log button now if i have the log if i just say the log of a hundred and supposing i don't see any number there if i don't see a number then it's understood base 10 and we call and we call that the common log because our number system is base 10 so if it's 10 i don't have to write that and so the log of a hundred is two because 10 to the second power is 100 and we're going to use this a lot of times for working with scientific notation and maybe even converting decimals so that you know that's that's where a lot of times i i'm going to use the common log and then i might even if i'm doing things like scientific notation i might even do the floor function because if you know what's the log uh you know like 150 it's going to be two point something but then for converting it to scientific notation i may be just interested in the two because then that tells me to move the decimal place too so then that would be you know 1.5 times 10 to the second you see you know different things that we want to do with uh converting this for scientific notation all right other interesting things about logarithms well that exponents and logarithms they're inverses of each other so if i have um if i have the log base two of two to the third then or actually i'm not even going to put it to a definite number i'm going to call this x because then anytime the answer is x you see if i take the log of the exponent anytime you have a function of its inverse it cancels out to x now now notice then what we're saying here the log base two so two to what exponent gets me two to the x oh x is the exponent you know makes sense and the same type of thing works with if i have two to the log base two of x exponent same thing that's exponent and log inverse because remember take a look at this log base two of x so it's two to what exponent gets me x so remember anytime we log we want the exponent two to what exponent gets me x and whatever the answer is it's an exponent and i am and then in fact taking two to that exponent so i would end up with x so we see you know that we're going to use these inverses and this is where it becomes very useful you know for whatever for whatever base i have if i'm solving something if i have three to the x equals you know 25 now that doesn't work out nicely if it was 27 x is three that's nice but i know i'm going to do this on the calculator what am i going to put on the calculator well how can i get how can i get it to x equals something well if it's three to the x then if i take the log the log base three of this three to the x and then on the other side it's going to be the log base three of 25 so in algebra in the things you know i do the same thing to both sides what are the things that i can do well one of the things i can do to both sides is take the log of both sides as long as it's the same base so if i take the log and i pick base three because of this because then that cancels down to x and then over here i have the log base three of 25 which is what i would do in the calculator and we'll see in the code you know we're going to import a library and we'll be able to do this you know no problem on the calculator or in the python code now another thing is if you're on a calculator or you know you want to do different sort of python code i could just do the common log for this it actually works out also the log of 25 divided by the log of three so the log of this divided by the log of the base and again it can use common log or whatever i'd want for that so you know that's pretty interesting you know what another way that like that works so change of base formula if you ever find yourself in a situation where you don't have the ability to do the log of any base you know you can use you can use whatever logarithm you have and do this so that's where you know exponents and logs we use that inverse property when we're solving and that comes up a lot you know if i if i want to look at things you know things that are growing exponentially anything continuous growth sometimes it's you know radioactive decay for dating carbon all kinds of things sometimes i'm in this situation exponent my unknowns in the exponent and so i want to use a logarithm to figure that out the other log is going to be the so we have all the different bases and the common log which is base 10 but then i also have the natural log and if i was writing this it's i'm going to i'm going to write it as l n we'll see that a lot of the logarithm functions in python they actually if i just say log it actually goes to natural log not base 10 so that that's really interesting in python the default is natural log if i don't put another base there but if i was writing it out it's l n for natural log and so if i have the natural log of of anything so the natural log means that it's base e and so and base e e is about equal to that 2.71828 1828 and then after that it's less than five but then you know it just that pattern stops so oh 2.71828 so he's about 2.71828 1828 and it keeps going this is used for a lot of continuous growth formulas so if i have you know the natural log of you know 2.7 well then my answer is going to be you know about one it's going to be a little bit less than one it's like 0.99 or something like that you know 0.99 and i can you know i can use the natural log for for some other things and we'll see some of the applications of that too when we get to the code but that's where if i have base e so if if it's base e i just make this l n if it's base 10 i can just write log and if it's any other base and the bases we usually want to have them as whole numbers but if it's any other base then i'm just going to actually write the base so okay so we take a look at this we'll see how we can actually calculate a lot of this in the code and that's going to be pretty useful for some of the some of the applications we have so let's take a look at the code so when using logarithms in python we'll just import the math library and now we have math dot log there we go math dot log and it takes two arguments the number and then the base so this is math dot log of 10 000 base 10 so when i run it there we go it'll be four this works out nicely for things that we know are going to be a nice integer but i also want to show you that python weirdness sometimes even when you think it's going to be a nice integer math dot log of a thousand base 10 so i expect this to be exactly three but when i run it it gives me this long decimal so any of these even when you think it's going to work out nicely just the way that this works behind the scenes you might want to just build in a rounding function here so i'm going to round all this math dot log of a thousand base 10 and i'm going to round all that to four decimal places so you just might want to build build that in so that way you're going to get that answer and notice i still said four decimal places but because it worked out not rounding not needing decimal places it didn't have to give me like four zeros after the decibel there we go so that's just the usefulness of it that it's just worth it build the round function in there all right so that said i have a few of these that i don't have the round function just to show you what the exact answer might be so if i have base two there we go again import math and then we're going to do math dot log in this case 16 base 2 so when we run it it's going to be four and i don't have the log in there so if i have something like 15 base 2 i don't have the rounding so you see it'll give you all that if you need these decimals all these decimals for for something it will give you that but there you go just whatever the number is and then base natural log i'm going to import math again and notice here i can just do math dot log of a number and if i don't give it that second argument of what the base is it'll default to natural log and e is about 2.7 so if we we do this we see you know it gives it that rounding now what i also want to show you is as we were talking about before uh so math dot e if i just want to use e for anything math dot e is going to be the most exact you know it'll give you all those decimal places you don't have to just you know guess at it but also e to the fourth then and i store that as variable x so if i have e to the fourth and then i take the log which is the natural log my answer should be four because the log of that exponent or if i have e to the third the answer is three so you know if i use that math dot e to get the most exact uh approximation of e and then log without the other argument then it will cancel out and that'll that'll work out the same way if i did like you know 10 to the fifth and then log you know base 10 you know that works too so just just to show you this all right so other good uses of log or especially natural log answering the question how long will it take for an investment to double and i still wanted to put the algebra in here so if we have our general continuous growth formula so i have p and then i have the annuity what number p what what it starts out as an annuity what number it ends up so if it's doubling then whatever i have for p doubling would be two p whatever the number is so i can divide both sides by p and then i get this e to the rt equals two so as we were looking before about getting to exponents if my unknowns in the exponent it what's my base and then i'm going to take that log of both sides so if it's base e i'm going to take the natural log so on the left i have the natural log of two and on the right natural log of e to the rt as we just saw is going to be that exponent so that's why we do that if it's base e i'll take natural log and then they will cancel out the function of its inverse and then if i want to solve for t now i have rt divide by r so i would have this the natural log of two divided by r gives me how long it would take money to double so we can just put this in some code i'll just define r as the rate here you know two percent you know sort of like a low inflation rate and natural log of two divided by the rate so i am going to round this log two so notice no other argument there log two and divided by r and also the rounding is no other argument so it'll be a whole number there we go and we get it to be 35 years so if something's increasing at two percent 35 years from now it'll be double and like i said as a low inflation rate something that costs whatever now 35 years from now it'll be about double that price so we have this or if i have you know some investment you know oh nine you know nine percent and i say oh this you know this seems to be doing okay i put money in this investment how long will it take for that money to double in this case eight years so there we go so you know some people might make that determination for what they invest in and there we go answering that question write some code so in graphing this i want to show you this pattern of graphing the exponent and the logarithm so we're going to do all the usual imports for any graph we're going to do all the usual you know x min x max set the dimensions here and we've done this before when we use numpy i need the no i need this the number of points here because then i'm going to create my numpy array np dot linspace from x min to x max using this many points so there's my array now for this i also created a second array array specifically because my x min i don't want it to go down to negative 10 i wanted to start at 0.01 and we'll see that in a second and then again set up all the all the graph here so i'm going to graph this first line here y1 equals math dot e to the x so there we go i imported math just for this using math dot e so if i'm graphing e to the x plot that and then line two so then if it's e to the x i want to do the natural log and so notice it's log and i didn't use the math one here i wanted to use the np dot log for use the numpy because i'm graphing so numpy has log built in also so i want to use that because i'm graphing that'll match up with with the numpy array and that's this is why i wanted x2 as my argument here because logarithms can't be zero and they can't be negative so i didn't this actually would give give an error but it would still graph it just with that error and i didn't feel like seeing that so i i created that other array starting at 0.01 so there we go so now i have e to the x natural log and my line three it's just y equals x all right so this is what this looks like and this blue line that curves upward that's the exponential function and going to the left it actually doesn't really touch zero it just gets really really close beyond what this display can show but it doesn't ever get to zero and then this orange line that logarithm it the x value can't be zero and then it goes up and it has this curve to it as x gets bigger this increases but it not so much especially as it goes on and on and then the green line is y equals x so if it looks like these are mirror images of each other across that line that's true like any inverse functions they are mirror images across the line y equals x so kind of cool how that works out so we see this numpy arrays of points e to the x natural log of x and just as a slight comparison i wanted to show you that if i have two to the x and i'm going to use this and comment out this other one so instead of e to the x if i have two to the x all right there you go two exponent x and then here i have the log base two and again i'm going to use numpy and you see numpy's log instead of a second argument they have different functions so this is so log is natural log log two is log base two and then there's log 10 so those are the main ones you'd you'd want to be able to use there we go so i'm gonna have log two here and then the line y equals x so if i run that it's going to be slightly different because two is not as big as 2.7 but very similar and often you know if but if it were my drawing i i wouldn't be able to draw the subtle differences so i would say oh they all kind of look the same you know exponential logarithmic y equals x there we go so we use these as some good good estimates here all right we can also use logs for scientific notation now here i just had it print out 3.2 times 10 to the fifth now i wrote that in scientific notation but it'll print it out with with all the zeros here and here i have it as a negative exponent 4.5 times 10 to the negative second there we go and you might be wondering about that comment why negative two works fine why that's an important thing and there we go uh we see the output here because exponent negative three gets weird very interesting because the exponent of positive three 10 to the third you know got a little weird too and you see just the way it works behind the scenes the negative three we would think that it would stop there and that'd be fine but it gives you all these other zeros and then a five at the end unnecessary but as i was mentioning before the rounding will will solve a lot of these problems so you know i just use this with for the for the negative four so i have this 10 4.5 times 10 to the negative four and i'm going to round it to five decimal places so if i have a negative exponent let's say negative four then i want to round it to five decimal places and then that gives all of these because it'd be 4.5 and i want that extra decimal place to show that so you see rounding rounding again works out very nicely and then if i have negative five and greater it forces the scientific notation so as much as i want to say that i'm just going to print this out i already have it in scientific notation i even say round it to six decimal places doesn't matter the output python wants to put in scientific notation and notice this e is not e 2.7 but it's 4.5 times 10 to this exponent so python uses this and a lot of calculators use that notation also we can convert something to scientific notation if i take this so i want to get the number of decimal places so if i take the log so this is variable a so if i take the log of a and base 10 so this one i'm just using the math library if i take the log but since it's not 0.001 it's not going to work out to it's going to be like one it's going to be like one point you know it's going to be like uh this is four decimal places is going to be four point something so that's why i want to do math dot floor to get just that exponent i want to chop off all the the extra decimals in my answer here and then the log of that the floor of that is going to be the exponent so that's what's going to give me that negative four and then if i take n i'm going to round that 10 divided by that exponent and this formula also works for larger numbers too but if i take that and then round it then in this case rounded to two decimal places that's fine that's n i could stop there but i have this extra loop here just in case there's rounding errors because it could work out somewhere that n ends up being greater than 10 you know that that happens and so in that case then i then i want to make sure that i still get true scientific notation one number than the decimal so there we go i'm going to just if it's greater than i'm going to increase the exponent now for this one there you go a equals point zero zero zero five and there we go it gives you point zero zero zero five equals five times ten to the negative four and then this should work for all kinds of other exponents that you're converting it to scientific notation if you wanted to so these are some of the uses of logarithms you know we can see the graph that's pretty interesting but we can see the applications the solving sometimes if my unknowns in the exponent we can see converting to and from scientific notation so these are a few applications of logarithms and i'm sure you will find even more so you can make use of make use of this code and enjoy here we have the foundational math three certification three and like the others you're going to make a copy first of all and work through this whole notebook make a copy put it in your google drive and then from your copy we'll do first step like before according to the testing library and later on in this unit or the next unit we'll look at the mechanics behind this and how you can set up your own virtual your own library hosted on github and use that import that into whatever notebooks you want so you know as you can see here we have the first step whatever notebooks you want so you know as we get through this course you know you see the mechanics of setting it up and then you'll learn how to set up all these things but for now i just have the comments here you know install requests here's the library and when we run this then it will get the library take it uh as as a new file locally here uh behind the scenes we won't have to worry about it and it's imported there we go and this last thing says that yes it works and so we will go on to the next step there we go and remember the runtime run uh it times out you know 12 hours consecutively at the most or about a half hour of inactivity so you just just get in the habit if you know working on part of this you leave come back then you go and run this first cell again so we were looking a lot of into graphing before now we're going to graph inequalities so when i have let's say y is greater than or equal to 2x well if i have then if i can graph a line but how do i shade that well we have this argument here fill between and so it gives us a range of values so we're going to go here import matplot library and import numpy like we were doing before and we're going to set our window like we were doing before how many points you know numpy that linspace give our points setting up the graph all this is very similar this one got a little fancy put a title on there so we have the plot title y1 just like we would do before supposing i was graphing this just as a line we see all the similarities there we go here's the code change and remember this we have plot these two and then we have this third argument we had this third argument so if you're working through this and remember you know this if you're watching this video maybe hopefully you already did work through this so this is going through you know double checking anything you did or if you want any deeper insight about this but then we have the second arguments are the fill between so this one notice we have here you see it's fill between so we still have one x value and the y values are what we're between so between y1 and zero and i'm just going to run this to show you you see it fills between y1 and zero so that doesn't matter you know that's not a consistent you know over on the left here zero is up top and over on the right it's down to zero but thinking about the top of the graph oh what if i just change that to if i want to shade above what if i change that to y max without the caps without the caps and then we're always shading above between that line and the maximum y value so you see then shade below you can change it to y min and there we go and when we do that there we go code test passed so part two well we had this one is a nice solid line and remember then that's greater than or equal to but what if i wanted you know not that solid line so we have all the rest of the same things here we know the logic of this so now if i have y min now that's going to change you know to shade below and this is the only thing we're going to change if i have this remember the default gives me a line until i do the fill between but what if i wanted this to be a dotted line so we see you know see if i have b dash dash r dash dash gives it a dotted red line and we run this so now we see and sometimes i'll do that i'll make the line red so that it really stands out if i made the blue just blend in so now we know this would be less than but not equal to and there we go yes and knowing now that we can make some lines you can define these lines you can define these lines we can make art for example we can do that fill between and we can fill between two different graphs two different functions oh that might be interesting then this defaulted to notice i didn't even define the color blue here but i can define that face color what color do i want to do i want to make this so so if you know like a lot of your basic colors you actually can just get away with just putting that you know i want to be green put it in green in quotes single quotes yellow a lot of the common color names this will work out so that'll work so the directions here would be run the code and then reverse the order so we see here like before here's the graph this is the line we're plotting and remember we defined the x value up here once so here's this y value plot this i'm not worried about making a particular line so two arguments are fine and now i have the fill between and see what i have x y1 and between that and 10 or i could just easily make it you know y max but that's fine and then i add the other argument face color red line two i have this and fill between now notice between y2 and y1 so you know we can always define it as you know between other values that's this is this will come up especially if you want to make art you can define your lines and then fill between these lines i mean this is really vector graphics so then change this you know we have this color and same thing all of these you know this line y3 and i'm going to fill between y3 and y2 next one y4 there is that function fill between y4 and y3 and so when we run this see that first one it filled between there up to the top and then i did not decide to have another one to fill down to the bottom we just left it here so if we take this and reverse the colors so we're just going to take these face colors and make the first one blue there we go and we'll reverse them blue green yellow and then red at the end so the next one will be green and the next one will be yellow and the next one will be red there we go so now we have this and we see when we run it it reversed the colors so there we go interesting things you can do and if you were making art you can make these whatever formulas you want remember you know we were looking at all the different you know you know quadratic you know uh exponential functions so if you want different curved lines and you can just define that you want it to be between something and something and where i define this linspace here once so that's the reason why all these go to the edge but you could always for each of them you could define lines you can define that linspace as within certain values and you can make all kinds of shapes and then continuing on what we're doing with other graphing i kept these axis lines but you could always eliminate them too there we go you just keep your window size but then you could always eliminate each axis again you can again you can get creative with this make some different art all right and now we get into looking further into factoring into representing equations so monomial is one thing uh we see that mono is one and then it actually overlaps n o m is name that exact word is name in some languages and then i al just makes it a noun so one thing one term so each term has a sign coefficient and variable and an exponent we don't think about that all the time but when we see it here definitely i see a negative sign i see the coefficients three x to the second power so but if i have you know all of these the term x also has that so this is positive one x to the first power just things to think about because that really comes into play for some other things that we do with factoring etc even even a constant like five is five to the zero five five x to the zero because x to the zero is one and this will help us you know in thinking about each of these you can have a monomial and just make sure that you define each of these even though sometimes these values might be one or zero and you might not display them so here we have this now this is just a very interesting within simp i we have eq which is going to display the equation and you see how this equation is eq and then in parentheses i'm going to have what's on the left and then what's on the right so i define it as an equation and left and right just gets separated by a comma so you see what we have here so just showing you that this is one way you could you could use this within simp i for some other things that you might have been doing in in other parts of this course you know if you wanted to make sure you have a nice display at the end you know bring up eq you know use your variables that you already have and you see we just defined x as the as the symbol here so we could do this and then just display it and then look at that nice display there we go and so we have monomials one thing binomial bi is two trinomial is three and after that we kind of stop counting so polynomial is just many poly is many three and we'll usually put them in order so we take x as the variable we'll put them in order of the highest exponent and if we want to graph this then it would be all that equal to y so there we go here's your example and it continued on to the next line so what i can do is if if i know this i this is the normal standard standard form setup so you could prompt for each of these coefficients and then display them and so there's what we have here that's what i'm asking you to do so we're going to use this display and we're also going to use some math we're also going to to import everything from simpy so now we have these symbols and we want a coefficient and yes i do want to cast it as an integer though i mean realistically the coefficients do not have to be integers so there's our coefficient and a and b continue to prompt for variable c and d so what you can do is you can copy this and make this c input coefficient c and then we'll do for d input coefficient d all right so we've done that and now we want to display the full one so we have we're going to display ax to the third bx squared and then we do the rest plus c x plus d and notice we you might have remembered this from before yeah in in writing the math i just put these right next to each other ax means i'm multiplying but remember the python notation i have to put that multiplying in there so it is ax to the third bx squared cx d there we go now we have this this is great we have this in python notation and we were just talking about we want to display this in a nice way oh well i have to convert that to latex which is really the way we're going to you know to display math terminal math formulas so now we have this i'm going to convert that python to there you go so if we have this two two three four and five so you see we can take this and convert it that way you have all this for things you know we're thinking ahead we're building things that you can use you have all this that once you bring in these coefficients you could do other math to this here and then maybe at the very end display this this formula in a nice way so there we go that's what we have and yes that does look nice so this is going through so interactive polynomial so now we're going to take this this you know here's well quadratic but there we go and given this polynomial we're going to adjust each of these coefficients so again in doing this this certification notebook you should see that this is coming up you know things that you've done before and hopefully you've already worked through this and you know maybe there's just some of these that you were stuck on or if you forgot so remember we were doing before that plot library in line and we're going to bring in the interactive from the widgets there we go all these things and remember these the function of a b and so for this one we're going to change it to include a third slider so there we go so my function needs to include c because i need these three inputs great and then all the rest of these are fine ax squared plus bx i have to add this plus c c and so that will show the plot and then we want to make all these interactive so i'm going to run this function a b i just need c so we can just copy that comma c so now we will have three sliders a b and c and we have the interactive and then we're going to display the interactive plot so there we go so that's how we can and you see how you know using the same thing you can modify this to have four coefficients so now we see and it looks like nothing because everything is zeroed out but as soon as a gets to be something then we have a quadratic you know negative all right so that's nice and then we have b and it's always interesting to move these and see what this does to the graph so you can tinker with this and see remember that just moves it up or down there we go so you can take these and you can tinker with you know once you have this i mean code test pass but these notebooks you can always tinker with these what you know you pass the test you know you've learned that step you can go back in there and pull around with these sliders and see let's see what it looks like so now we're going to do exponential functions and remember our exponential function y equals a times b to the x and there we go as long as a is greater than zero then we'll have an upward or as long as a is greater than one it'll curve upward and same thing as long as b is greater than one we'll curve upward all right so again thinking about some of the exponential functions the so what we're going to do is we're going to run this code see the sliders and then change the slider so that a actually does have negative values instead of positive so here we have all these importing same imports and notice i made a y minimum and y maximum a lot bigger things grow exponentially so kind of need this to display a decent graph here we just have a and b and you see one to nine we just want them to be positive so when we run this we're just going to see what this looks like there we go and either one you see as i increase this it gets to be steeper but we see the general shape of this it just gets to be steeper and then if i change a it just gets to be steeper and then if i change a i'll even make this low because it don't it still will be positive so that's that's really all these you know they kind of do the same thing thing maybe b has a little more of an effect but then you see it's kind of that same upwards upward curve and then as the x values get negative this really doesn't touch it's you know you can get it's beyond what the resolution of any computer screen could do because if you keep zooming in in you know it looks like it doesn't touch and then it looks like it does but if you zoom in then it doesn't so you know that's the general trend so if we make this negative then we still need to do one more thing because this interactive graph takes this range as lowest to highest so net making it negative negative one is not the lowest we have to switch these negative nine is the low value and negative one is the high value remember because it's more negative so if we don't switch those also then we would get an error so we get this and we can run this and we see just making the a value negative would make the whole graph go below the yaxis because b to the x would be positive still so then a being negative there you go just flips it and just a note making b negative i'm not going to even worry about doing this right now but if we did that it works for integer values of the exponent but since this is a continuous graph it would be integer it would be work it would work and it would be you know positive if it's an even exponent negative if it's an odd exponent and it would go up and down like that but all those in between values because that would be mathematically doable also in this case they would actually be imaginary they wouldn't they would not necessarily work out well sometimes if we had you know some of them would and it would just be a mess so we're not we're not even going to mess with that changing b to negative it just really would end up not displaying anything but behind the scenes that's what's happening it works out for some values but doesn't work out nicely for others and you know a graph would be a mess but let's look at stuff that does work out nicely percent increase so hopefully you remember the formula from working through it in the previous unit but then we have you know all the percent increase and if i were to graph this so we have a equals p times one plus r to the t and a is annuity and that would be the y value if you were graphing this and you would know p and you would know r so t would be time in years but that would be the x value if you were graphing it and so we have all this yes p is the principal the amount you start out with r is the rate converted to a decimal and t is time in years and just the way we often see it p usually is capitalized so it's just interesting in in my variables i kept them all lowercase but a lot of times you'll see that written you know they're lowercase but p gets capitalized um all right so you have your starting amount so you can prompt for these and then you not have to worry about changing the code well we are going to change this here so you can prompt starting amount as input and converting all these to float numbers so you don't have to worry about changing numbers percentage rate converted to a decimal and how many years that'll be t so we're just going to take this equation and put it down here in python terms so we have p which we would have gotten from here so p times and remember i have to put the times it the multiplication in times one plus the rate and all that to the exponent of time and there we go just translating that equation to to python and then we'll print out the annuity so when we run it starting amount one thousand just take these nice even numbers all right and we have point zero five as the rate so that'd be five percent and how many years then let's see uh let's say like seven years all right and i didn't worry about putting in another function around this but you probably would but there you go to two decimal places this is what the annuity would be thousand dollars at five percent for seven years and then we have percent decrease very similar formula except notice we're subtracting inside the parentheses because it's one minus three and this does this does happen we does happen we have car value values of cars or some other products that might decrease at a certain percentage rate every year the decay of some elements so that radioactive decay or certain elements like carbon 14 that are very predictable so that decays at a definite rate knowing how much that we can measure how much that is we can figure out the the age of something some sales discounts maybe there's something that decreases at a percentage you know every week if it's not sold so you have some applications of this and notice we're going to do same thing prompt for pr and t and then we'll put our formula in here very similar p times and then in parentheses one minus r close the parentheses exponent t so there we go and we see you know the jupyter notebook the colab notebook always wants to give us tool tips and advice on what variable and everything so there we go we have this and we'll run it all right so there you go so let's just say i had my you know twenty thousand dollar car that uh decreases at 0.09 which might be the you know rate of decrease who knows and then how many years will decrease you know let's just say 10 so there you go that twenty thousand car twenty thousand dollar car average uh rate of decrease depreciation is nine percent so it loses nine percent of its value every year for ten years so then ten years later that car is worth seventy seven hundred dollars seventy seven eighty eight that might be the case i mean you know this is not uh don't quote me on on this rate but you know for the sake of practicing it that that rate's probably realistic all right so now we have compound interest which is very much like the percent increase but we're taking it you know we could use compound interest we could use that formula before if it's compounded once a year so now we have this formula notice how similar it is but it's r divided by n and then the exponent is nt so if it was compounded once per year and is one so that doesn't that goes back to that formula we were just using but where n is multiple times per year you know this is the formula that we we would use and remember that that's really and that's why we wanted for any percent increase that's why we wanted to convert it to that formula that it's something that's a multiplier and we can then easily adjust the rate of decrease that's why we wanted to convert it to that formula and we can then easily adjust this for how many years something you know increases or decreases and in this case now we had the other twist also then for how many times we are calculating this every year i mean n being 12 that's pretty common you know a lot of banks a lot of bills you know they calculate things you know once a month so we're going to do all these starting amount all the rest very similar and then we're going to add this line here n number of times compounded so using this formula then we'll do p times and in parentheses one plus but now i have r over n i'd rather use extra parentheses just to make sure that nothing gets mixed up in the math uh r divided by n and all that to the so you see r over n in the extra parentheses to the nt but again just to be sure i'll put that in parentheses n times t in parentheses so that way it stays together that python doesn't actually python might not but i want to make sure it doesn't accidentally take it to the n power and then you know well then multiply by t so there we go p times one plus r over n to the nt and that's going to give us our annuity so just to be interesting let's use the same one we did two steps ago that one thousand dollars converted to a decimal and we were saying that that was at 5.05 and we said seven years and and 12 is pretty common but i'm going to say 52 let's say it was compounded you know every every week all year here so what do we get 14 18 and 82 cents and let's just quick go back and compare this to our increase 1407 and 10 cents so look at that just that little amount of money made us another 11 because it was compounded that often it's a little bit more because you have that little bit extra advantage this is money growing and then that little bit extra percent for that little bit more time you know gets you a few more dollars so you might be thinking well okay 52 then maybe 365 would give you a little bit more that's true and we can just quick do that so remember that was 1418 and if we did this so that same thousand dollars percent we're going to do the same 0.05 the same seven years but then this is going to be 365 compounded every day so you see 1419 it gave you another dollar so compared to once a year you know you made about 11 more dollars doing this every week but from every week to every day you know gave you one more dollar so there is a point to where it doesn't really get you that much more and then we start thinking about well okay can I compound it multiple times per day etc that's when we get into continuous growth and continuous growth if i use that formula and then compounded it multiple times a day if i compounded that like three times a day and who knows maybe i just make could even make n like an even thousand it starts approaching this other formula for continuous growth so to recap so there you go that's you know money compounding annually so that's the percent increase but we take it as annually and then n times per year we have this formula and then as n gets to be really big like i said like a thousand or something it actually approaches this other formula pe to the rt and this is useful because as we see later better ways to even figure out what the rate or the time would be if i know these other values so it goes from this a little more complicated to i actually think this is a little bit easier formula p times e to the rt and that e is not just a random variable e is this constant equal to about 2.718281828 that 1828 after looping through that twice the next time it's not exact so it's not just like this you know keeps repeating that would make it even easier but it actually after that second time then it's a little bit different okay so we give the code that we're already going to prompt for these and this time we're going to add one more import statement we're going to import math so that we can use math.e you know you don't have to worry about typing in this because actually math.e is going to take it to even more decimal places so we have the same thing here principal rate time and there you go time and that can be an integer that doesn't have to be it can be an integer or float and is going to be an integer because you can you can't like maybe you know how many times do you compound it you can't say like oh one time i kind of like halfway did it that doesn't work okay so now we're going to use these these same formulas we did before annual so that's going to be p times times one plus r exponent t just like that first formula and then this one is going to be p times one plus the extra parentheses r over n all that to the exponent of nt so these are those two formulas and now this one we're going to use math.e math.e so that's going to be p times math.e to the exponent of r times t so there we go we see pe to the rt t and now we have these three so we can prompt and let's compare these compounded annually compounded n times per year i'm going to put an extra space in there and compounded continuously so let's take something here and let's just say a principle of there we go 11,000 rate 0.06 and time and let's just say you know 15 years n and we only need that for one of those formulas but let's say n is a normal 12 so given this compounded annually you would have this much 2632 compounded 12 times a year 26,995 so wow that made you know more than 630 more dollars just by compounding it but look at that compounded continuously 27,055 so there we go yeah so you see from here from once a year to multiple times we're talking about making you know more than 600 but then from that to compounding it continuously you know compared to the original you know we're up to about 700 more and it kind of evens out that oh and this one i think i it gave this error it gave this error because i used the parentheses so if you're going through this and if you know you know these errors messages are supposed to be hints just to help you out so it was without the parentheses and that is okay because python does no word of operations but without the parentheses it should give us not the error so there we go and should give us the same same values here so 11,000 rate 0.06 time 15 years and and we said it was 12 so we see same values and the error message saying you know maybe i'll go in and change that that the parentheses are okay all right so there we go prompting once and comparing these three different ways of calculating interest interest so now some of this comes in where we have you know some investment here and investment often you know something you might be contributing to for retirement and you have some accumulated value so we have any of these formulas but we also contribute money every month and this i will say month monthly that's that's kind of a normal normal thing so i'm not going to worry about like all the different values that that could be okay so we have something that's going to increase by a percentage and we're using just that simple interest formula interest equals principal times rate times time so that is just simple interest but for one month that works out and for one month t equals one over 12 because time in years but then over 12 you can just divide by 12 so here if i have this we can set up a loop here so prt but then monthly we're going to ask for the monthly contribution all right now this annuity at the beginning it is p what do you have i have this i have this amount done so we'll keep that but it's the it's the annuity variable that we're going to keep updating so somebody said time in years so then our loop is going to be 12 times t so monthly contributions for this long for a and range 12 t t and now let's see we're just going to say first of all the annuity equals annuity plus monthly all right so now that annuity value is greater and then now we want the interest just the interest so that's why simple interest is just the interest equals annuity which is the times rate time and then times one over 12 and i'm just going to say divide it by 12 so we see the in principle times rate times time and then 1 12 is divided by 12 so now we have just the interest and now again i'm going to update annuity annuity equals annuity plus interest annuity plus interest and because i'm making this a loop then you know these other formulas are useful for not having to do a loop but we also wanted to add in this contribution and then there we go so you know we have a few things going on in this loop and then after all the loop it's going to go through and each time you know add the contribution increase it by that percentage for that little bit of time you know now update annuity and keep going so when we have this so starting amount maybe we can say 5 000 and annual percentage rate let's be optimistic for you know some uh you know retirement account 0.08 and then number of years but then these are some of the things you might contribute and then have it grow for years so we can even say some like long amount of time 35 years there we go monthly contribution so let's say like 400 there we go so that's that's what we have you start out and then every month you're contributing 400 and you know we hope it's growing at that rate so given this notice how notice what this number is that's a million dollars so what this is saying is and to get some of these the the rate it it changes that's that's a good estimate but um it's a reasonable very reasonable estimate so putting money away you know start working put five thousand dollars away and some good account for as eight percent for 35 years and then each you know each paycheck you're contributing contributing money then you retire with a million dollars there you go things to think about that you can put away this little bit that you can put away this little bit forget about it for 35 years well not forget but you know and you know have this because if it's earning if it still is earning eight percent as a good estimate eight percent of that million is eighty thousand dollars and that way you know eighty thousand dollars interest you can live on that and it still has the million dollars there to keep generating more interest so there you go okay so we go from the positive saving money and having a million when you retire to mortgage payments and yes more like the word for death somebody originally coined that as you know like this death payment but nonetheless mortgage for any large amount of money over a long period of time those other percent increase formulas won't quite do it otherwise you you will end up paying a lot more than is reasonable so this is the much more complicated formula but remember that's the value of you know setting these up and writing the code that you don't have to like remember this formula or you know plug the numbers in every time you can again prompt for just like we were doing before pr and t and figure out what your monthly payment would be so given that some large some huge amount of money and how banks will set up your mortgage that's um something else but knowing how much you're going to borrow and then being able to just run it through this formula and figure out what would your monthly payment be that's going to be very useful you and again this applies to mortgage or possibly car payments because that's also large enough sum and a long enough time that this is a much better formula so this is the this is the formula and again p is principal r is rate t is time and this would have n there but n would be 12 each time so i just put 12 in there so it kind of goes along with that formula but n is 12 each time you know there's no other setup you know daily or weekly mortgage payments or yearly no it's it's always monthly all right there we go so we have all these so so now i gave you a hint to do this use other variables i like other variables because look at this r over 12 comes up a few times so you know we can make this um um there you go r over 12 is uh you know multiplier or if you don't want to use other variables you can do this there we go and since i don't have n because n is 12 um i could have i might have like just like math n for numerator and d for denominator and so the payment would be n divided by d because that just might simplify this a little bit um and then it would be p times n divided by d so i could have just my numerator so equals r over 12 times and then in parentheses one over r over 12 oh one oh sorry one plus r over 12 12 and all that to the exponent in parentheses 12 times t so r over 12 times one plus r over 12 to the exponent 12 t there we go so that's the numerator not bad and then i can have the denominator equals so one plus r over 12 there we go to the exponent 12 put up with some parentheses 12 t and now when i subtract one you see then that's definitely not a part of that so yeah and again you could add other variables you can make r over 12 its own variable or something like that you can make one plus r over 12 its own variable you know different ways to do that i feel i felt like this wasn't that bad so but breaking up numerator denominator and then payment times numerator over denominator so we take a look at this and the amount borrowed we could just say like 200,000 uh annual percentage rate 0.07 you know some of the rates have been going up so i'm just going to say that for now and number of years 30 is pretty common and so there we go so there we go so 1330 and change and this helps because then you say okay well you know what's the cost of the house and i have a down payment you know you get down to how much you're borrowing that's one thing okay but what's really going to make the difference is knowing this what would your monthly payment be that's the important thing and you know bonus knowledge that no matter whatever your income is the monthly payment should be for mortgage or rent right it should be one fourth of your income or less so just to remember you know if that's your monthly payment then each month you should be making at least four times that or if you're not then that's not the right house because sometimes you might say oh yeah i'm making more than that i can afford it but then you end up being house poor yes you can afford your your mortgage payment but you can't afford much else all right so let's go on to exponents and logarithms with exponents and logarithms they're inverse functions they're the same information rearranged so i have this example here two to the fourth power equals 16 so there you go two base two the fourth power equals 16 and then the log base two of 16 equals four there we go both of those have the same information rearranged and that's what logarithms are you know picture everything on the one side of the equal sign oh two to the fourth power i know how to do that plug that into the calculator but supposing it's the exponent you don't know the log base two of 16 the answer is an exponent you know what exponent gets me to that so uh this guy john napier like 400 years ago you know he was a 400 years ago he realized that that was a missing piece that that was a situation a lot of people wanted to know the exponent for different things and he spent like 20 years of his life developing this and it was you know very useful you know the original logarithms it was just books you could like look them up now we have this at the benefit of you know calculator pretty easy and we're going to take it one more we're going to even write the code that you can just put in a couple numbers and it'll calculate it so if you use the math library and we'll also look at the numpy library that's another way but if you use the math library so it's math dot log and then the arguments are you know the log of what so 16 and then comma and then what's the base so there we go and if you don't have that first argument or if you don't have the second argument if you just say the log of 16 it takes it as base e but we'll get to that later all right so there we go the log base two of 16 so here's the code we're going to import math and you know base i always call the the exponent the result just because it reminds me i'm doing a logger and that's what i want so there we go so or you know that's the the result of exponential notation so i had somebody input the base and we're going to input cast as a float and the base can be a float but usually it's an integer and the result and cast that as a float so what do we want to do change the next line okay math dot log and we were just saying result comma base there we go and it'll import this for it and it'll do this for you so that's all you needed to do for this and we'll run it and this should check it for you there we go base 27 oh how about this base um three result 81 so it should return four there we go nice you might be able to do some of these in your head but if you have you know base you know three to what exponent gets you 81 all right you can do that in your head that's four but this is useful three to what exponent gets you like 80 or gets you 85 you know when it becomes some weird decimal all right so natural logs and we talked about e so uh this is the this is another use of a logarithm so e and uh just to recap if you have this formula annuity equals pe to the rt there we go so supposing i want to know how long it will take for something to double and you'll see the logarithm connection here so you know whatever i start out with p the annuity needs to be double so if the annuity is double then whatever p is and annuity is twice then i could cancel it out you know annuity would be 2p so it simplifies to this and then now one of the many situations i want to know the exponent exponent well i have base e so math terms i would say natural log i do the natural log of both sides the natural log of two on the left and the natural log of e to the rt and remember then that cancels the natural log of e to the rt because that says e the natural log says e to what exponent gets me this so e to what exponent gets me e to the rt well it's obviously rt so now we're in this situation we know that take the natural log of both sides now we're in this situation and i get natural log of two good thing i have a calculator to do this and then if i want to know how long it takes to double if i know the rate then i would just divide by the rate and then my answer is time so in doing that math dot log and you see no other argument necessary if i don't put the argument or as far as what base it is it takes it as base e natural log so there we go and in this one r input the rate as a decimal and for this one i just put the end just it's this seemed like a long sentence so the input comes in as a new line on a new line and once the person input the rate there we go it's just math dot log of two divided by r is time and we'll print out it will double in t years this is pretty useful so you can run this now this one remember you just needed to run it so and put the rate so if let's say i have some investment growing at eight percent and it will double in 8.66 years six six years so some of the you know you might say all right if my investment's growing at eight percent and we can even round this down to eight and a half and you can do things in your head okay well eight and a half years it'll double 17 years it'll double from that you know etc and you know you could use this to estimate some outcomes all right common logs so if i have base 10 it's the common log if you were writing this in math notation you would just you could just say log so uh with without the little number because then you know if you don't put the little number then oh we'll take it as base 10 because that's our number system the common log so this is what we're going to be using when we want to have you know how many decimal places do i have we're using things for scientific notation so in the code you see we'll just do math dot log n and then base 10 so you see uh if i don't say the base it's e but 10 even though it's common i do have to say the base there we go so if we have this and our number with several digits or several decimal places and this one i just separated into two lines to show you can do that also take the input you know cast it as n the other reason to put this into two lines is you might notice this vertical line over here maybe even before writing python you know you might have the sense of you know you only want the lines to be so long you don't have to scroll over but python really makes that a design decision if i continued beyond this line it would still work it wouldn't just cut off that code but just as a convention for writing python code we usually make it i think it's like 80 characters brings it over to that line so there we go i have this one and then i didn't want to go further on that line so i just made it a separate line casting that as a float okay so now all right now we have the round the code so this one we have math dot floor so i'm going to take the log of that but i'm not gonna round but instead of running i'm just taking the floor of this because i don't want the decimals i don't i don't want to potentially round it up and i would just you know drop the decimals math dot floor that's going to give me my exponent and that's actually what what we really want and this is a weird python quirk when the exponents exactly three it sometimes doesn't give you the answer you want i don't know it's just weird python quirk so just bonus insight here after doing this enough times i just added this little if statement here all right and we're going to print the exponent so when we run it there we go several digits so if i have point you know zero zero zero five all right and exponent is negative four four yep there we go and if we remove the math dot four function then it will just give us it'll be you know negative four point something else and we'll just do that there we go so you can see and i'll just to compare i'll do the same number point zero zero zero five all right and that's it now notice in positive numbers it would be four point something or three if this was positive three point something and it would drop the decimals it'd be down to three but with negative numbers the floor from negative three point something the floor of that is negative four so just interesting insight and again you're watching this video because if you've gone through the the foundational math three and maybe you're stuck on something you're what we want some other insight into some of these so hopefully you know this helps all right now all that you know we can use these logarithms you know how long to take something to double you know things like this uh number of decimal places and notice i call that exp for exponent because well first of all that's what we're asking for in the logarithm but also that leads to scientific notation you know how can i write very big numbers or very small numbers without all those zeros so if i had like 45 million oh but i can write that as 4.5 times 10 to the seventh or point zero zero zero all these could be 4.5 times 10 to the negative seventh and there we go so it's always n times 10 to an exponent and n is always one digit than the decimal so that's what we want you know because 4.5 that's i want that one digit than the decimal that that's the true scientific notation now this is just changing you know this one here we're not actually writing code this is determine the value by just by counting uh i just want you know just to see so you know as we count so how many decimal place how many places one two three four five six seven eight nine ten eleven because it has to be down to this so that's why we have a one is 1.56 that's where the decimal would go and a2 would be 11 and then we're going to print that out a that that is a1 times 10 to a2 so then we'll do this for here so the decimal point would be there so the decimal point would be there so then it's yeah so then we would move it one two three four five six seven eight nine ten so it would be 4.13 and we have to move it in the negative direction so it'd be to the negative 10 and so then that would print b is 4.13 times 10 to the negative 10 there we go and we run it there we go now now this one works displays nicely this one how we want to display it here is nice but python automatically and this is fine you know you go on the next step but python automatically converted this one a positive 11th power fine it didn't see a reason to change that but negative 10 so that's the python notation 4.13 e negative 10 so and this is not the same e this is just indicating exponent so times 10 to the negative 10 so there we go in this you know hopefully also again if you're watching this it's you know illustrating like why there's some of these quirks in python all right so we can use these logs for scientific notation because if i want you know if i want to convert this to scientific notation in an easy way so what do i do so i did this for for a putting together the things we did in the last two exercises so for a i'm going to do the floor of the log of a base 10 there we go and now i'm going to round it so so it was a i called it x1 for exponent one and so if i have this a times 10 to the negative x1 and it rounds it to two decimal places so if that's the if that's the log then i'm going to multiply this times 10 to the negative x1 and it's going to print this out so i'll just show you the code and then we'll run it and you'll see so now using that as a model what i want x2 and i want to show you that this actually works for positive or negative exponents oh yeah so if we have so but this one i want this for b so take the log of b base 10 and the floor of that and if i have this then i'm going to round that so i'm going to round that um again referencing b this time to the negative x2 to there we go so it's what exponent got me there but then when i take that then that will divide it out that's why it's that that's why it becomes a negative exponent because i want to divide it out to get that early number there all right so if we run this and this just took those so you see we get a is 2.34 times 10 to the negative 12 and b is 1.23 times 10 to the 13th so pretty cool how you could just take this and whether i wanted to show you that whether it be a decimal so a negative exponent or a huge number with the positive exponent either way this this works take the log base 10 and the floor of that and that's the negative exponent that's how we get n1 you know then we're then multiplying it by that and we can display it so and we can display so this way now you have it you can have a code to convert anything to scientific notation pretty cool and that's what we get into step 19 there we go now this one very similar to what we were doing before and we're just added one more thing of entering a number to convert to scientific notation so see this is where you can make it as your calculator to convert because i'll just take this and it works either way i'll copy this code that we had from before and paste it here but i don't need the number ones because i'm only doing one thing right and in that case if we want to print you see i even left this that's what we want to print so we can reuse this and this is the key with copying and reusing code you can do it just be aware to notice these little things if you just copy and paste something there there might be a little subtle things that don't line up you know just copying pasting no good you have to understand the code well enough to know these little things that you need to change oh okay i needed to delete the ones here all around and you know copy and paste with the copy paste with the followup editing now that works and see what you can do is now you have this as a standalone uh you know input you didn't have to like define the variables in the code here and there you go enter in whatever number all right so one two three three there we go there we go one two three oh that's very weird two three i got to one point two three ah look at this it see as i was mentioning it i didn't i didn't delete the one there and that variable was still in in memory for that little bit so it gave me this you know exponent that i was not expecting one two three there we go all right pretty good so anything that you have now now we have this standalone code and then later on what we're going to do is and then maybe i'll use this as an example is we can put all of this code within one function and so then now you can just define a function that will convert to scientific notation and all this code is within that function and we can take that and then that function we can use wherever all right so let's go on to the next one now we'll get to graphing exponents and logarithms so just connecting with the math natural log is l n putting the adjective first natural log if i was just writing it on the on the board it'd be l n and that would be base e and so comparing y equals e to the x and y equals natural log of x those two are the inverse functions and mirrored over the line y equals x so when we see the graph we'll see these and then we'll see the line y equals x so we were just talking about using the math library if i just want to calculate a logarithm i'll use math.log but because when we graph we're using numpy and we're using the linspace function to create an array of values that we're going to graph so i have to keep with numpy which i usually import as np so then i'll do np.log math.log as you see if i want to do one thing yeah that works if i'm using the math library i'll use that here i'm using np.log and np has it slightly different np has np.log 10 obviously base 10 np.log 2 for base 2 and if i just do np.log it's going to be base e realistically we don't need to do every other base because we have the change of base formula which i'll talk about in a second so there we go so we have the positive x values now e to the if i was graphing this e to the x i have my all my x values whatever i want but when i do natural log then the x value will never be zero because remember they're inverses so in this case e to whatever exponent the y value will never be zero as the inverse here the x value will never be zero so when i graph this hopefully this looks familiar from other graphing we might have done i'm going to define this and i'll just use this minimum maximum you know based on here what i did here that's fine but then when i do log i need i'm going to use a different linspace i won't do zero i'll just pick some like really tiny number 0.001 and that should be enough to illustrate this point so there we go all right so i'm graphing these i'll use x1 is my array of x values and linspace goes from minimum to maximum and then within that range i want a thousand points i mean you'll see for this you'll see a smooth graph even if you don't have a thousand points all right there we go and then plot x1 and i'll just write the y value here instead of separating it out math dot e for my e value and then that to the to that exponent there we go and i'll make this a blue line so then we have the red line for y equals x then x1 and we see if i have this x1 i just can put x1 x1 because it's y equals x so i don't need to define a new y value which i know it's the same and here now for my log y equals log of x i'll do this linspace and then np dot log x2 so there we go all right so we're just going to run this and then change it so we see i see this notate notation and there we go so we have the blue line e to the x exponential function and graphing that green line y equals x or y equals the log of x and there we go and this works for any inverse function there are mirror images across the line y equals x but this there you go it illustrates it nicely it illustrates it nicely all right now change the blue line and the green line because we want to make these log base two so here instead of math dot e i'm going to make this just two to the x you know that's fine and this one instead of np dot log i'll do np log two now we're not going to notice that much of a difference here because i went from a base of 2.7 to a base of 2 but there we go that's all you need to do for this one one i don't want to include some applications here if you have the hydrogen concentration as a decimal number that's really where the ph comes in so proportion of hydrogen so the way this this works it's the negative log of the hydrogen concentration so if we have 0.007 as scientific notation that would be seven times ten to the negative three which would be a ph of three and then we see that as we got more and more zeros as placeholders you know a really tiny decimal number then that would be ten to the negative four five six you know ten to the negative ten you know really tiny number and that really tiny number then ten to the negative ten would be a ph of ten you know we get the idea so that's really it i just just taking this and if you knew the hydrogen concentration i was thinking about adding this in as like going into the chemistry and finding hydrogen concentrations but i'll leave that for the those of you that want to uh you know pursue the chemistry angle on this but you can you could actually get you know various uh hydrogen concentrations of molecules and you know work it out from there okay but nonetheless so what we want to do is we just want the hydrogen concentration so it's the negative log and for this one i will use math so there we go so we're going to make this negative math dot uh log and i'm going to log as decimal ten ten there we go so that's that's really it and now that log i get that number base ten and what do i want to do i want the ceiling so i'll do math dot ceiling of this there we go perfect all right so there we go when we run this end of the hydrogen concentration and what if i put your point two three four and there you go and i'll put let's put the number five i could put a one there uh math dot ceiling yes so i would take this as we we look at this and yeah this is the function here we run the function as is and then do the math dot ceiling so that's what we'll do we'll move our decimal place and these are the things that i wanted to put in here as you know indications and you see we see why this this ended up being wrong because then it gave a ph of four putting the math dot ceiling in the wrong spot all right so i'll do the same same one here point i'll put a one that's okay there we go now that gives it a ph of five there we go now that gives it a ph of five you see how that makes a difference doing the formula first with the negative log then doing the math dot ceiling there we go now that gets a ph of five there we go all right so now with functions here calc these are some of the things how could we write a function well if you want a function you're going to define the function and calculating mortgage payments okay so maybe i'll call it mort pay and now notice you would think that it when i hit enter it gave me the indent automatically but for other things that i do or i might use this code i am all about the four spaces so i backspace i delete that and then i want to make sure i do the four spaces so what can i do i can define this function here so and and this is i'll do one and then you can see how you can do more here so if i have the mortgage payment now we also have our um table of contents i can jump right to mortgage payments so notice i have p r and t here and then i will define these in here so here so i'm going to just copy this and actually um there we go so i'm going to show you one way to do this and then maybe we'll do it a different way okay there we go and more functions here so one of the things that you can do is just put everything in here and i might just here we go you probably don't need that extra line and same here so this works as the payment maybe that's all you need you want to be able to then prompt for these things and then print out the answer so that works another way is what i'm going to do i'm going to copy this and i'm going to show you another function that you can do you can do and that one all right so mort pay p r t and for this one i'm going to require input input p r t t and then i'm going to not need these and instead of print and i'm going to return payment so this one's nice if that's the if and you know there we go so this one's nice if you wanted to prompt you know this could this could go a lot of different places but this one you can put this in maybe then just put this function in and return the payment like exactly where you know it's going it's going to go so two different situations and that's why you know i'll make it you know that's why you know i'll make it you know p r t so we know what the input would be and then this one is different so there we go so that's that's one one way and i have here more functions now the interactive polynomial graph we were working with that too i'm going to do one more up here because i wanted to show you the scientific notation so here we have enter a number to convert to scientific notation so if we have this uh maybe we want the number to convert so if i have a as my variable so there's my scientific notation there really just two lines and if i take that and convert this i could create a function to a there we go and maybe it just takes that input of a there we go and and return n so that could work too there we go so we take this and move around um um oh but i would probably have it as a string here so i could go back to that and instead of the print uh i could instead of printing it i could i could turn this into um there we go uh answer answer and so we may you know i could just make that a string and then return answer so i probably don't need this a equals uh and it should give you n times 10 to the x so just to give you some examples this is where i want you to be able to you create the functions and then the internet active graph with sliders we we have that so turn that into a new turn that into a function but here's the examples how you can just take and and that's the whole thing that we wanted to get to you know through this course you learn and you're practicing and then you're grabbing the parts that now you know and you can turn just the important parts that you're going to use later on into their own functions and you can you know give them other names you know here's more functions and there you go uh create a function for you know how long it would take money to double go back to that other one again turn that into a function and all of this is going to be in a financial app that you'll make so what you can do is you can have one display of all of these and you could have this work out that it's within all the code here or you could have it within uh within google colab where you have text that gives you like number one calculate mortgage payment number two retirement account balance number three etc you could have the text there and then require input which option do you want and then have all your functions so that's that's one way to do it defining all the functions having the text input that would be like the menu and then when you pick your option then it runs that function so that that's really what i want to get to is that you're putting all this together and it becomes your financial app so that you can use this for other things you know calculating your own finances and this combined with what you're doing certifications one and two see now where the goal is that you're getting to the end of this and you have understand the math and you have all these functions at your disposal you know calculate things graph things solve problems and then you can apply that later so the next unit which i call it week 15 is going to be the wrapping up and putting all this together so we reached the home stretch in our algebra journey here and now we're going to connect all the different things we've been doing with math we've been looking a lot at functions taking things that turn into x lists of x y values that we can graph and then now we're going to look at how we can get the get that data from the web from the cloud from a spreadsheet from wherever and bring that data in whether it be columns in a table or all sorts of information and pair it up in those x y coordinates and then we can do math to it so really that's that's the connection we've been working with all the math content and now pretty much everything we're going to be doing beyond this we're going to bring that math content and into the code and do a lot more code how can i into the code and do a lot more code how can i get this data turn it into a numpy array and then do whatever graph i can do and you know analyze the data so let's let's get to it let's get to the code so now this is some ways you can bring in data from other sources and graph it and do other things so let's talk about the other sources pandas is the library that really deals with data frames tables columns rows everything like that so we're going to import pandas import the matplot library we've done that before and we're also going to import from google colab we're going to import files and that's also going to give our file operations you'll see that and import io input output there we go i separate these out because you can run these once and you know this takes a few seconds i already did it so run it once and that saves you a few seconds each time because we want to go through you'll see test some things now we have all those imports here's ways that we can get the files all right here's one option if you have a csv on your computer you can upload it and because we imported that google dialogue or the google files all right so this is all we need files dot upload and we're going to upload that you know it'll give you that file dialogue you can search for on your computer and that's what the one you select will will store that as that variable uploaded and then so i have my file name because we have this we're going to take that uploaded file and iteration so iter and the argument is uploaded and we're going to go to the next one and what that is going to do is just one time you know you selected a file and we're going to select that and store it as file name and here that file name we know the file name and we know that it's a csv so pandas has this nice building pd dot read csv that's what we want to get to and don't worry about this it's because i already stored that as file name you can use this for you know whatever file you upload so uploaded file name and it reads that io dot bytes io and it will store it as this table so there we go these three lines from you know uploading something you know give you the file dialogue upload it from your computer and select it now when you run this when you select that file it's stored as table one awesome so we'll do more stuff with that table in in a minute here another way is you can get a csv from a url so maybe you already know you're looking at different websites and you found you know this uh url and you see this one um uh yeah this this guy uh seems to put put out a few good examples so there we go uh faithful dot csv old faithful geyser you know it rups for a little you know briefly but like on such a regular basis that's why it's called old faithful and that just might be some interesting data we can look at so i'll just store it as this variable url which is the exact address pointing right to the csv there you go plenty you could also and i didn't include this here but you could also if you wanted to you know make your own like you know input statement you know prompt you know for somebody else using you know you made this program for somebody else you could prompt somebody else to just copy and paste the url and store it you know that works too but you know this is your code so you just put the url here store it as variable url now same type of thing but here so we have pd dot uh because we imported pan does it as pd pd dot read csv and i just need to read that url and that's enough and i'll store it as table one okay and yes those imports and everything that you run i just even have notes in here to remind you so that's good for maybe 20 minutes google colab will uh have this runtime you're running on their server and you know colab has a runtime once we started this it will time out after about 30 minutes of inactivity or even if you're active like you know let's say you have a really busy day i think it's like about 12 hours of running it'll time out you know you could say well wait i haven't been inactive but there's still an absolute time out and then you have to start it again so that gives that gives you time you can import that and then it gives you time to go through and then run a few of these and tinker with it okay so that way you don't have to repeat those steps and again you know importing you know importing all those that actually takes a few seconds to run it and then prompting you know if we want to do some different things and test some things you don't have to upload it every time that saves you a few seconds or this even so there we go now we have this what do we want to do with it you know i have you in the notes we're going to eventually determine what columns we want and convert them to numpy arrays and remember numpy arrays that's what we're that's what we end up graphing so one of the things and i even still commented this out but you could display the whole table that might be too much especially the the more you get into big data you know that's that's going to be just time consuming resource consuming and so i i include that in there you know just to show you can do it but but what else might we want to do i might just want to print out so we've always stored everything as table one for this example so i might just want to print out the headers all right so table one dot head and if i don't put a number in parentheses it will default to five but i can put a number in there and it's going to give me the headings and i put a two so it's going to be that give me the headings in two rows that might be enough you want to you know let's say even if you've seen the column you might want to see the see it here or you know you got that url you want to take a look at it i want to see the heading i want to see the column names and i want to see two rows give me an idea of what kind of data because if i start seeing words in there then i know that i'm not going to be able to convert that to a numpy array all right another way i could just store column names as a variable because if i have table one in pandas that this exists table one dot columns there you go so now this column names is a list of the column names that's great um and again i can i only need to do this once and now that i have the column names what can i do with them all right instead of printing out the heading i could and i just put this here you know new line column names and then i could loop through them so i'll count them so a in range length range length column names so column names i'm going to get the length get that as range and then each time i'll print that number the space and then that column name that works that's one way to do it or another way i could actually just loop through those names call and column names and just print that each time so let's see what that looks like all right and so these are the benefits here so notice this is the first one we did uh there you go print table header and that print statement that head statement gave me these but this table also had an index column and notice their index starts at one so that's just something to remember and eruption length and eruption wait time so there we go and notice these quotes are within the with within the name of the call you know that's something the more you get into uh more you get into uh working with data and maybe other people you know creating columns and everything i'll tell you this you really want column names without extra quotes in them and without spaces but you know there's ways to deal with that we can do this but it just it just usually makes it easier for this stuff and for like some of the sql queries okay so now i get an idea of what i have and here again you see the column names you know index eruption there and the the other way we did it index eruption length eruption wait time so now that i have these exact column names so you know i could now this is how i did it here because i had them right here and i can see them so table one and then in those square brackets i'm going to put the name of that column i want and then also that name in single quotes to numpy so boom that'll convert that to a numpy array and then eruption length in minutes so again table one and then in the square brackets and remember that extra space and those quotes were in there so i need to make sure i include them and convert that to a numpy array so now i have my x and y values that i can that i can plot there you know going through each of them you know it's going to be you know my first value x is 3.6 y is 779 x is 1.8 y is 54 oh no actually i had it as index so x is 1 y is 3.6 x is 2 y is 1.8 i can graph the eruption length or i can do it for eruption wait times and i'd like to go back to the index again x is 1 y is 79 x is 2 y is 54 so i just graphed it for that first one and we can go back and do that for the second one also if you wanted to so we have x and y because they're numpy arrays i can call that function x.min and this you know if if you haven't really looked at like the entire table this just might be a good way i'll just take the minimum value minus five because it's just a little bit of a buffer on the edge and store that as x min x max same thing plus five a little bit of a buffer y min y max so this goes back to things we were doing a while ago with graphing set my x min x max and each of these now notice i don't have some of the things we were doing in other other units we were defining the points here but i already have my x and y values defined as num numpy arrays so when i graph i can plot i can plot them here as you know you know the x refers to that array y refers to that array and i can do a scatter plot or a line graph so i have these here as numpy arrays and i can do them as a scatter plot or a line graph all right let's see what this looks like now i had it as both and it looks like a huge mess but one of the things i notice is i i don't want the line graph is probably not useful so i'll just go i'll just comment that out right now and run it again and we see it seems to cluster it's around here or around here that's kind of interesting what if i change my x my y value maybe i'll keep all these points but what if i change this so what i can do is my y minimum and these are the things this is what we want to do now we know how to use your math graphing skills to look at this you know how to get all this data into this graph and this is now where we get to the analysis part what can i do i can look at this and say all right you know they're all less than six and they're all greater well actually they're all greater than zero so i can just make my y minimum zero and i'm just going to comment out the rest of this and i can make my y maximum six and i'll just comment out the rest of that and when we see that we might see it seems like it clusters it's for whatever reason it's really rare for it to be around three and remember what are we graphing here here we are graphing the eruption length time so it really seems to cluster around oh about two minutes or about four minutes yeah interesting so we can look at this and then one of the other things that we can do now let's look at another twist on this you can use variables for the column names so remember earlier we made column names this array so i can have column name zero column names one and that's my x name and my y name i'll make these variables so that also depending on the actual names of your columns doing that once might save you some typing because then you can reuse that variable here just yeah i don't have to worry about all the quotes every time now i have my x variable is that column to numpy my y variable that column just like we were doing before but again reusing that variable save you some typing i went back to this and we'll see why in a minute and i just want to show you that that same scatter plot back to that those original dimensions are there but you see using that as the column name i can also set the labels for the graph and again without having to rewrite so now we have index and eruption length there we go then if i wanted to talk about the eruption time or the erupt the wait time so all the things that we were doing i can just change this i still want the index but then uh column uh columns one was the eruption length i'll change that to that was the wait time and now i have those names everything else stays the same and again going to different columns that's why i like giving the dimensions of the graph based on that because these numbers are very different i'll still have the same index because they did match but instead of times between you know zero and five i will have you know wait wait time in minutes you know 40 minutes up to even you know almost 100 minutes so we see that now again let's get to some analysis here this looks like a mess it looks like maybe i have this range of 40 minutes to you know more than 90 minutes and this is key like let's say this is in yellowstone let's say you go to visit and you say okay how long should i have to wait it just erupted i want to go do other things when should i come back well should i come back in 40 minutes should i come back in 90 minutes you know that's a huge range you know could keep you you know waiting there almost an hour but let's let's start looking at other patterns here again the default i keep this index i want to zoom in on some range here so i'll go to that index that x value i'll keep the same minimum but what if i change that maximum value instead of that plus five maybe i'll make it like 50 and comment out the rest of this so that's interesting i'm just going to run this again doesn't help you but it spreads it out you see now instead of a scatter plot actually i'll keep the scatter plot because that looks nice but i'll also make it a line graph and i'll make the dots red and the line blue so look at that and you see that just looks nice and if i don't you know there's my yaxis at zero but if i don't want that then i can just make my x x minimum you know one that way and comment that that way i comment that that way i don't even get distracted by that there we go so we take a look at this now besides seeing the scatter pot that was a mess the line graph actually shows us some interesting things with very few exceptions if it was a shorter weight like 50 minutes the next one's a longer weight closer to 90 and then the next one's a shorter minute a shorter weight longer weight you see every so often you get one that it was another long weight but we get a shorter weight a longer weight a shorter weight you know exception longer weight that happens most of the time so what we can do is we could look at this and say oh well how long oh well how long was it last time and then therefore i can use that to predict and we get that from you know we get that from looking at the graph here so yeah really interesting i mean you could probably then now connecting this to you know realtime data science doing this then we could graph you know a certain amount of this and always you know have another table that always just updates you know when it erupted and how long that would require somebody each time you know just you know maybe even we could get this to clicking a button okay it erupted it stopped erupting and then do the calculations what was the wait time what was the eruption time add that new data and we could be looking at this and doing some sort of analysis to give people you know realtime estimates of it just erupted when can you expect the next eruption and get it down even probably to some like you know uh confidence interval that you know the that you know the point is that you would want to be able to say instead of should i get there 50 minutes later or 90 minutes later i want to be able to have i don't know like a few minutes um you know if it just erupted and it was an 80 minute wait then you know would it be you know 50 minutes so you get some range that you know when to show back up and you know you don't have to wait too long and that's really what we want to get this down to we want to look at these patterns and be able to then predict the next one you know that's really the goal you know if i go to here and i want to be able to predict and say oh all right at 50 that was a wait time of 60 minutes so i'm going to just predict that the next wait time is going to be more than 80 and if we really want we can just change this to like 55 so with the wait time of 50 minutes then the next one wasn't quite 80 and so that's like your range of well i wouldn't go i wouldn't wait more than 80 minutes i might wait almost 80 and it would show up so there we go because remember the other graph the eruption time it's you know three to five minutes you are two you know two minutes and it could be two minutes and you missed it could be five minutes that's not even that long so you don't want to be you know five minutes late you're going to miss it all so yeah just interesting we can use this to predict and again looking at the math of it we have we you know once you have those column names so once we have we get that table what once you have that table and we get table one dot columns we have those column names and then we can do other things with that whatever we want you know whatever we want you know number them you know just loop through them or then pick certain ones and i'll use that as my x and y so that's the advantage of then having the graph minimum maximum we can try this because we want to make this template that you're going to have this and maybe certain things you can comment out and certain things you keep in certain things you modify just a little bit that what you can use the same code for whatever graph you have you know whatever table you have this is a good start you start getting some analysis what what am i trying to compare what am i trying to graph and then as you get into it then you can modify it you know you can always then copy all this and then you know do in here then copy all this do a new code cell some text to give you know yourself or whoever read this some some notes on what's going on in this code cell and you know that that's the beauty of the colab notebooks you know you don't have to like you can delete things and retry things or you can keep that and then just you know oh this is this is interesting information keep that and then just do a new code cell or new text and you know let's do the next next analysis so here's another way to get data into colab and then graph it this particular library so not a csv but the full library medial stat it's a lot of weather data so yes may install need to only install once right once per one runtime and i just have this as its own cell there you go pip install medial stat to install the library doing that i mean this actually might take almost 30 seconds so sometimes that seems like forever so i already did that and here we go um successfully installed and then we go on to the next one and for your own organization or anybody else working with this you put put in some text areas here so now i know and it reminds me what columns i have in this library so time uh and all the other these other teasers temperature average temperature minimum temp maximum temperature the amount of precipitation amount of snow wind direction wind speed the pressure so average you know air pressure uh air pressure uh the wind gusts so uh after wind speed we have wind gusts air pressure and the last one is uh time in the sun so you know how many minutes of sunlight would you get and these are really good i picked these because it might be useful you know you can things like wind speed you know plan your uh wind turbines and where to put them time in the sun plan for your solar panels and where to put them um so i have these to remind me and then the reminder change start and end date time and you know point we're going to use this a lot so what arguments is this expecting point latitude longitude meters above the ground so now we have these notes you know maybe you set this up for yourself and you don't use it for a while and then you forget you know what you can what variables you can use so all this you know we can just keep this same i just have the notes here because we have from numpy we're going to import mean because we're going to use that and then the rest of these are from you know the media stat library we definitely want daytime plot and for media stat we're going to just import these couple things also it's just it's useful put the documentation in you know that here's the website where all the documentation is you know put that in there as a comment again just like the other notes for yourself or for other people good to keep track of these things so now we know what we're expecting we can set the time period and what i wanted to do is i just picked you know sometime you know one month in the summer start and end so i have eight time there we go year month day your month start and end and so the person who put out this one example online did this for vancouver so you know i just commented that out and i did one for philadelphia and i picked a random point in the middle of the city because it you know the uh if you want to click places and you get latitude and longitude he had a lot of decimal places so i just wanted to round it to two decimal places and see where you know you know in philadelphia in general and then round it to two dozen places and see where we got so it's a some random street corner in the city and remember that third argument is how many meters above the ground so i put 10 because this could be a wind turbine you know on top of a building and i wanted to compare this to somewhere in the suburb so you know it are the closely packed buildings does that affect wind speed well we're still talking 10 meters above the ground so this is in you know residential neighborhood that is probably above all the buildings but i picked a point in the suburbs and i picked a point that seemed to be like a relatively open field as something to compare so now i have these two points and i can get this daily data uh so daily so that's the function in in media stat and there we go i get this particular point you know these are arguments that point and then start time and end time and then we go to this daily data dot fetch and i'm going to store it as my data now we want to take this my data my data and which one do i want i want wind speed for this one and remember our function dot to numpy and i'm going to store that so now num data is my array and you see the these layers that we want to do this library requires this function here i'll store that as a variable now that variable uh got fetched that's also from media stat i'll store that but then i that's not a numpy array so i want to make that a number i want to take that calculate you know wind speed that column and make that a numpy array so i'll print that you know city mean equals and i wanted to get the mean to compare so now i have the second one again i'll do the same thing that daily function fetch the data convert it to a numpy array and in this case i'll do the suburbs mean but remember num data and num data too they're my two numpy arrays so i can use them to plot so we can plot the line plot the line there we go and and so i have this you know these two things i have you know the x value is since i know that i made my since i know that i made my start and end time you know 30 you know 30 days i wanted to make the x value there you go same thing one to 31 uh 31 instances because it includes the first one so there we go and then i can plot these wind speed and run it all right now i'll tell you why i have that commented out i'll tell you now that i have these because this works like uh i wanted to again connect it with the same type of plot you know matplot library that we use i wanted to connect it to that same matplot library that we've been using and show you that that's what you can do you know get those arrays and plot them here matplot.show but i commented this out this works also just a unique feature of this library um you can just take that my data dot plot and then in parentheses you know what the y value is so these two work so i just wanted to show you i'll leave them in there they work but in order to connect this with the same type of math and plotting we're using i plotted them this way and so i had it calculate and then just display you know the city mean and suburbs mean i could have rounded it but and quite honestly this is why we do data analysis this totally surprised me i really thought the average wind speed in this suburban area that was like a relatively open field would have been significantly higher and it was definitely higher in the city yeah interesting um maybe you know a little bit of a tunnel effect maybe there is some something going on with uh you know the buildings maybe that wasn't high enough also at least in philadelphia that city and if it's high enough that's a little bit closer to the river delaware river is you know any river gives off a little bit more wind and this was a little bit closer so that might have had an effect but there we go so then we see the mean but beyond that we can see the tracking you know day to day and you know they're still these two points that i picked are not that far apart so it tracks they're in the same area the wind speeds go up and down you know in very similar patterns but we see that not just the mean but at every single point that city location was higher so there we go and you know we could take a look now i made this so that's good and we can just pick that and we can pick like any number of days so i could since all the rest is already in there i could just pick this and say well what about over the course of the year so maybe i make that like one one and maybe i make that 12 31 and there we go so if it would include then there we go so 365 and 365 so i want to graph it this way so from one to 365 and 365 points if that doesn't line up perfectly then i might have to do one more or one less but we can take this and we can run this oh value error and it was 365 357 oh that's really interesting all right so 357 and 357 and so we can see you know the scattering but also i liked this now why what what i picked was uh you know not 365 days that seemed like that would be it i'm not really going to overthink that right now maybe there were some days that were missing but you know maybe that's not the pattern but you know maybe that sometimes that happens we go and we can uh go through and you know take out missing information or incomplete information but now we take a look that over so the day that i picked happened to be slightly lower than average so in both it was up a little bit you know 14 miles an hour 8 miles an hour and then we can see the patterns here so if this was wind speed you know the average then what you could do is you know you could count based on that average you actually don't need to plot it out because it works out given the given those averages you can work on that so if your wind speed is you know in the city and it's you know almost it's like 14 miles an hour throughout the year then you can look up well what size wind turbine and it would be actually relatively small but what size wind turbine you know would you need for 14 mile an hour winds and you can do some calculations given that size of the turbine how much electricity would that generate for you over the course of the year yeah so pretty cool and again you can you know you can do that with you know any other aspect of this the temperature you know maybe you know you're trying to plan something you know you can get uh you know temperatures just one other thing i did just was you know different so i can't i loop it through for you know a month just to show you and and all the rest of this is the same documentation link and what i did is i just made it a loop so you know range 1 to 11 and so that would be the month and i have you know what month there we go and you know there we go i think i picked just this because i thought oh well is that does that change and these monthly loops um yeah the way that the x value displays sometimes it seems like a little cut off but we can see we have you know wind speed and we can just see you know a few different months over the course of it and you see each month i have the mean and then and then the graph and and then the graph so we can just see it's just interesting you know the mean and the graph for each month the display it a little this might be a little clunky this might just be for your own interest or you could have something that displays them all in some nice little you know three by four the grid it gets to be small graphs though but nonetheless we see that there's times when the when it goes down so i just wanted to show you some of these things that you can do with this with this with this graph and you know beyond that that there's other ways and what you can do to in you know any other data you find if you you know you're looking up some things you might find them maybe it's a csv but maybe somebody you know put together an entire library and with that they not only have the data and then that's stored somewhere but you know somebody also wrote these so that you have all these already how can i get a point and how can i get all this different data from any of those points so things that you can make and things that you can find online that somebody else made you know different ways that you can find this data and then graph it so trying to give you some more tools now you know now that you know math and python and can use this to graph you know some more tools and some more sources of data so what i want to show you here is just a few more things that you can do right within colab and we already looked at over here on the left the table of contents that you can get to appear disappear then we have the search you can even search for directly for variables here and then we have this folder icon where you can click to mount your google drive directly and then once you do that then you can also see give it permission and down here we see it's mounting the google drive once you do that then you'll see it has the slash through it now so you can unmount the google drive if you want if if you wanted to do that so this makes it easy so this makes it easy to find things and move things back and forth within your google drive then the really big thing down here is the look at these tags you can get all these code snippets that are already in the google colab you see adding form from fields oh i want to add a form get the code right here you can copy it or even click it you know if you happen to be right in the place where you want to put it you click insert all these other things camera capture and notice this even uses javascript within python interfaces this so it's pretty cool again all these and some of these you know downloading files from google drive from github all kinds of things importing libraries that you know that are in colaboratory all of these zip reader there's a lot of other things that you can do open files from github from your google drive from your local file system how you can just upload those so it even gets down in here into pandas data frame and that's kind of where we want to get our math skills too that we can take data from wherever well that's the pandas part and then bring it in and then do some different math to it what can i graph can i display it in different ways and that's what we want to take this to so what i'm going to do is you'll see below this video there's other code that i'll include but i'm not going to go through every one of these but check these out i mean there's so many different things already built into colab that you can you can do you know open up a sample you know and tinker with it i have a colab notebook i just call it code tester and i just have different things that i can go through and you know let's try this let's try that and then you know you put together in your notebook of stuff that works but here's all these things available and then i'm going to put together another colab notebook of just a few other things you know to tackle on this end of this class to continue you know some things that you can do with math and with code and you know we're building upon this leading to you know working with data and doing some other interesting things with that so check these out and you know tinker with them and enjoy wow you made it so now having gone through this now you should have a good understanding of algebra you should be familiar with all the key concepts and how to write the code to do all of your algebra you should have your at least one or however you organized it colab notebook that's ready with all of your scripts for solving all different sorts of algebra problems you made it through certification one two and three and you have the ability to solve a lot of different problems and you know write the code or reference code that you've already written to solve these problems so there you go you should be you should be all set this is the foundational math because it is the math that we're going to use and that you'll be able to use for so many other things in math including data science data science we're going to bring up formulas like this functions like you've been working on you know algebra level solving some graphing so now you have an understanding of all that and then you can apply it to other things for yeah statistics data science and a few other subjects too so if you continue on with the next step we will do a precalc trig that type of topic so you know some other deeper understanding of other graphs we didn't get to in in algebra because they're a little bit different other sorts of patterns dealing with locations of things and circles and more angles and a lot of triangles so that'll be something that we'll do next and again that's going to also build to help you with statistics and data science because as you represent data on graphs or use different sort of mathematical analyses to see relationships among data points you know the deeper math will get you to be able to detect more and more complex relationships among data so this is the foundation i feel like you have a good foundation hopefully you're feeling the same and there you go you made it and on to on to the next adventure
