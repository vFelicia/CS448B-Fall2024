With timestamps:

00:07 - hey everybody
00:08 - welcome to live coding with jesse i'm
00:11 - jesse and
00:12 - today
00:15 - we're gonna do some css work uh just
00:17 - like we did two days ago on the live
00:19 - stream
00:20 - so we're gonna
00:22 - uh style a different part
00:24 - of uh of a different template
00:28 - but it'll be the same
00:29 - same basic process we're going to check
00:31 - out what the markup looks like that
00:33 - we're given so we
00:36 - although we do have control over the
00:37 - markup
00:39 - uh there's
00:40 - we would have to edit it in a lot of
00:42 - different places so it will make more
00:44 - sense for us to just style it as is for
00:47 - now
00:48 - to get things ready for launch
00:50 - and then afterwards we can think about
00:53 - okay now that we have more time what's
00:55 - the ideal format for this content
00:58 - and then we can change it
01:01 - or
01:01 - [Music]
01:02 - hopefully more likely
01:04 - i can get some some student workers so
01:07 - since we're doing this project for
01:09 - university we can get some student
01:10 - workers to
01:12 - to format the data properly
01:15 - since that's something that you know you
01:17 - could be trained to do on one or two of
01:19 - them and then
01:20 - do the rest
01:22 - you know really without supervision
01:25 - so that's the plan today
01:27 - i um i expect to do
01:31 - for the stream to be maybe like an hour
01:32 - an hour and a half i will warn everybody
01:36 - the last hour or so i've started to feel
01:39 - like not really good so
01:42 - i hope i'm not getting sick
01:46 - but uh
01:48 - to be honest with you i didn't eat
01:49 - anything for a long time this morning
01:52 - and
01:53 - i just had coffee
01:55 - and then i ate a bunch of gummy bears
01:58 - and then
02:00 - since i'm so smart
02:02 - i ate chocolate after that
02:04 - and then i decided to eat real food
02:09 - so
02:10 - it's probably my own fault for eating
02:13 - like
02:15 - nothing and then eating junk food
02:18 - so
02:21 - anyway hopefully i
02:23 - i'm all right i apologize if uh through
02:26 - my own fault i
02:28 - i can get really sick
02:31 - josh's great diet yet
02:36 - i know it's a terrible diet i um
02:40 - i was talking with somebody another
02:41 - developer on instagram and um
02:45 - uh they were talking about this
02:46 - bulletproof coffee i don't know if you
02:48 - ever heard of it but uh i had tried it a
02:51 - long time ago
02:53 - it's like coffee mixed with
02:55 - butter and like coconut oil or like
02:59 - other oil that's like basil coconut oil
03:01 - right you you blend it all up and um
03:05 - and then you drink it and it's supposed
03:07 - to
03:09 - it's supposed to like induce ketosis
03:11 - which like gets energy right to your
03:13 - brain a lot better
03:15 - uh and
03:16 - you feel full after you drink it you
03:17 - don't need to eat so i said
03:20 - i was up at like two o'clock in the
03:22 - morning so this this was really this is
03:24 - like three o'clock in the morning i said
03:25 - you know what like i think i'm gonna try
03:27 - it
03:28 - and then
03:30 - later on i took the kids to school i
03:31 - said okay i'm gonna go to the store and
03:32 - get all the stuff and then i'll i'm
03:34 - gonna try it i won't eat and then i'll
03:36 - um
03:39 - i'll let you know how it goes so that
03:41 - was my plan
03:43 - uh and it went pretty well until i ate
03:46 - all the junk food and then uh
03:48 - after that
03:50 - i started to feel not so good so i don't
03:52 - know if it was the bulletproof coffee or
03:54 - this junk food i'm guessing it is
03:55 - probably more like the junk food but
03:58 - the coffee itself was was pretty good
04:02 - so
04:04 - anyway
04:06 - let me get started
04:08 - enough about my terrible diet today
04:11 - uh we're gonna get started for those of
04:13 - you who are new to the stream uh this is
04:15 - the format i do my normal everyday work
04:18 - uh that
04:19 - so i'm a front-end developer i work
04:21 - full-time for a small university we're
04:23 - working on the university's main website
04:25 - of transferring it from an old content
04:28 - management system to a react based
04:31 - system
04:32 - so
04:35 - um
04:36 - right now we're just going to work on
04:38 - some css in that part of it but if you
04:40 - want to see the whole process start to
04:42 - finish
04:42 - there's i think this is video number 54
04:45 - so we've done quite a lot to get to this
04:47 - point so it's totally understandable if
04:49 - you have questions
04:51 - and uh feel free to ask you know as many
04:53 - questions as you want
04:56 - and
04:58 - it looks like there's some problems with
04:59 - the stream
05:02 - what is the issue with the stream
05:11 - all right
05:12 - not sure what's going on with the stream
05:15 - hopefully y'all can still at least hear
05:17 - me video might be choppy now
05:19 - i'm trying to figure out what's
05:21 - what's messing this up right now um but
05:24 - anyway we split things up in a pomodoro
05:26 - session so i'm gonna do a 25-minute
05:28 - session where i mostly code don't really
05:30 - look at the live chat too often and then
05:32 - i'm gonna take a break i'm gonna answer
05:34 - questions in the live chat and then
05:35 - we'll do another 25-minute code session
05:38 - and then after that we'll take the whole
05:39 - rest of the stream to uh answer answer
05:42 - questions so
05:44 - uh we're definitely beginner friendly so
05:47 - don't feel like
05:48 - you know you're this isn't the place for
05:50 - your question it definitely is
05:52 - uh and we'll do our best to help you out
05:55 - give you an answer at least try to let
05:56 - you know where you could find an answer
05:59 - okay it looks like the stream is back
06:04 - it's back up
06:05 - i don't it seemed like the internet
06:07 - almost just like
06:09 - cut out
06:10 - it's possible somebody else in my i'm
06:12 - i'm working from home right now somebody
06:14 - else in my house might have been playing
06:15 - like
06:16 - uh youtube
06:18 - or netflix
06:20 - and messed it up
06:23 - oh john says it could be the weather yes
06:25 - that's true it's been really windy
06:27 - lately around here and i know like i
06:28 - haven't had a power outage yet but there
06:30 - have been power outages elsewhere so
06:35 - that certainly could be affecting things
06:37 - all right so let me
06:38 - make this bigger because
06:40 - i know this is way too small for anyone
06:42 - to see
06:46 - and let's start the pomodoro session
06:51 - uh it's probably still too small let's
06:52 - make it a little bigger
06:54 - there we are
06:55 - and
06:58 - actually i was doing a little bit of
06:59 - work on the server
07:01 - file so
07:04 - let me commit what i've done there
07:07 - before we get started
07:17 - okay
07:18 - uh i did do a little bit of extra work
07:20 - styling the page we were working on on
07:23 - the last stream so nothing major if you
07:24 - want to know what what else i've done
07:26 - check out uh the latest few commits
07:31 - the uh
07:32 - link for this repository is in the
07:34 - description
07:37 - and so uh we're just doing a basic get
07:41 - ad if you're familiar with git if you're
07:42 - not familiar with git this is just a way
07:44 - to track all the changes that happen in
07:45 - your code that way everybody else can
07:47 - see the progress but you can also if you
07:50 - mess something up you could very easily
07:52 - revert back to a previous state in the
07:54 - project so
07:55 - that's why we use get and uh so i'm just
08:01 - saving the project at this particular
08:03 - stage with a little note about
08:05 - what changed in the project that'll give
08:07 - us like a nice like save point to go
08:10 - forward and that way if we really mess
08:12 - anything up we can always just go right
08:13 - back
08:14 - uh to this point
08:16 - so i get it's good if you're familiar
08:17 - with like video games and they have a
08:19 - save point at the game
08:20 - uh in in the middle of a level or
08:22 - something like that's a good way uh to
08:25 - like basically think of git is creating
08:27 - lots of little save points in your
08:28 - project that you can easily
08:30 - uh
08:32 - go back to
08:34 - oops yarn
08:36 - cm
08:41 - all right
08:43 - so if you notice the stuff going on in
08:45 - the terminals a little bit slow that's
08:47 - because of the the streaming software
08:50 - that i'm using uh
08:52 - it shouldn't be that slow on your
08:54 - machine unless maybe you have a
08:55 - really slow machine already
08:59 - uh so let's see
09:10 - okay
09:11 - all right so while that does its thing
09:15 - we can get started uh with me showing
09:18 - you all what we're gonna be working on
09:20 - today so let me move this over to the
09:23 - screen
09:32 - here we are
09:37 - okay
09:38 - so
09:40 - this is
09:41 - a department page so the last time we
09:43 - were working on a major
09:46 - page for major or
09:48 - uh
09:48 - program so originally i'd called it a
09:50 - major page but i've come to find out
09:52 - that actually the the better term to use
09:55 - is
09:56 - program
09:58 - so
10:00 - if you hear me use those words
10:01 - interchangeably then
10:04 - i mean they mean the same thing for us
10:06 - for this project
10:09 - so this is a department page and in the
10:12 - department pages we we now have
10:15 - this section here which is links let me
10:17 - show you what it looked like
10:20 - on
10:21 - the site
10:24 - let's see
10:28 - i have this open on another screen
10:31 - but i did
10:35 - there we are
10:38 - so here's the site as it is right now
10:40 - the old version of the site
10:43 - i didn't want it to be on a different
10:44 - screen oh well
10:46 - uh
10:47 - so
10:49 - we've got we already have this section
10:54 - that's uh that we brought over and that
10:56 - looks fine
10:59 - this section we're just going to leave
11:00 - out for now the core curriculum has been
11:03 - around for a while i don't think we need
11:05 - to say anything say this on every single
11:08 - department page
11:09 - uh we already have all this data saved
11:12 - as a post type so we're going to put
11:14 - this in but we're not going to worry
11:15 - about that today in the same way with
11:17 - videos we have a lot of these videos
11:19 - already saved
11:21 - i
11:22 - i don't think we have them categorized
11:24 - yet but once we get them categorized
11:25 - it'll be pretty easy to pull these in
11:27 - and display them on the proper pages so
11:30 - all we're worried about today
11:32 - is
11:33 - getting this data that shows up here
11:36 - you know in this little block in this
11:38 - menu
11:41 - and
11:43 - now
11:44 - we're going to try to take so this is
11:46 - what what has come through which looks a
11:48 - lot different than how it's displayed
11:50 - otherwise
11:51 - uh and we're going to try to style this
11:53 - in a way that makes sense
11:56 - and that is going to be able to be
11:58 - applied you know across the board on all
12:00 - these department pages
12:05 - so
12:06 - first things first let's check out what
12:08 - markup we have here i mean already
12:10 - looking at it i'm seeing that
12:11 - everything's repeated there's
12:13 - the actual link and then there's the
12:16 - i guess the title
12:18 - uh which it looks like they're the same
12:21 - so we ought to be able to just
12:22 - completely hide this text title
12:26 - and then just keep the links and style
12:28 - those uh how we want to style them
12:35 - so let's see how this is and i'm gonna
12:37 - let me make this a lot bigger for you
12:39 - all cause i'm sure it's not
12:41 - that easy to read
12:45 - let's see if we can go up one more okay
12:47 - that should work
12:50 - and gonna move this down a bit
12:54 - about let's
12:55 - let's make this very small
12:58 - there we are that'll give us a lot of
13:00 - space here
13:02 - so hold on
13:04 - my music in my headphones is really loud
13:06 - it's distractingly loud so let me turn
13:08 - it down a bit okay that's that's better
13:12 - um
13:17 - okay so all right the heading is there
13:19 - the heading's fine
13:23 - it wouldn't be a bad idea if we act if
13:25 - we did have a heading though uh up here
13:28 - we'll have to add that in so we'll see
13:30 - the primary focus right now is getting
13:32 - this styled if we have a little bit of
13:34 - time before the stream's over then maybe
13:36 - we'll make sure that we get a title here
13:38 - for all the department pages
13:40 - uh if we're not already using a
13:43 - department page template then we may
13:45 - even want to create our own template for
13:47 - that
13:48 - but we'll um
13:50 - we'll get to that when we need it and
13:51 - what just happened
13:58 - i don't know why it refreshed
14:00 - maybe i clicked something i'm not sure
14:04 - all right so the heading's fine
14:06 - well i'm sorry the uh
14:08 - this h2 is fine for now
14:10 - uh the headings here i think we can
14:13 - completely get rid of
14:16 - and then what we'll keep
14:20 - is this so let's
14:26 - let's hide these
14:29 - so it looks like there's nothing else
14:31 - with a heading uh on this page
14:34 - and i just want to double check up here
14:38 - make sure there's no title hiding out
14:40 - here and it looks like there's not
14:45 - okay
14:46 - um
14:47 - yeah so first things first let's hide
14:49 - all the titles and then see what we have
14:52 - see what it looks like
14:55 - obviously we're gonna have to style this
14:57 - what's this department menu
15:02 - department menu
15:04 - oh okay so we we have this data here as
15:07 - well
15:09 - i don't think i have this data all
15:11 - together for every
15:13 - department yet but the plan is to put it
15:15 - all together so
15:19 - um yeah so if we have time maybe we'll
15:21 - work on this little section here
15:24 - as well it's displayed as a totally
15:26 - separate part of this
15:28 - which makes sense like these aren't
15:30 - programs
15:32 - um
15:34 - yeah
15:38 - okay
15:42 - so i guess we can we can test this out
15:45 - right here uh in our in our dev tools
15:50 - and
15:51 - so let's go here and just
15:54 - add
16:00 - i'm going to add this in we're going to
16:02 - say display
16:03 - none
16:05 - there we are and so that's taken away
16:08 - all of these
16:10 - we've already we have these break tags
16:12 - here but i believe we're already
16:14 - displaying none on those
16:16 - um
16:18 - so we don't have those
16:21 - we're displaying on these link tags
16:22 - which is fine that's it's as it should
16:24 - be
16:26 - where's our content yeah
16:28 - uh the markups messed up it this is just
16:30 - how it was
16:31 - automatically done in the old content
16:34 - management system so uh
16:36 - if you're looking at this markup and
16:38 - saying like what is this stuff
16:40 - then
16:41 - you're entirely right in thinking that
16:44 - it's definitely not ideal
16:48 - um
16:50 - all right
17:00 - all right let's work on
17:03 - all right so each one of these is
17:04 - wrapped in an item
17:06 - okay let's work on this item then
17:10 - and then we can style the uh the a tag
17:12 - inside of it
17:15 - i want item
17:18 - all right
17:21 - if anything i'm doing in devtools if
17:23 - you're not sure how i'm doing it just
17:24 - let me know
17:25 - um
17:28 - you know i know if you're not familiar
17:29 - with devtools then it may not really be
17:31 - obvious how this this stuff's working
17:33 - uh but i'd be happy to uh to explain it
17:36 - so if you put it in the live chat now
17:38 - i'll get to it as soon as this pomodoro
17:40 - session's over which will be in 15
17:41 - minutes
17:44 - okay so for the items let's say display
17:49 - block
17:50 - and that'll make this these will all
17:53 - appear
17:54 - like on top of each other here's
17:56 - different programs
17:57 - so already that looks a lot better
18:03 - now let's go here to these a tags
18:06 - so there's no other a tags on the page
18:08 - right now so
18:09 - well except for down here which i'm not
18:11 - worried about these yet
18:12 - so i'm just going to style these as like
18:14 - just regular like a tags but what we'll
18:17 - want to do though is make sure
18:19 - that
18:21 - when we do the css we only target a tags
18:25 - that are inside these item tags
18:28 - that should be specific enough that it
18:32 - it wouldn't apply like let's say if
18:34 - there happened to be some inline links
18:36 - that it wouldn't mess those up
18:41 - all right so we first thing we want to
18:42 - do is um
18:44 - uh text decoration
18:47 - none that'll get rid of the underlines
18:50 - let's make sure our font size is is a
18:52 - decent size so let's do a font size at
18:55 - least 18 pixels there we are
18:58 - uh that's nicer let's do 18 pixels and
19:05 - i'm not a huge fan of that color
19:08 - line height 1.5
19:11 - there we are okay so we bump the line
19:13 - height up to 1.5 which which gives us a
19:16 - nice spacing here
19:23 - i don't know that we've decided on a
19:25 - standard color for links for this site
19:27 - yet
19:33 - let's see what let's see what colors we
19:35 - can
19:42 - we were using that gold weren't we
19:45 - um
19:48 - let's see
19:50 - what was that i can't forget the hex
19:52 - value or i can't remember the hex value
19:54 - for that uh let's
19:57 - i can grab the hex value from this
19:59 - header
20:09 - area
20:11 - who grab that and then
20:15 - let's do color
20:18 - and let's give it that gold color and
20:20 - see how that looks
20:25 - all right what do you all think gold
20:27 - color for links
20:29 - do you like it do you not like it
20:32 - is it too light
20:40 - it definitely matches with the color
20:41 - scheme more it doesn't stand out as much
20:44 - but it
20:45 - i think it's
20:46 - okay i think i'm gonna try to keep it
20:49 - like this that way you all get a chance
20:51 - to look at it more i can look at it more
20:53 - and then
20:55 - i'll be able to get feedback later on to
20:56 - some other people that i from some other
20:58 - people that i work with
21:00 - all right so let's keep it like that so
21:02 - i think the other things that we've done
21:04 - i can just remember and put that in the
21:06 - css but i'm going to copy this
21:08 - uh since we have
21:11 - a bit more for this one
21:13 - let's go over to our code now and
21:17 - let me get rid of some stuff
21:19 - or shrink some stuff that we really
21:21 - don't need
21:23 - and
21:24 - let me
21:26 - let's see i want to make
21:28 - sure what we're using
21:32 - make sure i'm using the right template
21:34 - for departments
21:38 - and this is
21:45 - okay
21:46 - no we're actually using the page
21:48 - template for the departments right now
21:51 - was this the one that we had trouble
21:52 - with
22:02 - oh i see
22:03 - um
22:04 - this template we were using some old
22:08 - styles with
22:14 - okay
22:19 - all right here's what i'm gonna do
22:24 - we're gonna make if we don't already
22:26 - have one we're gonna make a
22:29 - uh css file
22:31 - for
22:33 - department pages and then on another
22:35 - stream or maybe i'll just do this on my
22:37 - own we're gonna convert this to use the
22:40 - latest version of apollo
22:42 - and the newer way of
22:45 - getting data from graphql which this
22:47 - one's using the old way when we started
22:49 - this project
22:51 - the the newer way wasn't available yet
22:54 - so we're just going to forget about this
22:56 - for now
22:57 - because i want to keep this mainly about
22:59 - css
23:00 - and we'll work on that later
23:04 - and for now let's just go in here to our
23:07 - styles folder
23:12 - and we're going to do
23:17 - department
23:18 - dot css
23:22 - all right so now we have that
23:24 - and uh let me do
23:26 - what did we say this would be
23:29 - item
23:32 - in uh a tag right it was an a tag yeah
23:36 - and then we're gonna put that in there
23:41 - and our indentation is
23:43 - not great we'll fix that
23:46 - okay
23:47 - and then we have
23:50 - the headings right yeah
23:54 - our heading is going to be display none
24:02 - and finally
24:04 - we took the
24:06 - each item
24:08 - and we gave that a display
24:14 - uh block
24:19 - okay so i think that was all we did for
24:22 - a css a pretty basic so far
24:24 - and
24:26 - what
24:27 - we'll likely end up doing
24:29 - is taking
24:31 - whatever css we have here for page.css
24:34 - and we're going to use that
24:37 - in our department css kind of as a base
24:41 - and we'll get rid of what we don't need
24:42 - and we'll change what we do need but for
24:44 - now
24:45 - i'm going to put it in here since we
24:47 - will need it although you see in a
24:48 - second
24:50 - it's really going to be unnecessary
24:53 - because what we'll do here in our
24:55 - [Music]
24:58 - page
24:59 - template which is what we're using right
25:02 - now for department pages temporarily
25:06 - where is this page.js so we want to keep
25:08 - page.js uh as like unopinionated as
25:12 - possible in terms of style because this
25:14 - is our default like fallback for content
25:17 - that we don't really have any uh
25:19 - specific styles for
25:22 - so we want it to be able to work
25:24 - uh just basically like display text
25:27 - nicely
25:28 - and not mess things up too much
25:31 - so
25:32 - i don't want to keep it like what i'm
25:34 - about to do here uh for too long
25:37 - but it should work
25:40 - just for now just to test things out
25:43 - all right let me check my time to
25:46 - all right we've got time we'll
25:47 - definitely be able to see if this works
25:49 - so i added another link tag as you can
25:52 - see here if you're used to just regular
25:53 - html and not necessarily react uh just
25:56 - think about like we we have our head tag
25:58 - and then inside we have our link tags
26:00 - where we were importing css so that part
26:03 - should be very familiar
26:05 - and so in addition to page.css
26:08 - i'm going to put this
26:11 - department.css file that we just created
26:14 - right and that's lower down so given the
26:17 - cascading nature of cascading style
26:20 - sheets of css
26:22 - this will override whatever is here okay
26:25 - so you can see why everything we just
26:27 - copied over it's kind of pointless right
26:29 - now because
26:31 - right we already have it on the page
26:33 - uh but this way it'll just be one less
26:35 - thing that we have to remember to do
26:36 - when we do um split this out
26:40 - uh you know this component and update it
26:42 - so that it'll work with
26:44 - what we're
26:46 - kind of like the latest uh stuff that
26:48 - we're doing with apollo
26:49 - if you're interested in the updates that
26:51 - have to do with the latest version of
26:52 - apollo we did a stream on that a while
26:54 - back so if you just kind of scroll back
26:56 - through
26:58 - through the playlist of
27:00 - what is it
27:01 - project 5 playlist
27:03 - you should see some streams about apollo
27:06 - like upgrading and
27:07 - and um
27:09 - that way you'll get the latest so if you
27:11 - have used apollo before but you're not
27:13 - really up on the new things that'll be
27:14 - kind of a nice stream because we don't
27:16 - cover everything apollo does just the
27:18 - latest stuff just the changes
27:20 - and just kind of go over how we
27:23 - update existing apollo uh code to that
27:27 - uh that latest stuff so you can see here
27:29 - like we're using this query
27:31 - element
27:32 - uh this query component
27:35 - okay so let's save that and make sure
27:38 - save it
27:39 - and
27:44 - i just want to make sure i saved this as
27:46 - well i think i did but
27:49 - it has happened before that i've thought
27:51 - that my code wasn't working and
27:53 - the real problem was that i never saved
27:55 - it
27:56 - all right so we're going to go back here
27:58 - and we're going to hit refresh
28:01 - and hopefully all our styles still stay
28:06 - alright wonderful it works
28:09 - let's double check
28:11 - and make sure
28:12 - [Music]
28:15 - that all our styles
28:18 - are working and they're not being
28:20 - you know overridden by anything so it
28:22 - does it looks like yeah all these work
28:24 - obviously uh the things that we've set
28:27 - to display none are are displayed on and
28:29 - we don't have to test that we can just
28:30 - see
28:31 - and
28:33 - our display block is working on our
28:35 - items
28:37 - the only thing that's different is now
28:38 - we see that these
28:41 - a tags
28:43 - don't have
28:44 - the styling that we applied
28:46 - so this is
28:49 - this might be a good time to apply
28:52 - as a standard for all a tags
28:55 - the text decoration none and this color
28:59 - so let's go back and do that now
29:02 - at least
29:03 - at the very least we can do that in
29:09 - in this file and then
29:11 - maybe in our page
29:17 - i am going to have to so we are we do
29:19 - have some
29:20 - global styles
29:22 - i don't want to get into that though
29:23 - because this is for basic css so
29:26 - uh for those of you that are more
29:28 - familiar with react and material ui and
29:30 - what's going on with our project
29:32 - the better place to put this what we're
29:35 - about to do is probably in
29:38 - uh
29:38 - those like the global styles that we we
29:42 - have uh coming
29:44 - uh from material ui
29:46 - uh
29:48 - sorry about the stream quality here it's
29:50 - kind of dropping out
29:55 - uh
29:58 - we're really sorry about this i haven't
30:00 - i don't know what's going on
30:04 - let me double check my machine really
30:05 - quick because there's
30:07 - maybe i have something running that i
30:09 - just
30:11 - don't
30:13 - i didn't realize i had running
30:34 - maybe it is my internet connection
30:48 - all right on one of my other screens i'm
30:49 - gonna run a speed test really quick just
30:51 - to see if the connection is fine then i
30:53 - know it's something on my computer
30:56 - uh
30:57 - but
30:58 - if the connection's bad then i'm not
31:01 - gonna be able to do anything about it
31:02 - right now and i may as well just try to
31:04 - continue as best i can with the stream
31:07 - all right so speed test is running right
31:08 - now
31:10 - um
31:12 - over here
31:13 - let's just pull out
31:16 - this
31:19 - and we'll put it for now i'll just put
31:22 - it right here
31:27 - and all we need really is this
31:32 - i'm going to save that and then since we
31:34 - had
31:38 - let's see we have open
31:50 - i'm just going to paste this in a few of
31:52 - these other
31:54 - places for now
32:03 - okay
32:04 - so let's save that and let's say
32:07 - this
32:11 - okay the the upload speed is actually a
32:14 - bit slow right now
32:16 - from what i should have so it's possible
32:19 - that uh
32:20 - that the internet is the issue
32:27 - so hopefully we
32:29 - don't have too many uh more issues here
32:38 - all right
32:39 - my timer went off so let's do it at five
32:43 - minute break here i'm gonna go back to
32:45 - the the chat i'm gonna scroll all the
32:46 - way to the top and just try to work my
32:48 - way down
32:51 - let's see
32:52 - if i don't get your question during this
32:54 - break then just hang on i'll get to it
32:55 - at the uh after the next pomodoro
32:57 - session
33:03 - so hey i there are a lot of people
33:04 - saying hi hey everyone
33:06 - thanks for watching
33:24 - rjpd geeks point says why you are all
33:28 - time
33:29 - i'm i'm not sure what you were trying to
33:31 - say it seems like maybe
33:34 - there was a word left out there so if
33:36 - you're still watching uh let me know
33:37 - what what you were trying to ask there
33:44 - i see a few more of you are saying hi
33:45 - asking how it's going uh not bad
33:47 - actually i'm feeling pretty good now
33:49 - it's going going well
33:55 - uh
33:57 - dinan jay says how can i make a page
33:59 - responsive without using any frameworks
34:02 - um
34:03 - yet
34:04 - media queries so um phoenix mentioned
34:07 - that
34:08 - um
34:09 - yeah media queries so
34:12 - let's just let me show you we have some
34:13 - media queries going
34:16 - somewhere in here right where are they
34:19 - here we go
34:20 - all right so like this you know so we'd
34:22 - have a media query so right now this is
34:24 - a little bit of responsive stuff here so
34:28 - when it's when we have a small screen
34:33 - oops where are we at okay when we have a
34:34 - small screen the width of our main
34:37 - container
34:38 - is 90
34:41 - but then when the screen gets bigger
34:43 - than 600 pixels
34:46 - we only
34:47 - display 70
34:49 - all right this makes sure that our
34:50 - content isn't spread out really far on
34:53 - wide screens but then on small screens
34:56 - we want to make sure that it doesn't
34:58 - have too much padding and becomes like
35:00 - all squished and really hard to read
35:03 - so that was just like a very simple
35:05 - example of using media queries for
35:08 - responsiveness
35:11 - so if you're not familiar with media
35:12 - queries definitely like look up the
35:14 - syntax
35:16 - and uh so like mdn is mozilla developer
35:20 - network is a great place uh to
35:23 - look up syntax for for different web
35:25 - related things
35:26 - and just copy and paste some of these
35:29 - for a long long time i could not
35:31 - remember how to do media queries from
35:33 - scratch i had to copy and paste them all
35:35 - the time
35:36 - and even now occasionally i'll forget
35:38 - the exact syntax
35:40 - so um
35:42 - yeah like don't
35:44 - don't worry like if you don't get it
35:46 - right away it took it took me a long
35:48 - time and
35:50 - um
35:52 - you know they're a little tricky
36:01 - uh solely as how do you get your
36:03 - developer tools to be so dark couldn't
36:05 - find the option okay let's do this real
36:07 - quick because
36:08 - uh so if you're in your dev tools in
36:11 - chrome and you go up here to this menu
36:13 - this three dots
36:15 - and you click it
36:18 - you go down here to settings
36:20 - i guess you can get there by pressing f1
36:22 - as well
36:24 - you go to settings right here in
36:26 - preferences under appearance for me it's
36:28 - the third option here i'm assuming it'd
36:30 - be the same for everybody
36:32 - you just go to the theme and you hit
36:33 - dark theme so by default it's this light
36:36 - theme
36:39 - which is too bright for me
36:42 - i like the dark theme
36:44 - dark theme for everything
36:46 - uh so i switch it to dark
36:49 - that's a lot nicer
36:51 - i think a lot easier to look at
36:55 - so that's how you get the dark theme
37:07 - see
37:13 - uh hammy says the gold looks good but a
37:16 - little darker is better
37:18 - okay cool maybe we'll um we'll mess with
37:21 - the um
37:23 - kind of the darkness there for that
37:25 - maybe we could go a little bit darker
37:27 - and make those links pop a little bit
37:34 - uh fruity spirit says how many more
37:37 - sessions are you going to do in live
37:39 - streams
37:40 - um
37:42 - if you mean sessions in this stream
37:44 - we're going to do one more pomodoro
37:46 - session
37:46 - if you mean sessions as in like live
37:49 - streams
37:51 - i'm gonna keep doing live streams till
37:53 - nobody wants them anymore i guess
37:55 - um
37:56 - so for this project i have no idea how
37:58 - many more streams
38:01 - it's gonna take
38:06 - but i mean we may like
38:08 - eventually this project may just turn
38:10 - into more like maintenance mode
38:12 - and we'll just come back to it every
38:14 - once in a while and then we'll move on
38:15 - to another like main project
38:20 - all right
38:22 - let me
38:24 - try to do that
38:26 - uh i'm gonna stop here
38:33 - and i want to make sure that i remember
38:35 - where i left off at so i'm going to mark
38:38 - this down
38:46 - okay
38:47 - uh let's go back here let's do our
38:49 - pomodoro
38:51 - and
38:52 - i'm gonna do one more session
38:55 - i'm refreshing this to make sure that
38:57 - this is applied okay so that is applied
39:00 - let's take a look at this color though
39:03 - and let's see if we can make it a bit
39:05 - darker
39:09 - so i'm going to click this color oops
39:13 - in dev tools i'm going to click on the
39:14 - actual like the the box that displays
39:17 - the color and if we go in here and we
39:19 - shift this
39:21 - we can see like the rgba
39:24 - but i want to go to the hsla
39:30 - and
39:31 - which one are we gonna do hsi
39:36 - is it this one a light
39:50 - so if we change this l value
39:54 - would it what is this like hue
39:56 - saturation
39:58 - is this light
40:00 - i don't remember what all those are i
40:02 - can't remember what everything is i'm
40:04 - not like a designer
40:06 - uh
40:07 - you know i do some design stuff but
40:09 - basically this l value will give us
40:12 - the color will basically be the same
40:15 - but it just makes it a little lighter or
40:16 - darker
40:18 - so
40:19 - if we go a little darker here
40:26 - and then we check it out see now we have
40:29 - this hsla value
40:32 - and if that's the value we want if that
40:34 - looks it definitely looks darker just
40:36 - comparing it from here to here
40:39 - we can go with that
40:41 - and we could take this out and now in
40:43 - our code
40:47 - where do we have this
40:49 - here so in all the places where we just
40:52 - had this
40:55 - and
40:58 - we can now change it
41:01 - so we'll save it
41:04 - there let's save it there
41:08 - oops i
41:10 - wanted to completely get rid of that
41:15 - oh
41:16 - that didn't work out i wanted
41:18 - let's make sure i did it right here
41:20 - i did
41:21 - and then finally our department css
41:25 - is going to be
41:31 - oops
41:38 - there we go so now everything is that
41:41 - darker value
41:45 - and if we refresh we should be able to
41:47 - see what it looks like even in line
42:02 - oh no i just saw it said the color um
42:06 - the color picker thing is uh
42:09 - hidden behind my face ah
42:12 - sorry about that
42:15 - okay but that definitely is darker
42:20 - okay so we'll keep it like that for now
42:23 - i like that idea we've done that in
42:25 - previous projects before
42:29 - never with this color but with a
42:30 - different color
42:31 - and it worked well to make things more
42:33 - readable
42:43 - all right
42:44 - let's see
42:45 - [Music]
42:48 - all right what were we gonna do next
42:50 - this part i think we're gonna style this
42:53 - part next i do want to
42:55 - take this
43:01 - this title here
43:13 - yeah this is too much space between this
43:15 - title and this
43:21 - so let's see
43:30 - let's give it a margin bottom of 8
43:31 - pixels
43:33 - all right that's nicer
43:35 - i like that better
43:41 - give it a font weight of 400
43:46 - yeah that's different
43:48 - yeah
43:50 - and then
43:52 - what color is this
44:10 - um
44:12 - let's do our color as
44:24 - and i forgot to write
44:27 - rgba
44:34 - okay
44:36 - all right so this is what we're gonna do
44:38 - for our
44:40 - h2 title
44:43 - uh basically what we've done is we've
44:45 - decreased the margin on the bottom
44:47 - because before it just kind of was there
44:49 - it didn't really look like it belonged
44:50 - to this list
44:52 - we also
44:54 - decreased the font weight the font
44:56 - weight was a little heavy it was kind of
44:58 - overwhelming and it stood out i think
45:00 - too much on the page
45:01 - and then we also uh changed the color so
45:05 - i believe i couldn't find the value but
45:08 - from looking at it it looked like it was
45:11 - solid black we changed that to be um
45:14 - black
45:15 - uh with an opacity of
45:17 - 87
45:19 - okay and that's what we did here with
45:21 - the rgba value
45:23 - uh and that softens the black a bit
45:26 - it's still very readable
45:29 - if you look at it it's like okay that's
45:30 - still black but
45:33 - it definitely makes a difference
45:35 - um
45:36 - and that's that's the standard kind of
45:39 - black value for
45:41 - uh material design
45:43 - okay well
45:44 - we rarely ever
45:46 - use uh like solid black
45:53 - alright so let's grab
45:55 - this value and let's add it in
46:00 - uh
46:02 - put this
46:11 - all right
46:14 - i need to get like auto format for my uh
46:17 - css
46:18 - that would be helpful
46:25 - and i'm gonna give it a refresh just to
46:26 - make sure that's all working
46:38 - okay looks good
46:41 - all right now we can get down to this
46:42 - part here
46:43 - and uh we'll style this a bit so
46:47 - department menu
46:49 - apply
46:53 - all right phil let's do it just like we
46:55 - did with this section first thing we're
46:57 - gonna do is just see what we're dealing
46:58 - with uh in terms of markup
47:02 - mobile title
47:05 - okay so we definitely
47:19 - hmm
47:32 - let me think about it so the first thing
47:33 - we have here is uh and apply
47:37 - link do we want the apply
47:45 - i will leave that in for now
47:49 - yeah we'll leave that in for now i guess
47:51 - it makes sense to have an apply button
47:52 - you know down here somewhere
47:59 - link text
48:03 - faculty
48:06 - classics
48:12 - that's odd all right so let me um
48:17 - let me just think out loud for a second
48:19 - here so
48:21 - these links
48:23 - we have linked text
48:25 - as a separate element but then within
48:27 - the a tag
48:29 - the name doesn't match up with the link
48:32 - text so this says classics
48:35 - but what we really want is classics
48:37 - faculty
48:47 - they have the summer ancient and
48:49 - biblical languages institute
48:56 - and that that does work
49:08 - okay here's what i'm thinking
49:11 - i'm assuming and maybe i'm wrong here
49:14 - but i'm assuming that every department
49:15 - page has a link to that department's
49:18 - faculty
49:19 - and that link is going to follow the
49:21 - same structure of being
49:24 - name of the department slash faculty
49:28 - if that's the case we could do something
49:30 - very similar to what we did in the last
49:32 - stream
49:33 - uh where we didn't use what was given to
49:36 - us from the markup and instead
49:39 - we created our own element in react
49:43 - that created that that link for us and
49:45 - then we didn't have to use the markup
49:46 - that was given to us
49:50 - that would solve our issue here of
49:52 - having to somehow use this link text
49:57 - um instead of the text that's within the
49:59 - a tag
50:00 - so we'll do that
50:05 - and then
50:09 - summer ancient biblical languages
50:10 - institute
50:13 - yeah we definitely need to keep this
50:25 - and then for the apply link there we
50:27 - definitely don't need to
50:29 - pull in the apply link from here we know
50:31 - what that link is it's going to be the
50:32 - same on every page
50:44 - all right this is this is going to be
50:45 - tough because
50:47 - i don't even really want these links i
50:49 - just want to hide these links and
50:51 - create elements and react for those
50:56 - but i want this link
51:03 - [Applause]
51:08 - let me see
51:10 - you know let me bring over another
51:12 - example
51:14 - of what's happening here
51:19 - uh so let's see
51:26 - let's see what the business department
51:28 - has
51:39 - are you serious we don't have a business
51:40 - department page
51:42 - oh i know what it is it's a weird url
51:46 - um
51:47 - it's like
51:53 - something like that
51:55 - what is it
51:58 - um i just have it
52:21 - oh there's only one c
52:30 - okay
52:31 - all right so we have the faculty link
52:33 - here and then we have this mba four plus
52:35 - one program
52:51 - hmm
53:02 - all right i'm gonna check the uh chat
53:04 - quickly to see if you all have any um
53:07 - any input on this
53:25 - see
53:59 - all right so
54:01 - [Music]
54:08 - yeah uh binary 64 is saying do last of
54:11 - type
54:12 - the only thing i'm thinking is it's not
54:15 - i think there are some programs that
54:17 - have
54:18 - more than two here so they'll have
54:20 - multiple ones so it won't always be last
54:23 - of type
54:29 - all right uh i'll just have to
54:34 - here's what i'm gonna do and i i
54:36 - probably won't do it on the stream right
54:38 - now because we only have 10 minutes left
54:39 - and i just want to stick to css
54:41 - but what i'm going to do
54:44 - longer term i'll just have somebody go
54:46 - in and remove all those links because we
54:48 - don't need them
54:50 - short term what we can do is
54:53 - clean the data as we as it comes in so
54:56 - what we can do is put
54:59 - a function in
55:02 - in our component
55:04 - that searches through this data and
55:06 - finds
55:10 - this apply now
55:12 - and
55:13 - so basically the call to action stuff we
55:15 - can take that out
55:16 - cta link we can take pull that out
55:18 - that's not going to be a big deal we can
55:19 - do that with with css and just hide it
55:24 - um
55:27 - then for this one
55:31 - we can take out
55:34 - faculty
55:36 - and we can take out
55:39 - uh any a tag that is linking to faculty
55:43 - right so we're we're just gonna search
55:45 - for that
55:46 - and and remove the stuff so it'll be a
55:48 - little tricky
55:51 - but once we get it working like it
55:53 - should be fine
55:56 - we've done similar things in other
55:58 - components already
56:02 - and then basically once we remove those
56:04 - two everything else that's here will be
56:06 - okay and that will want to use it so for
56:09 - right now
56:10 - i'm just going to style this and
56:14 - just make sure that you know we get rid
56:16 - of this stuff at some point
56:23 - uh so let's see how we want this to look
56:26 - so first of all
56:28 - these menu items should be
56:32 - display block
56:37 - okay
56:38 - great
56:40 - and then even
56:45 - department menu
56:53 - yeah we you know what let's keep this
56:55 - title
57:01 - oops
57:05 - display block and
57:07 - we're gonna
57:11 - font size let's go 24 pixels
57:15 - and
57:16 - font
57:17 - weight
57:19 - 400
57:23 - there we go
57:25 - all right not exactly
57:26 - like this but now that i look at it uh
57:28 - this could probably
57:30 - be made a little bit smaller
57:33 - so i'm okay with this for now
57:36 - uh
57:37 - then
57:38 - apply now apply
57:41 - we're not going to worry about these
57:42 - ones
57:43 - we need to get rid of
57:45 - the link text
57:46 - so anything that's linked text is going
57:48 - to be display
57:51 - none
57:54 - great and then
57:57 - anything that's an a tag
57:59 - inside of a menu item
58:04 - which
58:06 - so we can do now like
58:10 - menu
58:12 - item
58:16 - a
58:18 - is gonna be
58:22 - um
58:25 - font
58:26 - weight
58:28 - let me put this 400
58:32 - okay
58:34 - all right so not bad
58:39 - and remember you know this supply now
58:41 - won't be there
58:44 - classics won't be there
58:46 - so essentially the apply button
58:48 - if it is there it'll say apply this will
58:50 - say classics faculty
58:59 - all right not bad so i mean that
59:01 - basically matches what we have here
59:10 - okay
59:13 - so let me
59:15 - move this
59:18 - trying to remember what we did
59:20 - all right menu items are displayed on
59:23 - our display block
59:26 - our
59:29 - let's make our cta
59:31 - text and link
59:33 - which one had the mo this one had the
59:35 - most right all right we'll start with
59:37 - that
59:44 - okay so we want our
59:53 - menu title
59:55 - and then
59:57 - i'm going a little bit fast here because
59:58 - i know we're running out of time for
60:00 - this pomodoro section
60:02 - menu item
60:08 - menu item
60:13 - get that yeah
60:15 - any item
60:16 - [Music]
60:18 - and then cta text cta link a display
60:21 - none
60:26 - set
60:38 - and then
60:38 - [Music]
60:40 - menu item a
60:43 - actually let's do item a and then
60:52 - that should be it i think that's
60:53 - everything that we
60:54 - did let's refresh just to be sure
61:00 - nope i forgot one thing and what was
61:02 - that the item
61:10 - link text that's it all right so we want
61:12 - to do
61:18 - link text
61:30 - okay
61:34 - why
61:38 - did this not uh you know what i didn't
61:40 - add the uh weight
61:42 - the correct weight here
61:50 - font weight 400.
61:53 - there we go
61:54 - all right so now that's going to be fine
61:56 - that'll give us what we wanted
61:59 - should
62:02 - did i mess up the name for this
62:10 - mobile title
62:13 - yep i messed up the name
62:22 - mobile title okay
62:27 - let's check our time
62:29 - awesome
62:30 - just in time
62:36 - okay so i went through that kind of
62:38 - pretty quickly and uh what we did was i
62:41 - just took advantage of when we were
62:43 - already using those same styles instead
62:44 - of typing the styles out again
62:47 - we just added you know just with some
62:49 - commas we added in
62:52 - uh some more element names
62:56 - for our display none for display block
62:59 - and for uh how we
63:02 - style those menu items which are links
63:06 - the only new stuff we had to add was
63:08 - this mobile title
63:11 - which
63:12 - really
63:14 - we probably could have
63:19 - used something similar to what we're
63:21 - doing here
63:24 - but
63:25 - i mean overall okay
63:33 - yeah i say that
63:35 - i mean that's it's not perfect but
63:39 - it looks a lot cleaner it looked broken
63:41 - before basically i mean it looked broken
63:44 - if you remember we had duplicated texts
63:47 - all running across the page
63:51 - now that looks like it's supposed to be
63:53 - like that you know whether or not
63:55 - someone thinks that this is a good way
63:56 - to do it or it's a pretty way to do it
63:59 - it looks organized like it was it was
64:01 - meant to be like that
64:04 - uh which is better than broke
64:06 - all right cool so my timer's up there
64:09 - i'm gonna get started with getting this
64:12 - all
64:13 - up to github and while that's running
64:16 - i'm going to go back to the
64:21 - live chat sorry i'm going to go back to
64:23 - the live chat and answer some more
64:24 - questions
64:26 - so first thing
64:28 - what happened
64:32 - looks like the last time i tried to do
64:34 - this
64:36 - it timed out
64:39 - the end-to-end test timed out
64:41 - uh i didn't even notice that okay
64:44 - um
64:45 - all right so let's try let's run this
64:47 - again
64:51 - we're gonna retry that last one
64:55 - hopefully it'll pass
64:59 - so while that's running
65:02 - i'm gonna scroll back to our left off at
65:06 - which for me was the time stamp uh 2 25
65:10 - p.m
65:11 - eastern time
65:20 - and
65:21 - have you tried the new atom
65:23 - uh i have not used adam in a while so uh
65:29 - no i guess not
65:31 - what's um
65:34 - what's new
65:42 - okay phoenix is asking what would i say
65:45 - adam
65:46 - i used to use adam
65:48 - all the time like for years i used adam
65:50 - and i really liked it but um
65:54 - if you're using it on a computer that
65:56 - was really fast and powerful it was fine
66:00 - but it was a little sluggish
66:02 - you know on on a computer that wasn't so
66:05 - powerful
66:07 - visual studio code seems to be more
66:09 - performant
66:11 - so it's a little bit quicker so i've
66:12 - switched to visual studio code i really
66:14 - like it there's a lot of nice features
66:17 - i mean really
66:18 - in terms of features
66:20 - it seems like you can get plug-ins to do
66:23 - the same thing for atom and visual
66:25 - studio code
66:26 - if you want to
66:28 - so it really comes down to the
66:29 - performance and visual studio code does
66:32 - seem to be
66:33 - a bit quicker
66:35 - even though adam and visual studio code
66:37 - both run on electron
66:40 - for whatever reason
66:42 - you know the team that worked on visual
66:44 - studio code was able to get
66:46 - better performance out of it
66:49 - i have heard some of the reasons why but
66:51 - i'm not going to get into them now
66:52 - because to be honest with you i'm not
66:54 - knowledgeable enough about electron to
66:55 - even know if
66:57 - those reasons are are reasonable
67:05 - um
67:12 - he says a stands for anchor yep
67:15 - yeah it's an anchor tag
67:27 - okay john says the link styled in the
67:29 - gold color alone doesn't really say
67:32 - click me i'm a link
67:34 - okay
67:35 - it could be missed
67:37 - i'm gonna take that in consideration uh
67:39 - i'd like to do at some point some tests
67:40 - where i can actually watch users and
67:42 - what they do
67:44 - so i'm going to make sure i
67:45 - i think about that when i'm watching
67:47 - them so basically i i like to just have
67:49 - users sit down and i tell them nothing
67:51 - about the site and i just want to watch
67:54 - what they do first
67:55 - where they go where they scroll what
67:57 - they click
67:59 - so if i notice that users are clicking
68:01 - on things that are gold then
68:04 - probably it's not going to be a big
68:06 - issue but if i notice that they're
68:08 - always scrolling past and never clicking
68:10 - then
68:11 - i think we'll have to
68:13 - we'll think about changing the color
68:15 - or at the very least
68:17 - changing the color of the links that we
68:19 - really want users to click on like apply
68:21 - and donate would be the the two major
68:24 - links that we want people to click on
68:27 - and did it
68:30 - did it again
68:34 - all right so the tests aren't really
68:36 - failing they're just timing out
68:39 - because i'm running my
68:44 - streaming software i'm running obs so
68:46 - it's it's making everything else slow
68:50 - okay
68:51 - uh then let's just run
68:53 - get
68:55 - commit
68:59 - um
69:04 - no verify
69:07 - um
69:30 - okay so what i just did there uh not you
69:34 - don't really want to do this too much
69:35 - but i bypassed the test
69:39 - and so i did a manual commit and i
69:41 - bypassed the test
69:43 - because i know
69:44 - that
69:46 - what we just did should not
69:48 - mess up the test right we can see that
69:51 - it's that it's working here right
69:56 - all right so now
69:59 - let's check the status
70:01 - and
70:02 - we'll do a get add
70:06 - and we're going to do git
70:08 - commits and i'm going to bypass it again
70:10 - just so that
70:12 - because i know the indian test will
70:14 - probably fail uh just for timing reasons
70:25 - having trouble spelling today
70:28 - uh m
70:29 - so then the no verify flag is that's
70:31 - what skips the test and then the m flag
70:34 - is what allows us to write a commit
70:35 - message in line
70:37 - so we're gonna say
70:58 - and um
71:00 - we'll check the repo in a minute
71:02 - uh when this gets pushed because we have
71:04 - this um
71:07 - you know what i take it back i was gonna
71:08 - say we have the same test running now uh
71:11 - with travis on github but we actually
71:13 - don't have the end-to-end test working
71:14 - yet with travis so
71:17 - that that wouldn't test but i was gonna
71:18 - say we would have like a backup there we
71:21 - will eventually
71:31 - uh
71:32 - ray cubin says hi how often do you use
71:37 - uh tomato time
71:39 - uh every day i use it all the time
71:41 - even when i'm not streaming i i still
71:44 - time myself with it
71:49 - it says uh he also says does it really
71:52 - work
71:53 - um
71:54 - yeah i think the pomodoro technique is
71:56 - very helpful
71:58 - so i i definitely recommend it
72:07 - uh darshan asks is jquery a way to
72:10 - update css elements or are there any
72:13 - other uses of the same
72:19 - uh yet you could update css with jquery
72:23 - you could also update css
72:26 - um
72:27 - with
72:28 - with regular javascript if you wanted to
72:32 - and there are even
72:34 - ways to do
72:38 - css with
72:39 - javascript in the context of react
72:42 - there's actually a lot of different ways
72:43 - to do it
72:48 - heidi says
72:50 - is it good to use frameworks like react
72:52 - or do the job with css
72:55 - uh i really like doing it with react and
72:57 - if we were just writing like react
72:59 - components
73:01 - and not having to deal with all this
73:03 - like data that is coming with this weird
73:05 - markup then we would be doing all the
73:07 - css like in a more react
73:11 - friendly way
73:13 - using one of the variety of options out
73:16 - there
73:18 - for css and react
73:20 - uh but
73:22 - because we have this kind of unique
73:23 - situation
73:25 - where we're dealing with data that's
73:26 - being pulled in
73:29 - we have to do it
73:31 - i don't know that we
73:33 - one of the easiest ways for us to do it
73:35 - is just using regular css in linked
73:37 - style sheets
73:39 - so i'm not saying that's the only way
73:40 - but that's kind of the most
73:41 - straightforward way for us to do that
73:43 - right now
73:44 - and it is ultimately just a temporary
73:46 - way to handle things uh for now
74:11 - um binary64 asks is that next 5.1.0
74:16 - actually i can't remember what version
74:18 - we're running
74:19 - we have been keeping things pretty up to
74:21 - date
74:22 - let's check it out i believe i have my
74:24 - package json open
74:25 - [Music]
74:27 - over here
74:28 - yeah
74:32 - so since i i just pushed all that code
74:34 - to github everything that we've done
74:36 - today is available uh in the github repo
74:40 - so the link's in the description feel
74:41 - free to go check it out uh you can
74:44 - use the code for whatever you want uh
74:46 - it's open source you can even submit
74:49 - pull requests to this project if you
74:50 - want to get some practice in or help out
74:54 - where's uh next
74:56 - yep 5.1.0
75:05 - um he says don't stop the live streams
75:08 - jesse everybody likes them
75:10 - i have no plans to stop in the live
75:12 - streams
75:13 - um
75:14 - alexander says keep on with your live
75:16 - streams i like it a lot
75:18 - cool yeah i
75:20 - i'm pretty sure i've said this before
75:22 - but i will continue to do live streams
75:25 - um
75:26 - one for as long as you all think that
75:29 - they're valuable
75:30 - and helpful to you
75:32 - and also as long as i can like i have
75:35 - time to right now
75:38 - my boss is very open to me doing live
75:40 - streams like
75:42 - while i'm at work either working from
75:44 - home or working in the office
75:47 - as long as that doesn't change it should
75:50 - be pretty easy to keep live streaming if
75:51 - that changes it'll be a little bit more
75:53 - difficult
75:54 - uh because
75:56 - i'll have to do it outside of my normal
75:58 - work hours i still want to keep it going
76:00 - though i'd still like to make it work
76:03 - but the times that i stream will
76:05 - probably be a little bit
76:09 - weird
76:10 - at least for my time zone
76:12 - uh so the stream may be like five
76:14 - o'clock in the morning so i can get a
76:15 - stream in before all my kids are
76:18 - awake or something like that
76:46 - uh abby schick
76:47 - uh thank you for for this awesome
76:49 - tutorial oh you're welcome
76:52 - uh
76:53 - thank you for watching
76:55 - and emmy says the good thing is that we
76:57 - can ask questions at the real time and
76:59 - jesse answers us um i do my best to
77:03 - answer i don't know that i always have
77:05 - great answers but i i i do my best there
77:09 - are a lot of other people in the live
77:10 - chat that
77:11 - that know the answers and give really
77:13 - awesome answers better than i can give
77:19 - binary64 says hey jesse have you tried
77:22 - next with css
77:28 - sorry for all the yawning
77:31 - i'm gonna drink some of my
77:33 - energy drink of choice g fuel
77:37 - and uh as usual i am not yet sponsored
77:40 - by g fuel but i'm open to it
77:52 - that was kind of a running joke i'm only
77:54 - half joking though seriously i if g fuel
77:57 - sends me free stuff i will talk about
77:58 - them every time i stream
78:01 - uh
78:04 - okay i haven't so binary 64. i have not
78:07 - used that yet
78:09 - i
78:11 - i will have to check that out though
78:15 - because that sounds awesome
78:22 - binary says but setting that darker
78:24 - value more than once feels dirty
78:37 - binary says only 96 of my country
78:40 - support hsla
78:42 - hmm
78:44 - i never even thought about that so is
78:45 - that an issue is a browser support for
78:48 - hsla an issue for for a lot of browsers
78:53 - i've ne i haven't come across it
78:55 - and what is there a fallback if that
78:58 - happens would it just fall back to the
79:00 - default blue link color then
79:05 - or could i do a fallback or i have like
79:07 - two color values and one is
79:12 - a hex value i mean i guess what would be
79:14 - the point i should just translate that
79:16 - into hex anyway
79:26 - binary says did you do an npm upgrade to
79:29 - get next 5.1
79:32 - uh what did i
79:33 - do
79:35 - well yeah i mean basically we use yarn
79:37 - so the equivalent in yarn uh that's what
79:40 - we did
79:41 - i be i'm pretty sure that's what we did
79:48 - uh darshan says can you specify margins
79:51 - uh in br tag for a particular breaking
79:53 - between two items
79:55 - uh yeah you you could um you could
79:58 - definitely style them you know however
80:00 - you want
80:02 - phoenix says uh
80:04 - br tags are almost appreciated
80:10 - or deprecated sorry
80:12 - um
80:15 - and
80:16 - no one uses them nowadays
80:18 - uh yeah
80:20 - yeah that's right i mean normally you
80:22 - would just add uh margins and things to
80:24 - your elements directly and instead of
80:27 - putting those brs in between
80:29 - i do see br's like
80:32 - like wysiwyg editors sometimes add them
80:35 - automatically so i i rarely see like
80:38 - code written by people that has have a
80:41 - lot of brs in them i'll put them in like
80:44 - in email templates and things because
80:46 - you kind of have to use old-school stuff
80:48 - for email templates anyway
80:50 - um
80:52 - so like you you will still encounter br
80:55 - tags
80:56 - out there
80:57 - uh
80:58 - but normally it's because they're auto
81:00 - generated by something
81:02 - uh but so if you do encounter them then
81:05 - yeah you can style them however you want
81:08 - but if you're creating the html yourself
81:11 - then you probably don't need them you're
81:13 - better off just styling like
81:16 - whatever components that you're going to
81:17 - put the div in between instead just give
81:19 - those components the margins or padding
81:32 - uh let's see
81:37 - binary says can you take out those br
81:40 - tags after each item tag and move css
81:43 - um yeah i mean i could take out the tag
81:46 - so i could
81:47 - either manually take them out which
81:49 - would take too long right now
81:51 - so i'm not interested in doing that
81:53 - right now or i could use a function that
81:55 - when the data comes in it just
81:57 - automatically takes out all those tags
82:00 - um
82:02 - but the easiest way and what we're doing
82:04 - right now is we just do display none
82:06 - so if anybody wants to look at the
82:08 - markup and dev tools it's going to look
82:10 - ugly
82:11 - but to the average user who's not going
82:13 - to bother to look at the code
82:16 - there's no difference between taking the
82:18 - break
82:19 - the br tags out completely or setting
82:21 - them to display none
82:45 - it's
83:04 - um
83:06 - i just read where michael was calling
83:08 - john mr john
83:10 - so that's uh
83:12 - a while back my daughter was on one of
83:14 - the streams my oldest daughter and she
83:16 - she called john mr john
83:25 - uh binary says how does it get from
83:27 - wordpress into next.js
83:29 - we we are using graphql so we have a
83:32 - plugin called wp graphql that we've
83:35 - we're using on the wordpress
83:36 - installation and then we can call that
83:39 - that graphql uh endpoint
83:42 - and we can query that
83:44 - using apollo so we have apollo running
83:47 - with next.js with react
83:50 - and so that we can we can query that
83:52 - graphql
83:54 - uh plugin running on wordpress it grabs
83:56 - all the data and sends it to us so
83:59 - that's how we're getting the data in
84:12 - slowly says i'm forced to just to use
84:14 - just the right side headphone because i
84:16 - can't be ignoring my wife i must make
84:19 - sure i hear her i i do the same thing
84:21 - sometimes i'll just pop up like one side
84:24 - here
84:25 - uh
84:26 - so i totally understand that
84:48 - uh
84:49 - let's see
85:09 - uh
85:11 - i got auto scroll down to the bottom so
85:12 - sorry i'm trying to find
85:15 - find the where i left off at
85:25 - uh
85:26 - yeah binary
85:30 - so uh binary is asking some questions
85:32 - and phoenix says you know that
85:34 - they could just watch some of the older
85:36 - streams which i mean that's cool um but
85:38 - i don't mind the questions because i
85:40 - assume like there are probably more
85:42 - people uh watching now and later on that
85:47 - are also new the stream so i don't mind
85:49 - explaining some of these things over
85:50 - again
85:52 - uh because it'll probably be helpful and
85:55 - i mean there
85:56 - there are a lot of streams right now so
85:58 - it's it is gonna be pretty crazy to
86:00 - watch them all
86:01 - uh maybe i should try to do a better job
86:03 - of explaining what's happening like
86:05 - maybe write up something that can go in
86:07 - the description to the video that's like
86:09 - just a um
86:10 - a summary of what we've been doing
86:13 - because even
86:15 - i mean i don't know that i've ever
86:17 - actually done a full summary in any of
86:19 - the streams
86:20 - so that might be
86:23 - that might be good to do
86:28 - i probably won't get to it today but
86:31 - um
86:32 - i'll keep that
86:34 - in mind as as something that would be
86:36 - helpful to do
86:39 - also i think the readme file on the repo
86:42 - does have a little bit more of an
86:44 - explanation as well so that could be
86:45 - help for anybody that's that's not sure
86:48 - what exactly we're doing uh check out
86:50 - the github repo that's linked in the
86:52 - description and the readme file uh that
86:54 - comes up the first thing you'll see the
86:56 - that'll come up does have a bit more of
86:58 - a description of like what technologies
87:00 - we're using and and uh what we're trying
87:02 - to do
87:09 - how many says why are you always testing
87:11 - on mobile size
87:13 - uh so i like testing on mobile size
87:15 - especially when i'm streaming for two
87:17 - reasons the main reason is
87:21 - we expect our audience to primarily use
87:24 - mobile devices to view this site so i
87:27 - want to design it
87:28 - while looking primarily at the mobile
87:32 - view or the
87:33 - really small screen size
87:36 - that way i'll make the decisions with
87:38 - that in mind
87:40 - if i did it at widescreen like as much
87:43 - as i would try to keep in mind the
87:44 - mobile it would not be the same
87:47 - and what i would end up doing is putting
87:49 - more on the page than can reasonably fit
87:51 - on a mobile screen
87:53 - so it would always feel like the mobile
87:55 - view
87:57 - is is like
87:59 - the secondary view
88:00 - but i want it to be off i want it to
88:02 - feel like the mobile view is primary and
88:04 - then the desktop is the secondary view
88:07 - uh so
88:09 - it's just kind of a different way of
88:10 - looking at it i mean i don't know that
88:12 - it's right or wrong it just depends on
88:13 - your audience and what what you expect
88:17 - what kind of devices that you expect
88:19 - your audience will be using primarily
88:22 - the second reason why i do it especially
88:24 - when i stream is because
88:27 - uh like we can see
88:29 - you can see a lot more of the dev tools
88:32 - here
88:32 - so i can make the font size larger and
88:35 - it still works
88:38 - so it's just kind of a practical uh way
88:42 - to to do this when i'm not streaming i
88:43 - can have this spread out on two
88:45 - different screens so i
88:46 - i could do full screen with the whole
88:48 - screen filled up with devtools stuff and
88:50 - it would be
88:52 - you know more doable that way
88:59 - uh
89:00 - [Music]
89:02 - spar wheels says is it possible to make
89:04 - this site just using html css and
89:06 - javascript any frameworks
89:09 - yeah for sure
89:10 - yeah you could you could definitely do
89:12 - that
89:14 - uh the tricky part would be though
89:17 - handling all the routing so like
89:20 - we have
89:21 - client-side routing happening
89:24 - so if you wanted client-side routing
89:26 - like trying to make that on your own is
89:28 - a bit tricky
89:29 - uh and then all the data like you would
89:32 - obviously not want to hard code all that
89:34 - data that would be huge like
89:37 - your code base would be
89:39 - insanely huge
89:40 - uh so you would want to be pulling in
89:42 - the data from somewhere so you would
89:45 - have to handle that
89:46 - um
89:48 - you know how are you pulling in that
89:49 - data you know probably using fetch um
89:54 - so it would there would be a lot of
89:55 - complicated things that something like
89:57 - react handles for you
90:00 - and then the same like if you're gonna
90:01 - pull in the data with fetch
90:03 - search engines are not gonna see that
90:06 - so are you going to server side render
90:08 - on your own
90:10 - uh so it's just like
90:12 - there's there's a lot of things that at
90:14 - first sight it seems like hey this site
90:16 - would be so easy to do with html css and
90:19 - javascript
90:20 - well
90:22 - okay it would
90:24 - except for these other things like how
90:26 - do you handle all the data bringing all
90:28 - the data over how do you handle um
90:31 - users who aren't don't know code editing
90:34 - data how do you handle server-side
90:35 - rendering how do you handle client-side
90:37 - routing like there's all these other
90:39 - issues that just like okay
90:42 - react just makes sense here because it
90:44 - takes care of so many of those other
90:46 - things for us
90:55 - let's see
91:00 - darian garcia says
91:05 - is this being uploaded elsewhere because
91:08 - i'm not seeing these questions on here
91:14 - i'm not
91:18 - i'm not sure what you mean
91:21 - so where what what questions are you not
91:24 - seeing
91:31 - and uh uh
91:33 - darian says yes moving forward i've read
91:35 - it's best to design
91:36 - uh mobile as first and that's where the
91:39 - market currently stands yeah yeah so i
91:41 - mean that's in general i think it's safe
91:44 - to expect that
91:45 - more and more people are going to be
91:47 - viewing the web primarily through a
91:50 - mobile device
91:51 - but there are still some instances where
91:53 - you may have
91:55 - uh users primarily viewing your site on
91:57 - a desktop like
91:58 - i'd say for instance um
92:01 - if you were designing an internal
92:03 - website for an organization where
92:05 - everybody was in an office setting
92:07 - and had computers like desktop computers
92:11 - uh they may be more likely since it's
92:13 - what they're used to to just access work
92:16 - related stuff on their desktop computer
92:19 - so you would check the analytics and you
92:21 - know you may have a situation where it's
92:23 - you know overwhelmingly desktop uh users
92:26 - so
92:27 - depend
92:28 - depending on
92:31 - you know whether
92:34 - people want to view it on their phone or
92:36 - that's anything desired then maybe you
92:37 - don't want to do mobile
92:39 - uh mobile first development uh for that
92:42 - so i mean there are still some cases
92:44 - where you may not want to but just in
92:46 - general i think that mobile first
92:47 - development is the way to go
92:57 - uh
92:57 - [Music]
92:58 - and nestle says uh you are too good
93:01 - thanks uh you're welcome thanks for
93:03 - watching
93:06 - uh idoc uh for the win says
93:10 - uh i really want to learn uh css and
93:14 - javascript
93:15 - um well cool yeah uh definitely check
93:18 - out the uh free code camps oh darian
93:21 - just said that all right so good advice
93:22 - yeah um
93:24 - check out
93:25 - freecodecamp.org and you can get free
93:28 - lessons uh that'll start you out with
93:30 - html you'll move on to css and then you
93:33 - move on to javascript it'll just keep
93:35 - building you up and you can learn a lot
93:38 - just through that it's a really good
93:39 - resource
93:41 - and feel free to ask any questions if
93:43 - you're ever watching this stream i'll be
93:45 - happy to answer you know answer your
93:47 - questions some of what we do will be
93:49 - kind of way beyond if you're just
93:51 - starting out learning it it might be a
93:53 - bit hard to
93:54 - do my best to explain it
93:58 - it looks like the
94:00 - the stream health is not great right now
94:02 - so i apologize if things are getting
94:04 - choppy i
94:06 - i hope at least my voice is still coming
94:08 - through all right uh since i'm not
94:10 - really coding right now that's that
94:12 - probably matters more than anything
94:20 - which that makes sense my kids just got
94:22 - home from school so odds are one of them
94:25 - started playing
94:27 - or attempting to play some videos
94:39 - she's
94:48 - let's see
94:51 - uh idoc says do i really need to learn
94:53 - html first i already know that
94:56 - uh no you can you can skip over so you
94:58 - don't when free code camp you don't have
95:00 - to uh do all the lessons right in a row
95:03 - you can skip around
95:04 - so
95:05 - um
95:07 - i don't know i'm the type of person that
95:08 - i usually just start from the beginning
95:10 - i it just like feels right to me to
95:12 - start from the beginning
95:15 - and i i usually just fly through you
95:18 - know the basics but occasionally i do
95:20 - pick up some
95:22 - some piece of information that i missed
95:24 - you know i just never knew or maybe i
95:26 - had just forgotten so i usually do get
95:28 - something out of the basics but
95:30 - it's probably like mostly a waste of
95:32 - time
95:33 - uh so
95:35 - yeah that's entirely up to you whether
95:37 - you want to go back through html stuff
95:38 - or not but you definitely don't have to
95:50 - oh and it looks like phoenix
95:54 - and um
95:57 - uh darian also had similar similar
96:00 - thoughts there about you know it really
96:01 - doesn't hurt to go through uh the html
96:04 - stuff again even if it's just a
96:05 - refresher
96:11 - oh michael says i i restarted and uh and
96:14 - beat free code camp because it added
96:16 - some new things
96:17 - cool yeah i'm gonna have to check out
96:19 - the new stuff on free code camp as well
96:20 - it's been quite a while since i've done
96:22 - any of those exercises
96:28 - darian says this is amazing i subbed if
96:30 - you need help with documentation i'm
96:32 - more than willing to help just send me a
96:33 - ping
96:34 - oh okay cool yeah um
96:37 - you know darian i i definitely welcome
96:40 - help for sure um if
96:43 - check out the repo and if there's any
96:44 - place that you you want to help let me
96:47 - know maybe i'll open up some issues
96:49 - having to do with documentation
96:51 - um
96:53 - you know i'm definitely open with that
96:54 - and i'm open to
96:56 - help out like help try to find somewhere
96:59 - for you to contribute if you if you want
97:01 - to
97:08 - uh divya says how much do you recommend
97:11 - to learn vanilla javascript and then go
97:13 - on with node.js and react.js right now i
97:16 - learned node and i want to move on to
97:19 - react or angular 4 please god i mean if
97:22 - if you've already learned node then i'd
97:24 - say you're probably fine to go into
97:27 - reactor angular i mean i obviously
97:29 - prefer react but there are a lot of
97:31 - people uh good developers that use
97:34 - angular and build you know cool stuff
97:36 - with it
97:37 - um
97:38 - but yeah i
97:40 - you know if you understand node then
97:43 - i don't think react will be you know
97:45 - that difficult for you uh to to work
97:47 - through
97:53 - uh let's see michael says is there a way
97:55 - to find out what files are importing a
97:57 - function from another file like which
98:00 - files import from init apollo
98:05 - um
98:15 - i mean you should be able to see let's
98:17 - let's check it out
98:18 - where's
98:27 - where is where is this and initial
98:29 - follow where do we have this at
98:56 - all right where do we have
99:06 - there we are and i thought it was by the
99:08 - queries
99:09 - okay so in init apollo
99:11 - i mean we should be able to see
99:17 - everything that's being imported should
99:18 - be up here
99:21 - so we we shouldn't be able to use
99:22 - anything down here that isn't already
99:25 - being imported from up here
99:27 - um
99:29 - and then if it's a particular function
99:32 - from something up here then we would
99:34 - need
99:38 - like so for instance like this in-memory
99:40 - cache so we're using in-memory cache dot
99:42 - restore
99:44 - so like the dot restore obviously we're
99:46 - getting from in-memory cache does that
99:48 - make sense
100:06 - is it possible to
100:09 - get a job after completing free code
100:11 - camp's front-end certification uh yeah
100:13 - people have
100:14 - people have done it
100:16 - uh i would say i mean the important
100:18 - thing is to make sure that you have a
100:20 - good portfolio and have really like
100:22 - built some things
100:24 - contributing to open source projects
100:25 - helps a lot
100:27 - and i mean applying to a lot of places
100:29 - having a good resume
100:31 - and a good
100:33 - like good connections really help so
100:35 - there are a lot of other factors that
100:37 - would go into getting a job but in terms
100:39 - of learning the skills you need to start
100:42 - building things
100:44 - your front-end certification will
100:45 - definitely give you a bunch of those
100:47 - skills and then you'll pick up a lot
100:49 - more on the job
100:50 - uh but yeah there are like on the free
100:53 - code camp forums
100:55 - there are a lot of people who have said
100:57 - that they've gotten jobs after going
100:58 - through free code camp so
101:01 - some of them just front end some of them
101:02 - the whole thing like and everywhere in
101:04 - between
101:20 - uh me says right now i have to complete
101:22 - the advanced algorithms and the advanced
101:24 - projects and it is going well i guess
101:27 - but i don't know where to look in order
101:28 - to get a job uh yeah i mean there's
101:33 - check out
101:34 - i think where i look
101:36 - uh
101:37 - stack overflow uh jobs has a lot of of
101:41 - good
101:42 - job listings for developers
101:44 - linkedin has a lot of job listings so
101:47 - just between those two places you'll
101:49 - find a ton of jobs
101:51 - uh
101:52 - yeah i would i would try there first and
101:54 - just
101:56 - everything
101:57 - that
101:58 - you're even remotely qualified for apply
102:00 - to even if you don't meet all the
102:02 - requirements still apply
102:04 - because you you never know maybe
102:06 - they won't get anybody that meets all
102:07 - the requirements
102:09 - uh so it's it's always good to try
102:13 - at the very least you know if they give
102:14 - you an interview
102:16 - even if you don't really have a shot
102:17 - you'll get practice interviewing you
102:19 - know you'll make some connections at
102:20 - that place so it's it's always worth it
102:23 - to apply
102:34 - yeah uh so michael
102:36 - yeah in terms of finding out where all
102:38 - these things are i i don't really know
102:40 - of any other way
102:41 - to figure out where they're all coming
102:43 - from i mean to me like
102:45 - as soon as i saw the question i i just
102:47 - thought like hey we'll just see where
102:48 - the import is stuff is coming in
102:50 - um
102:53 - and then that would
102:54 - at least point you in the right
102:55 - direction where those files are
103:01 - uh me says thank you you're welcome
103:03 - you're welcome i hope it helps
103:11 - uh michael said the stream cut out when
103:14 - i was starting to answer the question
103:16 - oh no
103:17 - uh michael
103:21 - you may have to uh watch the recording
103:23 - then if you can't see this um
103:26 - but you know if you go into the init
103:28 - apollo.js file and you check out
103:30 - everything that's in the top here where
103:32 - it's importing from you know then you
103:34 - can see
103:35 - like where a particular function is
103:36 - coming from like the restore function is
103:38 - coming from the you know in memory
103:41 - uh cache which is coming from the file
103:44 - called apollo cache in memory
103:47 - so
103:48 - um and then if you hover over that it
103:50 - actually shows you where in the project
103:52 - that is
103:53 - so it's within the node modules
103:56 - so that's
103:58 - that's how i would go about finding
104:00 - stuff
104:04 - all right and i've reached the bottom of
104:07 - the live chat
104:08 - uh so here we go we're gonna come in
104:11 - right at about an hour and a half for
104:12 - the stream so
104:14 - i had uh i think i had said we were
104:15 - gonna do about an hour an hour and a
104:17 - half so i guess i'm right on time here
104:19 - uh
104:20 - thank you all for watching thank you for
104:22 - all the help and advice and i had a lot
104:25 - of great questions and answers in the
104:27 - live chat
104:29 - today is friday so
104:31 - i
104:32 - i hope you all have a great weekend
104:34 - i will probably be back monday
104:37 - uh
104:40 - probably like in a stream earlier in the
104:42 - day so maybe like a
104:44 - morning stream for eastern time zone
104:47 - um
104:54 - [Music]
104:56 - oh sorry so uh i
104:59 - il yes or else
105:02 - i'll work on that remind me in the next
105:03 - stream about how to pronounce your name
105:05 - correctly and i will definitely uh
105:08 - definitely do my best to remember that
105:10 - um but anyway yeah again have a
105:13 - wonderful weekend
105:14 - uh i will see you all
105:17 - on monday

Cleaned transcript:

hey everybody welcome to live coding with jesse i'm jesse and today we're gonna do some css work uh just like we did two days ago on the live stream so we're gonna uh style a different part of uh of a different template but it'll be the same same basic process we're going to check out what the markup looks like that we're given so we although we do have control over the markup uh there's we would have to edit it in a lot of different places so it will make more sense for us to just style it as is for now to get things ready for launch and then afterwards we can think about okay now that we have more time what's the ideal format for this content and then we can change it or hopefully more likely i can get some some student workers so since we're doing this project for university we can get some student workers to to format the data properly since that's something that you know you could be trained to do on one or two of them and then do the rest you know really without supervision so that's the plan today i um i expect to do for the stream to be maybe like an hour an hour and a half i will warn everybody the last hour or so i've started to feel like not really good so i hope i'm not getting sick but uh to be honest with you i didn't eat anything for a long time this morning and i just had coffee and then i ate a bunch of gummy bears and then since i'm so smart i ate chocolate after that and then i decided to eat real food so it's probably my own fault for eating like nothing and then eating junk food so anyway hopefully i i'm all right i apologize if uh through my own fault i i can get really sick josh's great diet yet i know it's a terrible diet i um i was talking with somebody another developer on instagram and um uh they were talking about this bulletproof coffee i don't know if you ever heard of it but uh i had tried it a long time ago it's like coffee mixed with butter and like coconut oil or like other oil that's like basil coconut oil right you you blend it all up and um and then you drink it and it's supposed to it's supposed to like induce ketosis which like gets energy right to your brain a lot better uh and you feel full after you drink it you don't need to eat so i said i was up at like two o'clock in the morning so this this was really this is like three o'clock in the morning i said you know what like i think i'm gonna try it and then later on i took the kids to school i said okay i'm gonna go to the store and get all the stuff and then i'll i'm gonna try it i won't eat and then i'll um i'll let you know how it goes so that was my plan uh and it went pretty well until i ate all the junk food and then uh after that i started to feel not so good so i don't know if it was the bulletproof coffee or this junk food i'm guessing it is probably more like the junk food but the coffee itself was was pretty good so anyway let me get started enough about my terrible diet today uh we're gonna get started for those of you who are new to the stream uh this is the format i do my normal everyday work uh that so i'm a frontend developer i work fulltime for a small university we're working on the university's main website of transferring it from an old content management system to a react based system so um right now we're just going to work on some css in that part of it but if you want to see the whole process start to finish there's i think this is video number 54 so we've done quite a lot to get to this point so it's totally understandable if you have questions and uh feel free to ask you know as many questions as you want and it looks like there's some problems with the stream what is the issue with the stream all right not sure what's going on with the stream hopefully y'all can still at least hear me video might be choppy now i'm trying to figure out what's what's messing this up right now um but anyway we split things up in a pomodoro session so i'm gonna do a 25minute session where i mostly code don't really look at the live chat too often and then i'm gonna take a break i'm gonna answer questions in the live chat and then we'll do another 25minute code session and then after that we'll take the whole rest of the stream to uh answer answer questions so uh we're definitely beginner friendly so don't feel like you know you're this isn't the place for your question it definitely is uh and we'll do our best to help you out give you an answer at least try to let you know where you could find an answer okay it looks like the stream is back it's back up i don't it seemed like the internet almost just like cut out it's possible somebody else in my i'm i'm working from home right now somebody else in my house might have been playing like uh youtube or netflix and messed it up oh john says it could be the weather yes that's true it's been really windy lately around here and i know like i haven't had a power outage yet but there have been power outages elsewhere so that certainly could be affecting things all right so let me make this bigger because i know this is way too small for anyone to see and let's start the pomodoro session uh it's probably still too small let's make it a little bigger there we are and actually i was doing a little bit of work on the server file so let me commit what i've done there before we get started okay uh i did do a little bit of extra work styling the page we were working on on the last stream so nothing major if you want to know what what else i've done check out uh the latest few commits the uh link for this repository is in the description and so uh we're just doing a basic get ad if you're familiar with git if you're not familiar with git this is just a way to track all the changes that happen in your code that way everybody else can see the progress but you can also if you mess something up you could very easily revert back to a previous state in the project so that's why we use get and uh so i'm just saving the project at this particular stage with a little note about what changed in the project that'll give us like a nice like save point to go forward and that way if we really mess anything up we can always just go right back uh to this point so i get it's good if you're familiar with like video games and they have a save point at the game uh in in the middle of a level or something like that's a good way uh to like basically think of git is creating lots of little save points in your project that you can easily uh go back to oops yarn cm all right so if you notice the stuff going on in the terminals a little bit slow that's because of the the streaming software that i'm using uh it shouldn't be that slow on your machine unless maybe you have a really slow machine already uh so let's see okay all right so while that does its thing we can get started uh with me showing you all what we're gonna be working on today so let me move this over to the screen here we are okay so this is a department page so the last time we were working on a major page for major or uh program so originally i'd called it a major page but i've come to find out that actually the the better term to use is program so if you hear me use those words interchangeably then i mean they mean the same thing for us for this project so this is a department page and in the department pages we we now have this section here which is links let me show you what it looked like on the site let's see i have this open on another screen but i did there we are so here's the site as it is right now the old version of the site i didn't want it to be on a different screen oh well uh so we've got we already have this section that's uh that we brought over and that looks fine this section we're just going to leave out for now the core curriculum has been around for a while i don't think we need to say anything say this on every single department page uh we already have all this data saved as a post type so we're going to put this in but we're not going to worry about that today in the same way with videos we have a lot of these videos already saved i i don't think we have them categorized yet but once we get them categorized it'll be pretty easy to pull these in and display them on the proper pages so all we're worried about today is getting this data that shows up here you know in this little block in this menu and now we're going to try to take so this is what what has come through which looks a lot different than how it's displayed otherwise uh and we're going to try to style this in a way that makes sense and that is going to be able to be applied you know across the board on all these department pages so first things first let's check out what markup we have here i mean already looking at it i'm seeing that everything's repeated there's the actual link and then there's the i guess the title uh which it looks like they're the same so we ought to be able to just completely hide this text title and then just keep the links and style those uh how we want to style them so let's see how this is and i'm gonna let me make this a lot bigger for you all cause i'm sure it's not that easy to read let's see if we can go up one more okay that should work and gonna move this down a bit about let's let's make this very small there we are that'll give us a lot of space here so hold on my music in my headphones is really loud it's distractingly loud so let me turn it down a bit okay that's that's better um okay so all right the heading is there the heading's fine it wouldn't be a bad idea if we act if we did have a heading though uh up here we'll have to add that in so we'll see the primary focus right now is getting this styled if we have a little bit of time before the stream's over then maybe we'll make sure that we get a title here for all the department pages uh if we're not already using a department page template then we may even want to create our own template for that but we'll um we'll get to that when we need it and what just happened i don't know why it refreshed maybe i clicked something i'm not sure all right so the heading's fine well i'm sorry the uh this h2 is fine for now uh the headings here i think we can completely get rid of and then what we'll keep is this so let's let's hide these so it looks like there's nothing else with a heading uh on this page and i just want to double check up here make sure there's no title hiding out here and it looks like there's not okay um yeah so first things first let's hide all the titles and then see what we have see what it looks like obviously we're gonna have to style this what's this department menu department menu oh okay so we we have this data here as well i don't think i have this data all together for every department yet but the plan is to put it all together so um yeah so if we have time maybe we'll work on this little section here as well it's displayed as a totally separate part of this which makes sense like these aren't programs um yeah okay so i guess we can we can test this out right here uh in our in our dev tools and so let's go here and just add i'm going to add this in we're going to say display none there we are and so that's taken away all of these we've already we have these break tags here but i believe we're already displaying none on those um so we don't have those we're displaying on these link tags which is fine that's it's as it should be where's our content yeah uh the markups messed up it this is just how it was automatically done in the old content management system so uh if you're looking at this markup and saying like what is this stuff then you're entirely right in thinking that it's definitely not ideal um all right all right let's work on all right so each one of these is wrapped in an item okay let's work on this item then and then we can style the uh the a tag inside of it i want item all right if anything i'm doing in devtools if you're not sure how i'm doing it just let me know um you know i know if you're not familiar with devtools then it may not really be obvious how this this stuff's working uh but i'd be happy to uh to explain it so if you put it in the live chat now i'll get to it as soon as this pomodoro session's over which will be in 15 minutes okay so for the items let's say display block and that'll make this these will all appear like on top of each other here's different programs so already that looks a lot better now let's go here to these a tags so there's no other a tags on the page right now so well except for down here which i'm not worried about these yet so i'm just going to style these as like just regular like a tags but what we'll want to do though is make sure that when we do the css we only target a tags that are inside these item tags that should be specific enough that it it wouldn't apply like let's say if there happened to be some inline links that it wouldn't mess those up all right so we first thing we want to do is um uh text decoration none that'll get rid of the underlines let's make sure our font size is is a decent size so let's do a font size at least 18 pixels there we are uh that's nicer let's do 18 pixels and i'm not a huge fan of that color line height 1.5 there we are okay so we bump the line height up to 1.5 which which gives us a nice spacing here i don't know that we've decided on a standard color for links for this site yet let's see what let's see what colors we can we were using that gold weren't we um let's see what was that i can't forget the hex value or i can't remember the hex value for that uh let's i can grab the hex value from this header area who grab that and then let's do color and let's give it that gold color and see how that looks all right what do you all think gold color for links do you like it do you not like it is it too light it definitely matches with the color scheme more it doesn't stand out as much but it i think it's okay i think i'm gonna try to keep it like this that way you all get a chance to look at it more i can look at it more and then i'll be able to get feedback later on to some other people that i from some other people that i work with all right so let's keep it like that so i think the other things that we've done i can just remember and put that in the css but i'm going to copy this uh since we have a bit more for this one let's go over to our code now and let me get rid of some stuff or shrink some stuff that we really don't need and let me let's see i want to make sure what we're using make sure i'm using the right template for departments and this is okay no we're actually using the page template for the departments right now was this the one that we had trouble with oh i see um this template we were using some old styles with okay all right here's what i'm gonna do we're gonna make if we don't already have one we're gonna make a uh css file for department pages and then on another stream or maybe i'll just do this on my own we're gonna convert this to use the latest version of apollo and the newer way of getting data from graphql which this one's using the old way when we started this project the the newer way wasn't available yet so we're just going to forget about this for now because i want to keep this mainly about css and we'll work on that later and for now let's just go in here to our styles folder and we're going to do department dot css all right so now we have that and uh let me do what did we say this would be item in uh a tag right it was an a tag yeah and then we're gonna put that in there and our indentation is not great we'll fix that okay and then we have the headings right yeah our heading is going to be display none and finally we took the each item and we gave that a display uh block okay so i think that was all we did for a css a pretty basic so far and what we'll likely end up doing is taking whatever css we have here for page.css and we're going to use that in our department css kind of as a base and we'll get rid of what we don't need and we'll change what we do need but for now i'm going to put it in here since we will need it although you see in a second it's really going to be unnecessary because what we'll do here in our page template which is what we're using right now for department pages temporarily where is this page.js so we want to keep page.js uh as like unopinionated as possible in terms of style because this is our default like fallback for content that we don't really have any uh specific styles for so we want it to be able to work uh just basically like display text nicely and not mess things up too much so i don't want to keep it like what i'm about to do here uh for too long but it should work just for now just to test things out all right let me check my time to all right we've got time we'll definitely be able to see if this works so i added another link tag as you can see here if you're used to just regular html and not necessarily react uh just think about like we we have our head tag and then inside we have our link tags where we were importing css so that part should be very familiar and so in addition to page.css i'm going to put this department.css file that we just created right and that's lower down so given the cascading nature of cascading style sheets of css this will override whatever is here okay so you can see why everything we just copied over it's kind of pointless right now because right we already have it on the page uh but this way it'll just be one less thing that we have to remember to do when we do um split this out uh you know this component and update it so that it'll work with what we're kind of like the latest uh stuff that we're doing with apollo if you're interested in the updates that have to do with the latest version of apollo we did a stream on that a while back so if you just kind of scroll back through through the playlist of what is it project 5 playlist you should see some streams about apollo like upgrading and and um that way you'll get the latest so if you have used apollo before but you're not really up on the new things that'll be kind of a nice stream because we don't cover everything apollo does just the latest stuff just the changes and just kind of go over how we update existing apollo uh code to that uh that latest stuff so you can see here like we're using this query element uh this query component okay so let's save that and make sure save it and i just want to make sure i saved this as well i think i did but it has happened before that i've thought that my code wasn't working and the real problem was that i never saved it all right so we're going to go back here and we're going to hit refresh and hopefully all our styles still stay alright wonderful it works let's double check and make sure that all our styles are working and they're not being you know overridden by anything so it does it looks like yeah all these work obviously uh the things that we've set to display none are are displayed on and we don't have to test that we can just see and our display block is working on our items the only thing that's different is now we see that these a tags don't have the styling that we applied so this is this might be a good time to apply as a standard for all a tags the text decoration none and this color so let's go back and do that now at least at the very least we can do that in in this file and then maybe in our page i am going to have to so we are we do have some global styles i don't want to get into that though because this is for basic css so uh for those of you that are more familiar with react and material ui and what's going on with our project the better place to put this what we're about to do is probably in uh those like the global styles that we we have uh coming uh from material ui uh sorry about the stream quality here it's kind of dropping out uh we're really sorry about this i haven't i don't know what's going on let me double check my machine really quick because there's maybe i have something running that i just don't i didn't realize i had running maybe it is my internet connection all right on one of my other screens i'm gonna run a speed test really quick just to see if the connection is fine then i know it's something on my computer uh but if the connection's bad then i'm not gonna be able to do anything about it right now and i may as well just try to continue as best i can with the stream all right so speed test is running right now um over here let's just pull out this and we'll put it for now i'll just put it right here and all we need really is this i'm going to save that and then since we had let's see we have open i'm just going to paste this in a few of these other places for now okay so let's save that and let's say this okay the the upload speed is actually a bit slow right now from what i should have so it's possible that uh that the internet is the issue so hopefully we don't have too many uh more issues here all right my timer went off so let's do it at five minute break here i'm gonna go back to the the chat i'm gonna scroll all the way to the top and just try to work my way down let's see if i don't get your question during this break then just hang on i'll get to it at the uh after the next pomodoro session so hey i there are a lot of people saying hi hey everyone thanks for watching rjpd geeks point says why you are all time i'm i'm not sure what you were trying to say it seems like maybe there was a word left out there so if you're still watching uh let me know what what you were trying to ask there i see a few more of you are saying hi asking how it's going uh not bad actually i'm feeling pretty good now it's going going well uh dinan jay says how can i make a page responsive without using any frameworks um yet media queries so um phoenix mentioned that um yeah media queries so let's just let me show you we have some media queries going somewhere in here right where are they here we go all right so like this you know so we'd have a media query so right now this is a little bit of responsive stuff here so when it's when we have a small screen oops where are we at okay when we have a small screen the width of our main container is 90 but then when the screen gets bigger than 600 pixels we only display 70 all right this makes sure that our content isn't spread out really far on wide screens but then on small screens we want to make sure that it doesn't have too much padding and becomes like all squished and really hard to read so that was just like a very simple example of using media queries for responsiveness so if you're not familiar with media queries definitely like look up the syntax and uh so like mdn is mozilla developer network is a great place uh to look up syntax for for different web related things and just copy and paste some of these for a long long time i could not remember how to do media queries from scratch i had to copy and paste them all the time and even now occasionally i'll forget the exact syntax so um yeah like don't don't worry like if you don't get it right away it took it took me a long time and um you know they're a little tricky uh solely as how do you get your developer tools to be so dark couldn't find the option okay let's do this real quick because uh so if you're in your dev tools in chrome and you go up here to this menu this three dots and you click it you go down here to settings i guess you can get there by pressing f1 as well you go to settings right here in preferences under appearance for me it's the third option here i'm assuming it'd be the same for everybody you just go to the theme and you hit dark theme so by default it's this light theme which is too bright for me i like the dark theme dark theme for everything uh so i switch it to dark that's a lot nicer i think a lot easier to look at so that's how you get the dark theme see uh hammy says the gold looks good but a little darker is better okay cool maybe we'll um we'll mess with the um kind of the darkness there for that maybe we could go a little bit darker and make those links pop a little bit uh fruity spirit says how many more sessions are you going to do in live streams um if you mean sessions in this stream we're going to do one more pomodoro session if you mean sessions as in like live streams i'm gonna keep doing live streams till nobody wants them anymore i guess um so for this project i have no idea how many more streams it's gonna take but i mean we may like eventually this project may just turn into more like maintenance mode and we'll just come back to it every once in a while and then we'll move on to another like main project all right let me try to do that uh i'm gonna stop here and i want to make sure that i remember where i left off at so i'm going to mark this down okay uh let's go back here let's do our pomodoro and i'm gonna do one more session i'm refreshing this to make sure that this is applied okay so that is applied let's take a look at this color though and let's see if we can make it a bit darker so i'm going to click this color oops in dev tools i'm going to click on the actual like the the box that displays the color and if we go in here and we shift this we can see like the rgba but i want to go to the hsla and which one are we gonna do hsi is it this one a light so if we change this l value would it what is this like hue saturation is this light i don't remember what all those are i can't remember what everything is i'm not like a designer uh you know i do some design stuff but basically this l value will give us the color will basically be the same but it just makes it a little lighter or darker so if we go a little darker here and then we check it out see now we have this hsla value and if that's the value we want if that looks it definitely looks darker just comparing it from here to here we can go with that and we could take this out and now in our code where do we have this here so in all the places where we just had this and we can now change it so we'll save it there let's save it there oops i wanted to completely get rid of that oh that didn't work out i wanted let's make sure i did it right here i did and then finally our department css is going to be oops there we go so now everything is that darker value and if we refresh we should be able to see what it looks like even in line oh no i just saw it said the color um the color picker thing is uh hidden behind my face ah sorry about that okay but that definitely is darker okay so we'll keep it like that for now i like that idea we've done that in previous projects before never with this color but with a different color and it worked well to make things more readable all right let's see all right what were we gonna do next this part i think we're gonna style this part next i do want to take this this title here yeah this is too much space between this title and this so let's see let's give it a margin bottom of 8 pixels all right that's nicer i like that better give it a font weight of 400 yeah that's different yeah and then what color is this um let's do our color as and i forgot to write rgba okay all right so this is what we're gonna do for our h2 title uh basically what we've done is we've decreased the margin on the bottom because before it just kind of was there it didn't really look like it belonged to this list we also decreased the font weight the font weight was a little heavy it was kind of overwhelming and it stood out i think too much on the page and then we also uh changed the color so i believe i couldn't find the value but from looking at it it looked like it was solid black we changed that to be um black uh with an opacity of 87 okay and that's what we did here with the rgba value uh and that softens the black a bit it's still very readable if you look at it it's like okay that's still black but it definitely makes a difference um and that's that's the standard kind of black value for uh material design okay well we rarely ever use uh like solid black alright so let's grab this value and let's add it in uh put this all right i need to get like auto format for my uh css that would be helpful and i'm gonna give it a refresh just to make sure that's all working okay looks good all right now we can get down to this part here and uh we'll style this a bit so department menu apply all right phil let's do it just like we did with this section first thing we're gonna do is just see what we're dealing with uh in terms of markup mobile title okay so we definitely hmm let me think about it so the first thing we have here is uh and apply link do we want the apply i will leave that in for now yeah we'll leave that in for now i guess it makes sense to have an apply button you know down here somewhere link text faculty classics that's odd all right so let me um let me just think out loud for a second here so these links we have linked text as a separate element but then within the a tag the name doesn't match up with the link text so this says classics but what we really want is classics faculty they have the summer ancient and biblical languages institute and that that does work okay here's what i'm thinking i'm assuming and maybe i'm wrong here but i'm assuming that every department page has a link to that department's faculty and that link is going to follow the same structure of being name of the department slash faculty if that's the case we could do something very similar to what we did in the last stream uh where we didn't use what was given to us from the markup and instead we created our own element in react that created that that link for us and then we didn't have to use the markup that was given to us that would solve our issue here of having to somehow use this link text um instead of the text that's within the a tag so we'll do that and then summer ancient biblical languages institute yeah we definitely need to keep this and then for the apply link there we definitely don't need to pull in the apply link from here we know what that link is it's going to be the same on every page all right this is this is going to be tough because i don't even really want these links i just want to hide these links and create elements and react for those but i want this link let me see you know let me bring over another example of what's happening here uh so let's see let's see what the business department has are you serious we don't have a business department page oh i know what it is it's a weird url um it's like something like that what is it um i just have it oh there's only one c okay all right so we have the faculty link here and then we have this mba four plus one program hmm all right i'm gonna check the uh chat quickly to see if you all have any um any input on this see all right so yeah uh binary 64 is saying do last of type the only thing i'm thinking is it's not i think there are some programs that have more than two here so they'll have multiple ones so it won't always be last of type all right uh i'll just have to here's what i'm gonna do and i i probably won't do it on the stream right now because we only have 10 minutes left and i just want to stick to css but what i'm going to do longer term i'll just have somebody go in and remove all those links because we don't need them short term what we can do is clean the data as we as it comes in so what we can do is put a function in in our component that searches through this data and finds this apply now and so basically the call to action stuff we can take that out cta link we can take pull that out that's not going to be a big deal we can do that with with css and just hide it um then for this one we can take out faculty and we can take out uh any a tag that is linking to faculty right so we're we're just gonna search for that and and remove the stuff so it'll be a little tricky but once we get it working like it should be fine we've done similar things in other components already and then basically once we remove those two everything else that's here will be okay and that will want to use it so for right now i'm just going to style this and just make sure that you know we get rid of this stuff at some point uh so let's see how we want this to look so first of all these menu items should be display block okay great and then even department menu yeah we you know what let's keep this title oops display block and we're gonna font size let's go 24 pixels and font weight 400 there we go all right not exactly like this but now that i look at it uh this could probably be made a little bit smaller so i'm okay with this for now uh then apply now apply we're not going to worry about these ones we need to get rid of the link text so anything that's linked text is going to be display none great and then anything that's an a tag inside of a menu item which so we can do now like menu item a is gonna be um font weight let me put this 400 okay all right so not bad and remember you know this supply now won't be there classics won't be there so essentially the apply button if it is there it'll say apply this will say classics faculty all right not bad so i mean that basically matches what we have here okay so let me move this trying to remember what we did all right menu items are displayed on our display block our let's make our cta text and link which one had the mo this one had the most right all right we'll start with that okay so we want our menu title and then i'm going a little bit fast here because i know we're running out of time for this pomodoro section menu item menu item get that yeah any item and then cta text cta link a display none set and then menu item a actually let's do item a and then that should be it i think that's everything that we did let's refresh just to be sure nope i forgot one thing and what was that the item link text that's it all right so we want to do link text okay why did this not uh you know what i didn't add the uh weight the correct weight here font weight 400. there we go all right so now that's going to be fine that'll give us what we wanted should did i mess up the name for this mobile title yep i messed up the name mobile title okay let's check our time awesome just in time okay so i went through that kind of pretty quickly and uh what we did was i just took advantage of when we were already using those same styles instead of typing the styles out again we just added you know just with some commas we added in uh some more element names for our display none for display block and for uh how we style those menu items which are links the only new stuff we had to add was this mobile title which really we probably could have used something similar to what we're doing here but i mean overall okay yeah i say that i mean that's it's not perfect but it looks a lot cleaner it looked broken before basically i mean it looked broken if you remember we had duplicated texts all running across the page now that looks like it's supposed to be like that you know whether or not someone thinks that this is a good way to do it or it's a pretty way to do it it looks organized like it was it was meant to be like that uh which is better than broke all right cool so my timer's up there i'm gonna get started with getting this all up to github and while that's running i'm going to go back to the live chat sorry i'm going to go back to the live chat and answer some more questions so first thing what happened looks like the last time i tried to do this it timed out the endtoend test timed out uh i didn't even notice that okay um all right so let's try let's run this again we're gonna retry that last one hopefully it'll pass so while that's running i'm gonna scroll back to our left off at which for me was the time stamp uh 2 25 p.m eastern time and have you tried the new atom uh i have not used adam in a while so uh no i guess not what's um what's new okay phoenix is asking what would i say adam i used to use adam all the time like for years i used adam and i really liked it but um if you're using it on a computer that was really fast and powerful it was fine but it was a little sluggish you know on on a computer that wasn't so powerful visual studio code seems to be more performant so it's a little bit quicker so i've switched to visual studio code i really like it there's a lot of nice features i mean really in terms of features it seems like you can get plugins to do the same thing for atom and visual studio code if you want to so it really comes down to the performance and visual studio code does seem to be a bit quicker even though adam and visual studio code both run on electron for whatever reason you know the team that worked on visual studio code was able to get better performance out of it i have heard some of the reasons why but i'm not going to get into them now because to be honest with you i'm not knowledgeable enough about electron to even know if those reasons are are reasonable um he says a stands for anchor yep yeah it's an anchor tag okay john says the link styled in the gold color alone doesn't really say click me i'm a link okay it could be missed i'm gonna take that in consideration uh i'd like to do at some point some tests where i can actually watch users and what they do so i'm going to make sure i i think about that when i'm watching them so basically i i like to just have users sit down and i tell them nothing about the site and i just want to watch what they do first where they go where they scroll what they click so if i notice that users are clicking on things that are gold then probably it's not going to be a big issue but if i notice that they're always scrolling past and never clicking then i think we'll have to we'll think about changing the color or at the very least changing the color of the links that we really want users to click on like apply and donate would be the the two major links that we want people to click on and did it did it again all right so the tests aren't really failing they're just timing out because i'm running my streaming software i'm running obs so it's it's making everything else slow okay uh then let's just run get commit um no verify um okay so what i just did there uh not you don't really want to do this too much but i bypassed the test and so i did a manual commit and i bypassed the test because i know that what we just did should not mess up the test right we can see that it's that it's working here right all right so now let's check the status and we'll do a get add and we're going to do git commits and i'm going to bypass it again just so that because i know the indian test will probably fail uh just for timing reasons having trouble spelling today uh m so then the no verify flag is that's what skips the test and then the m flag is what allows us to write a commit message in line so we're gonna say and um we'll check the repo in a minute uh when this gets pushed because we have this um you know what i take it back i was gonna say we have the same test running now uh with travis on github but we actually don't have the endtoend test working yet with travis so that that wouldn't test but i was gonna say we would have like a backup there we will eventually uh ray cubin says hi how often do you use uh tomato time uh every day i use it all the time even when i'm not streaming i i still time myself with it it says uh he also says does it really work um yeah i think the pomodoro technique is very helpful so i i definitely recommend it uh darshan asks is jquery a way to update css elements or are there any other uses of the same uh yet you could update css with jquery you could also update css um with with regular javascript if you wanted to and there are even ways to do css with javascript in the context of react there's actually a lot of different ways to do it heidi says is it good to use frameworks like react or do the job with css uh i really like doing it with react and if we were just writing like react components and not having to deal with all this like data that is coming with this weird markup then we would be doing all the css like in a more react friendly way using one of the variety of options out there for css and react uh but because we have this kind of unique situation where we're dealing with data that's being pulled in we have to do it i don't know that we one of the easiest ways for us to do it is just using regular css in linked style sheets so i'm not saying that's the only way but that's kind of the most straightforward way for us to do that right now and it is ultimately just a temporary way to handle things uh for now um binary64 asks is that next 5.1.0 actually i can't remember what version we're running we have been keeping things pretty up to date let's check it out i believe i have my package json open over here yeah so since i i just pushed all that code to github everything that we've done today is available uh in the github repo so the link's in the description feel free to go check it out uh you can use the code for whatever you want uh it's open source you can even submit pull requests to this project if you want to get some practice in or help out where's uh next yep 5.1.0 um he says don't stop the live streams jesse everybody likes them i have no plans to stop in the live streams um alexander says keep on with your live streams i like it a lot cool yeah i i'm pretty sure i've said this before but i will continue to do live streams um one for as long as you all think that they're valuable and helpful to you and also as long as i can like i have time to right now my boss is very open to me doing live streams like while i'm at work either working from home or working in the office as long as that doesn't change it should be pretty easy to keep live streaming if that changes it'll be a little bit more difficult uh because i'll have to do it outside of my normal work hours i still want to keep it going though i'd still like to make it work but the times that i stream will probably be a little bit weird at least for my time zone uh so the stream may be like five o'clock in the morning so i can get a stream in before all my kids are awake or something like that uh abby schick uh thank you for for this awesome tutorial oh you're welcome uh thank you for watching and emmy says the good thing is that we can ask questions at the real time and jesse answers us um i do my best to answer i don't know that i always have great answers but i i i do my best there are a lot of other people in the live chat that that know the answers and give really awesome answers better than i can give binary64 says hey jesse have you tried next with css sorry for all the yawning i'm gonna drink some of my energy drink of choice g fuel and uh as usual i am not yet sponsored by g fuel but i'm open to it that was kind of a running joke i'm only half joking though seriously i if g fuel sends me free stuff i will talk about them every time i stream uh okay i haven't so binary 64. i have not used that yet i i will have to check that out though because that sounds awesome binary says but setting that darker value more than once feels dirty binary says only 96 of my country support hsla hmm i never even thought about that so is that an issue is a browser support for hsla an issue for for a lot of browsers i've ne i haven't come across it and what is there a fallback if that happens would it just fall back to the default blue link color then or could i do a fallback or i have like two color values and one is a hex value i mean i guess what would be the point i should just translate that into hex anyway binary says did you do an npm upgrade to get next 5.1 uh what did i do well yeah i mean basically we use yarn so the equivalent in yarn uh that's what we did i be i'm pretty sure that's what we did uh darshan says can you specify margins uh in br tag for a particular breaking between two items uh yeah you you could um you could definitely style them you know however you want phoenix says uh br tags are almost appreciated or deprecated sorry um and no one uses them nowadays uh yeah yeah that's right i mean normally you would just add uh margins and things to your elements directly and instead of putting those brs in between i do see br's like like wysiwyg editors sometimes add them automatically so i i rarely see like code written by people that has have a lot of brs in them i'll put them in like in email templates and things because you kind of have to use oldschool stuff for email templates anyway um so like you you will still encounter br tags out there uh but normally it's because they're auto generated by something uh but so if you do encounter them then yeah you can style them however you want but if you're creating the html yourself then you probably don't need them you're better off just styling like whatever components that you're going to put the div in between instead just give those components the margins or padding uh let's see binary says can you take out those br tags after each item tag and move css um yeah i mean i could take out the tag so i could either manually take them out which would take too long right now so i'm not interested in doing that right now or i could use a function that when the data comes in it just automatically takes out all those tags um but the easiest way and what we're doing right now is we just do display none so if anybody wants to look at the markup and dev tools it's going to look ugly but to the average user who's not going to bother to look at the code there's no difference between taking the break the br tags out completely or setting them to display none it's um i just read where michael was calling john mr john so that's uh a while back my daughter was on one of the streams my oldest daughter and she she called john mr john uh binary says how does it get from wordpress into next.js we we are using graphql so we have a plugin called wp graphql that we've we're using on the wordpress installation and then we can call that that graphql uh endpoint and we can query that using apollo so we have apollo running with next.js with react and so that we can we can query that graphql uh plugin running on wordpress it grabs all the data and sends it to us so that's how we're getting the data in slowly says i'm forced to just to use just the right side headphone because i can't be ignoring my wife i must make sure i hear her i i do the same thing sometimes i'll just pop up like one side here uh so i totally understand that uh let's see uh i got auto scroll down to the bottom so sorry i'm trying to find find the where i left off at uh yeah binary so uh binary is asking some questions and phoenix says you know that they could just watch some of the older streams which i mean that's cool um but i don't mind the questions because i assume like there are probably more people uh watching now and later on that are also new the stream so i don't mind explaining some of these things over again uh because it'll probably be helpful and i mean there there are a lot of streams right now so it's it is gonna be pretty crazy to watch them all uh maybe i should try to do a better job of explaining what's happening like maybe write up something that can go in the description to the video that's like just a um a summary of what we've been doing because even i mean i don't know that i've ever actually done a full summary in any of the streams so that might be that might be good to do i probably won't get to it today but um i'll keep that in mind as as something that would be helpful to do also i think the readme file on the repo does have a little bit more of an explanation as well so that could be help for anybody that's that's not sure what exactly we're doing uh check out the github repo that's linked in the description and the readme file uh that comes up the first thing you'll see the that'll come up does have a bit more of a description of like what technologies we're using and and uh what we're trying to do how many says why are you always testing on mobile size uh so i like testing on mobile size especially when i'm streaming for two reasons the main reason is we expect our audience to primarily use mobile devices to view this site so i want to design it while looking primarily at the mobile view or the really small screen size that way i'll make the decisions with that in mind if i did it at widescreen like as much as i would try to keep in mind the mobile it would not be the same and what i would end up doing is putting more on the page than can reasonably fit on a mobile screen so it would always feel like the mobile view is is like the secondary view but i want it to be off i want it to feel like the mobile view is primary and then the desktop is the secondary view uh so it's just kind of a different way of looking at it i mean i don't know that it's right or wrong it just depends on your audience and what what you expect what kind of devices that you expect your audience will be using primarily the second reason why i do it especially when i stream is because uh like we can see you can see a lot more of the dev tools here so i can make the font size larger and it still works so it's just kind of a practical uh way to to do this when i'm not streaming i can have this spread out on two different screens so i i could do full screen with the whole screen filled up with devtools stuff and it would be you know more doable that way uh spar wheels says is it possible to make this site just using html css and javascript any frameworks yeah for sure yeah you could you could definitely do that uh the tricky part would be though handling all the routing so like we have clientside routing happening so if you wanted clientside routing like trying to make that on your own is a bit tricky uh and then all the data like you would obviously not want to hard code all that data that would be huge like your code base would be insanely huge uh so you would want to be pulling in the data from somewhere so you would have to handle that um you know how are you pulling in that data you know probably using fetch um so it would there would be a lot of complicated things that something like react handles for you and then the same like if you're gonna pull in the data with fetch search engines are not gonna see that so are you going to server side render on your own uh so it's just like there's there's a lot of things that at first sight it seems like hey this site would be so easy to do with html css and javascript well okay it would except for these other things like how do you handle all the data bringing all the data over how do you handle um users who aren't don't know code editing data how do you handle serverside rendering how do you handle clientside routing like there's all these other issues that just like okay react just makes sense here because it takes care of so many of those other things for us let's see darian garcia says is this being uploaded elsewhere because i'm not seeing these questions on here i'm not i'm not sure what you mean so where what what questions are you not seeing and uh uh darian says yes moving forward i've read it's best to design uh mobile as first and that's where the market currently stands yeah yeah so i mean that's in general i think it's safe to expect that more and more people are going to be viewing the web primarily through a mobile device but there are still some instances where you may have uh users primarily viewing your site on a desktop like i'd say for instance um if you were designing an internal website for an organization where everybody was in an office setting and had computers like desktop computers uh they may be more likely since it's what they're used to to just access work related stuff on their desktop computer so you would check the analytics and you know you may have a situation where it's you know overwhelmingly desktop uh users so depend depending on you know whether people want to view it on their phone or that's anything desired then maybe you don't want to do mobile uh mobile first development uh for that so i mean there are still some cases where you may not want to but just in general i think that mobile first development is the way to go uh and nestle says uh you are too good thanks uh you're welcome thanks for watching uh idoc uh for the win says uh i really want to learn uh css and javascript um well cool yeah uh definitely check out the uh free code camps oh darian just said that all right so good advice yeah um check out freecodecamp.org and you can get free lessons uh that'll start you out with html you'll move on to css and then you move on to javascript it'll just keep building you up and you can learn a lot just through that it's a really good resource and feel free to ask any questions if you're ever watching this stream i'll be happy to answer you know answer your questions some of what we do will be kind of way beyond if you're just starting out learning it it might be a bit hard to do my best to explain it it looks like the the stream health is not great right now so i apologize if things are getting choppy i i hope at least my voice is still coming through all right uh since i'm not really coding right now that's that probably matters more than anything which that makes sense my kids just got home from school so odds are one of them started playing or attempting to play some videos she's let's see uh idoc says do i really need to learn html first i already know that uh no you can you can skip over so you don't when free code camp you don't have to uh do all the lessons right in a row you can skip around so um i don't know i'm the type of person that i usually just start from the beginning i it just like feels right to me to start from the beginning and i i usually just fly through you know the basics but occasionally i do pick up some some piece of information that i missed you know i just never knew or maybe i had just forgotten so i usually do get something out of the basics but it's probably like mostly a waste of time uh so yeah that's entirely up to you whether you want to go back through html stuff or not but you definitely don't have to oh and it looks like phoenix and um uh darian also had similar similar thoughts there about you know it really doesn't hurt to go through uh the html stuff again even if it's just a refresher oh michael says i i restarted and uh and beat free code camp because it added some new things cool yeah i'm gonna have to check out the new stuff on free code camp as well it's been quite a while since i've done any of those exercises darian says this is amazing i subbed if you need help with documentation i'm more than willing to help just send me a ping oh okay cool yeah um you know darian i i definitely welcome help for sure um if check out the repo and if there's any place that you you want to help let me know maybe i'll open up some issues having to do with documentation um you know i'm definitely open with that and i'm open to help out like help try to find somewhere for you to contribute if you if you want to uh divya says how much do you recommend to learn vanilla javascript and then go on with node.js and react.js right now i learned node and i want to move on to react or angular 4 please god i mean if if you've already learned node then i'd say you're probably fine to go into reactor angular i mean i obviously prefer react but there are a lot of people uh good developers that use angular and build you know cool stuff with it um but yeah i you know if you understand node then i don't think react will be you know that difficult for you uh to to work through uh let's see michael says is there a way to find out what files are importing a function from another file like which files import from init apollo um i mean you should be able to see let's let's check it out where's where is where is this and initial follow where do we have this at all right where do we have there we are and i thought it was by the queries okay so in init apollo i mean we should be able to see everything that's being imported should be up here so we we shouldn't be able to use anything down here that isn't already being imported from up here um and then if it's a particular function from something up here then we would need like so for instance like this inmemory cache so we're using inmemory cache dot restore so like the dot restore obviously we're getting from inmemory cache does that make sense is it possible to get a job after completing free code camp's frontend certification uh yeah people have people have done it uh i would say i mean the important thing is to make sure that you have a good portfolio and have really like built some things contributing to open source projects helps a lot and i mean applying to a lot of places having a good resume and a good like good connections really help so there are a lot of other factors that would go into getting a job but in terms of learning the skills you need to start building things your frontend certification will definitely give you a bunch of those skills and then you'll pick up a lot more on the job uh but yeah there are like on the free code camp forums there are a lot of people who have said that they've gotten jobs after going through free code camp so some of them just front end some of them the whole thing like and everywhere in between uh me says right now i have to complete the advanced algorithms and the advanced projects and it is going well i guess but i don't know where to look in order to get a job uh yeah i mean there's check out i think where i look uh stack overflow uh jobs has a lot of of good job listings for developers linkedin has a lot of job listings so just between those two places you'll find a ton of jobs uh yeah i would i would try there first and just everything that you're even remotely qualified for apply to even if you don't meet all the requirements still apply because you you never know maybe they won't get anybody that meets all the requirements uh so it's it's always good to try at the very least you know if they give you an interview even if you don't really have a shot you'll get practice interviewing you know you'll make some connections at that place so it's it's always worth it to apply yeah uh so michael yeah in terms of finding out where all these things are i i don't really know of any other way to figure out where they're all coming from i mean to me like as soon as i saw the question i i just thought like hey we'll just see where the import is stuff is coming in um and then that would at least point you in the right direction where those files are uh me says thank you you're welcome you're welcome i hope it helps uh michael said the stream cut out when i was starting to answer the question oh no uh michael you may have to uh watch the recording then if you can't see this um but you know if you go into the init apollo.js file and you check out everything that's in the top here where it's importing from you know then you can see like where a particular function is coming from like the restore function is coming from the you know in memory uh cache which is coming from the file called apollo cache in memory so um and then if you hover over that it actually shows you where in the project that is so it's within the node modules so that's that's how i would go about finding stuff all right and i've reached the bottom of the live chat uh so here we go we're gonna come in right at about an hour and a half for the stream so i had uh i think i had said we were gonna do about an hour an hour and a half so i guess i'm right on time here uh thank you all for watching thank you for all the help and advice and i had a lot of great questions and answers in the live chat today is friday so i i hope you all have a great weekend i will probably be back monday uh probably like in a stream earlier in the day so maybe like a morning stream for eastern time zone um oh sorry so uh i il yes or else i'll work on that remind me in the next stream about how to pronounce your name correctly and i will definitely uh definitely do my best to remember that um but anyway yeah again have a wonderful weekend uh i will see you all on monday
