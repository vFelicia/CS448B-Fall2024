With timestamps:

00:07 - hey everybody welcome to live coding
00:08 - with jesse i'm jesse and today
00:14 - we might not do what i said i was going
00:16 - to do in the title of this video
00:19 - uh so my plan was
00:22 - we were just going to start completely
00:23 - from scratch look up how to do this and
00:25 - do it
00:27 - but
00:28 - i had a few minutes before the live
00:29 - stream was gonna start
00:31 - and i couldn't really start anything big
00:33 - so i thought okay i'll just look up
00:35 - some documentation on how to do this
00:38 - and i realized
00:40 - that
00:41 - if we set up
00:43 - what we wanted to set up which i'll
00:44 - explain in a minute
00:46 - it might not work out because we can't
00:48 - use https
00:50 - so
00:51 - let me
00:53 - we'll get into it and we'll still kind
00:55 - of go through the process uh but
00:58 - we need to think about what effect this
01:00 - is going to have on our site and if if
01:03 - we really want to set it up like this so
01:05 - if if you have no idea what i'm talking
01:07 - about don't worry i will explain
01:08 - everything
01:10 - i'm going to give everybody a few
01:11 - seconds to to get in here
01:13 - um
01:14 - i know i i started to i
01:17 - announced the stream a little bit later
01:19 - than normal so in case somebody's coming
01:21 - in late let me give them a minute here
01:24 - um hey everyone it's it's here right now
01:28 - um looks like the notifications did
01:31 - actually go out for this video
01:33 - let's see
01:35 - yeah i think i just got one on my phone
01:36 - okay cool
01:37 - sometimes they don't work when i started
01:39 - so late
01:40 - so i had a pretty long meeting earlier
01:43 - in the day
01:44 - but it went well so that's why i'm
01:46 - streaming a bit later today
01:48 - and we may have a guest
01:50 - we may have a guest a little bit later
01:52 - on uh i was
01:55 - attempting to recruit someone to help me
01:58 - uh with this project with some of the
02:01 - uh the data work
02:03 - and so she might stop by during the
02:06 - stream depending on how long the the
02:08 - stream goes
02:09 - and
02:10 - so that'll be cool and why my face
02:13 - the light on my face looks super weird
02:19 - i don't know if it looks weird to
02:20 - everybody else but let me turn this
02:22 - light down a little
02:27 - okay i guess that's kind of better
02:31 - i don't know
02:33 - it's just looking weird to me
02:35 - um
02:37 - okay so let me
02:39 - let me switch my screen so you all can
02:41 - see what's
02:42 - happening
02:44 - nope that's not it
02:46 - this is it
02:49 - okay and the light actually looks a bit
02:52 - better in this use so that's nice
02:55 - uh so
02:56 - here's what we're working on today
02:59 - let me make it bigger
03:02 - hopefully
03:03 - come on bigger
03:10 - it's a little bit of lag happening so
03:13 - i'll describe what it is then since it's
03:15 - the text isn't getting bigger so this is
03:19 - a google cloud platform storage bucket
03:23 - uh and we set that up
03:25 - yesterday yeah we set this up yesterday
03:27 - we connected it to wordpress and got
03:30 - that working now i'm what i'm in the
03:33 - middle of doing there we go finally get
03:35 - a little bigger what i'm in the middle
03:37 - of doing is
03:38 - bringing over
03:40 - all of the files from the old site
03:44 - and keeping the same file structure and
03:46 - in terms of files mainly i mean images
03:50 - and
03:50 - i mean
03:52 - pdfs
03:53 - you know things like that that would
03:55 - appear on the website
03:57 - uh the reason being when we brought over
04:00 - the markup
04:02 - from the old site
04:06 - it still refers to a lot of these files
04:08 - in the same structure
04:10 - so we can take advantage of that and not
04:13 - have to redo a lot of things by just
04:17 - using
04:18 - um
04:20 - relative urls in the markup and then
04:22 - when they come over when they get to the
04:24 - react components
04:26 - we'll just pre-pen the url of wherever
04:29 - they're at in this case right now it's
04:30 - the storage bucket so let me show you
04:32 - how we've we've done that in react
04:35 - uh
04:38 - i think i believe it's here
04:42 - is it
04:53 - yeah this is it
04:55 - let's make sure we're up to date we'll
04:56 - do a get pull
05:00 - okay
05:01 - and
05:04 - let's take a component where i know
05:07 - we've already used this technique just
05:09 - to show you how this is going to work
05:17 - let me think
05:19 - the faculty
05:22 - dot js page i believe we're using this
05:27 - there we go
05:28 - okay so
05:29 - on the faculty.js page we're pulling in
05:32 - data from wordpress with graphql
05:35 - but then
05:37 - we're we're going through that data and
05:40 - we're manipulating it a bit before we
05:42 - actually render it to the page
05:45 - so
05:47 - you see here
05:48 - anywhere that we see a
05:51 - src
05:53 - equals
05:54 - right
05:55 - which is you're pretty much for an image
05:57 - we're prepending franciscan.edu because
06:00 - right now that actually works because
06:03 - that site
06:04 - is still connected uh to all those files
06:07 - right but when we switch over and point
06:10 - that url to our new site this isn't
06:13 - gonna work anymore so we're gonna need
06:15 - to replace this with that
06:17 - google storage bucket
06:21 - with that url so the idea that i
06:24 - i thought would work was okay well let's
06:26 - do a cname record
06:28 - and let's point it
06:29 - to that
06:30 - cloud storage bucket
06:33 - and that way we'll have like a cleaner
06:35 - look and it all
06:37 - you look like it's coming from the same
06:39 - place
06:40 - i don't think that's going to work
06:41 - though
06:42 - so
06:43 - let's
06:45 - let's check it out just you know to see
06:50 - how we would would go about doing this
06:55 - let me give you i have two examples i
06:58 - can show you
07:00 - one is the official documentation uh and
07:03 - the other one is just
07:05 - looks like maybe a tutorial someone else
07:07 - did it's a little bit dated though but i
07:09 - i think it it shows the same point let's
07:11 - try to go through the official
07:12 - documentation first
07:14 - if it's
07:16 - a little too too much to go through then
07:19 - we can always switch
07:20 - switch back and let's clean up what we
07:22 - have going on here
07:25 - and
07:30 - let's pull this over
07:35 - come on
07:36 - here we go
07:38 - is he gonna let me put it in there no
07:41 - oh well
07:42 - so
07:43 - i'll just zoom in quickly on the part
07:45 - that
07:46 - we need to look at
07:49 - uh so basically like right we make the
07:51 - cname record and then instead of having
07:54 - to type in this url
07:56 - we can now type in in this case they use
07:58 - travelmaps.example.com
08:00 - right and see they can type that in and
08:03 - then get access to
08:04 - that image
08:06 - right great that's what i wanted but if
08:09 - we look at this note it says
08:12 - you can use a cname redirect only with
08:15 - http
08:17 - not with https
08:21 - to serve your content through a custom
08:23 - domain over ssl you can set up a load
08:25 - balancer so it's not that it's
08:27 - impossible it just requires a load
08:30 - balancer so
08:32 - we could check it out see how hard
08:33 - that's going to be maybe we'll maybe we
08:35 - could do that
08:38 - we'll see if it's not that hard
08:40 - might be worth it i just i don't know if
08:42 - it's worth it to go through the trouble
08:44 - of setting up a load balancer
08:48 - for this
08:49 - i don't know let me know what you all
08:50 - think
08:51 - i'm not sure that that's you know how
08:54 - many people are even going to realize
08:57 - what url the images are coming from you
08:59 - know
09:00 - really probably only other devs that
09:02 - open up devtools
09:09 - also let me
09:15 - let me start my timer now that we're
09:17 - going to start to get into things here
09:20 - uh
09:20 - let's start that pomodoro timer if i
09:23 - have it there we go i thought i had it
09:26 - so i'm gonna mainly focus on on what
09:28 - we're doing here with this cloud storage
09:30 - bucket uh for the next 25 minutes and
09:33 - then
09:35 - i'm gonna go back to the live chat after
09:38 - that for about five minutes and answer
09:40 - any questions uh that you all put in
09:41 - there so if you're asking questions in
09:43 - the live chat
09:45 - please be patient and i will get to
09:47 - those i'll keep my eye on the chat
09:48 - though in case anything pops up that's
09:51 - you know maybe i should address
09:52 - immediately
09:55 - okay
09:58 - so there's our
10:03 - i lost my
10:05 - there it is
10:07 - okay
10:09 - so
10:11 - let's just check out this load balancing
10:13 - stuff let's see if we can do it uh
10:16 - realistically
10:18 - i don't i don't really know who would
10:20 - need a cdn that only uses http
10:23 - i'm
10:24 - right i mean
10:26 - everyone wants http now it just doesn't
10:29 - seem that useful to me anyway so i
10:31 - assume if we have to load use the load
10:34 - balancing to get https there are going
10:36 - to be other people that want to do it so
10:38 - you know this this would possibly be
10:40 - valuable for you all even if i don't
10:42 - necessarily end up going with this
10:46 - uh let me copy and paste this into the
10:48 - live chat for you all
10:50 - and then that way you can check it out
10:52 - if you'd like
11:05 - all right
11:16 - all right i'm just gonna skim over this
11:18 - at first and see if there's anything
11:20 - that stands out they're like oh we
11:21 - shouldn't do this
11:23 - all right so we already have a cloud
11:25 - storage bucket
11:28 - so we don't
11:29 - we don't need to create one
11:32 - so we've already done all this
11:50 - let me know if i have a fan running
11:53 - it's pretty warm in here so um
11:56 - let me know if it's too noisy and i'll
11:59 - turn it off i tried to like turn it down
12:01 - as low as it'll go and kind of point it
12:03 - away so it's not blowing right on the
12:05 - mic
12:06 - but i can't really tell with the
12:08 - headphones on if it's too loud
12:25 - okay cool so it looks like you'd create
12:27 - a second bucket
12:28 - to do the load balancing from
12:43 - hmm
12:56 - all right looks like there was one other
12:58 - thing it
13:00 - content base complete the guide for
13:03 - content based load balancing
13:05 - let's check out that guide as well
13:29 - uh if i'm going through this too fast
13:31 - you know feel free to click on the link
13:33 - or copy and paste the link from the live
13:35 - chat you can check it out a little bit
13:37 - slower
13:40 - more slowly is that the proper way to
13:42 - say that instead of slower i think it's
13:44 - more slowly
13:54 - hmm
14:05 - okay
14:06 - so from what i'm seeing uh when you set
14:09 - up the load balancer like this basically
14:11 - the load balancer has a static ip
14:13 - address
14:15 - which obviously if you have static ip
14:17 - address right you could point the domain
14:19 - name to that's what i'm assuming uh this
14:21 - is what happening so instead of a c name
14:23 - you could
14:24 - i guess make an a record
14:26 - use that for your domain
14:31 - i let i'm going to give you all a chance
14:34 - do you think we should go through
14:37 - creating a load balancer so that we can
14:41 - point a domain name
14:43 - and
14:45 - use our own domain
14:48 - i don't know let me know
14:50 - the more i think about it the more i
14:52 - think
14:54 - maybe it's not worth the trouble at this
14:56 - point uh so i'll give you all a minute
14:59 - because of the delay in the video uh to
15:02 - let me know
15:04 - we for sure have a lot of other things
15:06 - that we could work on
15:07 - so it's not like i'd end the stream we
15:09 - would just maybe switch over and work
15:11 - with the mysql database
15:14 - so
15:16 - i'm getting a few answers in there
15:18 - i'm going to give you all maybe like
15:20 - 20 more seconds
15:22 - to let me know
15:30 - hmm
15:40 - um
16:05 - all right so here's here's the answers
16:07 - that i've been so far
16:09 - looks like
16:12 - yes
16:14 - do it
16:15 - um
16:17 - just walk us through like children and
16:19 - put the reference material in the
16:20 - description
16:23 - john says there's always another way
16:26 - okay so it looks like you all want to i
16:28 - mean i've only heard from a few people
16:30 - and there's a lot more people watching
16:32 - so
16:34 - of those who responded it's
16:38 - you you all want to do this so i guess
16:40 - we can uh we can try it out
16:44 - and
16:45 - let's see how
16:50 - um
16:51 - might not be a bad idea then for me to
16:53 - move this documentation over to another
16:56 - screen
16:59 - so that i can reference it
17:02 - and then we can actually do everything
17:05 - here on this screen
17:07 - so the first thing we'll probably do is
17:14 - let me switch
17:20 - let me switch over
17:24 - and
17:27 - i'll leave this open
17:30 - you see this this particular page is
17:33 - since all this stuff is loading and i'm
17:35 - streaming at the same time it's
17:37 - it's going to be impossible to work with
17:38 - this page so
17:40 - what i want to do is open up another
17:42 - instance of google cloud platform here
17:45 - and i'm going to switch over to
17:48 - my account
17:53 - because i don't i don't want to mess
17:54 - with this
17:56 - in in case i decide not to go with this
17:58 - live and also um i don't want to mess up
18:02 - all the stuff that's being uploaded
18:04 - right now
18:08 - and
18:12 - let's see oh it looks like
18:15 - something must be wrong with
18:17 - freecodecamp.org right now
18:19 - but i i think they're just
18:22 - making some updates so
18:25 - okay
18:26 - uh yeah so if you're having trouble
18:28 - getting on right now uh sorry about that
18:30 - i i don't have anything to do with the
18:31 - update so i don't know for sure but uh
18:33 - usually when this happens it's not it's
18:36 - not too long you know things will go
18:37 - back to normal soon
18:41 - and
18:43 - okay we got a question what are you
18:44 - uploading i'm uploading data from the
18:47 - old website
18:50 - or i guess the current franciscan.edu
18:52 - website uh so a lot of the images
18:56 - and pdfs that are available on the
18:58 - website i'm moving them over
19:01 - to our new
19:03 - store so like right now they're hosted
19:05 - on a server on campus
19:08 - here at the university so we want to
19:10 - host them
19:11 - uh in that storage bucket that we set up
19:14 - yesterday
19:15 - all right so
19:19 - first things that first thing we need to
19:22 - do is create a bucket so let's do
19:27 - see what projects we have
19:30 - um
19:31 - i have so many projects i'm not even
19:32 - using let's just start a new project
19:36 - and
19:39 - create projects
19:42 - let's say
19:44 - i don't know just
19:47 - uh
19:47 - test
19:49 - project
19:50 - there we go this one i'll just use for
19:55 - um whatever
19:58 - whenever i need to test something no
20:00 - i'll have a project for that
20:04 - what happened where did it go
20:10 - oh okay it's it's going it's creating
20:14 - creating test projects
20:22 - if you'd like to follow along i'm going
20:24 - to paste the um the url in there one
20:27 - more time for anybody that missed it
20:39 - that's it there now
20:41 - awesome
20:42 - all right so we're now on test project
20:46 - and
20:49 - freezing
21:00 - all right and uh the link that i just
21:02 - gave you the first step is gonna uh tell
21:05 - you to complete the guide for
21:09 - a
21:11 - uh con for content based load balancing
21:14 - so let me put the link in for that as
21:16 - well
21:19 - so that second link i just pasted in is
21:21 - a link for that uh if you've already
21:23 - gone to the first section you know you
21:25 - could just click the link that's in
21:26 - there
21:29 - so
21:44 - all right so we need to go to the
21:47 - create a virtual machine instance all
21:50 - right let's check this out this is cool
21:52 - this will be some new stuff that we
21:53 - haven't worked on before
21:55 - um
22:14 - i've never gone to that page before
22:17 - let me see which one this is
22:19 - um
22:21 - vm
22:23 - instances
22:24 - there we go it's under compute engine
22:28 - we're going to go to vm instances
22:30 - and
22:33 - we're going to go to create instance
22:37 - oops all right it's getting ready so we
22:39 - get the little spinner there
22:42 - so while that gets ready i'll check the
22:44 - chat
22:47 - oh a noob thank you i didn't i didn't
22:49 - see that comment but anu
22:51 - said the vms are found inside compute so
22:53 - thank you for that i should have just
22:54 - looked over immediately
22:57 - hey nikki's here how's it going
23:02 - i guess i'll take a drink while i'm
23:04 - waiting
23:14 - it's always important to stay hydrated
23:16 - right
23:23 - oh
23:24 - i've never
23:25 - done
23:26 - this before in google cloud didn't
23:28 - realize it would take this long
23:32 - uh i'll check in the chat and see if
23:35 - there's anything else in here
23:37 - that i missed
23:56 - love johnson says
23:58 - can i use this to run ubuntu on an old
24:01 - mac
24:02 - or to run python
24:05 - uh i don't know
24:08 - i mean i guess if you're creating a vm i
24:10 - mean you can do what you want with it so
24:13 - i never thought about doing that but i
24:15 - guess it will work
24:19 - so i don't i don't know for sure if it
24:21 - would work uh but
24:25 - it seems like it could
24:28 - all right cool so now we're ready now
24:30 - let's create
24:33 - create the instance and we're going to
24:36 - set the name to www
24:39 - and
24:41 - we'll use we'll just keep the
24:43 - default
24:44 - zone
24:46 - uh
24:47 - let's see
24:49 - machine type yeah that's fine
24:52 - i'll probably keep most of this stuff
24:54 - default we need to find
24:57 - management disk networking ssh keys
25:01 - there we go
25:06 - and
25:11 - just blocks
25:31 - okay startup script field so we want to
25:34 - insert
25:35 - some
25:38 - code into the startup script field
25:45 - uh let's check this code out so
25:48 - apt-get update app get installed okay so
25:50 - we're installing apache
25:55 - ssl
25:56 - and then restarting apache and then
25:58 - echoing
26:00 - uh html
26:03 - a very small html page
26:08 - okay cool
26:13 - uh we're gonna leave everything else as
26:14 - default
26:18 - and
26:23 - we will create that
26:49 - okay
26:51 - all right cool so that's there now it
26:53 - says
27:01 - it says to do the same thing
27:07 - with video i guess i'll do it just for
27:09 - the sake of
27:10 - being consistent with the instructions
27:13 - um
27:17 - let's do that so let's create
27:22 - another instance
27:25 - and name this
27:29 - for those of you that are joining us
27:31 - recently
27:33 - in order to
27:34 - create a
27:37 - cname record
27:38 - no no in order to create a custom domain
27:41 - name for our cloud bucket that actually
27:44 - uses
27:45 - https
27:47 - you have to set up load balancing so
27:49 - that's why we're setting up this load
27:51 - balancing stuff first
27:54 - in order to make that work
27:58 - okay
27:59 - and
28:03 - i'm gonna put in
28:05 - a custom startup script in here that's
28:09 - almost identical to the other one but it
28:11 - just has some different data here in the
28:13 - index page
28:15 - and let's create that
28:20 - now we're going to make a firewall rule
28:24 - to allow traffic
28:27 - to our
28:28 - vms
28:30 - so let's go to
28:33 - firewalls page which let's see how we're
28:36 - gonna get there
28:46 - no
28:48 - i saw firewall there we go firewalls
28:56 - was it the right page
29:03 - i don't think so
29:05 - i was firewalls i need to find firewall
29:08 - rules
29:13 - there we go firewall rules
29:19 - all right
29:21 - actually did my
29:25 - all right i still got five minutes
29:27 - um in about five minutes i'm going to go
29:29 - back to the live chat answer some
29:30 - questions so if you have any questions
29:32 - uh please put them in the live chat
29:34 - sometime within the next five minutes
29:38 - okay
29:39 - so here's our firewall
29:41 - rules page we need to create a rule
29:48 - and
29:49 - we're going to name it www firewall
29:55 - and
29:56 - let's set
29:58 - let's see
30:00 - networks default
30:02 - and
30:03 - our source filter we're going to allow
30:07 - sources
30:10 - from
30:17 - from any source so
30:20 - basically to do that we're going to do
30:21 - 0.0.0
30:24 - dot zero slash
30:26 - zero
30:32 - okay
30:34 - and
30:36 - let's set our
30:41 - our ports
30:43 - and
30:49 - we'll go
30:50 - [Applause]
30:53 - for right now let's do port adn 443 port
30:56 - 80 is your normal http port port 443 is
31:01 - your um
31:02 - https port since we're just testing this
31:05 - out i'm fine with allowing both
31:07 - um
31:08 - but
31:09 - in a production environment i'd be more
31:12 - comfortable if i just ran port 443 and
31:15 - you know had port 80 disabled
31:19 - okay
31:20 - and
31:21 - one more target tags here um
31:25 - let's do http tag
31:30 - um
31:34 - and then
31:37 - we're gonna do
31:39 - https tag since we're doing both
31:43 - we'll put both in there
31:47 - and now let's create
31:58 - and as soon as this spinner's done
32:00 - we can go on to the next step
32:10 - yay all right cool
32:12 - uh so let's go back to
32:14 - our
32:17 - vm
32:19 - oops
32:25 - no what happened
32:27 - i'm going to refresh because it just
32:28 - froze up
32:32 - i'll go back to the menu
32:35 - there we go
32:37 - vm instances
32:47 - okay
32:48 - external ip
32:53 - let's
32:55 - check this out so we're going to copy
32:57 - the ip
32:59 - and paste the ip
33:06 - see what happens
33:10 - so we should see that um
33:15 - those very tiny little html files uh
33:19 - that were there that's that's what
33:21 - should come up
33:22 - so i don't know how long it's supposed
33:24 - to take here
33:38 - let's click the other one too to just
33:40 - get it started
33:45 - since it seems to be taking so long
34:02 - let's try the http explicitly
34:10 - hmm
34:24 - not working
34:25 - okay
34:27 - all right
34:29 - why is it not working
34:33 - open in browser window
34:37 - all right let's try that
34:40 - let's
34:42 - allow pop-ups
34:44 - and try this again open and browse
34:47 - window
34:57 - all right my timer did go off so let me
35:01 - set a short break here
35:05 - okay so
35:08 - uh so it did allow me to go in here so i
35:12 - had
35:16 - thought that i would actually see the
35:19 - html
35:23 - maybe i'm not supposed to see that maybe
35:25 - that's not how it was set up
35:28 - it's not exactly clear
35:36 - all right
35:37 - well
35:38 - let me go back to the chat i'm going to
35:40 - scroll up make sure i don't miss any
35:42 - questions
35:44 - and
35:46 - go through as many questions as i can in
35:48 - five minutes
36:05 - uh
36:25 - not really a lot of questions
36:28 - so trying to find some
36:39 - uh john asks if the google cloud
36:41 - platform is feasible for small apps
36:44 - uh it
36:47 - i've never tried out for small apps but
36:49 - it seems like
36:51 - a lot of the pricing is based on usage
36:57 - excuse me
36:58 - it's all based on usage so
37:02 - it might it might be affordable
37:05 - i never really tried to figure out how
37:07 - much it would be for something small
37:09 - so i don't know if it would be cheaper
37:11 - to go with you know a different service
37:13 - that focuses more on small things
37:17 - i don't know has anybody
37:19 - has anybody ever used
37:21 - use it in that way
37:24 - i mean it seems like it's
37:26 - there's a lot more features than you
37:27 - would normally need for something small
37:30 - so if in terms of complexity
37:34 - you know they're definitely you know
37:36 - less complex ways of doing it
37:41 - but in terms of costs i'm not really
37:42 - sure
37:43 - what would be cheaper
37:46 - uh says what what language is more
37:49 - future proof i'm trying to figure out
37:50 - which language to learn first thanks
37:54 - oh um
37:55 - well it's hard to tell the future right
37:58 - uh if you're if you're going by trends
38:01 - i mean realistically javascript has been
38:03 - gaining ground
38:06 - for a long time now
38:07 - more and more things are being built
38:09 - with javascript that couldn't be built
38:11 - with javascript before
38:13 - um right like when
38:14 - when i was in high school and just
38:17 - learning how to do websites
38:20 - you couldn't do javascript on the server
38:22 - right that didn't exist
38:25 - and what you could do with javascript
38:26 - was actually pretty limited
38:28 - [Music]
38:31 - now
38:32 - you can do a lot i mean you you do
38:34 - everything you wanted anything that you
38:36 - can do normally in a programming
38:37 - language
38:38 - you could probably find a way to do it
38:39 - with javascript so just the growth there
38:43 - makes me think that if that trend
38:45 - continues
38:47 - it's it's going to be you know continue
38:49 - to be one of the main languages
38:51 - but there are other languages that are
38:54 - so entrenched in a lot of big companies
38:56 - in the in the code bases for these huge
38:58 - companies that they're not going to go
38:59 - away anytime soon
39:01 - so like
39:02 - there's so much stuff built with
39:06 - java
39:07 - python php like those big languages like
39:10 - there
39:11 - if they ever go away it's going to take
39:13 - a long long time i mean just consider
39:16 - like there are still companies that use
39:17 - cobol
39:19 - right which is
39:22 - an ancient by computer standards it's
39:24 - it's ancient
39:27 - but
39:28 - you know there are there are code bases
39:30 - out there that
39:32 - change infrequently uh but they still
39:34 - need people to maintain them so i
39:36 - wouldn't worry so much about your
39:39 - language not being around in the future
39:42 - as long as you pick a language that is
39:45 - you're kind of one of the top languages
39:47 - you're safe
39:48 - if you go with some really obscure
39:51 - language that's not used very much right
39:53 - now
39:54 - that could potentially die out and and
39:57 - nobody will use it
39:58 - right so
40:01 - if if you're
40:02 - i think probably like what are the the
40:04 - top like i mentioned java
40:07 - javascript
40:08 - python php this is not in any particular
40:11 - order python php
40:13 - um
40:15 - those those are your big ones if i'm
40:17 - leaving one out let me know uh but
40:21 - oh i'm forgetting like uh c sharp
40:26 - i mean there is still even stuff done in
40:28 - c plus plus right so
40:31 - but i'm gonna say
40:32 - this is my five that i'm gonna say are
40:34 - probably gonna be around for a long time
40:36 - c sharp java javascript python php
40:40 - if you pick any one of those you
40:41 - probably don't have to worry about
40:45 - you know that language not being used
40:47 - anymore for a long time
40:50 - so
40:51 - i mean as for smaller languages
40:53 - there's a ton of small languages uh
40:56 - there's
40:56 - i'm sure there's lots of smaller like
40:58 - computer languages that aren't used that
41:00 - i've never even heard of
41:02 - right i probably will never hear of them
41:04 - that's not necessarily a good thing if
41:06 - you're trying to get a job right so
41:08 - there's not a lot of jobs out there
41:12 - so anyway i i know starting out that's
41:15 - like a huge question and a source of
41:17 - anxiety like what should i pick
41:19 - but
41:21 - it's always easier to learn your second
41:23 - computer language
41:25 - because you have the concepts down so
41:26 - even if you decide later on you don't
41:28 - really like the one that you chose to
41:30 - learn
41:31 - you know don't worry about it too much
41:33 - you can always switch
41:34 - it'll be a little more work
41:36 - but not quite as much work as learning
41:38 - it you know the first time
41:43 - all right my timer is up so we're gonna
41:46 - do another pomodoro session and then
41:48 - i'll come back
41:50 - uh and i see there's some more
41:51 - discussion going on there so i'll check
41:53 - that out after i come back uh so we'll
41:55 - probably just end up doing one more
41:57 - session
41:58 - uh and then i'll do some more questions
42:00 - and then we'll finish up for today
42:03 - oops where am i at
42:05 - uh back here
42:11 - all right well now that i'm in here
42:12 - let's just look around see what we have
42:15 - hmm
42:26 - okay it looks like we're running apache
42:29 - right based on the code that we the
42:31 - startup code we're running apache so we
42:33 - should have
42:34 - um
42:41 - we're going to go into that oops this is
42:43 - probably really small i'm sorry everyone
42:45 - let me try to make this bigger so this
42:47 - is this is all that i've done i just uh
42:50 - backed out two directories from my uh
42:54 - default directory that i was in
42:56 - so and then i went into the ver or var
42:59 - directory and then www which is your
43:01 - default directory for serving websites
43:04 - in apache
43:07 - and so now i'm just listings
43:12 - and that's our index.html file uh that i
43:17 - was thinking that we'd see if we
43:19 - actually went here
43:21 - whoops
43:22 - so
43:23 - uh we can see like obviously things are
43:26 - there
43:28 - um there is stuff there the stuff that
43:30 - we did
43:32 - worked i guess we can verify that that
43:35 - that step did work
43:37 - uh if we go in i'm assuming nano is here
43:41 - no no index
43:43 - and yep there it is so there's that html
43:46 - that we had there i'm going to get out i
43:48 - don't want to edit that
43:50 - okay so that's that's there
43:53 - i'm just gonna leave
43:55 - for now
43:56 - hopefully i don't need to go back in
43:59 - right away
44:03 - let's see
44:11 - all right so now we need to make a
44:14 - an ip address
44:18 - so we're going to go to the external ip
44:21 - addresses page
44:23 - which is
44:31 - there we go
44:33 - external ip addresses and
44:39 - let's reserve a static address
44:44 - and
44:46 - the name
44:50 - i'm just going with the name from the
44:51 - tutorial
44:52 - uh we're gonna go with the ipv4
44:56 - and
44:57 - we want it to be
44:59 - global
45:05 - and
45:09 - hopefully i don't get charged too much
45:10 - for all this i'm gonna cancel it all as
45:12 - soon as i'm done
45:14 - uh
45:15 - and
45:16 - click
45:18 - hey now's a great time to bring up my
45:19 - patreon page so
45:21 - if you'd like to help support my streams
45:24 - uh check out my patreon page
45:27 - and
45:28 - help me out when i do stuff like this
45:30 - and just not sure how much i'm gonna get
45:32 - charged for all this experimentation
45:41 - all right
45:43 - [Music]
45:47 - let's create an instance group now
45:52 - and where do i go for that
45:54 - let me see
46:01 - um
46:07 - instance group
46:09 - i'm going to create a new one
46:35 - just got a message from work i need to
46:37 - answer this hold on one second
46:43 - okay
46:45 - all right so
46:47 - we're going to create one um let's set
46:50 - the name to
46:54 - resources and
46:57 - we're going to set the zone
46:59 - to
47:01 - us central
47:05 - one
47:06 - b
47:07 - i'm not really sure why where you take
47:09 - picking that particular zone uh the
47:12 - instructions here uh don't really say so
47:16 - if you want to follow along and see if
47:18 - see the instructions yourself click on
47:19 - that link that i i put in the live chat
47:23 - a little earlier
47:27 - we're going to set the group type to
47:29 - unmanaged instant group instance group
47:34 - and
47:35 - let's see for vm instance where are we
47:38 - on
47:39 - unmanaged
47:45 - it says no available instances
47:58 - yeah that must have been a mistake in
47:59 - the documentation because um obviously
48:02 - we didn't make instances in that
48:04 - particular zone so
48:06 - let's set
48:08 - www
48:11 - and
48:12 - so that's going to be our instance
48:14 - and then
48:22 - we're going to create another instance
48:23 - group for our other for www
48:26 - uh dash video
48:35 - okay
48:36 - create
48:39 - and let's just go back and create
48:41 - another one
48:43 - and this will be
48:47 - whoops let's call it video
48:52 - video resources
48:54 - unmanaged
48:56 - and let's add a video
49:02 - create that
49:23 - see
49:35 - all right cool those are finished
49:53 - oh
50:01 - all right sorry i lost my place i was
50:04 - looking ahead and lost my place in the
50:05 - documentation
50:07 - now i'm back
50:08 - um
50:11 - let's set up
50:14 - we're going to set up a lot of stuff so
50:15 - now we're going to name our load
50:17 - balancer so let's go to our load
50:20 - balancing page
50:24 - which where did we set that up at
50:30 - why is it this is freezing up
50:33 - somewhat frequently
50:36 - all right so
50:41 - i don't know where i load balancing
50:42 - pages
50:52 - um
50:54 - there we go
50:56 - load balancing
51:00 - and
51:08 - load balancers
51:12 - under https load balancing click start
51:15 - configuration
51:25 - interesting
51:33 - i'm not getting the same
51:38 - all right maybe i'll keep click create
51:40 - okay i had to click create first that
51:42 - was the problem
51:43 - um
51:46 - https load
51:48 - balancing let's start
51:51 - and
51:56 - let's name it web
51:59 - map
52:02 - and back end
52:05 - let's say
52:09 - create a back-end service
52:15 - let's name it
52:16 - web map
52:21 - back-end
52:23 - service
52:34 - all right let's say
52:39 - all right i'm just going to leave
52:41 - since it'll be faster i'm going to leave
52:43 - that as default
52:44 - um
52:47 - instance group
52:50 - www resources
52:56 - port 80.
53:06 - let's do
53:11 - it i'll check
53:13 - i never set up a health check
53:24 - all right let's set up a basic health
53:26 - check
53:39 - um
53:45 - http basic check
53:48 - and i'll just leave everything default
53:50 - okay
54:08 - okay
54:20 - all right so i think we're good
54:23 - and
54:26 - we'll just repeat that
54:28 - for video
54:37 - video service
54:42 - do video resources
54:45 - and
54:47 - health check let's yeah let's create the
54:50 - health check
54:53 - um
54:59 - all right
55:00 - let's create that
55:02 - okay
55:09 - all right let's go to host and path
55:11 - rules
55:17 - and
55:28 - okay so let's go with
55:37 - hosts
55:38 - um
55:40 - and then
55:42 - we're gonna set our pass to
55:47 - video
55:50 - and
55:52 - video
55:53 - [Music]
55:55 - there we go
55:57 - okay
55:59 - wonderful
56:01 - let's do front end
56:03 - and
56:12 - let's say
56:18 - http content rule
56:23 - and we're just going to do http
56:26 - to save some time
56:28 - normally you'd want to go with https
56:30 - though
56:35 - all right
56:36 - ipv4
56:45 - there we go
56:50 - and good
56:59 - ipv6
57:09 - let's go with http
57:14 - content
57:18 - ipv6
57:21 - rule
57:22 - i thought earlier in the documentation
57:24 - we didn't do an ipv6
57:33 - um
57:40 - all right
57:43 - and
57:48 - let's review and finalize
57:53 - and click
57:54 - create
58:34 - i guess you have to wait till this is
58:35 - done
58:50 - the good news is it seems like we're
58:53 - almost done
58:57 - i'll check the chat while this little
59:00 - spinner is spinning
59:04 - see hey phoenix is here how's it going
59:20 - what
59:22 - the specified ip address is in use and
59:26 - would result in a conflict involved
59:29 - value for resource iphs
59:49 - okay then
59:58 - it's not going to let me edit this
60:06 - ah here we go
60:07 - edit
60:29 - hmm
60:32 - well everybody
60:34 - i think i just failed
60:37 - i think i just failed pretty bad
60:42 - so
60:48 - i'm not sure i even remember where i put
60:50 - in that ip
60:54 - and how far back in the process that was
61:07 - i mean was that when we went to set up a
61:09 - static ip
61:43 - all right so let me
61:45 - i don't really have enough time to go
61:47 - back and fix that so let me say assuming
61:49 - that would have worked
61:51 - we would go back to these original
61:52 - directions that we started
61:54 - started at
61:56 - um you would if you haven't already
61:58 - created a bucket you'd create your
61:59 - bucket
62:00 - and then you'd go back to the load
62:02 - balancing page
62:04 - you'd go to um
62:07 - the back end configuration
62:11 - and i i think you would just
62:14 - add your static bucket
62:18 - you would add the back end for your
62:20 - static bucket
62:22 - and
62:23 - for your host and path rules you would
62:26 - just add
62:27 - so we had already added that path for
62:29 - video we would do the same thing in
62:31 - there with static
62:37 - and
62:40 - then we would just set up
62:43 - our addresses
62:44 - to get to that static bucket
62:47 - where we put in our our external address
62:53 - so the rest of the steps seem really
62:55 - simple and straightforward so we went
62:58 - through the hardest part
63:00 - and we went through most of it
63:02 - um
63:04 - at some point though
63:06 - i messed up
63:09 - i i suppose
63:11 - um so
63:14 - yeah so i don't have time to fix that
63:16 - and
63:18 - i'm not really sure so i p address
63:22 - already in use okay so
63:27 - yeah i don't know i don't know what
63:28 - happened with that
63:31 - but
63:32 - if you wanted
63:33 - to set up load balancing for your
63:36 - buckets so that you could use
63:39 - a
63:40 - to you could have a static ip address
63:43 - that that you could use
63:44 - um
63:46 - and point an a record to that
63:49 - so you'd have your custom domain that's
63:51 - how you would do it
63:53 - [Music]
63:56 - that's a lot of steps so i guess it's
63:58 - something to consider uh in my case i
64:00 - think i'm not gonna do it i think i'm
64:02 - just gonna stick with the url that is
64:04 - the default that google gives me
64:07 - uh i i don't think
64:11 - i don't really think it's worth me going
64:12 - through all these steps and paying all
64:14 - the extra money
64:15 - for those extra
64:17 - for all the extra setup
64:19 - just to be able to do that if it happens
64:21 - at some point in the future
64:23 - that i find some reason why i should do
64:26 - it like that
64:27 - then i will
64:29 - um and at least we've gone through it
64:30 - once
64:31 - and i know what's involved
64:36 - but
64:37 - i mean it was
64:38 - it was cool to go through and
64:41 - find out more of google cloud platform
64:44 - because there's still a lot of it that
64:45 - i've never even seen and never used uh
64:48 - so that was kind of cool hopefully
64:51 - this this was helpful to somebody out
64:53 - there uh to go through some of this
64:56 - and
64:57 - i guess the last thing i'm going to do
64:59 - is make sure i'm not going to get billed
65:00 - for any of this
65:04 - so where's my billing
65:06 - can i turn it off for this project
65:09 - test project
65:11 - disable billing
65:16 - yep
65:18 - there we go and i do want to disable for
65:22 - this
65:25 - as well
65:26 - and
65:30 - i'm going to leave that here for now but
65:31 - at some point i need to move that onto
65:33 - the university account
65:38 - all right
65:41 - cool so
65:42 - hopefully i don't get built at all for
65:44 - that small amount uh that i used but
65:48 - uh you never know
65:51 - if i do get built it'll it'll probably
65:52 - be very very minimal so i'm not too
65:55 - worried about it
65:56 - all right
65:57 - i'm gonna now go to
66:00 - the live chat
66:03 - and
66:06 - i will
66:09 - i'm sorry i'm still trying to chat with
66:11 - my my co-worker here and figure figure
66:14 - this out
66:21 - there's something going on with one of
66:22 - the links on the main website we're
66:24 - trying to figure it out
66:50 - okay
66:52 - all right it looks like he he found it
66:54 - so
66:57 - that's good
66:59 - all right let me uh so if you have any
67:01 - questions right now uh please put them
67:02 - in the chat now i'm gonna answer all the
67:05 - questions
67:06 - that i can
67:30 - okay uh sabin are you hosting wordpress
67:33 - as well on a google virtual machine no
67:36 - i'm actually not so uh i'm i would like
67:39 - to host wordpress with next um
67:43 - and that's a
67:45 - service from
67:46 - zeit
67:47 - it's the same company that makes um next
67:50 - js
67:52 - i'm sorry did i i think i said that
67:54 - wrong i want to host
67:56 - wordpress with now
67:59 - which is from the same company that does
68:00 - next
68:02 - um
68:04 - potentially we could host it
68:06 - on on a vm as well
68:08 - so right now i have it running on
68:11 - digitalocean
68:14 - uh but
68:16 - so
68:17 - if for some reason it doesn't work out
68:19 - using now it'll probably just stay on
68:21 - digitalocean
68:22 - but i'm i'm pretty sure that it
68:25 - uh it can work
68:28 - i've successfully tested it i just want
68:30 - to make sure that it's it works as well
68:32 - and as easy as i expected to
68:38 - uh jacob says google cloud versus
68:40 - digitalocean
68:42 - uh sabin says i think digitalocean is
68:44 - more affordable just my opinion
68:46 - uh honestly for me i'm i'm not 100 sure
68:49 - about the price
68:51 - uh i've never really looked into it
68:53 - like that deeply but digitalocean
68:57 - is easier
68:58 - and in my opinion digitalocean is easier
69:01 - although
69:02 - you know i've worked more with
69:03 - digitalocean
69:04 - so it may just seem easier to me
69:07 - uh their
69:09 - google cloud just has so much stuff
69:11 - going on it's it can be overwhelming
69:13 - there's a lot
69:14 - so
69:16 - that's good because you know potentially
69:18 - you can add in all these extra services
69:20 - as you as you grow you know as your app
69:23 - grows and they're all right there so i
69:25 - mean there's a benefit to that
69:27 - complexity if you think that you need it
69:29 - later on
69:36 - nikki says there's that rule from
69:37 - someone on twitter every program that
69:39 - can be written in javascript will
69:41 - eventually be written in javascript yeah
69:44 - i can't remember who who said that
69:46 - originally but i do hear that repeated
69:48 - from time to time
70:03 - um matt that's just saying i'm hearing
70:05 - loads of great things about digitalocean
70:07 - and javascript is popping up everywhere
70:09 - for full stack everything yeah for sure
70:12 - for sure i do like digitalocean
70:14 - um i've used it i'm hosting a lot of
70:17 - stuff there right now so i i like it
70:22 - and javascript i mean
70:25 - i've used
70:26 - i've done some workshops where you've
70:27 - got we've used javascript to create um
70:31 - internet of things
70:32 - stuff
70:33 - um
70:35 - which is
70:36 - so cool right made like a little um
70:40 - a little car that you could control
70:42 - through like i don't remember if we did
70:44 - wi-fi or bluetooth but you could control
70:46 - it through your computer keyboard
70:48 - right this it was cool and it was a
70:51 - node.js
70:52 - um
70:54 - program that was running it so i mean
70:55 - that that's just cool uh i've seen
70:57 - people on youtube do machine learning
71:00 - with uh javascript um there's just
71:03 - there's not an area right now
71:07 - um where something's happening with
71:09 - programming
71:10 - that there's not a way to do it in
71:12 - javascript that was a really confusing
71:14 - way to say it
71:15 - let me say it differently
71:19 - i said if there's something happening
71:21 - with in the programming world right now
71:23 - you can do it with javascript
71:25 - i think that's a better way
71:27 - it's a better way to do it
71:29 - is javascript always the best option i
71:31 - don't know probably not but is it an
71:34 - option
71:44 - hey i think this is our guest
71:59 - so i am on youtube let me
72:03 - let's expand this screen a bit
72:06 - and
72:12 - i'm going to show
72:14 - more of the screen fiddle at me
72:17 - is that your camera
72:19 - the light
72:20 - yeah that's the camera i can't
72:24 - i need to change my settings real quick
72:27 - i have my camera zoomed in so i'm going
72:29 - to change it a bit so it's just a little
72:31 - bit um
72:35 - filters
72:36 - a little bit wider
72:38 - oh
72:39 - hello
72:41 - so let's i'm going to zoom it all the
72:43 - way out
72:57 - all right
72:58 - all right cool this works this works
73:00 - all right cool do you want to say hi
73:02 - hello
73:03 - youtube world
73:06 - all right so hopefully you'll be helping
73:09 - me with some of the data yeah
73:11 - so
73:12 - i i just happened to run into her in the
73:15 - uh the office kitchen and um we started
73:19 - talking about websites and so she has
73:22 - some experience with websites so she was
73:24 - a student here took a web
73:27 - web design course
73:29 - and
73:30 - also had a job
73:33 - where she was stuck
73:35 - trying to make the best of a terrible
73:38 - website
73:40 - uh so as she was telling me all of her
73:42 - experience with this website i was like
73:44 - wow you're already a web developer like
73:45 - this is what we deal with right like we
73:47 - have problems and we figure out how to
73:50 - solve the problems
73:51 - um
73:52 - and
73:53 - so
73:54 - she was saying
73:56 - that she's she's looking for a job and
73:59 - so i said hey i'm
74:02 - uh i'm offering a job so
74:05 - yeah so we got to work out the details
74:07 - but
74:08 - hopefully she'll be she'll be helping
74:10 - out so you might see her on a future
74:12 - stream if you want that's cool sure i am
74:15 - cool with anything
74:16 - all right cool so
74:18 - at this point in the show i was doing
74:19 - some question and answer isn't that cool
74:21 - yeah all right
74:23 - so
74:24 - this is the last thing i do so after
74:26 - this will be done and then i can show
74:28 - you some
74:29 - some other stuff
74:32 - all right
74:33 - so i lost my place let me find it
74:35 - sorry
74:46 - okay so nikki that quote that we just
74:48 - said about everything that can be
74:50 - programmed in javascript will eventually
74:51 - be programmed in javascript it was from
74:53 - the co-founder of stack exchange so
74:57 - thanks for that nikki
74:59 - and
75:03 - all right sabine says lenode also offers
75:05 - a cheap virtual machine
75:07 - but i prefer
75:08 - digitalocean uh okay
75:11 - cool yeah i've done
75:12 - some stuff with lenode but only like
75:14 - i've inherited lenode based sites so i
75:17 - haven't really done anything
75:19 - like from scratch
75:25 - uh john hanson says i thought firebase
75:27 - firestore was free um maybe free is in
75:30 - google maps api yeah a lot of google
75:33 - stuff has like a free tier that's that's
75:35 - limited it's good for testing things and
75:37 - maybe doing like um
75:40 - i don't know small projects small apps
75:42 - so i'm assuming it's like that for
75:44 - firebase as well
75:46 - uh matt duchess says heroku has a free
75:49 - package
75:50 - yeah i think they do too i need to check
75:52 - into heroku because i
75:55 - one of the conferences i was at i got
75:57 - like a card that with a code on it that
75:59 - i could use to get a bunch of free
76:01 - um
76:03 - uh free dino minutes or hours
76:06 - on heroku
76:11 - michael says so uh for some context in
76:14 - case you weren't watching earlier when i
76:17 - was setting everything up with the
76:18 - google cloud platform i said i'm not
76:20 - sure how much they're going to charge me
76:22 - for this
76:23 - because we're just experimenting uh and
76:25 - michael says i don't think i've used the
76:26 - phrase i'm not sure how much i'm going
76:28 - to get charged for this experimentation
76:30 - since i went to mardi gras in new
76:33 - orleans so
76:35 - um
76:36 - hopefully you didn't get charged too
76:37 - much for that michael
76:40 - i've never been to mardi gras that would
76:42 - uh would be cool
76:45 - and i'm hoping i don't get charged too
76:47 - much either
76:50 - i just resized my font now i'm lost
76:52 - again on the live chat
76:59 - okay cool i found it
77:12 - martin asks does serverless architecture
77:14 - mean using pre-built apis like firebase
77:17 - or doesn't mean something totally
77:18 - different
77:20 - um
77:24 - i mean you can do there's a lot of
77:26 - different options yeah but like
77:28 - essentially serverless
77:30 - this is not an official definition but
77:32 - like you're always going to have a
77:33 - server it's just
77:35 - is that going to be your server or
77:36 - somebody else's and are you going to
77:38 - maintain that server
77:40 - so serverless is going to allow you to
77:42 - just like send off your code have it run
77:45 - you don't have to worry about any server
77:47 - maintenance at all
77:49 - so however you set that up
77:52 - um
77:53 - you know it just it depends depends on
77:55 - what you're doing what is aws has lambda
77:58 - i think
77:59 - um
78:00 - i'm not sure what the equivalent is
78:02 - called in in google or microsoft azure
78:06 - but
78:07 - i don't know that's my take on on
78:09 - serverless though
78:19 - and
78:20 - nikki and michael were talking about
78:23 - lil wayne songs or lil jon song so i'm
78:26 - not i don't i was don't know what's
78:28 - going on on that side conversation
78:35 - john says i need some of what jesse's
78:37 - drinking mind altering in order to
78:39 - heavily focus
78:41 - energy okay so i was just drinking water
78:43 - during the stream but i did have g fuel
78:45 - beforehand
78:46 - so
78:47 - uh once again if anybody from g fuel is
78:50 - watching i'm open for sponsorship
78:53 - you gotta give this
78:54 - a g fuel sponsorship even if you just
78:56 - send me some g fuel every month i'd be
78:58 - happy with that
79:04 - jacob says ola from stevenville ohio
79:07 - jacob are you in stupidville right now
79:11 - let me know
79:20 - oh uh nikki said so at the end whenever
79:23 - my my ip address wouldn't work and it
79:25 - just it completely failed um nikki had
79:29 - an idea that i would open that terminal
79:31 - session
79:32 - and i may not have ever closed it i
79:34 - closed the window but i didn't like exit
79:37 - it from the terminal so
79:38 - that could have been the cause of the
79:40 - error so
79:41 - that's a good idea i
79:43 - didn't even think of that at all
79:46 - um
79:48 - powwow says how often do you record live
79:51 - coding uh i try to do five days a week
79:54 - but
79:55 - oftentimes i don't get five days a week
79:57 - uh just because of meetings and things
79:59 - so
80:00 - um
80:01 - i mean usually it ends up being more
80:03 - like three
80:04 - three days a week
80:08 - world's asked if digitalocean is easy to
80:10 - use and easy to see costs yeah for sure
80:13 - the pricing on digitalocean is really
80:15 - upfront
80:17 - totally totally easy to figure out what
80:19 - your your cost is going to be
80:27 - michael says what main package would you
80:29 - need to do machine learning with js
80:32 - ah i can't remember what it's called
80:35 - um
80:37 - i mean there's more than one
80:43 - i can't remember
80:45 - uh check out
80:46 - what channel is it um
80:49 - learn code
80:51 - dot academy is the channel will stern
80:54 - does that youtube channel one of his
80:56 - recent videos i think his last two
80:58 - videos that he put out was doing machine
81:01 - learning with javascript
81:04 - so
81:05 - check those videos out they're pretty
81:06 - short i think maybe 10 minutes each or
81:08 - so
81:09 - that'll give you at least one way to do
81:11 - it
81:15 - and if you can't find that channel go to
81:16 - my youtube channel the links in the
81:18 - description and i link to his channel
81:20 - from my my home page
81:37 - okay nikki says there's a
81:39 - tensorflow.js now okay cool so check out
81:42 - tensorflow that's not the one that will
81:44 - stern was using in his videos but
81:46 - um
81:49 - uh tensorflow is really well known so if
81:51 - they have a javascript library now i'm
81:54 - assuming that it's pretty good
82:01 - oh you never mentioned your name do you
82:03 - want to know your name sure i'm sorry
82:05 - guys my name is haley
82:07 - all right so no i no i so
82:11 - just a y no no y either it's just
82:13 - h-a-l-e-y
82:15 - h-a-l-e-y super basic
82:19 - all right cool so haley so you said john
82:21 - says uh joe murphy says future show live
82:24 - coding with jesse and haley
82:31 - sorry i didn't introduce you that's it's
82:33 - okay i've never been on a stream before
82:35 - guys so sorry
82:37 - not used to it
82:43 - jamallah says give me free google credit
82:47 - can i do that do they have a referrer
82:50 - program
82:52 - if anyone i do have referral codes for
82:54 - several other things so like if if
82:57 - anybody's interested i could i could
82:59 - give you my referral codes for stuff so
83:01 - you know usually you end up getting some
83:03 - something free
83:18 - alright looks like i'm down to the last
83:20 - question
83:21 - uh so unless somebody puts a question in
83:23 - there
83:24 - uh in the next minute uh we'll finish
83:26 - things up so world says have you ever
83:28 - had issues and react with sizing several
83:30 - components to fit the viewport i've
83:32 - wrapped them but the bottom component
83:35 - never fits
83:37 - um
83:38 - i don't know it's kind of hard to say
83:40 - worlds if you have the code on github
83:42 - let me know um you could send me a dm on
83:45 - twitter
83:47 - and i could check it out
83:49 - more i'd kind of have to see the code
83:50 - because i'm assuming that that's more of
83:52 - a css issue and not necessarily a react
83:56 - issue
83:58 - so um
84:00 - i could
84:01 - i could probably check it out though and
84:04 - and give you at least point you in the
84:05 - right direction
84:09 - matt duchess says to build a blog or a
84:11 - site to advertise your affiliate links
84:14 - i've been thinking about doing that my
84:15 - personal website is so old i haven't
84:18 - updated it in
84:19 - years like
84:21 - i don't know like three or four years so
84:24 - i need to just change it and and put my
84:27 - links on there and update it with stuff
84:29 - that i've actually done
84:31 - uh within the last three years
84:34 - um
84:35 - but i think that's a good idea uh john
84:37 - murphy says do you use ssh keys or just
84:40 - password for root on digitalocean i
84:42 - always use ssh keys
84:44 - i usually try to disable root user and
84:47 - disable passwords completely
84:49 - just go with ssh that's a lot more
84:51 - secure although i do make sure i have
84:53 - more than one computer that has ssh keys
84:56 - for it
85:01 - michael says she knows how to do product
85:03 - placement yeah
85:06 - they wanted to know what i was drinking
85:08 - missed twist i mean i've never even
85:10 - heard of that it's the big k brand which
85:12 - i wouldn't be drinking but it was the
85:14 - only kind my sister had when i visited
85:16 - her earlier today you could try to get a
85:18 - sponsorship for that
85:22 - that's what we want we want coca-cola
85:24 - that's what i should be drinking
85:28 - uh nino asked well right when i said uh
85:30 - we're all with the last question
85:32 - everybody started asking questions
85:34 - all right so um
85:36 - nino says i learned javascript uh
85:39 - redux what is next
85:42 - i would say what is next is build some
85:44 - awesome stuff uh you definitely know
85:47 - i mean try maybe learn some graphql so
85:49 - that you can pull some data into your
85:51 - react applications
85:53 - uh if you want to move into back end
85:55 - stuff then learn some node i mean
85:57 - otherwise i mean if you know javascript
85:59 - react in redux you know you're
86:00 - definitely in a good position to make
86:02 - some awesome things
86:06 - i'm had dutch it says it's okay haven't
86:07 - you built mine yeah i'm terrible about
86:10 - working on my own website
86:24 - all right
86:25 - i'm officially at the end of the chat
86:28 - now so
86:29 - thank you all so much for watching sorry
86:32 - i didn't get what we were working on to
86:34 - work almost we were so close
86:37 - um
86:39 - if anybody gets it to work let me know
86:41 - if you try to do this on your own
86:44 - i'd like to know like
86:46 - does it work is it awesome
86:48 - um yeah so i should be back tomorrow
86:52 - see i have meetings in the morning
86:54 - tomorrow so it'll probably be another
86:55 - afternoon stream i'll be back in the
86:57 - office
86:58 - um
87:00 - yeah so anyway thanks again and until
87:02 - tomorrow have a great day bye guys

Cleaned transcript:

hey everybody welcome to live coding with jesse i'm jesse and today we might not do what i said i was going to do in the title of this video uh so my plan was we were just going to start completely from scratch look up how to do this and do it but i had a few minutes before the live stream was gonna start and i couldn't really start anything big so i thought okay i'll just look up some documentation on how to do this and i realized that if we set up what we wanted to set up which i'll explain in a minute it might not work out because we can't use https so let me we'll get into it and we'll still kind of go through the process uh but we need to think about what effect this is going to have on our site and if if we really want to set it up like this so if if you have no idea what i'm talking about don't worry i will explain everything i'm going to give everybody a few seconds to to get in here um i know i i started to i announced the stream a little bit later than normal so in case somebody's coming in late let me give them a minute here um hey everyone it's it's here right now um looks like the notifications did actually go out for this video let's see yeah i think i just got one on my phone okay cool sometimes they don't work when i started so late so i had a pretty long meeting earlier in the day but it went well so that's why i'm streaming a bit later today and we may have a guest we may have a guest a little bit later on uh i was attempting to recruit someone to help me uh with this project with some of the uh the data work and so she might stop by during the stream depending on how long the the stream goes and so that'll be cool and why my face the light on my face looks super weird i don't know if it looks weird to everybody else but let me turn this light down a little okay i guess that's kind of better i don't know it's just looking weird to me um okay so let me let me switch my screen so you all can see what's happening nope that's not it this is it okay and the light actually looks a bit better in this use so that's nice uh so here's what we're working on today let me make it bigger hopefully come on bigger it's a little bit of lag happening so i'll describe what it is then since it's the text isn't getting bigger so this is a google cloud platform storage bucket uh and we set that up yesterday yeah we set this up yesterday we connected it to wordpress and got that working now i'm what i'm in the middle of doing there we go finally get a little bigger what i'm in the middle of doing is bringing over all of the files from the old site and keeping the same file structure and in terms of files mainly i mean images and i mean pdfs you know things like that that would appear on the website uh the reason being when we brought over the markup from the old site it still refers to a lot of these files in the same structure so we can take advantage of that and not have to redo a lot of things by just using um relative urls in the markup and then when they come over when they get to the react components we'll just prepen the url of wherever they're at in this case right now it's the storage bucket so let me show you how we've we've done that in react uh i think i believe it's here is it yeah this is it let's make sure we're up to date we'll do a get pull okay and let's take a component where i know we've already used this technique just to show you how this is going to work let me think the faculty dot js page i believe we're using this there we go okay so on the faculty.js page we're pulling in data from wordpress with graphql but then we're we're going through that data and we're manipulating it a bit before we actually render it to the page so you see here anywhere that we see a src equals right which is you're pretty much for an image we're prepending franciscan.edu because right now that actually works because that site is still connected uh to all those files right but when we switch over and point that url to our new site this isn't gonna work anymore so we're gonna need to replace this with that google storage bucket with that url so the idea that i i thought would work was okay well let's do a cname record and let's point it to that cloud storage bucket and that way we'll have like a cleaner look and it all you look like it's coming from the same place i don't think that's going to work though so let's let's check it out just you know to see how we would would go about doing this let me give you i have two examples i can show you one is the official documentation uh and the other one is just looks like maybe a tutorial someone else did it's a little bit dated though but i i think it it shows the same point let's try to go through the official documentation first if it's a little too too much to go through then we can always switch switch back and let's clean up what we have going on here and let's pull this over come on here we go is he gonna let me put it in there no oh well so i'll just zoom in quickly on the part that we need to look at uh so basically like right we make the cname record and then instead of having to type in this url we can now type in in this case they use travelmaps.example.com right and see they can type that in and then get access to that image right great that's what i wanted but if we look at this note it says you can use a cname redirect only with http not with https to serve your content through a custom domain over ssl you can set up a load balancer so it's not that it's impossible it just requires a load balancer so we could check it out see how hard that's going to be maybe we'll maybe we could do that we'll see if it's not that hard might be worth it i just i don't know if it's worth it to go through the trouble of setting up a load balancer for this i don't know let me know what you all think i'm not sure that that's you know how many people are even going to realize what url the images are coming from you know really probably only other devs that open up devtools also let me let me start my timer now that we're going to start to get into things here uh let's start that pomodoro timer if i have it there we go i thought i had it so i'm gonna mainly focus on on what we're doing here with this cloud storage bucket uh for the next 25 minutes and then i'm gonna go back to the live chat after that for about five minutes and answer any questions uh that you all put in there so if you're asking questions in the live chat please be patient and i will get to those i'll keep my eye on the chat though in case anything pops up that's you know maybe i should address immediately okay so there's our i lost my there it is okay so let's just check out this load balancing stuff let's see if we can do it uh realistically i don't i don't really know who would need a cdn that only uses http i'm right i mean everyone wants http now it just doesn't seem that useful to me anyway so i assume if we have to load use the load balancing to get https there are going to be other people that want to do it so you know this this would possibly be valuable for you all even if i don't necessarily end up going with this uh let me copy and paste this into the live chat for you all and then that way you can check it out if you'd like all right all right i'm just gonna skim over this at first and see if there's anything that stands out they're like oh we shouldn't do this all right so we already have a cloud storage bucket so we don't we don't need to create one so we've already done all this let me know if i have a fan running it's pretty warm in here so um let me know if it's too noisy and i'll turn it off i tried to like turn it down as low as it'll go and kind of point it away so it's not blowing right on the mic but i can't really tell with the headphones on if it's too loud okay cool so it looks like you'd create a second bucket to do the load balancing from hmm all right looks like there was one other thing it content base complete the guide for content based load balancing let's check out that guide as well uh if i'm going through this too fast you know feel free to click on the link or copy and paste the link from the live chat you can check it out a little bit slower more slowly is that the proper way to say that instead of slower i think it's more slowly hmm okay so from what i'm seeing uh when you set up the load balancer like this basically the load balancer has a static ip address which obviously if you have static ip address right you could point the domain name to that's what i'm assuming uh this is what happening so instead of a c name you could i guess make an a record use that for your domain i let i'm going to give you all a chance do you think we should go through creating a load balancer so that we can point a domain name and use our own domain i don't know let me know the more i think about it the more i think maybe it's not worth the trouble at this point uh so i'll give you all a minute because of the delay in the video uh to let me know we for sure have a lot of other things that we could work on so it's not like i'd end the stream we would just maybe switch over and work with the mysql database so i'm getting a few answers in there i'm going to give you all maybe like 20 more seconds to let me know hmm um all right so here's here's the answers that i've been so far looks like yes do it um just walk us through like children and put the reference material in the description john says there's always another way okay so it looks like you all want to i mean i've only heard from a few people and there's a lot more people watching so of those who responded it's you you all want to do this so i guess we can uh we can try it out and let's see how um might not be a bad idea then for me to move this documentation over to another screen so that i can reference it and then we can actually do everything here on this screen so the first thing we'll probably do is let me switch let me switch over and i'll leave this open you see this this particular page is since all this stuff is loading and i'm streaming at the same time it's it's going to be impossible to work with this page so what i want to do is open up another instance of google cloud platform here and i'm going to switch over to my account because i don't i don't want to mess with this in in case i decide not to go with this live and also um i don't want to mess up all the stuff that's being uploaded right now and let's see oh it looks like something must be wrong with freecodecamp.org right now but i i think they're just making some updates so okay uh yeah so if you're having trouble getting on right now uh sorry about that i i don't have anything to do with the update so i don't know for sure but uh usually when this happens it's not it's not too long you know things will go back to normal soon and okay we got a question what are you uploading i'm uploading data from the old website or i guess the current franciscan.edu website uh so a lot of the images and pdfs that are available on the website i'm moving them over to our new store so like right now they're hosted on a server on campus here at the university so we want to host them uh in that storage bucket that we set up yesterday all right so first things that first thing we need to do is create a bucket so let's do see what projects we have um i have so many projects i'm not even using let's just start a new project and create projects let's say i don't know just uh test project there we go this one i'll just use for um whatever whenever i need to test something no i'll have a project for that what happened where did it go oh okay it's it's going it's creating creating test projects if you'd like to follow along i'm going to paste the um the url in there one more time for anybody that missed it that's it there now awesome all right so we're now on test project and freezing all right and uh the link that i just gave you the first step is gonna uh tell you to complete the guide for a uh con for content based load balancing so let me put the link in for that as well so that second link i just pasted in is a link for that uh if you've already gone to the first section you know you could just click the link that's in there so all right so we need to go to the create a virtual machine instance all right let's check this out this is cool this will be some new stuff that we haven't worked on before um i've never gone to that page before let me see which one this is um vm instances there we go it's under compute engine we're going to go to vm instances and we're going to go to create instance oops all right it's getting ready so we get the little spinner there so while that gets ready i'll check the chat oh a noob thank you i didn't i didn't see that comment but anu said the vms are found inside compute so thank you for that i should have just looked over immediately hey nikki's here how's it going i guess i'll take a drink while i'm waiting it's always important to stay hydrated right oh i've never done this before in google cloud didn't realize it would take this long uh i'll check in the chat and see if there's anything else in here that i missed love johnson says can i use this to run ubuntu on an old mac or to run python uh i don't know i mean i guess if you're creating a vm i mean you can do what you want with it so i never thought about doing that but i guess it will work so i don't i don't know for sure if it would work uh but it seems like it could all right cool so now we're ready now let's create create the instance and we're going to set the name to www and we'll use we'll just keep the default zone uh let's see machine type yeah that's fine i'll probably keep most of this stuff default we need to find management disk networking ssh keys there we go and just blocks okay startup script field so we want to insert some code into the startup script field uh let's check this code out so aptget update app get installed okay so we're installing apache ssl and then restarting apache and then echoing uh html a very small html page okay cool uh we're gonna leave everything else as default and we will create that okay all right cool so that's there now it says it says to do the same thing with video i guess i'll do it just for the sake of being consistent with the instructions um let's do that so let's create another instance and name this for those of you that are joining us recently in order to create a cname record no no in order to create a custom domain name for our cloud bucket that actually uses https you have to set up load balancing so that's why we're setting up this load balancing stuff first in order to make that work okay and i'm gonna put in a custom startup script in here that's almost identical to the other one but it just has some different data here in the index page and let's create that now we're going to make a firewall rule to allow traffic to our vms so let's go to firewalls page which let's see how we're gonna get there no i saw firewall there we go firewalls was it the right page i don't think so i was firewalls i need to find firewall rules there we go firewall rules all right actually did my all right i still got five minutes um in about five minutes i'm going to go back to the live chat answer some questions so if you have any questions uh please put them in the live chat sometime within the next five minutes okay so here's our firewall rules page we need to create a rule and we're going to name it www firewall and let's set let's see networks default and our source filter we're going to allow sources from from any source so basically to do that we're going to do 0.0.0 dot zero slash zero okay and let's set our our ports and we'll go for right now let's do port adn 443 port 80 is your normal http port port 443 is your um https port since we're just testing this out i'm fine with allowing both um but in a production environment i'd be more comfortable if i just ran port 443 and you know had port 80 disabled okay and one more target tags here um let's do http tag um and then we're gonna do https tag since we're doing both we'll put both in there and now let's create and as soon as this spinner's done we can go on to the next step yay all right cool uh so let's go back to our vm oops no what happened i'm going to refresh because it just froze up i'll go back to the menu there we go vm instances okay external ip let's check this out so we're going to copy the ip and paste the ip see what happens so we should see that um those very tiny little html files uh that were there that's that's what should come up so i don't know how long it's supposed to take here let's click the other one too to just get it started since it seems to be taking so long let's try the http explicitly hmm not working okay all right why is it not working open in browser window all right let's try that let's allow popups and try this again open and browse window all right my timer did go off so let me set a short break here okay so uh so it did allow me to go in here so i had thought that i would actually see the html maybe i'm not supposed to see that maybe that's not how it was set up it's not exactly clear all right well let me go back to the chat i'm going to scroll up make sure i don't miss any questions and go through as many questions as i can in five minutes uh not really a lot of questions so trying to find some uh john asks if the google cloud platform is feasible for small apps uh it i've never tried out for small apps but it seems like a lot of the pricing is based on usage excuse me it's all based on usage so it might it might be affordable i never really tried to figure out how much it would be for something small so i don't know if it would be cheaper to go with you know a different service that focuses more on small things i don't know has anybody has anybody ever used use it in that way i mean it seems like it's there's a lot more features than you would normally need for something small so if in terms of complexity you know they're definitely you know less complex ways of doing it but in terms of costs i'm not really sure what would be cheaper uh says what what language is more future proof i'm trying to figure out which language to learn first thanks oh um well it's hard to tell the future right uh if you're if you're going by trends i mean realistically javascript has been gaining ground for a long time now more and more things are being built with javascript that couldn't be built with javascript before um right like when when i was in high school and just learning how to do websites you couldn't do javascript on the server right that didn't exist and what you could do with javascript was actually pretty limited now you can do a lot i mean you you do everything you wanted anything that you can do normally in a programming language you could probably find a way to do it with javascript so just the growth there makes me think that if that trend continues it's it's going to be you know continue to be one of the main languages but there are other languages that are so entrenched in a lot of big companies in the in the code bases for these huge companies that they're not going to go away anytime soon so like there's so much stuff built with java python php like those big languages like there if they ever go away it's going to take a long long time i mean just consider like there are still companies that use cobol right which is an ancient by computer standards it's it's ancient but you know there are there are code bases out there that change infrequently uh but they still need people to maintain them so i wouldn't worry so much about your language not being around in the future as long as you pick a language that is you're kind of one of the top languages you're safe if you go with some really obscure language that's not used very much right now that could potentially die out and and nobody will use it right so if if you're i think probably like what are the the top like i mentioned java javascript python php this is not in any particular order python php um those those are your big ones if i'm leaving one out let me know uh but oh i'm forgetting like uh c sharp i mean there is still even stuff done in c plus plus right so but i'm gonna say this is my five that i'm gonna say are probably gonna be around for a long time c sharp java javascript python php if you pick any one of those you probably don't have to worry about you know that language not being used anymore for a long time so i mean as for smaller languages there's a ton of small languages uh there's i'm sure there's lots of smaller like computer languages that aren't used that i've never even heard of right i probably will never hear of them that's not necessarily a good thing if you're trying to get a job right so there's not a lot of jobs out there so anyway i i know starting out that's like a huge question and a source of anxiety like what should i pick but it's always easier to learn your second computer language because you have the concepts down so even if you decide later on you don't really like the one that you chose to learn you know don't worry about it too much you can always switch it'll be a little more work but not quite as much work as learning it you know the first time all right my timer is up so we're gonna do another pomodoro session and then i'll come back uh and i see there's some more discussion going on there so i'll check that out after i come back uh so we'll probably just end up doing one more session uh and then i'll do some more questions and then we'll finish up for today oops where am i at uh back here all right well now that i'm in here let's just look around see what we have hmm okay it looks like we're running apache right based on the code that we the startup code we're running apache so we should have um we're going to go into that oops this is probably really small i'm sorry everyone let me try to make this bigger so this is this is all that i've done i just uh backed out two directories from my uh default directory that i was in so and then i went into the ver or var directory and then www which is your default directory for serving websites in apache and so now i'm just listings and that's our index.html file uh that i was thinking that we'd see if we actually went here whoops so uh we can see like obviously things are there um there is stuff there the stuff that we did worked i guess we can verify that that that step did work uh if we go in i'm assuming nano is here no no index and yep there it is so there's that html that we had there i'm going to get out i don't want to edit that okay so that's that's there i'm just gonna leave for now hopefully i don't need to go back in right away let's see all right so now we need to make a an ip address so we're going to go to the external ip addresses page which is there we go external ip addresses and let's reserve a static address and the name i'm just going with the name from the tutorial uh we're gonna go with the ipv4 and we want it to be global and hopefully i don't get charged too much for all this i'm gonna cancel it all as soon as i'm done uh and click hey now's a great time to bring up my patreon page so if you'd like to help support my streams uh check out my patreon page and help me out when i do stuff like this and just not sure how much i'm gonna get charged for all this experimentation all right let's create an instance group now and where do i go for that let me see um instance group i'm going to create a new one just got a message from work i need to answer this hold on one second okay all right so we're going to create one um let's set the name to resources and we're going to set the zone to us central one b i'm not really sure why where you take picking that particular zone uh the instructions here uh don't really say so if you want to follow along and see if see the instructions yourself click on that link that i i put in the live chat a little earlier we're going to set the group type to unmanaged instant group instance group and let's see for vm instance where are we on unmanaged it says no available instances yeah that must have been a mistake in the documentation because um obviously we didn't make instances in that particular zone so let's set www and so that's going to be our instance and then we're going to create another instance group for our other for www uh dash video okay create and let's just go back and create another one and this will be whoops let's call it video video resources unmanaged and let's add a video create that see all right cool those are finished oh all right sorry i lost my place i was looking ahead and lost my place in the documentation now i'm back um let's set up we're going to set up a lot of stuff so now we're going to name our load balancer so let's go to our load balancing page which where did we set that up at why is it this is freezing up somewhat frequently all right so i don't know where i load balancing pages um there we go load balancing and load balancers under https load balancing click start configuration interesting i'm not getting the same all right maybe i'll keep click create okay i had to click create first that was the problem um https load balancing let's start and let's name it web map and back end let's say create a backend service let's name it web map backend service all right let's say all right i'm just going to leave since it'll be faster i'm going to leave that as default um instance group www resources port 80. let's do it i'll check i never set up a health check all right let's set up a basic health check um http basic check and i'll just leave everything default okay okay all right so i think we're good and we'll just repeat that for video video service do video resources and health check let's yeah let's create the health check um all right let's create that okay all right let's go to host and path rules and okay so let's go with hosts um and then we're gonna set our pass to video and video there we go okay wonderful let's do front end and let's say http content rule and we're just going to do http to save some time normally you'd want to go with https though all right ipv4 there we go and good ipv6 let's go with http content ipv6 rule i thought earlier in the documentation we didn't do an ipv6 um all right and let's review and finalize and click create i guess you have to wait till this is done the good news is it seems like we're almost done i'll check the chat while this little spinner is spinning see hey phoenix is here how's it going what the specified ip address is in use and would result in a conflict involved value for resource iphs okay then it's not going to let me edit this ah here we go edit hmm well everybody i think i just failed i think i just failed pretty bad so i'm not sure i even remember where i put in that ip and how far back in the process that was i mean was that when we went to set up a static ip all right so let me i don't really have enough time to go back and fix that so let me say assuming that would have worked we would go back to these original directions that we started started at um you would if you haven't already created a bucket you'd create your bucket and then you'd go back to the load balancing page you'd go to um the back end configuration and i i think you would just add your static bucket you would add the back end for your static bucket and for your host and path rules you would just add so we had already added that path for video we would do the same thing in there with static and then we would just set up our addresses to get to that static bucket where we put in our our external address so the rest of the steps seem really simple and straightforward so we went through the hardest part and we went through most of it um at some point though i messed up i i suppose um so yeah so i don't have time to fix that and i'm not really sure so i p address already in use okay so yeah i don't know i don't know what happened with that but if you wanted to set up load balancing for your buckets so that you could use a to you could have a static ip address that that you could use um and point an a record to that so you'd have your custom domain that's how you would do it that's a lot of steps so i guess it's something to consider uh in my case i think i'm not gonna do it i think i'm just gonna stick with the url that is the default that google gives me uh i i don't think i don't really think it's worth me going through all these steps and paying all the extra money for those extra for all the extra setup just to be able to do that if it happens at some point in the future that i find some reason why i should do it like that then i will um and at least we've gone through it once and i know what's involved but i mean it was it was cool to go through and find out more of google cloud platform because there's still a lot of it that i've never even seen and never used uh so that was kind of cool hopefully this this was helpful to somebody out there uh to go through some of this and i guess the last thing i'm going to do is make sure i'm not going to get billed for any of this so where's my billing can i turn it off for this project test project disable billing yep there we go and i do want to disable for this as well and i'm going to leave that here for now but at some point i need to move that onto the university account all right cool so hopefully i don't get built at all for that small amount uh that i used but uh you never know if i do get built it'll it'll probably be very very minimal so i'm not too worried about it all right i'm gonna now go to the live chat and i will i'm sorry i'm still trying to chat with my my coworker here and figure figure this out there's something going on with one of the links on the main website we're trying to figure it out okay all right it looks like he he found it so that's good all right let me uh so if you have any questions right now uh please put them in the chat now i'm gonna answer all the questions that i can okay uh sabin are you hosting wordpress as well on a google virtual machine no i'm actually not so uh i'm i would like to host wordpress with next um and that's a service from zeit it's the same company that makes um next js i'm sorry did i i think i said that wrong i want to host wordpress with now which is from the same company that does next um potentially we could host it on on a vm as well so right now i have it running on digitalocean uh but so if for some reason it doesn't work out using now it'll probably just stay on digitalocean but i'm i'm pretty sure that it uh it can work i've successfully tested it i just want to make sure that it's it works as well and as easy as i expected to uh jacob says google cloud versus digitalocean uh sabin says i think digitalocean is more affordable just my opinion uh honestly for me i'm i'm not 100 sure about the price uh i've never really looked into it like that deeply but digitalocean is easier and in my opinion digitalocean is easier although you know i've worked more with digitalocean so it may just seem easier to me uh their google cloud just has so much stuff going on it's it can be overwhelming there's a lot so that's good because you know potentially you can add in all these extra services as you as you grow you know as your app grows and they're all right there so i mean there's a benefit to that complexity if you think that you need it later on nikki says there's that rule from someone on twitter every program that can be written in javascript will eventually be written in javascript yeah i can't remember who who said that originally but i do hear that repeated from time to time um matt that's just saying i'm hearing loads of great things about digitalocean and javascript is popping up everywhere for full stack everything yeah for sure for sure i do like digitalocean um i've used it i'm hosting a lot of stuff there right now so i i like it and javascript i mean i've used i've done some workshops where you've got we've used javascript to create um internet of things stuff um which is so cool right made like a little um a little car that you could control through like i don't remember if we did wifi or bluetooth but you could control it through your computer keyboard right this it was cool and it was a node.js um program that was running it so i mean that that's just cool uh i've seen people on youtube do machine learning with uh javascript um there's just there's not an area right now um where something's happening with programming that there's not a way to do it in javascript that was a really confusing way to say it let me say it differently i said if there's something happening with in the programming world right now you can do it with javascript i think that's a better way it's a better way to do it is javascript always the best option i don't know probably not but is it an option hey i think this is our guest so i am on youtube let me let's expand this screen a bit and i'm going to show more of the screen fiddle at me is that your camera the light yeah that's the camera i can't i need to change my settings real quick i have my camera zoomed in so i'm going to change it a bit so it's just a little bit um filters a little bit wider oh hello so let's i'm going to zoom it all the way out all right all right cool this works this works all right cool do you want to say hi hello youtube world all right so hopefully you'll be helping me with some of the data yeah so i i just happened to run into her in the uh the office kitchen and um we started talking about websites and so she has some experience with websites so she was a student here took a web web design course and also had a job where she was stuck trying to make the best of a terrible website uh so as she was telling me all of her experience with this website i was like wow you're already a web developer like this is what we deal with right like we have problems and we figure out how to solve the problems um and so she was saying that she's she's looking for a job and so i said hey i'm uh i'm offering a job so yeah so we got to work out the details but hopefully she'll be she'll be helping out so you might see her on a future stream if you want that's cool sure i am cool with anything all right cool so at this point in the show i was doing some question and answer isn't that cool yeah all right so this is the last thing i do so after this will be done and then i can show you some some other stuff all right so i lost my place let me find it sorry okay so nikki that quote that we just said about everything that can be programmed in javascript will eventually be programmed in javascript it was from the cofounder of stack exchange so thanks for that nikki and all right sabine says lenode also offers a cheap virtual machine but i prefer digitalocean uh okay cool yeah i've done some stuff with lenode but only like i've inherited lenode based sites so i haven't really done anything like from scratch uh john hanson says i thought firebase firestore was free um maybe free is in google maps api yeah a lot of google stuff has like a free tier that's that's limited it's good for testing things and maybe doing like um i don't know small projects small apps so i'm assuming it's like that for firebase as well uh matt duchess says heroku has a free package yeah i think they do too i need to check into heroku because i one of the conferences i was at i got like a card that with a code on it that i could use to get a bunch of free um uh free dino minutes or hours on heroku michael says so uh for some context in case you weren't watching earlier when i was setting everything up with the google cloud platform i said i'm not sure how much they're going to charge me for this because we're just experimenting uh and michael says i don't think i've used the phrase i'm not sure how much i'm going to get charged for this experimentation since i went to mardi gras in new orleans so um hopefully you didn't get charged too much for that michael i've never been to mardi gras that would uh would be cool and i'm hoping i don't get charged too much either i just resized my font now i'm lost again on the live chat okay cool i found it martin asks does serverless architecture mean using prebuilt apis like firebase or doesn't mean something totally different um i mean you can do there's a lot of different options yeah but like essentially serverless this is not an official definition but like you're always going to have a server it's just is that going to be your server or somebody else's and are you going to maintain that server so serverless is going to allow you to just like send off your code have it run you don't have to worry about any server maintenance at all so however you set that up um you know it just it depends depends on what you're doing what is aws has lambda i think um i'm not sure what the equivalent is called in in google or microsoft azure but i don't know that's my take on on serverless though and nikki and michael were talking about lil wayne songs or lil jon song so i'm not i don't i was don't know what's going on on that side conversation john says i need some of what jesse's drinking mind altering in order to heavily focus energy okay so i was just drinking water during the stream but i did have g fuel beforehand so uh once again if anybody from g fuel is watching i'm open for sponsorship you gotta give this a g fuel sponsorship even if you just send me some g fuel every month i'd be happy with that jacob says ola from stevenville ohio jacob are you in stupidville right now let me know oh uh nikki said so at the end whenever my my ip address wouldn't work and it just it completely failed um nikki had an idea that i would open that terminal session and i may not have ever closed it i closed the window but i didn't like exit it from the terminal so that could have been the cause of the error so that's a good idea i didn't even think of that at all um powwow says how often do you record live coding uh i try to do five days a week but oftentimes i don't get five days a week uh just because of meetings and things so um i mean usually it ends up being more like three three days a week world's asked if digitalocean is easy to use and easy to see costs yeah for sure the pricing on digitalocean is really upfront totally totally easy to figure out what your your cost is going to be michael says what main package would you need to do machine learning with js ah i can't remember what it's called um i mean there's more than one i can't remember uh check out what channel is it um learn code dot academy is the channel will stern does that youtube channel one of his recent videos i think his last two videos that he put out was doing machine learning with javascript so check those videos out they're pretty short i think maybe 10 minutes each or so that'll give you at least one way to do it and if you can't find that channel go to my youtube channel the links in the description and i link to his channel from my my home page okay nikki says there's a tensorflow.js now okay cool so check out tensorflow that's not the one that will stern was using in his videos but um uh tensorflow is really well known so if they have a javascript library now i'm assuming that it's pretty good oh you never mentioned your name do you want to know your name sure i'm sorry guys my name is haley all right so no i no i so just a y no no y either it's just haley haley super basic all right cool so haley so you said john says uh joe murphy says future show live coding with jesse and haley sorry i didn't introduce you that's it's okay i've never been on a stream before guys so sorry not used to it jamallah says give me free google credit can i do that do they have a referrer program if anyone i do have referral codes for several other things so like if if anybody's interested i could i could give you my referral codes for stuff so you know usually you end up getting some something free alright looks like i'm down to the last question uh so unless somebody puts a question in there uh in the next minute uh we'll finish things up so world says have you ever had issues and react with sizing several components to fit the viewport i've wrapped them but the bottom component never fits um i don't know it's kind of hard to say worlds if you have the code on github let me know um you could send me a dm on twitter and i could check it out more i'd kind of have to see the code because i'm assuming that that's more of a css issue and not necessarily a react issue so um i could i could probably check it out though and and give you at least point you in the right direction matt duchess says to build a blog or a site to advertise your affiliate links i've been thinking about doing that my personal website is so old i haven't updated it in years like i don't know like three or four years so i need to just change it and and put my links on there and update it with stuff that i've actually done uh within the last three years um but i think that's a good idea uh john murphy says do you use ssh keys or just password for root on digitalocean i always use ssh keys i usually try to disable root user and disable passwords completely just go with ssh that's a lot more secure although i do make sure i have more than one computer that has ssh keys for it michael says she knows how to do product placement yeah they wanted to know what i was drinking missed twist i mean i've never even heard of that it's the big k brand which i wouldn't be drinking but it was the only kind my sister had when i visited her earlier today you could try to get a sponsorship for that that's what we want we want cocacola that's what i should be drinking uh nino asked well right when i said uh we're all with the last question everybody started asking questions all right so um nino says i learned javascript uh redux what is next i would say what is next is build some awesome stuff uh you definitely know i mean try maybe learn some graphql so that you can pull some data into your react applications uh if you want to move into back end stuff then learn some node i mean otherwise i mean if you know javascript react in redux you know you're definitely in a good position to make some awesome things i'm had dutch it says it's okay haven't you built mine yeah i'm terrible about working on my own website all right i'm officially at the end of the chat now so thank you all so much for watching sorry i didn't get what we were working on to work almost we were so close um if anybody gets it to work let me know if you try to do this on your own i'd like to know like does it work is it awesome um yeah so i should be back tomorrow see i have meetings in the morning tomorrow so it'll probably be another afternoon stream i'll be back in the office um yeah so anyway thanks again and until tomorrow have a great day bye guys
