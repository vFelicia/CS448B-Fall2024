With timestamps:

00:00 - Shadcn is a unique collection of reusable React components
00:03 - designed for modern web development.
00:05 - In this course, you'll learn how to integrate
00:08 - beautifully designed, accessible, and customizable UI elements
00:12 - into your Next.js projects.
00:15 - Matthew will teach you the process of copying and pasting
00:18 - these components directly into your code base,
00:21 - allowing for full customization and ownership.
00:25 - Hey guys, what's up and welcome.
00:27 - It's Matthew here, the hybrid,
00:29 - the designer and a developer,
00:32 - the best of both world and the greatest.
00:35 - This is a series on Shadcn.
00:38 - Without wasting time, let's just jump straight into it.
00:42 - Ah, we are going to use Next.js.
00:44 - So, we can just come here and click on Next.js.
00:49 - Obviously, you can create a Next.js app here.
00:53 - I've already done that.
00:55 - And then let's install Shadcn UI.
00:59 - So, we are going to copy this command.
01:01 - We are going to use NPM.
01:04 - Okay, and then let's go back here.
01:06 - As you can see guys, this is my Next.js application.
01:09 - The only files that I hear, it's this app, okay.
01:13 - You are not going to have this app
01:15 - and you are not going to have this dashboard
01:17 - because this project is just a tutorial from my,
01:23 - I have used it on my previous tutorial, okay.
01:26 - So, let me just delete this.
01:30 - And then try to create a new one.
01:34 - My apologies about that.
01:36 - Terminal, new terminal, okay.
01:38 - So, you are going to have a template like this
01:41 - without this app and dashboard.
01:43 - So, as you can see guys, we are inside this folder,
01:46 - Next dashboard, okay, this app.
01:49 - So, let's paste this NPM, Shadcn UI.
01:54 - So, as a beginner, let me just take you through
01:58 - what's going to happen.
02:00 - Shad-Cn will create a folder here,
02:03 - which is components in small letters.
02:06 - This is where Shadcn will put all of its components, okay.
02:11 - It is advisable to always install Shadcn
02:14 - like at the beginning of your development process.
02:17 - Don't install Shadcn later when you are halfway through.
02:22 - The reason is you might have your own components folder here,
02:26 - which is a small letter and Shadcn will come,
02:30 - maybe Shadcn might override all the files
02:33 - that you have there.
02:34 - For instance, if you have the same naming convention
02:38 - as Shadcn in that folder,
02:41 - let's say in the folder components, you've got a button
02:44 - and you are installing a Shad-Cn button.
02:47 - Shadcn will go to your component folder,
02:49 - it will override the button that is there.
02:51 - And it will delete it and it will install its own.
02:54 - So, it's very important to install like Shadcn
02:58 - like from this that, okay.
03:01 - So, if I can be honest with you, I didn't press Enter here.
03:04 - So, maybe that happens by mistake,
03:06 - but that's not much of a problem, okay.
03:09 - Let's just quickly answer these.
03:11 - Which style do you want to use?
03:12 - Here, I'm just going to click Default, Use Slate, Enter.
03:16 - Would you like to use CSS variable?
03:18 - Enter.
03:19 - And that is it, okay.
03:20 - As you can see guys, Shad-Cn has created
03:24 - this components folder.
03:26 - And I think also the slip folder
03:28 - with utils more about this later.
03:31 - So, we are done installing Shad-Cn.
03:36 - So, we are done with the installation
03:38 - and we are going to get into the first component,
03:41 - which is the accordion.
03:43 - The best way to go about Shad-Cn is just to follow
03:46 - exactly what they are telling you here.
03:49 - And then from then we are going to make some minor tweaks
03:52 - in the UI should we feel like there is something
03:56 - that we don't like.
03:57 - As I've just noticed that there are some things
04:00 - that I don't like about Shad-Cn UI.
04:02 - These things are not bad, but it's a personal preference.
04:06 - So, what is an accordion?
04:08 - An accordion, it's a component like this.
04:10 - It's more like a list that has got a dropdown list.
04:14 - I can say, okay, as you can see,
04:16 - this shows more about this item.
04:19 - And this shows more about this item.
04:21 - As you can see guys, it has got some nice animation.
04:25 - So, we are going to create our own following this
04:29 - step by step.
04:31 - This is how the code looks like, okay?
04:34 - So, let's see what they are advising us to do.
04:36 - I already installed a Shad-Cn.
04:38 - So, the first stage or the first step
04:42 - is to install specifically the accordion.
04:45 - How do you do that?
04:46 - You just copy this.
04:47 - I'm using NPM.
04:49 - I've already have a Next.js application running
04:53 - and it has got some sort of a blank page.
04:56 - So, let's get back to it.
04:57 - As you can see, this is the Next.js application, okay?
05:01 - And I've already installed Shad-Cn
05:03 - and Shad-Cn has installed these components folder.
05:06 - So, as you can see, this folder is empty
05:08 - because we don't have any component.
05:10 - So, what we are going to do,
05:12 - we are going to open another terminal, okay?
05:15 - I'm going to split the screen.
05:16 - So, this is another terminal.
05:18 - I'm going to paste the command and click Enter.
05:22 - So, suppose this accordion component
05:26 - will appear here inside here, okay?
05:29 - While it's busy installing, let's just go back here
05:32 - and see what is the next step from Shad-Cn.
05:35 - Okay, we're done with this installation.
05:37 - Update the tailwind, config.
05:39 - I don't think this is necessary
05:41 - unless we are facing some issues,
05:43 - we will come back and implement this.
05:46 - Okay, let's check on the usage.
05:48 - So, how do you use it?
05:51 - Okay, so you first import all of these, okay?
05:54 - And then from there, you paste this
05:57 - and then you are done, okay?
06:00 - So, what we are going to do,
06:01 - we are going to create our own components, okay?
06:05 - Meaning that we're not going to paste these in one file, okay?
06:10 - This is what I mean.
06:12 - Okay, as you can see here, we've got UI, okay?
06:17 - And we've got the accordion, cool.
06:19 - We're not going to destabilize that.
06:21 - We're just going to go to our app and then create a folder.
06:25 - Let's name this folder Shad-Cn, okay?
06:28 - Just Shad-Cn and then we are going to create
06:30 - our own components, okay?
06:34 - So, what we are going to do here on Shad-Cn,
06:38 - we are going to create our own accordion.
06:41 - So, the naming, I'm just going to type my accordion, okay?
06:48 - So that we can separate our own accordion
06:50 - from the Shad-Cn accordion.
06:52 - So, the first thing that we do, we import all of these.
06:55 - In fact, let's just go back here and type rfce, okay?
07:00 - As you can see, this is just a React functional component.
07:03 - If you might want to know how I did that,
07:05 - you can just search for this extension and install it, okay?
07:09 - So, let's go up here and import all of these.
07:13 - Go back to Shad-Cn and let's copy this
07:19 - and paste it right here.
07:21 - We can even remove this, okay?
07:23 - And paste this right here, okay?
07:26 - And then click Save.
07:27 - So, what we are going to do here,
07:29 - we are going to come here.
07:32 - Okay, first let's run this and see how it looks.
07:35 - So, on that blank page, we can go and import my accordion.
07:40 - Where is my blank page?
07:42 - Here, so we can just come here and import my accordion.
07:49 - Okay, as a self-closing check, save,
07:52 - and then go back and see how it looks.
07:57 - Okay, as you can see, guys, this is our accordion.
08:01 - My apologies about that.
08:03 - Obviously, for now, it fills the entire area
08:08 - and this is not what we want, okay?
08:12 - Let's try to look at Shad-Cn, how this one is.
08:17 - Okay, as you can see, this one,
08:18 - it's a little bit smaller, okay?
08:21 - So, let's try to create something like this, okay?
08:25 - So, we're going to go back here, not in this page.
08:29 - We're going to go back to our accordion component.
08:32 - We're going to minimize this for now.
08:34 - And what we will do, let's create a container here.
08:40 - Okay, so that this can be inside a container.
08:45 - Okay, as you can see, this is inside a container
08:47 - and we're going to style this container.
08:50 - Class name, let's create a width of,
08:54 - let's say a width of 200 pixel.
08:57 - And let's see, let's go back to, as you can see guys,
09:03 - now we have controlled this, okay?
09:06 - I'm happy with this, okay?
09:08 - Let's just change the title, okay?
09:15 - Let's just type here coded design, okay?
09:19 - And let's also change the description here.
09:22 - Let's type, thank you for subscribing, okay?
09:30 - I mean this in a true sense of the way.
09:33 - Thank you for subscribing, okay?
09:35 - So, now let's go back and check first.
09:39 - Let me save, go back and check.
09:43 - As you can see guys, thank you for subscribing.
09:46 - I'm happy with this.
09:48 - And then what if maybe we want to add,
09:50 - let's say one more, okay?
09:52 - Let's see, so the accordion has got,
09:56 - it's like a compound components, okay?
09:59 - Meaning that we've got the parent
10:01 - and we've got the children
10:02 - and we've got some other children, nice design, okay?
10:07 - So, what we want to do, let's look at the children, okay?
10:10 - At the components, okay?
10:12 - At the inner components, let's say.
10:15 - We've got an accordion item, okay?
10:17 - This is an accordion item.
10:18 - So, this is how shed CN has been designed, okay?
10:22 - It has got some meaningful components.
10:24 - So, as you can see here, okay?
10:26 - We can just copy this whole item, okay?
10:30 - And paste it here because it's an item.
10:32 - We don't want something that is inside a trigger or something.
10:35 - We want the whole item, okay?
10:37 - So, you can give some values to your item.
10:41 - As you can see here, it's item one.
10:43 - Let's just say this is item two, okay?
10:45 - So, I've got another UI channel
10:48 - where I teach Figma, which is coded UI, okay?
10:52 - Like this, if you might want to learn Figma,
10:54 - then you can visit that channel.
10:57 - So, let's just type here, learn Figma from Matthew, okay?
11:04 - And then let's click save.
11:06 - Let's go back here.
11:07 - As you can see guys, okay?
11:09 - This is what we have exactly what we want to do.
11:14 - What we want to do, we are done with the accordion.
11:19 - Now we want to check the alert, okay?
11:22 - So, this is the alert.
11:25 - To be honest, when I first click here,
11:27 - I was like, what is this?
11:29 - And I was hoping that maybe when I'm clicking,
11:31 - it's going to alert something or show something
11:34 - or something will pop.
11:35 - I think I have mistaken this with the alert dialog,
11:39 - this one, okay?
11:40 - So, this one doesn't do that, okay?
11:42 - So, as you can see, it's just a plain box
11:46 - outlined with a message, okay?
11:48 - It looks like here, you can also have some variation, okay?
11:52 - Or more or less like a variant,
11:54 - you can have like a red one, okay?
11:58 - So, since this is a very simple component,
12:02 - I have decided to some sort of give you more knowledge
12:06 - about how can it be used.
12:08 - And I'm also going to throw a little bit of Next.js
12:12 - because if you can implement this as it is,
12:15 - we will just install copy and paste code
12:17 - and then that is it, okay?
12:19 - So, let's get into it, okay?
12:22 - Let's first copy this and add the alert, okay?
12:27 - As you can see here, we've got our Next.js application.
12:31 - So, we are going to add the alert, okay?
12:37 - We are going to add the alert,
12:39 - then it's supposed to be added here, okay?
12:42 - As you can see, guys, here it is, okay?
12:45 - And then what we are going to do,
12:47 - we are going to create our own alert.
12:49 - Somewhere is our folder, our folder sheds in.
12:52 - As you can see, the first one is my accordion.
12:54 - So, let's create my alert as a file.
13:02 - Okay, my alert.tsx.
13:05 - As usual, we are going to use RFCE.
13:08 - Just to create a normal React functional component,
13:11 - we are going to go back to shed cn
13:13 - and input everything that we are supposed to import
13:16 - so that we can use this alert, as you can see, guys.
13:20 - And then what we are going to do,
13:21 - we are going to copy this code as it is.
13:25 - Maybe we can just copy this one,
13:28 - the one with a variant destructive, as you can see.
13:32 - Let's just copy this one, okay?
13:36 - Let's see, okay.
13:38 - Maybe we can even copy the one
13:40 - that we have been given and change the, what can I say?
13:45 - And change the variant, for instance, here.
13:48 - Let's see, do we have a variant?
13:50 - Maybe we'll add a variant here
13:51 - and it's going to be destructive, okay?
13:55 - So, my apologies about that.
13:56 - Let's go back here.
13:57 - This is alert.
13:58 - Let's copy this as they are telling us to do.
14:04 - Okay, terminal is not defined.
14:07 - Let's see what mistake have I done, okay?
14:10 - Alert, alert, alert.
14:12 - And then our terminal, let's see.
14:15 - Do we have to install anything before we create this?
14:20 - Let's see.
14:22 - Okay, terminal, okay.
14:25 - What is this component?
14:27 - Let's go back here.
14:28 - So, the first approach to solve this problem
14:31 - is to press control and press space to see, okay?
14:35 - As you can see, this is an icon, okay?
14:39 - So, let's just click here so that we can import it.
14:43 - As you can see, guys, now everything works well.
14:45 - We can click save here.
14:47 - So, what we are going to do,
14:48 - we want to display this on our main page, okay?
14:53 - So, let's go and display this, my alert, okay?
15:00 - And then it's a self-closing tag.
15:03 - Let's click save and go back and let's check here, okay?
15:08 - Suppose it shows up here, okay?
15:12 - As you can see, it's refreshing.
15:14 - And then here is the alert, okay?
15:18 - As you can see, guys, obviously the alert is too big, okay?
15:22 - Like it's spreading across the screen.
15:25 - What we can do, okay, what we can do,
15:30 - we can surround the alert with something like this, okay?
15:35 - As you can see, guys, maybe we can make our lives easier
15:40 - and don't surround these in all of these div, okay,
15:45 - in all of these components.
15:46 - What we can do, we can surround these like all of them, okay?
15:51 - I hope you do get what we are doing here.
15:53 - We are trying to control all of these, okay?
15:56 - So, meaning that if we click save,
16:00 - as you can see, now we have controlled the alert, okay?
16:04 - Including the, including the accordion, okay?
16:09 - I'm happy with this.
16:10 - So, what we need to do now, let's go,
16:14 - let's say we want to change the icon, okay?
16:16 - Let's go to Lucida React.
16:21 - Okay, Lucida icon.
16:22 - Let's search for warning.
16:28 - My apologies about that.
16:29 - Let's search for warning.
16:32 - And then we're going to copy this.
16:34 - And then we're going to change it here, okay?
16:39 - We're going to change this.
16:40 - Let's say, okay, as you can see.
16:44 - So, let's just copy this and replace this terminal
16:49 - and delete this, okay?
16:51 - And then let's import it.
16:52 - So, what I'm going to do,
16:53 - I'm going to press control and space.
16:57 - Then I import this.
16:59 - So, the other thing that I'm going to do,
17:02 - I'm just going to, okay guys, I'm back.
17:05 - My apologies about that.
17:06 - There was a sudden disturbance,
17:09 - so I had to quickly pause the video.
17:10 - So, I hope I am going to continue from where I have left.
17:14 - So, let's just click save so that I can see where we are
17:17 - in terms of the project, okay?
17:20 - We have managed to change the icon.
17:22 - And I was about to make this content more, okay?
17:27 - That's what I was about to do before the disturbance, okay?
17:32 - So, as you can see guys, that's about it.
17:35 - So, let's just come here on the alert
17:38 - and let's type a variant.
17:42 - Let's see, suppose here I get an IntelliSense, okay?
17:46 - Something like this so that it can show us
17:49 - the different types of options.
17:50 - I think this is because of TypeScript, okay?
17:53 - So, as you can see guys, this is a variant and a let, okay?
17:59 - So, as I've told you that this is more like a simple copy
18:02 - and paste kind of a code.
18:03 - So, as a bonus, I'm just going to teach you something
18:07 - on Next.js on maybe how this can be used in most platform
18:12 - or in most applications like I think even TikTok, YouTube,
18:16 - and I haven't seen it on WhatsApp, okay?
18:19 - So, when you open the application,
18:21 - let's just make an example with what?
18:24 - Okay, let's just go here, okay?
18:26 - When you open the application, okay?
18:29 - The company itself wants to send some messages to you, okay?
18:34 - So, usually when you open your dashboard,
18:36 - there will be a message here, okay?
18:38 - More like an alert like this one, guys, okay?
18:42 - More like something like this.
18:43 - Maybe it's telling you that your account is not up to date
18:47 - or maybe they are telling you that we have changed
18:50 - our terms and condition.
18:51 - So, that is their own way of communicating directly to you
18:56 - depending on certain circumstances.
18:58 - So, this is what I'm going to show you as an extra bonus.
19:02 - So, what we are going to do based on the parameters,
19:06 - on the URL parameters.
19:08 - Let's say we were, what can we say?
19:12 - We were a banking company.
19:15 - So, it's important that your account money,
19:18 - the money that you have, it needs not to be zero, okay?
19:22 - So, if it's zero, that means you don't have money
19:24 - on your account, we need to show some sort of an alert
19:27 - to tell you that please top up your account, okay?
19:31 - Your account balance is too low.
19:34 - But we are going to use search parameters
19:38 - or ES query parameters here, okay?
19:40 - The parameters from this URL.
19:42 - So, this is just an added Next.js bonus, okay?
19:46 - So, this is how it works.
19:49 - Let's say we are going to have a parameter
19:53 - which is a balance, okay?
19:56 - Something like this, balance equal to zero.
19:59 - If balance is equal to zero, when you visit this website
20:05 - with balance equal to zero, it needs to show you this warning.
20:08 - But if your balance, it's more than that
20:11 - or there is no query parameter at all,
20:15 - then it's not going to show this.
20:16 - I hope you do get what I'm trying to say
20:19 - and I also hope it's helping you
20:21 - to learn how to use things, okay?
20:24 - So, what we are going to do now, let's go here, where we are.
20:31 - Let's come here on this page, must we do that?
20:33 - Yes, let's just do that on the main page, okay?
20:36 - First of all, with Next.js, let's make this a client
20:40 - component, not a server-side component.
20:42 - So, how are you going to do that?
20:44 - You just type here, use client and click save.
20:47 - And then here, let's make sure that we stick
20:51 - to our React best practices, our components.
20:54 - Must start with capital letters and I'm happy with that.
20:57 - And then with Next.js, we are going to use,
21:01 - we are going to use a hook which is,
21:05 - I think it's use search parameters, okay?
21:08 - So, let's try that, let's say const param,
21:14 - params is equal to use search parameters, okay?
21:19 - Or search params, okay?
21:20 - This is a hook, okay?
21:23 - And then from then, I'm not a big fan of memorizing code,
21:27 - okay?
21:28 - I make use of TypeScript and also the program itself
21:32 - to help me and understand what's going on
21:35 - in a particular function or hook.
21:37 - So, what I'm going to do here, I'm just going to type
21:40 - this params as it is, this one, okay?
21:43 - I'm just going to type dot to see what do I get there,
21:46 - what are the options, okay?
21:48 - So, let's check here get, okay?
21:52 - And then let's get balance because the query
21:57 - is going to be balanced.
21:58 - And then from there, let's just alert this, okay?
22:03 - Let's just alert this balance, okay?
22:09 - Let's just alert this balance, okay?
22:12 - So, let's go back here, okay?
22:14 - As you can see, guys, we don't have balance.
22:16 - So, this is alerting null, okay?
22:21 - As you can see, it's alerting null.
22:23 - Now, let's just click onto here.
22:25 - Now, we've got balance of five.
22:27 - So, let's see.
22:29 - As you can see, guys, this is giving us the balance, okay?
22:32 - As you can see.
22:33 - So, we are winning.
22:34 - We are managing to get this query parameter, okay?
22:38 - So, what we are going to do based on this query parameter,
22:42 - we need to make some decision, okay?
22:46 - So, let's just type here const balance equal to,
22:52 - let's copy this as it is, okay?
22:56 - Let's remove this alert.
22:57 - And then let's put that five inside here, okay?
23:02 - And then let's come here to the alert, okay?
23:08 - We are going to render the alert conditionally.
23:12 - So, we need to open a block of code
23:14 - and then move this alert to here, okay?
23:18 - And then what we are going to do,
23:21 - let's ask, is this balance true?
23:24 - We are going to use a tenor operator.
23:26 - So, we are asking, is it true?
23:27 - If it's true, meaning that it's not null, okay?
23:31 - Yeah, let's say if it's not null,
23:32 - then let's alert this.
23:35 - If it's null, let's click this.
23:38 - If it's null, let's just alert an empty string,
23:41 - as you can see guys, okay?
23:42 - So, what this code is going to do?
23:45 - It's going to check, do we have the balance?
23:47 - As you can see for now, we have it.
23:49 - So, we are displaying this alert.
23:51 - But if we don't have it here, okay,
23:55 - this disappears, okay?
23:57 - So, obviously, even though I didn't check
23:59 - if your balance is zero or it's not zero,
24:02 - I hope you do get what we are trying to do here.
24:05 - In case you really, really want to check
24:07 - if the balance is zero, you can just come here
24:09 - and change your condition.
24:10 - For instance, if balance, it's,
24:14 - let's say balance is equal to zero, okay?
24:17 - May I apologize about that?
24:18 - If balance, cannot balance, okay, sorry, okay.
24:23 - This is a, we need to do this.
24:26 - Why this comparison, because the type of string and,
24:33 - okay, cool, okay?
24:38 - Obviously, for now, that is a string, okay?
24:41 - So, we are asking, is this balance zero,
24:43 - which is equal to zero as a string, okay?
24:47 - So, let's just quickly check here, guys,
24:49 - before we close this, okay?
24:53 - As you can see, guys, it's not zero, okay?
24:56 - But once you've got a balance of zero,
24:58 - then we can show the message here.
25:01 - Then, let's just customize our message
25:03 - so that it can make sense.
25:05 - So, let's just go to alert and, okay?
25:11 - This is a bank balance, okay?
25:13 - Let's just type bank balance, okay?
25:16 - And then our message will be bank balance, okay?
25:21 - And what can I say?
25:25 - Cannot be zero, okay?
25:28 - Cannot be zero.
25:30 - And that's about it, and then let's check here, okay?
25:32 - If your bank balance is zero,
25:34 - it's going to tell us bank balance cannot be zero.
25:36 - If you've got money in your own account,
25:38 - then that is not much of a problem.
25:40 - So, let's just click this, okay?
25:46 - As you can see, now, bank balance is not zero,
25:49 - so we don't show this message.
25:53 - Now, we are on the alert dialog, okay?
25:57 - Let's just check what an alert dialog is, okay?
26:00 - As you can see, guys, this is an alert dialog.
26:03 - Very simple, right?
26:04 - You just click and something pop up.
26:07 - Obviously, this is a simple tutorial.
26:09 - We can just follow this copy and paste,
26:12 - and then we are done, and it will show up.
26:14 - But I don't think that will give you more value
26:17 - on shared CN itself and also how to use it.
26:21 - So, here at coded design,
26:23 - we are going to take it a step further.
26:25 - So, how are we going to do that?
26:27 - What we are going to do,
26:28 - we are going to design this component
26:30 - in such a way that it becomes reusable
26:33 - and some sort of, so that we can,
26:34 - it can contribute on creating a clean and scalable code.
26:39 - For instance, instead of this becoming a modal dialog
26:43 - that you can use like this,
26:45 - or an alert that you can use like this,
26:48 - what we are going to do,
26:49 - we are going to make this name dynamic,
26:52 - this content dynamic, these buttons for now,
26:56 - we are going to leave them as they are.
26:58 - So, what does that mean?
26:59 - This means that whenever you want to use this, okay,
27:03 - you can just use the same code,
27:05 - but just change these props and change this content, okay?
27:10 - So, without wasting time,
27:11 - let's just jump straight into it.
27:12 - What's the next step from here?
27:15 - We just need to follow exactly
27:16 - what shared CN is telling us, okay?
27:18 - We just copy this on MPM,
27:21 - and then we go to our terminal,
27:24 - and then we paste this.
27:26 - I don't know why it's like this,
27:27 - but let's plus enter and see.
27:29 - And then this is supposed to appear
27:31 - on our list of shared CN UI components, okay?
27:37 - Shared CN UI components somewhere here, okay?
27:40 - It's going to be an alert dialog box.
27:42 - And then in the meantime,
27:44 - let's just copy whatever that we have to copy.
27:47 - So, as you can see, guys, the next step is to copy this.
27:51 - So, we have to create our own,
27:56 - what can I say, our own alert dialog, okay?
27:59 - So, this is our folder for our own components.
28:01 - So, we just type my, okay, my alert dialog, okay?
28:10 - As you can see, guys,.tsx,
28:12 - and then we are going to use the snippet, RFCE, okay?
28:19 - And then we are going to import everything
28:21 - that shared CN is asking us to import.
28:24 - As you can see, guys, we can just click Save.
28:26 - And then what we are going to do,
28:28 - we are going to go back
28:29 - and we are going to copy this code as it is.
28:31 - As you can see, this is a bit of a heavy code, okay?
28:36 - And then what we want to do, we want to copy this,
28:39 - and let's just paste it maybe here as it is, okay?
28:45 - Okay, as you can see, guys, cool pins, everything work.
28:48 - So, if we were just like beginners,
28:51 - we're going to take this as it is, change here,
28:54 - and create whatever that we want.
28:56 - What if maybe we want to create another component
28:58 - similar to this one?
28:59 - We were going to create a new component,
29:01 - copy and paste all of this code, then change this.
29:04 - This is what we are going to change and do it differently.
29:08 - But before that, let's just import this,
29:13 - these components in our main page
29:15 - and see how it looks like, okay?
29:18 - As you can see, don't mind about this.
29:20 - I'm just rendering these conditionally, okay?
29:23 - So, let's just go here,
29:26 - import this as a self-closing tag,
29:28 - and then we need to,
29:30 - I'm going to press Control on Windows and Space,
29:32 - and then I can import this and then click Save.
29:35 - Let's go back and check what's there, guys, okay?
29:38 - As you can see here, it's open.
29:40 - When we click here, this pops up, okay?
29:42 - As you can see, what we can do from here now,
29:45 - we can go back to my alert dialog,
29:48 - and then we can type here, coded design.
29:54 - Okay, and then when you click here, okay,
29:58 - let's say, are you, okay, are you sure?
30:02 - You want to subscribe, okay?
30:11 - Obviously, I'm hoping that your answer to this question
30:14 - is 100% or absolutely, okay?
30:17 - So, are you sure you want to subscribe, okay?
30:21 - Let's just go back and see how it looks like.
30:23 - Now, coded design is an alert,
30:25 - and then are you sure you want to subscribe, okay?
30:28 - Click Okay, and it disappears, okay?
30:30 - So, if we want, we can just type here.
30:35 - I have already subscribed, okay?
30:40 - Okay, hoping that you already subscribed, okay?
30:43 - So, let's check here, as you can see, guys.
30:46 - So, if we want, we might stick to this.
30:49 - Whenever we want to create a new one,
30:51 - we can always copy this code,
30:53 - but this is not how we want to do things.
30:55 - We need to make this some sort of a reusable component.
31:00 - So, what we can do, we can receive some props here.
31:03 - Remember, we're using TypeScript,
31:04 - so we can just say this is a title.
31:08 - We can just make small letters for simplicity.
31:11 - Okay, we're going to receive a title and a content, okay?
31:18 - Now, we need to type these, okay?
31:20 - So, in terms of the title,
31:24 - it's going to be a string, it's guaranteed.
31:26 - But in terms of the content, guys,
31:28 - let's not make it a string,
31:29 - because as much as here, it looks like this is a string.
31:32 - We are going to have, sorry, here.
31:37 - Okay, as much as it looks like this content, okay,
31:40 - it's going to always be a string, okay?
31:44 - It might be something else, okay?
31:45 - You might want to put a form here or a button, okay?
31:49 - I'm going to show you that later, okay?
31:52 - So, what we are going to do,
31:54 - instead of putting a string here, okay?
31:57 - We are going to put this alert, okay?
32:00 - So, I'm going to show you that flexibility.
32:02 - So, let's make this content,
32:08 - let's make this content a React.react node, okay?
32:15 - So that it can accommodate a lot of things, okay?
32:18 - As you can see.
32:19 - Now, if we want, we can pass a string here.
32:22 - If we want also, we can pass another React component.
32:25 - So, let's just quickly test this, guys.
32:27 - Let's take this title and change this coded design
32:31 - and open some block of code.
32:33 - And then we put the title here.
32:35 - And then let's copy the content.
32:43 - It's the content here.
32:45 - And then obviously TypeScript is telling us
32:47 - that we didn't pass the props here.
32:50 - Now, the props here in terms of title, okay?
32:55 - It's going to be coded UI, okay?
33:01 - If you might be asking yourself, what is coded UI?
33:03 - Coded UI, it's my other design channel
33:06 - where I teach people how to use Figma.
33:09 - I will suggest that you try the channel
33:12 - because Figma is a very important skill,
33:14 - more especially if you are a beginner.
33:17 - You are going to work in a company that wants to save money.
33:20 - So, maybe they don't have funds
33:22 - for paying a designer and a developer.
33:24 - If you come and say,
33:26 - Matthew has taught me both of the skill,
33:28 - I am able to work on Figma and become a developer as well.
33:31 - Maybe you might be preferable and you might lend a job.
33:35 - So, in terms of the content, for now, let's type Matthew.
33:48 - And then let's go back and see.
33:50 - Now, as you can see, guys, this is dynamic.
33:53 - This is Matthew and I have already subscribed.
34:00 - Is this what I wrote there?
34:03 - Let's just double check, guys.
34:04 - I think I'm missing something.
34:06 - On my alert, alert, is this alert?
34:10 - A lot of things are going wrong here.
34:12 - Let's first fix that, okay?
34:15 - My alert dialog, okay?
34:17 - Cool.
34:19 - Not my alert, my alert dialog, okay?
34:22 - Let's change this first, okay?
34:26 - Number two, let's see, I've got a title
34:30 - and I have put a title on trigger.
34:33 - This is a problem, okay?
34:34 - Let's just go back here.
34:37 - Okay, the trigger must be coded design, okay?
34:40 - I think the title is supposed to be here.
34:42 - My mistake, guys, okay?
34:46 - The title is supposed to be here
34:47 - and the content is supposed to be here on,
34:52 - I have already subscribed, okay?
34:58 - Okay, cool.
34:59 - Now, let's see.
35:00 - I received this, I received this.
35:01 - Let's check here what's going on.
35:03 - What is this guy complaining about?
35:06 - My alert dialog is not defined, obviously.
35:11 - Let's import it, okay?
35:14 - Let's see, check here.
35:17 - As you can see here, we are not importing
35:19 - the alert dialog box.
35:21 - Let's check here, guys.
35:23 - Okay, let's import it again.
35:26 - It's not defined, okay, cool.
35:29 - Obviously, that's my mistake.
35:30 - Let's go back to my alert dialog box.
35:32 - My apologies about this, guys, okay?
35:34 - As you can see, this is still not what we are looking for.
35:38 - Now, it's my alert, okay?
35:40 - Let's export it as my alert, okay?
35:44 - And then, let's go back here and check.
35:48 - Press Ctrl and press space.
35:50 - Now, we've got my alert dialog box.
35:53 - Let's go back and check.
35:55 - Let's click here.
35:56 - As you can see, now, we've got coded UI
35:58 - and we've got Matthew.
35:59 - This is interesting, okay?
36:01 - So, meaning that now, let's say now,
36:04 - we want another component, okay?
36:08 - That will do the same thing,
36:11 - but for coded design, okay?
36:14 - As you can see, now, the code is starting to be reusable,
36:18 - okay?
36:19 - So, just like that, now, we've got another trigger,
36:23 - which has got coded with the wrong spelling,
36:25 - coded design and reusable, okay?
36:29 - As you can see, guys, so that means
36:31 - we are reusing the code, okay?
36:33 - Now, as you can see, this is coded design,
36:36 - this is coded UI, but the trigger is the same, okay?
36:40 - Meaning that we also need to put a trigger, okay?
36:43 - We need to supply a trigger, okay?
36:45 - So, let's see what we can do.
36:49 - Where is our main page?
36:50 - That means here, we need to supply a trigger as well.
36:53 - Cool.
36:54 - Let's just go back here and type trigger.
37:01 - Okay, let's just copy this content, copy and paste,
37:04 - because trigger is going to be the same type as that one,
37:09 - okay?
37:09 - Let's just change this to trigger.
37:11 - Okay, as you can see, now, we can take this trigger
37:16 - and substitute it with this one.
37:21 - Okay, that means here, we must put a trigger, okay?
37:25 - Now, let's say the trigger will be,
37:31 - the first one, it's coded UI,
37:33 - and the second one, it's coded design.
37:46 - Or we can say where is that design, the wrong spelling.
37:54 - Right, as you can see, guys, we've got coded UI,
37:58 - and we've got coded design, okay?
38:00 - Coded design, as you can see.
38:02 - Now, now that we've got this flexibility check here, guys,
38:07 - so, we cannot only pass strings here, these strings,
38:11 - we can also pass another components.
38:13 - These are flexible, this is.
38:14 - So, let's make an experiment on that.
38:17 - On the other one, let's pass the accordion,
38:20 - on coded, coded what?
38:24 - On coded UI, let's pass a trigger.
38:27 - No, no, the content, okay?
38:29 - The content of coded UI must be an accordion, okay?
38:35 - No, no, no, this is title, my apologies.
38:38 - Okay, the content of coded UI must be an accordion,
38:45 - and the content of coded design must be an alert, okay?
38:51 - Must be an alert, let's come back here.
38:55 - Let's click save, and let's go back and see.
39:02 - Okay, as you can see, guys, we just have an accordion.
39:05 - So, I think this is the best way
39:08 - in which you can think about shared CN,
39:10 - and also making like the most out of shared CN.
39:17 - We are done with an alert dialog box.
39:19 - Now, we are getting into the aspect ratio.
39:23 - Let me be honest, guys, I don't have more information
39:27 - about practicality of applying this, okay?
39:32 - But I am just thinking, if you are creating
39:34 - a video application, let's say,
39:39 - since the aspect ratio is more like popular in videos,
39:43 - 16 by nine in 1920, and all those things,
39:46 - you might use it, let's say there is a certain video
39:50 - that you need to display,
39:51 - but it must have a certain aspect ratio,
39:54 - maybe even in pictures, okay?
39:56 - But since this is going to be a very simple tutorial,
40:00 - meaning that we're just going to copy and paste
40:02 - what shared CN is telling us,
40:04 - I am going to fix something in Next.js,
40:08 - an error that we are going to, okay?
40:10 - So, instead of collecting everything,
40:13 - fixing the error without even showing you
40:16 - how do you go about it, I'm just going to fix the error
40:19 - when I get there, hoping that I want as an added bonus
40:23 - or added value to this simple tutorial.
40:26 - If I can just keep it like this,
40:28 - it's just going to be simple, only copy and paste.
40:31 - So, without losing time, let's just get into it.
40:36 - My apologies about that.
40:37 - So, I'm just going to copy this, okay?
40:39 - As an NPM, I've got already a React,
40:43 - sorry, Next.js application going on, not running,
40:47 - so I'm just going to press Enter
40:49 - to install this component.
40:52 - And then from then, as you can see, this is our project.
40:56 - Okay, we've got an accordion, we've got an alert,
41:00 - and we've got an alert dialog box.
41:02 - It's highly reusable.
41:03 - If you have not watched it, please check the playlist
41:06 - to watch it now, we are creating the aspect ratio, okay?
41:11 - I hope it's done, installing the aspect ratio.
41:14 - So, let's just go to shared CN and check how to implement it.
41:18 - As you can see, guys, we're importing image from Next.
41:21 - This will give us some issues,
41:23 - and I will show you how to fix them, okay?
41:27 - So, let's copy this.
41:28 - And then what we're going to do in our library of component,
41:32 - we are adding another one, which is my aspect, okay?
41:43 - My aspect ratio dot TSX.
41:46 - Okay, and then we are going to type the reactor snippet,
41:50 - RFCE, and then we are going to import the aspect ratio.
41:54 - And then, what we are going to do, we are going to use it.
41:57 - Let's just click here, let's just copy all of this,
42:01 - and just paste it here.
42:05 - Okay, just like that, we've got the aspect ratio working,
42:10 - okay, and then what we want to do,
42:13 - we want to go and look for an image on Google, okay?
42:22 - I meant Trevor Noah, but I can even take this guy's picture.
42:27 - It's not a transmission, I don't really,
42:30 - it doesn't really have to be Trevor Noah, okay?
42:34 - Let's just copy this image, copy the URL, image address,
42:39 - this is what I want to copy.
42:40 - So I'm going to paste this here, okay?
42:45 - As you can see guys, okay?
42:47 - So I'm just thinking, the other possibility
42:51 - that we might use an aspect ratio, I'm not sure,
42:57 - but let's just quickly check on trouble guys, okay?
42:59 - The reason why I'm doing this, I like to be pragmatic, okay?
43:05 - To test the validity of ideas by their practical use, okay?
43:10 - I don't like to learn something
43:11 - that I don't really know how to use it.
43:13 - So that's why I'm doing these guys, okay?
43:16 - So let's say we are having images
43:20 - that needs to be like this.
43:22 - Let's look at when we ask on the responsiveness, okay?
43:27 - Let's see what happens on these in terms of responsiveness,
43:30 - okay?
43:31 - Maybe we might want these to keep a certain aspect ratio,
43:34 - this image, I'm not sure, okay?
43:36 - I'm thinking that that image ratio component
43:39 - can also help us on responsive design, okay?
43:44 - But please guys, do your own research
43:45 - so that you can be more knowledgeable, okay?
43:49 - Okay, let's continue guys.
43:52 - We've got an aspect ratio.
43:54 - Let's just make sure that we have saved everything, okay?
43:58 - And also we need to take this aspect ratio,
44:00 - let me just remove this,
44:02 - this aspect ratio to our main page, okay?
44:04 - So that it can be displayed there, okay?
44:07 - So let's put it here as a self-closing tag
44:13 - and I'm going to click here
44:15 - and I'm going to press control space
44:17 - so that we can import it, okay?
44:19 - Let's see if we are not going to have an error from Next.js.
44:22 - Of course, we have an error from Next.js.
44:25 - It doesn't give us a link to go to, okay?
44:28 - Usually it does that as a Renoir chart, okay?
44:32 - Let's see, that's missing the required.
44:36 - Oh, okay, my apologies about that, guys.
44:38 - It looks like I'm ahead of myself.
44:40 - My apologies about that, okay?
44:42 - This is not the error that I'm talking about.
44:45 - This is an error but not the one that I'm talking about, okay?
44:48 - This is asking us for a width, okay?
44:51 - So let's just go to our image.
44:53 - My apologies about that, okay?
44:57 - Okay, let's go here.
45:01 - Okay, let's go here.
45:03 - So Next.js wants a width here.
45:07 - Let's make it a 450.
45:11 - My apologies about that.
45:14 - Let's just make it 450.
45:18 - Width, this is not tailwind, so this has to be the width.
45:22 - Okay, as you can see, guys, let's make it this 450, okay?
45:26 - So this was the first error that we had, okay?
45:29 - Let's see.
45:30 - Now, what is it saying, it's missing the height, okay, cool.
45:37 - I'm not sure if we put the width and height here.
45:43 - Isn't that nullifying the existence of this aspect ratio?
45:47 - But for now, let's just do what Next.js wants.
45:51 - We will see on the physical appearance of the image
45:55 - if there is something that we are missing, okay?
45:58 - Okay, the height will be 450, let's make it 200, okay?
46:07 - Let's see.
46:10 - Okay, invariant, src, probe, blah, blah, blah, blah.
46:15 - Okay, this is the error that I was talking about, guys, okay?
46:18 - The one where we need the host name, okay?
46:22 - Cool, so you can just copy this and paste on Google,
46:27 - I think Next.js will be one of the options as a solution,
46:33 - okay?
46:34 - Let's see.
46:36 - I think suppose there's a Next.js link here,
46:40 - but if you don't have it, don't mind, guys.
46:42 - I think Next.js, they also give us,
46:45 - there is the link, okay?
46:47 - They give us a link to the solution.
46:49 - So you will just go here, let's see.
46:51 - Possible ways to fix this, okay?
46:54 - On your Next.js config.js, maybe it might also.tx,
46:59 - this is what we have to do, okay?
47:01 - On the export module, we need to put these images,
47:05 - remote patterns, and then we need to put this as it is
47:10 - instead here, we just need to put our domain, okay?
47:16 - So before we do that, let's go to the Next.js config file.
47:22 - Okay, where is it, guys?
47:23 - You can also help me, I don't see it, here is it.
47:27 - Next.js.config, okay?
47:29 - It's a minified version, we don't have the other one, cool.
47:33 - Okay, let's see.
47:34 - And then here we've got our Next.config
47:37 - and we've got these curly braces.
47:39 - So let's see, does this code looks like this one?
47:44 - Okay, here we've got a module.export,
47:48 - and there we don't have, okay?
47:50 - Let's check, as you can see.
47:51 - Okay, here we don't have.
47:53 - So what we are going to do,
47:54 - let's just apply our own mind, okay?
47:57 - Let's just, what can we do, what can we do,
48:01 - what can we do?
48:04 - First, let's just copy this as it is, okay?
48:09 - Let's just copy this as it is, Next.config.
48:12 - Okay, let's try this, let's see if it's not going
48:15 - to complain, okay, it's not complaining, I'm happy with that.
48:18 - Okay, I was about to put it inside this config, okay?
48:22 - But let's leave it like that,
48:24 - it looks like it's going to work.
48:26 - And then what we want to do,
48:28 - we want to know where are we getting the image, okay?
48:31 - Aspect ratio, what's the domain of that image, okay?
48:35 - I think that error can highlight to us
48:38 - the domain specifically, okay?
48:41 - Let's see.
48:42 - Invalid SRC probe, blah, blah, blah, blah, blah.
48:47 - Okay, next image, host name.
48:51 - Okay, here is the host name, okay?
48:53 - That it doesn't recognize, so we can just copy this as it is
48:56 - to make our life easier, okay?
49:00 - And then we need to tell Next.js that on the config, okay?
49:05 - We are having this domain or this host name, okay?
49:10 - I don't think we need the path name, okay?
49:14 - I don't think we need the port, okay?
49:16 - We don't need those ones.
49:17 - So we're telling Next.js that we are going to fetch
49:20 - the images from this domain.
49:22 - If you might want to prefetch them and cache them
49:26 - and crop and what can I say, compress them
49:32 - so that they can be lightweight for better user experience,
49:35 - you can go on and do that.
49:37 - So after we are done with this, let's just check here
49:40 - and see is Next.js still complaining, okay?
49:44 - And remember guys, you must fall in love with errors, okay?
49:48 - When you see errors, don't be afraid, don't,
49:51 - what can I say, don't be discouraged, okay?
49:55 - It looks like our server is not running.
49:57 - I don't know why.
49:59 - Let me just type clear here and then npm run dev, okay?
50:04 - Maybe the server has stopped after noticing
50:06 - that we have changed the config file, okay?
50:09 - Let's see.
50:12 - Okay, let's see if, looks like we are having an error here
50:17 - guys, okay?
50:19 - The server didn't just stop.
50:20 - Remember, I was like, I think we can put this inside
50:25 - this config instead, okay?
50:27 - I think that's an error.
50:28 - That's the reason why we are having this.
50:30 - Let's check again guys, okay?
50:32 - npm run dev, let's be observant this time.
50:35 - As you can see, there's an error, okay?
50:37 - So let's do this.
50:39 - So here, this is our own, what can I say?
50:42 - A feed link, okay?
50:44 - I like to fiddle a lot.
50:47 - Bop, bop, bop, token, expected,
50:50 - dah, dah, dah, dah, module, export, dot, okay?
50:55 - So let's just do this guys, okay?
50:59 - Let's just do this.
51:02 - Let's just do this.
51:03 - This is the config, okay?
51:05 - So if you might ask me, Matthew,
51:07 - do you know what you are doing?
51:08 - To be honest, I'm not sure.
51:09 - I don't know what I'm doing.
51:11 - So Matthew, why are you doing this?
51:13 - I like to test things, guys, okay?
51:15 - I like to test things, okay?
51:17 - And see how they go, okay?
51:19 - So obviously, if we are not winning here,
51:21 - we are just going to go to Next.js documentation
51:24 - and look in details and copy and paste code
51:29 - exactly as it is, okay?
51:33 - Okay, so let's wait for it to finish and see.
51:36 - As you can see guys, it's reloading, okay?
51:40 - And that's about it, guys.
51:43 - There's nothing much to this tutorial.
51:46 - It's not that heavy, okay?
51:49 - It's just a, it's just a, what can I say?
51:57 - An aspect ratio and that's it.
51:59 - So let's go back here to C, okay?
52:01 - As you can see guys, it looks like everything is working.
52:04 - Our own fit link has worked.
52:07 - But remember, I said, if we are able to give this
52:11 - a width and height, okay?
52:13 - Isn't that nullifying aspect ratio, for instance?
52:20 - Okay, an aspect ratio in some sort of a certain
52:24 - width and height, let me just show you guys, okay?
52:29 - Okay, aspect ratio.
52:32 - Okay, so I'm going to search for images, images.
52:39 - So, an aspect ratio is more like a certain width.
52:43 - If the aspect ratio is 16 by nine,
52:46 - it's supposed to almost look like this, okay?
52:49 - As you can see guys, okay?
52:51 - So now, here, okay, let's see, where do I want to be?
52:56 - Where do I want to be, so here we've got an aspect ratio.
53:02 - Let's see, let's see.
53:03 - We've got an aspect ratio of 16 by nine,
53:06 - as mentioned here, but it looks like this shape,
53:12 - as you can see guys, at least if it was looking like this,
53:15 - I was going to be convinced that the aspect ratio
53:18 - has worked, okay?
53:19 - So what might have happened here, okay?
53:22 - Because of we have put the width and height here, okay?
53:27 - I think it has nullified this, okay?
53:32 - So meaning that I'm trying to say these properties,
53:35 - they are mutually exclusive, okay?
53:38 - They cannot exist both of them at the same time.
53:40 - If you put your own width and height,
53:42 - you are trying to say you don't need the aspect ratio.
53:45 - If you put the aspect ratio,
53:47 - suppose you don't need the width and height.
53:49 - So let's also dive deep into our own feed link way, okay?
53:54 - Why am I showing you the feed link approach to things?
53:58 - Number one, I'm showing you I'm not a guru,
54:01 - I'm just exactly like you.
54:02 - Number two, trust your own mind, okay?
54:05 - At least don't just jump to Google, just don't get go, okay?
54:09 - So I'm going to delete this, okay?
54:12 - And then save it, let's see,
54:14 - is it giving us any errors or what?
54:17 - Looks like there's some sort of an error here,
54:20 - but let's go back here and see.
54:24 - It's telling us that this is missing the width and height,
54:27 - okay?
54:29 - So is shed cn, what can I say?
54:36 - I don't want to say is it fooling us, okay?
54:38 - But what's going on here?
54:39 - Why this is not working, okay?
54:41 - Let's go back and see.
54:43 - Do we have all everything that this one's out,
54:50 - rounded, object, cover, okay?
54:53 - So there was a property of an image
54:58 - that doesn't really need the width and height, okay?
55:05 - I forgot about it guys, I'm going to be honest with you,
55:07 - but I will find it, I will find a way to find it, okay?
55:10 - I think it was fill, okay?
55:14 - But now I don't know what I must, I put inside fill.
55:18 - I hope this will give me some possibilities, okay?
55:23 - Oh, okay.
55:25 - It's possible that you cannot assign a property here
55:28 - and it works, okay?
55:30 - So what fill does when you want your image
55:34 - to be controlled by the parent container, okay?
55:38 - You are saying that this image needs not to define
55:44 - its width and height, okay?
55:47 - Exactly as it did here.
55:50 - It must depend on its container for the width and height.
55:53 - So let's see if guys can see,
55:55 - can't this help us to solve the problem?
55:59 - 100%, we have just solved what?
56:04 - Shed Cn's errors or, I'm not sure if this is a bug
56:07 - or what, I'm not sure, okay?
56:09 - But for us, it didn't work and we have to do something else
56:11 - in order for it to work,
56:13 - which is we have to put this fill here, okay?
56:17 - So as you can see guys,
56:18 - you must always apply your own mind first
56:21 - and what can I say?
56:24 - Be a fan of fit link, okay?
56:28 - Fit link helps a lot, okay?
56:30 - So as you can see guys now,
56:32 - this is the aspect ratio as we want.
56:34 - So let's go to the internet.
56:37 - Let's try to balance this knowledge with a Shed Cn, okay?
56:43 - So let's see if we can have a three by two aspect ratio.
56:49 - Are we going to get a shape like this?
56:53 - Or let's say if we have one by one,
56:55 - are we going to get a square?
56:57 - Let's test that, okay?
56:59 - Here we are just using our own knowledge
57:01 - to see if is this working.
57:05 - Let's go back here.
57:06 - As you can see guys, okay?
57:08 - It's working, okay?
57:10 - It's working.
57:11 - So this aspect ratio is working.
57:13 - Then who controls the width, okay?
57:18 - I think now this width is starting to make sense.
57:20 - Let's make this width 200, okay?
57:24 - Let's save and see.
57:26 - As you can see guys, now this width is 200, okay?
57:32 - And now we are doing the avatar.
57:36 - An avatar is just a circle with an image,
57:40 - which is usually it's a user profile.
57:43 - And that's about it.
57:44 - So let's quickly install the avatar using NPM.
57:48 - I already got a Next.js application here.
57:53 - So I'm just going to install this.
57:55 - And then as it's installing,
57:57 - it will show up on Shed Cn component UI here.
58:03 - Okay, after showing up here,
58:04 - we are going to create, as you can see here is it.
58:07 - We are going to create our own avatar
58:09 - here on this folder, okay?
58:12 - Components, I apologize about that.
58:15 - Where is my Shed Cn?
58:17 - Okay, this one, okay?
58:18 - These are my own Shed Cn components, okay?
58:22 - So let's just type here my avatar, okay, dot TSX.
58:30 - All right, and then press Enter.
58:32 - Okay, and then let's go back to the avatar and see.
58:37 - Okay, so after that, we just need to import these, okay?
58:41 - So here we're going to press RFCE, okay?
58:44 - React functional component.
58:46 - And inside here, we can, my apologies about that.
58:49 - This is totally wrong, okay?
58:51 - We need to first input everything here and go back
58:55 - and copy this code here.
58:58 - And then from there, paste it here.
59:00 - As you can see, guys, this is our avatar.
59:03 - And then we need to take this component
59:06 - and display it on our main page.
59:08 - As you can see, this is the aspect ratio.
59:10 - So we are going to display this.
59:14 - And then on Windows, I'm just going to press Control
59:17 - on my keyboard and press Space
59:19 - so that I can import the avatar.
59:21 - And then from there, let's go to our main page and see.
59:26 - As you can see, guys, okay, this is the avatar.
59:30 - Okay, this is the avatar.
59:32 - And what we can do, we can go to the aspect ratio
59:35 - and just use the same image.
59:38 - The reason why we are going to use this image is simply
59:40 - because the URL for that image, okay, has already been added
59:48 - or to, let's say, to sheds, sorry, to Next.js.
59:53 - My apologies, guys, okay.
59:54 - This URL has already been added to Next.js.
59:57 - So Next.js is not going to ask us a lot of things
60:00 - instead of taking an image from a different website.
60:04 - So instead of this, let's put our own image.
60:08 - Okay, as you can see, this is our own image, okay.
60:11 - I want you to observe what's going on here.
60:14 - Let's say MT, okay, this is more like a fallback.
60:18 - Maybe in case this image is still loading
60:21 - or maybe it's null, I think then it will use this.
60:25 - And that's about it, guys.
60:27 - Let's go back here and test.
60:29 - As you can see, guys, okay, let's put Enter.
60:32 - As you can see, it shows MT and then it shows this, okay.
60:36 - Let's say, as an added bonus,
60:39 - you might want this to be a little bit bigger.
60:42 - The first thing that we need to do, let's check this avatar.
60:44 - Does it have a prop of size, okay?
60:47 - Does it have a prop of size?
60:49 - It looks like there is no prop of size.
60:51 - So let's see, do we have any class name
60:55 - that we can put here?
60:56 - It looks like we have.
60:58 - So let's just check the width to be 20
61:02 - and the height to be 20.
61:04 - Let's see what will happen.
61:06 - And then I'm just trying to show you
61:07 - how you can change the width and height.
61:11 - Okay, as you can see, guys,
61:12 - you can also change the width and height.
61:16 - Guys, I'm not going to make this tutorial longer,
61:19 - unnecessarily, that's about it.
61:23 - We are done with the avatar.
61:25 - It was a very nice shot and sweet one.
61:28 - I think also the badge is gonna be a very quick, nice
61:32 - and straight to the point, okay?
61:35 - So let me just give you a context first
61:37 - because some components, you might see them,
61:40 - but you don't really have an idea as to where can you use it?
61:45 - Okay, my apologies about that.
61:47 - So let me just open a new tab here and type shed cn.
61:51 - Recently, I'm creating a real life application
61:54 - for a client and I am making use of 10 stack table,
61:59 - obviously from sheds, not necessarily from shed cn,
62:02 - this is wrong.
62:04 - 10 stack table is from 10 stack query,
62:07 - but shed cn has got their own version of it, okay?
62:12 - It uses 10 stack table behind the scene,
62:14 - but obviously you know shed cn has got
62:16 - some beautiful components and a beautiful architecture.
62:20 - So as I'm using the table, okay,
62:23 - I realize that I need a badge.
62:26 - My apologies about this.
62:27 - Let's go to example.
62:28 - I'm looking for a 10 stack table here.
62:31 - Where can I get it?
62:33 - Not here.
62:34 - Task, I think it's here, okay?
62:36 - So as I'm creating this table,
62:38 - I'm realizing that in terms of let's say statuses, okay?
62:43 - I need to have some badges here to quickly indicate
62:46 - maybe if this is inactive, okay?
62:49 - So a badge is nothing much like just like,
62:54 - let's say a rounded button, okay?
62:57 - That you don't really have to click,
62:59 - but it just shows you in terms of colors, the status, okay?
63:05 - So I needed a quick way of showing different statuses
63:08 - and I have used a shed cn badge to do that.
63:11 - So I was just giving you an idea of when can you use a badge
63:15 - because it looks so simple
63:17 - and you might miss the essence of it, okay?
63:20 - So maybe it might be something like this
63:22 - with a different color and it's useful guys, okay?
63:25 - My apologies about that.
63:26 - So there are use case scenarios.
63:28 - So let's get back to the topic at hand.
63:31 - As you can see here is an example of a badge.
63:33 - Let's see what other examples do they have.
63:36 - As you can see, this is a different one.
63:38 - This is an outline one
63:39 - and this is a destructive one, okay?
63:43 - So let's just jump straight into it.
63:45 - So what we are going to do,
63:46 - we are going to install it first,
63:49 - copy this and go to shed cn, okay?
63:53 - Let's see, what do I want to do?
63:55 - Okay, here the code is running
63:58 - and here the code is not running.
63:59 - So let me install.
64:02 - Just paste that guys, nothing much there, okay?
64:05 - And then the badge is going to install.
64:08 - So first the page is going to appear
64:11 - under shed cn UI's components, okay?
64:14 - Somewhere here first.
64:15 - Okay, as you can see here it is.
64:17 - So we are not going to use it from there.
64:19 - What we usually do, we are creating our own UI library
64:22 - as shed cn always advises, okay?
64:26 - My apologies about that.
64:27 - So what we are going to do, we are going to go here.
64:32 - Let's just check something.
64:36 - My apologies about that.
64:37 - I'm done copying the badge, okay?
64:40 - Okay, let's first create our own component, okay?
64:44 - Let's first create our own component.
64:46 - Let's see.
64:48 - Okay, let's say this is my,
64:54 - okay, this is my badge.tsx.
64:58 - Okay, and that's about it.
65:00 - And then what I want to copy here,
65:03 - I want to copy this, okay?
65:05 - I don't know what's going on with my throat guys.
65:07 - My apologies about that.
65:08 - RFCE, okay?
65:10 - Just to create a component and I need to import the badge.
65:15 - Okay, as you can see, so how to use it?
65:18 - Simple kinds, just like this, okay?
65:21 - Copy, and then from there, let me remove everything here
65:24 - and paste, okay?
65:26 - And that's it.
65:27 - And then what else do I want to do?
65:29 - I want to use my badge, okay?
65:33 - I want to use my badge on this page, okay?
65:36 - So as you can see, okay?
65:40 - I can use my badge here on my windows.
65:42 - I'm just going to press control and press space
65:45 - so that I can import my badge.
65:46 - And then from then I will save, come back here.
65:50 - Let's see.
65:51 - As you can see guys, here is my badge, okay?
65:55 - So let's see what can we do with the badge?
65:59 - Let's go back where?
66:01 - Let's go back to the actual badge.
66:03 - My polish about that.
66:07 - Okay, variant outline.
66:09 - Let's see what other option.
66:12 - Okay, equal.
66:14 - And then there is a destructive.
66:16 - Let's see how destructive looks like.
66:19 - As you can see guys, okay?
66:21 - And nice badge there, which is a destructive one.
66:26 - I think that's all, okay?
66:29 - Let's say this is, let's say inactive.
66:34 - Let's say this is an inactive component or a row or a,
66:40 - what can I say, a user, an inactive user, okay?
66:44 - So as you can see guys, so as an added bonus,
66:48 - I think what we can do here,
66:49 - let's just make this component a reusable, okay?
66:54 - My polish about that.
66:56 - So how can we make this component reusable?
66:59 - We just need to pass props, okay?
67:01 - Let me save here and save here.
67:03 - So I'll go back to my badge.
67:05 - So what we need to do here, we need to pass props, okay?
67:10 - My polish is about that, okay?
67:13 - So we need to pass props.
67:15 - Let's say we've got title, okay?
67:18 - And what else?
67:20 - Then we're going to pass title
67:21 - and this is going to be the title, okay?
67:24 - Can we have a class here?
67:27 - Yes, we can have a class name here, okay?
67:29 - So what we can do as well,
67:32 - we can have a class name here, okay?
67:36 - For customizing the badge.
67:40 - What about this variant, okay?
67:43 - Why don't I take this variant?
67:45 - What about this variant?
67:47 - Okay, let's see what we can do, okay?
67:50 - Let's also accept a variant, okay?
67:56 - Let's also accept a variant and let's just copy these as they are, okay?
68:03 - Because we want to, what can I say?
68:06 - To type those, okay?
68:08 - Using TypeScript, the title is going to be a string, okay?
68:12 - The title is going to be a string.
68:15 - We're done with it.
68:16 - The class name is going to be a string, the class name is going to be a string.
68:23 - And the variant, okay, one can make it a string,
68:26 - but that won't be the best way to go about it.
68:30 - So what we need to do, we need to tell TypeScript that a variant,
68:37 - it's a combination of these.
68:39 - So let's copy these as they are from here.
68:42 - In fact, let's not go even to null and undefined.
68:47 - I don't think we have to go there.
68:48 - Let's just copy these, okay?
68:51 - I will explain now what these are, okay?
68:55 - Let's paste these like this, okay?
68:57 - So this means, okay, variant.
69:02 - This means the variant can be default, it can be secondary,
69:08 - it can be destructive, it can be outlined, okay?
69:12 - It cannot be something else.
69:14 - You cannot come here and type variant blue code or red or whatever, okay?
69:20 - That's what this means, okay?
69:21 - We're copying it exactly from here.
69:25 - Okay, let's just fix this spelling mistake.
69:28 - Okay, as you can see, we're done, guys.
69:29 - So let's just quickly substitute here, okay?
69:34 - Code your title here, and then the class name will go here, all right?
69:43 - The class name will go here, and then the variant will go here.
69:53 - That means we just have to remove this.
69:57 - The variant will go here, and that's all, okay?
70:00 - And then when we go to our page, as you can see, it's starting to complain
70:04 - because now it needs those props, okay?
70:07 - Let's say the title is going to be, let's say, coded design, okay?
70:13 - That's a title, and also it needs, TypeScript needs more props.
70:19 - What else?
70:20 - Let's just check here.
70:22 - What are the missing props?
70:23 - We've got the title.
70:26 - We've got, we want the variant.
70:29 - Let's use a destructive one or outline variant, okay?
70:35 - Okay, let me just remove this and act as if I'm typing from scratch
70:38 - so that I can get these, okay?
70:41 - I want an outline one.
70:43 - And what else?
70:45 - Class name.
70:46 - As you can see, guys, what if maybe I don't want to put a class name?
70:49 - So this is reinforcing that I have to put it at this point in time,
70:54 - same way as the variant, okay?
70:57 - It's like some sort of reinforcing, okay?
70:59 - Let's arrange TypeScript in such a way that it's not forcing us to do that, okay?
71:05 - So let's go back to the page, and then here, this must be there.
71:11 - We want the title.
71:12 - You can't have a page without a title.
71:14 - And then in terms of the class name, it might be there, it might not be there.
71:19 - So we can put a question mark here so that it can be optional.
71:24 - And then also on the variant, it might be there, it might not be there, okay?
71:29 - So as you can see now, we don't have a lot of errors, okay?
71:34 - So if we want, we might have a class name.
71:37 - We might not have it.
71:38 - That's not much of a problem.
71:40 - So let me move this down a little bit.
71:41 - Let me save.
71:42 - Let's go check, guys, what's going on here.
71:45 - As you can see, we've got a button, a page with some sort of an outline page.
71:51 - Let's say we want to change that to destructive, okay?
71:57 - Destructive, let's see.
72:01 - As you can see, guys, now we've got a destructive page.
72:07 - Hey, what's up and welcome.
72:09 - Smith here, the hybrid, the designer and developer, the greatest from South Africa.
72:14 - Let's continue with our shared Cn master class.
72:17 - We are done with the page.
72:18 - And now I was just going to say we are going to the button, okay?
72:23 - But it looks like there is something before the button and this is a breadcrumb.
72:31 - It will be my first time to use this component, okay?
72:34 - Maybe that's why my mind automatically skipped it, okay?
72:37 - And it's new, okay?
72:39 - Cool, no problem.
72:40 - Let's see, okay?
72:41 - It displays the path of the current resource using a hierarchy of links, okay?
72:49 - As you can see, guys, okay?
72:52 - It looks like it displays the path of a current resource using a hierarchy of links, okay?
73:00 - Okay, let's see.
73:03 - This is how you use it, okay?
73:07 - Customs operator.
73:09 - Let's see.
73:10 - Okay, now I see, now I see, now I see.
73:15 - You know, it's more like routing, okay?
73:18 - As you can see, it's more like something like this, okay?
73:22 - If you want to know in terms of the folder structure or the hierarchy, okay?
73:28 - Let's say we are having, what can I say?
73:31 - We are having a file, a PDF and the name of that PDF is shared Cn course, okay?
73:37 - The shared Cn course is some sort of a child of many folders.
73:43 - The parent folder, let's say it's courses and then inside that folder, there is shared
73:48 - Cn course and then inside that folder, there is shared Cn and the file which is shared
73:54 - Cn course.pdf is inside there.
73:57 - So I think this component can be used to some sort of indicate that, okay?
74:06 - Let's just make sure if we are correct.
74:09 - Let's try to check the code and relate what is going on here to Cn, okay?
74:14 - We've got home, components and breadcrumbs.
74:16 - Let's check where is the code for this.
74:19 - Let's check the code, okay?
74:23 - Let's check the code, okay?
74:25 - So as you can see, we've got href here, home as you can see.
74:30 - So meaning that this is going to be like home, something like this without this, this is
74:34 - going to be home and then when you go to components, okay?
74:40 - When you go to components, going to be forward slash here components and also the breadcrumbs,
74:45 - where is the href for breadcrumbs, or maybe it doesn't have because in components we've
74:56 - got a breadcrumb as a component, I'm not sure, okay?
75:00 - It's also my first time to use this but at least now I understand what and why, what
75:05 - is it and how can you use it, okay?
75:08 - Okay, so it makes sense that it is displaying the path of the current resource using a hierarchy
75:16 - of links as you can see guys.
75:18 - So let's quickly go and implement this.
75:22 - So you're just going to copy this from here and then where is my terminal, okay?
75:31 - I don't think I have pasted what I want to paste, let's see, okay?
75:37 - NPM I'm happy with this and then let's paste this here and install it, okay?
75:45 - And then let's check, this is what we have to copy.
75:49 - So as usual, we are going to go to our shared cn component.
75:55 - Let's create my breadcrumb.tsx, okay?
76:06 - Let's use this shortcut rfce, react functional component and let's import everything that
76:12 - we have to import as you can see guys, okay?
76:15 - And then let's just copy and paste what, copy and paste what?
76:20 - Let's copy and paste this, okay?
76:24 - Okay, and then let's paste it here, okay?
76:29 - As you can see guys, so now what we want to do, we want this component, my breadcrumb.
76:35 - Let's go to the main page and add it here on the main page.
76:40 - Let's see as a self-closing tag, okay?
76:43 - Then on Windows, I'm going to press Ctrl and space so that I can import it and save everything.
76:49 - Let's go back here and check, do we have a breadcrumb here?
76:56 - I think here is it, okay?
77:00 - I think here is it.
77:02 - As you can see, it's routing to a, what can I say?
77:07 - To a path that doesn't exist on our project, that's not much of a problem.
77:11 - But now I want to know where is this coming from?
77:15 - Let's go and check my breadcrumb, okay?
77:20 - This is home component and oh this is my breadcrumb, oh now I see, okay?
77:24 - So because of the width of this, okay, this has been pushed under, now I understand what's
77:30 - going on.
77:31 - So let's just increase the width of this which is 200, let's make it, let's say 350, okay?
77:40 - So that it can be a little bit bigger as you can see guys.
77:42 - So this is the breadcrumbs, okay?
77:48 - What could be a practical implementation?
77:54 - I think that's what it is, okay?
77:56 - You will just have some paths here.
77:58 - So if you want to go here, it will go to components.
78:01 - If you want to go here, it will go to another folder, okay?
78:05 - I think that is it guys.
78:06 - There is nothing much I am thinking of in terms of application, okay?
78:14 - But it just shows the hierarchy that this is under home and this is under components
78:20 - and this is under breadcrumbs.
78:22 - For now guys, let's just keep it simple, keep it flowing and keep it going like water.
78:26 - Let's not complicate things unnecessarily.
78:29 - Yes, I think that is all.
78:34 - Maybe as a bonus, okay, maybe as a bonus we can create a dynamic breadcrumb, okay?
78:43 - I am just trying to find something useful and meaningful that I can teach you instead
78:48 - of copying and pasting sheets and things, okay?
78:51 - We can create a dynamic breadcrumb here.
78:54 - Let me show you guys how, okay?
79:00 - So the breadcrumb needs, this is not where I want to be.
79:06 - The breadcrumb needs my breadcrumb.
79:11 - The breadcrumb needs an href, okay, where like the path, okay?
79:20 - It needs the path and what else?
79:22 - It also needs the title, okay?
79:24 - There is a title and the path, the title and the path.
79:27 - So what we can do, we can create a folder here inside the app.
79:37 - Let's call this folder constants, is constant the right name for this folder?
79:46 - Let's just call this folder defaults, okay?
79:52 - Let's just call this folder defaults and then inside this default, we are going to
79:59 - have breadcrumblist.ts, okay,.ts and then inside here we are going to have an object
80:17 - constant, breadcrumblist, breadcrumblist equal to and then what we are going to do, we are
80:29 - going to have an array of objects.
80:33 - Is this okay?
80:34 - No, this is not an array of object, this is an array and inside this array we are going
80:38 - to have object.
80:39 - The first object is going to be title, what's the title of the breadcrumb, okay?
80:46 - Title is home and what's the link?
80:51 - The link of the breadcrumb is forward slash, okay?
80:57 - And then let's create another object, okay?
81:04 - The title might be about, let's say and this doesn't really make a perfect sense in terms
81:15 - of, I don't think this is the best way of explaining it.
81:19 - So let's just say we've got folders, let's make this course, okay, courses, okay?
81:26 - Inside the courses we've got another course which is shared cn, okay?
81:35 - For UI courses which is user interface courses or front end, okay?
81:44 - Front end courses, okay?
81:47 - And then inside front end courses we've got shared cn, okay?
81:52 - I want this to be more meaningful, okay?
81:55 - Then we've got shared cn as a front end course and then inside there we might have the actual
82:05 - file, let's say, which is shared cn book, okay, let's say shared cn book which is,
82:18 - that will be it for now, this is the actual file, okay, let's say.
82:21 - And then we've got courses here, okay, the path will be courses, okay?
82:30 - And then the front end courses will be inside courses and then front end, okay?
82:42 - Let's say front end and then, okay, and then the shared cn folder will be inside courses
82:52 - then which will be shared cn, okay, and then from there we will have the actual file, okay?
83:04 - The actual file, let's say shared cn.pdf, okay, the actual book.
83:10 - So I hope you get what's going on here guys, basically we are having a file which is like
83:15 - inside these folders, okay?
83:16 - So we want to create a breadcrumbs that will help us to click, okay, navigate to let's
83:23 - say different places like on courses or courses front end or courses front end shared cn or
83:29 - click the actual pdf.
83:30 - So the difference is now we are going to take this from this list, okay?
83:37 - This is just an added value or a bonus.
83:39 - So let's export this so that we can use it.
83:45 - As you can see guys, we've exported this breadcrumb.
83:47 - So we can go to the breadcrumb, this one, yes, and then what we will do, okay, what
83:58 - we will do, we will check the breadcrumb items where they start and where they end, okay?
84:04 - Start here, end here, there is a separator, okay?
84:08 - And then it starts here, it ends here, okay?
84:11 - So I'm thinking what we can delete, okay?
84:16 - This is the breadcrumb, this is the breadcrumb list, I'm happy with this.
84:21 - So I think we can delete from here up to the separator, okay?
84:27 - Let's just save and see what's there.
84:30 - As you can see here is the separator, this arrow, I'm happy with that.
84:34 - So what we want to do now, we want to, let's just open a block of code here.
84:42 - We want this, okay?
84:44 - Where are we going to get it?
84:45 - We are going to just right click, import it from default breadcrumb, I'm happy with this
84:51 - and then we want to map on it, okay?
84:56 - That means you look through it and then from there we want to receive let's say a crumb,
85:04 - or let's say item, okay?
85:06 - Let's say item and then let's destructor also index.
85:13 - Index and then let's create this, okay, like an arrow function.
85:21 - And then for now let's return a ptech, okay?
85:25 - We just want to see what will be the errors, okay?
85:29 - Obviously, let's see what's the problem, okay?
85:34 - This one, let's see, let's see, let's see, let's see, let's see, where am I closing this
85:39 - one?
85:40 - Let me close it here, okay?
85:43 - Obviously everything works well, it's telling us that this one is missing the key.
85:47 - So for now let's just put index as a key, okay?
85:52 - As you can see guys everything work well, we can look through this, let's just quickly
85:58 - see what happens.
85:59 - You can see guys we've got test, test, test, test, this is not what we want actually, okay?
86:04 - So what we want, we want to repeat these three, okay?
86:10 - The breadcrumbs item and the separator, okay?
86:15 - So we want to repeat this.
86:17 - So onto breadcrumb item and the separator, okay, why it's giving me, okay?
86:27 - And then that's what we want to repeat.
86:29 - So for now, okay, let's see, pressing JSX expression must be okay, cool, it must have
86:42 - a parent element.
86:43 - So what we're going to do here, we're going to just create a fragment, okay?
86:46 - This is a JSX fragment, it's just like a container that doesn't do much, okay?
86:52 - So let's see how these are going to be repeated.
86:55 - As you can see guys, it's repeating the same thing, okay, nice, okay, same thing.
87:00 - So what we want to do now, we want to add the actual values, okay?
87:06 - In terms of the title, let's put it here, okay, item.title, let's go back and check
87:17 - the titles guys, okay?
87:18 - As you can see, courses, front end course, set cn, and we've got the actual book, okay?
87:25 - And then let's swipe, and then what we want to do, what we want to do, we want to change
87:35 - this URL, the href, and then we want to put item.link, okay?
87:42 - I'm happy with this, everything works fine, save and go back here.
87:48 - So now let's say we want to go to courses, courses is just forward slash, oh okay, it's
87:53 - forward slash courses, may I call this about that.
87:55 - So if we had this path, we're going to be taken to this path.
88:00 - Let's say we want front end courses, front end courses is found inside courses, and then
88:04 - there is front end, okay?
88:06 - And then set cn, okay, set cn in say front end course is found under courses, and then
88:12 - if we want this file as a PDF, we were going to get it as a PDF.
88:20 - Now we are here creating a button.
88:24 - This is also going to be one of those lowest hanging fruit, very easy to do, there is nothing
88:30 - much in it.
88:31 - So let's get into it.
88:33 - So if you want to have a button in your project, you must first install it.
88:39 - Let's go back here, I've already got a set cn project running.
88:44 - So I'm just going to paste this, okay, and install a button, as we always do, I am going
88:51 - to the button is still installing.
88:56 - Okay, I am going to go to our folder, okay, where is it, the set cn folder.
89:05 - And here I'm just going to create a file my-button.tsx, okay, as you can see, as we usually do rfce
89:15 - just to create a react functional component, and then we are going to import the button.
89:22 - Okay, we're going to import the button and we will use the button, okay.
89:32 - And we will use the button and this is the name of the button.
89:35 - So let's just click Save and take my button to the actual main page, okay.
89:42 - Take this my post about this, let's just type here button.
89:46 - And we just need to be very, okay, we don't need button, we need my button, okay, my button,
89:55 - this one, okay, as you can see from our own set cn.
89:59 - And then from then we can go and check how the button looks like here.
90:03 - As you can see guys, this is an outline button.
90:05 - Okay, let's look at what are the options in the button, my button.
90:13 - Let's see, remove this because I want to see more options.
90:16 - Okay, so we can have a descriptive button if we want, which is with a red background
90:23 - as you can see guys, okay, so this is just a button.
90:26 - Okay, now let's create, let's make this button reusable, okay, so that it can be easier for
90:32 - us to just reuse the button instead of creating a lot of buttons.
90:37 - So what we're going to do, we're just going to open this and type title here because we
90:43 - want to get the title from props, okay.
90:46 - And then from there we can have title and we can, what can I say, type title, okay.
90:55 - Title we are going to receive it as a string, my apologies about that.
91:00 - We are going to receive title as a string, this is title, let's copy this title to here.
91:05 - Okay, as you can see guys, this receive title is a string.
91:08 - So now there's an error here, simply because we didn't pass title, okay.
91:16 - We didn't pass title, sorry, okay, let's just type here save and then enter.
91:27 - As you can see guys, now we've got save.
91:29 - So this button is more like a reusable button.
91:32 - If we want cancel, okay, if you want cancel, we can type here cancel, you can type here
91:42 - cancel, okay, let's see, as you can see guys, this is cancel, okay.
91:52 - Now we are here on the calendar, okay, obviously, as you can see here with shared cn what we
92:00 - are doing, it's more like a routine, okay, we are installing a component and we copy
92:05 - and paste code and that's about it if I can be honest, okay, as much as I am trying to
92:12 - give you some use cases, some extra code, but basically that's what we are doing.
92:17 - So let's try to add value and see what can we do more on top of what shared cn is giving
92:26 - us.
92:27 - Okay, so what I'm going to do in this tutorial, number one, I'm going to show you the obvious,
92:33 - how do we make use of the calendar, a calendar component, it's going to be my first time
92:40 - using it, okay.
92:41 - I haven't used all of these components guys, okay, some of them, I'm using them just simply
92:46 - because I'm making a tutorial and I'm doing everything, okay.
92:51 - So what I'm going to do here, let's just check first of all how a calendar looks like, I
92:55 - think there's, okay, you just pick a date here and then obviously, I'm assuming there
93:01 - is a certain way in which you can use the date, okay.
93:06 - Is that going to be all, I'm just thinking guys as an added bonus, okay.
93:12 - What I will do, okay, I will always find a way or I must find a way to display, okay.
93:22 - How many days are between the selected date and today?
93:29 - Okay, guys, my apologies about that, there was a major D7, so I had to quickly pause
93:35 - the video.
93:36 - So I was saying we will find a way to always display the number of days, okay, between
93:46 - today and the selected date, okay.
93:52 - Let me be honest with you, I don't know how am I going to do that and I think this talks
93:58 - to the essence of this channel, I started this channel to learn new things, okay.
94:03 - The only thing that I know at the moment, there is a package called moment.js which
94:09 - is very good with manipulating dates, okay.
94:12 - So it's like we are going to learn together, okay.
94:15 - I'm trying by all means to make these shared CN videos useful and applicable, okay, showing
94:22 - you that this works, okay.
94:25 - As you can see, this is something I can do, you can do, you can copy and paste this code.
94:29 - So without wasting time, let's just jump straight into it, okay.
94:33 - So first of all, we are going to install the calendar, okay.
94:38 - Let's go here, okay.
94:40 - As you can see, this is the running terminal and this one, okay, it looks like I was trying
94:46 - to install a component that already exists.
94:49 - Let me just click no here, let me just clear here, okay.
94:53 - So let's install the calendar.
94:56 - Let's see if the calendar doesn't have some dependencies, okay.
95:00 - Some other components that it depends on, okay.
95:06 - Okay, so I think the calendar is dependent on a date picker, okay.
95:13 - Let's see, let's see a code first, let's see, okay, I'm importing here, they are importing
95:21 - a calendar component, okay.
95:24 - It looks like it doesn't use a date picker, okay.
95:29 - Let's see on the preview, okay, I think it doesn't use, okay.
95:34 - Let's read, the calendar component is built on top of a React date picker, okay, yeah,
95:40 - it looks like.
95:41 - So I think we might as well install the date picker then, okay.
95:49 - Let's quickly do that, nope, guys, I'm making a mistake, I'm making a mistake, I'm making
95:55 - a mistake, okay.
95:57 - So this is the underlying React package, okay.
96:02 - Sometimes these components are built on top of other sheds and component, I thought that
96:07 - was the case, okay.
96:08 - Let's just continue guys and go with the flow, okay.
96:10 - We have managed to install this.
96:12 - So now let's continue here, okay.
96:16 - Remember I said it's also my first time to use a calendar, okay.
96:20 - So let's continue, where do I want to be, okay.
96:26 - Let me minimize this, okay.
96:27 - I want to be on a shed cn, as you can see, these are our shed cn components.
96:32 - So let's type here my Carlin, okay,.tsx, okay.
96:44 - Let's type rfce as a React functional component, rfce, y, it's not working rfce.
96:54 - Okay, finally it worked.
96:58 - So let's paste here, importing the calendar because we already installed it, okay, and
97:04 - then how to use it, okay.
97:07 - We have a state here, let's copy the state, okay, and put it here.
97:15 - This is the state and then we are going to copy this calendar component and this as a
97:21 - self-closing tag and okay, okay, okay, let's see, let's see, let's see, oh, this is my
97:32 - calendar, when did I put this, okay, let's see, is this the same, yes, it looks like
97:42 - let me undo, undo, click, undo, okay, I don't remember myself pasting this, okay, okay,
97:52 - let's see guys, a magic happened guys, okay, my apologies about that, I don't know because
97:59 - I didn't put this, okay, the reason why I'm doing this, I don't like things magically
98:04 - appearing in my code, as much as it's sometimes they might seem like it's a good thing, let's
98:09 - say, okay, it doesn't hurt or it doesn't disturb me but I like to be intentional, okay, remember
98:17 - code is not a magic, you don't have to be excited when things are automatically happening
98:21 - without knowing why, so that's why I had to reverse this and I have to copy and paste
98:27 - these myself, okay, I'm just minimizing unnecessary bugs, okay, so let me copy and paste, this
98:34 - is the same thing as you can see but at first I didn't know how it appeared, okay, that
98:39 - was a big problem to me, so let's just click save and then let's take my calendar to the
98:44 - normal page, okay, let's create a self-closing tag and then on windows I'm just going to
98:51 - press ctrl and space and I'm going to import my calendar, okay, so if we were just following
98:59 - our shared cn, this was going to be it, okay, okay, as you can see guys here is the calendar,
99:06 - okay, it looks like it's not built on top of any other shared cn component like button
99:12 - and other things, okay, so that's cool, let's see, what day is it today, okay, let's see,
99:22 - today it's Monday, okay, it's Monday, this is my, where is the 27th, let's see, yes,
99:31 - the 27th is Monday, okay, cool, so here is the 27th, it's Monday, okay, so as you can
99:38 - see guys if we were, what can I say, if we were just copying this shared cn component
99:45 - by now we were supposed to be done but let's make this meaningful, okay, or at least applicable,
99:50 - okay, first of all let's get the selected date, okay, so how are you going to do that,
99:56 - let's check on my calendar, we've got a state here, so selected is equal to a date, okay,
100:03 - on select, okay, this will set the date, okay, so that means the current date we have it
100:09 - here, okay, so how are we going to do this, let's do it like this, let's do it like this,
100:18 - let's do it like this, let's alert, will that be the best way, no, I don't think so, okay,
100:25 - let's do this guys, let's have a react div here, let's just have a div, put this one
100:33 - here and then let's have a p tag, let's have a p tag and then in this p tag first let's
100:43 - check what type of a data type is this, this is a date, okay, so let's just put this date,
100:54 - and now let's go back to our usual way of doing things which is feed link, okay, I'm
101:01 - not the best, I'm not a guru in react guys, believe me, even in JavaScript, okay, so I
101:06 - feed a lot, so now I'm going to apply one of those, this is a date, I'm just going to
101:11 - type dot here to see what are the methods that are available, as you can see guys, this
101:16 - is get day, okay, let me try it and see is it a method that I have to call it like this,
101:22 - as you can see guys, looks like I have to call it like that, so I'm just taking chances,
101:27 - I'm that type of a guy, okay, I'm not a guru, I don't memorize code but I use whatever that
101:33 - I know to pass by, so let's check if we can get the date here, okay, as you can see here
101:41 - we are having one which is the day, okay, let's click here, this is day four, now we
101:51 - need to understand what is going on, okay, I think this is the day of the week, let's
101:59 - click here and see, if this is a day of the week, today it's, I think it's Monday, yes
102:07 - Monday is day one, okay, this is working guys, this is day two, day three, day four, day
102:13 - five, okay, cool, we are winning guys, okay, that means we are able to, what can I say,
102:19 - to get, to make use of the date, okay, okay, then let's see what else can we get here,
102:29 - let's say plus, put a space there, okay, just put a space and then plus, let's say date
102:39 - dot get date dot get, okay, let's say dot get date, I hope it's a string, is it a method,
102:50 - okay, let's try this, okay, let's see, okay, so the date is the 31st, the date is the 23rd,
102:59 - the date is the 9th, okay, we are getting there guys, okay, so as you can see it looks
103:03 - like we can get whatever that we want from this date, okay, what else do we want to get,
103:11 - let's try the last one, okay, let's try the last one to see, okay, what else can we get
103:20 - from here, okay, dot get date dot get day, dot get hours, I'm not really, I'm not interested
103:30 - in those, not set, I don't want that, okay, can we get the month, let's see, okay, this
103:40 - is set, let's go back to get, get day, get hour, get month, it looks like we can get
103:47 - the month guys, okay, okay, let's see, let's see, let's see, okay, this is the 4th month,
103:58 - okay, January 4th month, April, it is the 4th month, May or April, okay, it's something
104:11 - that I don't understand here, but anyway, you can make some experiment guys, maybe you
104:17 - even understand this more than me, okay, so remember what I said, I said there is a package
104:23 - that I know which is moment dot JS, okay, dot JS, moment dot JS, let's see, let's see,
104:37 - do they have an npm package, npm package, install moment dash dash save, okay, this
104:46 - is yarn, okay, so what I'm going to do, I'm going to make use of that, we're going to
104:52 - use that calendar like in conjunction with moment dot JS and see what can we create,
105:00 - remember we said we are going to get the date difference in terms of days, okay, so let's
105:08 - see, okay, there is this method, let's say moment dot subtract 10 days dot calendar, okay,
105:23 - okay, let's see, let's see, let's see, let's see, let's see, moment, okay, so let's first
105:31 - install the package and see how it works, okay, even me guys, if I again can be honest,
105:37 - I don't have like more information about this package, okay, I know it exists, it makes
105:44 - handling dates a little bit easier, also let's check here before, let's check here moment
105:51 - on npm and see can't we get meaningful example, okay, as you know by now I'm not a big fan
105:58 - of memorizing code and I don't claim to be a guru, a guy who knows everything, okay,
106:04 - so let's learn together guys, it looks like there are no examples here, it only takes
106:10 - you to a documentation, okay, and this is the same documentation, okay, cool no problem,
106:20 - if then it takes us to the same documentation, let's just click this documentation, so let's
106:26 - install it moment dot JS, okay, so what we are going to do, we are done installing moment
106:37 - dot JS, let's see, okay, I think we are supposed to import this moment and then we can use
106:46 - it, okay, suppose moment dot JS is there detailed documentation docs, okay, project status, you
106:57 - probably don't need moment dot JS anymore, okay, I'm looking for the documentation, okay,
107:13 - it looks like we don't have using moment dot JS npm install cool, this is note dot JS,
107:22 - nope, I'm looking for react maybe, not typescript, all right, maybe it's me, maybe it's me, let's
107:37 - first take chances as you know here at correct design, we take chances, okay, so let me do
107:44 - this, let me minimize this, okay, so here let me type const, let's say const M for time
107:56 - is equal to, let's say moment, okay, moment isn't there, let's see, if I press ctrl and
108:07 - press here, there is nothing with the moment here, that means the feed link doesn't work,
108:17 - let's try this guys, okay, if nothing works, don't mind much, we will have a solution,
108:23 - we will ask charge p t, okay, let's see, okay, it's a moment, let's say from moment, okay,
108:40 - moment doesn't have an exported member moment, if it's not an exported member, let's try
108:46 - this, okay, maybe it has got a hook, use memo, okay, as you can see guys, our find a find
108:56 - a way doesn't really work the way we want, okay, cool, let's write charge p t, okay,
109:06 - please show me how to use moment.js in react, type script to subtract dates, okay, okay,
109:33 - I think this is, that's about it, okay, let's see, install moment.js and it types and it's
109:42 - type script type, okay, as you can see and also it's typed, cool, okay, let's see, import
109:48 - moment from moment, didn't I try this, okay, now it doesn't complain but before, yeah,
110:01 - now it complains, I remember, let's see, oh, now it works, okay, I don't know, maybe we
110:09 - didn't do it the best way, okay, find, now there is no need for us to do a find a find
110:14 - a finder if charge p t is telling us exactly what to do, let's see, okay, define two dates,
110:22 - date one moment, this is date one, date two moment and then const different dates, date
110:29 - one dot diff, okay, in terms of days, okay, this is what we want exactly guys, okay, I'm
110:36 - happy with this, let's see, first is it working the way we might want, okay, let's display
110:45 - date difference here, okay, what we can do, we can delete all of this and then, okay,
110:54 - this is 2023, 05, 27, this is 2023, 05, 20, okay, let's see what it will display here,
111:07 - okay, the date difference, it's seven days, let's see, from 20 to 27 it makes a perfect
111:15 - sense, okay, let's say this is 2024, what day is it today, I think it's 04, 04, 05,
111:25 - 25, very much April, May, I think May is 05, right, is 05, okay, cool, and then the same
111:36 - May, let's see 2024, the same May but now the date is going to be not the 20, let's
111:45 - say it's going to be the 25, okay, the 25th, let's see the date difference in terms of
111:50 - days, it's two days, it's working right, cool, now let's use our own mind to get the date
111:58 - from this, okay, to get the date from this, okay, from this one, so we must have this
112:10 - date as today's date, okay, so we must have this day as today's date, so let's see date
112:22 - one dot date difference, okay, day two in terms of days, okay, so that means the current
112:30 - date, it's date two, let's make date two 27 and we are going to change date one, okay,
112:36 - so we start with 27 and then we want to change date one, so can we get date one from this
112:43 - date, okay, so what I'm going to test first here, I'm going to some sort of put the date
112:54 - as a string, can't I have two string here, let's see is there any possibilities of that
113:02 - two string, let's see, okay, I just want to see does that exist, yes, it looks like because
113:09 - as you can see guys this date is in form of string, so let me test it, do we have a string
113:14 - date, as you can see guys here is the string date, okay, let's see if moment dot JS will
113:21 - understand this as a date, okay, let's see if moment dot JS will understand that as a
113:27 - date, let's see, let's see, let's see, let's see, let's see, let's copy this, okay, and
113:40 - then we are going to put it to date one, okay, let's put it to date one, okay, and then let's
113:50 - display the difference in days, okay, let's display the difference in days, and then let's
113:58 - go back and see, okay, now it's minus 18, I'm not sure if this is correct, okay, it
114:08 - might be because as you can see this date is behind this one, let's just do a quick
114:13 - check, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, it works guys,
114:24 - it's working, okay, let's click on the 27th, there is 0 days, okay, on the 30 it's 3 days
114:32 - and on the 31st it's 4 days, okay, as you can see guys we have just created something
114:39 - meaningful out of shared date, okay, at least I've also learned something, okay, I didn't
114:47 - really, I have not used moment.js if I can be honest, now at least I've got a bit of
114:54 - understanding how it works, and also guys these packages, the more you learn other packages,
115:02 - I think they've got some sort of a certain standard, in a way they are not different
115:07 - from each other, okay, for instance you import moment from moment just like any other packages,
115:13 - okay, so that's why I always try to take chances and see can't I figure out something of my
115:19 - own, okay, so I'm happy if you have learnt something, let's go back to here, I'm proud
115:24 - of myself to have created this, this is interesting guys, okay, you don't have a picture of how
115:30 - happy I am to create this because this opens like a lot of possibilities, okay, I'm going
115:38 - to use this functionality in a lot of things, counting down, okay, maybe in a project based
115:46 - application where let's say the deadline, what can I say, at the cutoff time, okay,
115:51 - let's say we are having an application that schedules projects, okay, let's say I'm receiving
115:59 - a dev project from a client, okay, to say that this is what I want, so I have to ask
116:04 - the client how long do you want me to take, maybe they will say 3 months, so I will put
116:10 - a starting date here and then this is July, October, September, then I will put the ending
116:16 - date, then I will note that I am left with 157 days, each and every day this will decrease
116:22 - reminding me that okay, I'm left with only these days, okay, so this opens a lot of possibilities
116:30 - for me, that's why I wanted to try it.
116:34 - I think this is also one of those videos which are going to be very, very, very quick, quick,
116:40 - because there is nothing much to do here, this card I think it's one of those important
116:46 - containers, okay, when you are developing a real life application and feel like I wish
116:51 - I can get a four corner container with nice layout and that is it, so this comes handy
116:59 - when you want to do that, so without wasting time let's just follow the instructions, at
117:04 - the moment I don't have a practical way in which you can use this, maybe as we continue
117:09 - I will think of something and then we will implement it right there and there, okay,
117:14 - I like to make these tutorials and attach some sort of a simple practicality on how
117:19 - can you manipulate it and use it in real life, okay, so let's just do what they are saying
117:25 - here, let's copy and then let me go to the terminal and let's, I apologize about that,
117:38 - let's install this, okay, and then what we are going to do next, we are going to copy
117:45 - all of this import, we are getting into the usage, so as you know by now we are creating
117:50 - our own components here on this folder, so let's copy my card.tsx and then rfce doesn't
118:02 - work, rfce maybe it want me to be slow, as you can see now it works and then let's put
118:08 - all the imports, okay, and then from then let's copy and paste this as it is, okay,
118:17 - copy and paste this as it is, I'm happy with this, as you can see guys everything works
118:22 - well, so why don't we just take this my card component to the main page so that we can
118:28 - display it, okay, this is a my card component, self-closing tag, let's see how it looks like,
118:36 - okay, where is my card, here is my card, okay, I think what I can also do, let me go to,
118:48 - let me go to what, let me go to what, let me go to what, let me go to the main page
118:54 - and okay, this is the main page and then in the main page what I will do, where is the
119:01 - main page, okay, here is the main page, this is the class, okay, what I want to do here,
119:09 - let me put the width, okay, of full size, must it be full, don't think it has to be
119:18 - full, let's put like 550, okay, and the height, for the height let's say it's, let's put
119:28 - the height of screen, okay, let's put the height of screen and let's justify content
119:34 - center, okay, let's item center, item center, let's not forget to put some flex there, let's
119:47 - just see how things are at the moment, okay, this is somewhat there because I want all
119:54 - of these to be visible, okay, okay, but now they are arranged in form of a row, okay,
120:01 - so this means that let's make also a width of screen here and let's see, okay, I want
120:10 - all of these to be visible, okay, I think this is somewhat it, okay, this is somewhat
120:18 - it, let's make this auto, okay, now I think this video is becoming longer unnecessarily,
120:26 - okay, okay, let me deal with this later then, okay, because now this video is just going
120:32 - to be longer unnecessarily, okay, let's see, okay, and then let's type here flex column,
120:46 - okay, flex column and a gap of, let's say a gap of 5 and pairing of 4, okay, I'm happy
120:59 - with this, as you can see guys here is our card, okay, so this is a card title and the
121:04 - card content and the card footer, okay, what else can we do here with this, let's try to
121:10 - make this a highly reusable card component by passing props, okay, so let's go to my
121:20 - card, okay, we've got my card title, let's put our props, we can receive a title, okay,
121:33 - content and what else and the footer, okay, all right, as you can see guys now we need
121:50 - to type these, okay, we need to put some types, okay, because we're using TypeScript, let's
121:59 - type these, okay, so let's be clever, as you can see this has to be a string, when you
122:07 - are describing something you have to use alphabets or like sentences to describe it, but in terms
122:13 - of the content and the footer this can be a lot of things, okay, in this content we
122:19 - can be able to push this, this date component here, so meaning that this doesn't have to
122:26 - be a string, it needs to be a React node, so that it allows strings and it allows other
122:32 - components, okay, so I hope you do get that one, so let's make this a string, let's make
122:40 - this description a string as well, but in terms of content let's make this content a
122:47 - React.react-node, okay, this has to be a calculator, okay,.react-node,.react-node, okay, let's
123:03 - copy this for this for the footer as well, so that if in the footer we want to put some
123:09 - button we can put those, so as you can see guys, okay, as you can see, so now here this
123:18 - guy is expecting those, okay, so as you can see he's expecting those, so let's quickly
123:24 - are supply those, so here the title is going to be let's say calendar, this is not a, yeah
123:41 - let's just type calendar guys, okay, for simplicity and then after that we've got the title what
123:46 - else is missing there, title is missing, description and content, okay, description, my apologies
123:55 - about that, let's go to description, description, let's say, calculate days between, for now
124:18 - let's just say between dates, okay, between two dates, all right, and what else content
124:29 - in terms of the content, okay, in terms of the content remember we said we are going
124:34 - to put the calendar, okay, where is the calendar, let's put my calendar in there in terms of
124:40 - the content, okay, and in terms of the footer let's put a button there, okay, as you can
124:48 - see guys now this is becoming useful because we are also putting components, okay, I hope
124:56 - this is ready, let's check guys, okay, how it is now, it's going to refresh now, now
125:02 - let's just wait, looks like it's not refreshing, is there an error, no, okay, let's refresh,
125:10 - manually let's see is this calendar going to get inside this cut, why that is not happening,
125:17 - let's go back, let's see, let's see, let's see guys, okay, this is my card, it has got
125:24 - everything, I'm happy with that, okay, let me just shield this terminal, clear everything
125:34 - and let me run it again, npm run def, okay, let's just double check this is my card, okay,
125:44 - my apologies guys, this is my mistake, I didn't change this title to be this, okay, this is
125:50 - my mistake, my apologies about that, looks like I'm asleep now, okay, let's copy the
125:55 - description to be here as well, okay, all right and then our content, let's put the
126:04 - content here and then let's put the footer here, all right, let's wait for it to refresh
126:19 - or if it's not, let's refresh it manually, okay, let's see, this is supposed to refresh
126:28 - and put everything there, I think everything is just working fine, let's go back and see,
126:36 - I don't know why it's low, my apologies about that but as you can see guys here is it, okay,
126:41 - we've got a calendar, calculate, this is the wrong spelling, calculate days between two
126:45 - dates, let's see, okay, as you can see minus 12 days, between now and this date it's only
126:51 - four days, as you can see guys this is the practical use of a calendar, okay, I don't
126:59 - think there is something else, okay, calculate days and now we are getting into the fun stuff,
127:11 - okay and that one is the carousel, okay, as you can see guys this is more like a sliding,
127:18 - that can I say component, okay, this could be images and everything, as you can see guys
127:23 - this is interesting, okay, let's just see other examples, okay, so I think this one
127:29 - is going to be the longest in the series because this is not like a straightforward component
127:38 - if I can be honest, there's a lot of things that we need to look at, whenever I'm working
127:43 - on this component, I always get something right and the other one wrong, get something
127:48 - right and the other one wrong, okay, I have been in that loop, okay, for a very long time
127:55 - so now what I'm going to do here, we are going to take this component step by step, okay,
128:02 - remember in this channel as much as I am trying to help other people to understand code but
128:07 - the intent of this channel is to help me to become a better developer as well, you see,
128:12 - me and you are not the same, sorry, me and you are essentially the same, okay, we are
128:17 - not different, that's what I meant, okay, I am also learning as much as you are learning,
128:22 - okay, so let's see if Matthew from coded design can improve and now master, okay, what the
128:31 - carousel, okay, I'm going to take it step by step and I'm going to explain to you things
128:36 - that I find confusing and things that are a little bit difficult for me, okay, are you
128:41 - excited, I'm also excited, okay, let's get into it guys, I think we can win this, we
128:46 - can do this, believe me, okay, so let's start from scratch, okay, okay, a carousel with
128:52 - motion and swipe built in with mbla, okay, okay, cool and then how do I install it, okay,
129:00 - carousel, let's see, copy and paste, let's go back here and then let me just clear first,
129:10 - clear, okay, I think I have my apologies about that, everything has been cleared, let me
129:20 - go back here, copy and then paste here and then we have installed the carousel, okay,
129:29 - now let's come here and check the usage, okay, first thing you have to import and then let
129:35 - me go back here and type in our components folder, let's create a component, my carousel,
129:46 - okay, let's name this my carousel one, since I believe we are going to have different versions
129:53 - of this carousel and we are going to do all of them, okay, all right, so rfce as usual,
130:01 - okay and then we are going to paste this, okay, I hope this is easy and you are following
130:07 - at the moment and then let's copy this and then paste it here guys, okay, paste it in
130:16 - here, as you can see everything is working well and what else, I think we can import
130:24 - this on the main screen my carousel one, okay, my carousel one, okay, let's do that right
130:35 - in the end, let's import my carousel one, okay, self-close and tag and save, let's just
130:46 - go back here guys and see how it looks like, okay, let's see, okay, this is how it looks
130:56 - like, let's see is this how it is on shed cn, okay, let's see, let's see, it looks like
131:06 - that's how it is on shed cn, okay, as you can see these are just dots, meaning that
131:11 - we can, we are free to do whatever we want to do, okay, since we already got components
131:19 - here, okay, for instance check here guys, okay, we already got some components where
131:26 - is the ratio aspect ratio, I am missing one component here, okay, there was an aspect
131:33 - ratio which was here that had an image, maybe I wonder why it has disappeared, okay, maybe
131:41 - it's because it doesn't have the width and height, it might happen, okay, let me just
131:48 - go to this, okay, and then the width is like this and okay, okay, okay, I wonder why this
131:59 - has disappeared, I am not sure guys, okay, let me just give it a height of, I'm just
132:05 - testing, okay, a height of 100 pixels, let's see, okay, now I think it's visible, okay,
132:18 - a lot of things is going on wrong here, okay, maybe it's because the height of this overall
132:26 - container it's, what can I say, fit to screen or screen, okay, let's try this guys, let's
132:35 - make the overall height of this, okay, here's the overall height of this, let's make it
132:40 - auto, okay, let's make it auto, let's make it auto, do we have some padding here, we've
132:49 - got a padding of 4, let's make a padding top of let's say 20 and see, okay, I think this
133:01 - is better guys, as you can see, now we see all our components, okay, and I'm happy with
133:06 - this and we can see this as well, what if maybe, let's go back to, now to, my apologies
133:16 - about that, I want the aspect ratio, okay, where is the aspect ratio, my aspect ratio,
133:24 - okay, let's just remove this height for now, let's see, okay, everything works guys, okay,
133:32 - so as you can see guys, we've got this component, so what we're going to do, we're going to
133:36 - take this component and put it in inside here instead of the dots as you can see guys, okay,
133:43 - and then what I want to do, let me also try padding bottom of 20, okay, padding bottom
133:53 - of 20, so that we can see everything from here, okay, as you can see guys, there is
134:01 - a space now, okay, I'm happy with this and then let's take, on the main page, let's put
134:08 - inside here, where is my carousel one and then here, let's import, my apologies about
134:15 - that, let me remove only the dots, here let's import aspect ratio, my aspect ratio, okay,
134:23 - here is it, as a self-closing tag and then I am going to do that for all of these remove
134:39 - the dots, okay, remove the dots, okay, okay, as you can see guys, let's go back and check,
134:49 - okay, looks like we are winning, as you can see guys, okay, looks like we are winning
134:56 - 100%, okay, what I'm hoping for, let's see why do we have this space, okay, why do we
135:05 - have this space, okay, so let's go and check, I was hoping that we are not going to have
135:13 - that big space, okay, let's see, the width is 200, okay, so what I'm going to do, I'm
135:21 - going to set the bg, okay, this is more like we are depacking now, we want to know what
135:28 - might be the problem, as you can see we don't have any grey here, the only grey that we
135:32 - have, you might not even notice it, you might not notice it, it's right there, so that means
135:37 - this component doesn't have a problem, okay, that means the challenge might be in our carousel
135:43 - okay, okay, check here guys, okay, now this is rounded, now let's go to the carousel and
135:50 - then let's check my carousel, where is it, my carousel one, okay, looks like Matthew is
136:00 - getting old and he cannot see his own components, okay, here is it, now let's see why it's too
136:11 - big now, okay, let's see what we have here, do we have a class name here, yes, okay, let's
136:19 - put a bg of grey, let's see, as you can see guys, okay, now this guy is too big, I don't
136:29 - know why it's too big like this, I don't know, okay, so what we can do, let's make it more
136:35 - or less like equal to this one, okay, here guys you can even put your own image, anything
136:41 - here, okay, so what do I want to do now, I want to know the width, okay, of my aspect
136:52 - ratio, okay, let me just use a shortcut p here, okay, let me just type ratio, okay,
136:59 - as you can see guys, this is the shortcut, so this is 200 pixels, okay, cool and then
137:06 - what I want, it's carousel, my carousel one and then I want this carousel one to have
137:14 - a width of 200 pixels, okay, okay, let's go back here guys, let's see, now this is what
137:25 - we wanted, okay, exactly what we wanted, what about the background, we don't want a background
137:31 - color here, okay, let's see, nice, okay, as you can see guys, this is what we want exactly,
137:42 - okay, so we are done with the first carousel, it's doing exactly what we want, I am happy
137:48 - with this, okay, what else, let's go to carousel number two, okay, happy with this, let's go
137:57 - to carousel number two, so we have won the first one, okay, go back here, okay, TSX,
138:18 - all right, my apologies about that, okay, I want to do RFCE, all right, looks like we
138:27 - are winning, go back here, shut CN and then examples, sizes, to set the size of the item
138:40 - you can use the basis utility class on the carousel item, let's check, okay, this is
138:46 - a continuation, now it's telling us to set the size, okay, this is the example, okay,
138:53 - this is the example, so what we are going to do, we want this example, okay, I think
139:02 - if we can go here in this code, we will then import this and okay, okay, let's see, let's
139:11 - first copy the import, first, all right, I am happy with this and then let's go here,
139:26 - the carousel, carousel, okay, come here, paste this here as it is, good, everything works,
139:37 - now let's import the carousel two here, where, on the main page, okay, cool, self-losing
139:54 - tag on my windows, I am going to press control space, then done and then let's come back
140:02 - here and check, as you can see guys, here is the carousel two, okay, carousel two, I
140:11 - am happy with this, so what we are going to do, we are going to put these guys here, okay,
140:19 - let's see, let's see, let's see, okay, let's see, okay, it looks like an array has been
140:39 - created here, who look through, okay, like five items, as you can see, which is about
140:51 - that, it looks like I am feeling sleepy, and then now what I want to do, I want to put
141:01 - my images here first, okay, so that I can use my images instead of the numbers, all
141:10 - right, all right, all right, let's see, oh, okay, I think I can win, thing can win, okay,
141:18 - so what I am going to do instead of having a card here, okay, as you can see, here is
141:24 - the card component, okay, what I can do, okay, let me comment that, I can replace that with
141:35 - my aspect ratio, okay, no, not this one, my aspect ratio, this one, okay, as you can see
141:45 - guys, okay, so let's go back and see, as you can see guys, okay, nice, okay, obviously
141:57 - we are having a problem here because the height is not, the width is not the same, okay, the
142:04 - height I think is 100% perfect, but as you can see the width guys, okay, so how can we
142:10 - change that, let's go back to the code and see, okay, so in the code, we were told that
142:22 - we can change the width by changing this basis, okay, so obviously guys, I am not sure what's
142:30 - going on here and how this works, but let's first go to the documentation, to set the
142:37 - size of the item, you can use basis utility class on the carousel item, cool, where is
142:44 - that, let's check here what they are saying, 33% of the carousel width, okay, meaning that
142:54 - let's first deal with the carousel width first, okay, okay, as you can see this carousel width
143:01 - I think is small, okay, so let's go to the carousel, okay, aligns that, width, okay,
143:12 - width full, max width sm, okay, let's just remove that and let width of full without
143:21 - a limited max, as you can see guys, now this is the width of full, okay, based on this,
143:27 - I think this is too, that is too much, so let's give it a width of, let's say 400 pixel
143:37 - and let's see how it looks like, okay, still small, let's give it a width of 600, okay,
143:48 - I'm happy with this guys, this makes sense to me, but this is not all, as you can see,
143:54 - this is not showing like all of it, okay, it's not showing all of it, let's see, maybe
144:00 - I can say 650, okay, I'm happy with this, everything is visible, okay, as you can see
144:17 - guys, nice, okay, and now let's go back to what they were saying, so
144:23 - what we did, we've just put our item, okay, carousel items, okay, in our case is these
144:32 - aspect ratios and we did nothing when it comes to the size, okay, this first base, as you
144:40 - can see, here it's telling us that this is 30% of the carousel width, as you can see,
144:48 - okay, which is, it's 1 over 3 bases, it's 1 over 3, this one is 1 over 2, 50%, okay,
144:58 - let's just make some changes here and see what will happen, let's make this 1 over 3
145:05 - and see, okay, okay, is there a difference, not really, okay, empty, empty, okay, let's
145:26 - make 1 over 2, this was 1 over 2, let's try 1 over 1, okay, I just want to understand
145:32 - what is the impact of this, okay, okay, let's check the responsiveness or maybe what applies
145:41 - here, it's, since we are already on large, let me just remove this one, okay, so that
145:48 - I can only have one thing that I'm dealing with, because now this might not apply, okay,
145:53 - because I'm not inside it, maybe the one that will apply is the large one, so I want only
145:58 - this to apply, as you can see guys, okay, now that we have removed that one, now this
146:02 - is active, now we can be able to test what's going on there, let's put 2, let's see, as
146:09 - you can see, so meaning that in here we can only put 2 of these, okay, as you can see,
146:15 - but in our case, I think 3 will work, 100%, okay, I'm happy with this, so that means it's
146:23 - like that fraction, some sort of represent how many items we can fit on each viewable
146:32 - area, okay, like here, okay, I hope you can see that one guys, okay, I'm happy with that,
146:39 - if you are enjoying this content and you like this content, please don't forget to subscribe
146:45 - and support the channel, so let's go back and see what else do we have here, on the
146:52 - carousel, okay, this is just a different arrangement and this is like spacing, what else this looks
147:00 - like the same as the one that we did, okay, do we have another one, let's check here,
147:08 - the one that scroll vertically, okay, the one that scrolls vertically, so we are done
147:17 - with this one, so I can remove these guys, okay, okay, let's see what we can do, let's
147:26 - create another carousel, 3, RFCE, save, let's go back here, okay, orientation, use the orientation
147:47 - prop to set the orientation of the carousel, so let's see, where do I set the orientation
147:56 - in the carousel itself, oh wait, let's see options, oh we've got the orientation here,
148:03 - okay, so without necessarily creating a new one, let's just use this orientation and see
148:09 - what will be the effect of that on this one, let's check, my carousel 2 and then carousel
148:20 - content no somewhere here, okay, we want this to be vertical, let's see guys, as you can
148:29 - see guys now it has changed, okay, it has changed but obviously now I don't see, okay,
148:40 - in terms of vertically it looks like every image has been shown, that's why we don't
148:46 - have the arrows, okay, so let's see, let's click to here on the basis, let's see what
148:57 - will happen, not really, maybe it's because let's look, this has got a width, a defined
149:06 - width as you can see but it doesn't have a defined height, okay, so let's leave this
149:11 - to 3 and let's have a defined height, okay, a defined height which is let's say for now
149:20 - it's 300 pixel, okay, let's see, okay, let's see, we do have an arrow here but obviously
149:38 - it doesn't do what we want guys as you can see, okay, so let me just try 200 and see,
149:46 - okay, let's try 200 and see, as you can see it looks like it doesn't change, let's play
149:54 - around with this, I'm not sure if this makes sense as well, I'm not sure, I'm just testing
150:03 - guys, okay, okay, it looks like there's nothing happening, I don't have a problem with that,
150:09 - so what we are going to do, let's just copy from this one and see what these guys did,
150:16 - okay, oops align start, okay, let's see, width full and this is the max width, XL, okay,
150:29 - the height is 200, okay, okay and then this is the same thing, we are looping through,
150:40 - alright let's see the preview, yes, okay, they are looping through, go back here, they
150:47 - are looping through here and what else, I think there's nothing much here guys, okay,
150:52 - there's nothing much, so what we can do, let's not convert this one, let's just create a
150:56 - new one as we have planned, okay, let's go back here to orientation, okay, let's just
151:04 - click on to, on to, on to, to make sure that all the changes that we did, okay, it goes
151:10 - back to normal as you can see, so let's copy this, let's copy this code, we want this one,
151:21 - let's copy this code, okay, the import first, the import where is my carousel 3, here is
151:34 - it, then let's input here, okay and then from there we want this, okay, cut content, import
151:54 - content, cut itself, okay, okay, let's import the cut, okay, I'm happy with that, so let's
152:07 - bring my carousel 3 here, let me just copy this and change the number, obviously we have
152:18 - to import it, alright, let's go and check, still loading, let's see, as you can see here
152:30 - is it guys, okay, it works perfect but we want to study it and see what makes it work
152:39 - that way, okay, okay, it is about align start, orientation is vertically, okay, the width
152:52 - is full, the max width is XS, okay, content matching top, it's negative one and the height
153:03 - of 200, so the height first it's some sort of limited is 200, okay, let's see, okay,
153:13 - what else, okay, the basis on mid it's 1 over 2, okay, and then that's it, okay, this looks
153:26 - like the same as the top one, okay, looks the same as the top one, let's see guys, let's
153:34 - try this, okay, if it doesn't work that's not much of a problem, so carousel item, we
153:44 - are going to copy this on the carousel item and change the orientation, so let's go here
153:51 - to carousel 2, where is the carousel item, okay, let's just copy this and see, okay,
154:04 - carousel item, okay, then let's change this carousel item, orientation, okay, orientation,
154:23 - vertical, let's see why our buttons are disappearing, everything works but the button are disappearing,
154:34 - okay, the height, let's see, where is the height, where is the height, where is the
154:40 - height, let's go back to 3, okay, the height, which is this one, let's just copy this and
154:49 - paste it here, the content, okay, change the height, oops, class name, let's see guys,
155:06 - something has changed but I'm not sure if for beta or for Wes, okay, this is this one
155:16 - and this one, now this has changed, okay, okay cool and then what can we do, let's make
155:26 - this height, let's say 400, okay, as you can see, now I have lost the buttons, okay, it's
155:39 - the buttons now that I've lost, I don't know where are the buttons, okay, I cannot tell
155:47 - you where are the buttons, looks like everything is working well, okay, which button are these,
155:55 - okay, I think these are the buttons, okay, this one is for this one, this one is for
156:01 - this, what about this one, I think this one is for this, okay, what is the width, okay,
156:11 - let me do this guys, let me remove this, for now this one, I think I do get the essence
156:18 - of what's going on here, let's go back here on carousel 2, on carousel 2, let's check
156:28 - the width of this, as you can see guys, the width of this is 650, okay, let's put a background
156:33 - here, as you can see, okay, now we have one, okay, we've got our buttons, the width, let's
156:48 - make it auto, so now we have managed to change a horizontal carousel to a vertical carousel,
156:59 - okay, let's put auto here and see first, 100%, here is it guys, as you can see, works exactly
157:11 - like the other one, like this one, I can even remove this background, works exactly like
157:20 - where is that one, okay, like this one, okay, as you can see guys, exactly like this one,
157:35 - okay, we are on the check box, okay, this is one of those shorter ones, okay, I didn't
157:45 - think of any way in which we can make this interesting, okay, unfortunately, I think
157:51 - this one is just going to be a copy and paste, guys, apologies for that, this is it, okay,
157:57 - maybe I'm having some experiment in my mind, something that can be tricky, okay, I just
158:04 - have to reserve it at the end to see if it's going to be worth it, there is some sort of
158:09 - a tricky part about, this is a check box, it's not a radio box, okay, no, no, no, check
158:17 - box are easy because you can check multiple boxes at once, okay, I thought this was a
158:24 - radio button, let's see, yeah, this is the check box, okay, cool, this is going to be
158:29 - a straightforward video guys, let's quickly do that, copy this NPM and then let me just
158:36 - type clear here to clear everything and then let's paste this just box here and then what
158:43 - we are going to do, we are going to go to our library, okay, I'm going to type here
158:49 - my check box, okay,.tsx and then that is it, rfce, okay, and then we are going to copy
159:02 - this code here, okay, and then from there, this is the usage, okay, I'm done copying
159:13 - this and then this is the usage, I think that is it, okay, that is it and then what I'm
159:21 - going to do, I am going to input this on a page, my check box here, okay, as a self-closing
159:36 - tag and let's go back here and see the check box, where is it, this is supposed to reload,
159:45 - if it doesn't, let's reload manually, okay, let's see, let's see, let's see, it's supposed
159:53 - to be here, maybe, let's see, let's see guys, okay, I think it's behind this, okay, so what
160:04 - I'm going to do, let me go through here and let's make the gap very, very big, okay, let's
160:15 - make the gap of 12, okay, so that this could be at a distance, okay, as you can see guys,
160:21 - now we can see the check box, okay, now the check box is visible but still let's make
160:27 - a gap of 18, okay, as you can see, okay, maybe there is no gap of 18, let's try 20, okay,
160:40 - as you can see, now there is a big gap between the components, I'm happy with that, okay,
160:46 - let's see, here is a check box, okay, now what I want to do, let's just go back here,
160:53 - okay, first of all let's see, what if I want to get the value, okay, what if I want to
160:59 - get this value, how do I do that, okay, as much as I thought this is just going to be
161:03 - a work in the park, it looks like now we are getting into the real stuff, okay, that's
161:08 - interesting, let's see what they say, okay, this is how you use it, cool, let's check
161:13 - the manual, there is no code, okay, let's just example with text, let's check, okay,
161:22 - where are the states, values and whatever, how do I know this has been picked and all
161:28 - that, okay, so they are importing it here with text and then they've got all the mockup
161:35 - there, okay, and this is a label, okay, HTML for time 1 times 1, okay, where is the check
161:47 - box then, okay, maybe this is the terms and condition, let's see why the check box itself,
161:54 - okay, here is it, check box ID term 1, okay, let's look at the preview, okay, here are
162:05 - the terms, you click here, okay, I don't think here they are using it, okay, I don't think
162:12 - they are using it, let's say I agree with the terms and maybe I press submit, how do
162:18 - I get, how do I know if this has been checked, okay, I think now this tutorial is starting
162:23 - to become interesting because I also don't know how, okay, let's check here, do they
162:29 - have a certain state or something, okay, how do you check is checked of that, okay, maybe
162:36 - in this submit, cool, now we are talking, now they are going to tell us, as you can
162:43 - see this is false, cool, this is what I was looking for, let's see how they have done
162:48 - that, I'm not even looking for the forms and zord and everything, I don't think that's
162:56 - interesting to me, so let's go to the check box, as you can see we've got checked and
163:04 - on check change, cool, okay, that's fine, now let's go back to our own, okay, for instance
163:14 - let's just reset it, as you can see it's not checked, let's make sure when we start the
163:20 - default it's checked, okay, so what we are going to do, we are going to go to this check
163:28 - box, okay, this check box and then in this check box we are going to check here, checked
163:38 - and then we are going to put this to true, okay, let's go back and see, as you can see
163:45 - by default it's true, okay, and then we have a function here on maybe it's on change, okay,
163:55 - maybe it's on change, now what I want to do, I want to have my own state variable here
164:01 - to keep track of the state of the check box const, okay, set check, okay, and check let's
164:15 - say, okay, this is check and set check is equal to use state, okay, use state, okay,
164:32 - now I see the problem, suppose here there is a comma, okay, check and set check is equal
164:41 - to use state, okay, okay, fine and then let's see, let's set here, let's create a function
165:00 - that we're going to trigger on the event, it's on check to change, my apologies guys
165:16 - about this, okay, cool, let's just check this as it is now to see, okay, so it has not been
165:27 - listening to the event as you can see guys we just got it, okay, it works perfect, okay,
165:33 - it works perfect, so if we want to, what can I say, okay, let's say we want to alert something
165:42 - as we wanted, alert, okay, my apologies about that guys, okay, I really apologize, I didn't
165:51 - just check, okay, as you can see guys, okay, 100%, so I just missed the event, okay, so
166:02 - obviously I said this is going to be one of the easy one and it happened that as easy
166:10 - as it seemed it looks like it was not easy, okay, just because of this event, okay, my
166:16 - apologies about that, as you can see guys everything worked, it's not on change, it's
166:20 - on checked change, then this is being triggered, okay, now we are here on collapsible, okay,
166:32 - let's just quickly check here, collapsible, here it is, okay, first things first, I find
166:42 - this control a bit confusing, okay, maybe it's not confusing but I am, I can't locate
166:52 - some sort of a use case for it, what is it used for, okay, so please guys if you have
166:56 - an idea of where it can fit and how it can be used please let me know, okay, it looks
167:05 - like, what can we say, it looks like an accordion, okay, when you click here something pops underneath
167:16 - it and at the same time it looks like it behaves like a drop-down list, okay, but then I'm
167:28 - not sure if I can put some buttons here for selecting, okay, as much as I'm going to use
167:36 - it and implement it but if you have a perfect scenario for it, okay, maybe you tell me or
167:47 - we try to discuss on how different is it from an accordion, okay, if you can take one accordion,
167:55 - let's see where is an accordion, okay, if we take one accordion without only this one
168:03 - and then it shows three things underneath it, okay, how is this button different, so
168:12 - how this component, so let's get into it and see how to implement it but I haven't figured
168:20 - it out when can you use it and why, okay, I really don't know, okay, so let's continue
168:28 - guys let's keep it going and keep it flowing like water, okay, let's just get in here,
168:33 - let's clear everything and then let's install the component, okay, let's install the component
168:42 - and then after that, let's check what else do you want to do, we have to import this,
168:50 - okay, import this call up server, let's go to our shad cnui library, okay, my call up
169:00 - server, okay, refce and then let's import those as you can see guys who are importing
169:12 - these and then from there we are going to copy this as it is, okay, the call up server
169:20 - and then we are going to put those here, okay, as you can see, let's now import my call up
169:30 - server to our main page as a self-closing tag and then let's press control space and
169:40 - then let's import it, my call up server is not defined, okay, now everything works, let's
169:48 - go back here and check, okay, okay, can I use this in my project, let's click, yes, free
170:03 - to use, okay and then how we can click on it and collapse it, guys I don't wanna lie
170:11 - I'm a bit confused with this component, okay, if I had a chance to meet the shad cnui team,
170:22 - I don't know, I don't know where can I use this component, okay, as you can see now my
170:27 - problem is you see an accordion, it's stable, okay, stay in one place, okay, stay in one
170:36 - place at least and this one, it's a bit different, okay, it moves on different places, okay, maybe
170:45 - it just depends on your skill as a developer and your creativity I think but guys this
170:51 - is all that I have for this component, okay, I really don't understand like the essence
170:58 - of it, okay, I don't think it's solving a unique specific problem, I might be wrong guys
171:05 - please you can shoot a comment below and help me out here, so it has got a trigger and then
171:11 - when you trigger this then it shows this, okay, okay, I think that's will be it for
171:19 - this video, my apologies if this is the shortest video of all of this video of all of the videos
171:26 - in playlist but I really, really, maybe I need to make a research and maybe I can come
171:32 - back and if I found a perfect use case for this then that will be it guys, otherwise
171:38 - for me, Madam Singhati, that's about it, thank you for watching, see you next time, bye.

Cleaned transcript:

Shadcn is a unique collection of reusable React components designed for modern web development. In this course, you'll learn how to integrate beautifully designed, accessible, and customizable UI elements into your Next.js projects. Matthew will teach you the process of copying and pasting these components directly into your code base, allowing for full customization and ownership. Hey guys, what's up and welcome. It's Matthew here, the hybrid, the designer and a developer, the best of both world and the greatest. This is a series on Shadcn. Without wasting time, let's just jump straight into it. Ah, we are going to use Next.js. So, we can just come here and click on Next.js. Obviously, you can create a Next.js app here. I've already done that. And then let's install Shadcn UI. So, we are going to copy this command. We are going to use NPM. Okay, and then let's go back here. As you can see guys, this is my Next.js application. The only files that I hear, it's this app, okay. You are not going to have this app and you are not going to have this dashboard because this project is just a tutorial from my, I have used it on my previous tutorial, okay. So, let me just delete this. And then try to create a new one. My apologies about that. Terminal, new terminal, okay. So, you are going to have a template like this without this app and dashboard. So, as you can see guys, we are inside this folder, Next dashboard, okay, this app. So, let's paste this NPM, Shadcn UI. So, as a beginner, let me just take you through what's going to happen. ShadCn will create a folder here, which is components in small letters. This is where Shadcn will put all of its components, okay. It is advisable to always install Shadcn like at the beginning of your development process. Don't install Shadcn later when you are halfway through. The reason is you might have your own components folder here, which is a small letter and Shadcn will come, maybe Shadcn might override all the files that you have there. For instance, if you have the same naming convention as Shadcn in that folder, let's say in the folder components, you've got a button and you are installing a ShadCn button. Shadcn will go to your component folder, it will override the button that is there. And it will delete it and it will install its own. So, it's very important to install like Shadcn like from this that, okay. So, if I can be honest with you, I didn't press Enter here. So, maybe that happens by mistake, but that's not much of a problem, okay. Let's just quickly answer these. Which style do you want to use? Here, I'm just going to click Default, Use Slate, Enter. Would you like to use CSS variable? Enter. And that is it, okay. As you can see guys, ShadCn has created this components folder. And I think also the slip folder with utils more about this later. So, we are done installing ShadCn. So, we are done with the installation and we are going to get into the first component, which is the accordion. The best way to go about ShadCn is just to follow exactly what they are telling you here. And then from then we are going to make some minor tweaks in the UI should we feel like there is something that we don't like. As I've just noticed that there are some things that I don't like about ShadCn UI. These things are not bad, but it's a personal preference. So, what is an accordion? An accordion, it's a component like this. It's more like a list that has got a dropdown list. I can say, okay, as you can see, this shows more about this item. And this shows more about this item. As you can see guys, it has got some nice animation. So, we are going to create our own following this step by step. This is how the code looks like, okay? So, let's see what they are advising us to do. I already installed a ShadCn. So, the first stage or the first step is to install specifically the accordion. How do you do that? You just copy this. I'm using NPM. I've already have a Next.js application running and it has got some sort of a blank page. So, let's get back to it. As you can see, this is the Next.js application, okay? And I've already installed ShadCn and ShadCn has installed these components folder. So, as you can see, this folder is empty because we don't have any component. So, what we are going to do, we are going to open another terminal, okay? I'm going to split the screen. So, this is another terminal. I'm going to paste the command and click Enter. So, suppose this accordion component will appear here inside here, okay? While it's busy installing, let's just go back here and see what is the next step from ShadCn. Okay, we're done with this installation. Update the tailwind, config. I don't think this is necessary unless we are facing some issues, we will come back and implement this. Okay, let's check on the usage. So, how do you use it? Okay, so you first import all of these, okay? And then from there, you paste this and then you are done, okay? So, what we are going to do, we are going to create our own components, okay? Meaning that we're not going to paste these in one file, okay? This is what I mean. Okay, as you can see here, we've got UI, okay? And we've got the accordion, cool. We're not going to destabilize that. We're just going to go to our app and then create a folder. Let's name this folder ShadCn, okay? Just ShadCn and then we are going to create our own components, okay? So, what we are going to do here on ShadCn, we are going to create our own accordion. So, the naming, I'm just going to type my accordion, okay? So that we can separate our own accordion from the ShadCn accordion. So, the first thing that we do, we import all of these. In fact, let's just go back here and type rfce, okay? As you can see, this is just a React functional component. If you might want to know how I did that, you can just search for this extension and install it, okay? So, let's go up here and import all of these. Go back to ShadCn and let's copy this and paste it right here. We can even remove this, okay? And paste this right here, okay? And then click Save. So, what we are going to do here, we are going to come here. Okay, first let's run this and see how it looks. So, on that blank page, we can go and import my accordion. Where is my blank page? Here, so we can just come here and import my accordion. Okay, as a selfclosing check, save, and then go back and see how it looks. Okay, as you can see, guys, this is our accordion. My apologies about that. Obviously, for now, it fills the entire area and this is not what we want, okay? Let's try to look at ShadCn, how this one is. Okay, as you can see, this one, it's a little bit smaller, okay? So, let's try to create something like this, okay? So, we're going to go back here, not in this page. We're going to go back to our accordion component. We're going to minimize this for now. And what we will do, let's create a container here. Okay, so that this can be inside a container. Okay, as you can see, this is inside a container and we're going to style this container. Class name, let's create a width of, let's say a width of 200 pixel. And let's see, let's go back to, as you can see guys, now we have controlled this, okay? I'm happy with this, okay? Let's just change the title, okay? Let's just type here coded design, okay? And let's also change the description here. Let's type, thank you for subscribing, okay? I mean this in a true sense of the way. Thank you for subscribing, okay? So, now let's go back and check first. Let me save, go back and check. As you can see guys, thank you for subscribing. I'm happy with this. And then what if maybe we want to add, let's say one more, okay? Let's see, so the accordion has got, it's like a compound components, okay? Meaning that we've got the parent and we've got the children and we've got some other children, nice design, okay? So, what we want to do, let's look at the children, okay? At the components, okay? At the inner components, let's say. We've got an accordion item, okay? This is an accordion item. So, this is how shed CN has been designed, okay? It has got some meaningful components. So, as you can see here, okay? We can just copy this whole item, okay? And paste it here because it's an item. We don't want something that is inside a trigger or something. We want the whole item, okay? So, you can give some values to your item. As you can see here, it's item one. Let's just say this is item two, okay? So, I've got another UI channel where I teach Figma, which is coded UI, okay? Like this, if you might want to learn Figma, then you can visit that channel. So, let's just type here, learn Figma from Matthew, okay? And then let's click save. Let's go back here. As you can see guys, okay? This is what we have exactly what we want to do. What we want to do, we are done with the accordion. Now we want to check the alert, okay? So, this is the alert. To be honest, when I first click here, I was like, what is this? And I was hoping that maybe when I'm clicking, it's going to alert something or show something or something will pop. I think I have mistaken this with the alert dialog, this one, okay? So, this one doesn't do that, okay? So, as you can see, it's just a plain box outlined with a message, okay? It looks like here, you can also have some variation, okay? Or more or less like a variant, you can have like a red one, okay? So, since this is a very simple component, I have decided to some sort of give you more knowledge about how can it be used. And I'm also going to throw a little bit of Next.js because if you can implement this as it is, we will just install copy and paste code and then that is it, okay? So, let's get into it, okay? Let's first copy this and add the alert, okay? As you can see here, we've got our Next.js application. So, we are going to add the alert, okay? We are going to add the alert, then it's supposed to be added here, okay? As you can see, guys, here it is, okay? And then what we are going to do, we are going to create our own alert. Somewhere is our folder, our folder sheds in. As you can see, the first one is my accordion. So, let's create my alert as a file. Okay, my alert.tsx. As usual, we are going to use RFCE. Just to create a normal React functional component, we are going to go back to shed cn and input everything that we are supposed to import so that we can use this alert, as you can see, guys. And then what we are going to do, we are going to copy this code as it is. Maybe we can just copy this one, the one with a variant destructive, as you can see. Let's just copy this one, okay? Let's see, okay. Maybe we can even copy the one that we have been given and change the, what can I say? And change the variant, for instance, here. Let's see, do we have a variant? Maybe we'll add a variant here and it's going to be destructive, okay? So, my apologies about that. Let's go back here. This is alert. Let's copy this as they are telling us to do. Okay, terminal is not defined. Let's see what mistake have I done, okay? Alert, alert, alert. And then our terminal, let's see. Do we have to install anything before we create this? Let's see. Okay, terminal, okay. What is this component? Let's go back here. So, the first approach to solve this problem is to press control and press space to see, okay? As you can see, this is an icon, okay? So, let's just click here so that we can import it. As you can see, guys, now everything works well. We can click save here. So, what we are going to do, we want to display this on our main page, okay? So, let's go and display this, my alert, okay? And then it's a selfclosing tag. Let's click save and go back and let's check here, okay? Suppose it shows up here, okay? As you can see, it's refreshing. And then here is the alert, okay? As you can see, guys, obviously the alert is too big, okay? Like it's spreading across the screen. What we can do, okay, what we can do, we can surround the alert with something like this, okay? As you can see, guys, maybe we can make our lives easier and don't surround these in all of these div, okay, in all of these components. What we can do, we can surround these like all of them, okay? I hope you do get what we are doing here. We are trying to control all of these, okay? So, meaning that if we click save, as you can see, now we have controlled the alert, okay? Including the, including the accordion, okay? I'm happy with this. So, what we need to do now, let's go, let's say we want to change the icon, okay? Let's go to Lucida React. Okay, Lucida icon. Let's search for warning. My apologies about that. Let's search for warning. And then we're going to copy this. And then we're going to change it here, okay? We're going to change this. Let's say, okay, as you can see. So, let's just copy this and replace this terminal and delete this, okay? And then let's import it. So, what I'm going to do, I'm going to press control and space. Then I import this. So, the other thing that I'm going to do, I'm just going to, okay guys, I'm back. My apologies about that. There was a sudden disturbance, so I had to quickly pause the video. So, I hope I am going to continue from where I have left. So, let's just click save so that I can see where we are in terms of the project, okay? We have managed to change the icon. And I was about to make this content more, okay? That's what I was about to do before the disturbance, okay? So, as you can see guys, that's about it. So, let's just come here on the alert and let's type a variant. Let's see, suppose here I get an IntelliSense, okay? Something like this so that it can show us the different types of options. I think this is because of TypeScript, okay? So, as you can see guys, this is a variant and a let, okay? So, as I've told you that this is more like a simple copy and paste kind of a code. So, as a bonus, I'm just going to teach you something on Next.js on maybe how this can be used in most platform or in most applications like I think even TikTok, YouTube, and I haven't seen it on WhatsApp, okay? So, when you open the application, let's just make an example with what? Okay, let's just go here, okay? When you open the application, okay? The company itself wants to send some messages to you, okay? So, usually when you open your dashboard, there will be a message here, okay? More like an alert like this one, guys, okay? More like something like this. Maybe it's telling you that your account is not up to date or maybe they are telling you that we have changed our terms and condition. So, that is their own way of communicating directly to you depending on certain circumstances. So, this is what I'm going to show you as an extra bonus. So, what we are going to do based on the parameters, on the URL parameters. Let's say we were, what can we say? We were a banking company. So, it's important that your account money, the money that you have, it needs not to be zero, okay? So, if it's zero, that means you don't have money on your account, we need to show some sort of an alert to tell you that please top up your account, okay? Your account balance is too low. But we are going to use search parameters or ES query parameters here, okay? The parameters from this URL. So, this is just an added Next.js bonus, okay? So, this is how it works. Let's say we are going to have a parameter which is a balance, okay? Something like this, balance equal to zero. If balance is equal to zero, when you visit this website with balance equal to zero, it needs to show you this warning. But if your balance, it's more than that or there is no query parameter at all, then it's not going to show this. I hope you do get what I'm trying to say and I also hope it's helping you to learn how to use things, okay? So, what we are going to do now, let's go here, where we are. Let's come here on this page, must we do that? Yes, let's just do that on the main page, okay? First of all, with Next.js, let's make this a client component, not a serverside component. So, how are you going to do that? You just type here, use client and click save. And then here, let's make sure that we stick to our React best practices, our components. Must start with capital letters and I'm happy with that. And then with Next.js, we are going to use, we are going to use a hook which is, I think it's use search parameters, okay? So, let's try that, let's say const param, params is equal to use search parameters, okay? Or search params, okay? This is a hook, okay? And then from then, I'm not a big fan of memorizing code, okay? I make use of TypeScript and also the program itself to help me and understand what's going on in a particular function or hook. So, what I'm going to do here, I'm just going to type this params as it is, this one, okay? I'm just going to type dot to see what do I get there, what are the options, okay? So, let's check here get, okay? And then let's get balance because the query is going to be balanced. And then from there, let's just alert this, okay? Let's just alert this balance, okay? Let's just alert this balance, okay? So, let's go back here, okay? As you can see, guys, we don't have balance. So, this is alerting null, okay? As you can see, it's alerting null. Now, let's just click onto here. Now, we've got balance of five. So, let's see. As you can see, guys, this is giving us the balance, okay? As you can see. So, we are winning. We are managing to get this query parameter, okay? So, what we are going to do based on this query parameter, we need to make some decision, okay? So, let's just type here const balance equal to, let's copy this as it is, okay? Let's remove this alert. And then let's put that five inside here, okay? And then let's come here to the alert, okay? We are going to render the alert conditionally. So, we need to open a block of code and then move this alert to here, okay? And then what we are going to do, let's ask, is this balance true? We are going to use a tenor operator. So, we are asking, is it true? If it's true, meaning that it's not null, okay? Yeah, let's say if it's not null, then let's alert this. If it's null, let's click this. If it's null, let's just alert an empty string, as you can see guys, okay? So, what this code is going to do? It's going to check, do we have the balance? As you can see for now, we have it. So, we are displaying this alert. But if we don't have it here, okay, this disappears, okay? So, obviously, even though I didn't check if your balance is zero or it's not zero, I hope you do get what we are trying to do here. In case you really, really want to check if the balance is zero, you can just come here and change your condition. For instance, if balance, it's, let's say balance is equal to zero, okay? May I apologize about that? If balance, cannot balance, okay, sorry, okay. This is a, we need to do this. Why this comparison, because the type of string and, okay, cool, okay? Obviously, for now, that is a string, okay? So, we are asking, is this balance zero, which is equal to zero as a string, okay? So, let's just quickly check here, guys, before we close this, okay? As you can see, guys, it's not zero, okay? But once you've got a balance of zero, then we can show the message here. Then, let's just customize our message so that it can make sense. So, let's just go to alert and, okay? This is a bank balance, okay? Let's just type bank balance, okay? And then our message will be bank balance, okay? And what can I say? Cannot be zero, okay? Cannot be zero. And that's about it, and then let's check here, okay? If your bank balance is zero, it's going to tell us bank balance cannot be zero. If you've got money in your own account, then that is not much of a problem. So, let's just click this, okay? As you can see, now, bank balance is not zero, so we don't show this message. Now, we are on the alert dialog, okay? Let's just check what an alert dialog is, okay? As you can see, guys, this is an alert dialog. Very simple, right? You just click and something pop up. Obviously, this is a simple tutorial. We can just follow this copy and paste, and then we are done, and it will show up. But I don't think that will give you more value on shared CN itself and also how to use it. So, here at coded design, we are going to take it a step further. So, how are we going to do that? What we are going to do, we are going to design this component in such a way that it becomes reusable and some sort of, so that we can, it can contribute on creating a clean and scalable code. For instance, instead of this becoming a modal dialog that you can use like this, or an alert that you can use like this, what we are going to do, we are going to make this name dynamic, this content dynamic, these buttons for now, we are going to leave them as they are. So, what does that mean? This means that whenever you want to use this, okay, you can just use the same code, but just change these props and change this content, okay? So, without wasting time, let's just jump straight into it. What's the next step from here? We just need to follow exactly what shared CN is telling us, okay? We just copy this on MPM, and then we go to our terminal, and then we paste this. I don't know why it's like this, but let's plus enter and see. And then this is supposed to appear on our list of shared CN UI components, okay? Shared CN UI components somewhere here, okay? It's going to be an alert dialog box. And then in the meantime, let's just copy whatever that we have to copy. So, as you can see, guys, the next step is to copy this. So, we have to create our own, what can I say, our own alert dialog, okay? So, this is our folder for our own components. So, we just type my, okay, my alert dialog, okay? As you can see, guys,.tsx, and then we are going to use the snippet, RFCE, okay? And then we are going to import everything that shared CN is asking us to import. As you can see, guys, we can just click Save. And then what we are going to do, we are going to go back and we are going to copy this code as it is. As you can see, this is a bit of a heavy code, okay? And then what we want to do, we want to copy this, and let's just paste it maybe here as it is, okay? Okay, as you can see, guys, cool pins, everything work. So, if we were just like beginners, we're going to take this as it is, change here, and create whatever that we want. What if maybe we want to create another component similar to this one? We were going to create a new component, copy and paste all of this code, then change this. This is what we are going to change and do it differently. But before that, let's just import this, these components in our main page and see how it looks like, okay? As you can see, don't mind about this. I'm just rendering these conditionally, okay? So, let's just go here, import this as a selfclosing tag, and then we need to, I'm going to press Control on Windows and Space, and then I can import this and then click Save. Let's go back and check what's there, guys, okay? As you can see here, it's open. When we click here, this pops up, okay? As you can see, what we can do from here now, we can go back to my alert dialog, and then we can type here, coded design. Okay, and then when you click here, okay, let's say, are you, okay, are you sure? You want to subscribe, okay? Obviously, I'm hoping that your answer to this question is 100% or absolutely, okay? So, are you sure you want to subscribe, okay? Let's just go back and see how it looks like. Now, coded design is an alert, and then are you sure you want to subscribe, okay? Click Okay, and it disappears, okay? So, if we want, we can just type here. I have already subscribed, okay? Okay, hoping that you already subscribed, okay? So, let's check here, as you can see, guys. So, if we want, we might stick to this. Whenever we want to create a new one, we can always copy this code, but this is not how we want to do things. We need to make this some sort of a reusable component. So, what we can do, we can receive some props here. Remember, we're using TypeScript, so we can just say this is a title. We can just make small letters for simplicity. Okay, we're going to receive a title and a content, okay? Now, we need to type these, okay? So, in terms of the title, it's going to be a string, it's guaranteed. But in terms of the content, guys, let's not make it a string, because as much as here, it looks like this is a string. We are going to have, sorry, here. Okay, as much as it looks like this content, okay, it's going to always be a string, okay? It might be something else, okay? You might want to put a form here or a button, okay? I'm going to show you that later, okay? So, what we are going to do, instead of putting a string here, okay? We are going to put this alert, okay? So, I'm going to show you that flexibility. So, let's make this content, let's make this content a React.react node, okay? So that it can accommodate a lot of things, okay? As you can see. Now, if we want, we can pass a string here. If we want also, we can pass another React component. So, let's just quickly test this, guys. Let's take this title and change this coded design and open some block of code. And then we put the title here. And then let's copy the content. It's the content here. And then obviously TypeScript is telling us that we didn't pass the props here. Now, the props here in terms of title, okay? It's going to be coded UI, okay? If you might be asking yourself, what is coded UI? Coded UI, it's my other design channel where I teach people how to use Figma. I will suggest that you try the channel because Figma is a very important skill, more especially if you are a beginner. You are going to work in a company that wants to save money. So, maybe they don't have funds for paying a designer and a developer. If you come and say, Matthew has taught me both of the skill, I am able to work on Figma and become a developer as well. Maybe you might be preferable and you might lend a job. So, in terms of the content, for now, let's type Matthew. And then let's go back and see. Now, as you can see, guys, this is dynamic. This is Matthew and I have already subscribed. Is this what I wrote there? Let's just double check, guys. I think I'm missing something. On my alert, alert, is this alert? A lot of things are going wrong here. Let's first fix that, okay? My alert dialog, okay? Cool. Not my alert, my alert dialog, okay? Let's change this first, okay? Number two, let's see, I've got a title and I have put a title on trigger. This is a problem, okay? Let's just go back here. Okay, the trigger must be coded design, okay? I think the title is supposed to be here. My mistake, guys, okay? The title is supposed to be here and the content is supposed to be here on, I have already subscribed, okay? Okay, cool. Now, let's see. I received this, I received this. Let's check here what's going on. What is this guy complaining about? My alert dialog is not defined, obviously. Let's import it, okay? Let's see, check here. As you can see here, we are not importing the alert dialog box. Let's check here, guys. Okay, let's import it again. It's not defined, okay, cool. Obviously, that's my mistake. Let's go back to my alert dialog box. My apologies about this, guys, okay? As you can see, this is still not what we are looking for. Now, it's my alert, okay? Let's export it as my alert, okay? And then, let's go back here and check. Press Ctrl and press space. Now, we've got my alert dialog box. Let's go back and check. Let's click here. As you can see, now, we've got coded UI and we've got Matthew. This is interesting, okay? So, meaning that now, let's say now, we want another component, okay? That will do the same thing, but for coded design, okay? As you can see, now, the code is starting to be reusable, okay? So, just like that, now, we've got another trigger, which has got coded with the wrong spelling, coded design and reusable, okay? As you can see, guys, so that means we are reusing the code, okay? Now, as you can see, this is coded design, this is coded UI, but the trigger is the same, okay? Meaning that we also need to put a trigger, okay? We need to supply a trigger, okay? So, let's see what we can do. Where is our main page? That means here, we need to supply a trigger as well. Cool. Let's just go back here and type trigger. Okay, let's just copy this content, copy and paste, because trigger is going to be the same type as that one, okay? Let's just change this to trigger. Okay, as you can see, now, we can take this trigger and substitute it with this one. Okay, that means here, we must put a trigger, okay? Now, let's say the trigger will be, the first one, it's coded UI, and the second one, it's coded design. Or we can say where is that design, the wrong spelling. Right, as you can see, guys, we've got coded UI, and we've got coded design, okay? Coded design, as you can see. Now, now that we've got this flexibility check here, guys, so, we cannot only pass strings here, these strings, we can also pass another components. These are flexible, this is. So, let's make an experiment on that. On the other one, let's pass the accordion, on coded, coded what? On coded UI, let's pass a trigger. No, no, the content, okay? The content of coded UI must be an accordion, okay? No, no, no, this is title, my apologies. Okay, the content of coded UI must be an accordion, and the content of coded design must be an alert, okay? Must be an alert, let's come back here. Let's click save, and let's go back and see. Okay, as you can see, guys, we just have an accordion. So, I think this is the best way in which you can think about shared CN, and also making like the most out of shared CN. We are done with an alert dialog box. Now, we are getting into the aspect ratio. Let me be honest, guys, I don't have more information about practicality of applying this, okay? But I am just thinking, if you are creating a video application, let's say, since the aspect ratio is more like popular in videos, 16 by nine in 1920, and all those things, you might use it, let's say there is a certain video that you need to display, but it must have a certain aspect ratio, maybe even in pictures, okay? But since this is going to be a very simple tutorial, meaning that we're just going to copy and paste what shared CN is telling us, I am going to fix something in Next.js, an error that we are going to, okay? So, instead of collecting everything, fixing the error without even showing you how do you go about it, I'm just going to fix the error when I get there, hoping that I want as an added bonus or added value to this simple tutorial. If I can just keep it like this, it's just going to be simple, only copy and paste. So, without losing time, let's just get into it. My apologies about that. So, I'm just going to copy this, okay? As an NPM, I've got already a React, sorry, Next.js application going on, not running, so I'm just going to press Enter to install this component. And then from then, as you can see, this is our project. Okay, we've got an accordion, we've got an alert, and we've got an alert dialog box. It's highly reusable. If you have not watched it, please check the playlist to watch it now, we are creating the aspect ratio, okay? I hope it's done, installing the aspect ratio. So, let's just go to shared CN and check how to implement it. As you can see, guys, we're importing image from Next. This will give us some issues, and I will show you how to fix them, okay? So, let's copy this. And then what we're going to do in our library of component, we are adding another one, which is my aspect, okay? My aspect ratio dot TSX. Okay, and then we are going to type the reactor snippet, RFCE, and then we are going to import the aspect ratio. And then, what we are going to do, we are going to use it. Let's just click here, let's just copy all of this, and just paste it here. Okay, just like that, we've got the aspect ratio working, okay, and then what we want to do, we want to go and look for an image on Google, okay? I meant Trevor Noah, but I can even take this guy's picture. It's not a transmission, I don't really, it doesn't really have to be Trevor Noah, okay? Let's just copy this image, copy the URL, image address, this is what I want to copy. So I'm going to paste this here, okay? As you can see guys, okay? So I'm just thinking, the other possibility that we might use an aspect ratio, I'm not sure, but let's just quickly check on trouble guys, okay? The reason why I'm doing this, I like to be pragmatic, okay? To test the validity of ideas by their practical use, okay? I don't like to learn something that I don't really know how to use it. So that's why I'm doing these guys, okay? So let's say we are having images that needs to be like this. Let's look at when we ask on the responsiveness, okay? Let's see what happens on these in terms of responsiveness, okay? Maybe we might want these to keep a certain aspect ratio, this image, I'm not sure, okay? I'm thinking that that image ratio component can also help us on responsive design, okay? But please guys, do your own research so that you can be more knowledgeable, okay? Okay, let's continue guys. We've got an aspect ratio. Let's just make sure that we have saved everything, okay? And also we need to take this aspect ratio, let me just remove this, this aspect ratio to our main page, okay? So that it can be displayed there, okay? So let's put it here as a selfclosing tag and I'm going to click here and I'm going to press control space so that we can import it, okay? Let's see if we are not going to have an error from Next.js. Of course, we have an error from Next.js. It doesn't give us a link to go to, okay? Usually it does that as a Renoir chart, okay? Let's see, that's missing the required. Oh, okay, my apologies about that, guys. It looks like I'm ahead of myself. My apologies about that, okay? This is not the error that I'm talking about. This is an error but not the one that I'm talking about, okay? This is asking us for a width, okay? So let's just go to our image. My apologies about that, okay? Okay, let's go here. Okay, let's go here. So Next.js wants a width here. Let's make it a 450. My apologies about that. Let's just make it 450. Width, this is not tailwind, so this has to be the width. Okay, as you can see, guys, let's make it this 450, okay? So this was the first error that we had, okay? Let's see. Now, what is it saying, it's missing the height, okay, cool. I'm not sure if we put the width and height here. Isn't that nullifying the existence of this aspect ratio? But for now, let's just do what Next.js wants. We will see on the physical appearance of the image if there is something that we are missing, okay? Okay, the height will be 450, let's make it 200, okay? Let's see. Okay, invariant, src, probe, blah, blah, blah, blah. Okay, this is the error that I was talking about, guys, okay? The one where we need the host name, okay? Cool, so you can just copy this and paste on Google, I think Next.js will be one of the options as a solution, okay? Let's see. I think suppose there's a Next.js link here, but if you don't have it, don't mind, guys. I think Next.js, they also give us, there is the link, okay? They give us a link to the solution. So you will just go here, let's see. Possible ways to fix this, okay? On your Next.js config.js, maybe it might also.tx, this is what we have to do, okay? On the export module, we need to put these images, remote patterns, and then we need to put this as it is instead here, we just need to put our domain, okay? So before we do that, let's go to the Next.js config file. Okay, where is it, guys? You can also help me, I don't see it, here is it. Next.js.config, okay? It's a minified version, we don't have the other one, cool. Okay, let's see. And then here we've got our Next.config and we've got these curly braces. So let's see, does this code looks like this one? Okay, here we've got a module.export, and there we don't have, okay? Let's check, as you can see. Okay, here we don't have. So what we are going to do, let's just apply our own mind, okay? Let's just, what can we do, what can we do, what can we do? First, let's just copy this as it is, okay? Let's just copy this as it is, Next.config. Okay, let's try this, let's see if it's not going to complain, okay, it's not complaining, I'm happy with that. Okay, I was about to put it inside this config, okay? But let's leave it like that, it looks like it's going to work. And then what we want to do, we want to know where are we getting the image, okay? Aspect ratio, what's the domain of that image, okay? I think that error can highlight to us the domain specifically, okay? Let's see. Invalid SRC probe, blah, blah, blah, blah, blah. Okay, next image, host name. Okay, here is the host name, okay? That it doesn't recognize, so we can just copy this as it is to make our life easier, okay? And then we need to tell Next.js that on the config, okay? We are having this domain or this host name, okay? I don't think we need the path name, okay? I don't think we need the port, okay? We don't need those ones. So we're telling Next.js that we are going to fetch the images from this domain. If you might want to prefetch them and cache them and crop and what can I say, compress them so that they can be lightweight for better user experience, you can go on and do that. So after we are done with this, let's just check here and see is Next.js still complaining, okay? And remember guys, you must fall in love with errors, okay? When you see errors, don't be afraid, don't, what can I say, don't be discouraged, okay? It looks like our server is not running. I don't know why. Let me just type clear here and then npm run dev, okay? Maybe the server has stopped after noticing that we have changed the config file, okay? Let's see. Okay, let's see if, looks like we are having an error here guys, okay? The server didn't just stop. Remember, I was like, I think we can put this inside this config instead, okay? I think that's an error. That's the reason why we are having this. Let's check again guys, okay? npm run dev, let's be observant this time. As you can see, there's an error, okay? So let's do this. So here, this is our own, what can I say? A feed link, okay? I like to fiddle a lot. Bop, bop, bop, token, expected, dah, dah, dah, dah, module, export, dot, okay? So let's just do this guys, okay? Let's just do this. Let's just do this. This is the config, okay? So if you might ask me, Matthew, do you know what you are doing? To be honest, I'm not sure. I don't know what I'm doing. So Matthew, why are you doing this? I like to test things, guys, okay? I like to test things, okay? And see how they go, okay? So obviously, if we are not winning here, we are just going to go to Next.js documentation and look in details and copy and paste code exactly as it is, okay? Okay, so let's wait for it to finish and see. As you can see guys, it's reloading, okay? And that's about it, guys. There's nothing much to this tutorial. It's not that heavy, okay? It's just a, it's just a, what can I say? An aspect ratio and that's it. So let's go back here to C, okay? As you can see guys, it looks like everything is working. Our own fit link has worked. But remember, I said, if we are able to give this a width and height, okay? Isn't that nullifying aspect ratio, for instance? Okay, an aspect ratio in some sort of a certain width and height, let me just show you guys, okay? Okay, aspect ratio. Okay, so I'm going to search for images, images. So, an aspect ratio is more like a certain width. If the aspect ratio is 16 by nine, it's supposed to almost look like this, okay? As you can see guys, okay? So now, here, okay, let's see, where do I want to be? Where do I want to be, so here we've got an aspect ratio. Let's see, let's see. We've got an aspect ratio of 16 by nine, as mentioned here, but it looks like this shape, as you can see guys, at least if it was looking like this, I was going to be convinced that the aspect ratio has worked, okay? So what might have happened here, okay? Because of we have put the width and height here, okay? I think it has nullified this, okay? So meaning that I'm trying to say these properties, they are mutually exclusive, okay? They cannot exist both of them at the same time. If you put your own width and height, you are trying to say you don't need the aspect ratio. If you put the aspect ratio, suppose you don't need the width and height. So let's also dive deep into our own feed link way, okay? Why am I showing you the feed link approach to things? Number one, I'm showing you I'm not a guru, I'm just exactly like you. Number two, trust your own mind, okay? At least don't just jump to Google, just don't get go, okay? So I'm going to delete this, okay? And then save it, let's see, is it giving us any errors or what? Looks like there's some sort of an error here, but let's go back here and see. It's telling us that this is missing the width and height, okay? So is shed cn, what can I say? I don't want to say is it fooling us, okay? But what's going on here? Why this is not working, okay? Let's go back and see. Do we have all everything that this one's out, rounded, object, cover, okay? So there was a property of an image that doesn't really need the width and height, okay? I forgot about it guys, I'm going to be honest with you, but I will find it, I will find a way to find it, okay? I think it was fill, okay? But now I don't know what I must, I put inside fill. I hope this will give me some possibilities, okay? Oh, okay. It's possible that you cannot assign a property here and it works, okay? So what fill does when you want your image to be controlled by the parent container, okay? You are saying that this image needs not to define its width and height, okay? Exactly as it did here. It must depend on its container for the width and height. So let's see if guys can see, can't this help us to solve the problem? 100%, we have just solved what? Shed Cn's errors or, I'm not sure if this is a bug or what, I'm not sure, okay? But for us, it didn't work and we have to do something else in order for it to work, which is we have to put this fill here, okay? So as you can see guys, you must always apply your own mind first and what can I say? Be a fan of fit link, okay? Fit link helps a lot, okay? So as you can see guys now, this is the aspect ratio as we want. So let's go to the internet. Let's try to balance this knowledge with a Shed Cn, okay? So let's see if we can have a three by two aspect ratio. Are we going to get a shape like this? Or let's say if we have one by one, are we going to get a square? Let's test that, okay? Here we are just using our own knowledge to see if is this working. Let's go back here. As you can see guys, okay? It's working, okay? It's working. So this aspect ratio is working. Then who controls the width, okay? I think now this width is starting to make sense. Let's make this width 200, okay? Let's save and see. As you can see guys, now this width is 200, okay? And now we are doing the avatar. An avatar is just a circle with an image, which is usually it's a user profile. And that's about it. So let's quickly install the avatar using NPM. I already got a Next.js application here. So I'm just going to install this. And then as it's installing, it will show up on Shed Cn component UI here. Okay, after showing up here, we are going to create, as you can see here is it. We are going to create our own avatar here on this folder, okay? Components, I apologize about that. Where is my Shed Cn? Okay, this one, okay? These are my own Shed Cn components, okay? So let's just type here my avatar, okay, dot TSX. All right, and then press Enter. Okay, and then let's go back to the avatar and see. Okay, so after that, we just need to import these, okay? So here we're going to press RFCE, okay? React functional component. And inside here, we can, my apologies about that. This is totally wrong, okay? We need to first input everything here and go back and copy this code here. And then from there, paste it here. As you can see, guys, this is our avatar. And then we need to take this component and display it on our main page. As you can see, this is the aspect ratio. So we are going to display this. And then on Windows, I'm just going to press Control on my keyboard and press Space so that I can import the avatar. And then from there, let's go to our main page and see. As you can see, guys, okay, this is the avatar. Okay, this is the avatar. And what we can do, we can go to the aspect ratio and just use the same image. The reason why we are going to use this image is simply because the URL for that image, okay, has already been added or to, let's say, to sheds, sorry, to Next.js. My apologies, guys, okay. This URL has already been added to Next.js. So Next.js is not going to ask us a lot of things instead of taking an image from a different website. So instead of this, let's put our own image. Okay, as you can see, this is our own image, okay. I want you to observe what's going on here. Let's say MT, okay, this is more like a fallback. Maybe in case this image is still loading or maybe it's null, I think then it will use this. And that's about it, guys. Let's go back here and test. As you can see, guys, okay, let's put Enter. As you can see, it shows MT and then it shows this, okay. Let's say, as an added bonus, you might want this to be a little bit bigger. The first thing that we need to do, let's check this avatar. Does it have a prop of size, okay? Does it have a prop of size? It looks like there is no prop of size. So let's see, do we have any class name that we can put here? It looks like we have. So let's just check the width to be 20 and the height to be 20. Let's see what will happen. And then I'm just trying to show you how you can change the width and height. Okay, as you can see, guys, you can also change the width and height. Guys, I'm not going to make this tutorial longer, unnecessarily, that's about it. We are done with the avatar. It was a very nice shot and sweet one. I think also the badge is gonna be a very quick, nice and straight to the point, okay? So let me just give you a context first because some components, you might see them, but you don't really have an idea as to where can you use it? Okay, my apologies about that. So let me just open a new tab here and type shed cn. Recently, I'm creating a real life application for a client and I am making use of 10 stack table, obviously from sheds, not necessarily from shed cn, this is wrong. 10 stack table is from 10 stack query, but shed cn has got their own version of it, okay? It uses 10 stack table behind the scene, but obviously you know shed cn has got some beautiful components and a beautiful architecture. So as I'm using the table, okay, I realize that I need a badge. My apologies about this. Let's go to example. I'm looking for a 10 stack table here. Where can I get it? Not here. Task, I think it's here, okay? So as I'm creating this table, I'm realizing that in terms of let's say statuses, okay? I need to have some badges here to quickly indicate maybe if this is inactive, okay? So a badge is nothing much like just like, let's say a rounded button, okay? That you don't really have to click, but it just shows you in terms of colors, the status, okay? So I needed a quick way of showing different statuses and I have used a shed cn badge to do that. So I was just giving you an idea of when can you use a badge because it looks so simple and you might miss the essence of it, okay? So maybe it might be something like this with a different color and it's useful guys, okay? My apologies about that. So there are use case scenarios. So let's get back to the topic at hand. As you can see here is an example of a badge. Let's see what other examples do they have. As you can see, this is a different one. This is an outline one and this is a destructive one, okay? So let's just jump straight into it. So what we are going to do, we are going to install it first, copy this and go to shed cn, okay? Let's see, what do I want to do? Okay, here the code is running and here the code is not running. So let me install. Just paste that guys, nothing much there, okay? And then the badge is going to install. So first the page is going to appear under shed cn UI's components, okay? Somewhere here first. Okay, as you can see here it is. So we are not going to use it from there. What we usually do, we are creating our own UI library as shed cn always advises, okay? My apologies about that. So what we are going to do, we are going to go here. Let's just check something. My apologies about that. I'm done copying the badge, okay? Okay, let's first create our own component, okay? Let's first create our own component. Let's see. Okay, let's say this is my, okay, this is my badge.tsx. Okay, and that's about it. And then what I want to copy here, I want to copy this, okay? I don't know what's going on with my throat guys. My apologies about that. RFCE, okay? Just to create a component and I need to import the badge. Okay, as you can see, so how to use it? Simple kinds, just like this, okay? Copy, and then from there, let me remove everything here and paste, okay? And that's it. And then what else do I want to do? I want to use my badge, okay? I want to use my badge on this page, okay? So as you can see, okay? I can use my badge here on my windows. I'm just going to press control and press space so that I can import my badge. And then from then I will save, come back here. Let's see. As you can see guys, here is my badge, okay? So let's see what can we do with the badge? Let's go back where? Let's go back to the actual badge. My polish about that. Okay, variant outline. Let's see what other option. Okay, equal. And then there is a destructive. Let's see how destructive looks like. As you can see guys, okay? And nice badge there, which is a destructive one. I think that's all, okay? Let's say this is, let's say inactive. Let's say this is an inactive component or a row or a, what can I say, a user, an inactive user, okay? So as you can see guys, so as an added bonus, I think what we can do here, let's just make this component a reusable, okay? My polish about that. So how can we make this component reusable? We just need to pass props, okay? Let me save here and save here. So I'll go back to my badge. So what we need to do here, we need to pass props, okay? My polish is about that, okay? So we need to pass props. Let's say we've got title, okay? And what else? Then we're going to pass title and this is going to be the title, okay? Can we have a class here? Yes, we can have a class name here, okay? So what we can do as well, we can have a class name here, okay? For customizing the badge. What about this variant, okay? Why don't I take this variant? What about this variant? Okay, let's see what we can do, okay? Let's also accept a variant, okay? Let's also accept a variant and let's just copy these as they are, okay? Because we want to, what can I say? To type those, okay? Using TypeScript, the title is going to be a string, okay? The title is going to be a string. We're done with it. The class name is going to be a string, the class name is going to be a string. And the variant, okay, one can make it a string, but that won't be the best way to go about it. So what we need to do, we need to tell TypeScript that a variant, it's a combination of these. So let's copy these as they are from here. In fact, let's not go even to null and undefined. I don't think we have to go there. Let's just copy these, okay? I will explain now what these are, okay? Let's paste these like this, okay? So this means, okay, variant. This means the variant can be default, it can be secondary, it can be destructive, it can be outlined, okay? It cannot be something else. You cannot come here and type variant blue code or red or whatever, okay? That's what this means, okay? We're copying it exactly from here. Okay, let's just fix this spelling mistake. Okay, as you can see, we're done, guys. So let's just quickly substitute here, okay? Code your title here, and then the class name will go here, all right? The class name will go here, and then the variant will go here. That means we just have to remove this. The variant will go here, and that's all, okay? And then when we go to our page, as you can see, it's starting to complain because now it needs those props, okay? Let's say the title is going to be, let's say, coded design, okay? That's a title, and also it needs, TypeScript needs more props. What else? Let's just check here. What are the missing props? We've got the title. We've got, we want the variant. Let's use a destructive one or outline variant, okay? Okay, let me just remove this and act as if I'm typing from scratch so that I can get these, okay? I want an outline one. And what else? Class name. As you can see, guys, what if maybe I don't want to put a class name? So this is reinforcing that I have to put it at this point in time, same way as the variant, okay? It's like some sort of reinforcing, okay? Let's arrange TypeScript in such a way that it's not forcing us to do that, okay? So let's go back to the page, and then here, this must be there. We want the title. You can't have a page without a title. And then in terms of the class name, it might be there, it might not be there. So we can put a question mark here so that it can be optional. And then also on the variant, it might be there, it might not be there, okay? So as you can see now, we don't have a lot of errors, okay? So if we want, we might have a class name. We might not have it. That's not much of a problem. So let me move this down a little bit. Let me save. Let's go check, guys, what's going on here. As you can see, we've got a button, a page with some sort of an outline page. Let's say we want to change that to destructive, okay? Destructive, let's see. As you can see, guys, now we've got a destructive page. Hey, what's up and welcome. Smith here, the hybrid, the designer and developer, the greatest from South Africa. Let's continue with our shared Cn master class. We are done with the page. And now I was just going to say we are going to the button, okay? But it looks like there is something before the button and this is a breadcrumb. It will be my first time to use this component, okay? Maybe that's why my mind automatically skipped it, okay? And it's new, okay? Cool, no problem. Let's see, okay? It displays the path of the current resource using a hierarchy of links, okay? As you can see, guys, okay? It looks like it displays the path of a current resource using a hierarchy of links, okay? Okay, let's see. This is how you use it, okay? Customs operator. Let's see. Okay, now I see, now I see, now I see. You know, it's more like routing, okay? As you can see, it's more like something like this, okay? If you want to know in terms of the folder structure or the hierarchy, okay? Let's say we are having, what can I say? We are having a file, a PDF and the name of that PDF is shared Cn course, okay? The shared Cn course is some sort of a child of many folders. The parent folder, let's say it's courses and then inside that folder, there is shared Cn course and then inside that folder, there is shared Cn and the file which is shared Cn course.pdf is inside there. So I think this component can be used to some sort of indicate that, okay? Let's just make sure if we are correct. Let's try to check the code and relate what is going on here to Cn, okay? We've got home, components and breadcrumbs. Let's check where is the code for this. Let's check the code, okay? Let's check the code, okay? So as you can see, we've got href here, home as you can see. So meaning that this is going to be like home, something like this without this, this is going to be home and then when you go to components, okay? When you go to components, going to be forward slash here components and also the breadcrumbs, where is the href for breadcrumbs, or maybe it doesn't have because in components we've got a breadcrumb as a component, I'm not sure, okay? It's also my first time to use this but at least now I understand what and why, what is it and how can you use it, okay? Okay, so it makes sense that it is displaying the path of the current resource using a hierarchy of links as you can see guys. So let's quickly go and implement this. So you're just going to copy this from here and then where is my terminal, okay? I don't think I have pasted what I want to paste, let's see, okay? NPM I'm happy with this and then let's paste this here and install it, okay? And then let's check, this is what we have to copy. So as usual, we are going to go to our shared cn component. Let's create my breadcrumb.tsx, okay? Let's use this shortcut rfce, react functional component and let's import everything that we have to import as you can see guys, okay? And then let's just copy and paste what, copy and paste what? Let's copy and paste this, okay? Okay, and then let's paste it here, okay? As you can see guys, so now what we want to do, we want this component, my breadcrumb. Let's go to the main page and add it here on the main page. Let's see as a selfclosing tag, okay? Then on Windows, I'm going to press Ctrl and space so that I can import it and save everything. Let's go back here and check, do we have a breadcrumb here? I think here is it, okay? I think here is it. As you can see, it's routing to a, what can I say? To a path that doesn't exist on our project, that's not much of a problem. But now I want to know where is this coming from? Let's go and check my breadcrumb, okay? This is home component and oh this is my breadcrumb, oh now I see, okay? So because of the width of this, okay, this has been pushed under, now I understand what's going on. So let's just increase the width of this which is 200, let's make it, let's say 350, okay? So that it can be a little bit bigger as you can see guys. So this is the breadcrumbs, okay? What could be a practical implementation? I think that's what it is, okay? You will just have some paths here. So if you want to go here, it will go to components. If you want to go here, it will go to another folder, okay? I think that is it guys. There is nothing much I am thinking of in terms of application, okay? But it just shows the hierarchy that this is under home and this is under components and this is under breadcrumbs. For now guys, let's just keep it simple, keep it flowing and keep it going like water. Let's not complicate things unnecessarily. Yes, I think that is all. Maybe as a bonus, okay, maybe as a bonus we can create a dynamic breadcrumb, okay? I am just trying to find something useful and meaningful that I can teach you instead of copying and pasting sheets and things, okay? We can create a dynamic breadcrumb here. Let me show you guys how, okay? So the breadcrumb needs, this is not where I want to be. The breadcrumb needs my breadcrumb. The breadcrumb needs an href, okay, where like the path, okay? It needs the path and what else? It also needs the title, okay? There is a title and the path, the title and the path. So what we can do, we can create a folder here inside the app. Let's call this folder constants, is constant the right name for this folder? Let's just call this folder defaults, okay? Let's just call this folder defaults and then inside this default, we are going to have breadcrumblist.ts, okay,.ts and then inside here we are going to have an object constant, breadcrumblist, breadcrumblist equal to and then what we are going to do, we are going to have an array of objects. Is this okay? No, this is not an array of object, this is an array and inside this array we are going to have object. The first object is going to be title, what's the title of the breadcrumb, okay? Title is home and what's the link? The link of the breadcrumb is forward slash, okay? And then let's create another object, okay? The title might be about, let's say and this doesn't really make a perfect sense in terms of, I don't think this is the best way of explaining it. So let's just say we've got folders, let's make this course, okay, courses, okay? Inside the courses we've got another course which is shared cn, okay? For UI courses which is user interface courses or front end, okay? Front end courses, okay? And then inside front end courses we've got shared cn, okay? I want this to be more meaningful, okay? Then we've got shared cn as a front end course and then inside there we might have the actual file, let's say, which is shared cn book, okay, let's say shared cn book which is, that will be it for now, this is the actual file, okay, let's say. And then we've got courses here, okay, the path will be courses, okay? And then the front end courses will be inside courses and then front end, okay? Let's say front end and then, okay, and then the shared cn folder will be inside courses then which will be shared cn, okay, and then from there we will have the actual file, okay? The actual file, let's say shared cn.pdf, okay, the actual book. So I hope you get what's going on here guys, basically we are having a file which is like inside these folders, okay? So we want to create a breadcrumbs that will help us to click, okay, navigate to let's say different places like on courses or courses front end or courses front end shared cn or click the actual pdf. So the difference is now we are going to take this from this list, okay? This is just an added value or a bonus. So let's export this so that we can use it. As you can see guys, we've exported this breadcrumb. So we can go to the breadcrumb, this one, yes, and then what we will do, okay, what we will do, we will check the breadcrumb items where they start and where they end, okay? Start here, end here, there is a separator, okay? And then it starts here, it ends here, okay? So I'm thinking what we can delete, okay? This is the breadcrumb, this is the breadcrumb list, I'm happy with this. So I think we can delete from here up to the separator, okay? Let's just save and see what's there. As you can see here is the separator, this arrow, I'm happy with that. So what we want to do now, we want to, let's just open a block of code here. We want this, okay? Where are we going to get it? We are going to just right click, import it from default breadcrumb, I'm happy with this and then we want to map on it, okay? That means you look through it and then from there we want to receive let's say a crumb, or let's say item, okay? Let's say item and then let's destructor also index. Index and then let's create this, okay, like an arrow function. And then for now let's return a ptech, okay? We just want to see what will be the errors, okay? Obviously, let's see what's the problem, okay? This one, let's see, let's see, let's see, let's see, let's see, where am I closing this one? Let me close it here, okay? Obviously everything works well, it's telling us that this one is missing the key. So for now let's just put index as a key, okay? As you can see guys everything work well, we can look through this, let's just quickly see what happens. You can see guys we've got test, test, test, test, this is not what we want actually, okay? So what we want, we want to repeat these three, okay? The breadcrumbs item and the separator, okay? So we want to repeat this. So onto breadcrumb item and the separator, okay, why it's giving me, okay? And then that's what we want to repeat. So for now, okay, let's see, pressing JSX expression must be okay, cool, it must have a parent element. So what we're going to do here, we're going to just create a fragment, okay? This is a JSX fragment, it's just like a container that doesn't do much, okay? So let's see how these are going to be repeated. As you can see guys, it's repeating the same thing, okay, nice, okay, same thing. So what we want to do now, we want to add the actual values, okay? In terms of the title, let's put it here, okay, item.title, let's go back and check the titles guys, okay? As you can see, courses, front end course, set cn, and we've got the actual book, okay? And then let's swipe, and then what we want to do, what we want to do, we want to change this URL, the href, and then we want to put item.link, okay? I'm happy with this, everything works fine, save and go back here. So now let's say we want to go to courses, courses is just forward slash, oh okay, it's forward slash courses, may I call this about that. So if we had this path, we're going to be taken to this path. Let's say we want front end courses, front end courses is found inside courses, and then there is front end, okay? And then set cn, okay, set cn in say front end course is found under courses, and then if we want this file as a PDF, we were going to get it as a PDF. Now we are here creating a button. This is also going to be one of those lowest hanging fruit, very easy to do, there is nothing much in it. So let's get into it. So if you want to have a button in your project, you must first install it. Let's go back here, I've already got a set cn project running. So I'm just going to paste this, okay, and install a button, as we always do, I am going to the button is still installing. Okay, I am going to go to our folder, okay, where is it, the set cn folder. And here I'm just going to create a file mybutton.tsx, okay, as you can see, as we usually do rfce just to create a react functional component, and then we are going to import the button. Okay, we're going to import the button and we will use the button, okay. And we will use the button and this is the name of the button. So let's just click Save and take my button to the actual main page, okay. Take this my post about this, let's just type here button. And we just need to be very, okay, we don't need button, we need my button, okay, my button, this one, okay, as you can see from our own set cn. And then from then we can go and check how the button looks like here. As you can see guys, this is an outline button. Okay, let's look at what are the options in the button, my button. Let's see, remove this because I want to see more options. Okay, so we can have a descriptive button if we want, which is with a red background as you can see guys, okay, so this is just a button. Okay, now let's create, let's make this button reusable, okay, so that it can be easier for us to just reuse the button instead of creating a lot of buttons. So what we're going to do, we're just going to open this and type title here because we want to get the title from props, okay. And then from there we can have title and we can, what can I say, type title, okay. Title we are going to receive it as a string, my apologies about that. We are going to receive title as a string, this is title, let's copy this title to here. Okay, as you can see guys, this receive title is a string. So now there's an error here, simply because we didn't pass title, okay. We didn't pass title, sorry, okay, let's just type here save and then enter. As you can see guys, now we've got save. So this button is more like a reusable button. If we want cancel, okay, if you want cancel, we can type here cancel, you can type here cancel, okay, let's see, as you can see guys, this is cancel, okay. Now we are here on the calendar, okay, obviously, as you can see here with shared cn what we are doing, it's more like a routine, okay, we are installing a component and we copy and paste code and that's about it if I can be honest, okay, as much as I am trying to give you some use cases, some extra code, but basically that's what we are doing. So let's try to add value and see what can we do more on top of what shared cn is giving us. Okay, so what I'm going to do in this tutorial, number one, I'm going to show you the obvious, how do we make use of the calendar, a calendar component, it's going to be my first time using it, okay. I haven't used all of these components guys, okay, some of them, I'm using them just simply because I'm making a tutorial and I'm doing everything, okay. So what I'm going to do here, let's just check first of all how a calendar looks like, I think there's, okay, you just pick a date here and then obviously, I'm assuming there is a certain way in which you can use the date, okay. Is that going to be all, I'm just thinking guys as an added bonus, okay. What I will do, okay, I will always find a way or I must find a way to display, okay. How many days are between the selected date and today? Okay, guys, my apologies about that, there was a major D7, so I had to quickly pause the video. So I was saying we will find a way to always display the number of days, okay, between today and the selected date, okay. Let me be honest with you, I don't know how am I going to do that and I think this talks to the essence of this channel, I started this channel to learn new things, okay. The only thing that I know at the moment, there is a package called moment.js which is very good with manipulating dates, okay. So it's like we are going to learn together, okay. I'm trying by all means to make these shared CN videos useful and applicable, okay, showing you that this works, okay. As you can see, this is something I can do, you can do, you can copy and paste this code. So without wasting time, let's just jump straight into it, okay. So first of all, we are going to install the calendar, okay. Let's go here, okay. As you can see, this is the running terminal and this one, okay, it looks like I was trying to install a component that already exists. Let me just click no here, let me just clear here, okay. So let's install the calendar. Let's see if the calendar doesn't have some dependencies, okay. Some other components that it depends on, okay. Okay, so I think the calendar is dependent on a date picker, okay. Let's see, let's see a code first, let's see, okay, I'm importing here, they are importing a calendar component, okay. It looks like it doesn't use a date picker, okay. Let's see on the preview, okay, I think it doesn't use, okay. Let's read, the calendar component is built on top of a React date picker, okay, yeah, it looks like. So I think we might as well install the date picker then, okay. Let's quickly do that, nope, guys, I'm making a mistake, I'm making a mistake, I'm making a mistake, okay. So this is the underlying React package, okay. Sometimes these components are built on top of other sheds and component, I thought that was the case, okay. Let's just continue guys and go with the flow, okay. We have managed to install this. So now let's continue here, okay. Remember I said it's also my first time to use a calendar, okay. So let's continue, where do I want to be, okay. Let me minimize this, okay. I want to be on a shed cn, as you can see, these are our shed cn components. So let's type here my Carlin, okay,.tsx, okay. Let's type rfce as a React functional component, rfce, y, it's not working rfce. Okay, finally it worked. So let's paste here, importing the calendar because we already installed it, okay, and then how to use it, okay. We have a state here, let's copy the state, okay, and put it here. This is the state and then we are going to copy this calendar component and this as a selfclosing tag and okay, okay, okay, let's see, let's see, let's see, oh, this is my calendar, when did I put this, okay, let's see, is this the same, yes, it looks like let me undo, undo, click, undo, okay, I don't remember myself pasting this, okay, okay, let's see guys, a magic happened guys, okay, my apologies about that, I don't know because I didn't put this, okay, the reason why I'm doing this, I don't like things magically appearing in my code, as much as it's sometimes they might seem like it's a good thing, let's say, okay, it doesn't hurt or it doesn't disturb me but I like to be intentional, okay, remember code is not a magic, you don't have to be excited when things are automatically happening without knowing why, so that's why I had to reverse this and I have to copy and paste these myself, okay, I'm just minimizing unnecessary bugs, okay, so let me copy and paste, this is the same thing as you can see but at first I didn't know how it appeared, okay, that was a big problem to me, so let's just click save and then let's take my calendar to the normal page, okay, let's create a selfclosing tag and then on windows I'm just going to press ctrl and space and I'm going to import my calendar, okay, so if we were just following our shared cn, this was going to be it, okay, okay, as you can see guys here is the calendar, okay, it looks like it's not built on top of any other shared cn component like button and other things, okay, so that's cool, let's see, what day is it today, okay, let's see, today it's Monday, okay, it's Monday, this is my, where is the 27th, let's see, yes, the 27th is Monday, okay, cool, so here is the 27th, it's Monday, okay, so as you can see guys if we were, what can I say, if we were just copying this shared cn component by now we were supposed to be done but let's make this meaningful, okay, or at least applicable, okay, first of all let's get the selected date, okay, so how are you going to do that, let's check on my calendar, we've got a state here, so selected is equal to a date, okay, on select, okay, this will set the date, okay, so that means the current date we have it here, okay, so how are we going to do this, let's do it like this, let's do it like this, let's do it like this, let's alert, will that be the best way, no, I don't think so, okay, let's do this guys, let's have a react div here, let's just have a div, put this one here and then let's have a p tag, let's have a p tag and then in this p tag first let's check what type of a data type is this, this is a date, okay, so let's just put this date, and now let's go back to our usual way of doing things which is feed link, okay, I'm not the best, I'm not a guru in react guys, believe me, even in JavaScript, okay, so I feed a lot, so now I'm going to apply one of those, this is a date, I'm just going to type dot here to see what are the methods that are available, as you can see guys, this is get day, okay, let me try it and see is it a method that I have to call it like this, as you can see guys, looks like I have to call it like that, so I'm just taking chances, I'm that type of a guy, okay, I'm not a guru, I don't memorize code but I use whatever that I know to pass by, so let's check if we can get the date here, okay, as you can see here we are having one which is the day, okay, let's click here, this is day four, now we need to understand what is going on, okay, I think this is the day of the week, let's click here and see, if this is a day of the week, today it's, I think it's Monday, yes Monday is day one, okay, this is working guys, this is day two, day three, day four, day five, okay, cool, we are winning guys, okay, that means we are able to, what can I say, to get, to make use of the date, okay, okay, then let's see what else can we get here, let's say plus, put a space there, okay, just put a space and then plus, let's say date dot get date dot get, okay, let's say dot get date, I hope it's a string, is it a method, okay, let's try this, okay, let's see, okay, so the date is the 31st, the date is the 23rd, the date is the 9th, okay, we are getting there guys, okay, so as you can see it looks like we can get whatever that we want from this date, okay, what else do we want to get, let's try the last one, okay, let's try the last one to see, okay, what else can we get from here, okay, dot get date dot get day, dot get hours, I'm not really, I'm not interested in those, not set, I don't want that, okay, can we get the month, let's see, okay, this is set, let's go back to get, get day, get hour, get month, it looks like we can get the month guys, okay, okay, let's see, let's see, let's see, okay, this is the 4th month, okay, January 4th month, April, it is the 4th month, May or April, okay, it's something that I don't understand here, but anyway, you can make some experiment guys, maybe you even understand this more than me, okay, so remember what I said, I said there is a package that I know which is moment dot JS, okay, dot JS, moment dot JS, let's see, let's see, do they have an npm package, npm package, install moment dash dash save, okay, this is yarn, okay, so what I'm going to do, I'm going to make use of that, we're going to use that calendar like in conjunction with moment dot JS and see what can we create, remember we said we are going to get the date difference in terms of days, okay, so let's see, okay, there is this method, let's say moment dot subtract 10 days dot calendar, okay, okay, let's see, let's see, let's see, let's see, let's see, moment, okay, so let's first install the package and see how it works, okay, even me guys, if I again can be honest, I don't have like more information about this package, okay, I know it exists, it makes handling dates a little bit easier, also let's check here before, let's check here moment on npm and see can't we get meaningful example, okay, as you know by now I'm not a big fan of memorizing code and I don't claim to be a guru, a guy who knows everything, okay, so let's learn together guys, it looks like there are no examples here, it only takes you to a documentation, okay, and this is the same documentation, okay, cool no problem, if then it takes us to the same documentation, let's just click this documentation, so let's install it moment dot JS, okay, so what we are going to do, we are done installing moment dot JS, let's see, okay, I think we are supposed to import this moment and then we can use it, okay, suppose moment dot JS is there detailed documentation docs, okay, project status, you probably don't need moment dot JS anymore, okay, I'm looking for the documentation, okay, it looks like we don't have using moment dot JS npm install cool, this is note dot JS, nope, I'm looking for react maybe, not typescript, all right, maybe it's me, maybe it's me, let's first take chances as you know here at correct design, we take chances, okay, so let me do this, let me minimize this, okay, so here let me type const, let's say const M for time is equal to, let's say moment, okay, moment isn't there, let's see, if I press ctrl and press here, there is nothing with the moment here, that means the feed link doesn't work, let's try this guys, okay, if nothing works, don't mind much, we will have a solution, we will ask charge p t, okay, let's see, okay, it's a moment, let's say from moment, okay, moment doesn't have an exported member moment, if it's not an exported member, let's try this, okay, maybe it has got a hook, use memo, okay, as you can see guys, our find a find a way doesn't really work the way we want, okay, cool, let's write charge p t, okay, please show me how to use moment.js in react, type script to subtract dates, okay, okay, I think this is, that's about it, okay, let's see, install moment.js and it types and it's type script type, okay, as you can see and also it's typed, cool, okay, let's see, import moment from moment, didn't I try this, okay, now it doesn't complain but before, yeah, now it complains, I remember, let's see, oh, now it works, okay, I don't know, maybe we didn't do it the best way, okay, find, now there is no need for us to do a find a find a finder if charge p t is telling us exactly what to do, let's see, okay, define two dates, date one moment, this is date one, date two moment and then const different dates, date one dot diff, okay, in terms of days, okay, this is what we want exactly guys, okay, I'm happy with this, let's see, first is it working the way we might want, okay, let's display date difference here, okay, what we can do, we can delete all of this and then, okay, this is 2023, 05, 27, this is 2023, 05, 20, okay, let's see what it will display here, okay, the date difference, it's seven days, let's see, from 20 to 27 it makes a perfect sense, okay, let's say this is 2024, what day is it today, I think it's 04, 04, 05, 25, very much April, May, I think May is 05, right, is 05, okay, cool, and then the same May, let's see 2024, the same May but now the date is going to be not the 20, let's say it's going to be the 25, okay, the 25th, let's see the date difference in terms of days, it's two days, it's working right, cool, now let's use our own mind to get the date from this, okay, to get the date from this, okay, from this one, so we must have this date as today's date, okay, so we must have this day as today's date, so let's see date one dot date difference, okay, day two in terms of days, okay, so that means the current date, it's date two, let's make date two 27 and we are going to change date one, okay, so we start with 27 and then we want to change date one, so can we get date one from this date, okay, so what I'm going to test first here, I'm going to some sort of put the date as a string, can't I have two string here, let's see is there any possibilities of that two string, let's see, okay, I just want to see does that exist, yes, it looks like because as you can see guys this date is in form of string, so let me test it, do we have a string date, as you can see guys here is the string date, okay, let's see if moment dot JS will understand this as a date, okay, let's see if moment dot JS will understand that as a date, let's see, let's see, let's see, let's see, let's see, let's copy this, okay, and then we are going to put it to date one, okay, let's put it to date one, okay, and then let's display the difference in days, okay, let's display the difference in days, and then let's go back and see, okay, now it's minus 18, I'm not sure if this is correct, okay, it might be because as you can see this date is behind this one, let's just do a quick check, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, it works guys, it's working, okay, let's click on the 27th, there is 0 days, okay, on the 30 it's 3 days and on the 31st it's 4 days, okay, as you can see guys we have just created something meaningful out of shared date, okay, at least I've also learned something, okay, I didn't really, I have not used moment.js if I can be honest, now at least I've got a bit of understanding how it works, and also guys these packages, the more you learn other packages, I think they've got some sort of a certain standard, in a way they are not different from each other, okay, for instance you import moment from moment just like any other packages, okay, so that's why I always try to take chances and see can't I figure out something of my own, okay, so I'm happy if you have learnt something, let's go back to here, I'm proud of myself to have created this, this is interesting guys, okay, you don't have a picture of how happy I am to create this because this opens like a lot of possibilities, okay, I'm going to use this functionality in a lot of things, counting down, okay, maybe in a project based application where let's say the deadline, what can I say, at the cutoff time, okay, let's say we are having an application that schedules projects, okay, let's say I'm receiving a dev project from a client, okay, to say that this is what I want, so I have to ask the client how long do you want me to take, maybe they will say 3 months, so I will put a starting date here and then this is July, October, September, then I will put the ending date, then I will note that I am left with 157 days, each and every day this will decrease reminding me that okay, I'm left with only these days, okay, so this opens a lot of possibilities for me, that's why I wanted to try it. I think this is also one of those videos which are going to be very, very, very quick, quick, because there is nothing much to do here, this card I think it's one of those important containers, okay, when you are developing a real life application and feel like I wish I can get a four corner container with nice layout and that is it, so this comes handy when you want to do that, so without wasting time let's just follow the instructions, at the moment I don't have a practical way in which you can use this, maybe as we continue I will think of something and then we will implement it right there and there, okay, I like to make these tutorials and attach some sort of a simple practicality on how can you manipulate it and use it in real life, okay, so let's just do what they are saying here, let's copy and then let me go to the terminal and let's, I apologize about that, let's install this, okay, and then what we are going to do next, we are going to copy all of this import, we are getting into the usage, so as you know by now we are creating our own components here on this folder, so let's copy my card.tsx and then rfce doesn't work, rfce maybe it want me to be slow, as you can see now it works and then let's put all the imports, okay, and then from then let's copy and paste this as it is, okay, copy and paste this as it is, I'm happy with this, as you can see guys everything works well, so why don't we just take this my card component to the main page so that we can display it, okay, this is a my card component, selfclosing tag, let's see how it looks like, okay, where is my card, here is my card, okay, I think what I can also do, let me go to, let me go to what, let me go to what, let me go to what, let me go to the main page and okay, this is the main page and then in the main page what I will do, where is the main page, okay, here is the main page, this is the class, okay, what I want to do here, let me put the width, okay, of full size, must it be full, don't think it has to be full, let's put like 550, okay, and the height, for the height let's say it's, let's put the height of screen, okay, let's put the height of screen and let's justify content center, okay, let's item center, item center, let's not forget to put some flex there, let's just see how things are at the moment, okay, this is somewhat there because I want all of these to be visible, okay, okay, but now they are arranged in form of a row, okay, so this means that let's make also a width of screen here and let's see, okay, I want all of these to be visible, okay, I think this is somewhat it, okay, this is somewhat it, let's make this auto, okay, now I think this video is becoming longer unnecessarily, okay, okay, let me deal with this later then, okay, because now this video is just going to be longer unnecessarily, okay, let's see, okay, and then let's type here flex column, okay, flex column and a gap of, let's say a gap of 5 and pairing of 4, okay, I'm happy with this, as you can see guys here is our card, okay, so this is a card title and the card content and the card footer, okay, what else can we do here with this, let's try to make this a highly reusable card component by passing props, okay, so let's go to my card, okay, we've got my card title, let's put our props, we can receive a title, okay, content and what else and the footer, okay, all right, as you can see guys now we need to type these, okay, we need to put some types, okay, because we're using TypeScript, let's type these, okay, so let's be clever, as you can see this has to be a string, when you are describing something you have to use alphabets or like sentences to describe it, but in terms of the content and the footer this can be a lot of things, okay, in this content we can be able to push this, this date component here, so meaning that this doesn't have to be a string, it needs to be a React node, so that it allows strings and it allows other components, okay, so I hope you do get that one, so let's make this a string, let's make this description a string as well, but in terms of content let's make this content a React.reactnode, okay, this has to be a calculator, okay,.reactnode,.reactnode, okay, let's copy this for this for the footer as well, so that if in the footer we want to put some button we can put those, so as you can see guys, okay, as you can see, so now here this guy is expecting those, okay, so as you can see he's expecting those, so let's quickly are supply those, so here the title is going to be let's say calendar, this is not a, yeah let's just type calendar guys, okay, for simplicity and then after that we've got the title what else is missing there, title is missing, description and content, okay, description, my apologies about that, let's go to description, description, let's say, calculate days between, for now let's just say between dates, okay, between two dates, all right, and what else content in terms of the content, okay, in terms of the content remember we said we are going to put the calendar, okay, where is the calendar, let's put my calendar in there in terms of the content, okay, and in terms of the footer let's put a button there, okay, as you can see guys now this is becoming useful because we are also putting components, okay, I hope this is ready, let's check guys, okay, how it is now, it's going to refresh now, now let's just wait, looks like it's not refreshing, is there an error, no, okay, let's refresh, manually let's see is this calendar going to get inside this cut, why that is not happening, let's go back, let's see, let's see, let's see guys, okay, this is my card, it has got everything, I'm happy with that, okay, let me just shield this terminal, clear everything and let me run it again, npm run def, okay, let's just double check this is my card, okay, my apologies guys, this is my mistake, I didn't change this title to be this, okay, this is my mistake, my apologies about that, looks like I'm asleep now, okay, let's copy the description to be here as well, okay, all right and then our content, let's put the content here and then let's put the footer here, all right, let's wait for it to refresh or if it's not, let's refresh it manually, okay, let's see, this is supposed to refresh and put everything there, I think everything is just working fine, let's go back and see, I don't know why it's low, my apologies about that but as you can see guys here is it, okay, we've got a calendar, calculate, this is the wrong spelling, calculate days between two dates, let's see, okay, as you can see minus 12 days, between now and this date it's only four days, as you can see guys this is the practical use of a calendar, okay, I don't think there is something else, okay, calculate days and now we are getting into the fun stuff, okay and that one is the carousel, okay, as you can see guys this is more like a sliding, that can I say component, okay, this could be images and everything, as you can see guys this is interesting, okay, let's just see other examples, okay, so I think this one is going to be the longest in the series because this is not like a straightforward component if I can be honest, there's a lot of things that we need to look at, whenever I'm working on this component, I always get something right and the other one wrong, get something right and the other one wrong, okay, I have been in that loop, okay, for a very long time so now what I'm going to do here, we are going to take this component step by step, okay, remember in this channel as much as I am trying to help other people to understand code but the intent of this channel is to help me to become a better developer as well, you see, me and you are not the same, sorry, me and you are essentially the same, okay, we are not different, that's what I meant, okay, I am also learning as much as you are learning, okay, so let's see if Matthew from coded design can improve and now master, okay, what the carousel, okay, I'm going to take it step by step and I'm going to explain to you things that I find confusing and things that are a little bit difficult for me, okay, are you excited, I'm also excited, okay, let's get into it guys, I think we can win this, we can do this, believe me, okay, so let's start from scratch, okay, okay, a carousel with motion and swipe built in with mbla, okay, okay, cool and then how do I install it, okay, carousel, let's see, copy and paste, let's go back here and then let me just clear first, clear, okay, I think I have my apologies about that, everything has been cleared, let me go back here, copy and then paste here and then we have installed the carousel, okay, now let's come here and check the usage, okay, first thing you have to import and then let me go back here and type in our components folder, let's create a component, my carousel, okay, let's name this my carousel one, since I believe we are going to have different versions of this carousel and we are going to do all of them, okay, all right, so rfce as usual, okay and then we are going to paste this, okay, I hope this is easy and you are following at the moment and then let's copy this and then paste it here guys, okay, paste it in here, as you can see everything is working well and what else, I think we can import this on the main screen my carousel one, okay, my carousel one, okay, let's do that right in the end, let's import my carousel one, okay, selfclose and tag and save, let's just go back here guys and see how it looks like, okay, let's see, okay, this is how it looks like, let's see is this how it is on shed cn, okay, let's see, let's see, it looks like that's how it is on shed cn, okay, as you can see these are just dots, meaning that we can, we are free to do whatever we want to do, okay, since we already got components here, okay, for instance check here guys, okay, we already got some components where is the ratio aspect ratio, I am missing one component here, okay, there was an aspect ratio which was here that had an image, maybe I wonder why it has disappeared, okay, maybe it's because it doesn't have the width and height, it might happen, okay, let me just go to this, okay, and then the width is like this and okay, okay, okay, I wonder why this has disappeared, I am not sure guys, okay, let me just give it a height of, I'm just testing, okay, a height of 100 pixels, let's see, okay, now I think it's visible, okay, a lot of things is going on wrong here, okay, maybe it's because the height of this overall container it's, what can I say, fit to screen or screen, okay, let's try this guys, let's make the overall height of this, okay, here's the overall height of this, let's make it auto, okay, let's make it auto, let's make it auto, do we have some padding here, we've got a padding of 4, let's make a padding top of let's say 20 and see, okay, I think this is better guys, as you can see, now we see all our components, okay, and I'm happy with this and we can see this as well, what if maybe, let's go back to, now to, my apologies about that, I want the aspect ratio, okay, where is the aspect ratio, my aspect ratio, okay, let's just remove this height for now, let's see, okay, everything works guys, okay, so as you can see guys, we've got this component, so what we're going to do, we're going to take this component and put it in inside here instead of the dots as you can see guys, okay, and then what I want to do, let me also try padding bottom of 20, okay, padding bottom of 20, so that we can see everything from here, okay, as you can see guys, there is a space now, okay, I'm happy with this and then let's take, on the main page, let's put inside here, where is my carousel one and then here, let's import, my apologies about that, let me remove only the dots, here let's import aspect ratio, my aspect ratio, okay, here is it, as a selfclosing tag and then I am going to do that for all of these remove the dots, okay, remove the dots, okay, okay, as you can see guys, let's go back and check, okay, looks like we are winning, as you can see guys, okay, looks like we are winning 100%, okay, what I'm hoping for, let's see why do we have this space, okay, why do we have this space, okay, so let's go and check, I was hoping that we are not going to have that big space, okay, let's see, the width is 200, okay, so what I'm going to do, I'm going to set the bg, okay, this is more like we are depacking now, we want to know what might be the problem, as you can see we don't have any grey here, the only grey that we have, you might not even notice it, you might not notice it, it's right there, so that means this component doesn't have a problem, okay, that means the challenge might be in our carousel okay, okay, check here guys, okay, now this is rounded, now let's go to the carousel and then let's check my carousel, where is it, my carousel one, okay, looks like Matthew is getting old and he cannot see his own components, okay, here is it, now let's see why it's too big now, okay, let's see what we have here, do we have a class name here, yes, okay, let's put a bg of grey, let's see, as you can see guys, okay, now this guy is too big, I don't know why it's too big like this, I don't know, okay, so what we can do, let's make it more or less like equal to this one, okay, here guys you can even put your own image, anything here, okay, so what do I want to do now, I want to know the width, okay, of my aspect ratio, okay, let me just use a shortcut p here, okay, let me just type ratio, okay, as you can see guys, this is the shortcut, so this is 200 pixels, okay, cool and then what I want, it's carousel, my carousel one and then I want this carousel one to have a width of 200 pixels, okay, okay, let's go back here guys, let's see, now this is what we wanted, okay, exactly what we wanted, what about the background, we don't want a background color here, okay, let's see, nice, okay, as you can see guys, this is what we want exactly, okay, so we are done with the first carousel, it's doing exactly what we want, I am happy with this, okay, what else, let's go to carousel number two, okay, happy with this, let's go to carousel number two, so we have won the first one, okay, go back here, okay, TSX, all right, my apologies about that, okay, I want to do RFCE, all right, looks like we are winning, go back here, shut CN and then examples, sizes, to set the size of the item you can use the basis utility class on the carousel item, let's check, okay, this is a continuation, now it's telling us to set the size, okay, this is the example, okay, this is the example, so what we are going to do, we want this example, okay, I think if we can go here in this code, we will then import this and okay, okay, let's see, let's first copy the import, first, all right, I am happy with this and then let's go here, the carousel, carousel, okay, come here, paste this here as it is, good, everything works, now let's import the carousel two here, where, on the main page, okay, cool, selflosing tag on my windows, I am going to press control space, then done and then let's come back here and check, as you can see guys, here is the carousel two, okay, carousel two, I am happy with this, so what we are going to do, we are going to put these guys here, okay, let's see, let's see, let's see, okay, let's see, okay, it looks like an array has been created here, who look through, okay, like five items, as you can see, which is about that, it looks like I am feeling sleepy, and then now what I want to do, I want to put my images here first, okay, so that I can use my images instead of the numbers, all right, all right, all right, let's see, oh, okay, I think I can win, thing can win, okay, so what I am going to do instead of having a card here, okay, as you can see, here is the card component, okay, what I can do, okay, let me comment that, I can replace that with my aspect ratio, okay, no, not this one, my aspect ratio, this one, okay, as you can see guys, okay, so let's go back and see, as you can see guys, okay, nice, okay, obviously we are having a problem here because the height is not, the width is not the same, okay, the height I think is 100% perfect, but as you can see the width guys, okay, so how can we change that, let's go back to the code and see, okay, so in the code, we were told that we can change the width by changing this basis, okay, so obviously guys, I am not sure what's going on here and how this works, but let's first go to the documentation, to set the size of the item, you can use basis utility class on the carousel item, cool, where is that, let's check here what they are saying, 33% of the carousel width, okay, meaning that let's first deal with the carousel width first, okay, okay, as you can see this carousel width I think is small, okay, so let's go to the carousel, okay, aligns that, width, okay, width full, max width sm, okay, let's just remove that and let width of full without a limited max, as you can see guys, now this is the width of full, okay, based on this, I think this is too, that is too much, so let's give it a width of, let's say 400 pixel and let's see how it looks like, okay, still small, let's give it a width of 600, okay, I'm happy with this guys, this makes sense to me, but this is not all, as you can see, this is not showing like all of it, okay, it's not showing all of it, let's see, maybe I can say 650, okay, I'm happy with this, everything is visible, okay, as you can see guys, nice, okay, and now let's go back to what they were saying, so what we did, we've just put our item, okay, carousel items, okay, in our case is these aspect ratios and we did nothing when it comes to the size, okay, this first base, as you can see, here it's telling us that this is 30% of the carousel width, as you can see, okay, which is, it's 1 over 3 bases, it's 1 over 3, this one is 1 over 2, 50%, okay, let's just make some changes here and see what will happen, let's make this 1 over 3 and see, okay, okay, is there a difference, not really, okay, empty, empty, okay, let's make 1 over 2, this was 1 over 2, let's try 1 over 1, okay, I just want to understand what is the impact of this, okay, okay, let's check the responsiveness or maybe what applies here, it's, since we are already on large, let me just remove this one, okay, so that I can only have one thing that I'm dealing with, because now this might not apply, okay, because I'm not inside it, maybe the one that will apply is the large one, so I want only this to apply, as you can see guys, okay, now that we have removed that one, now this is active, now we can be able to test what's going on there, let's put 2, let's see, as you can see, so meaning that in here we can only put 2 of these, okay, as you can see, but in our case, I think 3 will work, 100%, okay, I'm happy with this, so that means it's like that fraction, some sort of represent how many items we can fit on each viewable area, okay, like here, okay, I hope you can see that one guys, okay, I'm happy with that, if you are enjoying this content and you like this content, please don't forget to subscribe and support the channel, so let's go back and see what else do we have here, on the carousel, okay, this is just a different arrangement and this is like spacing, what else this looks like the same as the one that we did, okay, do we have another one, let's check here, the one that scroll vertically, okay, the one that scrolls vertically, so we are done with this one, so I can remove these guys, okay, okay, let's see what we can do, let's create another carousel, 3, RFCE, save, let's go back here, okay, orientation, use the orientation prop to set the orientation of the carousel, so let's see, where do I set the orientation in the carousel itself, oh wait, let's see options, oh we've got the orientation here, okay, so without necessarily creating a new one, let's just use this orientation and see what will be the effect of that on this one, let's check, my carousel 2 and then carousel content no somewhere here, okay, we want this to be vertical, let's see guys, as you can see guys now it has changed, okay, it has changed but obviously now I don't see, okay, in terms of vertically it looks like every image has been shown, that's why we don't have the arrows, okay, so let's see, let's click to here on the basis, let's see what will happen, not really, maybe it's because let's look, this has got a width, a defined width as you can see but it doesn't have a defined height, okay, so let's leave this to 3 and let's have a defined height, okay, a defined height which is let's say for now it's 300 pixel, okay, let's see, okay, let's see, we do have an arrow here but obviously it doesn't do what we want guys as you can see, okay, so let me just try 200 and see, okay, let's try 200 and see, as you can see it looks like it doesn't change, let's play around with this, I'm not sure if this makes sense as well, I'm not sure, I'm just testing guys, okay, okay, it looks like there's nothing happening, I don't have a problem with that, so what we are going to do, let's just copy from this one and see what these guys did, okay, oops align start, okay, let's see, width full and this is the max width, XL, okay, the height is 200, okay, okay and then this is the same thing, we are looping through, alright let's see the preview, yes, okay, they are looping through, go back here, they are looping through here and what else, I think there's nothing much here guys, okay, there's nothing much, so what we can do, let's not convert this one, let's just create a new one as we have planned, okay, let's go back here to orientation, okay, let's just click on to, on to, on to, to make sure that all the changes that we did, okay, it goes back to normal as you can see, so let's copy this, let's copy this code, we want this one, let's copy this code, okay, the import first, the import where is my carousel 3, here is it, then let's input here, okay and then from there we want this, okay, cut content, import content, cut itself, okay, okay, let's import the cut, okay, I'm happy with that, so let's bring my carousel 3 here, let me just copy this and change the number, obviously we have to import it, alright, let's go and check, still loading, let's see, as you can see here is it guys, okay, it works perfect but we want to study it and see what makes it work that way, okay, okay, it is about align start, orientation is vertically, okay, the width is full, the max width is XS, okay, content matching top, it's negative one and the height of 200, so the height first it's some sort of limited is 200, okay, let's see, okay, what else, okay, the basis on mid it's 1 over 2, okay, and then that's it, okay, this looks like the same as the top one, okay, looks the same as the top one, let's see guys, let's try this, okay, if it doesn't work that's not much of a problem, so carousel item, we are going to copy this on the carousel item and change the orientation, so let's go here to carousel 2, where is the carousel item, okay, let's just copy this and see, okay, carousel item, okay, then let's change this carousel item, orientation, okay, orientation, vertical, let's see why our buttons are disappearing, everything works but the button are disappearing, okay, the height, let's see, where is the height, where is the height, where is the height, let's go back to 3, okay, the height, which is this one, let's just copy this and paste it here, the content, okay, change the height, oops, class name, let's see guys, something has changed but I'm not sure if for beta or for Wes, okay, this is this one and this one, now this has changed, okay, okay cool and then what can we do, let's make this height, let's say 400, okay, as you can see, now I have lost the buttons, okay, it's the buttons now that I've lost, I don't know where are the buttons, okay, I cannot tell you where are the buttons, looks like everything is working well, okay, which button are these, okay, I think these are the buttons, okay, this one is for this one, this one is for this, what about this one, I think this one is for this, okay, what is the width, okay, let me do this guys, let me remove this, for now this one, I think I do get the essence of what's going on here, let's go back here on carousel 2, on carousel 2, let's check the width of this, as you can see guys, the width of this is 650, okay, let's put a background here, as you can see, okay, now we have one, okay, we've got our buttons, the width, let's make it auto, so now we have managed to change a horizontal carousel to a vertical carousel, okay, let's put auto here and see first, 100%, here is it guys, as you can see, works exactly like the other one, like this one, I can even remove this background, works exactly like where is that one, okay, like this one, okay, as you can see guys, exactly like this one, okay, we are on the check box, okay, this is one of those shorter ones, okay, I didn't think of any way in which we can make this interesting, okay, unfortunately, I think this one is just going to be a copy and paste, guys, apologies for that, this is it, okay, maybe I'm having some experiment in my mind, something that can be tricky, okay, I just have to reserve it at the end to see if it's going to be worth it, there is some sort of a tricky part about, this is a check box, it's not a radio box, okay, no, no, no, check box are easy because you can check multiple boxes at once, okay, I thought this was a radio button, let's see, yeah, this is the check box, okay, cool, this is going to be a straightforward video guys, let's quickly do that, copy this NPM and then let me just type clear here to clear everything and then let's paste this just box here and then what we are going to do, we are going to go to our library, okay, I'm going to type here my check box, okay,.tsx and then that is it, rfce, okay, and then we are going to copy this code here, okay, and then from there, this is the usage, okay, I'm done copying this and then this is the usage, I think that is it, okay, that is it and then what I'm going to do, I am going to input this on a page, my check box here, okay, as a selfclosing tag and let's go back here and see the check box, where is it, this is supposed to reload, if it doesn't, let's reload manually, okay, let's see, let's see, let's see, it's supposed to be here, maybe, let's see, let's see guys, okay, I think it's behind this, okay, so what I'm going to do, let me go through here and let's make the gap very, very big, okay, let's make the gap of 12, okay, so that this could be at a distance, okay, as you can see guys, now we can see the check box, okay, now the check box is visible but still let's make a gap of 18, okay, as you can see, okay, maybe there is no gap of 18, let's try 20, okay, as you can see, now there is a big gap between the components, I'm happy with that, okay, let's see, here is a check box, okay, now what I want to do, let's just go back here, okay, first of all let's see, what if I want to get the value, okay, what if I want to get this value, how do I do that, okay, as much as I thought this is just going to be a work in the park, it looks like now we are getting into the real stuff, okay, that's interesting, let's see what they say, okay, this is how you use it, cool, let's check the manual, there is no code, okay, let's just example with text, let's check, okay, where are the states, values and whatever, how do I know this has been picked and all that, okay, so they are importing it here with text and then they've got all the mockup there, okay, and this is a label, okay, HTML for time 1 times 1, okay, where is the check box then, okay, maybe this is the terms and condition, let's see why the check box itself, okay, here is it, check box ID term 1, okay, let's look at the preview, okay, here are the terms, you click here, okay, I don't think here they are using it, okay, I don't think they are using it, let's say I agree with the terms and maybe I press submit, how do I get, how do I know if this has been checked, okay, I think now this tutorial is starting to become interesting because I also don't know how, okay, let's check here, do they have a certain state or something, okay, how do you check is checked of that, okay, maybe in this submit, cool, now we are talking, now they are going to tell us, as you can see this is false, cool, this is what I was looking for, let's see how they have done that, I'm not even looking for the forms and zord and everything, I don't think that's interesting to me, so let's go to the check box, as you can see we've got checked and on check change, cool, okay, that's fine, now let's go back to our own, okay, for instance let's just reset it, as you can see it's not checked, let's make sure when we start the default it's checked, okay, so what we are going to do, we are going to go to this check box, okay, this check box and then in this check box we are going to check here, checked and then we are going to put this to true, okay, let's go back and see, as you can see by default it's true, okay, and then we have a function here on maybe it's on change, okay, maybe it's on change, now what I want to do, I want to have my own state variable here to keep track of the state of the check box const, okay, set check, okay, and check let's say, okay, this is check and set check is equal to use state, okay, use state, okay, now I see the problem, suppose here there is a comma, okay, check and set check is equal to use state, okay, okay, fine and then let's see, let's set here, let's create a function that we're going to trigger on the event, it's on check to change, my apologies guys about this, okay, cool, let's just check this as it is now to see, okay, so it has not been listening to the event as you can see guys we just got it, okay, it works perfect, okay, it works perfect, so if we want to, what can I say, okay, let's say we want to alert something as we wanted, alert, okay, my apologies about that guys, okay, I really apologize, I didn't just check, okay, as you can see guys, okay, 100%, so I just missed the event, okay, so obviously I said this is going to be one of the easy one and it happened that as easy as it seemed it looks like it was not easy, okay, just because of this event, okay, my apologies about that, as you can see guys everything worked, it's not on change, it's on checked change, then this is being triggered, okay, now we are here on collapsible, okay, let's just quickly check here, collapsible, here it is, okay, first things first, I find this control a bit confusing, okay, maybe it's not confusing but I am, I can't locate some sort of a use case for it, what is it used for, okay, so please guys if you have an idea of where it can fit and how it can be used please let me know, okay, it looks like, what can we say, it looks like an accordion, okay, when you click here something pops underneath it and at the same time it looks like it behaves like a dropdown list, okay, but then I'm not sure if I can put some buttons here for selecting, okay, as much as I'm going to use it and implement it but if you have a perfect scenario for it, okay, maybe you tell me or we try to discuss on how different is it from an accordion, okay, if you can take one accordion, let's see where is an accordion, okay, if we take one accordion without only this one and then it shows three things underneath it, okay, how is this button different, so how this component, so let's get into it and see how to implement it but I haven't figured it out when can you use it and why, okay, I really don't know, okay, so let's continue guys let's keep it going and keep it flowing like water, okay, let's just get in here, let's clear everything and then let's install the component, okay, let's install the component and then after that, let's check what else do you want to do, we have to import this, okay, import this call up server, let's go to our shad cnui library, okay, my call up server, okay, refce and then let's import those as you can see guys who are importing these and then from there we are going to copy this as it is, okay, the call up server and then we are going to put those here, okay, as you can see, let's now import my call up server to our main page as a selfclosing tag and then let's press control space and then let's import it, my call up server is not defined, okay, now everything works, let's go back here and check, okay, okay, can I use this in my project, let's click, yes, free to use, okay and then how we can click on it and collapse it, guys I don't wanna lie I'm a bit confused with this component, okay, if I had a chance to meet the shad cnui team, I don't know, I don't know where can I use this component, okay, as you can see now my problem is you see an accordion, it's stable, okay, stay in one place, okay, stay in one place at least and this one, it's a bit different, okay, it moves on different places, okay, maybe it just depends on your skill as a developer and your creativity I think but guys this is all that I have for this component, okay, I really don't understand like the essence of it, okay, I don't think it's solving a unique specific problem, I might be wrong guys please you can shoot a comment below and help me out here, so it has got a trigger and then when you trigger this then it shows this, okay, okay, I think that's will be it for this video, my apologies if this is the shortest video of all of this video of all of the videos in playlist but I really, really, maybe I need to make a research and maybe I can come back and if I found a perfect use case for this then that will be it guys, otherwise for me, Madam Singhati, that's about it, thank you for watching, see you next time, bye.
